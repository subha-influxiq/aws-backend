function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["main"], {
  /***/
  "./$$_lazy_route_resource lazy recursive":
  /*!******************************************************!*\
    !*** ./$$_lazy_route_resource lazy namespace object ***!
    \******************************************************/

  /*! no static exports found */

  /***/
  function $$_lazy_route_resourceLazyRecursive(module, exports) {
    function webpackEmptyAsyncContext(req) {
      // Here Promise.resolve().then() is used instead of new Promise() to prevent
      // uncaught exception popping up in devtools
      return Promise.resolve().then(function () {
        var e = new Error("Cannot find module '" + req + "'");
        e.code = 'MODULE_NOT_FOUND';
        throw e;
      });
    }

    webpackEmptyAsyncContext.keys = function () {
      return [];
    };

    webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
    module.exports = webpackEmptyAsyncContext;
    webpackEmptyAsyncContext.id = "./$$_lazy_route_resource lazy recursive";
    /***/
  },

  /***/
  "./node_modules/moment/locale sync recursive ^\\.\\/.*$":
  /*!**************************************************!*\
    !*** ./node_modules/moment/locale sync ^\.\/.*$ ***!
    \**************************************************/

  /*! no static exports found */

  /***/
  function node_modulesMomentLocaleSyncRecursive$(module, exports, __webpack_require__) {
    var map = {
      "./af": "./node_modules/moment/locale/af.js",
      "./af.js": "./node_modules/moment/locale/af.js",
      "./ar": "./node_modules/moment/locale/ar.js",
      "./ar-dz": "./node_modules/moment/locale/ar-dz.js",
      "./ar-dz.js": "./node_modules/moment/locale/ar-dz.js",
      "./ar-kw": "./node_modules/moment/locale/ar-kw.js",
      "./ar-kw.js": "./node_modules/moment/locale/ar-kw.js",
      "./ar-ly": "./node_modules/moment/locale/ar-ly.js",
      "./ar-ly.js": "./node_modules/moment/locale/ar-ly.js",
      "./ar-ma": "./node_modules/moment/locale/ar-ma.js",
      "./ar-ma.js": "./node_modules/moment/locale/ar-ma.js",
      "./ar-sa": "./node_modules/moment/locale/ar-sa.js",
      "./ar-sa.js": "./node_modules/moment/locale/ar-sa.js",
      "./ar-tn": "./node_modules/moment/locale/ar-tn.js",
      "./ar-tn.js": "./node_modules/moment/locale/ar-tn.js",
      "./ar.js": "./node_modules/moment/locale/ar.js",
      "./az": "./node_modules/moment/locale/az.js",
      "./az.js": "./node_modules/moment/locale/az.js",
      "./be": "./node_modules/moment/locale/be.js",
      "./be.js": "./node_modules/moment/locale/be.js",
      "./bg": "./node_modules/moment/locale/bg.js",
      "./bg.js": "./node_modules/moment/locale/bg.js",
      "./bm": "./node_modules/moment/locale/bm.js",
      "./bm.js": "./node_modules/moment/locale/bm.js",
      "./bn": "./node_modules/moment/locale/bn.js",
      "./bn.js": "./node_modules/moment/locale/bn.js",
      "./bo": "./node_modules/moment/locale/bo.js",
      "./bo.js": "./node_modules/moment/locale/bo.js",
      "./br": "./node_modules/moment/locale/br.js",
      "./br.js": "./node_modules/moment/locale/br.js",
      "./bs": "./node_modules/moment/locale/bs.js",
      "./bs.js": "./node_modules/moment/locale/bs.js",
      "./ca": "./node_modules/moment/locale/ca.js",
      "./ca.js": "./node_modules/moment/locale/ca.js",
      "./cs": "./node_modules/moment/locale/cs.js",
      "./cs.js": "./node_modules/moment/locale/cs.js",
      "./cv": "./node_modules/moment/locale/cv.js",
      "./cv.js": "./node_modules/moment/locale/cv.js",
      "./cy": "./node_modules/moment/locale/cy.js",
      "./cy.js": "./node_modules/moment/locale/cy.js",
      "./da": "./node_modules/moment/locale/da.js",
      "./da.js": "./node_modules/moment/locale/da.js",
      "./de": "./node_modules/moment/locale/de.js",
      "./de-at": "./node_modules/moment/locale/de-at.js",
      "./de-at.js": "./node_modules/moment/locale/de-at.js",
      "./de-ch": "./node_modules/moment/locale/de-ch.js",
      "./de-ch.js": "./node_modules/moment/locale/de-ch.js",
      "./de.js": "./node_modules/moment/locale/de.js",
      "./dv": "./node_modules/moment/locale/dv.js",
      "./dv.js": "./node_modules/moment/locale/dv.js",
      "./el": "./node_modules/moment/locale/el.js",
      "./el.js": "./node_modules/moment/locale/el.js",
      "./en-au": "./node_modules/moment/locale/en-au.js",
      "./en-au.js": "./node_modules/moment/locale/en-au.js",
      "./en-ca": "./node_modules/moment/locale/en-ca.js",
      "./en-ca.js": "./node_modules/moment/locale/en-ca.js",
      "./en-gb": "./node_modules/moment/locale/en-gb.js",
      "./en-gb.js": "./node_modules/moment/locale/en-gb.js",
      "./en-ie": "./node_modules/moment/locale/en-ie.js",
      "./en-ie.js": "./node_modules/moment/locale/en-ie.js",
      "./en-il": "./node_modules/moment/locale/en-il.js",
      "./en-il.js": "./node_modules/moment/locale/en-il.js",
      "./en-in": "./node_modules/moment/locale/en-in.js",
      "./en-in.js": "./node_modules/moment/locale/en-in.js",
      "./en-nz": "./node_modules/moment/locale/en-nz.js",
      "./en-nz.js": "./node_modules/moment/locale/en-nz.js",
      "./en-sg": "./node_modules/moment/locale/en-sg.js",
      "./en-sg.js": "./node_modules/moment/locale/en-sg.js",
      "./eo": "./node_modules/moment/locale/eo.js",
      "./eo.js": "./node_modules/moment/locale/eo.js",
      "./es": "./node_modules/moment/locale/es.js",
      "./es-do": "./node_modules/moment/locale/es-do.js",
      "./es-do.js": "./node_modules/moment/locale/es-do.js",
      "./es-us": "./node_modules/moment/locale/es-us.js",
      "./es-us.js": "./node_modules/moment/locale/es-us.js",
      "./es.js": "./node_modules/moment/locale/es.js",
      "./et": "./node_modules/moment/locale/et.js",
      "./et.js": "./node_modules/moment/locale/et.js",
      "./eu": "./node_modules/moment/locale/eu.js",
      "./eu.js": "./node_modules/moment/locale/eu.js",
      "./fa": "./node_modules/moment/locale/fa.js",
      "./fa.js": "./node_modules/moment/locale/fa.js",
      "./fi": "./node_modules/moment/locale/fi.js",
      "./fi.js": "./node_modules/moment/locale/fi.js",
      "./fil": "./node_modules/moment/locale/fil.js",
      "./fil.js": "./node_modules/moment/locale/fil.js",
      "./fo": "./node_modules/moment/locale/fo.js",
      "./fo.js": "./node_modules/moment/locale/fo.js",
      "./fr": "./node_modules/moment/locale/fr.js",
      "./fr-ca": "./node_modules/moment/locale/fr-ca.js",
      "./fr-ca.js": "./node_modules/moment/locale/fr-ca.js",
      "./fr-ch": "./node_modules/moment/locale/fr-ch.js",
      "./fr-ch.js": "./node_modules/moment/locale/fr-ch.js",
      "./fr.js": "./node_modules/moment/locale/fr.js",
      "./fy": "./node_modules/moment/locale/fy.js",
      "./fy.js": "./node_modules/moment/locale/fy.js",
      "./ga": "./node_modules/moment/locale/ga.js",
      "./ga.js": "./node_modules/moment/locale/ga.js",
      "./gd": "./node_modules/moment/locale/gd.js",
      "./gd.js": "./node_modules/moment/locale/gd.js",
      "./gl": "./node_modules/moment/locale/gl.js",
      "./gl.js": "./node_modules/moment/locale/gl.js",
      "./gom-deva": "./node_modules/moment/locale/gom-deva.js",
      "./gom-deva.js": "./node_modules/moment/locale/gom-deva.js",
      "./gom-latn": "./node_modules/moment/locale/gom-latn.js",
      "./gom-latn.js": "./node_modules/moment/locale/gom-latn.js",
      "./gu": "./node_modules/moment/locale/gu.js",
      "./gu.js": "./node_modules/moment/locale/gu.js",
      "./he": "./node_modules/moment/locale/he.js",
      "./he.js": "./node_modules/moment/locale/he.js",
      "./hi": "./node_modules/moment/locale/hi.js",
      "./hi.js": "./node_modules/moment/locale/hi.js",
      "./hr": "./node_modules/moment/locale/hr.js",
      "./hr.js": "./node_modules/moment/locale/hr.js",
      "./hu": "./node_modules/moment/locale/hu.js",
      "./hu.js": "./node_modules/moment/locale/hu.js",
      "./hy-am": "./node_modules/moment/locale/hy-am.js",
      "./hy-am.js": "./node_modules/moment/locale/hy-am.js",
      "./id": "./node_modules/moment/locale/id.js",
      "./id.js": "./node_modules/moment/locale/id.js",
      "./is": "./node_modules/moment/locale/is.js",
      "./is.js": "./node_modules/moment/locale/is.js",
      "./it": "./node_modules/moment/locale/it.js",
      "./it-ch": "./node_modules/moment/locale/it-ch.js",
      "./it-ch.js": "./node_modules/moment/locale/it-ch.js",
      "./it.js": "./node_modules/moment/locale/it.js",
      "./ja": "./node_modules/moment/locale/ja.js",
      "./ja.js": "./node_modules/moment/locale/ja.js",
      "./jv": "./node_modules/moment/locale/jv.js",
      "./jv.js": "./node_modules/moment/locale/jv.js",
      "./ka": "./node_modules/moment/locale/ka.js",
      "./ka.js": "./node_modules/moment/locale/ka.js",
      "./kk": "./node_modules/moment/locale/kk.js",
      "./kk.js": "./node_modules/moment/locale/kk.js",
      "./km": "./node_modules/moment/locale/km.js",
      "./km.js": "./node_modules/moment/locale/km.js",
      "./kn": "./node_modules/moment/locale/kn.js",
      "./kn.js": "./node_modules/moment/locale/kn.js",
      "./ko": "./node_modules/moment/locale/ko.js",
      "./ko.js": "./node_modules/moment/locale/ko.js",
      "./ku": "./node_modules/moment/locale/ku.js",
      "./ku.js": "./node_modules/moment/locale/ku.js",
      "./ky": "./node_modules/moment/locale/ky.js",
      "./ky.js": "./node_modules/moment/locale/ky.js",
      "./lb": "./node_modules/moment/locale/lb.js",
      "./lb.js": "./node_modules/moment/locale/lb.js",
      "./lo": "./node_modules/moment/locale/lo.js",
      "./lo.js": "./node_modules/moment/locale/lo.js",
      "./lt": "./node_modules/moment/locale/lt.js",
      "./lt.js": "./node_modules/moment/locale/lt.js",
      "./lv": "./node_modules/moment/locale/lv.js",
      "./lv.js": "./node_modules/moment/locale/lv.js",
      "./me": "./node_modules/moment/locale/me.js",
      "./me.js": "./node_modules/moment/locale/me.js",
      "./mi": "./node_modules/moment/locale/mi.js",
      "./mi.js": "./node_modules/moment/locale/mi.js",
      "./mk": "./node_modules/moment/locale/mk.js",
      "./mk.js": "./node_modules/moment/locale/mk.js",
      "./ml": "./node_modules/moment/locale/ml.js",
      "./ml.js": "./node_modules/moment/locale/ml.js",
      "./mn": "./node_modules/moment/locale/mn.js",
      "./mn.js": "./node_modules/moment/locale/mn.js",
      "./mr": "./node_modules/moment/locale/mr.js",
      "./mr.js": "./node_modules/moment/locale/mr.js",
      "./ms": "./node_modules/moment/locale/ms.js",
      "./ms-my": "./node_modules/moment/locale/ms-my.js",
      "./ms-my.js": "./node_modules/moment/locale/ms-my.js",
      "./ms.js": "./node_modules/moment/locale/ms.js",
      "./mt": "./node_modules/moment/locale/mt.js",
      "./mt.js": "./node_modules/moment/locale/mt.js",
      "./my": "./node_modules/moment/locale/my.js",
      "./my.js": "./node_modules/moment/locale/my.js",
      "./nb": "./node_modules/moment/locale/nb.js",
      "./nb.js": "./node_modules/moment/locale/nb.js",
      "./ne": "./node_modules/moment/locale/ne.js",
      "./ne.js": "./node_modules/moment/locale/ne.js",
      "./nl": "./node_modules/moment/locale/nl.js",
      "./nl-be": "./node_modules/moment/locale/nl-be.js",
      "./nl-be.js": "./node_modules/moment/locale/nl-be.js",
      "./nl.js": "./node_modules/moment/locale/nl.js",
      "./nn": "./node_modules/moment/locale/nn.js",
      "./nn.js": "./node_modules/moment/locale/nn.js",
      "./oc-lnc": "./node_modules/moment/locale/oc-lnc.js",
      "./oc-lnc.js": "./node_modules/moment/locale/oc-lnc.js",
      "./pa-in": "./node_modules/moment/locale/pa-in.js",
      "./pa-in.js": "./node_modules/moment/locale/pa-in.js",
      "./pl": "./node_modules/moment/locale/pl.js",
      "./pl.js": "./node_modules/moment/locale/pl.js",
      "./pt": "./node_modules/moment/locale/pt.js",
      "./pt-br": "./node_modules/moment/locale/pt-br.js",
      "./pt-br.js": "./node_modules/moment/locale/pt-br.js",
      "./pt.js": "./node_modules/moment/locale/pt.js",
      "./ro": "./node_modules/moment/locale/ro.js",
      "./ro.js": "./node_modules/moment/locale/ro.js",
      "./ru": "./node_modules/moment/locale/ru.js",
      "./ru.js": "./node_modules/moment/locale/ru.js",
      "./sd": "./node_modules/moment/locale/sd.js",
      "./sd.js": "./node_modules/moment/locale/sd.js",
      "./se": "./node_modules/moment/locale/se.js",
      "./se.js": "./node_modules/moment/locale/se.js",
      "./si": "./node_modules/moment/locale/si.js",
      "./si.js": "./node_modules/moment/locale/si.js",
      "./sk": "./node_modules/moment/locale/sk.js",
      "./sk.js": "./node_modules/moment/locale/sk.js",
      "./sl": "./node_modules/moment/locale/sl.js",
      "./sl.js": "./node_modules/moment/locale/sl.js",
      "./sq": "./node_modules/moment/locale/sq.js",
      "./sq.js": "./node_modules/moment/locale/sq.js",
      "./sr": "./node_modules/moment/locale/sr.js",
      "./sr-cyrl": "./node_modules/moment/locale/sr-cyrl.js",
      "./sr-cyrl.js": "./node_modules/moment/locale/sr-cyrl.js",
      "./sr.js": "./node_modules/moment/locale/sr.js",
      "./ss": "./node_modules/moment/locale/ss.js",
      "./ss.js": "./node_modules/moment/locale/ss.js",
      "./sv": "./node_modules/moment/locale/sv.js",
      "./sv.js": "./node_modules/moment/locale/sv.js",
      "./sw": "./node_modules/moment/locale/sw.js",
      "./sw.js": "./node_modules/moment/locale/sw.js",
      "./ta": "./node_modules/moment/locale/ta.js",
      "./ta.js": "./node_modules/moment/locale/ta.js",
      "./te": "./node_modules/moment/locale/te.js",
      "./te.js": "./node_modules/moment/locale/te.js",
      "./tet": "./node_modules/moment/locale/tet.js",
      "./tet.js": "./node_modules/moment/locale/tet.js",
      "./tg": "./node_modules/moment/locale/tg.js",
      "./tg.js": "./node_modules/moment/locale/tg.js",
      "./th": "./node_modules/moment/locale/th.js",
      "./th.js": "./node_modules/moment/locale/th.js",
      "./tk": "./node_modules/moment/locale/tk.js",
      "./tk.js": "./node_modules/moment/locale/tk.js",
      "./tl-ph": "./node_modules/moment/locale/tl-ph.js",
      "./tl-ph.js": "./node_modules/moment/locale/tl-ph.js",
      "./tlh": "./node_modules/moment/locale/tlh.js",
      "./tlh.js": "./node_modules/moment/locale/tlh.js",
      "./tr": "./node_modules/moment/locale/tr.js",
      "./tr.js": "./node_modules/moment/locale/tr.js",
      "./tzl": "./node_modules/moment/locale/tzl.js",
      "./tzl.js": "./node_modules/moment/locale/tzl.js",
      "./tzm": "./node_modules/moment/locale/tzm.js",
      "./tzm-latn": "./node_modules/moment/locale/tzm-latn.js",
      "./tzm-latn.js": "./node_modules/moment/locale/tzm-latn.js",
      "./tzm.js": "./node_modules/moment/locale/tzm.js",
      "./ug-cn": "./node_modules/moment/locale/ug-cn.js",
      "./ug-cn.js": "./node_modules/moment/locale/ug-cn.js",
      "./uk": "./node_modules/moment/locale/uk.js",
      "./uk.js": "./node_modules/moment/locale/uk.js",
      "./ur": "./node_modules/moment/locale/ur.js",
      "./ur.js": "./node_modules/moment/locale/ur.js",
      "./uz": "./node_modules/moment/locale/uz.js",
      "./uz-latn": "./node_modules/moment/locale/uz-latn.js",
      "./uz-latn.js": "./node_modules/moment/locale/uz-latn.js",
      "./uz.js": "./node_modules/moment/locale/uz.js",
      "./vi": "./node_modules/moment/locale/vi.js",
      "./vi.js": "./node_modules/moment/locale/vi.js",
      "./x-pseudo": "./node_modules/moment/locale/x-pseudo.js",
      "./x-pseudo.js": "./node_modules/moment/locale/x-pseudo.js",
      "./yo": "./node_modules/moment/locale/yo.js",
      "./yo.js": "./node_modules/moment/locale/yo.js",
      "./zh-cn": "./node_modules/moment/locale/zh-cn.js",
      "./zh-cn.js": "./node_modules/moment/locale/zh-cn.js",
      "./zh-hk": "./node_modules/moment/locale/zh-hk.js",
      "./zh-hk.js": "./node_modules/moment/locale/zh-hk.js",
      "./zh-mo": "./node_modules/moment/locale/zh-mo.js",
      "./zh-mo.js": "./node_modules/moment/locale/zh-mo.js",
      "./zh-tw": "./node_modules/moment/locale/zh-tw.js",
      "./zh-tw.js": "./node_modules/moment/locale/zh-tw.js"
    };

    function webpackContext(req) {
      var id = webpackContextResolve(req);
      return __webpack_require__(id);
    }

    function webpackContextResolve(req) {
      if (!__webpack_require__.o(map, req)) {
        var e = new Error("Cannot find module '" + req + "'");
        e.code = 'MODULE_NOT_FOUND';
        throw e;
      }

      return map[req];
    }

    webpackContext.keys = function webpackContextKeys() {
      return Object.keys(map);
    };

    webpackContext.resolve = webpackContextResolve;
    module.exports = webpackContext;
    webpackContext.id = "./node_modules/moment/locale sync recursive ^\\.\\/.*$";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/app.component.html":
  /*!**************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/app.component.html ***!
    \**************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppAppComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- <div *ngIf=\"loading\" class=\"mainOverlayLoader\">\n    <mat-spinner color=\"warn\"></mat-spinner>\n</div> -->\n\n<app-http-loader *ngIf=\"!loading\"></app-http-loader>\n\n<ngx-ui-loader></ngx-ui-loader>\n\n<router-outlet (activate)=\"onActivate($event)\"></router-outlet>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/admin-dashboard/add-edit-patient/add-edit-patient.component.html":
  /*!*****************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/admin-dashboard/add-edit-patient/add-edit-patient.component.html ***!
    \*****************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminAdminDashboardAddEditPatientAddEditPatientComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<app-admin-header *ngIf=\"allCookies.user_details.user_type == 'admin'\"></app-admin-header>\n\n<!-- Diagnostic Admin Header -->\n<app-diagnostic-admin-header *ngIf=\"allCookies.user_details.user_type == 'diagnostic_admin'\"></app-diagnostic-admin-header>\n\n<!-- Doctor Header -->\n<app-doctor-header *ngIf=\"allCookies.user_details.user_type == 'doctor'\"></app-doctor-header>\n\n<mat-card class=\"admin_wrapper\">\n  <mat-card-content class=\"title_wrapper\">\n    {{ htmlText.header }}\n  </mat-card-content>\n\n  <span class=\"add_header\">\n    <span class=\"bradcrumb\">\n      <a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp;{{ htmlText.nav }}\n    </span>\n  </span>\n\n  <mat-card class=\"add_form\">\n    <mat-card-content>\n      <form class=\"example-form\" autocomplete=\"off\" name=\"patientAddEditForm\" [formGroup]=\"patientAddEditForm\"\n        (ngSubmit)=\"patientAddEditFormSubmit()\">\n\n        <fieldset class=\"field_setmodel\">\n          <legend class=\"legend_model\">Patients Information:</legend>\n\n          <span class=\"patients_info_wrapper\">\n            <!-- Patient Name Start -->\n            <mat-card-content>\n              <label>Patient Name</label>\n              <mat-form-field>\n                <input matInput [formControl]=\"patientAddEditForm.controls['patient_name']\"\n                  (blur)=\"inputUntouch(patientAddEditForm,'patient_name')\">\n                <mat-error\n                  *ngIf=\"patientAddEditForm.controls['patient_name'].touched && !patientAddEditForm.controls['patient_name'].valid && patientAddEditForm.controls['patient_name'].errors.required\">\n                  Patient Name can not be blank</mat-error>\n              </mat-form-field>\n            </mat-card-content>\n            <!-- Patient Name End -->\n\n            <!-- Patient Gender Start -->\n            <mat-card-content>\n              <label>Patient Gender</label>\n              <span class=\"patientGender\">\n               <label><input type=\"radio\" value='Male' [formControl]=\"patientAddEditForm.controls['gender']\">Male</label>\n              <label><input type=\"radio\" value='Female' [formControl]=\"patientAddEditForm.controls['gender']\">Female</label>\n              </span>\n\n              <mat-error\n                *ngIf=\"patientAddEditForm.controls['gender'].touched && !patientAddEditForm.controls['gender'].valid && patientAddEditForm.controls['gender'].errors.required\">\n                Birth Date can not be blank.</mat-error>\n            </mat-card-content>\n            <!-- Patient Gender End -->\n\n            <!-- Date of Birth Start -->\n            <mat-card-content>\n              <label> Date of birth</label>\n              <mat-form-field>\n                <input matInput [matDatepicker]=\"dobPicker\" [formControl]=\"patientAddEditForm.controls['birth_date']\">\n                <mat-datepicker-toggle matSuffix [for]=\"dobPicker\"></mat-datepicker-toggle>\n                <mat-datepicker #dobPicker></mat-datepicker>\n\n                <mat-error\n                  *ngIf=\"patientAddEditForm.controls['birth_date'].touched && !patientAddEditForm.controls['birth_date'].valid && patientAddEditForm.controls['birth_date'].errors.required\">\n                  Birth Date can not be blank.</mat-error>\n              </mat-form-field>\n            </mat-card-content>\n            <!-- Date of Birth End -->\n\n            <!-- Ordering Physician Start -->\n            <mat-card-content>\n              <label>Ordering Physician</label>\n              <mat-form-field>\n                <mat-select placeholder=\"Select a Doctor\"\n                  (selectionChange)=\"getTechList($event.value);\">\n                  <mat-option>Select a Doctor</mat-option>\n                  <mat-option *ngFor=\"let doctor of htmlText.allDoctor; let i = index;\" value=\"{{ i }}\"> {{ doctor.firstname }} {{ doctor.lastname }}\n                  </mat-option>\n                </mat-select>\n\n                <mat-error\n                  *ngIf=\"patientAddEditForm.controls['doctor_id'].touched && !patientAddEditForm.controls['doctor_id'].valid && patientAddEditForm.controls['doctor_id'].errors.required\">\n                  Select a doctor.</mat-error>\n              </mat-form-field>\n            </mat-card-content>\n            <!-- Ordering Physician End -->\n\n            <!-- Tech Name Start -->\n            <mat-card-content>\n              <label> Tech Name </label>\n              <mat-form-field>\n                <mat-select [formControl]=\"patientAddEditForm.controls['tech_id']\" (selectionChange)=\"selectTech($event.value);\" placeholder=\"Select a Tech\">\n                  <mat-option>Select a Tech</mat-option>\n                  <mat-option *ngFor=\"let tech of htmlText.allTech;\" value=\"{{ tech.tech_id }}\"> {{ tech.firstname }} {{ tech.lastname }}\n                  </mat-option>\n                </mat-select>\n\n                <mat-error\n                  *ngIf=\"patientAddEditForm.controls['tech_id'].touched && !patientAddEditForm.controls['tech_id'].valid && patientAddEditForm.controls['tech_id'].errors.required\">\n                  Select a tech.</mat-error>\n              </mat-form-field>\n            </mat-card-content>\n            <!-- Tech Name End -->\n\n            <!-- Test Date Start -->\n            <mat-card-content>\n              <label> Test Date</label>\n              <mat-form-field>\n                <input matInput [matDatepicker]=\"testDatePicker\"\n                  [formControl]=\"patientAddEditForm.controls['test_date']\">\n                <mat-datepicker-toggle matSuffix [for]=\"testDatePicker\"></mat-datepicker-toggle>\n                <mat-datepicker #testDatePicker></mat-datepicker>\n              </mat-form-field>\n\n              <mat-error\n                *ngIf=\"patientAddEditForm.controls['test_date'].touched && !patientAddEditForm.controls['test_date'].valid && patientAddEditForm.controls['test_date'].errors.required\">\n                Test date can not be blank.</mat-error>\n            </mat-card-content>\n            <!-- Test Date Start -->\n\n            <!-- Tech Completed Start -->\n            <mat-card-content>\n              <label> Test Completed</label>\n              <mat-form-field>\n                <input matInput [matDatepicker]=\"testCompletedDatePicker\"\n                  [formControl]=\"patientAddEditForm.controls['test_completed_date']\">\n                <mat-datepicker-toggle matSuffix [for]=\"testCompletedDatePicker\"></mat-datepicker-toggle>\n                <mat-datepicker #testCompletedDatePicker></mat-datepicker>\n              </mat-form-field>\n\n              <mat-error\n                *ngIf=\"patientAddEditForm.controls['test_completed_date'].touched && !patientAddEditForm.controls['test_completed_date'].valid && patientAddEditForm.controls['test_completed_date'].errors.required\">\n                Test Completed Date can not be blank.</mat-error>\n            </mat-card-content>\n            <!-- Test Completed Start -->\n\n          </span>\n        </fieldset>\n\n        <br>\n\n        <fieldset class=\"field_setmodel\">\n          <legend class=\"legend_model\">RM-3A Status report</legend>\n          <span class=\"test_date_wrapper\">\n\n            <!-- PTGTP Start -->\n            <mat-card-content>\n              <label>PTGTP</label>\n              <mat-form-field>\n                <mat-select [formControl]=\"patientAddEditForm.controls['PTGTP']\"\n                  (blur)=\"inputUntouch(patientAddEditForm,'PTGTP')\" placeholder=\"Select a Option\">\n                  <mat-option>Select a option</mat-option>\n                  <mat-option value=\"N\"> Normal</mat-option>\n                  <mat-option value=\"A\"> Abnormal</mat-option>\n                  <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                </mat-select>\n\n                <mat-error\n                  *ngIf=\"patientAddEditForm.controls['PTGTP'].touched && !patientAddEditForm.controls['PTGTP'].valid && patientAddEditForm.controls['PTGTP'].errors.required\">\n                  PTGTP Required.</mat-error>\n              </mat-form-field>\n\n              <mat-form-field class=\"subValue\">\n                <input matInput [formControl]=\"patientAddEditForm.controls['PTGTP_value']\" placeholder=\"PTGTP value\" />\n                <mat-hint align=\"start\"> <strong>Optional field.</strong></mat-hint>\n              </mat-form-field>\n            </mat-card-content>\n            <!-- PTGTP End -->\n\n            <!-- PTGVLFI Start -->\n            <mat-card-content>\n              <label> PTGVLFI </label>\n              <mat-form-field>\n                <mat-select [formControl]=\"patientAddEditForm.controls['PTGVLFI']\"\n                  (blur)=\"inputUntouch(patientAddEditForm,'PTGVLFI')\" placeholder=\"Select a Option\">\n                  <mat-option>Select a option</mat-option>\n                  <mat-option value=\"N\"> Normal</mat-option>\n                  <mat-option value=\"A\"> Abnormal</mat-option>\n                  <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                </mat-select>\n\n                <mat-error\n                  *ngIf=\"patientAddEditForm.controls['PTGVLFI'].touched && !patientAddEditForm.controls['PTGVLFI'].valid && patientAddEditForm.controls['PTGVLFI'].errors.required\">\n                  PTGVLFI required.</mat-error>\n              </mat-form-field>\n\n              <mat-form-field class=\"subValue\">\n                <input matInput [formControl]=\"patientAddEditForm.controls['PTGVLFI_value']\"\n                  placeholder=\"PTGVLFI value\" />\n              </mat-form-field>\n            </mat-card-content>\n            <!-- PTGVLFI End -->\n\n            <!-- IR Start -->\n            <mat-card-content>\n              <label> IR </label>\n              <mat-form-field>\n                <mat-select [formControl]=\"patientAddEditForm.controls['IR']\"\n                  (blur)=\"inputUntouch(patientAddEditForm,'IR')\" placeholder=\"Select a Option\">\n                  <mat-option>Select a option</mat-option>\n                  <mat-option value=\"N\"> Normal</mat-option>\n                  <mat-option value=\"A\"> Abnormal</mat-option>\n                  <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                </mat-select>\n\n                <mat-error\n                  *ngIf=\"patientAddEditForm.controls['IR'].touched && !patientAddEditForm.controls['IR'].valid && patientAddEditForm.controls['IR'].errors.required\">\n                  IR required.</mat-error>\n              </mat-form-field>\n\n              <mat-form-field class=\"subValue\">\n                <input matInput [formControl]=\"patientAddEditForm.controls['IR_value']\" placeholder=\"IR value\" />\n              </mat-form-field>\n            </mat-card-content>\n            <!-- IR End -->\n\n            <!-- ESRNO Start -->\n            <mat-card-content>\n              <label> ESRNO<br> (Baseline) </label>\n              <mat-form-field>\n                <mat-select [formControl]=\"patientAddEditForm.controls['ESRNO']\"\n                  (blur)=\"inputUntouch(patientAddEditForm,'ESRNO')\" placeholder=\"Select a Option\">\n                  <mat-option>Select a option</mat-option>\n                  <mat-option value=\"N\"> Normal</mat-option>\n                  <mat-option value=\"A\"> Abnormal</mat-option>\n                  <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                </mat-select>\n\n                <mat-error\n                  *ngIf=\"patientAddEditForm.controls['ESRNO'].touched && !patientAddEditForm.controls['ESRNO'].valid && patientAddEditForm.controls['ESRNO'].errors.required\">\n                  ESRNO required.</mat-error>\n              </mat-form-field>\n\n              <mat-form-field class=\"subValue\">\n                <input matInput [formControl]=\"patientAddEditForm.controls['ESRNO_value']\" placeholder=\"ESRNO value\" />\n              </mat-form-field>\n            </mat-card-content>\n\n\n            <mat-card-content>\n              <label> ESR L<br> (Latency) </label>\n              <mat-form-field>\n                <mat-select [formControl]=\"patientAddEditForm.controls['ESRL']\"\n                  (blur)=\"inputUntouch(patientAddEditForm,'ESRL')\" placeholder=\"Select a Option\">\n                  <mat-option>Select a option</mat-option>\n                  <mat-option value=\"N\"> Normal</mat-option>\n                  <mat-option value=\"A\"> Abnormal</mat-option>\n                  <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                </mat-select>\n\n                <mat-error\n                  *ngIf=\"patientAddEditForm.controls['ESRL'].touched && !patientAddEditForm.controls['ESRL'].valid && patientAddEditForm.controls['ESRL'].errors.required\">\n                  ESR L required.</mat-error>\n              </mat-form-field>\n\n              <mat-form-field class=\"subValue\">\n                <input matInput [formControl]=\"patientAddEditForm.controls['ESRL_value']\" placeholder=\"ESRL value\" />\n              </mat-form-field>\n            </mat-card-content>\n\n\n            <mat-card-content>\n              <label> Peak C <br> (Amplitude) </label>\n              <mat-form-field>\n                <mat-select [formControl]=\"patientAddEditForm.controls['peakC']\"\n                  (blur)=\"inputUntouch(patientAddEditForm,'peakC')\" placeholder=\"Select a Option\">\n                  <mat-option>Select a option</mat-option>\n                  <mat-option value=\"N\"> Normal</mat-option>\n                  <mat-option value=\"A\"> Abnormal</mat-option>\n                  <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                </mat-select>\n\n                <mat-error\n                  *ngIf=\"patientAddEditForm.controls['peakC'].touched && !patientAddEditForm.controls['peakC'].valid && patientAddEditForm.controls['peakC'].errors.required\">\n                  Peak C required.</mat-error>\n              </mat-form-field>\n\n              <mat-form-field class=\"subValue\">\n                <input matInput [formControl]=\"patientAddEditForm.controls['peakC_value']\" placeholder=\"peakC value\" />\n              </mat-form-field>\n            </mat-card-content>\n\n\n            <mat-card-content>\n              <label> PTG Type <br> (EnterType 1-5) </label>\n              <mat-form-field>\n                <mat-select [formControl]=\"patientAddEditForm.controls['PTGtype']\"\n                  (blur)=\"inputUntouch(patientAddEditForm,'PTGtype')\" placeholder=\"Select a Option\">\n                  <mat-option>Select a option</mat-option>\n                  <mat-option value=\"N\"> Normal</mat-option>\n                  <mat-option value=\"A\"> Abnormal</mat-option>\n                  <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                </mat-select>\n\n                <mat-error\n                  *ngIf=\"patientAddEditForm.controls['PTGtype'].touched && !patientAddEditForm.controls['PTGtype'].valid && patientAddEditForm.controls['PTGtype'].errors.required\">\n                  PTG Type required.</mat-error>\n              </mat-form-field>\n\n              <mat-form-field class=\"subValue\">\n                <input matInput [formControl]=\"patientAddEditForm.controls['PTGtype_value']\"\n                  placeholder=\"PTG Type value\" />\n\n                <mat-error\n                  *ngIf=\"patientAddEditForm.controls['PTGtype_value'].touched && !patientAddEditForm.controls['PTGtype_value'].valid && patientAddEditForm.controls['PTGtype_value'].errors.required\">\n                  PTG Type value required.</mat-error>\n                <mat-error\n                  *ngIf=\"patientAddEditForm.controls['PTGtype_value'].touched && !patientAddEditForm.controls['PTGtype_value'].valid && patientAddEditForm.controls['PTGtype_value'].errors.pattern\">\n                  PTG Type value is not valid.</mat-error>\n              </mat-form-field>\n            </mat-card-content>\n\n\n            <mat-card-content>\n              <label> PTG CVD </label>\n              <mat-form-field>\n                <mat-select [formControl]=\"patientAddEditForm.controls['PTGCVD']\"\n                  (blur)=\"inputUntouch(patientAddEditForm,'PTGCVD')\" placeholder=\"Select a Option\">\n                  <mat-option>Select a option</mat-option>\n                  <mat-option value=\"N\"> Normal</mat-option>\n                  <mat-option value=\"A\"> Abnormal</mat-option>\n                  <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                </mat-select>\n\n                <mat-error\n                  *ngIf=\"patientAddEditForm.controls['PTGCVD'].touched && !patientAddEditForm.controls['PTGCVD'].valid && patientAddEditForm.controls['PTGCVD'].errors.required\">\n                  PTG CVD required.</mat-error>\n              </mat-form-field>\n\n              <mat-form-field class=\"subValue\">\n                <input matInput [formControl]=\"patientAddEditForm.controls['PTGCVD_value']\"\n                  placeholder=\"PTGCVD value\" />\n              </mat-form-field>\n            </mat-card-content>\n\n\n            <mat-card-content>\n              <label> Stress I <br> (Stress Index) </label>\n              <mat-form-field>\n                <mat-select [formControl]=\"patientAddEditForm.controls['stressI']\"\n                  (blur)=\"inputUntouch(patientAddEditForm,'stressI')\" placeholder=\"Select a Option\">\n                  <mat-option>Select a option</mat-option>\n                  <mat-option value=\"N\"> Normal</mat-option>\n                  <mat-option value=\"A\"> Abnormal</mat-option>\n                  <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                </mat-select>\n\n                <mat-error\n                  *ngIf=\"patientAddEditForm.controls['stressI'].touched && !patientAddEditForm.controls['stressI'].valid && patientAddEditForm.controls['stressI'].errors.required\">\n                  Stress I required.</mat-error>\n              </mat-form-field>\n\n              <mat-form-field class=\"subValue\">\n                <input matInput [formControl]=\"patientAddEditForm.controls['stressI_value']\"\n                  placeholder=\"Stress I value\" />\n              </mat-form-field>\n            </mat-card-content>\n\n\n            <mat-card-content>\n              <label> RI </label>\n              <mat-form-field>\n                <mat-select [formControl]=\"patientAddEditForm.controls['RI']\"\n                  (blur)=\"inputUntouch(patientAddEditForm,'RI')\" placeholder=\"Select a Option\">\n                  <mat-option>Select a option</mat-option>\n                  <mat-option value=\"N\"> Normal</mat-option>\n                  <mat-option value=\"A\"> Abnormal</mat-option>\n                  <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                </mat-select>\n\n                <mat-error\n                  *ngIf=\"patientAddEditForm.controls['RI'].touched && !patientAddEditForm.controls['RI'].valid && patientAddEditForm.controls['RI'].errors.required\">\n                  RI required.</mat-error>\n              </mat-form-field>\n\n              <mat-form-field class=\"subValue\">\n                <input matInput [formControl]=\"patientAddEditForm.controls['RI_value']\" placeholder=\"Stress I value\" />\n              </mat-form-field>\n            </mat-card-content>\n\n            <mat-card-content>\n              <label> AIPTG<br> (IPTG) </label>\n              <mat-form-field>\n                <mat-select [formControl]=\"patientAddEditForm.controls['AIPTG']\"\n                  (blur)=\"inputUntouch(patientAddEditForm,'AIPTG')\" placeholder=\"Select a Option\">\n                  <mat-option>Select a option</mat-option>\n                  <mat-option value=\"N\"> Normal</mat-option>\n                  <mat-option value=\"A\"> Abnormal</mat-option>\n                  <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                </mat-select>\n\n                <mat-error\n                  *ngIf=\"patientAddEditForm.controls['AIPTG'].touched && !patientAddEditForm.controls['AIPTG'].valid && patientAddEditForm.controls['AIPTG'].errors.required\">\n                  AIPTG required.</mat-error>\n              </mat-form-field>\n\n              <mat-form-field class=\"subValue\">\n                <input matInput [formControl]=\"patientAddEditForm.controls['AIPTG_value']\" placeholder=\"AIPTG value\" />\n              </mat-form-field>\n            </mat-card-content>\n\n\n            <mat-card-content>\n              <label> CIs (CI) </label>\n              <mat-form-field>\n                <mat-select [formControl]=\"patientAddEditForm.controls['CIsCI']\"\n                  (blur)=\"inputUntouch(patientAddEditForm, 'CIsCI')\" placeholder=\"Select a Option\">\n                  <mat-option>Select a option</mat-option>\n                  <mat-option value=\"N\"> Normal</mat-option>\n                  <mat-option value=\"A\"> Abnormal</mat-option>\n                  <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                </mat-select>\n\n                <mat-error\n                  *ngIf=\"patientAddEditForm.controls['CIsCI'].touched && !patientAddEditForm.controls['CIsCI'].valid && patientAddEditForm.controls['CIsCI'].errors.required\">\n                  CIs (CI) required.</mat-error>\n              </mat-form-field>\n\n              <mat-form-field class=\"subValue\">\n                <input matInput [formControl]=\"patientAddEditForm.controls['CIsCI_value']\" placeholder=\"CIsCI value\">\n              </mat-form-field>\n            </mat-card-content>\n\n\n            <mat-card-content>\n              <label> pNN50 </label>\n              <mat-form-field>\n                <mat-select [formControl]=\"patientAddEditForm.controls['pNN50']\"\n                  (blur)=\"inputUntouch(patientAddEditForm,'pNN50')\" placeholder=\"Select a Option\">\n                  <mat-option>Select a option</mat-option>\n                  <mat-option value=\"N\"> Normal</mat-option>\n                  <mat-option value=\"A\"> Abnormal</mat-option>\n                  <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                </mat-select>\n\n                <mat-error\n                  *ngIf=\"patientAddEditForm.controls['pNN50'].touched && !patientAddEditForm.controls['pNN50'].valid && patientAddEditForm.controls['pNN50'].errors.required\">\n                  pNN50 required.</mat-error>\n              </mat-form-field>\n\n              <mat-form-field class=\"subValue\">\n                <input matInput [formControl]=\"patientAddEditForm.controls['pNN50_value']\" placeholder=\"pNN50 value\" />\n              </mat-form-field>\n            </mat-card-content>\n\n\n            <mat-card-content>\n              <label> RMSSD </label>\n              <mat-form-field>\n                <mat-select [formControl]=\"patientAddEditForm.controls['RMSSD']\"\n                  (blur)=\"inputUntouch(patientAddEditForm,'pNN50')\" placeholder=\"Select a Option\">\n                  <mat-option>Select a option</mat-option>\n                  <mat-option value=\"N\"> Normal</mat-option>\n                  <mat-option value=\"A\"> Abnormal</mat-option>\n                  <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                </mat-select>\n\n                <mat-error\n                  *ngIf=\"patientAddEditForm.controls['RMSSD'].touched && !patientAddEditForm.controls['RMSSD'].valid && patientAddEditForm.controls['RMSSD'].errors.required\">\n                  RMSSD required.</mat-error>\n              </mat-form-field>\n\n              <mat-form-field class=\"subValue\">\n                <input matInput [formControl]=\"patientAddEditForm.controls['RMSSD_value']\" placeholder=\"RMSSD value\" />\n              </mat-form-field>\n            </mat-card-content>\n\n\n            <mat-card-content>\n              <label> SD ba - </label>\n              <mat-form-field>\n                <mat-select [formControl]=\"patientAddEditForm.controls['SDba']\"\n                  (blur)=\"inputUntouch(patientAddEditForm,'SDba')\" placeholder=\"Select a Option\">\n                  <mat-option>Select a option</mat-option>\n                  <mat-option value=\"N\"> Normal</mat-option>\n                  <mat-option value=\"A\"> Abnormal</mat-option>\n                  <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                </mat-select>\n\n                <mat-error\n                  *ngIf=\"patientAddEditForm.controls['SDba'].touched && !patientAddEditForm.controls['SDba'].valid && patientAddEditForm.controls['SDba'].errors.required\">\n                  SD ba - required.</mat-error>\n              </mat-form-field>\n\n              <mat-form-field class=\"subValue\">\n                <input matInput [formControl]=\"patientAddEditForm.controls['SDba_value']\" placeholder=\"SDba value\" />\n              </mat-form-field>\n            </mat-card-content>\n\n\n            <mat-card-content>\n              <label> SD da </label>\n              <mat-form-field>\n                <mat-select [formControl]=\"patientAddEditForm.controls['SDda']\"\n                  (blur)=\"inputUntouch(patientAddEditForm,'SDda')\" placeholder=\"Select a Option\">\n                  <mat-option>Select a option</mat-option>\n                  <mat-option value=\"N\"> Normal</mat-option>\n                  <mat-option value=\"A\"> Abnormal</mat-option>\n                  <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                </mat-select>\n\n                <mat-error\n                  *ngIf=\"patientAddEditForm.controls['SDda'].touched && !patientAddEditForm.controls['SDda'].valid && patientAddEditForm.controls['SDda'].errors.required\">\n                  SD da required.</mat-error>\n              </mat-form-field>\n\n              <mat-form-field class=\"subValue\">\n                <input matInput [formControl]=\"patientAddEditForm.controls['SDda_value']\" placeholder=\"SDda value\" />\n              </mat-form-field>\n            </mat-card-content>\n\n\n            <mat-card-content>\n              <label>DPRS </label>\n              <mat-form-field>\n                <mat-select [formControl]=\"patientAddEditForm.controls['DPRS']\"\n                  (blur)=\"inputUntouch(patientAddEditForm,'DPRS')\" placeholder=\"Select a Option\">\n                  <mat-option>Select a option</mat-option>\n                  <mat-option value=\"N\"> Normal</mat-option>\n                  <mat-option value=\"A\"> Abnormal</mat-option>\n                  <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                </mat-select>\n\n                <mat-error\n                  *ngIf=\"patientAddEditForm.controls['DPRS'].touched && !patientAddEditForm.controls['DPRS'].valid && patientAddEditForm.controls['DPRS'].errors.required\">\n                  DPRS required.</mat-error>\n              </mat-form-field>\n\n              <mat-form-field class=\"subValue\">\n                <input matInput [formControl]=\"patientAddEditForm.controls['DPRS_value']\" placeholder=\"DPRS value\" />\n              </mat-form-field>\n            </mat-card-content>\n\n            <mat-card-content>\n              <label>ValsR. </label>\n              <mat-form-field>\n                <mat-select [formControl]=\"patientAddEditForm.controls['ValsR']\"\n                  (blur)=\"inputUntouch(patientAddEditForm,'ValsR')\" placeholder=\"Select a Option\">\n                  <mat-option>Select a option</mat-option>\n                  <mat-option value=\"N\"> Normal</mat-option>\n                  <mat-option value=\"A\"> Abnormal</mat-option>\n                  <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                </mat-select>\n\n                <mat-error\n                  *ngIf=\"patientAddEditForm.controls['ValsR'].touched && !patientAddEditForm.controls['ValsR'].valid && patientAddEditForm.controls['ValsR'].errors.required\">\n                  ValsR required.</mat-error>\n              </mat-form-field>\n\n              <mat-form-field class=\"subValue\">\n                <input matInput [formControl]=\"patientAddEditForm.controls['ValsR_value']\" placeholder=\"ValsR value\" />\n              </mat-form-field>\n            </mat-card-content>\n\n\n            <mat-card-content>\n              <label>BMI<br> Enter BMI Score (I.E. 29.1) </label>\n              <mat-form-field>\n                <input matInput [formControl]=\"patientAddEditForm.controls['BMI']\" placeholder=\"BMI value\" />\n\n                <mat-error\n                  *ngIf=\"patientAddEditForm.controls['BMI'].touched && !patientAddEditForm.controls['BMI'].valid && patientAddEditForm.controls['BMI'].errors.required\">\n                  BMI value required.</mat-error>\n                <mat-error\n                  *ngIf=\"patientAddEditForm.controls['BMI'].touched && !patientAddEditForm.controls['BMI'].valid && patientAddEditForm.controls['BMI'].errors.pattern\">\n                  BMI value is not valid.</mat-error>\n              </mat-form-field>\n            </mat-card-content>\n\n\n            <mat-card-content class=\"auto_width\">\n              <label>Blood Pressure<br> Systolic & Diastolic (120/80) </label>\n              <mat-form-field>\n                <mat-select [formControl]=\"patientAddEditForm.controls['blood_pressure']\"\n                  (blur)=\"inputUntouch(patientAddEditForm,'blood_pressure')\" placeholder=\"Select a Option\">\n                  <mat-option>Select a option</mat-option>\n                  <mat-option value=\"N\"> Normal</mat-option>\n                  <mat-option value=\"A\"> Abnormal</mat-option>\n                  <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                </mat-select>\n\n                <mat-error\n                  *ngIf=\"patientAddEditForm.controls['blood_pressure'].touched && !patientAddEditForm.controls['blood_pressure'].valid && patientAddEditForm.controls['blood_pressure'].errors.required\">\n                  Blood Pressure required.</mat-error>\n              </mat-form-field>\n\n              <mat-form-field class=\"subValue\">\n                <input matInput [formControl]=\"patientAddEditForm.controls['systolic_value']\"\n                  placeholder=\"Systolic value\" />\n\n                <mat-error\n                  *ngIf=\"patientAddEditForm.controls['systolic_value'].touched && !patientAddEditForm.controls['systolic_value'].valid && patientAddEditForm.controls['systolic_value'].errors.required\">\n                  Systolic value required.</mat-error>\n                <mat-error\n                  *ngIf=\"patientAddEditForm.controls['systolic_value'].touched && !patientAddEditForm.controls['systolic_value'].valid && patientAddEditForm.controls['systolic_value'].errors.pattern\">\n                  Systolic value is not valid.</mat-error>\n              </mat-form-field>\n\n              <mat-form-field class=\"subValue\">\n                <input matInput [formControl]=\"patientAddEditForm.controls['diastolic_value']\"\n                  placeholder=\"Diastolic value\" />\n\n                <mat-error\n                  *ngIf=\"patientAddEditForm.controls['diastolic_value'].touched && !patientAddEditForm.controls['diastolic_value'].valid && patientAddEditForm.controls['diastolic_value'].errors.required\">\n                  Systolic value required.</mat-error>\n                <mat-error\n                  *ngIf=\"patientAddEditForm.controls['diastolic_value'].touched && !patientAddEditForm.controls['diastolic_value'].valid && patientAddEditForm.controls['diastolic_value'].errors.pattern\">\n                  Diastolic value is not valid.</mat-error>\n              </mat-form-field>\n            </mat-card-content>\n\n          </span>\n        </fieldset>\n\n        <br>\n\n        <fieldset class=\"field_setmodel\">\n          <legend class=\"legend_model\">additional notes</legend>\n\n          <br>\n\n          <span class=\"patient_diagnotes\">\n            <label>Patient Diagnoses & Notes:</label>\n            <mat-form-field class=\"example-full-width\">\n\n              <textarea matInput placeholder=\"Leave a comment\" [formControl]=\"patientAddEditForm.controls['leave_notes']\"\n                (blur)=\"inputUntouch(patientAddEditForm,'leave_notes')\"></textarea>\n              <mat-error\n                *ngIf=\"patientAddEditForm.controls['leave_notes'].touched && !patientAddEditForm.controls['leave_notes'].valid && patientAddEditForm.controls['leave_notes'].errors.required\">\n                Patient Diagnoses & Notes can not be blank</mat-error>\n            </mat-form-field>\n          </span>\n\n          <span class=\"submit_form\">\n            <button mat-flat-button type=\"reset\">Reset </button>\n            <button mat-flat-button type=\"submit\"> {{ htmlText.buttonText }} </button>\n          </span>\n        </fieldset>\n      </form>\n    </mat-card-content>\n  </mat-card>\n\n</mat-card>\n\n<!-- Tech Footer -->\n<app-admin-footer></app-admin-footer>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/admin-dashboard/admin-dashboard.component.html":
  /*!***********************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/admin-dashboard/admin-dashboard.component.html ***!
    \***********************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminAdminDashboardAdminDashboardComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<app-admin-header></app-admin-header>\n\n<mat-card class=\"admin_wrapper\">\n\n  <mat-card-content class=\"content_wrapper\">\n\n    <mat-card-content class=\"itemsection\">\n      <span class=\"icon\">\n        <img src=\"../../../../assets/images/majorDC_icon.png\">\n      </span>\n      <span class=\"counteer\">\n        <span class=\"counter_with_tool\">\n          <h4 class=\"dataCount\"> {{ allResolveData.total_major_doctor }}</h4>\n          <span class=\"tolTip\">\n            <a mat-raised-button #major_doctor=\"matTooltip\"\n              matTooltip=\"The total number of independent doctors registered under the Admin\" matTooltipPosition=\"above\"\n              aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n            </a>\n            <a mat-button (click)=\"major_doctor.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n              <span class=\"material-icons\"> help_outline </span>\n            </a>\n          </span>\n        </span>\n      </span>\n      <span class=\"button_wrapper\">\n        <p class=\"doctorNumber\">Total Number of <br> Major Doctors</p>\n        <button mat-button [routerLink]=\"['/admin/doctor-management']\">View Details</button>\n      </span>\n    </mat-card-content>\n\n    <mat-card-content class=\"itemsection\">\n      <span class=\"icon\">\n        <img src=\"../../../../assets/images/billerIcon.png\">\n      </span>\n      <span class=\"counteer\">\n        <span class=\"counter_with_tool\">\n          <h4 class=\"dataCount\">{{ allResolveData.total_biller }}</h4>\n          <span class=\"tolTip\">\n            <a mat-raised-button #total_biller=\"matTooltip\"\n              matTooltip=\"The data listed for the total number of billers registered under Admin, Distributor, Doctor’s Group Admin, and Diagnostic Admin.\"\n              matTooltipPosition=\"above\" aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n            </a>\n            <a mat-button (click)=\"total_biller.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n              <span class=\"material-icons\"> help_outline </span>\n            </a>\n          </span>\n        </span>\n      </span>\n      <span class=\"button_wrapper\">\n        <p class=\"doctorNumber\">Total Number of<br> Billers</p>\n        <button mat-flat-button [routerLink]=\"['/admin/biller-management']\">View Details</button>\n      </span>\n    </mat-card-content>\n\n    <mat-card-content class=\"itemsection\">\n      <span class=\"icon\">\n        <img src=\"../../../../assets/images/techIcon.png\">\n      </span>\n      <span class=\"counteer\">\n        <span class=\"counter_with_tool\">\n          <h4 class=\"dataCount\">{{ allResolveData.total_tech }}</h4>\n          <span class=\"tolTip\">\n            <a mat-raised-button #TotalTechsS=\"matTooltip\"\n              matTooltip=\" The data listed for the total number of registered techs under Admin, Distributor, Doctor’s Group Admin, and Diagnostic Admin. \"\n              matTooltipPosition=\"above\" aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n            </a>\n            <a mat-button (click)=\"TotalTechsS.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n              <span class=\"material-icons\"> help_outline </span>\n            </a>\n          </span>\n        </span>\n      </span>\n      <span class=\"button_wrapper\">\n        <p class=\"doctorNumber\">Total Number of <br>Techs</p>\n        <button mat-flat-button [routerLink]=\"['/admin/tech-management']\">View Details</button>\n      </span>\n    </mat-card-content>\n\n  </mat-card-content>\n\n  <mat-card-content class=\"content_wrapper\">\n\n    <mat-card-content class=\"itemsection\">\n      <span class=\"icon\">\n        <img src=\"../../../../assets/images/distributorIcon.png\">\n      </span>\n      <span class=\"counteer\">\n        <span class=\"counter_with_tool\">\n          <h4 class=\"dataCount\">{{ allResolveData.total_distributor }}</h4>\n          <span class=\"tolTip\">\n            <a mat-raised-button #TotalDistributor=\"matTooltip\"\n              matTooltip=\"The data listed for the total number of doctor’s offices registered under Admin, Distributor, Doctor’s Group Admin, and Diagnostic Admin.\"\n              matTooltipPosition=\"above\" aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n            </a>\n            <a mat-button (click)=\"TotalDistributor.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n              <span class=\"material-icons\"> help_outline </span>\n            </a>\n          </span>\n        </span>\n      </span>\n      <span class=\"button_wrapper\">\n        <p class=\"doctorNumber\">Total Number of <br> Distributor</p>\n        <button mat-button [routerLink]=\"['/admin/distributors-management']\">View Details</button>\n      </span>\n    </mat-card-content>\n\n    <mat-card-content class=\"itemsection\">\n      <span class=\"icon\">\n        <img src=\"../../../../assets/images/groupadminIcon.png\">\n      </span>\n      <span class=\"counteer\">\n        <span class=\"counter_with_tool\">\n          <h4 class=\"dataCount\">{{ allResolveData.total_doctors_group_admin }}</h4>\n          <span class=\"tolTip\">\n            <a mat-raised-button #DoctorsGroupAdmin=\"matTooltip\"\n              matTooltip=\"The data listed for the total number of Doctor’s Group Admin added by the Admin.\"\n              matTooltipPosition=\"above\" aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n            </a>\n            <a mat-button (click)=\"DoctorsGroupAdmin.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n              <span class=\"material-icons\"> help_outline </span>\n            </a>\n          </span>\n        </span>\n      </span>\n      <span class=\"button_wrapper\">\n        <p class=\"doctorNumber\">Total Number of<br> Doctors Group Admin</p>\n        <button mat-flat-button [routerLink]=\"['/admin/doctor-management/group']\">View Details</button>\n      </span>\n    </mat-card-content>\n\n    <mat-card-content class=\"itemsection\">\n      <span class=\"icon\">\n        <img src=\"../../../../assets/images/billerAdminIcon.png\">\n      </span>\n      <span class=\"counteer\">\n        <span class=\"counter_with_tool\">\n          <h4 class=\"dataCount\"> {{ allResolveData.total_biller_admin }}</h4>\n          <span class=\"tolTip\">\n            <a mat-raised-button #BillerAdmin=\"matTooltip\"\n              matTooltip=\"The data listed for the total number of billers added\" matTooltipPosition=\"above\"\n              aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n            </a>\n            <a mat-button (click)=\"BillerAdmin.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n              <span class=\"material-icons\"> help_outline </span>\n            </a>\n          </span>\n        </span>\n      </span>\n      <span class=\"button_wrapper\">\n        <p class=\"doctorNumber\">Total Number of <br>Biller Admin</p>\n        <button mat-flat-button [routerLink]=\"['/admin/adminbiller-management']\">View Details</button>\n      </span>\n    </mat-card-content>\n\n  </mat-card-content>\n\n  <mat-card-content class=\"content_wrapper\">\n    <mat-card-content class=\"itemsection\">\n      <span class=\"icon\">\n        <img src=\"../../../../assets/images/doctorOfficeIcon.png\">\n      </span>\n      <span class=\"counteer\">\n        <span class=\"counter_with_tool\">\n          <h4 class=\"dataCount\">{{ allResolveData.total_doctor_office }}</h4>\n          <span class=\"tolTip\">\n            <a mat-raised-button #TotalDoctorOffice=\"matTooltip\"\n              matTooltip=\"The data listed for the total number of Doctor’s Office added by the Admin.\"\n              matTooltipPosition=\"above\" aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n            </a>\n            <a mat-button (click)=\"TotalDoctorOffice.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n              <span class=\"material-icons\"> help_outline </span>\n            </a>\n          </span>\n        </span>\n      </span>\n      <span class=\"button_wrapper\">\n        <p class=\"doctorNumber\">Total Number of <br>Doctor's Office</p>\n        <button mat-button [routerLink]=\"['/admin/doctor-office-management']\">View Details</button>\n      </span>\n    </mat-card-content>\n\n    <mat-card-content class=\"itemsection\">\n      <span class=\"icon\">\n        <img src=\"../../../../assets/images/diagnosticAdminIcon.png\">\n      </span>\n      <span class=\"counteer\">\n        <span class=\"counter_with_tool\">\n          <h4 class=\"dataCount\"> {{ allResolveData.total_diagnostic_admin }}</h4>\n          <span class=\"tolTip\">\n            <a mat-raised-button #DiagnosticAdmin=\"matTooltip\"\n              matTooltip=\"The data listed for the total number of Diagnostic Admin added by the Admin.\"\n              matTooltipPosition=\"above\" aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n            </a>\n            <a mat-button (click)=\"DiagnosticAdmin.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n              <span class=\"material-icons\"> help_outline </span>\n            </a>\n          </span>\n        </span>\n      </span>\n      <span class=\"button_wrapper\">\n        <p class=\"doctorNumber\">Total Number of <br>Diagnostic Admin</p>\n        <button mat-button [routerLink]=\"['/admin/diagnostic-admin-management']\">View Details</button>\n      </span>\n    </mat-card-content>\n\n    <mat-card-content class=\"itemsection\">\n      <span class=\"icon\">\n        <img src=\"../../../../assets/images/totalDoctorIcon.png\">\n      </span>\n      <span class=\"counteer\">\n        <span class=\"counter_with_tool\">\n          <h4 class=\"dataCount\"> {{ allResolveData.total_parent_doctor }}</h4>\n          <span class=\"tolTip\">\n            <a mat-raised-button #TotalNoDoctors=\"matTooltip\"\n              matTooltip=\"The data listed for the total number of doctors registered under the Admin, Distributor, Doctor’s Group Admin, and Diagnostic Admin.\"\n              matTooltipPosition=\"above\" aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n            </a>\n            <a mat-button (click)=\"TotalNoDoctors.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n              <span class=\"material-icons\"> help_outline </span>\n            </a>\n          </span>\n        </span>\n      </span>\n      <span class=\"button_wrapper\">\n        <p class=\"doctorNumber\">Total Number of <br>Doctors</p>\n        <button mat-button [routerLink]=\"['/admin/doctor-management']\">View Details</button>\n      </span>\n    </mat-card-content>\n  </mat-card-content>\n\n  <mat-card-content class=\"content_wrapper\">\n\n    <mat-card-content class=\"itemsection\">\n      <span class=\"icon\">\n        <img src=\"../../../../assets/images/salesPersonIcon.png\">\n      </span>\n      <span class=\"counteer\">\n        <span class=\"counter_with_tool\">\n          <h4 class=\"dataCount\"> {{ allResolveData.total_sales_person }} </h4>\n          <span class=\"tolTip\">\n            <a mat-raised-button #TotalSalesPerson=\"matTooltip\"\n              matTooltip=\"The data listed for the total number of Sales Persons registered under the Admin, Distributor, and Diagnostic Admin.\"\n              matTooltipPosition=\"above\" aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n            </a>\n            <a mat-button (click)=\"TotalSalesPerson.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n              <span class=\"material-icons\"> help_outline </span>\n            </a>\n          </span>\n        </span>\n      </span>\n      <span class=\"button_wrapper\">\n        <p class=\"doctorNumber\">Total Number of<br> Sales Person</p>\n        <button mat-flat-button [routerLink]=\"['/admin/sales-person-management']\">View Details</button>\n      </span>\n    </mat-card-content>\n\n    <mat-card-content class=\"itemsection\">\n      <span class=\"icon\">\n        <img src=\"../../../../assets/images/appointmentsPendingIcon.png\">\n      </span>\n      <span class=\"counteer\">\n        <span class=\"counter_with_tool\">\n          <h4 class=\"dataCount\"> {{ allResolveData.total_appointments_pending }}</h4>\n          <span class=\"tolTip\">\n            <a mat-raised-button #AppointmentsPending=\"matTooltip\"\n              matTooltip=\"The data listed for the number of patient appointments pending\" matTooltipPosition=\"above\"\n              aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n            </a>\n            <a mat-button (click)=\"AppointmentsPending.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n              <span class=\"material-icons\"> help_outline </span>\n            </a>\n          </span>\n        </span>\n      </span>\n      <span class=\"button_wrapper\">\n        <p class=\"doctorNumber\">Total Appointments<br> Pending</p>\n        <button mat-flat-button [routerLink]=\"['/admin/booked-appoinments/pending']\">View Details</button>\n      </span>\n    </mat-card-content>\n\n    <mat-card-content class=\"itemsection\">\n      <span class=\"icon\">\n        <img src=\"../../../../assets/images/appointmentsCompletedIcon.png\">\n      </span>\n      <span class=\"counteer\">\n        <span class=\"counter_with_tool\">\n          <h4 class=\"dataCount\"> {{ allResolveData.total_appointments_completed }}</h4>\n          <span class=\"tolTip\">\n            <a mat-raised-button #AppointmentsCompleted=\"matTooltip\"\n              matTooltip=\"The data listed for the total number of patient appointments completed by the doctor.\"\n              matTooltipPosition=\"above\" aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n            </a>\n            <a mat-button (click)=\"AppointmentsCompleted.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n              <span class=\"material-icons\"> help_outline </span>\n            </a>\n          </span>\n        </span>\n      </span>\n      <span class=\"button_wrapper\">\n        <p class=\"doctorNumber\">Total Appointments<br> Completed</p>\n        <button mat-flat-button [routerLink]=\"['/admin/booked-appoinments/completed']\">View Details</button>\n      </span>\n    </mat-card-content>\n\n  </mat-card-content>\n\n  <mat-card-content class=\"admin_superbillsection superbillerContainer\">\n    <h1>Physician Report and Super Bills</h1>\n\n    <mat-card-content class=\"biller_wrapper\">\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon1.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total Number of <br>\n            Reports Added\n          </p>\n          <span class=\"counter_with_tool\">\n            <h2> {{ allResolveData.total_reports }} </h2>\n\n            <!-- tool tip -->\n            <span class=\"tolTip\">\n              <a mat-raised-button #ReportsAdded=\"matTooltip\"\n                matTooltip=\"The data listed for the total number of reports added by the biller.\"\n                matTooltipPosition=\"above\" aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n              </a>\n              <a mat-button (click)=\"ReportsAdded.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n                <span class=\"material-icons\"> help_outline </span>\n              </a>\n            </span>\n          </span>\n          <!-- <button mat-flat-button (click)=\"viewAllButton('Total Number of Reports Added')\">view all</button> -->\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon2.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total Number of <br>\n            Report Processed\n          </p>\n          <span class=\"counter_with_tool\">\n            <h2> {{ allResolveData.total_report_processed }} </h2>\n            <!-- tool tip -->\n            <span class=\"tolTip\">\n              <a mat-raised-button #reportsProcessed=\"matTooltip\"\n                matTooltip=\"The data listed for the total number of reports processed by the system.\"\n                matTooltipPosition=\"above\" aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n              </a>\n              <a mat-button (click)=\"reportsProcessed.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n                <span class=\"material-icons\"> help_outline </span>\n              </a>\n            </span>\n          </span>\n          <button mat-flat-button (click)=\"viewAllButton('Total Number of Report Processed')\">view all</button>\n        </span>\n\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon3.png\">\n          </mat-card-content>\n        </span>\n        <span class=\"container_wrapper\">\n          <p>Total Number of <br>\n            Report Signed\n          </p>\n          <span class=\"counter_with_tool\">\n            <h2> {{ allResolveData.total_sign_reports }} </h2>\n            <!-- tool tip -->\n            <span class=\"tolTip\">\n              <a mat-raised-button #reportSigned=\"matTooltip\"\n                matTooltip=\"The data listed for the total number of reports signed by the doctors.\"\n                matTooltipPosition=\"above\" aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n              </a>\n              <a mat-button (click)=\"reportSigned.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n                <span class=\"material-icons\"> help_outline </span>\n              </a>\n            </span>\n          </span>\n          <button mat-flat-button (click)=\"viewAllButton('Total Number of Report Signed')\">view all</button>\n        </span>\n\n\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon4.png\">\n          </mat-card-content>\n        </span>\n        <span class=\"container_wrapper\">\n          <p> Sent to <br>\n            Biller\n          </p>\n          <span class=\"counter_with_tool\">\n            <h2> {{ allResolveData.total_send_to_supar_biller_reports }} </h2>\n            <!-- tool tip -->\n            <span class=\"tolTip\">\n              <a mat-raised-button #sentBiller=\"matTooltip\"\n                matTooltip=\"The data listed for the total no. of reports sent to the billers.\"\n                matTooltipPosition=\"above\" aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n              </a>\n              <a mat-button (click)=\"sentBiller.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n                <span class=\"material-icons\"> help_outline </span>\n              </a>\n            </span>\n          </span>\n          <button mat-flat-button (click)=\"viewAllButton('Sent to Biller')\">view all</button>\n        </span>\n\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon4.png\">\n          </mat-card-content>\n        </span>\n        <span class=\"container_wrapper\">\n          <p> Reports Downloaded </p>\n          <span class=\"counter_with_tool\">\n            <h2> {{ allResolveData.total_reports_download }} </h2>\n            <!-- tool tip -->\n            <span class=\"tolTip\">\n              <a mat-raised-button #reportsDownloaded=\"matTooltip\"\n                matTooltip=\" The data listed for the no. of reports that are downloaded.\" matTooltipPosition=\"above\"\n                aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n              </a>\n              <a mat-button (click)=\"reportsDownloaded.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n                <span class=\"material-icons\"> help_outline </span>\n              </a>\n            </span>\n          </span>\n          <button mat-flat-button (click)=\"viewAllButton('Reports Downloaded')\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon4.png\">\n          </mat-card-content>\n        </span>\n        <span class=\"container_wrapper\">\n          <p> Reports Pending Sign </p>\n          <span class=\"counter_with_tool\">\n            <h2> {{ allResolveData.total_not_sign_reports }} </h2>\n            <!-- tool tip -->\n            <span class=\"tolTip\">\n              <a mat-raised-button #reportsPending=\"matTooltip\"\n                matTooltip=\"The data listed for the total no. of reports that are yet to be signed by the doctors.\"\n                matTooltipPosition=\"above\" aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n              </a>\n              <a mat-button (click)=\"reportsPending.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n                <span class=\"material-icons\"> help_outline </span>\n              </a>\n            </span>\n          </span>\n          <button mat-flat-button (click)=\"viewAllButton('Reports Pending Sing')\">view all</button>\n        </span>\n\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon4.png\">\n          </mat-card-content>\n        </span>\n        <span class=\"container_wrapper\">\n          <p> Job Tickets Created </p>\n          <span class=\"counter_with_tool\">\n            <h2> {{ allResolveData.total_job_tickets }} </h2>\n            <!-- tool tip -->\n            <span class=\"tolTip\">\n              <a mat-raised-button #JobTicketsCreated=\"matTooltip\"\n                matTooltip=\"The data listed for the total no. of reports that have job tickets added.\"\n                matTooltipPosition=\"above\" aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n              </a>\n              <a mat-button (click)=\"JobTicketsCreated.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n                <span class=\"material-icons\"> help_outline </span>\n              </a>\n            </span>\n          </span>\n          <button mat-flat-button (click)=\"viewAllButton('Job Tickets')\">view all</button>\n        </span>\n\n      </mat-card-content>\n    </mat-card-content>\n  </mat-card-content>\n\n  <app-doctor-signup-share [shareDetails]=\"shareDetails\"></app-doctor-signup-share>\n\n\n  <!-- 1st List Hide on load, Click on View All button then view this -->\n  <!-- View All button listing start here -->\n  <mat-card-content *ngIf=\"htmlText.viewAllButtonTable.headerText != ''\" class=\"table_wrapper admin_dashboard\">\n    <mat-card-content class=\"headr_tagh\">\n      <span class=\"counter_with_tool\">\n        <h1>{{ htmlText.viewAllButtonTable.headerText }}</h1>\n        <span class=\"tolTip\">\n          <a mat-raised-button #processedReports=\"matTooltip\"\n            matTooltip=\"All the Reports listed here are reviewed by Admin.\" matTooltipPosition=\"above\"\n            aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n          </a>\n          <a mat-button (click)=\"processedReports.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n            <span class=\"material-icons\"> help_outline </span>\n          </a>\n        </span>\n      </span>\n    </mat-card-content>\n    <app-view-all-button-list [viewFlag]=\"htmlText.viewAllButtonTable.headerText\"></app-view-all-button-list>\n  </mat-card-content>\n  <!-- View All button listing end here -->\n\n\n  <!-- 2nd List -->\n  <!-- Patient Reports Pending Actions listing start here -->\n  <mat-card-content class=\"table_wrapper admin_dashboard\">\n    <mat-card-content class=\"headr_tagh\">\n      <span class=\"counter_with_tool\">\n        <h1>Patient Reports Pending Actions</h1>\n        <span class=\"tolTip\">\n          <a mat-raised-button #pendingActions=\"matTooltip\"\n            matTooltip=\" All the Reports listed here are processed by System but awaiting on Admin actions.\"\n            matTooltipPosition=\"above\" aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n          </a>\n          <a mat-button (click)=\"pendingActions.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n            <span class=\"material-icons\"> help_outline </span>\n          </a>\n        </span>\n      </span>\n    </mat-card-content>\n\n    <!-- table -->\n    <lib-listing class=\"DataTable\" *ngIf=\"allBillerData.length>0\" (onLiblistingChange)=\"listenLiblistingChange($event)\" [datasource]=\"allBillerData\" [skip]=\"allUserData_skip\"\n      [modify_header_array]=\"allUserData_modify_header\" [detail_skip_array]=\"previewModal_detail_skip\" [apiurl]=\"apiUrl\"\n      [sourcedata]=\"tableName\" [editroute]=\"editUrl\" [jwttoken]=\"jwtToken\" [statusarr]=\"status\"\n      [updateendpoint]=\"UpdateEndpoint\" [deleteendpoint]=\"deleteEndpoint\" [date_search_endpoint]=\"SearchingEndpoint\"\n      [date_search_source]=\"SearchingSourceName\" [search_settings]=\"search_settings\" [sortdata]=\"sortdata\"\n      [datacollection]=\"datacollection\" [libdata]=\"libdata\" [date_search_source_count]=\"billerData_count\"\n      [limitcond]=\"limitcond\">\n    </lib-listing>\n\n  </mat-card-content>\n  <!-- Patient Reports Pending Actions listing end here -->\n  \n  <!-- 3rd List -->\n  <!-- Admin Processed Reports start here -->\n  <mat-card-content class=\"table_wrapper admin_dashboard\">\n    <mat-card-content class=\"headr_tagh\">\n      <span class=\"counter_with_tool\">\n        <h1>Admin Processed Reports</h1>\n        <span class=\"tolTip\">\n          <a mat-raised-button #processedReports=\"matTooltip\"\n            matTooltip=\"All the Reports listed here are reviewed by Admin.\" matTooltipPosition=\"above\"\n            aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n          </a>\n          <a mat-button (click)=\"processedReports.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n            <span class=\"material-icons\"> help_outline </span>\n          </a>\n        </span>\n      </span>\n    </mat-card-content>\n    <app-approved-patient-reports></app-approved-patient-reports>\n  </mat-card-content>\n  <!-- Admin Processed Reports end here -->\n\n  <!-- 4th List -->\n  <!-- Patient Reports with Job Tickets start here -->\n  <mat-card-content id=\"jobTickets\" class=\"table_wrapper admin_dashboard\">\n    <mat-card-content class=\"headr_tagh\">\n      <span class=\"counter_with_tool\">\n        <h1>Patient Reports with Job Tickets</h1>\n        <span class=\"tolTip\">\n          <a mat-raised-button #JobTickets=\"matTooltip\"\n            matTooltip=\"All the Reports listed here are on Hold for further clarification from Doctor through job tickets.\"\n            matTooltipPosition=\"above\" aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n          </a>\n          <a mat-button (click)=\"JobTickets.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n            <span class=\"material-icons\"> help_outline </span>\n          </a>\n        </span>\n      </span>\n    </mat-card-content>\n\n    <app-job-ticket-patient-reports></app-job-ticket-patient-reports>\n\n  </mat-card-content>\n  <!-- Patient Reports with Job Tickets end here -->\n\n</mat-card>\n\n<app-admin-footer></app-admin-footer>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/admin-dashboard/approved-patient-reports/approved-patient-reports.component.html":
  /*!*********************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/admin-dashboard/approved-patient-reports/approved-patient-reports.component.html ***!
    \*********************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminAdminDashboardApprovedPatientReportsApprovedPatientReportsComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- table -->\n<lib-listing\nclass=\"DataTable\" \n*ngIf=\"allBillerData.length>0\" \n[datasource]=\"allBillerData\" \n[skip]=\"allUserData_skip\"\n[modify_header_array]=\"allUserData_modify_header\" \n[detail_skip_array]=\"previewModal_detail_skip\" \n[apiurl]=\"apiUrl\"\n[sourcedata]=\"tableName\" \n[editroute]=\"editUrl\" \n[jwttoken]=\"jwtToken\" \n[statusarr]=\"status\"\n[updateendpoint]=\"UpdateEndpoint\" \n[deleteendpoint]=\"deleteEndpoint\" \n[date_search_endpoint]=\"SearchingEndpoint\"\n[date_search_source]=\"SearchingSourceName\" \n[search_settings]=\"search_settings\" \n[sortdata]=\"sortdata\" \n[datacollection]=\"datacollection\" \n[libdata]=\"libdata\" \n[date_search_source_count]=\"billerData_count\" \n[limitcond]=\"limitcond\" >\n</lib-listing>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/admin-dashboard/download-details/download-details.component.html":
  /*!*****************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/admin-dashboard/download-details/download-details.component.html ***!
    \*****************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminAdminDashboardDownloadDetailsDownloadDetailsComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<h2 mat-dialog-title>Report Download Details</h2>\n\n<mat-progress-bar mode=\"indeterminate\" *ngIf=\"loader\"></mat-progress-bar>\n\n<mat-dialog-content class=\"mat-typography\">\n    <div class=\"example-container mat-elevation-z8\">\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" style=\"width: 100%;\">\n\n            <!--- Note that these columns can be defined in any order.\n                  The actual rendered columns are set as a property on the row definition\" -->\n\n            <!-- Position Column -->\n            <ng-container matColumnDef=\"position\">\n                <th mat-header-cell *matHeaderCellDef> No. </th>\n                <td mat-cell *matCellDef=\"let element; let i = index;\"> {{ i + 1 }} </td>\n            </ng-container>\n\n            <!-- IP Address Column -->\n            <ng-container matColumnDef=\"ip_address\">\n                <th mat-header-cell *matHeaderCellDef> IP Address </th>\n                <td mat-cell *matCellDef=\"let element\"> {{ element.ip }} </td>\n            </ng-container>\n\n            <!-- Operating System Column -->\n            <ng-container matColumnDef=\"os\">\n                <th mat-header-cell *matHeaderCellDef> Operating System </th>\n                <td mat-cell *matCellDef=\"let element\"> {{ element.device_information.os }} </td>\n            </ng-container>\n\n            <!-- Browser Column -->\n            <ng-container matColumnDef=\"browser\">\n                <th mat-header-cell *matHeaderCellDef> Browser </th>\n                <td mat-cell *matCellDef=\"let element\"> {{ element.device_information.browser }} </td>\n            </ng-container>\n\n            <!-- Device Column -->\n            <ng-container matColumnDef=\"device\">\n                <th mat-header-cell *matHeaderCellDef> Device </th>\n                <td mat-cell *matCellDef=\"let element\"> \n                    <ng-container *ngIf=\"element.device_information.isMobile == true\">Mobile</ng-container> \n                    <ng-container *ngIf=\"element.device_information.isTablet == true\">Tablet</ng-container> \n                    <ng-container *ngIf=\"element.device_information.isDesktop == true\">Desktop</ng-container> \n                </td>\n            </ng-container>\n\n            <!-- Download Attempt Column -->\n            <ng-container matColumnDef=\"download_attempt\">\n                <th mat-header-cell *matHeaderCellDef> Download Attempt </th>\n                <td mat-cell *matCellDef=\"let element\"> {{ element.download_attempt }} </td>\n            </ng-container>\n\n            <!-- Date & Time Column -->\n            <ng-container matColumnDef=\"date_time\">\n                <th mat-header-cell *matHeaderCellDef> Date & Time </th>\n                <td mat-cell *matCellDef=\"let element\"> {{ element.created_at | date  }} </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n\n    </div>\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"end\">\n    <button mat-button color=\"primary\" mat-dialog-close>Close</button>\n</mat-dialog-actions>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/admin-dashboard/edit-patient-record/edit-patient-record.component.html":
  /*!***********************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/admin-dashboard/edit-patient-record/edit-patient-record.component.html ***!
    \***********************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminAdminDashboardEditPatientRecordEditPatientRecordComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<app-admin-header *ngIf=\"allCookies.user_details.user_type == 'admin'\"></app-admin-header>\n\n<!-- Diagnostic Admin Header -->\n<app-diagnostic-admin-header *ngIf=\"allCookies.user_details.user_type == 'diagnostic_admin'\"></app-diagnostic-admin-header>\n\n<!-- Doctor Header -->\n<app-doctor-header *ngIf=\"allCookies.user_details.user_type == 'doctor'\"></app-doctor-header>\n\n\n<mat-card-content class=\"editPatient_wrapper\">\n\n  <mat-card-content class=\"editItems mat-elevation-z5\" *ngIf=\"allPatientDataArray[0].report_type == 'file'\">\n    <mat-card-content class=\"image_slider\">\n\n      <mat-card-content class=\"img_w\">\n        <img [src]=\"allPatientDataArray[0].file_basepath + ImageData[sliderCount].name\">\n      </mat-card-content>\n      \n      <button mat-mini-fab class=\"prev\" (click)=\"playSlider('preview');\"> << </button> \n      <button mat-mini-fab class=\"next\" (click)=\"playSlider('next');\"> >> </button>\n    </mat-card-content>\n  </mat-card-content>\n\n  <mat-card-content class=\"editItems mat-elevation-z5\" [ngClass]=\"{display_section: allPatientDataArray[0].report_type == 'mannual'}\"\n    *ngIf=\"allPatientDataArray[0].report_type == 'mannual' || allPatientDataArray[0].report_type == 'file' \">\n\n    <!-- patient form start here -->\n    <mat-card class=\"add_form\">\n      <mat-card-content>\n        <form class=\"example-form\" autocomplete=\"off\" name=\"patientAddEditForm\" [formGroup]=\"patientAddEditForm\"\n          (ngSubmit)=\"patientAddEditFormSubmit()\">\n  \n          <fieldset class=\"field_setmodel\">\n            <legend class=\"legend_model\">Patients Information:</legend>\n  \n            <span class=\"patients_info_wrapper\">\n              <!-- Patient Name Start -->\n              <mat-card-content>\n                <label>Patient Name</label>\n                <mat-form-field>\n                  <input matInput [formControl]=\"patientAddEditForm.controls['patient_name']\"\n                    (blur)=\"inputUntouch(patientAddEditForm,'patient_name')\">\n                  <mat-error\n                    *ngIf=\"patientAddEditForm.controls['patient_name'].touched && !patientAddEditForm.controls['patient_name'].valid && patientAddEditForm.controls['patient_name'].errors.required\">\n                    Patient Name can not be blank</mat-error>\n                </mat-form-field>\n              </mat-card-content>\n              <!-- Patient Name End -->\n  \n              <!-- Patient Gender Start -->\n              <mat-card-content>\n                <label>Patient Gender</label>\n                <span class=\"patientGender\">\n                  <input type=\"radio\" value='Male' [formControl]=\"patientAddEditForm.controls['gender']\">Male\n                  <input type=\"radio\" value='Female' [formControl]=\"patientAddEditForm.controls['gender']\">Female\n                </span>\n  \n                <mat-error\n                  *ngIf=\"patientAddEditForm.controls['gender'].touched && !patientAddEditForm.controls['gender'].valid && patientAddEditForm.controls['gender'].errors.required\">\n                  Birth Date can not be blank.</mat-error>\n              </mat-card-content>\n              <!-- Patient Gender End -->\n  \n              <!-- Date of Birth Start -->\n              <mat-card-content>\n                <label> Date of birth</label>\n                <mat-form-field>\n                  <input matInput [matDatepicker]=\"dobPicker\" [formControl]=\"patientAddEditForm.controls['birth_date']\">\n                  <mat-datepicker-toggle matSuffix [for]=\"dobPicker\"></mat-datepicker-toggle>\n                  <mat-datepicker #dobPicker></mat-datepicker>\n  \n                  <mat-error\n                    *ngIf=\"patientAddEditForm.controls['birth_date'].touched && !patientAddEditForm.controls['birth_date'].valid && patientAddEditForm.controls['birth_date'].errors.required\">\n                    Birth Date can not be blank.</mat-error>\n                </mat-form-field>\n              </mat-card-content>\n              <!-- Date of Birth End -->\n  \n              <!-- Ordering Physician Start -->\n              <mat-card-content>\n                <label>Ordering Physician</label>\n                <mat-form-field>\n                  <mat-select [formControl]=\"patientAddEditForm.controls['doctor_id']\" placeholder=\"Select a Doctor\"\n                    (selectionChange)=\"getTechList($event.value);\">\n                    <mat-option>Select a Doctor</mat-option>\n                    <mat-option *ngFor=\"let doctor of htmlText.allDoctor;\" value=\"{{ doctor._id }}\"> {{ doctor.firstname }} {{ doctor.lastname }}\n                    </mat-option>\n                  </mat-select>\n  \n                  <mat-error\n                    *ngIf=\"patientAddEditForm.controls['doctor_id'].touched && !patientAddEditForm.controls['doctor_id'].valid && patientAddEditForm.controls['doctor_id'].errors.required\">\n                    Select a doctor.</mat-error>\n                </mat-form-field>\n              </mat-card-content>\n              <!-- Ordering Physician End -->\n  \n              <!-- Tech Name Start -->\n              <mat-card-content>\n                <label> Tech Name </label>\n                <mat-form-field>\n                  <mat-select [formControl]=\"patientAddEditForm.controls['tech_id']\" (selectionChange)=\"selectTech($event.value);\" placeholder=\"Select a Tech\">\n                    <mat-option>Select a Tech</mat-option>\n                    <mat-option *ngFor=\"let tech of htmlText.allTech;\" value=\"{{ tech.tech_id }}\"> {{ tech.firstname }} {{ tech.lastname }}\n                    </mat-option>\n                  </mat-select>\n  \n                  <mat-error\n                    *ngIf=\"patientAddEditForm.controls['tech_id'].touched && !patientAddEditForm.controls['tech_id'].valid && patientAddEditForm.controls['tech_id'].errors.required\">\n                    Select a tech.</mat-error>\n                </mat-form-field>\n              </mat-card-content>\n              <!-- Tech Name End -->\n  \n              <!-- Test Date Start -->\n              <mat-card-content>\n                <label> Test Date</label>\n                <mat-form-field>\n                  <input matInput [matDatepicker]=\"testDatePicker\"\n                    [formControl]=\"patientAddEditForm.controls['test_date']\">\n                  <mat-datepicker-toggle matSuffix [for]=\"testDatePicker\"></mat-datepicker-toggle>\n                  <mat-datepicker #testDatePicker></mat-datepicker>\n                </mat-form-field>\n  \n                <mat-error\n                  *ngIf=\"patientAddEditForm.controls['test_date'].touched && !patientAddEditForm.controls['test_date'].valid && patientAddEditForm.controls['test_date'].errors.required\">\n                  Test date can not be blank.</mat-error>\n              </mat-card-content>\n              <!-- Test Date Start -->\n  \n              <!-- Tech Completed Start -->\n              <mat-card-content>\n                <label> Test Completed</label>\n                <mat-form-field>\n                  <input matInput [matDatepicker]=\"testCompletedDatePicker\"\n                    [formControl]=\"patientAddEditForm.controls['test_completed_date']\">\n                  <mat-datepicker-toggle matSuffix [for]=\"testCompletedDatePicker\"></mat-datepicker-toggle>\n                  <mat-datepicker #testCompletedDatePicker></mat-datepicker>\n                </mat-form-field>\n  \n                <mat-error\n                  *ngIf=\"patientAddEditForm.controls['test_completed_date'].touched && !patientAddEditForm.controls['test_completed_date'].valid && patientAddEditForm.controls['test_completed_date'].errors.required\">\n                  Test Completed Date can not be blank.</mat-error>\n              </mat-card-content>\n              <!-- Test Completed Start -->\n  \n            </span>\n          </fieldset>\n  \n          <br>\n  \n          <fieldset class=\"field_setmodel\">\n            <legend class=\"legend_model\">RM-3A Status report</legend>\n            <span class=\"test_date_wrapper\">\n  \n              <!-- PTGTP Start -->\n              <mat-card-content>\n                <label>PTGTP</label>\n                <mat-form-field>\n                  <mat-select [formControl]=\"patientAddEditForm.controls['PTGTP']\"\n                    (blur)=\"inputUntouch(patientAddEditForm,'PTGTP')\" placeholder=\"Select a Option\">\n                    <mat-option>Select a option</mat-option>\n                    <mat-option value=\"N\"> Normal</mat-option>\n                    <mat-option value=\"A\"> Abnormal</mat-option>\n                    <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                  </mat-select>\n  \n                  <mat-error\n                    *ngIf=\"patientAddEditForm.controls['PTGTP'].touched && !patientAddEditForm.controls['PTGTP'].valid && patientAddEditForm.controls['PTGTP'].errors.required\">\n                    PTGTP Required.</mat-error>\n                </mat-form-field>\n  \n                <mat-form-field class=\"subValue\">\n                  <input matInput [formControl]=\"patientAddEditForm.controls['PTGTP_value']\" placeholder=\"PTGTP value\" />\n                  <mat-hint align=\"start\"> <strong>Optional field.</strong></mat-hint>\n                </mat-form-field>\n              </mat-card-content>\n              <!-- PTGTP End -->\n  \n              <!-- PTGVLFI Start -->\n              <mat-card-content>\n                <label> PTGVLFI </label>\n                <mat-form-field>\n                  <mat-select [formControl]=\"patientAddEditForm.controls['PTGVLFI']\"\n                    (blur)=\"inputUntouch(patientAddEditForm,'PTGVLFI')\" placeholder=\"Select a Option\">\n                    <mat-option>Select a option</mat-option>\n                    <mat-option value=\"N\"> Normal</mat-option>\n                    <mat-option value=\"A\"> Abnormal</mat-option>\n                    <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                  </mat-select>\n  \n                  <mat-error\n                    *ngIf=\"patientAddEditForm.controls['PTGVLFI'].touched && !patientAddEditForm.controls['PTGVLFI'].valid && patientAddEditForm.controls['PTGVLFI'].errors.required\">\n                    PTGVLFI required.</mat-error>\n                </mat-form-field>\n  \n                <mat-form-field class=\"subValue\">\n                  <input matInput [formControl]=\"patientAddEditForm.controls['PTGVLFI_value']\"\n                    placeholder=\"PTGVLFI value\" />\n                </mat-form-field>\n              </mat-card-content>\n              <!-- PTGVLFI End -->\n  \n              <!-- IR Start -->\n              <mat-card-content>\n                <label> IR </label>\n                <mat-form-field>\n                  <mat-select [formControl]=\"patientAddEditForm.controls['IR']\"\n                    (blur)=\"inputUntouch(patientAddEditForm,'IR')\" placeholder=\"Select a Option\">\n                    <mat-option>Select a option</mat-option>\n                    <mat-option value=\"N\"> Normal</mat-option>\n                    <mat-option value=\"A\"> Abnormal</mat-option>\n                    <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                  </mat-select>\n  \n                  <mat-error\n                    *ngIf=\"patientAddEditForm.controls['IR'].touched && !patientAddEditForm.controls['IR'].valid && patientAddEditForm.controls['IR'].errors.required\">\n                    IR required.</mat-error>\n                </mat-form-field>\n  \n                <mat-form-field class=\"subValue\">\n                  <input matInput [formControl]=\"patientAddEditForm.controls['IR_value']\" placeholder=\"IR value\" />\n                </mat-form-field>\n              </mat-card-content>\n              <!-- IR End -->\n  \n              <!-- ESRNO Start -->\n              <mat-card-content>\n                <label> ESRNO<br> (Baseline) </label>\n                <mat-form-field>\n                  <mat-select [formControl]=\"patientAddEditForm.controls['ESRNO']\"\n                    (blur)=\"inputUntouch(patientAddEditForm,'ESRNO')\" placeholder=\"Select a Option\">\n                    <mat-option>Select a option</mat-option>\n                    <mat-option value=\"N\"> Normal</mat-option>\n                    <mat-option value=\"A\"> Abnormal</mat-option>\n                    <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                  </mat-select>\n  \n                  <mat-error\n                    *ngIf=\"patientAddEditForm.controls['ESRNO'].touched && !patientAddEditForm.controls['ESRNO'].valid && patientAddEditForm.controls['ESRNO'].errors.required\">\n                    ESRNO required.</mat-error>\n                </mat-form-field>\n  \n                <mat-form-field class=\"subValue\">\n                  <input matInput [formControl]=\"patientAddEditForm.controls['ESRNO_value']\" placeholder=\"ESRNO value\" />\n                </mat-form-field>\n              </mat-card-content>\n  \n  \n              <mat-card-content>\n                <label> ESR L<br> (Latency) </label>\n                <mat-form-field>\n                  <mat-select [formControl]=\"patientAddEditForm.controls['ESRL']\"\n                    (blur)=\"inputUntouch(patientAddEditForm,'ESRL')\" placeholder=\"Select a Option\">\n                    <mat-option>Select a option</mat-option>\n                    <mat-option value=\"N\"> Normal</mat-option>\n                    <mat-option value=\"A\"> Abnormal</mat-option>\n                    <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                  </mat-select>\n  \n                  <mat-error\n                    *ngIf=\"patientAddEditForm.controls['ESRL'].touched && !patientAddEditForm.controls['ESRL'].valid && patientAddEditForm.controls['ESRL'].errors.required\">\n                    ESR L required.</mat-error>\n                </mat-form-field>\n  \n                <mat-form-field class=\"subValue\">\n                  <input matInput [formControl]=\"patientAddEditForm.controls['ESRL_value']\" placeholder=\"ESRL value\" />\n                </mat-form-field>\n              </mat-card-content>\n  \n  \n              <mat-card-content>\n                <label> Peak C <br> (Amplitude) </label>\n                <mat-form-field>\n                  <mat-select [formControl]=\"patientAddEditForm.controls['peakC']\"\n                    (blur)=\"inputUntouch(patientAddEditForm,'peakC')\" placeholder=\"Select a Option\">\n                    <mat-option>Select a option</mat-option>\n                    <mat-option value=\"N\"> Normal</mat-option>\n                    <mat-option value=\"A\"> Abnormal</mat-option>\n                    <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                  </mat-select>\n  \n                  <mat-error\n                    *ngIf=\"patientAddEditForm.controls['peakC'].touched && !patientAddEditForm.controls['peakC'].valid && patientAddEditForm.controls['peakC'].errors.required\">\n                    Peak C required.</mat-error>\n                </mat-form-field>\n  \n                <mat-form-field class=\"subValue\">\n                  <input matInput [formControl]=\"patientAddEditForm.controls['peakC_value']\" placeholder=\"peakC value\" />\n                </mat-form-field>\n              </mat-card-content>\n  \n  \n              <mat-card-content>\n                <label> PTG Type <br> (EnterType 1-5) </label>\n                <mat-form-field>\n                  <mat-select [formControl]=\"patientAddEditForm.controls['PTGtype']\"\n                    (blur)=\"inputUntouch(patientAddEditForm,'PTGtype')\" placeholder=\"Select a Option\">\n                    <mat-option>Select a option</mat-option>\n                    <mat-option value=\"N\"> Normal</mat-option>\n                    <mat-option value=\"A\"> Abnormal</mat-option>\n                    <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                  </mat-select>\n  \n                  <mat-error\n                    *ngIf=\"patientAddEditForm.controls['PTGtype'].touched && !patientAddEditForm.controls['PTGtype'].valid && patientAddEditForm.controls['PTGtype'].errors.required\">\n                    PTG Type required.</mat-error>\n                </mat-form-field>\n  \n                <mat-form-field class=\"subValue\">\n                  <input matInput [formControl]=\"patientAddEditForm.controls['PTGtype_value']\"\n                    placeholder=\"PTG Type value\" />\n  \n                  <mat-error\n                    *ngIf=\"patientAddEditForm.controls['PTGtype_value'].touched && !patientAddEditForm.controls['PTGtype_value'].valid && patientAddEditForm.controls['PTGtype_value'].errors.required\">\n                    PTG Type value required.</mat-error>\n                  <mat-error\n                    *ngIf=\"patientAddEditForm.controls['PTGtype_value'].touched && !patientAddEditForm.controls['PTGtype_value'].valid && patientAddEditForm.controls['PTGtype_value'].errors.pattern\">\n                    PTG Type value is not valid.</mat-error>\n                </mat-form-field>\n              </mat-card-content>\n  \n  \n              <mat-card-content>\n                <label> PTG CVD </label>\n                <mat-form-field>\n                  <mat-select [formControl]=\"patientAddEditForm.controls['PTGCVD']\"\n                    (blur)=\"inputUntouch(patientAddEditForm,'PTGCVD')\" placeholder=\"Select a Option\">\n                    <mat-option>Select a option</mat-option>\n                    <mat-option value=\"N\"> Normal</mat-option>\n                    <mat-option value=\"A\"> Abnormal</mat-option>\n                    <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                  </mat-select>\n  \n                  <mat-error\n                    *ngIf=\"patientAddEditForm.controls['PTGCVD'].touched && !patientAddEditForm.controls['PTGCVD'].valid && patientAddEditForm.controls['PTGCVD'].errors.required\">\n                    PTG CVD required.</mat-error>\n                </mat-form-field>\n  \n                <mat-form-field class=\"subValue\">\n                  <input matInput [formControl]=\"patientAddEditForm.controls['PTGCVD_value']\"\n                    placeholder=\"PTGCVD value\" />\n                </mat-form-field>\n              </mat-card-content>\n  \n  \n              <mat-card-content>\n                <label> Stress I <br> (Stress Index) </label>\n                <mat-form-field>\n                  <mat-select [formControl]=\"patientAddEditForm.controls['stressI']\"\n                    (blur)=\"inputUntouch(patientAddEditForm,'stressI')\" placeholder=\"Select a Option\">\n                    <mat-option>Select a option</mat-option>\n                    <mat-option value=\"N\"> Normal</mat-option>\n                    <mat-option value=\"A\"> Abnormal</mat-option>\n                    <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                  </mat-select>\n  \n                  <mat-error\n                    *ngIf=\"patientAddEditForm.controls['stressI'].touched && !patientAddEditForm.controls['stressI'].valid && patientAddEditForm.controls['stressI'].errors.required\">\n                    Stress I required.</mat-error>\n                </mat-form-field>\n  \n                <mat-form-field class=\"subValue\">\n                  <input matInput [formControl]=\"patientAddEditForm.controls['stressI_value']\"\n                    placeholder=\"Stress I value\" />\n                </mat-form-field>\n              </mat-card-content>\n  \n  \n              <mat-card-content>\n                <label> RI </label>\n                <mat-form-field>\n                  <mat-select [formControl]=\"patientAddEditForm.controls['RI']\"\n                    (blur)=\"inputUntouch(patientAddEditForm,'RI')\" placeholder=\"Select a Option\">\n                    <mat-option>Select a option</mat-option>\n                    <mat-option value=\"N\"> Normal</mat-option>\n                    <mat-option value=\"A\"> Abnormal</mat-option>\n                    <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                  </mat-select>\n  \n                  <mat-error\n                    *ngIf=\"patientAddEditForm.controls['RI'].touched && !patientAddEditForm.controls['RI'].valid && patientAddEditForm.controls['RI'].errors.required\">\n                    RI required.</mat-error>\n                </mat-form-field>\n  \n                <mat-form-field class=\"subValue\">\n                  <input matInput [formControl]=\"patientAddEditForm.controls['RI_value']\" placeholder=\"Stress I value\" />\n                </mat-form-field>\n              </mat-card-content>\n  \n              <mat-card-content>\n                <label> AIPTG<br> (IPTG) </label>\n                <mat-form-field>\n                  <mat-select [formControl]=\"patientAddEditForm.controls['AIPTG']\"\n                    (blur)=\"inputUntouch(patientAddEditForm,'AIPTG')\" placeholder=\"Select a Option\">\n                    <mat-option>Select a option</mat-option>\n                    <mat-option value=\"N\"> Normal</mat-option>\n                    <mat-option value=\"A\"> Abnormal</mat-option>\n                    <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                  </mat-select>\n  \n                  <mat-error\n                    *ngIf=\"patientAddEditForm.controls['AIPTG'].touched && !patientAddEditForm.controls['AIPTG'].valid && patientAddEditForm.controls['AIPTG'].errors.required\">\n                    AIPTG required.</mat-error>\n                </mat-form-field>\n  \n                <mat-form-field class=\"subValue\">\n                  <input matInput [formControl]=\"patientAddEditForm.controls['AIPTG_value']\" placeholder=\"AIPTG value\" />\n                </mat-form-field>\n              </mat-card-content>\n  \n  \n              <mat-card-content>\n                <label> CIs (CI) </label>\n                <mat-form-field>\n                  <mat-select [formControl]=\"patientAddEditForm.controls['CIsCI']\"\n                    (blur)=\"inputUntouch(patientAddEditForm, 'CIsCI')\" placeholder=\"Select a Option\">\n                    <mat-option>Select a option</mat-option>\n                    <mat-option value=\"N\"> Normal</mat-option>\n                    <mat-option value=\"A\"> Abnormal</mat-option>\n                    <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                  </mat-select>\n  \n                  <mat-error\n                    *ngIf=\"patientAddEditForm.controls['CIsCI'].touched && !patientAddEditForm.controls['CIsCI'].valid && patientAddEditForm.controls['CIsCI'].errors.required\">\n                    CIs (CI) required.</mat-error>\n                </mat-form-field>\n  \n                <mat-form-field class=\"subValue\">\n                  <input matInput [formControl]=\"patientAddEditForm.controls['CIsCI_value']\" placeholder=\"CIsCI value\">\n                </mat-form-field>\n              </mat-card-content>\n  \n  \n              <mat-card-content>\n                <label> pNN50 </label>\n                <mat-form-field>\n                  <mat-select [formControl]=\"patientAddEditForm.controls['pNN50']\"\n                    (blur)=\"inputUntouch(patientAddEditForm,'pNN50')\" placeholder=\"Select a Option\">\n                    <mat-option>Select a option</mat-option>\n                    <mat-option value=\"N\"> Normal</mat-option>\n                    <mat-option value=\"A\"> Abnormal</mat-option>\n                    <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                  </mat-select>\n  \n                  <mat-error\n                    *ngIf=\"patientAddEditForm.controls['pNN50'].touched && !patientAddEditForm.controls['pNN50'].valid && patientAddEditForm.controls['pNN50'].errors.required\">\n                    pNN50 required.</mat-error>\n                </mat-form-field>\n  \n                <mat-form-field class=\"subValue\">\n                  <input matInput [formControl]=\"patientAddEditForm.controls['pNN50_value']\" placeholder=\"pNN50 value\" />\n                </mat-form-field>\n              </mat-card-content>\n  \n  \n              <mat-card-content>\n                <label> RMSSD </label>\n                <mat-form-field>\n                  <mat-select [formControl]=\"patientAddEditForm.controls['RMSSD']\"\n                    (blur)=\"inputUntouch(patientAddEditForm,'pNN50')\" placeholder=\"Select a Option\">\n                    <mat-option>Select a option</mat-option>\n                    <mat-option value=\"N\"> Normal</mat-option>\n                    <mat-option value=\"A\"> Abnormal</mat-option>\n                    <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                  </mat-select>\n  \n                  <mat-error\n                    *ngIf=\"patientAddEditForm.controls['RMSSD'].touched && !patientAddEditForm.controls['RMSSD'].valid && patientAddEditForm.controls['RMSSD'].errors.required\">\n                    RMSSD required.</mat-error>\n                </mat-form-field>\n  \n                <mat-form-field class=\"subValue\">\n                  <input matInput [formControl]=\"patientAddEditForm.controls['RMSSD_value']\" placeholder=\"RMSSD value\" />\n                </mat-form-field>\n              </mat-card-content>\n  \n  \n              <mat-card-content>\n                <label> SD ba - </label>\n                <mat-form-field>\n                  <mat-select [formControl]=\"patientAddEditForm.controls['SDba']\"\n                    (blur)=\"inputUntouch(patientAddEditForm,'SDba')\" placeholder=\"Select a Option\">\n                    <mat-option>Select a option</mat-option>\n                    <mat-option value=\"N\"> Normal</mat-option>\n                    <mat-option value=\"A\"> Abnormal</mat-option>\n                    <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                  </mat-select>\n  \n                  <mat-error\n                    *ngIf=\"patientAddEditForm.controls['SDba'].touched && !patientAddEditForm.controls['SDba'].valid && patientAddEditForm.controls['SDba'].errors.required\">\n                    SD ba - required.</mat-error>\n                </mat-form-field>\n  \n                <mat-form-field class=\"subValue\">\n                  <input matInput [formControl]=\"patientAddEditForm.controls['SDba_value']\" placeholder=\"SDba value\" />\n                </mat-form-field>\n              </mat-card-content>\n  \n  \n              <mat-card-content>\n                <label> SD da </label>\n                <mat-form-field>\n                  <mat-select [formControl]=\"patientAddEditForm.controls['SDda']\"\n                    (blur)=\"inputUntouch(patientAddEditForm,'SDda')\" placeholder=\"Select a Option\">\n                    <mat-option>Select a option</mat-option>\n                    <mat-option value=\"N\"> Normal</mat-option>\n                    <mat-option value=\"A\"> Abnormal</mat-option>\n                    <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                  </mat-select>\n  \n                  <mat-error\n                    *ngIf=\"patientAddEditForm.controls['SDda'].touched && !patientAddEditForm.controls['SDda'].valid && patientAddEditForm.controls['SDda'].errors.required\">\n                    SD da required.</mat-error>\n                </mat-form-field>\n  \n                <mat-form-field class=\"subValue\">\n                  <input matInput [formControl]=\"patientAddEditForm.controls['SDda_value']\" placeholder=\"SDda value\" />\n                </mat-form-field>\n              </mat-card-content>\n  \n  \n              <mat-card-content>\n                <label>DPRS </label>\n                <mat-form-field>\n                  <mat-select [formControl]=\"patientAddEditForm.controls['DPRS']\"\n                    (blur)=\"inputUntouch(patientAddEditForm,'DPRS')\" placeholder=\"Select a Option\">\n                    <mat-option>Select a option</mat-option>\n                    <mat-option value=\"N\"> Normal</mat-option>\n                    <mat-option value=\"A\"> Abnormal</mat-option>\n                    <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                  </mat-select>\n  \n                  <mat-error\n                    *ngIf=\"patientAddEditForm.controls['DPRS'].touched && !patientAddEditForm.controls['DPRS'].valid && patientAddEditForm.controls['DPRS'].errors.required\">\n                    DPRS required.</mat-error>\n                </mat-form-field>\n  \n                <mat-form-field class=\"subValue\">\n                  <input matInput [formControl]=\"patientAddEditForm.controls['DPRS_value']\" placeholder=\"DPRS value\" />\n                </mat-form-field>\n              </mat-card-content>\n  \n              <mat-card-content>\n                <label>ValsR. </label>\n                <mat-form-field>\n                  <mat-select [formControl]=\"patientAddEditForm.controls['ValsR']\"\n                    (blur)=\"inputUntouch(patientAddEditForm,'ValsR')\" placeholder=\"Select a Option\">\n                    <mat-option>Select a option</mat-option>\n                    <mat-option value=\"N\"> Normal</mat-option>\n                    <mat-option value=\"A\"> Abnormal</mat-option>\n                    <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                  </mat-select>\n  \n                  <mat-error\n                    *ngIf=\"patientAddEditForm.controls['ValsR'].touched && !patientAddEditForm.controls['ValsR'].valid && patientAddEditForm.controls['ValsR'].errors.required\">\n                    ValsR required.</mat-error>\n                </mat-form-field>\n  \n                <mat-form-field class=\"subValue\">\n                  <input matInput [formControl]=\"patientAddEditForm.controls['ValsR_value']\" placeholder=\"ValsR value\" />\n                </mat-form-field>\n              </mat-card-content>\n  \n  \n              <mat-card-content>\n                <label>BMI<br> Enter BMI Score (I.E. 29.1) </label>\n                <mat-form-field>\n                  <input matInput [formControl]=\"patientAddEditForm.controls['BMI']\" placeholder=\"BMI value\" />\n  \n                  <mat-error\n                    *ngIf=\"patientAddEditForm.controls['BMI'].touched && !patientAddEditForm.controls['BMI'].valid && patientAddEditForm.controls['BMI'].errors.required\">\n                    BMI value required.</mat-error>\n                  <mat-error\n                    *ngIf=\"patientAddEditForm.controls['BMI'].touched && !patientAddEditForm.controls['BMI'].valid && patientAddEditForm.controls['BMI'].errors.pattern\">\n                    BMI value is not valid.</mat-error>\n                </mat-form-field>\n              </mat-card-content>\n  \n  \n              <mat-card-content>\n                <label>Blood Pressure<br> Systolic & Diastolic (120/80) </label>\n                <mat-form-field>\n                  <mat-select [formControl]=\"patientAddEditForm.controls['blood_pressure']\"\n                    (blur)=\"inputUntouch(patientAddEditForm,'blood_pressure')\" placeholder=\"Select a Option\">\n                    <mat-option>Select a option</mat-option>\n                    <mat-option value=\"N\"> Normal</mat-option>\n                    <mat-option value=\"A\"> Abnormal</mat-option>\n                    <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                  </mat-select>\n  \n                  <mat-error\n                    *ngIf=\"patientAddEditForm.controls['blood_pressure'].touched && !patientAddEditForm.controls['blood_pressure'].valid && patientAddEditForm.controls['blood_pressure'].errors.required\">\n                    Blood Pressure required.</mat-error>\n                </mat-form-field>\n  \n                <mat-form-field class=\"subValue\">\n                  <input matInput [formControl]=\"patientAddEditForm.controls['systolic_value']\"\n                    placeholder=\"Systolic value\" />\n  \n                  <mat-error\n                    *ngIf=\"patientAddEditForm.controls['systolic_value'].touched && !patientAddEditForm.controls['systolic_value'].valid && patientAddEditForm.controls['systolic_value'].errors.required\">\n                    Systolic value required.</mat-error>\n                  <mat-error\n                    *ngIf=\"patientAddEditForm.controls['systolic_value'].touched && !patientAddEditForm.controls['systolic_value'].valid && patientAddEditForm.controls['systolic_value'].errors.pattern\">\n                    Systolic value is not valid.</mat-error>\n                </mat-form-field>\n  \n                <mat-form-field class=\"subValue\">\n                  <input matInput [formControl]=\"patientAddEditForm.controls['diastolic_value']\"\n                    placeholder=\"Diastolic value\" />\n  \n                  <mat-error\n                    *ngIf=\"patientAddEditForm.controls['diastolic_value'].touched && !patientAddEditForm.controls['diastolic_value'].valid && patientAddEditForm.controls['diastolic_value'].errors.required\">\n                    Systolic value required.</mat-error>\n                  <mat-error\n                    *ngIf=\"patientAddEditForm.controls['diastolic_value'].touched && !patientAddEditForm.controls['diastolic_value'].valid && patientAddEditForm.controls['diastolic_value'].errors.pattern\">\n                    Diastolic value is not valid.</mat-error>\n                </mat-form-field>\n              </mat-card-content>\n  \n            </span>\n          </fieldset>\n  \n          <br>\n  \n          <fieldset class=\"field_setmodel\">\n            <legend class=\"legend_model\">additional notes</legend>\n  \n            <br>\n  \n            <span class=\"patient_diagnotes\">\n              <label>Patient Diagnoses & Notes:</label>\n              <mat-form-field class=\"example-full-width\">\n  \n                <textarea matInput placeholder=\"Leave a comment\" [formControl]=\"patientAddEditForm.controls['leave_notes']\"\n                  (blur)=\"inputUntouch(patientAddEditForm,'leave_notes')\"></textarea>\n                <mat-error\n                  *ngIf=\"patientAddEditForm.controls['leave_notes'].touched && !patientAddEditForm.controls['leave_notes'].valid && patientAddEditForm.controls['leave_notes'].errors.required\">\n                  Patient Diagnoses & Notes can not be blank</mat-error>\n              </mat-form-field>\n            </span>\n            \n          </fieldset>\n        </form>\n      </mat-card-content>\n    </mat-card>\n\n  </mat-card-content>\n  <!-- patient form end here -->\n</mat-card-content>\n\n\n<mat-toolbar class=\"action_button\">\n  <button mat-flat-button type=\"reset\">Reset </button>\n  <button mat-flat-button type=\"button\" (click)=\"patientAddEditFormSubmit()\"> update </button>\n</mat-toolbar>\n\n<app-admin-footer></app-admin-footer>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/admin-dashboard/hold-report-job-ticket/hold-report-job-ticket.component.html":
  /*!*****************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/admin-dashboard/hold-report-job-ticket/hold-report-job-ticket.component.html ***!
    \*****************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminAdminDashboardHoldReportJobTicketHoldReportJobTicketComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- Admin Header -->\n<app-admin-header *ngIf=\"htmlText.user_details.user_type == 'admin'\"></app-admin-header>\n\n<app-doctor-header *ngIf=\"htmlText.user_details.user_type == 'doctor'\"></app-doctor-header>\n\n<app-adminbiller-header *ngIf=\"htmlText.user_details.user_type == 'admin_biller'\"></app-adminbiller-header>\n\n<mat-card class=\"admin_wrapper\">\n    <mat-card-content class=\"title_wrapper\">Conversation</mat-card-content>\n\n    <mat-card-content class=\"job_reprt_wrapper\" *ngIf=\"this.htmlText.oldTickets.length > 0\">\n        <mat-toolbar class=\"job_reprt_action\" *ngIf=\"htmlText.user_details.user_type != 'doctor'\">\n            <button mat-raised-button color=\"primary\" (click)=\"changeStatus('approved');\">Approved</button>\n            <button mat-raised-button color=\"primary\" (click)=\"changeStatus('not approved');\">Not Approved</button>\n        </mat-toolbar>\n\n        <ng-container *ngFor=\"let ticket of htmlText.oldTickets; let ticketIndex = index;\">\n            <mat-card class=\"job_seeker_details\">\n                <mat-card-header>\n                    <div mat-card-avatar class=\"example-header-image\"></div>\n                    <mat-card-title>{{ ticket.user_name | titlecase }}</mat-card-title>\n                    <mat-card-subtitle>{{ ticket.user_type | titlecase }}, Posted on:\n                        {{ ticket.created_datetime | date }} ({{ ticket.created_datetime | timeAgo }})\n                    </mat-card-subtitle>\n                </mat-card-header>\n\n                <mat-card-content class=\"report_desc\">\n                    <p [innerHTML]=\"ticket.description\"></p>\n                </mat-card-content>\n\n                <section class=\"itm\">\n                    <h2 class=\"count_n\"> Total Attachment: {{ ticket.files.length }}</h2>\n                    <mat-toolbar class=\"report_image_w\">\n                        <mat-card-content class=\"image_items\" *ngFor=\"let file of ticket.files; let fileIndex = index;\"\n                            (deferLoad)=\"file.show = true\">\n                            <ng-container *ngIf=\"file.show\">\n                                <!-- <img style=\"cursor: pointer;\"\n                                    [defaultImage]=\"'../../../../../assets/images/image-loader.svg'\"\n                                    [lazyLoad]=\"file.image_path\" /> -->\n                                <img style=\"cursor: pointer;\" [src]=\"file.image_path\" (load)=\"hideLoader();\" />\n                            </ng-container>\n\n                            <mat-spinner *ngIf=\"!file.show\"></mat-spinner>\n\n                            <span class=\"report_action_wrapper\">\n                                <button mat-button (click)=\"viewImage(ticketIndex, fileIndex);\">preview</button>\n                                <button mat-button\n                                    (click)=\"downloadAttachment(ticketIndex, fileIndex);\">download</button>\n                            </span>\n\n\n                        </mat-card-content>\n                    </mat-toolbar>\n                </section>\n            </mat-card>\n        </ng-container>\n\n        <mat-toolbar class=\"job_reprt_action\" *ngIf=\"htmlText.user_details.user_type != 'doctor'\">\n\n            <button style=\"margin: 4px;\" mat-raised-button color=\"primary\"\n                (click)=\"changeStatus('approved');\">Approved</button>\n            <button style=\"margin: 4px;\" mat-raised-button color=\"primary\" (click)=\"changeStatus('not approved');\">Not\n                Approved</button>\n        </mat-toolbar>\n    </mat-card-content>\n\n    <ng-container *ngIf=\"this.htmlText.oldTickets.length == 0\">\n        <p> No record found. </p>\n    </ng-container>\n</mat-card>\n\n\n<!-- header with add button -->\n<mat-card class=\"admin_wrapper\"\n    *ngIf=\"this.htmlText.oldTickets.length > 0 || htmlText.user_details.user_type != 'doctor'\">\n    <mat-card-content class=\"title_wrapper\">\n        {{ htmlText.header }}\n    </mat-card-content>\n    <!-- End header with add button -->\n\n    <mat-card class=\"add_form\">\n        <mat-card-content class=\"form_wrapper\">\n            <ckeditor [(ngModel)]=\"htmlText.ckEditorValue\"></ckeditor>\n            <span style=\"color: red;\" *ngIf=\"htmlText.ckeditorError\">Write your description.</span>\n\n            <lib-file-upload [config]=\"configData\" class=\"file_upload\"></lib-file-upload>\n\n            <span class=\"submit_form\">\n                <button mat-flat-button type=\"button\" (click)=\"createJobTickets();\"> {{ htmlText.buttonText }} </button>\n\n                <ng-container *ngIf=\"htmlText.user_details.user_type == 'admin'\">\n                    <button mat-flat-button type=\"button\" [routerLink]=\"['/admin/dashboard']\"> Back</button>\n                </ng-container>\n\n                <button mat-flat-button type=\"reset\" *ngIf=\"params_id == ''\">Reset</button>\n            </span>\n\n        </mat-card-content>\n    </mat-card>\n\n</mat-card>\n\n\n<app-tech-footer></app-tech-footer>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/admin-dashboard/hold-report-job-ticket/view-job-ticket-image/view-job-ticket-image.component.html":
  /*!**************************************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/admin-dashboard/hold-report-job-ticket/view-job-ticket-image/view-job-ticket-image.component.html ***!
    \**************************************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminAdminDashboardHoldReportJobTicketViewJobTicketImageViewJobTicketImageComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<h2 mat-dialog-title>View Screen Shot</h2>\n\n<mat-card class=\"job_modal_wr\">\n    <div class=\"content_jobview\">\n        <!-- <img style=\"cursor: pointer;\" [defaultImage]=\"'../../../../../../assets/images/image-loader.svg'\" [lazyLoad]=\"data.allImages[data.selectImageIndex].basepath + data.allImages[data.selectImageIndex].fileservername\" /> -->\n        <img style=\"cursor: pointer;\" [src]=\"data.allImages[data.selectImageIndex].basepath + data.allImages[data.selectImageIndex].fileservername\" />\n    </div>\n \n    <mat-dialog-actions align=\"end\">\n        <button mat-button *ngIf=\"data.allImages.length > 1\" (click)=\"imageAction('previous');\">Previous</button>\n        <button mat-button *ngIf=\"data.allImages.length > 1\" (click)=\"imageAction('next');\">Next</button>\n        <button mat-button (click)=\"imageAction('download');\">Download</button>\n        <button mat-button mat-dialog-close>Close</button>\n    </mat-dialog-actions>\n\n</mat-card>\n<!-- 9891026509 -->";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/admin-dashboard/job-ticket-patient-reports/job-ticket-patient-reports.component.html":
  /*!*************************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/admin-dashboard/job-ticket-patient-reports/job-ticket-patient-reports.component.html ***!
    \*************************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminAdminDashboardJobTicketPatientReportsJobTicketPatientReportsComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- table -->\n\n<lib-listing\nclass=\"DataTable\" \n*ngIf=\"allBillerData.length>0\" \n[datasource]=\"allBillerData\" \n[skip]=\"allUserData_skip\"\n[modify_header_array]=\"allUserData_modify_header\" \n[detail_skip_array]=\"previewModal_detail_skip\" \n[apiurl]=\"apiUrl\"\n[sourcedata]=\"tableName\" \n[editroute]=\"editUrl\" \n[jwttoken]=\"jwtToken\" \n[statusarr]=\"status\"\n[updateendpoint]=\"UpdateEndpoint\" \n[deleteendpoint]=\"deleteEndpoint\" \n[date_search_endpoint]=\"SearchingEndpoint\"\n[date_search_source]=\"SearchingSourceName\" \n[search_settings]=\"search_settings\" \n[sortdata]=\"sortdata\" \n[datacollection]=\"datacollection\" \n[libdata]=\"libdata\" \n[date_search_source_count]=\"billerData_count\" \n[limitcond]=\"limitcond\" >\n</lib-listing>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/admin-dashboard/view-all-button-list/view-all-button-list.component.html":
  /*!*************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/admin-dashboard/view-all-button-list/view-all-button-list.component.html ***!
    \*************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminAdminDashboardViewAllButtonListViewAllButtonListComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- table -->\n\n<lib-listing\nclass=\"DataTable\" \n*ngIf=\"allBillerData.length>0\" \n[datasource]=\"allBillerData\" \n[skip]=\"allUserData_skip\"\n[modify_header_array]=\"allUserData_modify_header\" \n[detail_skip_array]=\"previewModal_detail_skip\" \n[apiurl]=\"apiUrl\"\n[sourcedata]=\"tableName\" \n[editroute]=\"editUrl\" \n[jwttoken]=\"jwtToken\" \n[statusarr]=\"status\"\n[updateendpoint]=\"UpdateEndpoint\" \n[deleteendpoint]=\"deleteEndpoint\" \n[date_search_endpoint]=\"SearchingEndpoint\"\n[date_search_source]=\"SearchingSourceName\" \n[search_settings]=\"search_settings\" \n[sortdata]=\"sortdata\" \n[datacollection]=\"datacollection\" \n[libdata]=\"libdata\" \n[date_search_source_count]=\"billerData_count\" \n[limitcond]=\"limitcond\" >\n</lib-listing>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/admin-footer/admin-footer.component.html":
  /*!*****************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/admin-footer/admin-footer.component.html ***!
    \*****************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminAdminFooterAdminFooterComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<mat-card-content class=\"footer_section\"  >\n  <!-- [ngClass]=\"{'sticky' : isSticky}\" -->\n  <span class=\"footer_content\">\n\n    <mat-card-content class=\"link\">\n      <a href=\"\">Privacy Policy</a>\n      <a href=\"\"> Terms & conditions</a>\n    </mat-card-content>\n    <p>© Copyright {{ htmlData.year }} Advanced Wellness Solutions- All Rights Reserved</p>\n  </span>\n</mat-card-content>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/admin-header/admin-header.component.html":
  /*!*****************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/admin-header/admin-header.component.html ***!
    \*****************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminAdminHeaderAdminHeaderComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<mat-toolbar class=\"techdashboard_header\" [ngClass]=\"{'sticky' : isSticky}\">\n  <mat-card-content class=\"header_wrapper\">\n    <span class=\"logo_wrapper\" [routerLink]=\"[ '/admin/dashboard' ]\">\n      <img src=\"../../../assets/images/logo.png\">\n    </span>\n\n    <button mat-flat-button (click)=\"menuFunction()\" class=\"togle_menu\"><i class=\"material-icons\"> menu </i></button>\n    <mat-card-content class=\"quotation\" [ngClass]=\"status ? 'success' : 'danger'\" >\n      <mat-nav-list>\n        <a mat-list-item routerLinkActive=\"active\" [routerLink]=\"['/admin/dashboard']\"> Dashboard </a>\n\n        <a mat-list-item routerLinkActive=\"active\" [matMenuTriggerFor]=\"userMenu\"> Users Management\n          <i class=\"material-icons\">keyboard_arrow_down</i>\n        </a>\n        <mat-menu #userMenu=\"matMenu\">\n          <button mat-menu-item [routerLink]=\"['/admin/doctor-management']\" routerLinkActive=\"active\"> Manage Doctor\n          </button>\n          <button mat-menu-item [routerLink]=\"['/admin/biller-management']\" routerLinkActive=\"active\"> Manage Biller\n          </button>\n          <button mat-menu-item [routerLink]=\"['/admin/tech-management']\" routerLinkActive=\"active\"> Manage Tech\n          </button>\n          <button mat-menu-item [routerLink]=\"['/admin/admin-management']\" routerLinkActive=\"active\"> Manage Admin\n          </button>\n          <button mat-menu-item [routerLink]=\"['/admin/doctor-office-management']\" routerLinkActive=\"active\"> Doctor's\n            Office </button>\n          <button mat-menu-item [routerLink]=\"['/admin/diagnostic-admin-management']\" routerLinkActive=\"active\">\n            Diagnostic Admin </button>\n          <button mat-menu-item [routerLink]=\"['/admin/sales-person-management']\" routerLinkActive=\"active\"> Sales\n            Person </button>\n          <button mat-menu-item [routerLink]=\"['/admin/doctor-management/group']\" routerLinkActive=\"active\"> Doctor's\n            Group </button>\n          <button mat-menu-item [routerLink]=\"['/admin/adminbiller-management']\" routerLinkActive=\"active\">Biller\n            Admin</button>\n          <button mat-menu-item [routerLink]=\"['/admin/distributors-management']\" routerLinkActive=\"active\">Manage\n            Distributor</button>\n        </mat-menu>\n\n\n        <a mat-list-item routerLinkActive=\"active\" [matMenuTriggerFor]=\"insurance\"> Insurance Management\n          <i class=\"material-icons\">keyboard_arrow_down</i>\n        </a>\n        <mat-menu #insurance=\"matMenu\">\n          <button mat-menu-item [routerLink]=\"['/admin/insurance-management']\" routerLinkActive=\"active\"> Manage\n            Insurance </button>\n          <button mat-menu-item [routerLink]=\"['/admin/insurance-type-management']\" routerLinkActive=\"active\"> Manage\n            Insurance Type </button>\n        </mat-menu>\n\n        <a mat-list-item routerLinkActive=\"active\" [matMenuTriggerFor]=\"reports\"> Reports\n          <i class=\"material-icons\">keyboard_arrow_down</i>\n        </a>\n        <mat-menu #reports=\"matMenu\">\n          <button mat-menu-item [routerLink]=\"['/admin/sales-person/cpt-reports']\" routerLinkActive=\"active\"> CPT Validated Reports for Rep </button>\n          <button mat-menu-item [routerLink]=\"['/admin/sales-person/doctor-management']\" routerLinkActive=\"active\"> Doctor Joined by Rep </button>\n          <button mat-menu-item [routerLink]=\"['/admin/report-processing']\" routerLinkActive=\"active\"> Reports Processing Time </button>\n        </mat-menu>\n\n\n\n        <!-- <a mat-list-item [routerLink]=\"['/admin/booked-appoinments']\" routerLinkActive=\"active\">Appointments</a>\n\n        <a mat-list-item [routerLink]=\"['/admin/patientinformation-management']\" routerLinkActive=\"active\">Patient\n          Information</a> -->\n        <a mat-list-item [matMenuTriggerFor]=\"FAQManagement\"> FAQ Management <i\n            class=\"material-icons\">keyboard_arrow_down</i></a>\n\n            <a mat-list-item [matMenuTriggerFor]=\"TrainingManagement\"> Training Management <i\n              class=\"material-icons\">keyboard_arrow_down</i></a>\n\n        <a mat-list-item [matMenuTriggerFor]=\"misc\"> Miscellaneous <i class=\"material-icons\">keyboard_arrow_down</i></a>\n\n      </mat-nav-list>\n      <mat-menu #FAQManagement=\"matMenu\">\n        <button mat-menu-item [routerLink]=\"['/admin/faq-management']\" routerLinkActive=\"active\"> Manage FAQ</button>\n        <button mat-menu-item [routerLink]=\"['/admin/faq']\" routerLinkActive=\"active\"> FAQ</button>\n      </mat-menu>\n\n      <mat-menu #TrainingManagement=\"matMenu\">\n        <button mat-menu-item [routerLink]=\"['/admin/training/manage-training/list']\" routerLinkActive=\"active\"> Manage Training</button>\n\n        <button mat-menu-item [routerLink]=\"['/admin/training/manage-lesson/list']\" routerLinkActive=\"active\"> Manage Lesson</button>\n      </mat-menu>\n      <mat-menu #misc=\"matMenu\">\n        <button mat-menu-item [routerLink]=\"['/admin/booked-appoinments']\" routerLinkActive=\"active\">Appointments</button>\n\n          <button mat-menu-item [routerLink]=\"['/admin/patientinformation-management']\" routerLinkActive=\"active\">Patient\n          Information</button>\n\n        <button mat-menu-item [routerLink]=\"['/encounter-form-status']\" routerLinkActive=\"active\"> Encounter Form\n          Rules</button>\n        <button mat-menu-item [routerLink]=\"['/admin/cpt-reports']\" routerLinkActive=\"active\"> CPT Validate Reports</button>\n        <button mat-menu-item [routerLink]=\"['/admin/setting-management/5f0461821e1e370009f197c8']\" routerLinkActive=\"active\"> Report Time Setting</button>    \n      </mat-menu>\n    </mat-card-content>\n\n\n    <mat-card-content class=\"profile_section\">\n      <mat-menu #appMenu=\"matMenu\">\n        <button mat-menu-item [routerLink]=\"['/admin/account-settings']\">\n          <mat-icon>account_circle</mat-icon> Account Settings\n        </button>\n\n        <button mat-menu-item [routerLink]=\"['/admin/account-settings/change-password']\">\n          <mat-icon>vpn_key</mat-icon> Change Password\n        </button>\n\n        <button mat-menu-item (click)=\"logout()\">\n          <mat-icon>power_settings_new</mat-icon> Logout\n        </button>\n      </mat-menu>\n      <span class=\"username\">{{user_details.firstname}} {{user_details.lastname}}</span>\n      <button mat-icon-button [matMenuTriggerFor]=\"appMenu\">\n        <span class=\"user_profile\">\n          <mat-icon>account_circle</mat-icon>\n          <i class=\"material-icons\">\n            keyboard_arrow_down\n          </i>\n        </span>\n      </button>\n    </mat-card-content>\n  </mat-card-content>\n</mat-toolbar>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/admin-management/add-edit/add-edit.component.html":
  /*!**************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/admin-management/add-edit/add-edit.component.html ***!
    \**************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminAdminManagementAddEditAddEditComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- Admin Header -->\n<app-admin-header></app-admin-header>\n<mat-card class=\"admin_wrapper\">\n  <!-- header with add button -->\n  <mat-card-content class=\"title_wrapper\">\n    {{ htmlText.header }}\n  </mat-card-content>\n\n\n  <span class=\"add_header\">\n    <span class=\"bradcrumb\">\n      <a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a>&nbsp;\n      <a [routerLink]=\"['/admin/admin-management']\">Manage Admin &nbsp;/</a> &nbsp;\n      {{ htmlText.nav }}\n    </span>\n  </span>\n\n  <mat-card class=\"add_form\">\n    <mat-card-content class=\"form_wrapper\">\n      <form class=\"example-form\" autocomplete=\"off\" name=\"adminManagementAddEditForm\" [formGroup]=\"adminManagementAddEditForm\" (ngSubmit)=\"AdminManagementAddFormSubmit()\">\n\n        <!-- First Name Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>First Name</mat-label>\n\n          <input matInput placeholder=\"First Name\" [formControl]=\"adminManagementAddEditForm.controls['firstname']\" (blur)=\"inputUntouch(adminManagementAddEditForm,'firstname')\">\n          \n          <mat-error *ngIf=\"adminManagementAddEditForm.controls['firstname'].touched && !adminManagementAddEditForm.controls['firstname'].valid && adminManagementAddEditForm.controls['firstname'].errors.required\">\n            First Name required.\n          </mat-error>\n\n          <mat-error *ngIf=\"adminManagementAddEditForm.controls['firstname'].touched && !adminManagementAddEditForm.controls['firstname'].valid && adminManagementAddEditForm.controls['firstname'].errors.maxlength\">\n            First Name is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- First Name End -->\n\n        <!-- Last Name Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Last Name</mat-label>\n\n          <input matInput placeholder=\"Last Name\" [formControl]=\"adminManagementAddEditForm.controls['lastname']\" (blur)=\"inputUntouch(adminManagementAddEditForm,'lastname')\">\n          \n          <mat-error *ngIf=\"adminManagementAddEditForm.controls['lastname'].touched && !adminManagementAddEditForm.controls['lastname'].valid && adminManagementAddEditForm.controls['lastname'].errors.required\">\n            Last Name required.\n          </mat-error>\n\n          <mat-error *ngIf=\"adminManagementAddEditForm.controls['lastname'].touched && !adminManagementAddEditForm.controls['lastname'].valid && adminManagementAddEditForm.controls['lastname'].errors.maxlength\">\n            Last Name is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Last Name End -->\n\n        <!-- Email Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Email Address</mat-label>\n\n          <input matInput placeholder=\"Email Address\" [formControl]=\"adminManagementAddEditForm.controls['email']\" (blur)=\"inputUntouch(adminManagementAddEditForm,'email')\">\n          \n          <mat-error *ngIf=\"adminManagementAddEditForm.controls['email'].touched && !adminManagementAddEditForm.controls['email'].valid && adminManagementAddEditForm.controls['email'].errors.required\">\n            E-Mail required.\n          </mat-error>\n\n          <mat-error *ngIf=\"adminManagementAddEditForm.controls['email'].touched && !adminManagementAddEditForm.controls['email'].valid && adminManagementAddEditForm.controls['email'].errors.email\">\n            Email is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Email End -->\n\n        <!-- Phone Number Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Phone Number</mat-label>\n\n          <input matInput placeholder=\"Phone\" [formControl]=\"adminManagementAddEditForm.controls['phone']\" (blur)=\"inputUntouch(adminManagementAddEditForm,'phone')\">\n          \n          <mat-error *ngIf=\"adminManagementAddEditForm.controls['phone'].touched && !adminManagementAddEditForm.controls['phone'].valid && adminManagementAddEditForm.controls['phone'].errors.required\">\n            Phone Number required.\n          </mat-error>\n\n          <mat-error *ngIf=\"adminManagementAddEditForm.controls['phone'].touched && !adminManagementAddEditForm.controls['phone'].valid && adminManagementAddEditForm.controls['phone'].errors.maxlength\">\n            Phone Number is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Phone Number End -->\n\n        <!-- Password Start -->\n        <ng-container *ngIf=\"!params_id\">\n          <mat-form-field class=\"form-group\" appearance=\"fill\">\n\n            <input matInput placeholder=\"Password\" type=\"password\" [formControl]=\"adminManagementAddEditForm.controls['password']\">\n            \n            <mat-error *ngIf=\"!adminManagementAddEditForm.controls['password'].valid && adminManagementAddEditForm.controls['password'].touched\">\n              Password required.\n            </mat-error>\n          </mat-form-field>\n\n          <mat-form-field class=\"form-group\" appearance=\"fill\">\n            <input matInput placeholder=\"Confirm Password\" type=\"password\" [formControl]=\"adminManagementAddEditForm.controls['confirmpassword']\">\n            \n            <mat-error *ngIf=\"!adminManagementAddEditForm.controls['confirmpassword'].valid && adminManagementAddEditForm.controls['confirmpassword'].touched\">\n              Password does not match \n            </mat-error>\n          </mat-form-field>\n        </ng-container>\n        <!-- Password End -->\n\n        <mat-checkbox [formControl]=\"adminManagementAddEditForm.controls['status']\" checked>Active</mat-checkbox>\n\n        <span class=\"submit_form\">\n          <button mat-flat-button type=\"button\" [routerLink]=\"['/admin/admin-management']\">Back </button>\n          <button mat-flat-button type=\"reset\" *ngIf=\"params_id == ''\"> Reset</button>\n          <button mat-flat-button type=\"submit\">{{ htmlText.buttonText }} </button>\n          <button mat-flat-button type=\"button\" *ngIf=\"params_id != ''\" (click)=\"openDialog('')\"> Change Password </button>\n        </span>\n\n      </form>\n    </mat-card-content>\n\n  </mat-card>\n</mat-card>\n<!-- Admin Footer -->\n<app-admin-footer></app-admin-footer>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/admin-management/add-edit/modal.html":
  /*!*************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/admin-management/add-edit/modal.html ***!
    \*************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminAdminManagementAddEditModalHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n<mat-card class=\"add_form\">\n    <h1 mat-dialog-title>Change Password</h1>\n\n    <form class=\"example-form\" autocomplete=\"off\" name=\"changePwdForm\" [formGroup]=\"changePwdForm\"\n        (ngSubmit)=\"changePasswordFormSubmit()\">\n        <mat-dialog-content class=\"mat-typography\">\n\n\n            <mat-form-field>\n                <input matInput placeholder=\"Password\" type=\"password\"\n                [formControl]=\"changePwdForm.controls['password']\">\n                <mat-error *ngIf=\"changePwdForm.controls['password'].touched && !changePwdForm.controls['password'].valid\n          && changePwdForm.controls['password'].errors.required\">\n                    Password can not be blank</mat-error>\n            </mat-form-field> <br>\n            <mat-form-field>\n                <input matInput placeholder=\"Confirm Password\" type=\"password\"\n                [formControl]=\"changePwdForm.controls['confirmpassword']\">\n                <mat-error\n                    *ngIf=\"!changePwdForm.controls['confirmpassword'].valid && changePwdForm.controls['confirmpassword'].touched\">\n                    Password does not match </mat-error>\n                \n            </mat-form-field><br>   \n\n            <span class=\"submit_form\">\n                <button mat-flat-button mat-dialog-close type=\"button\" > Cancel </button>\n                <button mat-flat-button type=\"submit\" [mat-dialog-close]=\"true\" cdkFocusInitial> Submit </button>\n            </span>\n        </mat-dialog-content>\n    </form>\n</mat-card>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/admin-management/manage-admin-list/manage-admin-list.component.html":
  /*!********************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/admin-management/manage-admin-list/manage-admin-list.component.html ***!
    \********************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminAdminManagementManageAdminListManageAdminListComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- Admin Header -->\n<app-admin-header></app-admin-header>\n\n<!-- header with add button -->\n<mat-card class=\"admin_wrapper\">\n  <!-- header with add button -->\n  <mat-card-content class=\"table_wrapper\">\n    <mat-toolbar class=\"top_header\">\n      <h2> manage admin </h2>\n    </mat-toolbar>\n\n    <span class=\"add_header\">\n      <span class=\"bradcrumb\"><a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage Admin</span>\n      <button mat-flat-button [routerLink]=\"['/admin/admin-management/add']\">Add Admin</button>\n    </span>\n\n    <!-- table -->\n    <lib-listing class=\"DataTable\" *ngIf=\"TechDashboardAllData.length>0\" [datasource]=\"TechDashboardAllData\"\n      [skip]=\"allUserData_skip\" [detail_skip_array]=\"previewModal_skip\"\n      [modify_header_array]=\"allUserData_modify_header\" [apiurl]=\"apiUrl\" [sourcedata]=\"tableName\" [editroute]=\"editUrl\"\n      [jwttoken]=\"user_cookie\" [statusarr]=\"status\" [updateendpoint]=\"UpdateEndpoint\" [deleteendpoint]=\"deleteEndpoint\"\n      [date_search_endpoint]=\"SearchingEndpoint\" [date_search_source]=\"SearchingSourceName\"\n      [search_settings]=\"search_settings\" [sortdata]=\"sortdata\" [datacollection]=\"datacollection\" [date_search_source_count]=\"adminData_count\" [limitcond]=\"limitcond\">\n    </lib-listing>\n    <h2 *ngIf=\"TechDashboardAllData.length == 0\">No record found.</h2>\n    <!-- end table -->\n\n    <!-- Admin Footer -->\n  </mat-card-content>\n</mat-card>\n\n<app-admin-footer></app-admin-footer>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/biller-management/add-edit-biller/add-edit-biller.component.html":
  /*!*****************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/biller-management/add-edit-biller/add-edit-biller.component.html ***!
    \*****************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminBillerManagementAddEditBillerAddEditBillerComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- Admin Header -->\n<app-admin-header *ngIf=\"htmlText.userData.user_details.user_type == 'admin'\"></app-admin-header>\n\n<!-- Diagnostic Admin Header -->\n<app-diagnostic-admin-header *ngIf=\"htmlText.userData.user_details.user_type == 'diagnostic_admin'\"></app-diagnostic-admin-header>\n\n<!-- Doctor Group Header -->\n<app-doctor-group-header *ngIf=\"htmlText.userData.user_details.user_type == 'doctor_group'\"></app-doctor-group-header>\n\n<!-- Distributor Header -->\n<app-distributors-header *ngIf=\"htmlText.userData.user_details.user_type == 'distributors'\"></app-distributors-header>\n\n\n<!-- Doctor Header -->\n<app-doctor-header *ngIf=\"htmlText.userData.user_details.user_type == 'doctor'\"></app-doctor-header>\n\n\n\n<mat-card class=\"admin_wrapper\">\n  <!-- header with add button -->\n  <mat-card-content class=\"title_wrapper\">\n    {{ htmlText.header }}\n  </mat-card-content>\n\n\n  <span class=\"add_header\">\n    <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'admin'\">\n      <span class=\"bradcrumb\">\n        <a [routerLink]=\"['/admin/dashboard']\"> Dashboard &nbsp;/</a> &nbsp;\n      <a [routerLink]=\"['/admin/biller-management']\"> Manage Biller &nbsp;/</a> &nbsp;\n      {{ htmlText.nav }}\n      </span>\n    </ng-container>\n\n    <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'diagnostic_admin'\">\n      <span class=\"bradcrumb\">\n        <a [routerLink]=\"['/diagnostic-admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp;\n        <a [routerLink]=\"['/diagnostic-admin/biller-management']\"> Manage Biller &nbsp;/</a> &nbsp;\n        {{ htmlText.nav }}\n      </span>\n    </ng-container>\n\n\n    <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'doctor_group'\">\n      <span class=\"bradcrumb\">\n        <a [routerLink]=\"['/doctor-group/dashboard']\">Dashboard &nbsp;/</a> &nbsp;\n        <a [routerLink]=\"['/doctor-group/biller-management']\">Manage Biller &nbsp;/</a> &nbsp;\n        {{ htmlText.nav }}\n      </span>\n    </ng-container>\n\n    <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'distributors`'\">\n      <span class=\"bradcrumb\">\n        <a [routerLink]=\"['/distributors/dashboard']\">Dashboard &nbsp;/</a> &nbsp;\n        <a [routerLink]=\"['/distributors/biller-management']\">Manage Biller &nbsp;/</a> &nbsp;\n        {{ htmlText.nav }}\n      </span>\n    </ng-container>\n\n    <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'doctor'\">\n      <span class=\"bradcrumb\">\n        <a [routerLink]=\"['/doctor/dashboard']\">Dashboard &nbsp;/</a> &nbsp;\n        <a [routerLink]=\"['/doctor/biller-management']\"> Manage Biller &nbsp;/</a> &nbsp;\n        {{ htmlText.nav }}\n      </span>\n    </ng-container>\n  </span>\n  <!-- End header with add button -->\n\n\n  <mat-card class=\"add_form\">\n    <mat-card-content class=\"form_wrapper\">\n      <form class=\"example-form\" autocomplete=\"off\" name=\"billerManagementAddEditForm\" [formGroup]=\"billerManagementAddEditForm\" (ngSubmit)=\"BillerManagementAddFormSubmit()\">\n\n        <!-- First Name Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>First Name</mat-label>\n\n          <input matInput placeholder=\"First Name\" [formControl]=\"billerManagementAddEditForm.controls['firstname']\"\n            (blur)=\"inputUntouch(billerManagementAddEditForm,'firstname')\">\n\n          <mat-error\n            *ngIf=\"billerManagementAddEditForm.controls['firstname'].touched && !billerManagementAddEditForm.controls['firstname'].valid && billerManagementAddEditForm.controls['firstname'].errors.required\">\n            First Name required.\n          </mat-error>\n\n          <mat-error\n            *ngIf=\"billerManagementAddEditForm.controls['firstname'].touched && !billerManagementAddEditForm.controls['firstname'].valid && billerManagementAddEditForm.controls['firstname'].errors.maxlength\">\n            First Name is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- First Name End -->\n\n        <!-- Last Name Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Last Name</mat-label>\n\n          <input matInput placeholder=\"Last Name\" [formControl]=\"billerManagementAddEditForm.controls['lastname']\"\n            (blur)=\"inputUntouch(billerManagementAddEditForm,'lastname')\">\n\n          <mat-error\n            *ngIf=\"billerManagementAddEditForm.controls['lastname'].touched && !billerManagementAddEditForm.controls['lastname'].valid && billerManagementAddEditForm.controls['lastname'].errors.required\">\n            Last Name required.\n          </mat-error>\n\n          <mat-error\n            *ngIf=\"billerManagementAddEditForm.controls['lastname'].touched && !billerManagementAddEditForm.controls['lastname'].valid && billerManagementAddEditForm.controls['lastname'].errors.maxlength\">\n            Last Name is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Last Name End -->\n\n        <!-- Email Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Email Address</mat-label>\n\n          <input matInput placeholder=\"Email Address\" [formControl]=\"billerManagementAddEditForm.controls['email']\"\n            (blur)=\"inputUntouch(billerManagementAddEditForm,'email')\">\n\n          <mat-error\n            *ngIf=\"billerManagementAddEditForm.controls['email'].touched && !billerManagementAddEditForm.controls['email'].valid && billerManagementAddEditForm.controls['email'].errors.required\">\n            Email required.\n          </mat-error>\n\n          <mat-error\n            *ngIf=\"billerManagementAddEditForm.controls['email'].touched && !billerManagementAddEditForm.controls['email'].valid && billerManagementAddEditForm.controls['email'].errors.email\">\n            Email is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Email End -->\n\n        <!-- Phone Number Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Phone Number</mat-label>\n\n          <input matInput placeholder=\"Phone\" [formControl]=\"billerManagementAddEditForm.controls['phone']\"\n            (blur)=\"inputUntouch(billerManagementAddEditForm,'phone')\">\n\n          <mat-error\n            *ngIf=\"billerManagementAddEditForm.controls['phone'].touched && !billerManagementAddEditForm.controls['phone'].valid && billerManagementAddEditForm.controls['phone'].errors.required\">\n            Phone Number required.\n          </mat-error>\n\n          <mat-error\n            *ngIf=\"billerManagementAddEditForm.controls['phone'].touched && !billerManagementAddEditForm.controls['phone'].valid && billerManagementAddEditForm.controls['phone'].errors.maxlength\">\n            Phone Number is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Phone Number End -->\n\n        <!-- Company Name Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Company Name </mat-label>\n\n          <input matInput placeholder=\"Company Name\"\n            [formControl]=\"billerManagementAddEditForm.controls['company_name']\"\n            (blur)=\"inputUntouch(billerManagementAddEditForm,'company_name')\">\n\n          <mat-error\n            *ngIf=\"billerManagementAddEditForm.controls['company_name'].touched && !billerManagementAddEditForm.controls['company_name'].valid && billerManagementAddEditForm.controls['company_name'].errors.required\">\n            Company Name required.\n          </mat-error>\n\n          <mat-error\n            *ngIf=\"billerManagementAddEditForm.controls['company_name'].touched && !billerManagementAddEditForm.controls['company_name'].valid && billerManagementAddEditForm.controls['company_name'].errors.maxlength\">\n            Company Name is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Company Name End -->\n\n        <!-- Address Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Address</mat-label>\n\n          <input matInput placeholder=\"Address\" [formControl]=\"billerManagementAddEditForm.controls['address']\"\n            (blur)=\"inputUntouch(billerManagementAddEditForm,'address')\">\n\n          <mat-error *ngIf=\"billerManagementAddEditForm.controls['address'].touched && !billerManagementAddEditForm.controls['address'].valid && billerManagementAddEditForm.controls['address'].errors.required\">\n            Address required.\n          </mat-error>\n\n          <mat-error *ngIf=\"billerManagementAddEditForm.controls['address'].touched && !billerManagementAddEditForm.controls['address'].valid && billerManagementAddEditForm.controls['address'].errors.maxlength\">\n            Address is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Address End -->\n\n        <!-- parent type Start -->\n        <mat-form-field class=\"parent_cat\" appearance=\"fill\" *ngIf = \"htmlText.userData.user_details.user_type == 'admin'\">\n          <mat-label>Parent Type</mat-label>\n\n          <mat-select formControlName=\"parent_type\">\n            <mat-option value=\"admin\">Select Parent Type</mat-option>\n            <mat-option *ngFor=\"let parent of htmlText.parent_type;\" value=\"{{ parent.value }}\" (click)=\"getParentData(parent.name)\">{{ parent.name }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <!-- Parent Type End -->\n\n        <ng-container *ngIf = \"htmlText.userData.user_details.user_type == 'admin'\">\n        <!-- Parent Name Start -->\n        <mat-form-field appearance=\"fill\" *ngIf = \"(selectionChangeValue == 'DiagnosticAdmin') ||(selectionChangeValue == 'diagnostic_admin')\">\n          <mat-label>Select Parent Name</mat-label>\n          <mat-select formControlName=\"parent_id\">\n            <mat-option [value]=\"\">Select Parent Name</mat-option>\n            <mat-option *ngFor=\"let parent of htmlText.parent_id;\" value=\"{{ parent._id }}\" >{{ parent.center_name }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n        <!-- Parent Name name -->\n\n\n        <!-- Parent Name Start -->\n        <mat-form-field appearance=\"fill\" *ngIf = \"(selectionChangeValue == 'DoctorGroup') || (selectionChangeValue == 'doctor_group')\">\n          <mat-label>Select Parent Name</mat-label>\n          <mat-select formControlName=\"parent_id\">\n            <mat-option [value]=\"\">Select Parent Name</mat-option>\n            <mat-option *ngFor=\"let parent of htmlText.parent_id;\" value=\"{{ parent._id }}\" >{{ parent.groupname }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n        <!-- Parent Name name -->\n\n\n        <!-- Parent Name Start -->\n        <mat-form-field appearance=\"fill\" *ngIf = \"(selectionChangeValue == 'Distributor') || (selectionChangeValue == 'distributor')\">\n          <mat-label>Select Parent Name</mat-label>\n          <mat-select formControlName=\"parent_id\" >\n            <mat-option [value]=\"\">Select Parent Name</mat-option>\n            <mat-option *ngFor=\"let parent of htmlText.parent_id;\" value=\"{{ parent._id }}\" >{{ parent.distributorname }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n        <!-- Parent Name name -->\n      </ng-container>\n\n\n        <!-- State Start -->\n        <mat-form-field class=\"parent_cat\" appearance=\"fill\">\n          <mat-label>State</mat-label>\n\n          <mat-select formControlName=\"state\" (selectionChange)=\"getCity($event.value);\">\n            <mat-option [value]=\"\">Select State</mat-option>\n            <mat-option *ngFor=\"let state of states;\" value=\"{{ state.name }}\">{{ state.name }}</mat-option>\n          </mat-select>\n\n          <mat-error *ngIf=\"billerManagementAddEditForm.controls['state'].touched && !billerManagementAddEditForm.controls['state'].valid && billerManagementAddEditForm.controls['state'].errors.required\">\n            State required.\n          </mat-error>\n        </mat-form-field>\n        <!-- State End -->\n\n        <!-- City Start -->\n        <mat-form-field class=\"parent_cat\" appearance=\"fill\">\n          <mat-label>City</mat-label>\n\n          <mat-select formControlName=\"city\">\n            <mat-option value=\"\">Select City</mat-option>\n            <mat-option *ngFor=\"let city of cities;\" value=\"{{ city }}\">{{ city }}</mat-option>\n          </mat-select>\n\n          <mat-error *ngIf=\"billerManagementAddEditForm.controls['city'].touched && !billerManagementAddEditForm.controls['city'].valid && billerManagementAddEditForm.controls['city'].errors.required\">\n            State required.\n          </mat-error>\n        </mat-form-field>\n        <!-- City End -->\n\n        <!-- Zip Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Zip</mat-label>\n\n          <input type=\"number\" matInput placeholder=\"ZIP\" [formControl]=\"billerManagementAddEditForm.controls['zip']\"\n            (blur)=\"inputUntouch(billerManagementAddEditForm,'zip')\">\n\n          <mat-error *ngIf=\"billerManagementAddEditForm.controls['zip'].touched && !billerManagementAddEditForm.controls['zip'].valid && billerManagementAddEditForm.controls['zip'].errors.required\">\n            Zip required.\n          </mat-error>\n        </mat-form-field>\n        <!-- Zip Start -->\n\n        <ng-container *ngIf=\"!params_id\">\n          <!-- Password Start -->\n          <ng-container *ngIf=\"!params_id\">\n            <mat-form-field class=\"form-group\" appearance=\"fill\">\n\n              <input matInput placeholder=\"Password\" type=\"password\"\n                [formControl]=\"billerManagementAddEditForm.controls['password']\">\n\n              <mat-error *ngIf=\"!billerManagementAddEditForm.controls['password'].valid && billerManagementAddEditForm.controls['password'].touched\">\n                Password required.\n              </mat-error>\n            </mat-form-field>\n\n            <mat-form-field class=\"form-group\" appearance=\"fill\">\n              <input matInput placeholder=\"Confirm Password\" type=\"password\"\n                [formControl]=\"billerManagementAddEditForm.controls['confirmpassword']\">\n\n              <mat-error *ngIf=\"!billerManagementAddEditForm.controls['confirmpassword'].valid && billerManagementAddEditForm.controls['confirmpassword'].touched\">\n                Password does not match\n              </mat-error>\n            </mat-form-field>\n          </ng-container>\n          <!-- Password End -->\n        </ng-container>\n\n        <mat-checkbox [formControl]=\"billerManagementAddEditForm.controls['status']\" checked>Active</mat-checkbox>\n\n        <span class=\"submit_form\">\n          <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'admin'\">\n            <button mat-flat-button type=\"button\" [routerLink]=\"['/admin/biller-management']\">Back </button>\n          </ng-container>\n          <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'diagnostic_admin'\">\n            <button mat-flat-button type=\"button\" [routerLink]=\"['/diagnostic-admin/biller-management']\">Back </button>\n          </ng-container>\n\n          <button mat-flat-button type=\"reset\" *ngIf=\"params_id == ''\"> Reset</button>\n          <button mat-flat-button type=\"submit\"> {{ htmlText.buttonText }}</button>\n          <button mat-flat-button type=\"button\" *ngIf=\"params_id != ''\" (click)=\"openDialog('')\"> Change Password </button>\n        </span>\n\n      </form>\n    </mat-card-content>\n\n  </mat-card>\n</mat-card>\n\n\n\n\n<!-- Admin Footer -->\n<app-admin-footer></app-admin-footer>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/biller-management/add-edit-biller/modal.html":
  /*!*********************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/biller-management/add-edit-biller/modal.html ***!
    \*********************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminBillerManagementAddEditBillerModalHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n<mat-card class=\"add_form\">\n    <h1 mat-dialog-title>Change Password</h1>\n\n    <form class=\"example-form\" autocomplete=\"off\" name=\"changePwdForm\" [formGroup]=\"changePwdForm\"\n        (ngSubmit)=\"changePasswordFormSubmit()\">\n        <mat-dialog-content class=\"mat-typography\">\n\n\n            <mat-form-field>\n                <input matInput placeholder=\"Password\" type=\"password\"\n                [formControl]=\"changePwdForm.controls['password']\">\n                <mat-error *ngIf=\"changePwdForm.controls['password'].touched && !changePwdForm.controls['password'].valid\n          && changePwdForm.controls['password'].errors.required\">\n                    Password can not be blank</mat-error>\n            </mat-form-field> <br>\n            <mat-form-field>\n                <input matInput placeholder=\"Confirm Password\" type=\"password\"\n                [formControl]=\"changePwdForm.controls['confirmpassword']\">\n                <mat-error\n                    *ngIf=\"!changePwdForm.controls['confirmpassword'].valid && changePwdForm.controls['confirmpassword'].touched\">\n                    Password does not match </mat-error>\n                \n            </mat-form-field><br>   \n\n            <span class=\"submit_form\">\n                <button mat-flat-button mat-dialog-close type=\"button\" > Cancel </button>\n                <button mat-flat-button type=\"submit\" [mat-dialog-close]=\"true\" cdkFocusInitial> Submit </button>\n            </span>\n        </mat-dialog-content>\n    </form>\n</mat-card>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/biller-management/listing-biller/listing-biller.component.html":
  /*!***************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/biller-management/listing-biller/listing-biller.component.html ***!
    \***************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminBillerManagementListingBillerListingBillerComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- Admin Header -->\n<app-admin-header *ngIf=\"userData.user_type == 'admin'\"></app-admin-header>\n<!-- Diagnostic Admin Header -->\n<app-diagnostic-admin-header *ngIf=\"userData.user_type == 'diagnostic_admin'\"></app-diagnostic-admin-header>\n\n<!-- Doctor Group Admin Header -->\n<app-doctor-group-header *ngIf=\"userData.user_type == 'doctor_group'\"></app-doctor-group-header>\n\n<!-- Distributors Admin Header -->\n<app-distributors-header *ngIf=\"userData.user_type == 'distributors'\"></app-distributors-header>\n\n<!-- Doctor Header -->\n<app-doctor-header *ngIf=\"userData.user_type == 'doctor'\"></app-doctor-header>\n\n\n\n\n\n<mat-card class=\"admin_wrapper\">\n  <!-- header with add button -->\n  <mat-card-content class=\"table_wrapper\">\n    <mat-toolbar class=\"top_header\">\n      <h2> Manage Biller </h2>\n    </mat-toolbar>\n\n    <span class=\"add_header\">\n      <ng-container *ngIf=\"userData.user_type == 'admin'\">\n        <span class=\"bradcrumb\"><a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage Biller</span>\n        <button mat-flat-button [routerLink]=\"['/admin/biller-management/add']\">Add Biller</button>\n      </ng-container>\n      \n      \n      <ng-container *ngIf=\"userData.user_type == 'diagnostic_admin'\">\n        <span class=\"bradcrumb\"><a [routerLink]=\"['/diagnostic-admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage Biller</span>\n        <button mat-flat-button [routerLink]=\"['/diagnostic-admin/biller-management/add']\">Add Biller</button>\n      </ng-container>\n\n      <ng-container *ngIf=\"userData.user_type == 'doctor_group'\">\n        <span class=\"bradcrumb\"><a [routerLink]=\"['/doctor-group/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage Biller</span>\n        <button mat-flat-button [routerLink]=\"['/doctor-group/biller-management/add']\">Add Biller</button>\n      </ng-container>\n\n      <ng-container *ngIf=\"userData.user_type == 'distributors'\">\n        <span class=\"bradcrumb\"><a [routerLink]=\"['/distributors/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage Biller</span>\n        <button mat-flat-button [routerLink]=\"['/distributors/biller-management/add']\">Add Biller</button>\n      </ng-container>\n\n      <ng-container *ngIf=\"userData.user_type == 'doctor'\">\n        <span class=\"bradcrumb\"><a [routerLink]=\"['/doctor/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage Biller</span>\n        <button mat-flat-button [routerLink]=\"['/doctor/biller-management/add']\">Add Biller</button>\n      </ng-container>\n    </span>\n    <!-- End header with add button -->\n\n    <!-- table -->\n    <lib-listing class=\"DataTable\" *ngIf=\"allBillerData.length>0\" (onLiblistingChange)=\"listenLiblistingChange($event)\" [datasource]=\"allBillerData\" [skip]=\"allUserData_skip\"\n      [modify_header_array]=\"allUserData_modify_header\" [detail_skip_array]=\"previewModal_detail_skip\" [apiurl]=\"apiUrl\"\n      [sourcedata]=\"tableName\" [editroute]=\"editUrl\" [jwttoken]=\"user_cookie\" [statusarr]=\"status\"\n      [updateendpoint]=\"UpdateEndpoint\" [deleteendpoint]=\"deleteEndpoint\" [date_search_endpoint]=\"SearchingEndpoint\"\n      [date_search_source]=\"SearchingSourceName\" [search_settings]=\"search_settings\" [sortdata]=\"sortdata\" [datacollection]=\"datacollection\" [libdata]=\"libdata\" [date_search_source_count]=\"billerData_count\" [limitcond]=\"limitcond\" >\n    </lib-listing>\n    \n    <h2 *ngIf=\"allBillerData.length == 0\">No record found.</h2>\n    <!-- end table -->\n  </mat-card-content>\n</mat-card>\n\n\n\n<!-- Admin Footer -->\n<app-admin-footer></app-admin-footer>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/booked-appoinments/booked-appoinments.component.html":
  /*!*****************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/booked-appoinments/booked-appoinments.component.html ***!
    \*****************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminBookedAppoinmentsBookedAppoinmentsComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- Admin Header -->\n<app-admin-header></app-admin-header>\n<mat-card class=\"admin_wrapper\">\n  <!-- header with add button -->\n\n  <span class=\"add_header\">\n\n    <span class=\"bradcrumb\"><a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage\n      Appoinments</span>\n  </span>\n <br>\n\n  <mat-card-content class=\"table_wrapper bookedAppointment\">\n\n    <mat-toolbar class=\"top_header\">\n      <h2> manage appoinments </h2>\n    </mat-toolbar>\n\n    <mat-tab-group [selectedIndex]=\"tabFlag\">\n      <!-- Upcoming events -->\n      <mat-tab label=\"Upcoming Events\">\n        <app-upcoming-appoinments [searchByDoctorValues]=\"doctors\"></app-upcoming-appoinments>\n      </mat-tab>\n      <!-- Past events -->\n      <mat-tab label=\"Past Events\">\n        <app-past-appoinments [searchByDoctorValues]=\"doctors\"></app-past-appoinments>\n      </mat-tab>\n    </mat-tab-group>\n\n  </mat-card-content>\n</mat-card>\n\n<!-- Admin Footer -->\n<app-admin-footer></app-admin-footer>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/cpt-validate-reports/cpt-validate-reports/cpt-validate-reports.component.html":
  /*!******************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/cpt-validate-reports/cpt-validate-reports/cpt-validate-reports.component.html ***!
    \******************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminCptValidateReportsCptValidateReportsCptValidateReportsComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<app-admin-header *ngIf=\"loginUserData.user_details.user_details.user_type == 'admin'\"></app-admin-header>\n\n<!-- Admin Biller Header -->\n\n<app-adminbiller-header *ngIf=\"loginUserData.user_details.user_details.user_type == 'admin_biller'\">\n</app-adminbiller-header>\n\n<mat-card class=\"admin_wrapper\"> \n  <ng-container *ngIf=\"activatedRoute.snapshot.routeConfig.path == 'admin/cpt-reports'\">\n    <mat-toolbar class=\"top_header\">\n      <h2> CPT Validated Report</h2>\n    </mat-toolbar>\n    </ng-container>\n\n    <ng-container *ngIf=\"activatedRoute.snapshot.routeConfig.path == 'admin/sales-person/cpt-reports'\">\n      <mat-toolbar class=\"top_header\">\n        <h2> CPT Validated Report for Sales Person</h2>\n      </mat-toolbar>\n      </ng-container>\n  <mat-card-content class=\"table_wrapper admin_dashboard\">\n\n    <!-- table -->\n    <lib-listing class=\"DataTable\" *ngIf=\"allBillerData.length>0\" [datasource]=\"allBillerData\" [skip]=\"allUserData_skip\"\n      [modify_header_array]=\"allUserData_modify_header\" [detail_skip_array]=\"previewModal_detail_skip\" [apiurl]=\"apiUrl\"\n      [sourcedata]=\"tableName\" [editroute]=\"editUrl\" [jwttoken]=\"jwtToken\" [statusarr]=\"status\"\n      [updateendpoint]=\"UpdateEndpoint\" [deleteendpoint]=\"deleteEndpoint\" [date_search_endpoint]=\"SearchingEndpoint\"\n      [date_search_source]=\"SearchingSourceName\" [search_settings]=\"search_settings\" [sortdata]=\"sortdata\"\n      [datacollection]=\"datacollection\" [libdata]=\"libdata\" [date_search_source_count]=\"billerData_count\"\n      [limitcond]=\"limitcond\">\n    </lib-listing>\n    <h2 *ngIf=\"allBillerData.length == 0\">No record found.</h2>\n  </mat-card-content>\n\n</mat-card>\n\n<app-admin-footer></app-admin-footer>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/diagnostic-admin-management/add-edit-diagnostic-admin/add-edit-diagnostic-admin.component.html":
  /*!***********************************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/diagnostic-admin-management/add-edit-diagnostic-admin/add-edit-diagnostic-admin.component.html ***!
    \***********************************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminDiagnosticAdminManagementAddEditDiagnosticAdminAddEditDiagnosticAdminComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- Admin Header -->\n<app-admin-header></app-admin-header>\n<mat-card class=\"admin_wrapper\">\n  <!-- header with add button -->\n  <mat-card-content class=\"title_wrapper\">\n    {{ htmlText.header }}\n  </mat-card-content>\n\n\n  <span class=\"add_header\">\n    <span class=\"bradcrumb\">\n      <a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp;\n      <a [routerLink]=\"['/admin/diagnostic-admin-management']\">Manage Diagnostic Admin &nbsp;/</a> &nbsp;\n      {{ htmlText.nav }}\n    </span>\n  </span>\n  <!-- End header with add button -->\n\n  <mat-card class=\"add_form\">\n    <mat-card-content class=\"form_wrapper\">\n      <form class=\"example-form\" autocomplete=\"off\" name=\"DiagnosticAdminManagementAddEditForm\" [formGroup]=\"DiagnosticAdminManagementAddEditForm\" (ngSubmit)=\"TechManagementAddFormFormSubmit()\">\n\n        <!-- Center Name Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label> Center Name</mat-label>\n\n          <input matInput placeholder=\"Center Name\" [formControl]=\"DiagnosticAdminManagementAddEditForm.controls['center_name']\"\n            (blur)=\"inputUntouch(DiagnosticAdminManagementAddEditForm,'center_name')\">\n\n          <mat-error\n            *ngIf=\"DiagnosticAdminManagementAddEditForm.controls['center_name'].touched && !DiagnosticAdminManagementAddEditForm.controls['center_name'].valid && DiagnosticAdminManagementAddEditForm.controls['center_name'].errors.required\">\n            Center Name required.\n          </mat-error>\n\n          <mat-error\n            *ngIf=\"DiagnosticAdminManagementAddEditForm.controls['center_name'].touched && !DiagnosticAdminManagementAddEditForm.controls['center_name'].valid && DiagnosticAdminManagementAddEditForm.controls['center_name'].errors.maxlength\">\n            Center Name is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- First Name End -->\n\n        <!-- Email Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Email Address</mat-label>\n\n          <input matInput placeholder=\"Email Address\" [formControl]=\"DiagnosticAdminManagementAddEditForm.controls['email']\"\n            (blur)=\"inputUntouch(DiagnosticAdminManagementAddEditForm,'email')\">\n\n          <mat-error\n            *ngIf=\"DiagnosticAdminManagementAddEditForm.controls['email'].touched && !DiagnosticAdminManagementAddEditForm.controls['email'].valid && DiagnosticAdminManagementAddEditForm.controls['email'].errors.required\">\n            Email required.\n          </mat-error>\n\n          <mat-error\n            *ngIf=\"DiagnosticAdminManagementAddEditForm.controls['email'].touched && !DiagnosticAdminManagementAddEditForm.controls['email'].valid && DiagnosticAdminManagementAddEditForm.controls['email'].errors.email\">\n            Email is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Email End -->\n\n        <!-- Phone Number Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Phone Number</mat-label>\n\n          <input matInput placeholder=\"Phone\" [formControl]=\"DiagnosticAdminManagementAddEditForm.controls['phone']\"\n            (blur)=\"inputUntouch(DiagnosticAdminManagementAddEditForm,'phone')\">\n\n          <mat-error\n            *ngIf=\"DiagnosticAdminManagementAddEditForm.controls['phone'].touched && !DiagnosticAdminManagementAddEditForm.controls['phone'].valid && DiagnosticAdminManagementAddEditForm.controls['phone'].errors.required\">\n            Phone Number required.\n          </mat-error>\n\n          <mat-error\n            *ngIf=\"DiagnosticAdminManagementAddEditForm.controls['phone'].touched && !DiagnosticAdminManagementAddEditForm.controls['phone'].valid && DiagnosticAdminManagementAddEditForm.controls['phone'].errors.maxlength\">\n            Phone Number is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Phone Number End -->\n\n        <!-- FAX Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>FAX</mat-label>\n\n          <input matInput placeholder=\"Phone\" [formControl]=\"DiagnosticAdminManagementAddEditForm.controls['fax']\"\n            (blur)=\"inputUntouch(DiagnosticAdminManagementAddEditForm,'fax')\">\n\n          <mat-error\n            *ngIf=\"DiagnosticAdminManagementAddEditForm.controls['fax'].touched && !DiagnosticAdminManagementAddEditForm.controls['fax'].valid && DiagnosticAdminManagementAddEditForm.controls['fax'].errors.maxlength\">\n            FAX is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- FAX End -->\n\n        <!-- Address Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Address</mat-label>\n\n          <input matInput placeholder=\"Address\" [formControl]=\"DiagnosticAdminManagementAddEditForm.controls['address']\"\n            (blur)=\"inputUntouch(DiagnosticAdminManagementAddEditForm,'address')\">\n\n          <mat-error *ngIf=\"DiagnosticAdminManagementAddEditForm.controls['address'].touched && !DiagnosticAdminManagementAddEditForm.controls['address'].valid && DiagnosticAdminManagementAddEditForm.controls['address'].errors.required\">\n            Address required.\n          </mat-error>\n\n          <mat-error *ngIf=\"DiagnosticAdminManagementAddEditForm.controls['address'].touched && !DiagnosticAdminManagementAddEditForm.controls['address'].valid && DiagnosticAdminManagementAddEditForm.controls['address'].errors.maxlength\">\n            Address is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Address End -->\n\n        <!-- State Start -->\n        <mat-form-field class=\"parent_cat\" appearance=\"fill\">\n          <mat-label>State</mat-label>\n\n          <mat-select formControlName=\"state\" (selectionChange)=\"getCity($event.value);\">\n            <mat-option [value]=\"\">Select state</mat-option>\n            <mat-option *ngFor=\"let state of htmlText.states;\" value=\"{{ state.name }}\">{{ state.name }}</mat-option>\n          </mat-select>\n\n          <mat-error *ngIf=\"DiagnosticAdminManagementAddEditForm.controls['state'].touched && !DiagnosticAdminManagementAddEditForm.controls['state'].valid && DiagnosticAdminManagementAddEditForm.controls['state'].errors.required\">\n            State required.\n          </mat-error>\n        </mat-form-field>\n        <!-- State End -->\n\n        <!-- City Start -->\n        <mat-form-field class=\"parent_cat\" appearance=\"fill\">\n          <mat-label>City</mat-label>\n\n          <mat-select formControlName=\"city\">\n            <mat-option value=0>Select city</mat-option>\n            <mat-option *ngFor=\"let city of htmlText.cities;\" value=\"{{ city }}\">{{ city }}</mat-option>\n          </mat-select>\n\n          <mat-error *ngIf=\"DiagnosticAdminManagementAddEditForm.controls['city'].touched && !DiagnosticAdminManagementAddEditForm.controls['city'].valid && DiagnosticAdminManagementAddEditForm.controls['city'].errors.required\">\n            State required.\n          </mat-error>\n        </mat-form-field>\n        <!-- City End -->\n\n        <!-- Zip Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Zip</mat-label>\n\n          <input type=\"text\" matInput placeholder=\"ZIP\" [formControl]=\"DiagnosticAdminManagementAddEditForm.controls['zip']\" (blur)=\"inputUntouch(DiagnosticAdminManagementAddEditForm,'zip')\">\n\n          <mat-error *ngIf=\"DiagnosticAdminManagementAddEditForm.controls['zip'].touched && !DiagnosticAdminManagementAddEditForm.controls['zip'].valid && DiagnosticAdminManagementAddEditForm.controls['zip'].errors.required\">\n            Zip required.\n          </mat-error>\n        </mat-form-field>\n        <!-- Zip Start -->\n\n        <ng-container *ngIf=\"!params_id\">\n          <!-- Password Start -->\n          <ng-container *ngIf=\"!params_id\">\n            <mat-form-field class=\"form-group\" appearance=\"fill\">\n\n              <input matInput placeholder=\"Password\" type=\"password\"\n                [formControl]=\"DiagnosticAdminManagementAddEditForm.controls['password']\">\n\n              <mat-error *ngIf=\"!DiagnosticAdminManagementAddEditForm.controls['password'].valid && DiagnosticAdminManagementAddEditForm.controls['password'].touched\">\n                Password required.\n              </mat-error>\n            </mat-form-field>\n\n            <mat-form-field class=\"form-group\" appearance=\"fill\">\n              <input matInput placeholder=\"Confirm Password\" type=\"password\"\n                [formControl]=\"DiagnosticAdminManagementAddEditForm.controls['confirmpassword']\">\n\n              <mat-error *ngIf=\"!DiagnosticAdminManagementAddEditForm.controls['confirmpassword'].valid && DiagnosticAdminManagementAddEditForm.controls['confirmpassword'].touched\">\n                Password does not match\n              </mat-error>\n            </mat-form-field>\n          </ng-container>\n          <!-- Password End -->\n        </ng-container>\n\n        <mat-checkbox [formControl]=\"DiagnosticAdminManagementAddEditForm.controls['status']\" checked>Active</mat-checkbox>\n\n\n        <h2> Contact Person 1</h2>\n\n        <!-- Name Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Name</mat-label>\n\n          <input matInput placeholder=\"Center Name\" [formControl]=\"DiagnosticAdminManagementAddEditForm.controls['contact_person_1_name']\"\n            (blur)=\"inputUntouch(DiagnosticAdminManagementAddEditForm,'contact_person_1_name')\">\n\n          <mat-error\n            *ngIf=\"DiagnosticAdminManagementAddEditForm.controls['contact_person_1_name'].touched && !DiagnosticAdminManagementAddEditForm.controls['contact_person_1_name'].valid && DiagnosticAdminManagementAddEditForm.controls['contact_person_1_name'].errors.maxlength\">\n            Name is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Name End -->\n\n        <!-- Email Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Email Address</mat-label>\n\n          <input matInput placeholder=\"Email Address\" [formControl]=\"DiagnosticAdminManagementAddEditForm.controls['contact_person_1_email']\"\n            (blur)=\"inputUntouch(DiagnosticAdminManagementAddEditForm,'contact_person_1_email')\">\n\n          <mat-error\n            *ngIf=\"DiagnosticAdminManagementAddEditForm.controls['contact_person_1_email'].touched && !DiagnosticAdminManagementAddEditForm.controls['contact_person_1_email'].valid && DiagnosticAdminManagementAddEditForm.controls['contact_person_1_email'].errors.email\">\n            Email is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Email End -->\n\n        <!-- Phone Number Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Phone Number</mat-label>\n\n          <input matInput placeholder=\"Phone\" [formControl]=\"DiagnosticAdminManagementAddEditForm.controls['contact_person_1_phone']\"\n            (blur)=\"inputUntouch(DiagnosticAdminManagementAddEditForm,'contact_person_1_phone')\">\n\n          <mat-error\n            *ngIf=\"DiagnosticAdminManagementAddEditForm.controls['contact_person_1_phone'].touched && !DiagnosticAdminManagementAddEditForm.controls['contact_person_1_phone'].valid && DiagnosticAdminManagementAddEditForm.controls['contact_person_1_phone'].errors.maxlength\">\n            Phone Number is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Phone Number End -->\n\n\n        <h2> Contact Person 2</h2>\n\n        <!-- Name Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Name</mat-label>\n\n          <input matInput placeholder=\"Name\" [formControl]=\"DiagnosticAdminManagementAddEditForm.controls['contact_person_2_name']\"\n            (blur)=\"inputUntouch(DiagnosticAdminManagementAddEditForm,'contact_person_2_name')\">\n\n          <mat-error\n            *ngIf=\"DiagnosticAdminManagementAddEditForm.controls['contact_person_2_name'].touched && !DiagnosticAdminManagementAddEditForm.controls['contact_person_2_name'].valid && DiagnosticAdminManagementAddEditForm.controls['contact_person_2_name'].errors.maxlength\">\n            Name is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Name End -->\n\n        <!-- Email Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Email Address</mat-label>\n\n          <input matInput placeholder=\"Email Address\" [formControl]=\"DiagnosticAdminManagementAddEditForm.controls['contact_person_2_email']\"\n            (blur)=\"inputUntouch(DiagnosticAdminManagementAddEditForm,'contact_person_2_email')\">\n\n          <mat-error\n            *ngIf=\"DiagnosticAdminManagementAddEditForm.controls['contact_person_2_email'].touched && !DiagnosticAdminManagementAddEditForm.controls['contact_person_2_email'].valid && DiagnosticAdminManagementAddEditForm.controls['contact_person_2_email'].errors.email\">\n            Email is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Email End -->\n\n        <!-- Phone Number Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Phone Number</mat-label>\n\n          <input matInput placeholder=\"Phone\" [formControl]=\"DiagnosticAdminManagementAddEditForm.controls['contact_person_2_phone']\"\n            (blur)=\"inputUntouch(DiagnosticAdminManagementAddEditForm,'contact_person_2_phone')\">\n\n          <mat-error\n            *ngIf=\"DiagnosticAdminManagementAddEditForm.controls['contact_person_2_phone'].touched && !DiagnosticAdminManagementAddEditForm.controls['contact_person_2_phone'].valid && DiagnosticAdminManagementAddEditForm.controls['contact_person_2_phone'].errors.maxlength\">\n            Phone Number is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Phone Number End -->\n\n\n        <!-- end here -->\n        <span class=\"submit_form\">\n          <button mat-flat-button type=\"button\" [routerLink]=\"['/admin/diagnostic-admin-management']\">Back </button>\n          <button mat-flat-button type=\"reset\" *ngIf=\"params_id == ''\">Reset </button>\n          <button mat-flat-button type=\"submit\"> {{ htmlText.buttonText }} </button>\n          <button mat-flat-button type=\"button\" *ngIf=\"params_id != ''\" (click)=\"openDialog('')\"> Change Password </button>\n        </span>\n      </form>\n\n    </mat-card-content>\n  </mat-card>\n\n</mat-card>\n<!-- Admin Footer -->\n<app-admin-footer></app-admin-footer>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/diagnostic-admin-management/add-edit-diagnostic-admin/modal.html":
  /*!*****************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/diagnostic-admin-management/add-edit-diagnostic-admin/modal.html ***!
    \*****************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminDiagnosticAdminManagementAddEditDiagnosticAdminModalHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<mat-card class=\"add_form\">\n    <h1 mat-dialog-title>Change Password</h1>\n\n    <form class=\"example-form\" autocomplete=\"off\" name=\"changePwdForm\" [formGroup]=\"changePwdForm\"\n        (ngSubmit)=\"changePasswordFormSubmit()\">\n        <mat-dialog-content class=\"mat-typography\">\n\n\n            <mat-form-field>\n                <input matInput placeholder=\"Password\" type=\"password\"\n                [formControl]=\"changePwdForm.controls['password']\">\n                <mat-error *ngIf=\"changePwdForm.controls['password'].touched && !changePwdForm.controls['password'].valid\n          && changePwdForm.controls['password'].errors.required\">\n                    Password can not be blank</mat-error>\n            </mat-form-field> <br>\n            <mat-form-field>\n                <input matInput placeholder=\"Confirm Password\" type=\"password\"\n                [formControl]=\"changePwdForm.controls['confirmpassword']\">\n                <mat-error\n                    *ngIf=\"!changePwdForm.controls['confirmpassword'].valid && changePwdForm.controls['confirmpassword'].touched\">\n                    Password does not match </mat-error>\n                \n            </mat-form-field><br>   \n\n            <span class=\"submit_form\">\n                <button mat-flat-button mat-dialog-close type=\"button\" > Cancel </button>\n                <button mat-flat-button type=\"submit\" [mat-dialog-close]=\"true\" cdkFocusInitial> Submit </button>\n            </span>\n        </mat-dialog-content>\n    </form>\n</mat-card>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/diagnostic-admin-management/listing-diagnostic-admin/listing-diagnostic-admin.component.html":
  /*!*********************************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/diagnostic-admin-management/listing-diagnostic-admin/listing-diagnostic-admin.component.html ***!
    \*********************************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminDiagnosticAdminManagementListingDiagnosticAdminListingDiagnosticAdminComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- Admin Header -->\n<app-admin-header></app-admin-header>\n\n<mat-card class=\"admin_wrapper\">\n  <!-- header with add button -->\n  <mat-card-content class=\"table_wrapper\">\n    <mat-toolbar class=\"top_header\">\n      <h2> Manage Diagnostic Admin </h2>\n    </mat-toolbar>\n\n    <span class=\"add_header\">\n\n      <span class=\"bradcrumb\"><a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage Diagnostic\n        Admin</span>\n      <button mat-flat-button [routerLink]=\"['/admin/diagnostic-admin-management/add']\">Add Diagnostic Admin</button>\n    </span>\n    <!-- End header with add button -->\n\n    <mat-card-content class=\"admin_dashboard\">\n      <lib-listing class=\"DataTable\" *ngIf=\"TechDashboardAllData.length>0\" (onLiblistingChange)=\"listenLiblistingChange($event)\" [datasource]=\"TechDashboardAllData\"\n        [skip]=\"allUserData_skip\" [detail_skip_array]=\"previewModal_detail_skip\"\n        [modify_header_array]=\"allUserData_modify_header\" [apiurl]=\"apiUrl\" [sourcedata]=\"tableName\"\n        [editroute]=\"editUrl\" [jwttoken]=\"user_cookie\" [statusarr]=\"status\" [updateendpoint]=\"UpdateEndpoint\"\n        [deleteendpoint]=\"deleteEndpoint\" [date_search_endpoint]=\"SearchingEndpoint\"\n        [date_search_source]=\"SearchingSourceName\" [search_settings]=\"search_settings\" [sortdata]=\"sortdata\" [libdata]=\"libdata\"\n        [datacollection]=\"datacollection\" [date_search_source_count]=\"diagnosticadminData_count\"\n        [limitcond]=\"limitcond\">\n      </lib-listing>\n\n      <h2 *ngIf=\"TechDashboardAllData.length == 0\">No record found.</h2>\n    </mat-card-content>\n    <!-- Admin Footer -->\n  </mat-card-content>\n</mat-card>\n\n<app-admin-footer></app-admin-footer>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/doctor-management/addedit-doctor/addedit-doctor.component.html":
  /*!***************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/doctor-management/addedit-doctor/addedit-doctor.component.html ***!
    \***************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminDoctorManagementAddeditDoctorAddeditDoctorComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- Admin Header -->\n<app-admin-header *ngIf=\"htmlText.user_details.user_type == 'admin'\"></app-admin-header>\n\n<!-- Diagnostic Admin Header -->\n<app-diagnostic-admin-header *ngIf=\"htmlText.user_details.user_type == 'diagnostic_admin'\"></app-diagnostic-admin-header>\n\n<!-- Doctor Group Header -->\n<app-doctor-group-header *ngIf=\"htmlText.user_details.user_type == 'doctor_group'\"></app-doctor-group-header>\n\n<!-- Distributor Admin Header -->\n<app-distributors-header\n*ngIf=\"htmlText.user_details.user_type == 'distributors'\"></app-distributors-header>\n\n<!-- Doctor Header -->\n<app-doctor-header *ngIf=\"htmlText.user_details.user_type == 'doctor'\"></app-doctor-header>\n\n\n<!-- header with add button -->\n<mat-card class=\"admin_wrapper\">\n  <mat-card-content class=\"title_wrapper\">\n    {{ htmlText.header }}\n  </mat-card-content>\n\n\n  <span class=\"add_header\">\n\n    <ng-container *ngIf=\"htmlText.user_details.user_type == 'admin'\">\n      <span class=\"bradcrumb\">\n        <a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp;\n        <a [routerLink]=\"['/admin/doctor-management']\">Manage Doctor &nbsp;/</a> &nbsp;\n        {{ htmlText.nav }}\n      </span>\n    </ng-container>\n\n    <ng-container *ngIf=\"htmlText.user_details.user_type == 'diagnostic_admin'\">\n      <span class=\"bradcrumb\">\n        <a [routerLink]=\"['/diagnostic-admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp;\n        <a [routerLink]=\"['/diagnostic-admin/doctor-management']\">Manage Doctor &nbsp;/</a> &nbsp;\n        {{ htmlText.nav }}\n      </span>\n    </ng-container>\n\n    <ng-container *ngIf=\"htmlText.user_details.user_type == 'distributors'\">\n      <span class=\"bradcrumb\">\n        <a [routerLink]=\"['/distributors/dashboard']\">Dashboard &nbsp;/</a> &nbsp;\n        <a [routerLink]=\"['/distributors/doctor-management']\">Manage Doctor &nbsp;/</a> &nbsp;\n        {{ htmlText.nav }}\n      </span>\n    </ng-container>\n\n    <ng-container *ngIf=\"htmlText.user_details.user_type == 'doctor_group'\">\n      <span class=\"bradcrumb\">\n        <a [routerLink]=\"['/doctor-group/dashboard']\">Dashboard &nbsp;/</a> &nbsp;\n        <a [routerLink]=\"['/doctor-group/doctor-management']\">Manage Doctor &nbsp;/</a> &nbsp;\n        {{ htmlText.nav }}\n      </span>\n    </ng-container>\n\n  </span>\n  <!-- End header with add button -->\n\n  <mat-card class=\"add_form\">\n    <mat-card-content class=\"form_wrapper\">\n      <form class=\"example-form\" autocomplete=\"off\" [formGroup]=\"doctorManagementAddEditForm\" (ngSubmit)=\"doctorManagementAddEditFormSubmit()\">\n\n        <!-- First Name Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>First Name</mat-label>\n\n          <input matInput placeholder=\"First Name\" [formControl]=\"doctorManagementAddEditForm.controls['firstname']\"\n            (blur)=\"inputUntouch(doctorManagementAddEditForm,'firstname')\">\n\n          <mat-error\n            *ngIf=\"doctorManagementAddEditForm.controls['firstname'].touched && !doctorManagementAddEditForm.controls['firstname'].valid && doctorManagementAddEditForm.controls['firstname'].errors.required\">\n            First Name required.\n          </mat-error>\n\n          <mat-error\n            *ngIf=\"doctorManagementAddEditForm.controls['firstname'].touched && !doctorManagementAddEditForm.controls['firstname'].valid && doctorManagementAddEditForm.controls['firstname'].errors.maxlength\">\n            First Name is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- First Name End -->\n\n        <!-- Last Name Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Last Name</mat-label>\n\n          <input matInput placeholder=\"Last Name\" [formControl]=\"doctorManagementAddEditForm.controls['lastname']\"\n            (blur)=\"inputUntouch(doctorManagementAddEditForm,'lastname')\">\n\n          <mat-error\n            *ngIf=\"doctorManagementAddEditForm.controls['lastname'].touched && !doctorManagementAddEditForm.controls['lastname'].valid && doctorManagementAddEditForm.controls['lastname'].errors.required\">\n            Last Name required.\n          </mat-error>\n\n          <mat-error\n            *ngIf=\"doctorManagementAddEditForm.controls['lastname'].touched && !doctorManagementAddEditForm.controls['lastname'].valid && doctorManagementAddEditForm.controls['lastname'].errors.maxlength\">\n            Last Name is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Last Name End -->\n\n        <!-- Email Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Email Address</mat-label>\n\n          <input matInput placeholder=\"Email Address\" [formControl]=\"doctorManagementAddEditForm.controls['email']\"\n            (blur)=\"inputUntouch(doctorManagementAddEditForm,'email')\">\n\n          <mat-error\n            *ngIf=\"doctorManagementAddEditForm.controls['email'].touched && !doctorManagementAddEditForm.controls['email'].valid && doctorManagementAddEditForm.controls['email'].errors.required\">\n            Email required.\n          </mat-error>\n\n          <mat-error\n            *ngIf=\"doctorManagementAddEditForm.controls['email'].touched && !doctorManagementAddEditForm.controls['email'].valid && doctorManagementAddEditForm.controls['email'].errors.email\">\n            Email is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Email End -->\n\n\n\n        <!-- Phone Number Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Phone Number</mat-label>\n\n          <input matInput placeholder=\"Phone\" [formControl]=\"doctorManagementAddEditForm.controls['phone']\"\n            (blur)=\"inputUntouch(doctorManagementAddEditForm,'phone')\">\n\n          <mat-error\n            *ngIf=\"doctorManagementAddEditForm.controls['phone'].touched && !doctorManagementAddEditForm.controls['phone'].valid && doctorManagementAddEditForm.controls['phone'].errors.required\">\n            Phone Number required.\n          </mat-error>\n\n          <mat-error\n            *ngIf=\"doctorManagementAddEditForm.controls['phone'].touched && !doctorManagementAddEditForm.controls['phone'].valid && doctorManagementAddEditForm.controls['phone'].errors.maxlength\">\n            Phone Number is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Phone Number End -->\n\n        <!-- FAX -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Fax</mat-label>\n\n          <input matInput placeholder=\"Fax Number\" formControlName=\"fax\" (blur)=\"inputUntouch(doctorManagementAddEditForm,'fax')\">\n          \n          <mat-error *ngIf=\"doctorManagementAddEditForm.controls['fax'].touched && !doctorManagementAddEditForm.controls['fax'].valid && doctorManagementAddEditForm.controls['fax'].errors.required\">\n            Fax required.\n          </mat-error>\n        </mat-form-field>\n\n\n        <!-- Practice Name Start  -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Practice Name</mat-label>\n          \n          <input matInput placeholder=\"Practice Name\" formControlName=\"practice_name\" (blur)=\"inputUntouch(doctorManagementAddEditForm, 'practice_name')\">\n          \n          <mat-error *ngIf=\"doctorManagementAddEditForm.controls['practice_name'].touched && !doctorManagementAddEditForm.controls['practice_name'].valid && doctorManagementAddEditForm.controls['practice_name'].errors.required\">\n            Practice Name required.\n          </mat-error>\n        </mat-form-field>\n        <!-- Practice Name Start  -->\n\n\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Select Taxonomies</mat-label>\n          <mat-select formControlName=\"taxo_list\" multiple>\n            <mat-option [value]=\"\">Select Tech</mat-option>\n            <mat-option *ngFor=\"let taxonomie of htmlText.taxonomies;\" value=\"{{ taxonomie.name }}\">{{ taxonomie.name }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <!-- NPI Start  -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>#NPI</mat-label>\n          \n          <input matInput placeholder=\"#NPI Number\" formControlName=\"npi\" (blur)=\"inputUntouch(doctorManagementAddEditForm,'npi')\">\n          \n          <mat-error *ngIf=\"doctorManagementAddEditForm.controls['npi'].touched && !doctorManagementAddEditForm.controls['npi'].valid && doctorManagementAddEditForm.controls['npi'].errors.required\">\n            #NPI required.\n          </mat-error>\n        </mat-form-field>\n        <!-- NPI End  -->\n\n        <!-- Address Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Address</mat-label>\n\n          <input matInput placeholder=\"Address\" [formControl]=\"doctorManagementAddEditForm.controls['address']\"\n            (blur)=\"inputUntouch(doctorManagementAddEditForm,'address')\">\n\n          <mat-error *ngIf=\"doctorManagementAddEditForm.controls['address'].touched && !doctorManagementAddEditForm.controls['address'].valid && doctorManagementAddEditForm.controls['address'].errors.required\">\n            Address required.\n          </mat-error>\n\n          <mat-error *ngIf=\"doctorManagementAddEditForm.controls['address'].touched && !doctorManagementAddEditForm.controls['address'].valid && doctorManagementAddEditForm.controls['address'].errors.maxlength\">\n            Address is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Address End -->\n\n\n        <!-- parent type Start -->\n        <mat-form-field class=\"parent_cat\" appearance=\"fill\" *ngIf = \"htmlText.user_details.user_type == 'admin'\">\n          <mat-label>Parent Type</mat-label>\n\n          <mat-select formControlName=\"parent_type\">\n            <mat-option value=\"admin\">Select Parent Type</mat-option>\n            <mat-option *ngFor=\"let parent of htmlText.parent_type;\" value=\"{{ parent.value }}\" (click)=\"getParentData(parent.name)\">{{ parent.name }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <!-- Parent Type End -->\n\n        <ng-container *ngIf = \"htmlText.user_details.user_type == 'admin'\">\n        <!-- Parent Name Start -->\n        <mat-form-field appearance=\"fill\" *ngIf = \"(selectionChangeValue == 'DiagnosticAdmin')|| (selectionChangeValue == 'diagnostic_admin')\">\n          <mat-label>Select Parent Name</mat-label>\n          <mat-select formControlName=\"parent_id\">\n            <mat-option [value]=\"\">Select Parent Name</mat-option>\n            <mat-option *ngFor=\"let parent of htmlText.parent_id;\" value=\"{{ parent._id }}\" (click)=\"getalldata(parent)\">{{ parent.center_name }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n        <!-- Parent Name name -->\n\n\n        <!-- Parent Name Start -->\n        <mat-form-field appearance=\"fill\" *ngIf = \"(selectionChangeValue == 'DoctorGroup')|| (selectionChangeValue == 'doctor_group')\">\n          <mat-label>Select Parent Name</mat-label>\n          <mat-select formControlName=\"parent_id\">\n            <mat-option [value]=\"\">Select Parent Name</mat-option>\n            <mat-option *ngFor=\"let parent of htmlText.parent_id;\" value=\"{{ parent._id }}\" (click)=\"getalldata(parent)\">{{ parent.groupname }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n        <!-- Parent Name name -->\n\n\n        <!-- Parent Name Start -->\n        <mat-form-field appearance=\"fill\" *ngIf = \"(selectionChangeValue == 'Distributor')|| (selectionChangeValue == 'distributors')\">\n          <mat-label>Select Parent Name</mat-label>\n          <mat-select formControlName=\"parent_id\" >\n            <mat-option [value]=\"\">Select Parent Name</mat-option>\n            <mat-option *ngFor=\"let parent of htmlText.parent_id;\" value=\"{{ parent._id }}\" (click)=\"getalldata(parent)\">{{ parent.distributorname }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n        <!-- Parent Name name -->\n        </ng-container>\n\n\n        <!-- Parent Name Start -->\n        <!-- <mat-form-field appearance=\"fill\" *ngIf = \"selectionChangeValue == 'Admin'\">\n          <mat-label>Select Parent Name</mat-label>\n          <mat-select formControlName=\"parent_id\">\n            <mat-option [value]=\"\">Select Parent Name</mat-option>\n            <mat-option *ngFor=\"let parent of htmlText.parent_id;\" value=\"{{ parent._id }}\">{{ parent.distributorname }}</mat-option>\n          </mat-select>\n        </mat-form-field> -->\n        <!-- Parent Name name -->\n\n        <!-- State Start -->\n        <mat-form-field class=\"parent_cat\" appearance=\"fill\">\n          <mat-label>State</mat-label>\n\n          <!-- <mat-select formControlName=\"state\" (selectionChange)=\"getCity($event.value);\"> -->\n            <mat-select formControlName=\"state\">\n            <mat-option [value]=\"\">Select State</mat-option>\n            <mat-option *ngFor=\"let state of htmlText.states;\" value=\"{{ state.name }}\">{{ state.name }}</mat-option>\n          </mat-select>\n\n          <mat-error *ngIf=\"doctorManagementAddEditForm.controls['state'].touched && !doctorManagementAddEditForm.controls['state'].valid && doctorManagementAddEditForm.controls['state'].errors.required\">\n            State required.\n          </mat-error>\n        </mat-form-field>\n        <!-- State End -->\n\n        <!-- City Start -->\n        <!-- <mat-form-field class=\"parent_cat\" appearance=\"fill\">\n          <mat-label>City</mat-label>\n          <mat-select formControlName=\"city\">\n            <mat-option value=\"\">Select City</mat-option>\n            <mat-option *ngFor=\"let city of htmlText.cities;\" value=\"{{ city }}\">{{ city }}</mat-option>\n          </mat-select>\n          <mat-error *ngIf=\"doctorManagementAddEditForm.controls['city'].touched && !doctorManagementAddEditForm.controls['city'].valid && doctorManagementAddEditForm.controls['city'].errors.required\">\n            State required.\n          </mat-error>\n        </mat-form-field> -->\n\n        \n         <mat-form-field appearance=\"fill\">\n          <mat-label>City</mat-label>\n          \n          <input matInput placeholder=\"City\" formControlName=\"city\" (blur)=\"inputUntouch(doctorManagementAddEditForm,'city')\">\n          \n          <mat-error *ngIf=\"doctorManagementAddEditForm.controls['npi'].touched && !doctorManagementAddEditForm.controls['city'].valid && doctorManagementAddEditForm.controls['city'].errors.required\">\n            City required.\n          </mat-error>\n        </mat-form-field>\n      \n\n        <!-- City End -->\n\n         <!-- cpt Validate Amount Start  -->\n        <mat-form-field class=\"parent_cat\" appearance=\"fill\">\n          <mat-label>CPT Validated Amount</mat-label>\n\n          <mat-select formControlName=\"cpt_validate_amount\">\n            <!-- <mat-option value=\"admin\">Select Cpt Amount</mat-option> -->\n            <mat-option *ngFor=\"let cpt of htmlText.cpt_amount;\" value=\"{{ cpt.value }}\" >${{ cpt.value }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n        <!-- cpt Validate AmountStart  -->\n\n        <!-- Tech Details Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Select Tech</mat-label>\n          <mat-select formControlName=\"tech_id\" multiple>\n            <mat-option [value]=\"\">Select Tech</mat-option>\n            <mat-option *ngFor=\"let tech of htmlText.techData;\" value=\"{{ tech._id }}\">{{ tech.firstname }} {{tech.lastname}}</mat-option>\n          </mat-select>\n        </mat-form-field>\n        <!-- Tech Details name -->\n\n        <!-- Biller Details Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Select Biiler</mat-label>\n          <mat-select formControlName=\"biller_id\" multiple>\n            <mat-option [value]=\"\">Select a biiler</mat-option>\n            <mat-option *ngFor=\"let biller of htmlText.billerData;\" value=\"{{ biller._id }}\">{{ biller.firstname }} {{ biller.lastname }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n        <!-- Biller Details End -->\n\n        <!-- Doctor's Office Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Select Doctor's Office</mat-label>\n          <mat-select formControlName=\"doctors_office_id\" multiple>\n            <mat-option [value]=\"\">Select Doctor's Office</mat-option>\n            <mat-option *ngFor=\"let doctorOfficeData of htmlText.doctorOfficeData;\" value=\"{{ doctorOfficeData._id }}\">{{ doctorOfficeData.firstname }} {{ doctorOfficeData.lastname }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n        <!-- Doctor's Office End -->\n\n        <!-- Zip Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Zip</mat-label>\n\n          <input type=\"number\" matInput placeholder=\"ZIP\" [formControl]=\"doctorManagementAddEditForm.controls['zip']\"\n            (blur)=\"inputUntouch(doctorManagementAddEditForm,'zip')\">\n\n          <mat-error *ngIf=\"doctorManagementAddEditForm.controls['zip'].touched && !doctorManagementAddEditForm.controls['zip'].valid && doctorManagementAddEditForm.controls['zip'].errors.required\">\n            Zip required.\n          </mat-error>\n        </mat-form-field>\n        <!-- Zip Start -->\n\n\n\n        <ng-container *ngIf=\"!params_id\">\n          <!-- Password Start -->\n          <ng-container *ngIf=\"!params_id\">\n            <mat-form-field class=\"form-group\" appearance=\"fill\">\n\n              <input matInput placeholder=\"Password\" type=\"password\"\n                [formControl]=\"doctorManagementAddEditForm.controls['password']\">\n\n              <mat-error *ngIf=\"!doctorManagementAddEditForm.controls['password'].valid && doctorManagementAddEditForm.controls['password'].touched\">\n                Password required.\n              </mat-error>\n            </mat-form-field>\n\n            <mat-form-field class=\"form-group\" appearance=\"fill\">\n              <input matInput placeholder=\"Confirm Password\" type=\"password\"\n                [formControl]=\"doctorManagementAddEditForm.controls['confirmpassword']\">\n\n              <mat-error *ngIf=\"!doctorManagementAddEditForm.controls['confirmpassword'].valid && doctorManagementAddEditForm.controls['confirmpassword'].touched\">\n                Password does not match\n              </mat-error>\n            </mat-form-field>\n          </ng-container>\n          <!-- Password End -->\n        </ng-container>\n\n        <!-- Status -->\n        <span class=\"status_wrapper\">\n          <mat-checkbox formControlName=\"status\">Active</mat-checkbox>\n        </span>\n\n        <span class=\"submit_form\">\n          <ng-container *ngIf=\"htmlText.user_details.user_type == 'admin'\">\n            <button mat-flat-button type=\"button\" [routerLink]=\"['/admin/doctor-management']\"> Back</button>\n          </ng-container>\n          <ng-container *ngIf=\"htmlText.user_details.user_type == 'diagnostic_admin'\">\n            <button mat-flat-button type=\"button\" [routerLink]=\"['/diagnostic-admin/doctor-management']\">Back </button>\n          </ng-container>\n          <ng-container *ngIf=\"htmlText.user_details.user_type == 'distributors'\">\n            <button mat-flat-button type=\"button\" [routerLink]=\"['/distributors/doctor-management']\">Back </button>\n          </ng-container>\n          <ng-container *ngIf=\"htmlText.user_details.user_type == 'doctor_group'\">\n            <button mat-flat-button type=\"button\" [routerLink]=\"['/doctor-group/doctor-management']\">Back </button>\n          </ng-container>\n\n          <button mat-flat-button type=\"reset\" *ngIf=\"params_id == ''\">Reset</button>\n          <button mat-flat-button type=\"submit\"> {{ htmlText.buttonText }} </button>\n\n          <button mat-flat-button type=\"button\" *ngIf=\"params_id != ''\" (click)=\"openDialog('')\"> Change Password </button> \n        </span>\n\n      </form>\n    </mat-card-content>\n  </mat-card>\n\n</mat-card>\n\n\n<app-tech-footer></app-tech-footer>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/doctor-management/addedit-doctor/modal.html":
  /*!********************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/doctor-management/addedit-doctor/modal.html ***!
    \********************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminDoctorManagementAddeditDoctorModalHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n<mat-card class=\"add_form\">\n      <h1 mat-dialog-title>Change Password</h1>\n  \n      <form class=\"example-form\" autocomplete=\"off\" name=\"changePwdForm\" [formGroup]=\"changePwdForm\"\n          (ngSubmit)=\"changePasswordFormSubmit()\">\n          <mat-dialog-content class=\"mat-typography\">\n  \n  \n              <mat-form-field>\n                  <input matInput placeholder=\"Password\" type=\"password\"\n                  [formControl]=\"changePwdForm.controls['password']\">\n                  <mat-error *ngIf=\"changePwdForm.controls['password'].touched && !changePwdForm.controls['password'].valid\n            && changePwdForm.controls['password'].errors.required\">\n                      Password can not be blank</mat-error>\n              </mat-form-field> <br>\n              <mat-form-field>\n                  <input matInput placeholder=\"Confirm Password\" type=\"password\"\n                  [formControl]=\"changePwdForm.controls['confirmpassword']\">\n                  <mat-error\n                      *ngIf=\"!changePwdForm.controls['confirmpassword'].valid && changePwdForm.controls['confirmpassword'].touched\">\n                      Password does not match </mat-error>\n                  \n              </mat-form-field><br>   \n  \n              <span class=\"submit_form\">\n                  <button mat-flat-button mat-dialog-close type=\"button\" > Cancel </button>\n                  <button mat-flat-button type=\"submit\" [mat-dialog-close]=\"true\" cdkFocusInitial> Submit </button>\n              </span>\n          </mat-dialog-content>\n      </form>\n  </mat-card>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/doctor-management/list-doctor/list-doctor.component.html":
  /*!*********************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/doctor-management/list-doctor/list-doctor.component.html ***!
    \*********************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminDoctorManagementListDoctorListDoctorComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- Admin Header -->\n<app-admin-header *ngIf=\"userData.user_type == 'admin'\"></app-admin-header>\n\n<!-- Diagnostic Admin Header -->\n<app-diagnostic-admin-header *ngIf=\"userData.user_type == 'diagnostic_admin'\"></app-diagnostic-admin-header>\n\n<!-- Doctor Group Admin Header -->\n<app-doctor-group-header *ngIf=\"userData.user_type == 'doctor_group'\"></app-doctor-group-header>\n\n<!-- Distributors Admin Header -->\n<app-distributors-header *ngIf=\"userData.user_type == 'distributors'\"></app-distributors-header>\n\n<!-- Doctor Header -->\n<app-doctor-header *ngIf=\"userData.user_type == 'doctor'\"></app-doctor-header>\n\n\n\n\n\n<mat-card class=\"admin_wrapper \">\n\n  <mat-card-content class=\"table_wrapper\">\n    <ng-container *ngIf=\"activatedRoute.snapshot.routeConfig.path != 'admin/sales-person/doctor-management'\">\n    <mat-toolbar class=\"top_header\">\n      <h2> Manage doctor</h2>\n    </mat-toolbar>\n    </ng-container>\n\n    <ng-container *ngIf=\"activatedRoute.snapshot.routeConfig.path == 'admin/sales-person/doctor-management'\">\n      <mat-toolbar class=\"top_header\">\n        <h2> Doctor Joined by Sales Person</h2>\n      </mat-toolbar>\n      </ng-container>\n\n    <mat-toolbar class=\"add_header\">\n      <ng-container *ngIf=\"userData.user_type == 'admin' && activatedRoute.snapshot.routeConfig.path != 'admin/sales-person/doctor-management'\">\n        <span class=\"bradcrumb\"><a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage Doctor</span>\n        <button mat-flat-button [routerLink]=\"['/admin/doctor-management/add']\">Add Doctor</button>\n      </ng-container>\n\n      <ng-container *ngIf=\"userData.user_type == 'admin' && activatedRoute.snapshot.routeConfig.path == 'admin/sales-person/doctor-management'\">\n        <span class=\"bradcrumb\"><a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Doctor List</span>\n      </ng-container>\n\n      <ng-container *ngIf=\"userData.user_type == 'diagnostic_admin'\">\n        <span class=\"bradcrumb\"><a [routerLink]=\"['/diagnostic-admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage Doctor</span>\n        <button mat-flat-button [routerLink]=\"['/diagnostic-admin/doctor-management/add']\">Add Doctor</button>\n      </ng-container>\n\n      <ng-container *ngIf=\"userData.user_type == 'doctor_group'\">\n        <span class=\"bradcrumb\"><a [routerLink]=\"['/doctor-group/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage Doctor</span>\n        <button mat-flat-button [routerLink]=\"['/doctor-group/doctor-management/add']\">Add Doctor</button>\n      </ng-container>\n\n      <ng-container *ngIf=\"userData.user_type == 'distributors'\">\n        <span class=\"bradcrumb\"><a [routerLink]=\"['/distributors/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage Doctor</span>\n        <button mat-flat-button [routerLink]=\"['/distributors/doctor-management/add']\">Add Doctor</button>\n      </ng-container>\n    </mat-toolbar>\n    <!-- End header with add button -->\n\n    <!-- Listing goes here  -->\n    \n    <lib-listing class=\"DataTable manageDoctor\" *ngIf=\"docData.length>0\" (onLiblistingChange)=\"listenLiblistingChange($event)\"[datasource]=\"docData\" [skip]=\"docData_skip\"\n      [modify_header_array]=\"docData_modify_header\" [sourcedata]=\"tableName\" [detail_skip_array]=\"previewModal_skip\"\n      [apiurl]=\"apiUrl\" [editroute]=\"editUrl\" [jwttoken]=\"user_cookie\" [statusarr]=\"status\"\n      [updateendpoint]=\"UpdateEndpoint\" [deleteendpoint]=\"deleteEndpoint\" [date_search_endpoint]=\"searchingEndpoint\"\n      [date_search_source]=\"searchSourceName\" [search_settings]=\"search_settings\" [sortdata]=\"sortdata\" [datacollection]=\"datacollection\" [libdata]=\"libdata\" [date_search_source_count]=\"docData_count\" [limitcond]=\"limitcond\">\n\n    </lib-listing>\n \n    <h2 *ngIf=\"docData.length == 0\">No record found.</h2>\n    <!-- Listing ends here  -->\n  </mat-card-content>\n</mat-card>\n\n\n\n<!-- Admin Footer -->\n<app-admin-footer *ngIf=\"userData.user_type == 'admin'\"></app-admin-footer>\n\n<!-- Diagnostic Admin Header -->\n<app-diagnostic-admin-footer *ngIf=\"userData.user_type == 'diagnostic_admin'\"></app-diagnostic-admin-footer>\n\n<!-- Doctor Group Admin Header -->\n<app-doctor-group-footer *ngIf=\"userData.user_type == 'doctor_group'\"></app-doctor-group-footer>\n\n<!-- Distributors Admin Header -->\n<app-distributors-footer *ngIf=\"userData.user_type == 'distributors'\"></app-distributors-footer>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/doctor-office-management/add-edit-doctor-ofc/add-edit-doctor-ofc.component.html":
  /*!********************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/doctor-office-management/add-edit-doctor-ofc/add-edit-doctor-ofc.component.html ***!
    \********************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminDoctorOfficeManagementAddEditDoctorOfcAddEditDoctorOfcComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- Admin Header -->\n<app-admin-header *ngIf=\"htmlText.user_details.user_type == 'admin'\"></app-admin-header>\n\n<!-- Diagnostic Admin Header -->\n<app-diagnostic-admin-header *ngIf=\"htmlText.user_details.user_type == 'diagnostic_admin'\"></app-diagnostic-admin-header>\n\n<!-- Doctor Header -->\n<app-doctor-header *ngIf=\"htmlText.user_details.user_type == 'doctor'\"></app-doctor-header>\n\n<!-- Doctor Group Header -->\n<app-doctor-group-header *ngIf=\"htmlText.user_details.user_type == 'doctor_group'\"></app-doctor-group-header>\n\n<!-- Distributor Header -->\n<app-distributors-header *ngIf=\"htmlText.user_details.user_type == 'distributors'\"></app-distributors-header>\n\n\n\n\n<mat-card class=\"admin_wrapper\">\n  <!-- header with add button -->\n  <mat-card-content class=\"title_wrapper\">\n    {{ htmlText.header }}\n  </mat-card-content>\n  <span class=\"add_header\">\n    <ng-container *ngIf=\"htmlText.user_details.user_type == 'admin'\">\n      <span class=\"bradcrumb\">\n        <a [routerLink]=\"['/admin/dashboard']\"> Dashboard &nbsp;/</a> &nbsp;\n      <a [routerLink]=\"['/admin/doctor-office-management']\"> Manage Doctor's Office &nbsp;/</a> &nbsp;\n      {{ htmlText.nav }}\n      </span>\n    </ng-container>\n\n    <ng-container *ngIf=\"htmlText.user_details.user_type == 'diagnostic_admin'\">\n      <span class=\"bradcrumb\">\n        <a [routerLink]=\"['/diagnostic-admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp;\n        <a [routerLink]=\"['/diagnostic-admin/doctor-office-management']\"> Manage Doctor's Office &nbsp;/</a> &nbsp;\n        {{ htmlText.nav }}\n      </span>\n    </ng-container>\n\n\n    <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'doctor_group'\">\n      <span class=\"bradcrumb\">\n        <a [routerLink]=\"['/doctor-group/dashboard']\">Dashboard &nbsp;/</a> &nbsp;\n        <a [routerLink]=\"['/doctor-group/doctor-office-management']\">Manage Doctor's Office &nbsp;/</a> &nbsp;\n        {{ htmlText.nav }}\n      </span>\n    </ng-container>\n\n    <ng-container *ngIf=\"htmlText.user_details.user_type == 'distributors`'\">\n      <span class=\"bradcrumb\">\n        <a [routerLink]=\"['/distributors/dashboard']\">Dashboard &nbsp;/</a> &nbsp;\n        <a [routerLink]=\"['/distributors/doctor-office-management']\">Manage Doctor's Office &nbsp;/</a> &nbsp;\n        {{ htmlText.nav }}\n      </span>\n    </ng-container>\n\n    <ng-container *ngIf=\"htmlText.user_details.user_type == 'doctor'\">\n      <span class=\"bradcrumb\">\n        <a [routerLink]=\"['/doctor/dashboard']\">Dashboard &nbsp;/</a> &nbsp;\n        <a [routerLink]=\"['/doctor/doctor-office-management']\"> Manage Doctor's Office &nbsp;/</a> &nbsp;\n        {{ htmlText.nav }}\n      </span>\n    </ng-container>\n  </span>\n\n  <mat-card class=\"add_form\">\n    <mat-card-content class=\"form_wrapper\">\n      <form class=\"example-form\" autocomplete=\"off\" name=\"doctorOfficeAddEditForm\" [formGroup]=\"doctorOfficeAddEditForm\" (ngSubmit)=\"doctorOfficeAddEditFormFormSubmit()\">\n\n        <!-- Center Name Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Center Name</mat-label>\n\n          <input matInput placeholder=\"First Name\" [formControl]=\"doctorOfficeAddEditForm.controls['center_name']\"\n            (blur)=\"inputUntouch(doctorOfficeAddEditForm,'center_name')\">\n\n          <mat-error\n            *ngIf=\"doctorOfficeAddEditForm.controls['center_name'].touched && !doctorOfficeAddEditForm.controls['center_name'].valid && doctorOfficeAddEditForm.controls['center_name'].errors.required\">\n            Center Name required.\n          </mat-error>\n\n          <mat-error\n            *ngIf=\"doctorOfficeAddEditForm.controls['center_name'].touched && !doctorOfficeAddEditForm.controls['center_name'].valid && doctorOfficeAddEditForm.controls['center_name'].errors.maxlength\">\n            Center Name is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Center Name End -->\n\n        <!-- Tech Details Start -->\n        <!-- <mat-form-field appearance=\"fill\">\n          <mat-label>Select Tech</mat-label>\n          <mat-select formControlName=\"tech_id\" multiple>\n            <mat-option *ngFor=\"let tech of htmlText.techData;\" value=\"{{ tech._id }}\">{{ tech.firstname }} {{tech.lastname}}</mat-option>\n          </mat-select>\n        </mat-form-field> -->\n        <!-- Tech Details name -->\n\n        <!-- First Name Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>First Name</mat-label>\n\n          <input matInput placeholder=\"First Name\" [formControl]=\"doctorOfficeAddEditForm.controls['firstname']\"\n            (blur)=\"inputUntouch(doctorOfficeAddEditForm,'firstname')\">\n\n          <mat-error\n            *ngIf=\"doctorOfficeAddEditForm.controls['firstname'].touched && !doctorOfficeAddEditForm.controls['firstname'].valid && doctorOfficeAddEditForm.controls['firstname'].errors.required\">\n            First Name required.\n          </mat-error>\n\n          <mat-error\n            *ngIf=\"doctorOfficeAddEditForm.controls['firstname'].touched && !doctorOfficeAddEditForm.controls['firstname'].valid && doctorOfficeAddEditForm.controls['firstname'].errors.maxlength\">\n            First Name is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- First Name End -->\n\n        <!-- Last Name Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Last Name</mat-label>\n\n          <input matInput placeholder=\"Last Name\" [formControl]=\"doctorOfficeAddEditForm.controls['lastname']\"\n            (blur)=\"inputUntouch(doctorOfficeAddEditForm,'lastname')\">\n\n          <mat-error\n            *ngIf=\"doctorOfficeAddEditForm.controls['lastname'].touched && !doctorOfficeAddEditForm.controls['lastname'].valid && doctorOfficeAddEditForm.controls['lastname'].errors.required\">\n            Last Name required.\n          </mat-error>\n\n          <mat-error\n            *ngIf=\"doctorOfficeAddEditForm.controls['lastname'].touched && !doctorOfficeAddEditForm.controls['lastname'].valid && doctorOfficeAddEditForm.controls['lastname'].errors.maxlength\">\n            Last Name is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Last Name End -->\n\n        <!-- Email Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Email Address</mat-label>\n\n          <input matInput placeholder=\"Email Address\" [formControl]=\"doctorOfficeAddEditForm.controls['email']\"\n            (blur)=\"inputUntouch(doctorOfficeAddEditForm,'email')\">\n\n          <mat-error\n            *ngIf=\"doctorOfficeAddEditForm.controls['email'].touched && !doctorOfficeAddEditForm.controls['email'].valid && doctorOfficeAddEditForm.controls['email'].errors.required\">\n            Email required.\n          </mat-error>\n\n          <mat-error\n            *ngIf=\"doctorOfficeAddEditForm.controls['email'].touched && !doctorOfficeAddEditForm.controls['email'].valid && doctorOfficeAddEditForm.controls['email'].errors.email\">\n            Email is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Email End -->\n\n        <!-- Phone Number Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Phone Number</mat-label>\n\n          <input matInput placeholder=\"Phone\" [formControl]=\"doctorOfficeAddEditForm.controls['phone']\"\n            (blur)=\"inputUntouch(doctorOfficeAddEditForm,'phone')\">\n\n          <mat-error\n            *ngIf=\"doctorOfficeAddEditForm.controls['phone'].touched && !doctorOfficeAddEditForm.controls['phone'].valid && doctorOfficeAddEditForm.controls['phone'].errors.required\">\n            Phone Number required.\n          </mat-error>\n\n          <mat-error\n            *ngIf=\"doctorOfficeAddEditForm.controls['phone'].touched && !doctorOfficeAddEditForm.controls['phone'].valid && doctorOfficeAddEditForm.controls['phone'].errors.maxlength\">\n            Phone Number is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Phone Number End -->\n\n        <!-- Address Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Address</mat-label>\n\n          <input matInput placeholder=\"Address\" [formControl]=\"doctorOfficeAddEditForm.controls['address']\"\n            (blur)=\"inputUntouch(doctorOfficeAddEditForm,'address')\">\n\n          <mat-error *ngIf=\"doctorOfficeAddEditForm.controls['address'].touched && !doctorOfficeAddEditForm.controls['address'].valid && doctorOfficeAddEditForm.controls['address'].errors.required\">\n            Address required.\n          </mat-error>\n\n          <mat-error *ngIf=\"doctorOfficeAddEditForm.controls['address'].touched && !doctorOfficeAddEditForm.controls['address'].valid && doctorOfficeAddEditForm.controls['address'].errors.maxlength\">\n            Address is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Address End -->\n\n        <!-- parent type Start -->\n        <mat-form-field class=\"parent_cat\" appearance=\"fill\" *ngIf = \"htmlText.user_details.user_type == 'admin'\">\n          <mat-label>Parent Type</mat-label>\n\n          <mat-select formControlName=\"parent_type\">\n            <mat-option value=\"admin\">Select Parent Type</mat-option>\n            <mat-option *ngFor=\"let parent of htmlText.parent_type;\" value=\"{{ parent.value }}\" (click)=\"getParentData(parent.name)\">{{ parent.name }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <!-- Parent Type End -->\n\n          <ng-container *ngIf = \"htmlText.user_details.user_type == 'admin'\">\n        <!-- Parent Name Start -->\n        <mat-form-field appearance=\"fill\" *ngIf = \"(selectionChangeValue == 'DiagnosticAdmin')|| (selectionChangeValue == 'diagnostic_admin')\">\n          <mat-label>Select Parent Name</mat-label>\n          <mat-select formControlName=\"parent_id\">\n            <mat-option [value]=\"\">Select Parent Name</mat-option>\n            <mat-option *ngFor=\"let parent of htmlText.parent_id;\" value=\"{{ parent._id }}\" >{{ parent.center_name }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n        <!-- Parent Name name -->\n\n\n        <!-- Parent Name Start -->\n        <mat-form-field appearance=\"fill\" *ngIf = \"(selectionChangeValue == 'DoctorGroup') || (selectionChangeValue == 'doctor_group')\">\n          <mat-label>Select Parent Name</mat-label>\n          <mat-select formControlName=\"parent_id\">\n            <mat-option [value]=\"\">Select Parent Name</mat-option>\n            <mat-option *ngFor=\"let parent of htmlText.parent_id;\" value=\"{{ parent._id }}\" >{{ parent.groupname }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n        <!-- Parent Name name -->\n\n\n        <!-- Parent Name Start -->\n        <mat-form-field appearance=\"fill\" *ngIf = \"(selectionChangeValue == 'Distributor') || (selectionChangeValue == 'distributor')\">\n          <mat-label>Select Parent Name</mat-label>\n          <mat-select formControlName=\"parent_id\" >\n            <mat-option [value]=\"\">Select Parent Name</mat-option>\n            <mat-option *ngFor=\"let parent of htmlText.parent_id;\" value=\"{{ parent._id }}\" >{{ parent.distributorname }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n        <!-- Parent Name name -->\n        </ng-container>\n\n\n        <!-- State Start -->\n        <mat-form-field class=\"parent_cat\" appearance=\"fill\">\n          <mat-label>State</mat-label>\n\n          <mat-select formControlName=\"state\" (selectionChange)=\"getCity($event.value);\">\n            <mat-option [value]=\"\">Select State</mat-option>\n            <mat-option *ngFor=\"let state of htmlText.states;\" value=\"{{ state.name }}\">{{ state.name }}</mat-option>\n          </mat-select>\n\n          <mat-error *ngIf=\"doctorOfficeAddEditForm.controls['state'].touched && !doctorOfficeAddEditForm.controls['state'].valid && doctorOfficeAddEditForm.controls['state'].errors.required\">\n            State required.\n          </mat-error>\n        </mat-form-field>\n        <!-- State End -->\n\n        <!-- City Start -->\n        <mat-form-field class=\"parent_cat\" appearance=\"fill\">\n          <mat-label>City</mat-label>\n\n          <mat-select formControlName=\"city\">\n            <mat-option value=\"\">Select City</mat-option>\n            <mat-option *ngFor=\"let city of htmlText.cities;\" value=\"{{ city }}\">{{ city }}</mat-option>\n          </mat-select>\n\n          <mat-error *ngIf=\"doctorOfficeAddEditForm.controls['city'].touched && !doctorOfficeAddEditForm.controls['city'].valid && doctorOfficeAddEditForm.controls['city'].errors.required\">\n            State required.\n          </mat-error>\n        </mat-form-field>\n        <!-- City End -->\n\n        <!-- Zip Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Zip</mat-label>\n\n          <input type=\"number\" matInput placeholder=\"ZIP\" [formControl]=\"doctorOfficeAddEditForm.controls['zip']\"\n            (blur)=\"inputUntouch(doctorOfficeAddEditForm,'zip')\">\n\n          <mat-error *ngIf=\"doctorOfficeAddEditForm.controls['zip'].touched && !doctorOfficeAddEditForm.controls['zip'].valid && doctorOfficeAddEditForm.controls['zip'].errors.required\">\n            Zip required.\n          </mat-error>\n        </mat-form-field>\n        <!-- Zip Start -->\n\n        <ng-container *ngIf=\"!params_id\">\n          <!-- Password Start -->\n          <ng-container *ngIf=\"!params_id\">\n            <mat-form-field class=\"form-group\" appearance=\"fill\">\n\n              <input matInput placeholder=\"Password\" type=\"password\"\n                [formControl]=\"doctorOfficeAddEditForm.controls['password']\">\n\n              <mat-error *ngIf=\"!doctorOfficeAddEditForm.controls['password'].valid && doctorOfficeAddEditForm.controls['password'].touched\">\n                Password required.\n              </mat-error>\n            </mat-form-field>\n\n            <mat-form-field class=\"form-group\" appearance=\"fill\">\n              <input matInput placeholder=\"Confirm Password\" type=\"password\"\n                [formControl]=\"doctorOfficeAddEditForm.controls['confirmpassword']\">\n\n              <mat-error *ngIf=\"!doctorOfficeAddEditForm.controls['confirmpassword'].valid && doctorOfficeAddEditForm.controls['confirmpassword'].touched\">\n                Password does not match\n              </mat-error>\n            </mat-form-field>\n          </ng-container>\n          <!-- Password End -->\n        </ng-container>\n\n        <mat-checkbox [formControl]=\"doctorOfficeAddEditForm.controls['status']\" checked>Active</mat-checkbox>\n\n\n        <span class=\"submit_form\">\n          <button mat-flat-button type=\"button\" *ngIf=\"htmlText.user_details.user_type == 'doctor'\" [routerLink]=\"['/doctor/doctor-office-management']\"> Back</button>\n          <button mat-flat-button type=\"button\" *ngIf=\"htmlText.user_details.user_type == 'admin'\" [routerLink]=\"['/admin/doctor-office-management']\"> Back</button>\n\n\n          <button mat-flat-button type=\"reset\" *ngIf=\"params_id == ''\">Reset </button>\n          <button mat-flat-button type=\"submit\"> {{ htmlText.buttonText }} </button>\n          <button mat-flat-button type=\"button\" *ngIf=\"params_id != ''\" (click)=\"openDialog('')\"> Change Password </button>\n        </span>\n        \n      </form>\n    </mat-card-content>\n  </mat-card>\n</mat-card>\n<app-admin-footer></app-admin-footer>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/doctor-office-management/add-edit-doctor-ofc/modal.html":
  /*!********************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/doctor-office-management/add-edit-doctor-ofc/modal.html ***!
    \********************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminDoctorOfficeManagementAddEditDoctorOfcModalHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n<mat-card class=\"add_form\">\n        <h1 mat-dialog-title>Change Password</h1>\n    \n        <form class=\"example-form\" autocomplete=\"off\" name=\"changePwdForm\" [formGroup]=\"changePwdForm\"\n            (ngSubmit)=\"changePasswordFormSubmit()\">\n            <mat-dialog-content class=\"mat-typography\">\n    \n    \n                <mat-form-field>\n                    <input matInput placeholder=\"Password\" type=\"password\"\n                    [formControl]=\"changePwdForm.controls['password']\">\n                    <mat-error *ngIf=\"changePwdForm.controls['password'].touched && !changePwdForm.controls['password'].valid\n              && changePwdForm.controls['password'].errors.required\">\n                        Password can not be blank</mat-error>\n                </mat-form-field> <br>\n                <mat-form-field>\n                    <input matInput placeholder=\"Confirm Password\" type=\"password\"\n                    [formControl]=\"changePwdForm.controls['confirmpassword']\">\n                    <mat-error\n                        *ngIf=\"!changePwdForm.controls['confirmpassword'].valid && changePwdForm.controls['confirmpassword'].touched\">\n                        Password does not match </mat-error>\n                    \n                </mat-form-field><br>   \n    \n                <span class=\"submit_form\">\n                    <button mat-flat-button mat-dialog-close type=\"button\" > Cancel </button>\n                    <button mat-flat-button type=\"submit\" [mat-dialog-close]=\"true\" cdkFocusInitial> Submit </button>\n                </span>\n            </mat-dialog-content>\n        </form>\n    </mat-card>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/doctor-office-management/doctor-office-management.component.html":
  /*!*****************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/doctor-office-management/doctor-office-management.component.html ***!
    \*****************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminDoctorOfficeManagementDoctorOfficeManagementComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- Admin Header -->\n<app-admin-header *ngIf=\"userData.user_type == 'admin'\"></app-admin-header>\n\n<!-- Doctor Header -->\n<app-doctor-header *ngIf=\"userData.user_type == 'doctor'\"></app-doctor-header>\n\n<!-- Diagnostic Admin Header -->\n<app-diagnostic-admin-header *ngIf=\"userData.user_type == 'diagnostic_admin'\"></app-diagnostic-admin-header>\n\n<!-- Doctor Group Admin Header -->\n<app-doctor-group-header *ngIf=\"userData.user_type == 'doctor_group'\"></app-doctor-group-header>\n\n<!-- Distributors Admin Header -->\n<app-distributors-header *ngIf=\"userData.user_type == 'distributors'\"></app-distributors-header>\n\n\n\n\n<!-- header with add button -->\n\n<mat-card class=\"admin_wrapper\">\n  <!-- header with add button -->\n  <mat-card-content class=\"table_wrapper\">\n    <mat-toolbar class=\"top_header\">\n      <h2> manage Doctor's Office</h2>\n    </mat-toolbar>\n\n    <ng-container *ngIf=\"userData.user_type == 'admin'\">\n      <span class=\"add_header\">\n        <span class=\"bradcrumb\"><a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage Doctor's Office</span>\n        <button mat-flat-button [routerLink]=\"['/admin/doctor-office-management/add']\">Add Doctors Office</button>\n      </span>\n    </ng-container>\n\n    <ng-container *ngIf=\"userData.user_type == 'doctor'\">\n      <span class=\"add_header\">\n        <span class=\"bradcrumb\"><a [routerLink]=\"['/doctor/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage Doctor's Office</span>\n        <button mat-flat-button [routerLink]=\"['/doctor/doctor-office-management/add']\">Add Doctors Office</button>\n      </span>\n    </ng-container>\n\n    <ng-container *ngIf=\"userData.user_type == 'diagnostic_admin'\">\n      <span class=\"add_header\">\n        <span class=\"bradcrumb\"><a [routerLink]=\"['/diagnostic-admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage Doctor's Office</span>\n        <button mat-flat-button [routerLink]=\"['/diagnostic-admin/doctor-office-management/add']\">Add Doctors Office</button>\n      </span>\n    </ng-container>\n\n    <ng-container *ngIf=\"userData.user_type == 'doctor_group'\">\n      <span class=\"add_header\">\n        <span class=\"bradcrumb\"><a [routerLink]=\"['/doctor-group/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage Doctor's Office</span>\n        <button mat-flat-button [routerLink]=\"['/doctor-group/doctor-office-management/add']\">Add Doctors Office</button>\n      </span>\n    </ng-container>\n\n    <ng-container *ngIf=\"userData.user_type == 'distributors'\">\n      <span class=\"add_header\">\n        <span class=\"bradcrumb\"><a [routerLink]=\"['/distributors/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage Doctor's Office</span>\n        <button mat-flat-button [routerLink]=\"['/distributors/doctor-office-management/add']\">Add Doctors Office</button>\n      </span>\n    </ng-container>\n\n\n    <lib-listing class=\"DataTable\" *ngIf=\"doctorOfficeAllData.length>0\" (onLiblistingChange)=\"listenLiblistingChange($event)\" [datasource]=\"doctorOfficeAllData\"\n      [skip]=\"doctorOfficeAllData_skip\" [detail_skip_array]=\"previewModal_skip\"\n      [modify_header_array]=\"doctorOfficeAllData_modify_header\" [apiurl]=\"apiUrl\" [sourcedata]=\"tableName\"\n      [editroute]=\"editUrl\" [jwttoken]=\"user_cookie\" [statusarr]=\"status\" [updateendpoint]=\"UpdateEndpoint\"\n      [deleteendpoint]=\"deleteEndpoint\" [date_search_endpoint]=\"SearchingEndpoint\"\n      [date_search_source]=\"SearchingSourceName\" [search_settings]=\"search_settings\" [sortdata]=\"sortdata\" [datacollection]=\"datacollection\" [date_search_source_count]=\"doctorOfficeData_count\" [limitcond]=\"limitcond\" [libdata]=\"libdata\">\n    </lib-listing>\n    <h2 class=\"no_data\" *ngIf=\"doctorOfficeAllData.length == 0\">No record found.</h2>\n  </mat-card-content>\n  \n</mat-card>\n<!-- Admin Footer -->\n<app-admin-footer></app-admin-footer>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/faq-management/add-edit-faq/add-edit-faq.component.html":
  /*!********************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/faq-management/add-edit-faq/add-edit-faq.component.html ***!
    \********************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminFaqManagementAddEditFaqAddEditFaqComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- Admin Header -->\n<app-admin-header></app-admin-header>\n\n\n<mat-card class=\"admin_wrapper\">\n    <!-- header with add button -->\n    <mat-card-content class=\"title_wrapper\">\n        {{ htmlText.header }}\n    </mat-card-content>\n\n\n    <span class=\"add_header\">\n        <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'admin'\">\n            <span class=\"bradcrumb\">\n                <a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp;\n                <a [routerLink]=\"['/admin/faq-management']\">Manage FAQ &nbsp;/</a> &nbsp;\n                {{ htmlText.nav }}\n            </span>\n        </ng-container>\n    </span>\n    <!-- End header with add button -->\n\n    <mat-card class=\"add_form\">\n        <mat-card-content class=\"form_wrapper\">\n            <form class=\"example-form\" autocomplete=\"off\" name=\"FaqManagementAddEditForm\"\n                [formGroup]=\"FaqManagementAddEditForm\" (ngSubmit)=\"TechManagementAddFormFormSubmit()\">\n\n                <!-- State Start -->\n                <mat-form-field class=\"parent_cat\" appearance=\"fill\">\n                    <mat-label>Users</mat-label>\n\n                    <mat-select formControlName=\"users\">\n                        <mat-option [value]=\"\">Select Users</mat-option>\n                        <mat-option value=\"admin\">Admin</mat-option>\n                        <mat-option value=\"doctor\">Doctor</mat-option>\n                        <mat-option value=\"tech\">Tech</mat-option>\n                        <mat-option value=\"biller\">Biller</mat-option>\n                        <mat-option value=\"doctor_office\">Doctor Office</mat-option>\n                        <mat-option value=\"diagnostic_admin\">Diagnostic Admin</mat-option>\n                        <mat-option value=\"doctor_group\">Doctor Group</mat-option>\n                        <mat-option value=\"sales_person\">Sales Person</mat-option>\n                        <mat-option value=\"distributors\">Distributors</mat-option>\n                        <mat-option value=\"admin_biller\">Admin Biller</mat-option>\n                    </mat-select>\n\n                    <mat-error\n                        *ngIf=\"FaqManagementAddEditForm.controls['users'].touched && !FaqManagementAddEditForm.controls['users'].valid && FaqManagementAddEditForm.controls['users'].errors.required\">\n                        State required.\n                    </mat-error>\n                </mat-form-field>\n                <!-- State End -->\n\n                <!-- Question Start -->\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Question</mat-label>\n\n                    <input matInput placeholder=\"Question\" [formControl]=\"FaqManagementAddEditForm.controls['question']\"\n                        (blur)=\"inputUntouch(FaqManagementAddEditForm,'question')\">\n\n                    <mat-error\n                        *ngIf=\"FaqManagementAddEditForm.controls['question'].touched && !FaqManagementAddEditForm.controls['question'].valid && FaqManagementAddEditForm.controls['question'].errors.required\">\n                        Question required.\n                    </mat-error>\n\n                    <mat-error\n                        *ngIf=\"FaqManagementAddEditForm.controls['question'].touched && !FaqManagementAddEditForm.controls['question'].valid && FaqManagementAddEditForm.controls['question'].errors.maxlength\">\n                        Question is not valid.\n                    </mat-error>\n                </mat-form-field>\n                <!-- Question End -->\n\n                <!-- Answer Start -->\n\n\n                <span class=\"full_width\">\n                    <mat-label>Answer</mat-label>\n                    <ckeditor [(ngModel)]=\"htmlText.ckEditorValue\" [ngModelOptions]=\"{standalone: true}\">\n                    </ckeditor>\n                    <p style=\"color: red;\"\n                        *ngIf=\"FaqManagementAddEditForm.controls['answer'].touched && !FaqManagementAddEditForm.controls['answer'].valid && FaqManagementAddEditForm.controls['answer'].errors.required\">\n                        Answer required.\n                    </p>\n\n                    <p style=\"color: red;\"\n                        *ngIf=\"FaqManagementAddEditForm.controls['answer'].touched && !FaqManagementAddEditForm.controls['answer'].valid && FaqManagementAddEditForm.controls['answer'].errors.maxlength\">\n                        Answer is not valid.\n                    </p>\n                </span>\n                <!-- Answer End -->\n\n                <!-- Youtube Link Start -->\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Youtube Link</mat-label>\n\n                    <input type=\"text\" matInput placeholder=\"Youtube link\"\n                        [formControl]=\"FaqManagementAddEditForm.controls['youtube_link']\"\n                        (blur)=\"inputUntouch(FaqManagementAddEditForm, 'youtube_link')\" (keyup)=\"getVideo();\">\n\n                    <mat-error\n                        *ngIf=\"FaqManagementAddEditForm.controls['youtube_link'].touched && !FaqManagementAddEditForm.controls['youtube_link'].valid && FaqManagementAddEditForm.controls['youtube_link'].errors.required\">\n                        Invalid link.\n                    </mat-error>\n                </mat-form-field>\n                <!-- Youtube Link End -->\n\n                <!-- Priority Start -->\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Priority</mat-label>\n\n                    <input type=\"number\" matInput placeholder=\"Priority\"\n                        [formControl]=\"FaqManagementAddEditForm.controls['priority']\"\n                        (blur)=\"inputUntouch(FaqManagementAddEditForm, 'priority')\">\n\n                    <mat-error\n                        *ngIf=\"FaqManagementAddEditForm.controls['priority'].touched && !FaqManagementAddEditForm.controls['priority'].valid && FaqManagementAddEditForm.controls['priority'].errors.required\">\n                        Priority required.\n                    </mat-error>\n                </mat-form-field>\n                <!-- Priority End -->\n\n                <p>\n                    <ng-container *ngIf=\"htmlText.youtubeViewLink.status == true\">\n                        <iframe width=\"100%\" height=\"315\" [src]=\"htmlText.youtubeViewLink.url\" frameborder=\"0\" allowfullscreen></iframe>\n                    </ng-container>\n\n                    <ng-container *ngIf=\"htmlText.youtubeViewLink.status == false && FaqManagementAddEditForm.value.youtube_link != ''\">\n                        <span>Video not found.</span>\n                    </ng-container>\n                </p>\n\n                <!-- Status Start -->\n                <span class=\"wrppr\">\n                    <mat-checkbox [formControl]=\"FaqManagementAddEditForm.controls['status']\" checked>Active\n                    </mat-checkbox>\n                </span>\n                <!-- Status End -->\n\n                <!-- end here -->\n                <span class=\"submit_form\">\n                    <button mat-flat-button type=\"button\" [routerLink]=\"['/admin/faq-management']\">Back</button>\n\n                    <button mat-flat-button type=\"reset\" *ngIf=\"params_id == ''\">Reset </button>\n                    <button mat-flat-button type=\"submit\"> {{ htmlText.buttonText }} </button>\n                </span>\n            </form>\n\n        </mat-card-content>\n    </mat-card>\n\n</mat-card>\n\n\n\n<!-- Admin Footer -->\n<app-admin-footer></app-admin-footer>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/faq-management/list-faq/list-faq.component.html":
  /*!************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/faq-management/list-faq/list-faq.component.html ***!
    \************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminFaqManagementListFaqListFaqComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- Admin Header -->\n<app-admin-header *ngIf=\"userData.user_type == 'admin'\"></app-admin-header>\n\n\n<mat-card class=\"admin_wrapper\">\n  <!-- header with add button -->\n  <mat-card-content class=\"table_wrapper\">\n    <mat-toolbar class=\"top_header\">\n      <h2> Manage FAQ </h2>\n    </mat-toolbar>\n\n  <span class=\"add_header\">\n\n  <ng-container *ngIf=\"userData.user_type == 'admin'\">\n    <span class=\"bradcrumb\"><a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage FAQ</span>\n    <button mat-flat-button [routerLink]=\"['/admin/faq-management/add']\">Add FAQ</button>\n  </ng-container>\n</span>\n<!-- End header with add button -->\n\n<div class=\"form2_wrapper\">\n<lib-listing class=\"DataTable faq-management\" *ngIf=\"FaqManagementAddEditForm.length>0\"\n  [datasource]=\"FaqManagementAddEditForm\"\n  [skip]=\"allUserData_skip\"\n  [detail_skip_array]=\"previewModal_detail_skip\"\n  [modify_header_array]=\"allUserData_modify_header\"\n  [apiurl]=\"apiUrl\"\n  [sourcedata]=\"tableName\"\n  [editroute]=\"editUrl\"\n  [jwttoken]=\"user_cookie\"\n  [statusarr]=\"status\"\n  [updateendpoint]=\"UpdateEndpoint\"\n  [deleteendpoint]=\"deleteEndpoint\"\n  [date_search_endpoint]=\"SearchingEndpoint\"\n  [date_search_source]=\"SearchingSourceName\"\n  [search_settings]=\"search_settings\"\n  [sortdata]=\"sortdata\" [datacollection]=\"datacollection\" [date_search_source_count]=\"faqData_count\" [limitcond]=\"limitcond\" [libdata]=\"libdata\" >\n</lib-listing>\n\n<h2 *ngIf=\"FaqManagementAddEditForm.length == 0\">No record found.</h2>\n</div>\n</mat-card-content>\n</mat-card>\n\n\n<!-- Admin Footer -->\n<app-admin-footer *ngIf=\"userData.user_type == 'admin'\"></app-admin-footer>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/login-as-doctor/login-dotor-by-admin/login-dotor-by-admin.component.html":
  /*!*************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/login-as-doctor/login-dotor-by-admin/login-dotor-by-admin.component.html ***!
    \*************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminLoginAsDoctorLoginDotorByAdminLoginDotorByAdminComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<p>login-dotor-by-admin works!</p>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/manage-adminbiller/add-edit-adminbiller/add-edit-adminbiller.component.html":
  /*!****************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/manage-adminbiller/add-edit-adminbiller/add-edit-adminbiller.component.html ***!
    \****************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminManageAdminbillerAddEditAdminbillerAddEditAdminbillerComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- Admin Header -->\n<app-admin-header *ngIf=\"htmlText.userData.user_details.user_type == 'admin'\"></app-admin-header>\n\n<!-- Diagnostic Admin Header -->\n<app-diagnostic-admin-header *ngIf=\"htmlText.userData.user_details.user_type == 'diagnostic_admin'\"></app-diagnostic-admin-header>\n\n<!-- Doctor Header -->\n<app-doctor-header *ngIf=\"htmlText.userData.user_details.user_type == 'doctor'\"></app-doctor-header>\n\n\n<!-- header with add button -->\n<mat-card class=\"admin_wrapper\">\n  <mat-card-content class=\"title_wrapper\">\n    {{ htmlText.header }}\n  </mat-card-content>\n\n\n  <span class=\"add_header\">\n\n    <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'admin'\">\n      <span class=\"bradcrumb\">\n        <a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp;\n        <a [routerLink]=\"['/admin/adminbiller-management']\">Manage Admin Biller &nbsp;/</a> &nbsp;\n        {{ htmlText.nav }}\n      </span>\n    </ng-container>\n\n    <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'diagnostic_admin'\">\n      <span class=\"bradcrumb\">\n        <a [routerLink]=\"['/diagnostic-admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp;\n        <a [routerLink]=\"['/diagnostic-admin/doctor-management']\">Manage Admin Biller &nbsp;/</a> &nbsp;\n        {{ htmlText.nav }}\n      </span>\n    </ng-container>\n\n  </span>\n  <!-- End header with add button -->\n\n  <mat-card class=\"add_form\">\n    <mat-card-content class=\"form_wrapper\">\n      <form class=\"example-form\" autocomplete=\"off\" [formGroup]=\"adminbillerManagementAddEditForm\" (ngSubmit)=\"adminbillerManagementAddEditFormSubmit()\">\n\n        <!-- First Name Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>First Name</mat-label>\n\n          <input matInput placeholder=\"First Name\" [formControl]=\"adminbillerManagementAddEditForm.controls['firstname']\"\n            (blur)=\"inputUntouch(adminbillerManagementAddEditForm,'firstname')\">\n\n          <mat-error\n            *ngIf=\"adminbillerManagementAddEditForm.controls['firstname'].touched && !adminbillerManagementAddEditForm.controls['firstname'].valid && adminbillerManagementAddEditForm.controls['firstname'].errors.required\">\n            First Name required.\n          </mat-error>\n\n          <mat-error\n            *ngIf=\"adminbillerManagementAddEditForm.controls['firstname'].touched && !adminbillerManagementAddEditForm.controls['firstname'].valid && adminbillerManagementAddEditForm.controls['firstname'].errors.maxlength\">\n            First Name is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- First Name End -->\n\n        <!-- Last Name Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Last Name</mat-label>\n\n          <input matInput placeholder=\"Last Name\" [formControl]=\"adminbillerManagementAddEditForm.controls['lastname']\"\n            (blur)=\"inputUntouch(adminbillerManagementAddEditForm,'lastname')\">\n\n          <mat-error\n            *ngIf=\"adminbillerManagementAddEditForm.controls['lastname'].touched && !adminbillerManagementAddEditForm.controls['lastname'].valid && adminbillerManagementAddEditForm.controls['lastname'].errors.required\">\n            Last Name required.\n          </mat-error>\n\n          <mat-error\n            *ngIf=\"adminbillerManagementAddEditForm.controls['lastname'].touched && !adminbillerManagementAddEditForm.controls['lastname'].valid && adminbillerManagementAddEditForm.controls['lastname'].errors.maxlength\">\n            Last Name is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Last Name End -->\n\n        <!-- Email Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Email Address</mat-label>\n\n          <input matInput placeholder=\"Email Address\" [formControl]=\"adminbillerManagementAddEditForm.controls['email']\"\n            (blur)=\"inputUntouch(adminbillerManagementAddEditForm,'email')\">\n\n          <mat-error\n            *ngIf=\"adminbillerManagementAddEditForm.controls['email'].touched && !adminbillerManagementAddEditForm.controls['email'].valid && adminbillerManagementAddEditForm.controls['email'].errors.required\">\n            Email required.\n          </mat-error>\n\n          <mat-error\n            *ngIf=\"adminbillerManagementAddEditForm.controls['email'].touched && !adminbillerManagementAddEditForm.controls['email'].valid && adminbillerManagementAddEditForm.controls['email'].errors.email\">\n            Email is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Email End -->\n\n\n\n        <!-- Phone Number Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Phone Number</mat-label>\n\n          <input matInput placeholder=\"Phone\" [formControl]=\"adminbillerManagementAddEditForm.controls['phone']\"\n            (blur)=\"inputUntouch(adminbillerManagementAddEditForm,'phone')\">\n\n          <mat-error\n            *ngIf=\"adminbillerManagementAddEditForm.controls['phone'].touched && !adminbillerManagementAddEditForm.controls['phone'].valid && adminbillerManagementAddEditForm.controls['phone'].errors.required\">\n            Phone Number required.\n          </mat-error>\n\n          <mat-error\n            *ngIf=\"adminbillerManagementAddEditForm.controls['phone'].touched && !adminbillerManagementAddEditForm.controls['phone'].valid && adminbillerManagementAddEditForm.controls['phone'].errors.maxlength\">\n            Phone Number is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Phone Number End -->\n\n\n        <!-- Address Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Address</mat-label>\n\n          <input matInput placeholder=\"Address\" [formControl]=\"adminbillerManagementAddEditForm.controls['address']\"\n            (blur)=\"inputUntouch(adminbillerManagementAddEditForm,'address')\">\n\n          <mat-error *ngIf=\"adminbillerManagementAddEditForm.controls['address'].touched && !adminbillerManagementAddEditForm.controls['address'].valid && adminbillerManagementAddEditForm.controls['address'].errors.required\">\n            Address required.\n          </mat-error>\n\n          <mat-error *ngIf=\"adminbillerManagementAddEditForm.controls['address'].touched && !adminbillerManagementAddEditForm.controls['address'].valid && adminbillerManagementAddEditForm.controls['address'].errors.maxlength\">\n            Address is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Address End -->\n\n        <!-- State Start -->\n        <mat-form-field class=\"parent_cat\" appearance=\"fill\">\n          <mat-label>State</mat-label>\n\n          <mat-select formControlName=\"state\" (selectionChange)=\"getCity($event.value);\">\n            <mat-option [value]=\"\">Select State</mat-option>\n            <mat-option *ngFor=\"let state of htmlText.states;\" value=\"{{ state.name }}\">{{ state.name }}</mat-option>\n          </mat-select>\n\n          <mat-error *ngIf=\"adminbillerManagementAddEditForm.controls['state'].touched && !adminbillerManagementAddEditForm.controls['state'].valid && adminbillerManagementAddEditForm.controls['state'].errors.required\">\n            State required.\n          </mat-error>\n        </mat-form-field>\n        <!-- State End -->\n\n        <!-- City Start -->\n        <mat-form-field class=\"parent_cat\" appearance=\"fill\">\n          <mat-label>City</mat-label>\n\n          <mat-select formControlName=\"city\">\n            <mat-option value=\"\">Select City</mat-option>\n            <mat-option *ngFor=\"let city of htmlText.cities;\" value=\"{{ city }}\">{{ city }}</mat-option>\n          </mat-select>\n\n          <mat-error *ngIf=\"adminbillerManagementAddEditForm.controls['city'].touched && !adminbillerManagementAddEditForm.controls['city'].valid && adminbillerManagementAddEditForm.controls['city'].errors.required\">\n            State required.\n          </mat-error>\n        </mat-form-field>\n        <!-- City End -->\n\n        <!-- Tech Details Start -->\n        <mat-form-field appearance=\"fill\" *ngIf=\"htmlText.userData.user_details.user_type == 'diagnostic_admin'\">\n          <mat-label>Select Tech</mat-label>\n          <mat-select formControlName=\"tech_id\" multiple>\n            <mat-option [value]=\"\">Select Tech</mat-option>\n            <mat-option *ngFor=\"let tech of htmlText.techData;\" value=\"{{ tech._id }}\">{{ tech.firstname }} {{tech.lastname}}</mat-option>\n          </mat-select>\n        </mat-form-field>\n        <!-- Tech Details name -->\n\n        <!-- Biller Details Start -->\n        <!-- <mat-form-field appearance=\"fill\">\n          <mat-label>Select Biiler</mat-label>\n          <mat-select formControlName=\"biller_id\" multiple>\n            <mat-option [value]=\"\">Select a biiler</mat-option>\n            <mat-option *ngFor=\"let biller of htmlText.billerData;\" value=\"{{ biller._id }}\">{{ biller.firstname }} {{ biller.lastname }}</mat-option>\n          </mat-select>\n        </mat-form-field> -->\n        <!-- Biller Details End -->\n\n        <!-- Doctor's Office Start -->\n        <!-- <mat-form-field appearance=\"fill\">\n          <mat-label>Select Doctor's Office</mat-label>\n          <mat-select formControlName=\"doctors_office_id\">\n            <mat-option [value]=\"\">Select Doctor's Office</mat-option>\n            <mat-option *ngFor=\"let doctorOfficeData of htmlText.doctorOfficeData;\" value=\"{{ doctorOfficeData._id }}\">{{ doctorOfficeData.firstname }} {{ doctorOfficeData.lastname }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field> -->\n        <!-- Doctor's Office End -->\n\n        <!-- Zip Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Zip</mat-label>\n\n          <input type=\"number\" matInput placeholder=\"ZIP\" [formControl]=\"adminbillerManagementAddEditForm.controls['zip']\"\n            (blur)=\"inputUntouch(adminbillerManagementAddEditForm,'zip')\">\n\n          <mat-error *ngIf=\"adminbillerManagementAddEditForm.controls['zip'].touched && !adminbillerManagementAddEditForm.controls['zip'].valid && adminbillerManagementAddEditForm.controls['zip'].errors.required\">\n            Zip required.\n          </mat-error>\n        </mat-form-field>\n        <!-- Zip Start -->\n\n\n\n        <ng-container *ngIf=\"!params_id\">\n          <!-- Password Start -->\n          <ng-container *ngIf=\"!params_id\">\n            <mat-form-field class=\"form-group\" appearance=\"fill\">\n\n              <input matInput placeholder=\"Password\" type=\"password\"\n                [formControl]=\"adminbillerManagementAddEditForm.controls['password']\">\n\n              <mat-error *ngIf=\"!adminbillerManagementAddEditForm.controls['password'].valid && adminbillerManagementAddEditForm.controls['password'].touched\">\n                Password required.\n              </mat-error>\n            </mat-form-field>\n\n            <mat-form-field class=\"form-group\" appearance=\"fill\">\n              <input matInput placeholder=\"Confirm Password\" type=\"password\"\n                [formControl]=\"adminbillerManagementAddEditForm.controls['confirmpassword']\">\n\n              <mat-error *ngIf=\"!adminbillerManagementAddEditForm.controls['confirmpassword'].valid && adminbillerManagementAddEditForm.controls['confirmpassword'].touched\">\n                Password does not match\n              </mat-error>\n            </mat-form-field>\n          </ng-container>\n          <!-- Password End -->\n        </ng-container>\n\n        <!-- Status -->\n        <span class=\"status_wrapper\">\n          <mat-checkbox formControlName=\"status\">Active</mat-checkbox>\n        </span>\n\n        <span class=\"submit_form\">\n          <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'admin'\">\n            <button mat-flat-button type=\"button\" [routerLink]=\"['/admin/doctor-management']\"> Back</button>\n          </ng-container>\n          <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'diagnostic_admin'\">\n            <button mat-flat-button type=\"button\" [routerLink]=\"['/diagnostic-admin/doctor-management']\">Back </button>\n          </ng-container>\n\n          <button mat-flat-button type=\"reset\" *ngIf=\"params_id == ''\">Reset</button>\n          <button mat-flat-button type=\"submit\"> {{ htmlText.buttonText }} </button>\n        </span>\n\n      </form>\n    </mat-card-content>\n  </mat-card>\n\n</mat-card>\n\n\n<app-tech-footer></app-tech-footer>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/manage-adminbiller/listing-adminbiller/listing-adminbiller.component.html":
  /*!**************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/manage-adminbiller/listing-adminbiller/listing-adminbiller.component.html ***!
    \**************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminManageAdminbillerListingAdminbillerListingAdminbillerComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- Admin Header -->\n<app-admin-header *ngIf=\"userData.user_type == 'admin'\"></app-admin-header>\n\n<!-- Diagnostic Admin Header -->\n<app-diagnostic-admin-header *ngIf=\"userData.user_type == 'diagnostic_admin'\"></app-diagnostic-admin-header>\n\n<!-- Doctor Header -->\n<app-doctor-header *ngIf=\"userData.user_type == 'doctor'\"></app-doctor-header>\n\n\n\n<mat-card class=\"admin_wrapper\">\n\n  <mat-card-content class=\"table_wrapper\">\n    <mat-toolbar class=\"top_header\">\n      <h2> Manage Admin Biller </h2>\n    </mat-toolbar>\n\n    <mat-toolbar class=\"add_header\">\n      <ng-container *ngIf=\"userData.user_type == 'admin'\">\n        <span class=\"bradcrumb\"><a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage Admin Biller</span>\n        <button mat-flat-button [routerLink]=\"['/admin/adminbiller-management/add']\">Add Admin Biller</button>\n      </ng-container>\n\n      <ng-container *ngIf=\"userData.user_type == 'diagnostic_admin'\">\n        <span class=\"bradcrumb\"><a [routerLink]=\"['/diagnostic-admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage Admin Biller</span>\n        <button mat-flat-button [routerLink]=\"['/diagnostic-admin/doctor-management/add']\">Add Admin Biller</button>\n      </ng-container>\n    </mat-toolbar>\n    <!-- End header with add button -->\n\n    <!-- Listing goes here  -->\n    <lib-listing class=\"DataTable\" *ngIf=\"docData.length>0\" [datasource]=\"docData\" [skip]=\"docData_skip\"\n      [modify_header_array]=\"docData_modify_header\" [sourcedata]=\"tableName\" [detail_skip_array]=\"previewModal_skip\"\n      [apiurl]=\"apiUrl\" [editroute]=\"editUrl\" [jwttoken]=\"user_cookie\" [statusarr]=\"status\"\n      [updateendpoint]=\"UpdateEndpoint\" [deleteendpoint]=\"deleteEndpoint\" [date_search_endpoint]=\"searchingEndpoint\"\n      [date_search_source]=\"searchSourceName\" [search_settings]=\"search_settings\" [sortdata]=\"sortdata\" [datacollection]=\"datacollection\" [date_search_source_count]=\"docData_count\" [limitcond]=\"limitcond\" [libdata]=\"libdata\">\n\n    </lib-listing>\n\n    <h2 *ngIf=\"docData.length == 0\">No record found.</h2>\n    <!-- Listing ends here  -->\n  </mat-card-content>\n</mat-card>\n\n\n\n<!-- Admin Footer -->\n<app-admin-footer *ngIf=\"userData.user_type == 'admin'\"></app-admin-footer>\n\n<!-- Diagnostic Admin Header -->\n<app-diagnostic-admin-footer *ngIf=\"userData.user_type == 'diagnostic_admin'\"></app-diagnostic-admin-footer>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/manage-distributors/add-edit-distributors/add-edit-distributors.component.html":
  /*!*******************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/manage-distributors/add-edit-distributors/add-edit-distributors.component.html ***!
    \*******************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminManageDistributorsAddEditDistributorsAddEditDistributorsComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- Admin Header -->\n<app-admin-header *ngIf=\"htmlText.userData.user_details.user_type == 'admin'\"></app-admin-header>\n\n<!-- Diagnostic Admin Header -->\n<app-diagnostic-admin-header *ngIf=\"htmlText.userData.user_details.user_type == 'diagnostic_admin'\"></app-diagnostic-admin-header>\n\n<!-- Doctor Header -->\n<app-doctor-header *ngIf=\"htmlText.userData.user_details.user_type == 'doctor'\"></app-doctor-header>\n\n\n<mat-card class=\"admin_wrapper\">\n  <!-- header with add button -->\n  <mat-card-content class=\"title_wrapper\">\n    {{ htmlText.header }}\n  </mat-card-content>\n\n\n  <span class=\"add_header\">\n    <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'admin'\">\n      <span class=\"bradcrumb\">\n        <a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp;\n        <a [routerLink]=\"['/admin/distributors-management']\">Manage Distributors &nbsp;/</a> &nbsp;\n        {{ htmlText.nav }}\n      </span>\n    </ng-container>\n\n    <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'diagnostic_admin'\">\n      <span class=\"bradcrumb\">\n        <a [routerLink]=\"['/diagnostic-admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp;\n        <a [routerLink]=\"['/diagnostic-admin/tech-management']\">Manage Distributors &nbsp;/</a> &nbsp;\n        {{ htmlText.nav }}\n      </span>\n    </ng-container>\n\n    <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'doctor'\">\n      <span class=\"bradcrumb\">\n        <a [routerLink]=\"['/doctor/dashboard']\">Dashboard &nbsp;/</a> &nbsp;\n        <a [routerLink]=\"['/doctor/distributors-management']\">Manage Distributors &nbsp;/</a> &nbsp;\n        {{ htmlText.nav }}\n      </span>\n    </ng-container>\n  </span>\n  <!-- End header with add button -->\n\n  <mat-card class=\"add_form\">\n    <mat-card-content class=\"form_wrapper\">\n      <form class=\"example-form\" autocomplete=\"off\" name=\"DistributorsManagementAddEditForm\" [formGroup]=\"DistributorsManagementAddEditForm\" (ngSubmit)=\"DistributorsManagementAddEditFormSubmit()\">\n\n        <!-- Distributor Name Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Distributor Name</mat-label>\n\n          <input matInput placeholder=\"Distributor Name\" [formControl]=\"DistributorsManagementAddEditForm.controls['distributorname']\"\n            (blur)=\"inputUntouch(DistributorsManagementAddEditForm,'distributorname')\">\n\n          <mat-error\n            *ngIf=\"DistributorsManagementAddEditForm.controls['distributorname'].touched && !DistributorsManagementAddEditForm.controls['distributorname'].valid && DistributorsManagementAddEditForm.controls['distributorname'].errors.required\">\n            Distributor Name required.\n          </mat-error>\n\n          <mat-error\n            *ngIf=\"DistributorsManagementAddEditForm.controls['distributorname'].touched && !DistributorsManagementAddEditForm.controls['distributorname'].valid && DistributorsManagementAddEditForm.controls['distributorname'].errors.maxlength\">\n            Distributor Name is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Distributor Name End -->\n\n        <!-- Contact Person Name Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Contact Person</mat-label>\n\n          <input matInput placeholder=\"Contact Person\" [formControl]=\"DistributorsManagementAddEditForm.controls['contactperson']\"\n            (blur)=\"inputUntouch(DistributorsManagementAddEditForm,'contactperson')\">\n\n          <mat-error\n            *ngIf=\"DistributorsManagementAddEditForm.controls['contactperson'].touched && !DistributorsManagementAddEditForm.controls['contactperson'].valid && DistributorsManagementAddEditForm.controls['contactperson'].errors.required\">\n            Contact Person required.\n          </mat-error>\n\n          <mat-error\n            *ngIf=\"DistributorsManagementAddEditForm.controls['contactperson'].touched && !DistributorsManagementAddEditForm.controls['contactperson'].valid && DistributorsManagementAddEditForm.controls['contactperson'].errors.maxlength\">\n            Contact Person is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Contact Person End -->\n\n        <!-- Email Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Email Address</mat-label>\n\n          <input matInput placeholder=\"Email Address\" [formControl]=\"DistributorsManagementAddEditForm.controls['email']\"\n            (blur)=\"inputUntouch(DistributorsManagementAddEditForm,'email')\">\n\n          <mat-error\n            *ngIf=\"DistributorsManagementAddEditForm.controls['email'].touched && !DistributorsManagementAddEditForm.controls['email'].valid && DistributorsManagementAddEditForm.controls['email'].errors.required\">\n            Email required.\n          </mat-error>\n\n          <mat-error\n            *ngIf=\"DistributorsManagementAddEditForm.controls['email'].touched && !DistributorsManagementAddEditForm.controls['email'].valid && DistributorsManagementAddEditForm.controls['email'].errors.email\">\n            Email is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Email End -->\n\n        <!-- Phone Number Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Phone Number</mat-label>\n\n          <input matInput placeholder=\"Phone\" [formControl]=\"DistributorsManagementAddEditForm.controls['phone']\"\n            (blur)=\"inputUntouch(DistributorsManagementAddEditForm,'phone')\">\n\n          <mat-error\n            *ngIf=\"DistributorsManagementAddEditForm.controls['phone'].touched && !DistributorsManagementAddEditForm.controls['phone'].valid && DistributorsManagementAddEditForm.controls['phone'].errors.required\">\n            Phone Number required.\n          </mat-error>\n\n          <mat-error\n            *ngIf=\"DistributorsManagementAddEditForm.controls['phone'].touched && !DistributorsManagementAddEditForm.controls['phone'].valid && DistributorsManagementAddEditForm.controls['phone'].errors.maxlength\">\n            Phone Number is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Phone Number End -->\n\n        <!-- Address Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Address</mat-label>\n\n          <input matInput placeholder=\"Address\" [formControl]=\"DistributorsManagementAddEditForm.controls['address']\"\n            (blur)=\"inputUntouch(DistributorsManagementAddEditForm,'address')\">\n\n          <mat-error *ngIf=\"DistributorsManagementAddEditForm.controls['address'].touched && !DistributorsManagementAddEditForm.controls['address'].valid && DistributorsManagementAddEditForm.controls['address'].errors.required\">\n            Address required.\n          </mat-error>\n\n          <mat-error *ngIf=\"DistributorsManagementAddEditForm.controls['address'].touched && !DistributorsManagementAddEditForm.controls['address'].valid && DistributorsManagementAddEditForm.controls['address'].errors.maxlength\">\n            Address is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Address End -->\n\n        <!-- State Start -->\n        <mat-form-field class=\"parent_cat\" appearance=\"fill\">\n          <mat-label>State</mat-label>\n\n          <mat-select formControlName=\"state\" (selectionChange)=\"getCity($event.value);\">\n            <mat-option [value]=\"\">Select state</mat-option>\n            <mat-option *ngFor=\"let state of htmlText.states;\" value=\"{{ state.name }}\">{{ state.name }}</mat-option>\n          </mat-select>\n\n          <mat-error *ngIf=\"DistributorsManagementAddEditForm.controls['state'].touched && !DistributorsManagementAddEditForm.controls['state'].valid && DistributorsManagementAddEditForm.controls['state'].errors.required\">\n            State required.\n          </mat-error>\n        </mat-form-field>\n        <!-- State End -->\n\n        <!-- City Start -->\n        <mat-form-field class=\"parent_cat\" appearance=\"fill\">\n          <mat-label>City</mat-label>\n\n          <mat-select formControlName=\"city\">\n            <mat-option value=0>Select city</mat-option>\n            <mat-option *ngFor=\"let city of htmlText.cities;\" value=\"{{ city }}\">{{ city }}</mat-option>\n          </mat-select>\n\n          <mat-error *ngIf=\"DistributorsManagementAddEditForm.controls['city'].touched && !DistributorsManagementAddEditForm.controls['city'].valid && DistributorsManagementAddEditForm.controls['city'].errors.required\">\n            State required.\n          </mat-error>\n        </mat-form-field>\n        <!-- City End -->\n\n        <!-- Zip Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Zip</mat-label>\n\n          <input type=\"number\" matInput placeholder=\"ZIP\" [formControl]=\"DistributorsManagementAddEditForm.controls['zip']\" (blur)=\"inputUntouch(DistributorsManagementAddEditForm,'zip')\">\n\n          <mat-error *ngIf=\"DistributorsManagementAddEditForm.controls['zip'].touched && !DistributorsManagementAddEditForm.controls['zip'].valid && DistributorsManagementAddEditForm.controls['zip'].errors.required\">\n            Zip required.\n          </mat-error>\n        </mat-form-field>\n        <!-- Zip Start -->\n\n        <ng-container *ngIf=\"!params_id\">\n          <!-- Password Start -->\n          <ng-container *ngIf=\"!params_id\">\n            <mat-form-field class=\"form-group\" appearance=\"fill\">\n\n              <input matInput placeholder=\"Password\" type=\"password\"\n                [formControl]=\"DistributorsManagementAddEditForm.controls['password']\">\n\n              <mat-error *ngIf=\"!DistributorsManagementAddEditForm.controls['password'].valid && DistributorsManagementAddEditForm.controls['password'].touched\">\n                Password required.\n              </mat-error>\n            </mat-form-field>\n\n            <mat-form-field class=\"form-group\" appearance=\"fill\">\n              <input matInput placeholder=\"Confirm Password\" type=\"password\"\n                [formControl]=\"DistributorsManagementAddEditForm.controls['confirmpassword']\">\n\n              <mat-error *ngIf=\"!DistributorsManagementAddEditForm.controls['confirmpassword'].valid && DistributorsManagementAddEditForm.controls['confirmpassword'].touched\">\n                Password does not match\n              </mat-error>\n            </mat-form-field>\n          </ng-container>\n          <!-- Password End -->\n        </ng-container>\n\n        <mat-checkbox [formControl]=\"DistributorsManagementAddEditForm.controls['status']\" checked>Active</mat-checkbox>\n\n\n        <!-- end here -->\n        <span class=\"submit_form\">\n          <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'admin'\">\n            <button mat-flat-button type=\"button\" [routerLink]=\"['/admin/distributors-management']\">Back </button>\n          </ng-container>\n\n          <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'diagnostic_admin'\">\n            <button mat-flat-button type=\"button\" [routerLink]=\"['/diagnostic-admin/tech-management']\">Back </button>\n          </ng-container>\n\n          <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'doctor'\">\n            <button mat-flat-button type=\"button\" [routerLink]=\"['/doctor/tech-management']\">Back </button>\n          </ng-container>\n\n          <button mat-flat-button type=\"reset\" *ngIf=\"params_id == ''\">Reset </button>\n          <button mat-flat-button type=\"submit\"> {{ htmlText.buttonText }} </button>\n        </span>\n      </form>\n\n    </mat-card-content>\n  </mat-card>\n\n</mat-card>\n\n\n\n<!-- Admin Footer -->\n<app-admin-footer *ngIf=\"htmlText.userData.user_details.user_type == 'admin'\"></app-admin-footer>\n\n<!-- Diagnostic Admin Header -->\n<app-diagnostic-admin-footer *ngIf=\"htmlText.userData.user_details.user_type == 'diagnostic_admin'\"></app-diagnostic-admin-footer>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/manage-distributors/listing-distributors/listing-distributors.component.html":
  /*!*****************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/manage-distributors/listing-distributors/listing-distributors.component.html ***!
    \*****************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminManageDistributorsListingDistributorsListingDistributorsComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- Admin Header -->\n<app-admin-header *ngIf=\"userData.user_type == 'admin'\"></app-admin-header>\n\n<!-- Diagnostic Admin Header -->\n<app-diagnostic-admin-header *ngIf=\"userData.user_type == 'diagnostic_admin'\"></app-diagnostic-admin-header>\n\n<!-- Doctor Header -->\n<app-doctor-header *ngIf=\"userData.user_type == 'doctor'\"></app-doctor-header>\n\n\n\n<mat-card class=\"admin_wrapper\">\n  <!-- header with add button -->\n  <mat-card-content class=\"table_wrapper\">\n    <mat-toolbar class=\"top_header\">\n      <h2> Manage Distributors </h2>\n    </mat-toolbar>\n\n  <span class=\"add_header\">\n\n  <ng-container *ngIf=\"userData.user_type == 'admin'\">\n    <span class=\"bradcrumb\"><a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage Distributors</span>\n    <button mat-flat-button [routerLink]=\"['/admin/distributors-management/add']\">Add Distributors</button>\n  </ng-container>\n  \n  <ng-container *ngIf=\"userData.user_type == 'diagnostic_admin'\">\n    <span class=\"bradcrumb\"><a [routerLink]=\"['/diagnostic-admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage Tech</span>\n    <button mat-flat-button [routerLink]=\"['/diagnostic-admin/tech-management/add']\">Add Distributors</button>\n  </ng-container>\n\n  <ng-container *ngIf=\"userData.user_type == 'doctor'\">\n    <span class=\"bradcrumb\"><a [routerLink]=\"['/doctor/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage Tech</span>\n    <button mat-flat-button [routerLink]=\"['/doctor/tech-management/add']\">Add Distributors</button>\n  </ng-container>\n</span>\n<!-- End header with add button -->\n\n\n<lib-listing class=\"DataTable\" *ngIf=\"TechDashboardAllData.length>0\"\n  (onLiblistingChange)=\"listenLiblistingChange($event)\"\n  [datasource]=\"TechDashboardAllData\"\n  [skip]=\"allUserData_skip\"\n  [detail_skip_array]=\"previewModal_detail_skip\"\n  [modify_header_array]=\"allUserData_modify_header\"\n  [apiurl]=\"apiUrl\"\n  [sourcedata]=\"tableName\"\n  [editroute]=\"editUrl\"\n  [jwttoken]=\"user_cookie\"\n  [statusarr]=\"status\"\n  [libdata]=\"libdata\"\n  [updateendpoint]=\"UpdateEndpoint\"\n  [deleteendpoint]=\"deleteEndpoint\"\n  [date_search_endpoint]=\"SearchingEndpoint\"\n  [date_search_source]=\"SearchingSourceName\"\n  [search_settings]=\"search_settings\"\n  [sortdata]=\"sortdata\" [datacollection]=\"datacollection\" [date_search_source_count]=\"techData_count\" [limitcond]=\"limitcond\">\n</lib-listing>\n\n<h2 *ngIf=\"TechDashboardAllData.length == 0\">No record found.</h2>\n\n</mat-card-content>\n</mat-card>\n\n\n<!-- Admin Footer -->\n<app-admin-footer *ngIf=\"userData.user_type == 'admin'\"></app-admin-footer>\n\n<!-- Diagnostic Admin Header -->\n<app-diagnostic-admin-footer *ngIf=\"userData.user_type == 'diagnostic_admin'\"></app-diagnostic-admin-footer>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/manage-doctorgroup/add-edit-doctorgroup/add-edit-doctorgroup.component.html":
  /*!****************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/manage-doctorgroup/add-edit-doctorgroup/add-edit-doctorgroup.component.html ***!
    \****************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminManageDoctorgroupAddEditDoctorgroupAddEditDoctorgroupComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- Admin Header -->\n<app-admin-header *ngIf=\"htmlText.userData.user_details.user_type == 'admin'\"></app-admin-header>\n\n<!-- Diagnostic Admin Header -->\n<app-diagnostic-admin-header *ngIf=\"htmlText.userData.user_details.user_type == 'diagnostic_admin'\"></app-diagnostic-admin-header>\n\n<!-- Doctor Header -->\n<app-doctor-header *ngIf=\"htmlText.userData.user_details.user_type == 'doctor'\"></app-doctor-header>\n\n\n<!-- header with add button -->\n<mat-card class=\"admin_wrapper\">\n  <mat-card-content class=\"title_wrapper\">\n    {{ htmlText.header }}\n  </mat-card-content>\n\n\n  <span class=\"add_header\">\n\n    <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'admin'\">\n      <span class=\"bradcrumb\">\n        <a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp;\n        <a [routerLink]=\"['/admin/doctor-management/group']\">Manage Doctor Group&nbsp;/</a> &nbsp;\n        {{ htmlText.nav }}\n      </span>\n    </ng-container>\n\n    <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'diagnostic_admin'\">\n      <span class=\"bradcrumb\">\n        <a [routerLink]=\"['/diagnostic-admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp;\n        <a [routerLink]=\"['/diagnostic-admin/doctor-management']\">Manage Doctor Group&nbsp;/</a> &nbsp;\n        {{ htmlText.nav }}\n      </span>\n    </ng-container>\n\n  </span>\n  <!-- End header with add button -->\n\n  <mat-card class=\"add_form\">\n    <mat-card-content class=\"form_wrapper\">\n      <form class=\"example-form\" autocomplete=\"off\" [formGroup]=\"doctorgroupManagementAddEditForm\" (ngSubmit)=\"doctorgroupManagementAddEditFormSubmit()\">\n\n        <!-- Group Name Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Group Name</mat-label>\n\n          <input matInput placeholder=\"Group Name\" [formControl]=\"doctorgroupManagementAddEditForm.controls['groupname']\"\n            (blur)=\"inputUntouch(doctorgroupManagementAddEditForm,'groupname')\">\n\n          <mat-error\n            *ngIf=\"doctorgroupManagementAddEditForm.controls['groupname'].touched && !doctorgroupManagementAddEditForm.controls['groupname'].valid && doctorgroupManagementAddEditForm.controls['groupname'].errors.required\">\n            Group Name required.\n          </mat-error>\n\n          <mat-error\n            *ngIf=\"doctorgroupManagementAddEditForm.controls['groupname'].touched && !doctorgroupManagementAddEditForm.controls['groupname'].valid && doctorgroupManagementAddEditForm.controls['groupname'].errors.maxlength\">\n            Group Name is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Group Name End -->\n\n        <!-- Contact Person Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Contact Person Name</mat-label>\n\n          <input matInput placeholder=\"Contact Person Name\" [formControl]=\"doctorgroupManagementAddEditForm.controls['contactperson']\"\n            (blur)=\"inputUntouch(doctorgroupManagementAddEditForm,'contactperson')\">\n\n          <mat-error\n            *ngIf=\"doctorgroupManagementAddEditForm.controls['contactperson'].touched && !doctorgroupManagementAddEditForm.controls['contactperson'].valid && doctorgroupManagementAddEditForm.controls['contactperson'].errors.required\">\n            Contact Person Name required.\n          </mat-error>\n\n          <mat-error\n            *ngIf=\"doctorgroupManagementAddEditForm.controls['contactperson'].touched && !doctorgroupManagementAddEditForm.controls['contactperson'].valid && doctorgroupManagementAddEditForm.controls['contactperson'].errors.maxlength\">\n            Contact Person Name is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Contact Person End -->\n\n        <!-- Email Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Email Address</mat-label>\n\n          <input matInput placeholder=\"Email Address\" [formControl]=\"doctorgroupManagementAddEditForm.controls['email']\"\n            (blur)=\"inputUntouch(doctorgroupManagementAddEditForm,'email')\">\n\n          <mat-error\n            *ngIf=\"doctorgroupManagementAddEditForm.controls['email'].touched && !doctorgroupManagementAddEditForm.controls['email'].valid && doctorgroupManagementAddEditForm.controls['email'].errors.required\">\n            Email required.\n          </mat-error>\n\n          <mat-error\n            *ngIf=\"doctorgroupManagementAddEditForm.controls['email'].touched && !doctorgroupManagementAddEditForm.controls['email'].valid && doctorgroupManagementAddEditForm.controls['email'].errors.email\">\n            Email is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Email End -->\n\n\n\n        <!-- Phone Number Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Phone Number</mat-label>\n\n          <input matInput placeholder=\"Phone\" [formControl]=\"doctorgroupManagementAddEditForm.controls['phone']\"\n            (blur)=\"inputUntouch(doctorgroupManagementAddEditForm,'phone')\">\n\n          <mat-error\n            *ngIf=\"doctorgroupManagementAddEditForm.controls['phone'].touched && !doctorgroupManagementAddEditForm.controls['phone'].valid && doctorgroupManagementAddEditForm.controls['phone'].errors.required\">\n            Phone Number required.\n          </mat-error>\n\n          <mat-error\n            *ngIf=\"doctorgroupManagementAddEditForm.controls['phone'].touched && !doctorgroupManagementAddEditForm.controls['phone'].valid && doctorgroupManagementAddEditForm.controls['phone'].errors.maxlength\">\n            Phone Number is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Phone Number End -->\n\n        <!-- Address Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Address</mat-label>\n\n          <input matInput placeholder=\"Address\" [formControl]=\"doctorgroupManagementAddEditForm.controls['address']\"\n            (blur)=\"inputUntouch(doctorgroupManagementAddEditForm,'address')\">\n\n          <mat-error *ngIf=\"doctorgroupManagementAddEditForm.controls['address'].touched && !doctorgroupManagementAddEditForm.controls['address'].valid && doctorgroupManagementAddEditForm.controls['address'].errors.required\">\n            Address required.\n          </mat-error>\n\n          <mat-error *ngIf=\"doctorgroupManagementAddEditForm.controls['address'].touched && !doctorgroupManagementAddEditForm.controls['address'].valid && doctorgroupManagementAddEditForm.controls['address'].errors.maxlength\">\n            Address is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Address End -->\n\n        <!-- State Start -->\n        <mat-form-field class=\"parent_cat\" appearance=\"fill\">\n          <mat-label>State</mat-label>\n\n          <mat-select formControlName=\"state\" (selectionChange)=\"getCity($event.value);\">\n            <mat-option [value]=\"\">Select State</mat-option>\n            <mat-option *ngFor=\"let state of htmlText.states;\" value=\"{{ state.name }}\">{{ state.name }}</mat-option>\n          </mat-select>\n\n          <mat-error *ngIf=\"doctorgroupManagementAddEditForm.controls['state'].touched && !doctorgroupManagementAddEditForm.controls['state'].valid && doctorgroupManagementAddEditForm.controls['state'].errors.required\">\n            State required.\n          </mat-error>\n        </mat-form-field>\n        <!-- State End -->\n\n        <!-- City Start -->\n        <mat-form-field class=\"parent_cat\" appearance=\"fill\">\n          <mat-label>City</mat-label>\n\n          <mat-select formControlName=\"city\">\n            <mat-option value=\"\">Select City</mat-option>\n            <mat-option *ngFor=\"let city of htmlText.cities;\" value=\"{{ city }}\">{{ city }}</mat-option>\n          </mat-select>\n\n          <mat-error *ngIf=\"doctorgroupManagementAddEditForm.controls['city'].touched && !doctorgroupManagementAddEditForm.controls['city'].valid && doctorgroupManagementAddEditForm.controls['city'].errors.required\">\n            State required.\n          </mat-error>\n        </mat-form-field>\n        <!-- City End -->\n\n        <!-- Biller Details Start -->\n        <!-- <mat-form-field appearance=\"fill\">\n          <mat-label>Select Biiler</mat-label>\n          <mat-select formControlName=\"biller_id\" multiple>\n            <mat-option [value]=\"\">Select a biiler</mat-option>\n            <mat-option *ngFor=\"let biller of htmlText.billerData;\" value=\"{{ biller._id }}\">{{ biller.groupname }} {{ biller.lastname }}</mat-option>\n          </mat-select>\n        </mat-form-field> -->\n        <!-- Biller Details End -->\n\n        <!-- Doctor's Office Start -->\n        <!-- <mat-form-field appearance=\"fill\">\n          <mat-label>Select Doctor's Office</mat-label>\n          <mat-select formControlName=\"doctors_office_id\">\n            <mat-option [value]=\"\">Select Doctor's Office</mat-option>\n            <mat-option *ngFor=\"let doctorOfficeData of htmlText.doctorOfficeData;\" value=\"{{ doctorOfficeData._id }}\">{{ doctorOfficeData.groupname }} {{ doctorOfficeData.lastname }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field> -->\n        <!-- Doctor's Office End -->\n\n        <!-- Zip Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Zip</mat-label>\n\n          <input type=\"number\" matInput placeholder=\"ZIP\" [formControl]=\"doctorgroupManagementAddEditForm.controls['zip']\"\n            (blur)=\"inputUntouch(doctorgroupManagementAddEditForm,'zip')\">\n\n          <mat-error *ngIf=\"doctorgroupManagementAddEditForm.controls['zip'].touched && !doctorgroupManagementAddEditForm.controls['zip'].valid && doctorgroupManagementAddEditForm.controls['zip'].errors.required\">\n            Zip required.\n          </mat-error>\n        </mat-form-field>\n        <!-- Zip Start -->\n\n\n\n        <ng-container *ngIf=\"!params_id\">\n          <!-- Password Start -->\n          <ng-container *ngIf=\"!params_id\">\n            <mat-form-field class=\"form-group\" appearance=\"fill\">\n\n              <input matInput placeholder=\"Password\" type=\"password\"\n                [formControl]=\"doctorgroupManagementAddEditForm.controls['password']\">\n\n              <mat-error *ngIf=\"!doctorgroupManagementAddEditForm.controls['password'].valid && doctorgroupManagementAddEditForm.controls['password'].touched\">\n                Password required.\n              </mat-error>\n            </mat-form-field>\n\n            <mat-form-field class=\"form-group\" appearance=\"fill\">\n              <input matInput placeholder=\"Confirm Password\" type=\"password\"\n                [formControl]=\"doctorgroupManagementAddEditForm.controls['confirmpassword']\">\n\n              <mat-error *ngIf=\"!doctorgroupManagementAddEditForm.controls['confirmpassword'].valid && doctorgroupManagementAddEditForm.controls['confirmpassword'].touched\">\n                Password does not match\n              </mat-error>\n            </mat-form-field>\n          </ng-container>\n          <!-- Password End -->\n        </ng-container>\n\n        <!-- Status -->\n        <span class=\"status_wrapper\">\n          <mat-checkbox formControlName=\"status\">Active</mat-checkbox>\n        </span>\n\n        <span class=\"submit_form\">\n          <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'admin'\">\n            <button mat-flat-button type=\"button\" [routerLink]=\"['/admin/doctor-management/group']\"> Back</button>\n          </ng-container>\n          <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'diagnostic_admin'\">\n            <button mat-flat-button type=\"button\" [routerLink]=\"['/diagnostic-admin/doctor-management']\">Back </button>\n          </ng-container>\n\n          <button mat-flat-button type=\"reset\" *ngIf=\"params_id == ''\">Reset</button>\n          <button mat-flat-button type=\"submit\"> {{ htmlText.buttonText }} </button>\n        </span>\n\n      </form>\n    </mat-card-content>\n  </mat-card>\n\n</mat-card>\n\n\n<app-tech-footer></app-tech-footer>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/manage-doctorgroup/listing-doctorgroup/listing-doctorgroup.component.html":
  /*!**************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/manage-doctorgroup/listing-doctorgroup/listing-doctorgroup.component.html ***!
    \**************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminManageDoctorgroupListingDoctorgroupListingDoctorgroupComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- Admin Header -->\n<app-admin-header *ngIf=\"userData.user_type == 'admin'\"></app-admin-header>\n\n<!-- Diagnostic Admin Header -->\n<app-diagnostic-admin-header *ngIf=\"userData.user_type == 'diagnostic_admin'\"></app-diagnostic-admin-header>\n\n<!-- Doctor Header -->\n<app-doctor-header *ngIf=\"userData.user_type == 'doctor'\"></app-doctor-header>\n\n\n\n<mat-card class=\"admin_wrapper\">\n\n  <mat-card-content class=\"table_wrapper\">\n    <mat-toolbar class=\"top_header\">\n      <h2> Manage doctor group </h2>\n    </mat-toolbar>\n\n    <mat-toolbar class=\"add_header\">\n      <ng-container *ngIf=\"userData.user_type == 'admin'\">\n        <span class=\"bradcrumb\"><a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage Doctor Group</span>\n        <button mat-flat-button [routerLink]=\"['/admin/doctor-management/group/add']\">Add Doctor Group</button>\n      </ng-container>\n\n      <ng-container *ngIf=\"userData.user_type == 'diagnostic_admin'\">\n        <span class=\"bradcrumb\"><a [routerLink]=\"['/diagnostic-admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage Doctor Group</span>\n        <button mat-flat-button [routerLink]=\"['/diagnostic-admin/doctor-management/add']\">Add Doctor Group</button>\n      </ng-container>\n    </mat-toolbar>\n    <!-- End header with add button -->\n\n    <!-- Listing goes here  -->\n    <lib-listing class=\"DataTable\" *ngIf=\"docData.length>0\" (onLiblistingChange)=\"listenLiblistingChange($event)\" [datasource]=\"docData\" [skip]=\"docData_skip\"\n      [modify_header_array]=\"docData_modify_header\" [sourcedata]=\"tableName\" [detail_skip_array]=\"previewModal_skip\"\n      [apiurl]=\"apiUrl\" [editroute]=\"editUrl\" [jwttoken]=\"user_cookie\" [statusarr]=\"status\"\n      [updateendpoint]=\"UpdateEndpoint\" [deleteendpoint]=\"deleteEndpoint\" [date_search_endpoint]=\"searchingEndpoint\" [libdata]=\"libdata\"\n      [date_search_source]=\"searchSourceName\" [search_settings]=\"search_settings\" [sortdata]=\"sortdata\" [datacollection]=\"datacollection\" [date_search_source_count]=\"docData_count\" [limitcond]=\"limitcond\">\n\n    </lib-listing>\n\n    <h2 *ngIf=\"docData.length == 0\">No record found.</h2>\n    <!-- Listing ends here  -->\n  </mat-card-content>\n</mat-card>\n\n\n\n<!-- Admin Footer -->\n<app-admin-footer *ngIf=\"userData.user_type == 'admin'\"></app-admin-footer>\n\n<!-- Diagnostic Admin Header -->\n<app-diagnostic-admin-footer *ngIf=\"userData.user_type == 'diagnostic_admin'\"></app-diagnostic-admin-footer>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/manage-insurance/add-edit-insurance/add-edit-insurance.component.html":
  /*!**********************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/manage-insurance/add-edit-insurance/add-edit-insurance.component.html ***!
    \**********************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminManageInsuranceAddEditInsuranceAddEditInsuranceComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- Admin Header -->\n<app-admin-header *ngIf=\"htmlText.userData.user_details.user_type == 'admin'\"></app-admin-header>\n\n<!-- Diagnostic Admin Header -->\n<app-diagnostic-admin-header *ngIf=\"htmlText.userData.user_details.user_type == 'diagnostic_admin'\"></app-diagnostic-admin-header>\n\n<!-- Doctor Header -->\n<app-doctor-header *ngIf=\"htmlText.userData.user_details.user_type == 'doctor'\"></app-doctor-header>\n\n\n<mat-card class=\"admin_wrapper\">\n  <!-- header with add button -->\n  <mat-card-content class=\"title_wrapper\">\n    {{ htmlText.header }}\n  </mat-card-content>\n\n\n  <span class=\"add_header\">\n    <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'admin'\">\n      <span class=\"bradcrumb\">\n        <a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp;\n        <a [routerLink]=\"['/admin/insurance-management']\">Manage Insurance &nbsp;/</a> &nbsp;\n        {{ htmlText.nav }}\n      </span>\n    </ng-container>\n\n    <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'diagnostic_admin'\">\n      <span class=\"bradcrumb\">\n        <a [routerLink]=\"['/diagnostic-admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp;\n        <a [routerLink]=\"['/diagnostic-admin/tech-management']\">Manage Insurance &nbsp;/</a> &nbsp;\n        {{ htmlText.nav }}\n      </span>\n    </ng-container>\n\n    <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'doctor'\">\n      <span class=\"bradcrumb\">\n        <a [routerLink]=\"['/doctor/dashboard']\">Dashboard &nbsp;/</a> &nbsp;\n        <a [routerLink]=\"['/doctor/tech-management']\">Manage Insurance &nbsp;/</a> &nbsp;\n        {{ htmlText.nav }}\n      </span>\n    </ng-container>\n  </span>\n  <!-- End header with add button -->\n\n  <mat-card class=\"add_form\">\n    <mat-card-content class=\"form_wrapper\">\n      <form class=\"example-form\" autocomplete=\"off\" name=\"InsuranceAddEditForm\" [formGroup]=\"InsuranceAddEditForm\" (ngSubmit)=\"InsuranceManagementAddFormFormSubmit()\">\n\n        <!-- Insurance Name Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Insurance Name</mat-label>\n\n          <input matInput placeholder=\"Insurance Name\" [formControl]=\"InsuranceAddEditForm.controls['insurancename']\"\n            (blur)=\"inputUntouch(InsuranceAddEditForm,'insurancename')\">\n\n          <mat-error\n            *ngIf=\"InsuranceAddEditForm.controls['insurancename'].touched && !InsuranceAddEditForm.controls['insurancename'].valid && InsuranceAddEditForm.controls['insurancename'].errors.required\">\n            Insurance Name required.\n          </mat-error>\n\n          <mat-error\n            *ngIf=\"InsuranceAddEditForm.controls['insurancename'].touched && !InsuranceAddEditForm.controls['insurancename'].valid && InsuranceAddEditForm.controls['insurancename'].errors.maxlength\">\n            Insurance Name is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Insurance Name End -->\n\n        <!-- Description Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Description</mat-label>\n\n          <input matInput placeholder=\"Description\" [formControl]=\"InsuranceAddEditForm.controls['description']\"\n            (blur)=\"inputUntouch(InsuranceAddEditForm,'description')\">\n\n          <mat-error\n            *ngIf=\"InsuranceAddEditForm.controls['description'].touched && !InsuranceAddEditForm.controls['description'].valid && InsuranceAddEditForm.controls['description'].errors.required\">\n            Description required.\n          </mat-error>\n\n          <mat-error\n            *ngIf=\"InsuranceAddEditForm.controls['description'].touched && !InsuranceAddEditForm.controls['description'].valid && InsuranceAddEditForm.controls['description'].errors.maxlength\">\n            Description is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Description End -->\n\n        <!-- Priority Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Priority</mat-label>\n\n          <input matInput placeholder=\"Priority\" [formControl]=\"InsuranceAddEditForm.controls['priority']\"\n            (blur)=\"inputUntouch(InsuranceAddEditForm,'priority')\">\n\n          <mat-error\n            *ngIf=\"InsuranceAddEditForm.controls['priority'].touched && !InsuranceAddEditForm.controls['priority'].valid && InsuranceAddEditForm.controls['priority'].errors.required\">\n            Priority required.\n          </mat-error>\n        </mat-form-field>\n        <!-- Priority End -->\n\n        <mat-checkbox [formControl]=\"InsuranceAddEditForm.controls['status']\" checked>Active</mat-checkbox>\n\n\n        <!-- end here -->\n        <span class=\"submit_form\">\n          <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'admin'\">\n            <button mat-flat-button type=\"button\" [routerLink]=\"['/admin/insurance-management']\">Back </button>\n          </ng-container>\n\n          <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'diagnostic_admin'\">\n            <button mat-flat-button type=\"button\" [routerLink]=\"['/diagnostic-admin/insurance-management']\">Back </button>\n          </ng-container>\n\n          <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'doctor'\">\n            <button mat-flat-button type=\"button\" [routerLink]=\"['/doctor/tech-management']\">Back </button>\n          </ng-container>\n\n          <button mat-flat-button type=\"reset\" *ngIf=\"params_id == ''\">Reset </button>\n          <button mat-flat-button type=\"submit\"> {{ htmlText.buttonText }} </button>\n        </span>\n      </form>\n\n    </mat-card-content>\n  </mat-card>\n\n</mat-card>\n\n\n\n<!-- Admin Footer -->\n<app-admin-footer *ngIf=\"htmlText.userData.user_details.user_type == 'admin'\"></app-admin-footer>\n\n<!-- Diagnostic Admin Header -->\n<app-diagnostic-admin-footer *ngIf=\"htmlText.userData.user_details.user_type == 'diagnostic_admin'\"></app-diagnostic-admin-footer>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/manage-insurance/listing-insurance/listing-insurance.component.html":
  /*!********************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/manage-insurance/listing-insurance/listing-insurance.component.html ***!
    \********************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminManageInsuranceListingInsuranceListingInsuranceComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- Admin Header -->\n<app-admin-header *ngIf=\"userData.user_type == 'admin'\"></app-admin-header>\n\n<!-- Diagnostic Admin Header -->\n<app-diagnostic-admin-header *ngIf=\"userData.user_type == 'diagnostic_admin'\"></app-diagnostic-admin-header>\n\n<!-- Doctor Header -->\n<app-doctor-header *ngIf=\"userData.user_type == 'doctor'\"></app-doctor-header>\n\n\n\n<mat-card class=\"admin_wrapper\">\n  <!-- header with add button -->\n  <mat-card-content class=\"table_wrapper\">\n    <mat-toolbar class=\"top_header\">\n      <h2> Manage Insurance </h2>\n    </mat-toolbar>\n\n  <span class=\"add_header\">\n\n  <ng-container *ngIf=\"userData.user_type == 'admin'\">\n    <span class=\"bradcrumb\"><a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage Insurance</span>\n    <button mat-flat-button [routerLink]=\"['/admin/insurance-management/add']\">Add Insurance</button>\n  </ng-container>\n  \n  <ng-container *ngIf=\"userData.user_type == 'diagnostic_admin'\">\n    <span class=\"bradcrumb\"><a [routerLink]=\"['/diagnostic-admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage Tech</span>\n    <button mat-flat-button [routerLink]=\"['/diagnostic-admin/tech-management/add']\">Add Tech</button>\n  </ng-container>\n\n  <ng-container *ngIf=\"userData.user_type == 'doctor'\">\n    <span class=\"bradcrumb\"><a [routerLink]=\"['/doctor/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage Tech</span>\n    <button mat-flat-button [routerLink]=\"['/doctor/tech-management/add']\">Add Tech</button>\n  </ng-container>\n</span>\n<!-- End header with add button -->\n\n<div class=\"form2_wrapper\">\n<lib-listing class=\"DataTable\" *ngIf=\"InsuranceAllData.length>0\"\n  [datasource]=\"InsuranceAllData\"\n  [skip]=\"allUserData_skip\"\n  [detail_skip_array]=\"previewModal_detail_skip\"\n  [modify_header_array]=\"allUserData_modify_header\"\n  [apiurl]=\"apiUrl\"\n  [sourcedata]=\"tableName\"\n  [editroute]=\"editUrl\"\n  [jwttoken]=\"user_cookie\"\n  [statusarr]=\"status\"\n  [updateendpoint]=\"UpdateEndpoint\"\n  [deleteendpoint]=\"deleteEndpoint\"\n  [date_search_endpoint]=\"SearchingEndpoint\"\n  [date_search_source]=\"SearchingSourceName\"\n  [search_settings]=\"search_settings\"\n  [sortdata]=\"sortdata\" [datacollection]=\"datacollection\" [date_search_source_count]=\"insuranceData_count\" [limitcond]=\"limitcond\">\n</lib-listing>\n\n<h2 *ngIf=\"InsuranceAllData.length == 0\">No record found.</h2>\n</div>\n</mat-card-content>\n</mat-card>\n\n\n<!-- Admin Footer -->\n<app-admin-footer *ngIf=\"userData.user_type == 'admin'\"></app-admin-footer>\n\n<!-- Diagnostic Admin Header -->\n<app-diagnostic-admin-footer *ngIf=\"userData.user_type == 'diagnostic_admin'\"></app-diagnostic-admin-footer>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/manage-insurancetype/add-edit-insurancetype/add-edit-insurancetype.component.html":
  /*!**********************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/manage-insurancetype/add-edit-insurancetype/add-edit-insurancetype.component.html ***!
    \**********************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminManageInsurancetypeAddEditInsurancetypeAddEditInsurancetypeComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- Admin Header -->\n<app-admin-header *ngIf=\"htmlText.userData.user_details.user_type == 'admin'\"></app-admin-header>\n\n<!-- Diagnostic Admin Header -->\n<app-diagnostic-admin-header *ngIf=\"htmlText.userData.user_details.user_type == 'diagnostic_admin'\"></app-diagnostic-admin-header>\n\n<!-- Doctor Header -->\n<app-doctor-header *ngIf=\"htmlText.userData.user_details.user_type == 'doctor'\"></app-doctor-header>\n\n\n\n\n<mat-card class=\"admin_wrapper\">\n  <!-- header with add button -->\n  <mat-card-content class=\"title_wrapper\">\n    {{ htmlText.header }}\n  </mat-card-content>\n  <span class=\"add_header\">\n\n    <span class=\"bradcrumb\">\n      <a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp;\n      <a [routerLink]=\"['/admin/doctor-office-management']\">Manage Insurance-Type &nbsp;/</a> &nbsp;\n      {{ htmlText.nav }}\n    </span>\n  </span>\n\n  <mat-card class=\"add_form\">\n    <mat-card-content class=\"form_wrapper\">\n      <form class=\"example-form\" autocomplete=\"off\" name=\"insuranceTypeAddEditForm\" [formGroup]=\"insuranceTypeAddEditForm\" (ngSubmit)=\"insuranceTypeAddEditFormFormSubmit()\">\n\n        <!-- Center Name Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Insurancetype Name</mat-label>\n\n          <input matInput placeholder=\"Insurancetype Name\" [formControl]=\"insuranceTypeAddEditForm.controls['insurancetype_name']\"\n            (blur)=\"inputUntouch(insuranceTypeAddEditForm,'insurancetype_name')\">\n\n          <mat-error\n            *ngIf=\"insuranceTypeAddEditForm.controls['insurancetype_name'].touched && !insuranceTypeAddEditForm.controls['insurancetype_name'].valid && insuranceTypeAddEditForm.controls['insurancetype_name'].errors.required\">\n            Insurancetype Name required.\n          </mat-error>\n\n          <mat-error\n            *ngIf=\"insuranceTypeAddEditForm.controls['insurancetype_name'].touched && !insuranceTypeAddEditForm.controls['insurancetype_name'].valid && insuranceTypeAddEditForm.controls['insurancetype_name'].errors.maxlength\">\n            Insurancetype Name is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Center Name End -->\n\n        <!-- Tech Details Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Select Insurance</mat-label>\n          <mat-select formControlName=\"insurance_id\" multiple>\n            <mat-option *ngFor=\"let insurance of htmlText.insuranceData;\" value=\"{{ insurance._id }}\">{{ insurance.insurancename }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n        <!-- Tech Details name -->\n\n        <!-- First Name Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Description</mat-label>\n\n          <input matInput placeholder=\"Description\" [formControl]=\"insuranceTypeAddEditForm.controls['description']\"\n            (blur)=\"inputUntouch(insuranceTypeAddEditForm,'description')\">\n\n          <mat-error\n            *ngIf=\"insuranceTypeAddEditForm.controls['description'].touched && !insuranceTypeAddEditForm.controls['description'].valid && insuranceTypeAddEditForm.controls['description'].errors.required\">\n            Description required.\n          </mat-error>\n\n          <mat-error\n            *ngIf=\"insuranceTypeAddEditForm.controls['description'].touched && !insuranceTypeAddEditForm.controls['description'].valid && insuranceTypeAddEditForm.controls['description'].errors.maxlength\">\n            Descriptionis not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- First Name End -->\n\n        <!-- Last Name Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Priority</mat-label>\n\n          <input matInput placeholder=\"Priority\" [formControl]=\"insuranceTypeAddEditForm.controls['priority']\"\n            (blur)=\"inputUntouch(insuranceTypeAddEditForm,'priority')\">\n\n          <mat-error\n            *ngIf=\"insuranceTypeAddEditForm.controls['priority'].touched && !insuranceTypeAddEditForm.controls['priority'].valid && insuranceTypeAddEditForm.controls['priority'].errors.required\">\n            Priority required.\n          </mat-error>\n        </mat-form-field>\n        <!-- Last Name End -->\n\n        <mat-checkbox [formControl]=\"insuranceTypeAddEditForm.controls['status']\" checked>Active</mat-checkbox>\n\n\n        <span class=\"submit_form\">\n          <button mat-flat-button type=\"button\" *ngIf=\"htmlText.userData.user_details.user_type == 'doctor'\" [routerLink]=\"['/doctor/doctor-office-management']\"> Back</button>\n          <button mat-flat-button type=\"button\" *ngIf=\"htmlText.userData.user_details.user_type == 'admin'\" [routerLink]=\"['/admin/insurance-type-management']\"> Back</button>\n\n\n          <button mat-flat-button type=\"reset\" *ngIf=\"params_id == ''\">Reset </button>\n          <button mat-flat-button type=\"submit\"> {{ htmlText.buttonText }} </button>\n        </span>\n        \n      </form>\n    </mat-card-content>\n  </mat-card>\n</mat-card>\n<app-admin-footer></app-admin-footer>\n ";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/manage-insurancetype/listing-insurancetype/listing-insurancetype.component.html":
  /*!********************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/manage-insurancetype/listing-insurancetype/listing-insurancetype.component.html ***!
    \********************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminManageInsurancetypeListingInsurancetypeListingInsurancetypeComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- Admin Header -->\n<app-admin-header *ngIf=\"userData.user_type == 'admin'\"></app-admin-header>\n\n<!-- Diagnostic Admin Header -->\n<app-diagnostic-admin-header *ngIf=\"userData.user_type == 'diagnostic_admin'\"></app-diagnostic-admin-header>\n\n<!-- Doctor Header -->\n<app-doctor-header *ngIf=\"userData.user_type == 'doctor'\"></app-doctor-header>\n\n\n\n<mat-card class=\"admin_wrapper\">\n  <!-- header with add button -->\n  <mat-card-content class=\"table_wrapper\">\n    <mat-toolbar class=\"top_header\">\n      <h2> Manage InsuranceType </h2>\n    </mat-toolbar>\n\n  <span class=\"add_header\">\n\n  <ng-container *ngIf=\"userData.user_type == 'admin'\">\n    <span class=\"bradcrumb\"><a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Insurance Type Management</span>\n    <button mat-flat-button [routerLink]=\"['/admin/insurance-type-management/add']\">Add InsuranceType</button>\n  </ng-container>\n</span>\n<!-- End header with add button -->\n\n<div class=\"form2_wrapper\">\n<lib-listing class=\"DataTable\" *ngIf=\"InsuranceAllData.length>0\"\n  [datasource]=\"InsuranceAllData\"\n  [skip]=\"allUserData_skip\"\n  [detail_skip_array]=\"previewModal_detail_skip\"\n  [modify_header_array]=\"allUserData_modify_header\"\n  [apiurl]=\"apiUrl\"\n  [sourcedata]=\"tableName\"\n  [editroute]=\"editUrl\"\n  [jwttoken]=\"user_cookie\"\n  [statusarr]=\"status\"\n  [updateendpoint]=\"UpdateEndpoint\"\n  [deleteendpoint]=\"deleteEndpoint\"\n  [date_search_endpoint]=\"SearchingEndpoint\"\n  [date_search_source]=\"SearchingSourceName\"\n  [search_settings]=\"search_settings\"\n  [sortdata]=\"sortdata\" [datacollection]=\"datacollection\" [date_search_source_count]=\"insuranceData_count\" [limitcond]=\"limitcond\">\n</lib-listing>\n\n<h2 *ngIf=\"InsuranceAllData.length == 0\">No record found.</h2>\n</div>\n</mat-card-content>\n</mat-card>\n\n\n<!-- Admin Footer -->\n<app-admin-footer *ngIf=\"userData.user_type == 'admin'\"></app-admin-footer>\n\n<!-- Diagnostic Admin Header -->\n<app-diagnostic-admin-footer *ngIf=\"userData.user_type == 'diagnostic_admin'\"></app-diagnostic-admin-footer>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/manage-patientinformation/add-edit-patientinformation/add-edit-patientinformation.component.html":
  /*!*************************************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/manage-patientinformation/add-edit-patientinformation/add-edit-patientinformation.component.html ***!
    \*************************************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminManagePatientinformationAddEditPatientinformationAddEditPatientinformationComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- Admin Header -->\n<app-admin-header *ngIf=\"htmlText.userData.user_details.user_type == 'admin'\"></app-admin-header>\n\n<!-- Diagnostic Admin Header -->\n<app-diagnostic-admin-header *ngIf=\"htmlText.userData.user_details.user_type == 'diagnostic_admin'\"></app-diagnostic-admin-header>\n\n<!-- Doctor Header -->\n<app-doctor-header *ngIf=\"htmlText.userData.user_details.user_type == 'doctor'\"></app-doctor-header>\n\n\n<mat-card class=\"admin_wrapper\">\n  <!-- header with add button -->\n  <mat-card-content class=\"title_wrapper\">\n    {{ htmlText.header }}\n  </mat-card-content>\n\n\n  <span class=\"add_header\">\n    <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'admin'\">\n      <span class=\"bradcrumb\">\n        <a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp;\n        <a [routerLink]=\"['/admin/patientinformation-management']\">Manage PatientInformation &nbsp;/</a> &nbsp;\n        {{ htmlText.nav }}\n      </span>\n    </ng-container>\n\n    <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'diagnostic_admin'\">\n      <span class=\"bradcrumb\">\n        <a [routerLink]=\"['/diagnostic-admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp;\n        <a [routerLink]=\"['/diagnostic-admin/tech-management']\">Manage PatientInformation &nbsp;/</a> &nbsp;\n        {{ htmlText.nav }}\n      </span>\n    </ng-container>\n\n    <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'doctor'\">\n      <span class=\"bradcrumb\">\n        <a [routerLink]=\"['/doctor/dashboard']\">Dashboard &nbsp;/</a> &nbsp;\n        <a [routerLink]=\"['/doctor/tech-management']\">Manage PatientInformation &nbsp;/</a> &nbsp;\n        {{ htmlText.nav }}\n      </span>\n    </ng-container>\n  </span>\n  <!-- End header with add button -->\n\n  <mat-card class=\"add_form\">\n    <mat-card-content class=\"form_wrapper\">\n      <form class=\"example-form\" autocomplete=\"off\" name=\"patientinformationAddEditForm\" [formGroup]=\"patientinformationAddEditForm\" (ngSubmit)=\"patientinformationAddEditFormSubmit()\">\n\n        <!-- Insurance Name Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Type</mat-label>\n\n          <mat-select formControlName=\"type\">\n            <mat-option value=\"checkbox\" (click)=\"openType();\">Checkbox</mat-option>\n            <mat-option value=\"numberfield\" (click)=\"openType();\">Number Field</mat-option>\n            <mat-option value=\"textfield\" (click)=\"openType();\">Text Field</mat-option>\n            <mat-option value=\"dropdown\" (click)=\"openType();\">Dropdown</mat-option>\n          </mat-select>\n        </mat-form-field>\n        <!-- Insurance Name End -->\n\n\n        <!-- Add Field Start -->\n        <ng-container *ngIf=\"addfieldFlage==true\">\n          <!-- <mat-form-field appearance=\"fill\" >\n          <mat-label>Add Field</mat-label>\n\n          <input matInput placeholder=\"Add Field\" [formControl]=\"patientinformationAddEditForm.controls['addfield']\"> \n\n         <mat-error\n            *ngIf=\"patientinformationAddEditForm.controls['addfield'].touched && !patientinformationAddEditForm.controls['addfield'].valid && patientinformationAddEditForm.controls['addfield'].errors.required\">\n            Add Field required.\n          </mat-error>\n\n          <mat-error\n            *ngIf=\"patientinformationAddEditForm.controls['addfield'].touched && !patientinformationAddEditForm.controls['addfield'].valid && patientinformationAddEditForm.controls['addfield'].errors.maxlength\">\n            Add Field is not valid.\n          </mat-error>\n       </mat-form-field> -->\n       <mat-form-field appearance=\"fill\">\n       <mat-chip-list #chipListt>\n        <mat-chip *ngFor=\"let cma of addfieldArray;let i = index\" [selectable]=\"selectable\"\n        [removable]=\"removable\" (removed)=\"clearField(i)\">{{ cma }}\n          <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\n        </mat-chip>\n      <input matInput placeholder=\"Add Fields\" [formControl]=\"patientinformationAddEditForm.controls['addfield']\" [matChipInputFor]=\"chipListt\" [matChipInputAddOnBlur]=\"addOnBlur\" (matChipInputTokenEnd)=\"collect_field($event)\"\n      [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\">\n      </mat-chip-list>\n    </mat-form-field>\n        </ng-container>\n        <!-- Add Field End -->\n\n\n        <!-- Description Start -->\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Label</mat-label>\n  \n            <input matInput placeholder=\"Label\" [formControl]=\"patientinformationAddEditForm.controls['label']\"\n              (blur)=\"inputUntouch(patientinformationAddEditForm,'label')\">\n  \n            <mat-error\n              *ngIf=\"patientinformationAddEditForm.controls['label'].touched && !patientinformationAddEditForm.controls['label'].valid && patientinformationAddEditForm.controls['label'].errors.required\">\n              Label required.\n            </mat-error>\n  \n            <mat-error\n              *ngIf=\"patientinformationAddEditForm.controls['label'].touched && !patientinformationAddEditForm.controls['label'].valid && patientinformationAddEditForm.controls['label'].errors.maxlength\">\n              Label is not valid.\n            </mat-error>\n          </mat-form-field>\n          <!-- Description End -->\n\n        <!-- Description Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Description</mat-label>\n\n          <input matInput placeholder=\"Description\" [formControl]=\"patientinformationAddEditForm.controls['description']\"\n            (blur)=\"inputUntouch(patientinformationAddEditForm,'description')\">\n\n          <mat-error\n            *ngIf=\"patientinformationAddEditForm.controls['description'].touched && !patientinformationAddEditForm.controls['description'].valid && patientinformationAddEditForm.controls['description'].errors.required\">\n            Description required.\n          </mat-error>\n\n          <mat-error\n            *ngIf=\"patientinformationAddEditForm.controls['description'].touched && !patientinformationAddEditForm.controls['description'].valid && patientinformationAddEditForm.controls['description'].errors.maxlength\">\n            Description is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Description End -->\n\n        <mat-checkbox [formControl]=\"patientinformationAddEditForm.controls['status']\" checked>Active</mat-checkbox>\n\n\n        <!-- end here -->\n        <span class=\"submit_form\">\n          <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'admin'\">\n            <button mat-flat-button type=\"button\" [routerLink]=\"['/admin/patientinformation-management']\">Back </button>\n          </ng-container>\n\n          <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'diagnostic_admin'\">\n            <button mat-flat-button type=\"button\" [routerLink]=\"['/diagnostic-admin/insurance-management']\">Back </button>\n          </ng-container>\n\n          <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'doctor'\">\n            <button mat-flat-button type=\"button\" [routerLink]=\"['/doctor/tech-management']\">Back </button>\n          </ng-container>\n\n          <button mat-flat-button type=\"reset\" *ngIf=\"params_id == ''\">Reset </button>\n          <button mat-flat-button type=\"submit\"> {{ htmlText.buttonText }} </button>\n        </span>\n      </form>\n\n    </mat-card-content>\n  </mat-card>\n\n</mat-card>\n\n\n\n<!-- Admin Footer -->\n<app-admin-footer *ngIf=\"htmlText.userData.user_details.user_type == 'admin'\"></app-admin-footer>\n\n<!-- Diagnostic Admin Header -->\n<app-diagnostic-admin-footer *ngIf=\"htmlText.userData.user_details.user_type == 'diagnostic_admin'\"></app-diagnostic-admin-footer>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/manage-patientinformation/listing-patientinformation/listing-patientinformation.component.html":
  /*!***********************************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/manage-patientinformation/listing-patientinformation/listing-patientinformation.component.html ***!
    \***********************************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminManagePatientinformationListingPatientinformationListingPatientinformationComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- Admin Header -->\n<app-admin-header *ngIf=\"userData.user_type == 'admin'\"></app-admin-header>\n\n<!-- Diagnostic Admin Header -->\n<app-diagnostic-admin-header *ngIf=\"userData.user_type == 'diagnostic_admin'\"></app-diagnostic-admin-header>\n\n<!-- Doctor Header -->\n<app-doctor-header *ngIf=\"userData.user_type == 'doctor'\"></app-doctor-header>\n\n\n\n<mat-card class=\"admin_wrapper\">\n  <!-- header with add button -->\n  <mat-card-content class=\"table_wrapper\">\n    <mat-toolbar class=\"top_header\">\n      <h2> Manage PatientInformation </h2>\n    </mat-toolbar>\n\n  <span class=\"add_header\">\n\n  <ng-container *ngIf=\"userData.user_type == 'admin'\">\n    <span class=\"bradcrumb\"><a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage PatientInformation</span>\n    <button mat-flat-button [routerLink]=\"['/admin/patientinformation-management/add']\">Add Patient Information</button>\n  </ng-container>\n  \n  <ng-container *ngIf=\"userData.user_type == 'diagnostic_admin'\">\n    <span class=\"bradcrumb\"><a [routerLink]=\"['/diagnostic-admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage Tech</span>\n    <button mat-flat-button [routerLink]=\"['/diagnostic-admin/tech-management/add']\">Add Tech</button>\n  </ng-container>\n\n  <ng-container *ngIf=\"userData.user_type == 'doctor'\">\n    <span class=\"bradcrumb\"><a [routerLink]=\"['/doctor/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage Tech</span>\n    <button mat-flat-button [routerLink]=\"['/doctor/tech-management/add']\">Add Tech</button>\n  </ng-container>\n</span>\n<!-- End header with add button -->\n\n\n<lib-listing class=\"DataTable\" *ngIf=\"InsuranceAllData.length>0\"\n  [datasource]=\"InsuranceAllData\"\n  [skip]=\"allUserData_skip\"\n  [detail_skip_array]=\"previewModal_detail_skip\"\n  [modify_header_array]=\"allUserData_modify_header\"\n  [apiurl]=\"apiUrl\"\n  [sourcedata]=\"tableName\"\n  [editroute]=\"editUrl\"\n  [jwttoken]=\"user_cookie\"\n  [statusarr]=\"status\"\n  [updateendpoint]=\"UpdateEndpoint\"\n  [deleteendpoint]=\"deleteEndpoint\"\n  [date_search_endpoint]=\"SearchingEndpoint\"\n  [date_search_source]=\"SearchingSourceName\"\n  [search_settings]=\"search_settings\"\n  [sortdata]=\"sortdata\" [datacollection]=\"datacollection\" [date_search_source_count]=\"insuranceData_count\" [limitcond]=\"limitcond\">\n</lib-listing>\n\n<h2 *ngIf=\"InsuranceAllData.length == 0\">No record found.</h2>\n\n</mat-card-content>\n</mat-card>\n\n\n<!-- Admin Footer -->\n<app-admin-footer *ngIf=\"userData.user_type == 'admin'\"></app-admin-footer>\n\n<!-- Diagnostic Admin Header -->\n<app-diagnostic-admin-footer *ngIf=\"userData.user_type == 'diagnostic_admin'\"></app-diagnostic-admin-footer>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/report-not-process/report-not-process.component.html":
  /*!*****************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/report-not-process/report-not-process.component.html ***!
    \*****************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminReportNotProcessReportNotProcessComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- Admin Header -->\n<app-admin-header></app-admin-header>\n\n<!-- header with add button -->\n<mat-card class=\"admin_wrapper\">\n    <!-- header with add button -->\n    <mat-card-content class=\"table_wrapper\">\n        <mat-toolbar class=\"top_header\">\n            <h2> Report Not Process : {{reportData.length}} </h2>\n        </mat-toolbar>\n\n        <span class=\"add_header\">\n      <span class=\"bradcrumb\"><a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage Admin</span>\n        </span>\n        <!-- End header with add button -->\n\n        <!-- table -->\n        <!-- <lib-listing class=\"DataTable\" *ngIf=\"allResloveData.length>0\" [datasource]=\"allResloveData\" [skip]=\"allUserData_skip\" [detail_skip_array]=\"previewModal_skip\" [modify_header_array]=\"allUserData_modify_header\" [apiurl]=\"apiUrl\" [sourcedata]=\"tableName\"\n            [editroute]=\"editUrl\" [jwttoken]=\"user_cookie\" [statusarr]=\"status\" [updateendpoint]=\"UpdateEndpoint\" [deleteendpoint]=\"deleteEndpoint\" [date_search_endpoint]=\"SearchingEndpoint\" [date_search_source]=\"SearchingSourceName\" [search_settings]=\"search_settings\">\n        </lib-listing> -->\n\n        <h2 class=\"no_data\" *ngIf=\"reportData.length == 0\">No record found.</h2>\n        <!-- end table -->\n\n\n\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n            <!-- Checkbox Column -->\n            <ng-container matColumnDef=\"select\">\n                <th mat-header-cell *matHeaderCellDef>\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\" [checked]=\"selection.hasValue() && isAllSelected()\" [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [aria-label]=\"checkboxLabel()\">\n                    </mat-checkbox>\n                </th>\n                <td mat-cell *matCellDef=\"let row\">\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\" [checked]=\"selection.isSelected(row)\" [aria-label]=\"checkboxLabel(row)\">\n                    </mat-checkbox>\n                </td>\n            </ng-container>\n\n            <!-- File Original Name Column -->\n            <ng-container matColumnDef=\"file_original_name\">\n                <th mat-header-cell *matHeaderCellDef> File Original Name </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.file_original_name}} </td>\n            </ng-container>\n\n            <!-- Doctor Name Column -->\n            <ng-container matColumnDef=\"doctor_name\" (click)=\"$event.stopPropagation()\">\n                <th mat-header-cell *matHeaderCellDef> Doctor Name </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.doctor_name}} </td>\n            </ng-container>\n\n            <!-- Tech Name Column -->\n            <ng-container matColumnDef=\"tech_name\" (click)=\"$event.stopPropagation()\">\n                <th mat-header-cell *matHeaderCellDef> Tech Name </th>\n                <td mat-cell *matCellDef=\"let element\" (click)=\"$event.stopPropagation()\"> {{element.tech_name}} </td>\n            </ng-container>\n\n            <!-- Upload time Column -->\n            <ng-container matColumnDef=\"upload_time\" (click)=\"$event.stopPropagation()\">\n                <th mat-header-cell *matHeaderCellDef (click)=\"$event.stopPropagation()\"> Upload Time </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.upload_time}} </td>\n            </ng-container>\n\n            <!-- Action Column -->\n            <ng-container matColumnDef=\"action\" (click)=\"$event.stopPropagation()\">\n                <th mat-header-cell *matHeaderCellDef> Action </th>\n                <td mat-cell *matCellDef=\"let element;let i = index;\" (click)=\"$event.stopPropagation()\">\n                    <mat-button-toggle-group class=\"margin-small\">\n                        <mat-button-toggle type=\"button\" (click)=\"action('retry', element._id, i);\">\n                            <i class=\"material-icons\"> replay </i>\n                        </mat-button-toggle>\n                        <mat-button-toggle type=\"button\" (click)=\"action('delete', element._id, i);\">\n                            <i class=\"material-icons\"> delete </i>\n                        </mat-button-toggle>\n                    </mat-button-toggle-group>\n                </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"selection.toggle(row)\">\n        </table>\n\n\n\n        <!-- Admin Footer -->\n    </mat-card-content>\n</mat-card>\n\n\n\n<app-admin-footer></app-admin-footer>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/report-process-time/report-process-time/report-process-time.component.html":
  /*!***************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/report-process-time/report-process-time/report-process-time.component.html ***!
    \***************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminReportProcessTimeReportProcessTimeReportProcessTimeComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<app-admin-header *ngIf=\"loginUserData.user_details.user_details.user_type == 'admin'\"></app-admin-header>\n\n<!-- Admin Biller Header -->\n\n<app-adminbiller-header *ngIf=\"loginUserData.user_details.user_details.user_type == 'admin_biller'\">\n</app-adminbiller-header>\n\n<mat-card class=\"admin_wrapper\"> \n      <mat-toolbar class=\"top_header\">\n        <h2> Reports Processing Time</h2>\n      </mat-toolbar>\n  <mat-card-content class=\"table_wrapper admin_dashboard\">\n\n    <!-- table -->\n    <lib-listing class=\"DataTable\" *ngIf=\"allBillerData.length>0\" [datasource]=\"allBillerData\" [skip]=\"allUserData_skip\"\n      [modify_header_array]=\"allUserData_modify_header\" [detail_skip_array]=\"previewModal_detail_skip\" [apiurl]=\"apiUrl\"\n      [sourcedata]=\"tableName\" [editroute]=\"editUrl\" [jwttoken]=\"jwtToken\" [statusarr]=\"status\"\n      [updateendpoint]=\"UpdateEndpoint\" [deleteendpoint]=\"deleteEndpoint\" [date_search_endpoint]=\"SearchingEndpoint\"\n      [date_search_source]=\"SearchingSourceName\" [search_settings]=\"search_settings\" [sortdata]=\"sortdata\"\n      [datacollection]=\"datacollection\" [libdata]=\"libdata\" [date_search_source_count]=\"billerData_count\"\n      [limitcond]=\"limitcond\">\n    </lib-listing>\n    <h2 *ngIf=\"allBillerData.length == 0\">No record found.</h2>\n  </mat-card-content>\n\n</mat-card>\n\n<app-admin-footer></app-admin-footer>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/report-time-setting/add-setting-time/add-setting-time.component.html":
  /*!*********************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/report-time-setting/add-setting-time/add-setting-time.component.html ***!
    \*********************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminReportTimeSettingAddSettingTimeAddSettingTimeComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- Admin Header -->\n<app-admin-header *ngIf=\"htmlText.userData.user_details.user_type == 'admin'\"></app-admin-header>\n\n<!-- Diagnostic Admin Header -->\n<app-diagnostic-admin-header *ngIf=\"htmlText.userData.user_details.user_type == 'diagnostic_admin'\"></app-diagnostic-admin-header>\n\n<!-- Doctor Group Header -->\n<app-doctor-group-header *ngIf=\"htmlText.userData.user_details.user_type == 'distributors'\"></app-doctor-group-header>\n\n\n<mat-card class=\"admin_wrapper percentage_counter\">\n  <!-- header with add button -->\n  <mat-card-content class=\"title_wrapper\">\n    {{ htmlText.header }}\n  </mat-card-content>\n\n\n  <span class=\"add_header\">\n    <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'admin'\">\n      <!-- <span class=\"bradcrumb\">\n        <a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp;\n        <a [routerLink]=\"['/admin/sales-person-management']\">Manage Time &nbsp;/</a> &nbsp;\n        {{ htmlText.nav }}\n      </span> -->\n    </ng-container>\n\n    <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'diagnostic_admin'\">\n      <span class=\"bradcrumb\">\n        <a [routerLink]=\"['/diagnostic-admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp;\n        <a [routerLink]=\"['/diagnostic-admin/sales-person-management']\"> Manage Sales Person &nbsp;/</a> &nbsp;\n        {{ htmlText.nav }}\n      </span>\n    </ng-container>\n\n\n    <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'distributors`'\">\n      <span class=\"bradcrumb\">\n        <a [routerLink]=\"['/distributors/dashboard']\">Dashboard &nbsp;/</a> &nbsp;\n        <a [routerLink]=\"['/distributors/sales-person-management']\">Manage Sales Person &nbsp;/</a> &nbsp;\n        {{ htmlText.nav }}\n      </span>\n    </ng-container>\n  </span>\n  <!-- End header with add button -->\n\n  <mat-card class=\"add_form\">\n    <mat-card-content class=\"form_wrapper\">\n      <form class=\"example-form\" autocomplete=\"off\" name=\"SalesPersonManagementAddEditForm\" [formGroup]=\"SalesPersonManagementAddEditForm\" (ngSubmit)=\"TechManagementAddFormFormSubmit()\">\n\n        <!-- Time Percentage Start -->\n\n        <span class=\"label_text\">\n        <label class=\"label_tag\">Default Value for System Approval</label>\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Default Value for System Approval (%)</mat-label>\n\n          <input matInput placeholder=\"Default Value for System Approval (%)\" [formControl]=\"SalesPersonManagementAddEditForm.controls['time_setting_percentage']\"\n            (blur)=\"inputUntouch(SalesPersonManagementAddEditForm,'time_setting_percentage')\">\n\n          <mat-error\n            *ngIf=\"SalesPersonManagementAddEditForm.controls['time_setting_percentage'].touched && !SalesPersonManagementAddEditForm.controls['time_setting_percentage'].valid && SalesPersonManagementAddEditForm.controls['time_setting_percentage'].errors.required\">\n             Percentage required.\n          </mat-error>\n\n          <mat-error\n            *ngIf=\"SalesPersonManagementAddEditForm.controls['time_setting_percentage'].touched && !SalesPersonManagementAddEditForm.controls['time_setting_percentage'].valid && SalesPersonManagementAddEditForm.controls['time_setting_percentage'].errors.maxlength\">\n             Percentage is not valid.\n          </mat-error>\n        </mat-form-field>\n      </span>\n        <!-- Time Percentage End -->\n\n        <!-- end here -->\n        <span class=\"submit_form\">\n          <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'admin'\">\n            <!-- <button mat-flat-button type=\"button\" [routerLink]=\"['/admin/sales-person-management']\">Back </button> -->\n          </ng-container>\n\n          <!-- <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'admin'\">\n            <button mat-flat-button type=\"button\" [routerLink]=\"['/admin/sales-person-management']\">Back </button>\n          </ng-container> -->\n          <button mat-flat-button type=\"reset\" *ngIf=\"params_id == ''\">Reset </button>\n          <button mat-flat-button type=\"submit\"> {{ htmlText.buttonText }} </button>\n        </span>\n      </form>\n\n    </mat-card-content>\n  </mat-card>\n\n</mat-card>\n\n\n\n<!-- Admin Footer -->\n<app-admin-footer></app-admin-footer>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/report-time-setting/report-time-setting/report-time-setting.component.html":
  /*!***************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/report-time-setting/report-time-setting/report-time-setting.component.html ***!
    \***************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminReportTimeSettingReportTimeSettingReportTimeSettingComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- Admin Header -->\n<app-admin-header *ngIf=\"userData.user_type == 'admin'\"></app-admin-header>\n\n<!-- Diagnostic Admin Header -->\n<app-diagnostic-admin-header *ngIf=\"userData.user_type == 'diagnostic_admin'\"></app-diagnostic-admin-header>\n\n\n<!-- Distributors Admin Header -->\n<app-distributors-header *ngIf=\"userData.user_type == 'distributors'\"></app-distributors-header>\n\n<!-- Doctor Header -->\n<app-doctor-header *ngIf=\"userData.user_type == 'doctor'\"></app-doctor-header>\n\n\n<mat-card class=\"admin_wrapper\">\n  <!-- header with add button -->\n  <mat-card-content class=\"table_wrapper\">\n    <mat-toolbar class=\"top_header\">\n      <h2> Manage Report Setting </h2>\n    </mat-toolbar>\n\n  <span class=\"add_header\">\n\n  <ng-container *ngIf=\"userData.user_type == 'admin'\">\n    <span class=\"bradcrumb\"><a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage Report Setting</span>\n    <!-- <button mat-flat-button [routerLink]=\"['/admin/setting-management/add']\">Add Sales Person</button> -->\n  </ng-container>\n</span>\n<!-- End header with add button -->\n\n\n<lib-listing class=\"DataTable\" *ngIf=\"salesPersonDashboardAllData.length>0\"\n  [datasource]=\"salesPersonDashboardAllData\"\n  [skip]=\"allUserData_skip\"\n  [detail_skip_array]=\"previewModal_detail_skip\"\n  [modify_header_array]=\"allUserData_modify_header\"\n  [apiurl]=\"apiUrl\"\n  [sourcedata]=\"tableName\"\n  [editroute]=\"editUrl\"\n  [jwttoken]=\"user_cookie\"\n  [statusarr]=\"status\"\n  [updateendpoint]=\"UpdateEndpoint\"\n  [deleteendpoint]=\"deleteEndpoint\"\n  [date_search_endpoint]=\"SearchingEndpoint\"\n  [date_search_source]=\"SearchingSourceName\"\n  [search_settings]=\"search_settings\"\n  [sortdata]=\"sortdata\" [libdata]=\"libdata\" [datacollection]=\"datacollection\" [date_search_source_count]=\"salesData_count\" [limitcond]=\"limitcond\">\n  \n</lib-listing>\n\n<h2 *ngIf=\"salesPersonDashboardAllData.length == 0\">No record found.</h2>\n\n</mat-card-content>\n</mat-card>\n\n\n<!-- Admin Footer -->\n<app-admin-footer *ngIf=\"userData.user_type == 'admin'\"></app-admin-footer>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/reports-details/reports-details/reports-details.component.html":
  /*!***************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/reports-details/reports-details/reports-details.component.html ***!
    \***************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminReportsDetailsReportsDetailsReportsDetailsComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- Admin Header -->\n<app-admin-header *ngIf=\"loginUserData.user_details.user_details.user_type == 'admin'\"></app-admin-header>\n\n<!-- Admin Biller Header -->\n<app-adminbiller-header *ngIf=\"loginUserData.user_details.user_details.user_type == 'admin_biller'\">\n</app-adminbiller-header>\n\n<!-- Diagnostic Admin Header -->\n<app-diagnostic-admin-header *ngIf=\"loginUserData.user_details.user_details.user_type == 'diagnostic_admin'\">\n</app-diagnostic-admin-header>\n\n<!-- Doctor Group Admin Header -->\n<app-doctor-group-header *ngIf=\"loginUserData.user_details.user_details.user_type == 'doctor_group'\">\n</app-doctor-group-header>\n\n<!-- Distributors Admin Header -->\n<app-distributors-header *ngIf=\"loginUserData.user_details.user_details.user_type == 'distributors'\">\n</app-distributors-header>\n\n\n<!-- Doctor Header -->\n<app-doctor-header *ngIf=\"loginUserData.user_details.user_details.user_type == 'doctor'\"></app-doctor-header>\n\n<!-- Tech Header -->\n<app-tech-header *ngIf=\"loginUserData.user_details.user_details.user_type == 'tech'\"></app-tech-header>\n\n<!-- Doctor Office Header -->\n<app-doctor-office-header *ngIf=\"loginUserData.user_details.user_details.user_type == 'doctor_office'\">\n</app-doctor-office-header>\n\n<mat-card class=\"admin_wrapper\">\n  <mat-toolbar class=\"top_header\">\n    <h2> CPT Validated Detail View</h2>\n  </mat-toolbar>\n  <mat-card-content class=\"table_wrapper admin_dashboard\">\n\n    <!-- table -->\n    <lib-listing class=\"DataTable\" *ngIf=\"allBillerData.length>0\" [datasource]=\"allBillerData\" [skip]=\"allUserData_skip\"\n      [modify_header_array]=\"allUserData_modify_header\" [detail_skip_array]=\"previewModal_detail_skip\" [apiurl]=\"apiUrl\"\n      [sourcedata]=\"tableName\" [editroute]=\"editUrl\" [jwttoken]=\"jwtToken\" [statusarr]=\"status\"\n      [updateendpoint]=\"UpdateEndpoint\" [deleteendpoint]=\"deleteEndpoint\" [date_search_endpoint]=\"SearchingEndpoint\"\n      [date_search_source]=\"SearchingSourceName\" [search_settings]=\"search_settings\" [sortdata]=\"sortdata\"\n      [datacollection]=\"datacollection\" [libdata]=\"libdata\" [date_search_source_count]=\"billerData_count\"\n      [limitcond]=\"limitcond\">\n    </lib-listing>\n    <h2 *ngIf=\"allBillerData.length == 0\">No record found.</h2>\n  </mat-card-content>\n\n\n</mat-card>\n<app-admin-footer></app-admin-footer>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/sales-person-management/add-edit-sales-person/add-edit-sales-person.component.html":
  /*!***********************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/sales-person-management/add-edit-sales-person/add-edit-sales-person.component.html ***!
    \***********************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminSalesPersonManagementAddEditSalesPersonAddEditSalesPersonComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- Admin Header -->\n<app-admin-header *ngIf=\"htmlText.userData.user_details.user_type == 'admin'\"></app-admin-header>\n\n<!-- Diagnostic Admin Header -->\n<app-diagnostic-admin-header *ngIf=\"htmlText.userData.user_details.user_type == 'diagnostic_admin'\"></app-diagnostic-admin-header>\n\n<!-- Distributors Admin Header -->\n<app-distributors-header *ngIf=\"htmlText.userData.user_details.user_type == 'distributors'\"></app-distributors-header>\n\n<!-- Doctor Header -->\n<app-doctor-header *ngIf=\"htmlText.userData.user_details.user_type == 'doctor'\"></app-doctor-header>\n\n\n<mat-card class=\"admin_wrapper\">\n  <!-- header with add button -->\n  <mat-card-content class=\"title_wrapper\">\n    {{ htmlText.header }}\n  </mat-card-content>\n\n\n  <span class=\"add_header\">\n    <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'admin'\">\n      <span class=\"bradcrumb\">\n        <a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp;\n        <a [routerLink]=\"['/admin/sales-person-management']\">Manage Sales Person &nbsp;/</a> &nbsp;\n        {{ htmlText.nav }}\n      </span>\n    </ng-container>\n\n    <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'diagnostic_admin'\">\n      <span class=\"bradcrumb\">\n        <a [routerLink]=\"['/diagnostic-admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp;\n        <a [routerLink]=\"['/diagnostic-admin/sales-person-management']\"> Manage Sales Person &nbsp;/</a> &nbsp;\n        {{ htmlText.nav }}\n      </span>\n    </ng-container>\n\n\n    <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'distributors`'\">\n      <span class=\"bradcrumb\">\n        <a [routerLink]=\"['/distributors/dashboard']\">Dashboard &nbsp;/</a> &nbsp;\n        <a [routerLink]=\"['/distributors/sales-person-management']\">Manage Sales Person &nbsp;/</a> &nbsp;\n        {{ htmlText.nav }}\n      </span>\n    </ng-container>\n  </span>\n  <!-- End header with add button -->\n\n  <mat-card class=\"add_form\">\n    <mat-card-content class=\"form_wrapper\">\n      <form class=\"example-form\" autocomplete=\"off\" name=\"SalesPersonManagementAddEditForm\" [formGroup]=\"SalesPersonManagementAddEditForm\" (ngSubmit)=\"TechManagementAddFormFormSubmit()\">\n\n        <!-- First Name Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>First Name</mat-label>\n\n          <input matInput placeholder=\"First Name\" [formControl]=\"SalesPersonManagementAddEditForm.controls['firstname']\"\n            (blur)=\"inputUntouch(SalesPersonManagementAddEditForm,'firstname')\">\n\n          <mat-error\n            *ngIf=\"SalesPersonManagementAddEditForm.controls['firstname'].touched && !SalesPersonManagementAddEditForm.controls['firstname'].valid && SalesPersonManagementAddEditForm.controls['firstname'].errors.required\">\n            First Name required.\n          </mat-error>\n\n          <mat-error\n            *ngIf=\"SalesPersonManagementAddEditForm.controls['firstname'].touched && !SalesPersonManagementAddEditForm.controls['firstname'].valid && SalesPersonManagementAddEditForm.controls['firstname'].errors.maxlength\">\n            First Name is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- First Name End -->\n\n        <!-- Last Name Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Last Name</mat-label>\n\n          <input matInput placeholder=\"Last Name\" [formControl]=\"SalesPersonManagementAddEditForm.controls['lastname']\"\n            (blur)=\"inputUntouch(SalesPersonManagementAddEditForm,'lastname')\">\n\n          <mat-error\n            *ngIf=\"SalesPersonManagementAddEditForm.controls['lastname'].touched && !SalesPersonManagementAddEditForm.controls['lastname'].valid && SalesPersonManagementAddEditForm.controls['lastname'].errors.required\">\n            Last Name required.\n          </mat-error>\n\n          <mat-error\n            *ngIf=\"SalesPersonManagementAddEditForm.controls['lastname'].touched && !SalesPersonManagementAddEditForm.controls['lastname'].valid && SalesPersonManagementAddEditForm.controls['lastname'].errors.maxlength\">\n            Last Name is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Last Name End -->\n\n        <!-- Email Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Email Address</mat-label>\n\n          <input matInput placeholder=\"Email Address\" [formControl]=\"SalesPersonManagementAddEditForm.controls['email']\"\n            (blur)=\"inputUntouch(SalesPersonManagementAddEditForm,'email')\">\n\n          <mat-error\n            *ngIf=\"SalesPersonManagementAddEditForm.controls['email'].touched && !SalesPersonManagementAddEditForm.controls['email'].valid && SalesPersonManagementAddEditForm.controls['email'].errors.required\">\n            Email required.\n          </mat-error>\n\n          <mat-error\n            *ngIf=\"SalesPersonManagementAddEditForm.controls['email'].touched && !SalesPersonManagementAddEditForm.controls['email'].valid && SalesPersonManagementAddEditForm.controls['email'].errors.email\">\n            Email is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Email End -->\n\n        <!-- Phone Number Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Phone Number</mat-label>\n\n          <input matInput placeholder=\"Phone\" [formControl]=\"SalesPersonManagementAddEditForm.controls['phone']\"\n            (blur)=\"inputUntouch(SalesPersonManagementAddEditForm,'phone')\">\n\n          <mat-error\n            *ngIf=\"SalesPersonManagementAddEditForm.controls['phone'].touched && !SalesPersonManagementAddEditForm.controls['phone'].valid && SalesPersonManagementAddEditForm.controls['phone'].errors.required\">\n            Phone Number required.\n          </mat-error>\n\n          <mat-error\n            *ngIf=\"SalesPersonManagementAddEditForm.controls['phone'].touched && !SalesPersonManagementAddEditForm.controls['phone'].valid && SalesPersonManagementAddEditForm.controls['phone'].errors.maxlength\">\n            Phone Number is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Phone Number End -->\n\n        <!-- Address Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Address</mat-label>\n\n          <input matInput placeholder=\"Address\" [formControl]=\"SalesPersonManagementAddEditForm.controls['address']\"\n            (blur)=\"inputUntouch(SalesPersonManagementAddEditForm,'address')\">\n\n          <mat-error *ngIf=\"SalesPersonManagementAddEditForm.controls['address'].touched && !SalesPersonManagementAddEditForm.controls['address'].valid && SalesPersonManagementAddEditForm.controls['address'].errors.required\">\n            Address required.\n          </mat-error>\n\n          <mat-error *ngIf=\"SalesPersonManagementAddEditForm.controls['address'].touched && !SalesPersonManagementAddEditForm.controls['address'].valid && SalesPersonManagementAddEditForm.controls['address'].errors.maxlength\">\n            Address is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Address End -->\n\n                <!-- parent type Start -->\n                <mat-form-field class=\"parent_cat\" appearance=\"fill\" *ngIf = \"htmlText.userData.user_details.user_type == 'admin'\">\n                  <mat-label>Parent Type</mat-label>\n        \n                  <mat-select formControlName=\"parent_type\">\n                    <mat-option value=\"admin\">Select Parent Type</mat-option>\n                    <mat-option *ngFor=\"let parent of htmlText.parent_type;\" value=\"{{ parent.value }}\" (click)=\"getParentData(parent.name)\">{{ parent.name }}</mat-option>\n                  </mat-select>\n                </mat-form-field>\n                <!-- Parent Type End -->\n        \n                <ng-container *ngIf = \"htmlText.userData.user_details.user_type == 'admin'\">\n                <!-- Parent Name Start -->\n                <mat-form-field appearance=\"fill\" *ngIf = \"(selectionChangeValue == 'DiagnosticAdmin') || (selectionChangeValue == 'diagnostic_admin')\">\n                  <mat-label>Select Parent Name</mat-label>\n                  <mat-select formControlName=\"parent_id\">\n                    <mat-option [value]=\"\">Select Parent Name</mat-option>\n                    <mat-option *ngFor=\"let parent of htmlText.parent_id;\" value=\"{{ parent._id }}\" >{{ parent.center_name }}</mat-option>\n                  </mat-select>\n                </mat-form-field>\n                <!-- Parent Name name -->\n        \n        \n                <!-- Parent Name Start -->\n                <mat-form-field appearance=\"fill\" *ngIf = \"(selectionChangeValue == 'DoctorGroup') || (selectionChangeValue == 'doctor_group')\">\n                  <mat-label>Select Parent Name</mat-label>\n                  <mat-select formControlName=\"parent_id\">\n                    <mat-option [value]=\"\">Select Parent Name</mat-option>\n                    <mat-option *ngFor=\"let parent of htmlText.parent_id;\" value=\"{{ parent._id }}\" >{{ parent.groupname }}</mat-option>\n                  </mat-select>\n                </mat-form-field>\n                <!-- Parent Name name -->\n        \n        \n                <!-- Parent Name Start -->\n                <mat-form-field appearance=\"fill\" *ngIf = \"(selectionChangeValue == 'Distributor') || (selectionChangeValue == 'distributor')\">\n                  <mat-label>Select Parent Name</mat-label>\n                  <mat-select formControlName=\"parent_id\" >\n                    <mat-option [value]=\"\">Select Parent Name</mat-option>\n                    <mat-option *ngFor=\"let parent of htmlText.parent_id;\" value=\"{{ parent._id }}\" >{{ parent.distributorname }}</mat-option>\n                  </mat-select>\n                </mat-form-field>\n                <!-- Parent Name name -->\n              </ng-container>\n\n        <!-- State Start -->\n        <mat-form-field class=\"parent_cat\" appearance=\"fill\">\n          <mat-label>State</mat-label>\n\n          <mat-select formControlName=\"state\" (selectionChange)=\"getCity($event.value);\">\n            <mat-option [value]=\"\">Select state</mat-option>\n            <mat-option *ngFor=\"let state of htmlText.states;\" value=\"{{ state.name }}\">{{ state.name }}</mat-option>\n          </mat-select>\n\n          <mat-error *ngIf=\"SalesPersonManagementAddEditForm.controls['state'].touched && !SalesPersonManagementAddEditForm.controls['state'].valid && SalesPersonManagementAddEditForm.controls['state'].errors.required\">\n            State required.\n          </mat-error>\n        </mat-form-field>\n        <!-- State End -->\n\n        <!-- City Start -->\n        <mat-form-field class=\"parent_cat\" appearance=\"fill\">\n          <mat-label>City</mat-label>\n\n          <mat-select formControlName=\"city\">\n            <mat-option value=0>Select city</mat-option>\n            <mat-option *ngFor=\"let city of htmlText.cities;\" value=\"{{ city }}\">{{ city }}</mat-option>\n          </mat-select>\n\n          <mat-error *ngIf=\"SalesPersonManagementAddEditForm.controls['city'].touched && !SalesPersonManagementAddEditForm.controls['city'].valid && SalesPersonManagementAddEditForm.controls['city'].errors.required\">\n            State required.\n          </mat-error>\n        </mat-form-field>\n        <!-- City End -->\n\n        <!-- Zip Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Zip</mat-label>\n\n          <input type=\"number\" matInput placeholder=\"ZIP\" [formControl]=\"SalesPersonManagementAddEditForm.controls['zip']\" (blur)=\"inputUntouch(SalesPersonManagementAddEditForm,'zip')\">\n\n          <mat-error *ngIf=\"SalesPersonManagementAddEditForm.controls['zip'].touched && !SalesPersonManagementAddEditForm.controls['zip'].valid && SalesPersonManagementAddEditForm.controls['zip'].errors.required\">\n            Zip required.\n          </mat-error>\n        </mat-form-field>\n        <!-- Zip Start -->\n\n        <ng-container *ngIf=\"!params_id\">\n          <!-- Password Start -->\n          <ng-container *ngIf=\"!params_id\">\n            <mat-form-field class=\"form-group\" appearance=\"fill\">\n\n              <input matInput placeholder=\"Password\" type=\"password\"\n                [formControl]=\"SalesPersonManagementAddEditForm.controls['password']\">\n\n              <mat-error *ngIf=\"!SalesPersonManagementAddEditForm.controls['password'].valid && SalesPersonManagementAddEditForm.controls['password'].touched\">\n                Password required.\n              </mat-error>\n            </mat-form-field>\n\n            <mat-form-field class=\"form-group\" appearance=\"fill\">\n              <input matInput placeholder=\"Confirm Password\" type=\"password\"\n                [formControl]=\"SalesPersonManagementAddEditForm.controls['confirmpassword']\">\n\n              <mat-error *ngIf=\"!SalesPersonManagementAddEditForm.controls['confirmpassword'].valid && SalesPersonManagementAddEditForm.controls['confirmpassword'].touched\">\n                Password does not match\n              </mat-error>\n            </mat-form-field>\n          </ng-container>\n          <!-- Password End -->\n        </ng-container>\n\n        <mat-checkbox [formControl]=\"SalesPersonManagementAddEditForm.controls['status']\" checked>Active</mat-checkbox>\n\n\n        <!-- end here -->\n        <span class=\"submit_form\">\n          <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'admin'\">\n            <button mat-flat-button type=\"button\" [routerLink]=\"['/admin/sales-person-management']\">Back </button>\n          </ng-container>\n\n          <!-- <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'admin'\">\n            <button mat-flat-button type=\"button\" [routerLink]=\"['/admin/sales-person-management']\">Back </button>\n          </ng-container> -->\n\n          <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'diagnostic_admin'\">\n            <button mat-flat-button type=\"button\" [routerLink]=\"['/diagnostic-admin/sales-person-management']\">Back </button>\n          </ng-container>\n\n          <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'distributors'\">\n            <button mat-flat-button type=\"button\" [routerLink]=\"['/distributors/sales-person-management']\">Back </button>\n          </ng-container>\n\n          <button mat-flat-button type=\"reset\" *ngIf=\"params_id == ''\">Reset </button>\n          <button mat-flat-button type=\"submit\"> {{ htmlText.buttonText }} </button>\n          <button mat-flat-button type=\"button\" *ngIf=\"params_id != ''\" (click)=\"openDialog('')\"> Change Password </button>\n        </span>\n      </form>\n\n    </mat-card-content>\n  </mat-card>\n\n</mat-card>\n\n\n\n<!-- Admin Footer -->\n<app-admin-footer></app-admin-footer>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/sales-person-management/add-edit-sales-person/modal.html":
  /*!*********************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/sales-person-management/add-edit-sales-person/modal.html ***!
    \*********************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminSalesPersonManagementAddEditSalesPersonModalHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n<mat-card class=\"add_form\">\n    <h1 mat-dialog-title>Change Password</h1>\n\n    <form class=\"example-form\" autocomplete=\"off\" name=\"changePwdForm\" [formGroup]=\"changePwdForm\"\n        (ngSubmit)=\"changePasswordFormSubmit()\">\n        <mat-dialog-content class=\"mat-typography\">\n\n\n            <mat-form-field>\n                <input matInput placeholder=\"Password\" type=\"password\"\n                [formControl]=\"changePwdForm.controls['password']\">\n                <mat-error *ngIf=\"changePwdForm.controls['password'].touched && !changePwdForm.controls['password'].valid\n          && changePwdForm.controls['password'].errors.required\">\n                    Password can not be blank</mat-error>\n            </mat-form-field> <br>\n            <mat-form-field>\n                <input matInput placeholder=\"Confirm Password\" type=\"password\"\n                [formControl]=\"changePwdForm.controls['confirmpassword']\">\n                <mat-error\n                    *ngIf=\"!changePwdForm.controls['confirmpassword'].valid && changePwdForm.controls['confirmpassword'].touched\">\n                    Password does not match </mat-error>\n                \n            </mat-form-field><br>   \n\n            <span class=\"submit_form\">\n                <button mat-flat-button mat-dialog-close type=\"button\" > Cancel </button>\n                <button mat-flat-button type=\"submit\" [mat-dialog-close]=\"true\" cdkFocusInitial> Submit </button>\n            </span>\n        </mat-dialog-content>\n    </form>\n</mat-card>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/sales-person-management/list-sales-person/list-sales-person.component.html":
  /*!***************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/sales-person-management/list-sales-person/list-sales-person.component.html ***!
    \***************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminSalesPersonManagementListSalesPersonListSalesPersonComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- Admin Header -->\n<app-admin-header *ngIf=\"userData.user_type == 'admin'\"></app-admin-header>\n\n<!-- Diagnostic Admin Header -->\n<app-diagnostic-admin-header *ngIf=\"userData.user_type == 'diagnostic_admin'\"></app-diagnostic-admin-header>\n\n\n<!-- Distributors Admin Header -->\n<app-distributors-header *ngIf=\"userData.user_type == 'distributors'\"></app-distributors-header>\n\n<!-- Doctor Header -->\n<app-doctor-header *ngIf=\"userData.user_type == 'doctor'\"></app-doctor-header>\n\n\n<mat-card class=\"admin_wrapper\">\n  <!-- header with add button -->\n  <mat-card-content class=\"table_wrapper\">\n    <mat-toolbar class=\"top_header\">\n      <h2> Manage Sales Person </h2>\n    </mat-toolbar>\n\n  <span class=\"add_header\">\n\n  <ng-container *ngIf=\"userData.user_type == 'admin'\">\n    <span class=\"bradcrumb\"><a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage Sales Person</span>\n    <button mat-flat-button [routerLink]=\"['/admin/sales-person-management/add']\">Add Sales Person</button>\n  </ng-container>\n\n  <ng-container *ngIf=\"userData.user_type == 'diagnostic_admin'\">\n    <span class=\"bradcrumb\"><a [routerLink]=\"['/diagnostic-admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage Sales Person</span>\n    <button mat-flat-button [routerLink]=\"['/diagnostic-admin/sales-person-management/add']\">Add Sales Person</button>\n  </ng-container>\n\n  <ng-container *ngIf=\"userData.user_type == 'distributors'\">\n    <span class=\"bradcrumb\"><a [routerLink]=\"['/distributors/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage Sales Person</span>\n    <button mat-flat-button [routerLink]=\"['/distributors/sales-person-management/add']\">Add Sales Person</button>\n  </ng-container>\n\n  <ng-container *ngIf=\"userData.user_type == 'doctor'\">\n    <span class=\"bradcrumb\"><a [routerLink]=\"['/doctor/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage Sales Person</span>\n    <button mat-flat-button [routerLink]=\"['/doctor/sales-person-management/add']\">Add Sales Person</button>\n  </ng-container>\n</span>\n<!-- End header with add button -->\n\n\n<lib-listing class=\"DataTable\" *ngIf=\"salesPersonDashboardAllData.length>0\"\n  [datasource]=\"salesPersonDashboardAllData\"\n  [skip]=\"allUserData_skip\"\n  [detail_skip_array]=\"previewModal_detail_skip\"\n  [modify_header_array]=\"allUserData_modify_header\"\n  [apiurl]=\"apiUrl\"\n  [sourcedata]=\"tableName\"\n  [editroute]=\"editUrl\"\n  [jwttoken]=\"user_cookie\"\n  [statusarr]=\"status\"\n  [updateendpoint]=\"UpdateEndpoint\"\n  [deleteendpoint]=\"deleteEndpoint\"\n  [date_search_endpoint]=\"SearchingEndpoint\"\n  [date_search_source]=\"SearchingSourceName\"\n  [search_settings]=\"search_settings\"\n  [sortdata]=\"sortdata\" [libdata]=\"libdata\" [datacollection]=\"datacollection\" [date_search_source_count]=\"salesData_count\" [limitcond]=\"limitcond\">\n  \n</lib-listing>\n\n<h2 *ngIf=\"salesPersonDashboardAllData.length == 0\">No record found.</h2>\n\n</mat-card-content>\n</mat-card>\n\n\n<!-- Admin Footer -->\n<app-admin-footer *ngIf=\"userData.user_type == 'admin'\"></app-admin-footer>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/tech-management/add-edit-tech/add-edit-tech.component.html":
  /*!***********************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/tech-management/add-edit-tech/add-edit-tech.component.html ***!
    \***********************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminTechManagementAddEditTechAddEditTechComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- Admin Header -->\n<app-admin-header *ngIf=\"htmlText.userData.user_details.user_type == 'admin'\"></app-admin-header>\n<!-- Diagnostic Admin Header -->\n<app-diagnostic-admin-header *ngIf=\"htmlText.userData.user_details.user_type == 'diagnostic_admin'\"></app-diagnostic-admin-header>\n\n<!-- Doctor Group Header -->\n<app-doctor-group-header *ngIf=\"htmlText.userData.user_details.user_type == 'doctor_group'\"></app-doctor-group-header>\n\n<!-- Distributors Admin Header -->\n<app-distributors-header *ngIf=\"htmlText.userData.user_details.user_type == 'distributors'\"></app-distributors-header>\n\n<!-- Doctor Header -->\n<app-doctor-header *ngIf=\"htmlText.userData.user_details.user_type == 'doctor'\"></app-doctor-header>\n\n\n<mat-card class=\"admin_wrapper\">\n  <!-- header with add button -->\n  <mat-card-content class=\"title_wrapper\">\n    {{ htmlText.header }}\n  </mat-card-content>\n\n\n  <span class=\"add_header\">\n    <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'admin'\">\n      <span class=\"bradcrumb\">\n        <a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp;\n        <a [routerLink]=\"['/admin/tech-management']\">Manage Tech &nbsp;/</a> &nbsp;\n        {{ htmlText.nav }}\n      </span>\n    </ng-container>\n\n    <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'diagnostic_admin'\">\n      <span class=\"bradcrumb\">\n        <a [routerLink]=\"['/diagnostic-admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp;\n        <a [routerLink]=\"['/diagnostic-admin/tech-management']\">Manage Tech &nbsp;/</a> &nbsp;\n        {{ htmlText.nav }}\n      </span>\n    </ng-container>\n\n\n\n    <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'doctor_group'\">\n      <span class=\"bradcrumb\">\n        <a [routerLink]=\"['/doctor-group/dashboard']\">Dashboard &nbsp;/</a> &nbsp;\n        <a [routerLink]=\"['/doctor-group/tech-management']\">Manage Tech &nbsp;/</a> &nbsp;\n        {{ htmlText.nav }}\n      </span>\n    </ng-container>\n\n    <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'distributors`'\">\n      <span class=\"bradcrumb\">\n        <a [routerLink]=\"['/distributors/dashboard']\">Dashboard &nbsp;/</a> &nbsp;\n        <a [routerLink]=\"['/distributors/tech-management']\">Manage Tech &nbsp;/</a> &nbsp;\n        {{ htmlText.nav }}\n      </span>\n    </ng-container>\n\n    <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'doctor'\">\n      <span class=\"bradcrumb\">\n        <a [routerLink]=\"['/doctor/dashboard']\">Dashboard &nbsp;/</a> &nbsp;\n        <a [routerLink]=\"['/doctor/tech-management']\">Manage Tech &nbsp;/</a> &nbsp;\n        {{ htmlText.nav }}\n      </span>\n    </ng-container>\n  </span>\n  <!-- End header with add button -->\n\n  <mat-card class=\"add_form\">\n    <mat-card-content class=\"form_wrapper\">\n      <form class=\"example-form\" autocomplete=\"off\" name=\"TechManagementAddEditForm\" [formGroup]=\"TechManagementAddEditForm\" (ngSubmit)=\"TechManagementAddFormFormSubmit()\">\n\n        <!-- First Name Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>First Name</mat-label>\n\n          <input matInput placeholder=\"First Name\" [formControl]=\"TechManagementAddEditForm.controls['firstname']\"\n            (blur)=\"inputUntouch(TechManagementAddEditForm,'firstname')\">\n\n          <mat-error\n            *ngIf=\"TechManagementAddEditForm.controls['firstname'].touched && !TechManagementAddEditForm.controls['firstname'].valid && TechManagementAddEditForm.controls['firstname'].errors.required\">\n            First Name required.\n          </mat-error>\n\n          <mat-error\n            *ngIf=\"TechManagementAddEditForm.controls['firstname'].touched && !TechManagementAddEditForm.controls['firstname'].valid && TechManagementAddEditForm.controls['firstname'].errors.maxlength\">\n            First Name is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- First Name End -->\n\n        <!-- Last Name Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Last Name</mat-label>\n\n          <input matInput placeholder=\"Last Name\" [formControl]=\"TechManagementAddEditForm.controls['lastname']\"\n            (blur)=\"inputUntouch(TechManagementAddEditForm,'lastname')\">\n\n          <mat-error\n            *ngIf=\"TechManagementAddEditForm.controls['lastname'].touched && !TechManagementAddEditForm.controls['lastname'].valid && TechManagementAddEditForm.controls['lastname'].errors.required\">\n            Last Name required.\n          </mat-error>\n\n          <mat-error\n            *ngIf=\"TechManagementAddEditForm.controls['lastname'].touched && !TechManagementAddEditForm.controls['lastname'].valid && TechManagementAddEditForm.controls['lastname'].errors.maxlength\">\n            Last Name is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Last Name End -->\n\n        <!-- Email Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Email Address</mat-label>\n\n          <input matInput placeholder=\"Email Address\" [formControl]=\"TechManagementAddEditForm.controls['email']\"\n            (blur)=\"inputUntouch(TechManagementAddEditForm,'email')\">\n\n          <mat-error\n            *ngIf=\"TechManagementAddEditForm.controls['email'].touched && !TechManagementAddEditForm.controls['email'].valid && TechManagementAddEditForm.controls['email'].errors.required\">\n            Email required.\n          </mat-error>\n\n          <mat-error\n            *ngIf=\"TechManagementAddEditForm.controls['email'].touched && !TechManagementAddEditForm.controls['email'].valid && TechManagementAddEditForm.controls['email'].errors.email\">\n            Email is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Email End -->\n\n        <!-- Phone Number Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Phone Number</mat-label>\n\n          <input matInput placeholder=\"Phone\" [formControl]=\"TechManagementAddEditForm.controls['phone']\"\n            (blur)=\"inputUntouch(TechManagementAddEditForm,'phone')\">\n\n          <mat-error\n            *ngIf=\"TechManagementAddEditForm.controls['phone'].touched && !TechManagementAddEditForm.controls['phone'].valid && TechManagementAddEditForm.controls['phone'].errors.required\">\n            Phone Number required.\n          </mat-error>\n\n          <mat-error\n            *ngIf=\"TechManagementAddEditForm.controls['phone'].touched && !TechManagementAddEditForm.controls['phone'].valid && TechManagementAddEditForm.controls['phone'].errors.maxlength\">\n            Phone Number is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Phone Number End -->\n\n        <!-- Address Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Address</mat-label>\n\n          <input matInput placeholder=\"Address\" [formControl]=\"TechManagementAddEditForm.controls['address']\"\n            (blur)=\"inputUntouch(TechManagementAddEditForm,'address')\">\n\n          <mat-error *ngIf=\"TechManagementAddEditForm.controls['address'].touched && !TechManagementAddEditForm.controls['address'].valid && TechManagementAddEditForm.controls['address'].errors.required\">\n            Address required.\n          </mat-error>\n\n          <mat-error *ngIf=\"TechManagementAddEditForm.controls['address'].touched && !TechManagementAddEditForm.controls['address'].valid && TechManagementAddEditForm.controls['address'].errors.maxlength\">\n            Address is not valid.\n          </mat-error>\n        </mat-form-field>\n        <!-- Address End -->\n\n        <!-- parent type Start -->\n        <mat-form-field class=\"parent_cat\" appearance=\"fill\" *ngIf = \"htmlText.userData.user_details.user_type == 'admin'\">\n          <mat-label>Parent Type</mat-label>\n\n          <mat-select formControlName=\"parent_type\">\n            <mat-option value=\"admin\">Select Parent Type</mat-option>\n            <mat-option *ngFor=\"let parent of htmlText.parent_type;\" value=\"{{ parent.value }}\" (click)=\"getParentData(parent.name)\">{{ parent.name }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <!-- Parent Type End -->\n\n        <ng-container *ngIf = \"htmlText.userData.user_details.user_type == 'admin'\">\n        <!-- Parent Name Start -->\n        <mat-form-field appearance=\"fill\" *ngIf = \"(selectionChangeValue == 'DiagnosticAdmin') || (selectionChangeValue == 'diagnostic_admin')\">\n          <mat-label>Select Parent Name</mat-label>\n          <mat-select formControlName=\"parent_id\">\n            <mat-option [value]=\"\">Select Parent Name</mat-option>\n            <mat-option *ngFor=\"let parent of htmlText.parent_id;\" value=\"{{ parent._id }}\" >{{ parent.center_name }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n        <!-- Parent Name name -->\n\n\n        <!-- Parent Name Start -->\n        <mat-form-field appearance=\"fill\" *ngIf = \"(selectionChangeValue == 'DoctorGroup') || (selectionChangeValue == 'doctor_group')\">\n          <mat-label>Select Parent Name</mat-label>\n          <mat-select formControlName=\"parent_id\">\n            <mat-option [value]=\"\">Select Parent Name</mat-option>\n            <mat-option *ngFor=\"let parent of htmlText.parent_id;\" value=\"{{ parent._id }}\" >{{ parent.groupname }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n        <!-- Parent Name name -->\n\n\n        <!-- Parent Name Start -->\n        <mat-form-field appearance=\"fill\" *ngIf = \"(selectionChangeValue == 'Distributor') || (selectionChangeValue == 'distributor')\">\n          <mat-label>Select Parent Name</mat-label>\n          <mat-select formControlName=\"parent_id\" >\n            <mat-option [value]=\"\">Select Parent Name</mat-option>\n            <mat-option *ngFor=\"let parent of htmlText.parent_id;\" value=\"{{ parent._id }}\" >{{ parent.distributorname }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n        <!-- Parent Name name -->\n      </ng-container>\n\n\n        <!-- State Start -->\n        <mat-form-field class=\"parent_cat\" appearance=\"fill\">\n          <mat-label>State</mat-label>\n\n          <mat-select formControlName=\"state\" (selectionChange)=\"getCity($event.value);\">\n            <mat-option [value]=\"\">Select state</mat-option>\n            <mat-option *ngFor=\"let state of htmlText.states;\" value=\"{{ state.name }}\">{{ state.name }}</mat-option>\n          </mat-select>\n\n          <mat-error *ngIf=\"TechManagementAddEditForm.controls['state'].touched && !TechManagementAddEditForm.controls['state'].valid && TechManagementAddEditForm.controls['state'].errors.required\">\n            State required.\n          </mat-error>\n        </mat-form-field>\n        <!-- State End -->\n\n        <!-- City Start -->\n        <mat-form-field class=\"parent_cat\" appearance=\"fill\">\n          <mat-label>City</mat-label>\n\n          <mat-select formControlName=\"city\">\n            <mat-option value=0>Select city</mat-option>\n            <mat-option *ngFor=\"let city of htmlText.cities;\" value=\"{{ city }}\">{{ city }}</mat-option>\n          </mat-select>\n\n          <mat-error *ngIf=\"TechManagementAddEditForm.controls['city'].touched && !TechManagementAddEditForm.controls['city'].valid && TechManagementAddEditForm.controls['city'].errors.required\">\n            State required.\n          </mat-error>\n        </mat-form-field>\n        <!-- City End -->\n\n        <!-- Zip Start -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Zip</mat-label>\n\n          <input type=\"number\" matInput placeholder=\"ZIP\" [formControl]=\"TechManagementAddEditForm.controls['zip']\" (blur)=\"inputUntouch(TechManagementAddEditForm,'zip')\">\n\n          <mat-error *ngIf=\"TechManagementAddEditForm.controls['zip'].touched && !TechManagementAddEditForm.controls['zip'].valid && TechManagementAddEditForm.controls['zip'].errors.required\">\n            Zip required.\n          </mat-error>\n        </mat-form-field>\n        <!-- Zip Start -->\n\n        <ng-container *ngIf=\"!params_id\">\n          <!-- Password Start -->\n          <ng-container *ngIf=\"!params_id\">\n            <mat-form-field class=\"form-group\" appearance=\"fill\">\n\n              <input matInput placeholder=\"Password\" type=\"password\"\n                [formControl]=\"TechManagementAddEditForm.controls['password']\">\n\n              <mat-error *ngIf=\"!TechManagementAddEditForm.controls['password'].valid && TechManagementAddEditForm.controls['password'].touched\">\n                Password required.\n              </mat-error>\n            </mat-form-field>\n\n            <mat-form-field class=\"form-group\" appearance=\"fill\">\n              <input matInput placeholder=\"Confirm Password\" type=\"password\"\n                [formControl]=\"TechManagementAddEditForm.controls['confirmpassword']\">\n\n              <mat-error *ngIf=\"!TechManagementAddEditForm.controls['confirmpassword'].valid && TechManagementAddEditForm.controls['confirmpassword'].touched\">\n                Password does not match\n              </mat-error>\n            </mat-form-field>\n          </ng-container>\n          <!-- Password End -->\n        </ng-container>\n\n        <mat-checkbox [formControl]=\"TechManagementAddEditForm.controls['status']\" checked>Active</mat-checkbox>\n\n\n        <!-- end here -->\n        <span class=\"submit_form\">\n          <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'admin'\">\n            <button mat-flat-button type=\"button\" [routerLink]=\"['/admin/tech-management']\">Back </button>\n          </ng-container>\n\n          <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'diagnostic_admin'\">\n            <button mat-flat-button type=\"button\" [routerLink]=\"['/diagnostic-admin/tech-management']\">Back </button>\n          </ng-container>\n\n          <ng-container *ngIf=\"htmlText.userData.user_details.user_type == 'doctor'\">\n            <button mat-flat-button type=\"button\" [routerLink]=\"['/doctor/tech-management']\">Back </button>\n          </ng-container>\n\n          <button mat-flat-button type=\"reset\" *ngIf=\"params_id == ''\">Reset </button>\n          <button mat-flat-button type=\"submit\"> {{ htmlText.buttonText }} </button>\n          <button mat-flat-button type=\"button\" *ngIf=\"params_id != ''\" (click)=\"openDialog('')\"> Change Password </button>\n        </span>\n      </form>\n\n    </mat-card-content>\n  </mat-card>\n\n</mat-card>\n\n\n\n<!-- Admin Footer -->\n<app-admin-footer *ngIf=\"htmlText.userData.user_details.user_type == 'admin'\"></app-admin-footer>\n\n<!-- Diagnostic Admin Header -->\n<app-diagnostic-admin-footer *ngIf=\"htmlText.userData.user_details.user_type == 'diagnostic_admin'\"></app-diagnostic-admin-footer>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/tech-management/add-edit-tech/modal.html":
  /*!*****************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/tech-management/add-edit-tech/modal.html ***!
    \*****************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminTechManagementAddEditTechModalHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n<mat-card class=\"add_form\">\n    <h1 mat-dialog-title>Change Password</h1>\n\n    <form class=\"example-form\" autocomplete=\"off\" name=\"changePwdForm\" [formGroup]=\"changePwdForm\"\n        (ngSubmit)=\"changePasswordFormSubmit()\">\n        <mat-dialog-content class=\"mat-typography\">\n\n\n            <mat-form-field>\n                <input matInput placeholder=\"Password\" type=\"password\"\n                [formControl]=\"changePwdForm.controls['password']\">\n                <mat-error *ngIf=\"changePwdForm.controls['password'].touched && !changePwdForm.controls['password'].valid\n          && changePwdForm.controls['password'].errors.required\">\n                    Password can not be blank</mat-error>\n            </mat-form-field> <br>\n            <mat-form-field>\n                <input matInput placeholder=\"Confirm Password\" type=\"password\"\n                [formControl]=\"changePwdForm.controls['confirmpassword']\">\n                <mat-error\n                    *ngIf=\"!changePwdForm.controls['confirmpassword'].valid && changePwdForm.controls['confirmpassword'].touched\">\n                    Password does not match </mat-error>\n                \n            </mat-form-field><br>   \n\n            <span class=\"submit_form\">\n                <button mat-flat-button mat-dialog-close type=\"button\" > Cancel </button>\n                <button mat-flat-button type=\"submit\" [mat-dialog-close]=\"true\" cdkFocusInitial> Submit </button>\n            </span>\n        </mat-dialog-content>\n    </form>\n</mat-card>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/tech-management/listing-tech/listing-tech.component.html":
  /*!*********************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/tech-management/listing-tech/listing-tech.component.html ***!
    \*********************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminTechManagementListingTechListingTechComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- Admin Header -->\n<app-admin-header *ngIf=\"userData.user_type == 'admin'\"></app-admin-header>\n\n<!-- Diagnostic Admin Header -->\n<app-diagnostic-admin-header *ngIf=\"userData.user_type == 'diagnostic_admin'\"></app-diagnostic-admin-header>\n\n<!-- Doctor Group Admin Header -->\n<app-doctor-group-header *ngIf=\"userData.user_type == 'doctor_group'\"></app-doctor-group-header>\n\n<!-- Distributors Admin Header -->\n<app-distributors-header *ngIf=\"userData.user_type == 'distributors'\"></app-distributors-header>\n\n<!-- Doctor Header -->\n<app-doctor-header *ngIf=\"userData.user_type == 'doctor'\"></app-doctor-header>\n\n\n\n<mat-card class=\"admin_wrapper\">\n  <!-- header with add button -->\n  <mat-card-content class=\"table_wrapper\">\n    <mat-toolbar class=\"top_header\">\n      <h2> Manage Technician </h2>\n    </mat-toolbar>\n\n  <span class=\"add_header\">\n\n  <ng-container *ngIf=\"userData.user_type == 'admin'\">\n    <span class=\"bradcrumb\"><a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage Tech</span>\n    <button mat-flat-button [routerLink]=\"['/admin/tech-management/add']\">Add Tech</button>\n  </ng-container>\n  \n  <ng-container *ngIf=\"userData.user_type == 'diagnostic_admin'\">\n    <span class=\"bradcrumb\"><a [routerLink]=\"['/diagnostic-admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage Tech</span>\n    <button mat-flat-button [routerLink]=\"['/diagnostic-admin/tech-management/add']\">Add Tech</button>\n  </ng-container>\n\n\n  <ng-container *ngIf=\"userData.user_type == 'doctor_group'\">\n    <span class=\"bradcrumb\"><a [routerLink]=\"['/doctor-group/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage Tech</span>\n    <button mat-flat-button [routerLink]=\"['/doctor-group/tech-management/add']\">Add Tech</button>\n  </ng-container>\n\n  <ng-container *ngIf=\"userData.user_type == 'distributors'\">\n    <span class=\"bradcrumb\"><a [routerLink]=\"['/distributors/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage Tech</span>\n    <button mat-flat-button [routerLink]=\"['/distributors/tech-management/add']\">Add Tech</button>\n  </ng-container>\n\n  <ng-container *ngIf=\"userData.user_type == 'doctor'\">\n    <span class=\"bradcrumb\"><a [routerLink]=\"['/doctor/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage Tech</span>\n    <button mat-flat-button [routerLink]=\"['/doctor/tech-management/add']\">Add Tech</button>\n  </ng-container>\n</span>\n<!-- End header with add button -->\n\n\n<lib-listing class=\"DataTable\" *ngIf=\"TechDashboardAllData.length>0\" (onLiblistingChange)=\"listenLiblistingChange($event)\"\n  [datasource]=\"TechDashboardAllData\"\n  [skip]=\"allUserData_skip\"\n  [detail_skip_array]=\"previewModal_detail_skip\"\n  [modify_header_array]=\"allUserData_modify_header\"\n  [apiurl]=\"apiUrl\"\n  [sourcedata]=\"tableName\"\n  [editroute]=\"editUrl\"\n  [jwttoken]=\"user_cookie\"\n  [statusarr]=\"status\"\n  [updateendpoint]=\"UpdateEndpoint\"\n  [deleteendpoint]=\"deleteEndpoint\"\n  [date_search_endpoint]=\"SearchingEndpoint\"\n  [date_search_source]=\"SearchingSourceName\"\n  [search_settings]=\"search_settings\"\n  [sortdata]=\"sortdata\" [datacollection]=\"datacollection\" [libdata]=\"libdata\" [date_search_source_count]=\"techData_count\" [limitcond]=\"limitcond\">\n</lib-listing>\n\n<h2 *ngIf=\"TechDashboardAllData.length == 0\">No record found.</h2>\n\n</mat-card-content>\n</mat-card>\n\n\n<!-- Admin Footer -->\n<app-admin-footer></app-admin-footer>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/user-management/user-add-edit/user-add-edit.component.html":
  /*!***********************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/user-management/user-add-edit/user-add-edit.component.html ***!
    \***********************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminUserManagementUserAddEditUserAddEditComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<mat-toolbar class=\"techdashboard_header\">\n  <mat-toolbar-row>\n    <span class=\"logo_wrapper\">\n      <img src=\"../../../assets/images/logo.png\">\n    </span>\n\n\n    <mat-card-content class=\"quotation\">\n      <p>ADVANCED ANS TECHNOLOGY – BETTER PATIENT CARE – INCREASE PRACTICE REVENUE</p>\n    </mat-card-content>\n\n\n\n  </mat-toolbar-row>\n</mat-toolbar>\n<!-- end header -->\n\n\n<mat-card class=\"add_form\">\n\n  <h2>add report manually</h2>\n\n\n  <!-- <mat-card-content class=\"form_wrapper\">\n    <form class=\"example-form\" autocomplete=\"off\" name=\"UserManagementAddEditForm\" [formGroup]=\"UserManagementAddEditForm\"\n      (ngSubmit)=\"UserManagementAddFormFormSubmit()\">\n\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Enter First Name</mat-label>\n        <input matInput placeholder=\"First Name\" [formControl]=\"UserManagementAddEditForm.controls['firstname']\"\n          (blur)=\"inputUntouch(UserManagementAddEditForm,'firstname')\">\n          <mat-error *ngIf=\"UserManagementAddEditForm.controls['firstname'].touched && !UserManagementAddEditForm.controls['firstname'].valid\n         && UserManagementAddEditForm.controls['firstname'].errors.required\">\n              First Name field can not be blank</mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Enter Last Name</mat-label>\n        <input matInput placeholder=\"Last Name\" [formControl]=\"UserManagementAddEditForm.controls['lastname']\"\n          (blur)=\"inputUntouch(UserManagementAddEditForm,'lastname')\">\n          <mat-error *ngIf=\"UserManagementAddEditForm.controls['lastname'].touched && !UserManagementAddEditForm.controls['lastname'].valid\n         && UserManagementAddEditForm.controls['lastname'].errors.required\">\n              Last Name field can not be blank</mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Email Address</mat-label>\n        <input matInput placeholder=\"Email Address\" [formControl]=\"UserManagementAddEditForm.controls['email']\"\n          (blur)=\"inputUntouch(UserManagementAddEditForm,'email')\">\n          <mat-error *ngIf=\"UserManagementAddEditForm.controls['email'].touched && !UserManagementAddEditForm.controls['email'].valid\n          && UserManagementAddEditForm.controls['email'].errors.required\">\n               E-Mail field can not be blank</mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Phone </mat-label>\n        <input type=\"number\" matInput placeholder=\"Phone\" [formControl]=\"UserManagementAddEditForm.controls['phoneno']\"\n          (blur)=\"inputUntouch(UserManagementAddEditForm,'phoneno')\">\n          <mat-error *ngIf=\"UserManagementAddEditForm.controls['phoneno'].touched && !UserManagementAddEditForm.controls['phoneno'].valid\n          && UserManagementAddEditForm.controls['phoneno'].errors.required\">\n               Phone Number field can not be blank</mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Address</mat-label>\n        <textarea matInput placeholder=\"Address\" [formControl]=\"UserManagementAddEditForm.controls['address']\"\n          (blur)=\"inputUntouch(UserManagementAddEditForm,'address')\"></textarea>\n          <mat-error *ngIf=\"UserManagementAddEditForm.controls['address'].touched && !UserManagementAddEditForm.controls['address'].valid\n          && UserManagementAddEditForm.controls['address'].errors.required\">\n               Address field can not be blank</mat-error>\n      </mat-form-field>\n\n      <mat-form-field class=\"parent_cat\" appearance=\"fill\">\n        <mat-label>City</mat-label>\n        <mat-select formControlName=\"city\">\n          <mat-option [value]=0>Select a category</mat-option>\n          <mat-option *ngFor=\"let city of cities;\" value=\"{{ city }}\">{{ city }}</mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <mat-form-field class=\"parent_cat\" appearance=\"fill\">\n          <mat-label>State</mat-label>\n          <mat-select formControlName=\"state\" (selectionChange)=\"getCity($event.value);\">\n            <mat-option [value]=0>Select a category</mat-option>\n            <mat-option *ngFor=\"let state of states;\" value=\"{{ state.name }}\">{{ state.name }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n\n      <mat-form-field appearance=\"fill\">\n        <mat-label>ZIP</mat-label>\n        <input matInput placeholder=\"ZIP\" [formControl]=\"UserManagementAddEditForm.controls['zip']\"\n          (blur)=\"inputUntouch(UserManagementAddEditForm,'zip')\">\n          <mat-error *ngIf=\"UserManagementAddEditForm.controls['zip'].touched && !UserManagementAddEditForm.controls['zip'].valid\n          && UserManagementAddEditForm.controls['zip'].errors.required\">\n               Zip field can not be blank</mat-error>\n      </mat-form-field>\n\n\n      <mat-form-field>\n          <mat-label>Date</mat-label>\n          <input  [value]=\"date.value\"\n          matInput [matDatepicker]=\"myPicker\"  placeholder=\"date\" >\n          <mat-datepicker-toggle  matSuffix [for]=\"myPicker\" disabled></mat-datepicker-toggle>\n          <mat-datepicker #myPicker></mat-datepicker>\n      </mat-form-field>\n\n      <mat-checkbox [formControl]=\"UserManagementAddEditForm.controls['status']\" checked>Status</mat-checkbox>\n      <mat-error *ngIf=\"UserManagementAddEditForm.controls['status'].touched && !UserManagementAddEditForm.controls['status'].valid\n      && UserManagementAddEditForm.controls['status'].errors.required\">\n      Status field can not be blank</mat-error>\n \n      <span class=\"submit_form\">\n        <button mat-flat-button (click)=\"ResetAddForm()\">Reset </button>\n        <button mat-flat-button type=\"submit\"> {{ buttonText }} </button>\n      </span>\n    </form>\n  </mat-card-content> -->\n    <mat-card-content>\n      <label>Patient Name</label>\n      <mat-form-field >\n        <input matInput>\n      </mat-form-field>\n    </mat-card-content>\n\n    <mat-card-content>\n      <label>Patient Gender</label>\n      <mat-checkbox>Male</mat-checkbox>\n      <mat-checkbox>Female</mat-checkbox>\n    </mat-card-content>\n\n    <mat-card-content>\n      <label> DOB</label>\n      <mat-form-field>\n        <input matInput [matDatepicker]=\"picker\"  >\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n      </mat-form-field>\n    </mat-card-content>\n\n    <mat-card-content>\n      <label>Ordering Physicial</label>\n      <mat-form-field >\n        <input matInput>\n      </mat-form-field>\n    </mat-card-content>\n\n\n<span class=\"test_date_wrapper\">\n  \n  <mat-card-content>\n    <label> Test Date</label>\n    <mat-form-field>\n      <input matInput [matDatepicker]=\"picker2\"  >\n      <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\n      <mat-datepicker #picker2></mat-datepicker>\n    </mat-form-field>\n  </mat-card-content>\n  \n  <mat-card-content>\n    <label> Test Completed</label>\n    <mat-form-field>\n      <input matInput [matDatepicker]=\"picker3\"  >\n      <mat-datepicker-toggle matSuffix [for]=\"picker3\"></mat-datepicker-toggle>\n      <mat-datepicker #picker3></mat-datepicker>\n    </mat-form-field>\n  </mat-card-content>\n  <br>\n  <hr>\n  <mat-card-content>\n    <label> PTGPT </label>\n    <mat-form-field>\n      <input matInput>\n       \n    </mat-form-field>\n  </mat-card-content>\n  <mat-card-content>\n    <label> PTGVLFI </label>\n    <mat-form-field>\n      <input matInput >\n      \n    </mat-form-field>\n  </mat-card-content>\n\n  <mat-card-content>\n    <label> IR </label>\n    <mat-form-field>\n      <input matInput > \n    </mat-form-field>\n  </mat-card-content>\n\n  <mat-card-content>\n    <label> ESRNO<br> (Baseline) </label>\n    <mat-form-field>\n      <input matInput > \n    </mat-form-field>\n  </mat-card-content>\n\n  <mat-card-content>\n    <label> ESR L<br> (Latency) </label>\n    <mat-form-field>\n      <input matInput > \n    </mat-form-field>\n  </mat-card-content>\n\n  <mat-card-content>\n    <label> Peak C  <br> (Amplitude) </label>\n    <mat-form-field>\n      <input matInput > \n    </mat-form-field>\n  </mat-card-content>\n\n  <mat-card-content>\n    <label> PTG Type  <br> (Enter\n      Type 1-5) </label>\n    <mat-form-field>\n      <input matInput > \n    </mat-form-field>\n  </mat-card-content>\n\n\n<mat-card-content>\n  <label> PTG CVD </label>\n  <mat-form-field>\n    <input matInput > \n  </mat-form-field>\n</mat-card-content>\n<mat-card-content>\n  <label> Stress I  <br> (Stress Index) </label>\n  <mat-form-field>\n    <input matInput > \n  </mat-form-field>\n</mat-card-content>\n<mat-card-content>\n  <label> RI </label>\n  <mat-form-field>\n    <input matInput > \n  </mat-form-field>\n</mat-card-content>\n\n\n<mat-card-content>\n  <label> AIPTG<br> (IPTG) </label>\n  <mat-form-field>\n    <input matInput > \n  </mat-form-field>\n</mat-card-content>\n\n<mat-card-content>\n  <label> CIs (CI) </label>\n  <mat-form-field>\n    <input matInput > \n  </mat-form-field>\n</mat-card-content>\n\n<mat-card-content>\n  <label> pNN50 </label>\n  <mat-form-field>\n    <input matInput > \n  </mat-form-field>\n</mat-card-content>\n\n\n<mat-card-content>\n  <label> RMSSD </label>\n  <mat-form-field>\n    <input matInput > \n  </mat-form-field>\n</mat-card-content>\n\n<mat-card-content>\n  <label> SD ba - </label>\n  <mat-form-field>\n    <input matInput > \n  </mat-form-field>\n</mat-card-content>\n\n<mat-card-content>\n  <label> SD da </label>\n  <mat-form-field>\n    <input matInput > \n  </mat-form-field>\n</mat-card-content>\n\n \n<mat-card-content>\n  <label>DPRS </label>\n  <mat-form-field>\n    <input matInput > \n  </mat-form-field>\n</mat-card-content>\n\n<mat-card-content>\n  <label>ValsR. </label>\n  <mat-form-field>\n    <input matInput > \n  </mat-form-field>\n</mat-card-content>\n\n<mat-card-content>\n  <label>BMI<br> Enter BMI Score \n    (I.E. 29.1)  </label>\n  <mat-form-field>\n    <input matInput > \n  </mat-form-field>\n</mat-card-content>\n\n<mat-card-content>\n  <label>Blood\n    Pressure<br> Systolic &\n    Diastolic\n    (120/80) </label>\n  <mat-form-field>\n    <input matInput > \n  </mat-form-field>\n</mat-card-content>\n</span>\n\n <span class=\"patient_diagnotes\">\n    <label>Patient Diagnoses & Notes:</label>\n    <mat-form-field class=\"example-full-width\" > \n        <textarea matInput placeholder=\"Leave a comment\"></textarea>\n      </mat-form-field>\n </span>\n <span class=\"submit_form\">\n    <button mat-flat-button (click)=\"ResetAddForm()\">Reset </button>\n    <button mat-flat-button type=\"submit\"> {{ buttonText }} </button>\n  </span>\n</mat-card>\n\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/adminbiller/adminbiller-dashboard/adminbiller-dashboard.component.html":
  /*!*****************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/adminbiller/adminbiller-dashboard/adminbiller-dashboard.component.html ***!
    \*****************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminbillerAdminbillerDashboardAdminbillerDashboardComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<app-adminbiller-header></app-adminbiller-header>\n\n<mat-card class=\"admin_wrapper\">\n\n  <mat-card-content class=\"content_wrapper\">\n\n  </mat-card-content>\n\n  <!-- Report Status Section Start -->\n  <mat-card-content class=\"admin_superbillsection\">\n    <h1>Total Patient Report Status</h1>\n    <mat-card-content class=\"biller_wrapper\">\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon1.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total Number of <br>\n            Reports Processed\n          </p>\n          <h2> {{ allResolveData.total_report_processed_count }} </h2>\n          <button mat-flat-button (click)=\"viewAllButton('Total Number of Reports Processed', '');\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon2.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total Number of <br>\n            Reports Approved\n          </p>\n          <h2> {{ allResolveData.total_report_approved_count }} </h2>\n          <button mat-flat-button (click)=\"viewAllButton('Total Number of Reports Approved', '');\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon2.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total Number of <br>\n            Reports Not Approved\n          </p>\n          <h2> {{ allResolveData.total_report_not_approved_count }} </h2>\n          <button mat-flat-button (click)=\"viewAllButton('Total Number of Reports Not Approved', '');\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon2.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total Number of <br>\n            Reports in Hold\n          </p>\n          <h2> {{ allResolveData.total_report_hold_count }} </h2>\n          <button mat-flat-button (click)=\"viewAllButton('Total Number of Reports in Hold', '');\">view all</button>\n        </span>\n      </mat-card-content>\n\n    </mat-card-content>\n  </mat-card-content>\n  <!-- Report Status Section End -->\n\n\n  <mat-card-content class=\"admin_superbillsection\">\n    <h1>Last Month Patient Report Status</h1>\n    <mat-card-content class=\"biller_wrapper\">\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon1.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total Number of <br>\n            Reports Processed\n          </p>\n          <h2> {{ allResolveData.total_report_processed_count_by_week_month.last_month }} </h2>\n          <button mat-flat-button (click)=\"viewAllButton('Total Number of Reports Processed', 'Last Month');\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon2.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total Number of <br>\n            Reports Approved\n          </p>\n          <h2> {{ allResolveData.total_report_approved_count_by_week_month.last_month }} </h2>\n          <button mat-flat-button (click)=\"viewAllButton('Total Number of Reports Approved', 'Last Month');\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon2.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total Number of <br>\n            Reports Not Approved\n          </p>\n          <h2> {{ allResolveData.total_report_not_approved_count_by_week_month.last_month }} </h2>\n          <button mat-flat-button (click)=\"viewAllButton('Total Number of Reports Not Approved', 'Last Month');\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon2.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total Number of <br>\n            Reports in Hold\n          </p>\n          <h2> {{ allResolveData.total_report_hold_count_by_week_month.last_month }} </h2>\n          <button mat-flat-button (click)=\"viewAllButton('Total Number of Reports in Hold', 'Last Month');\">view all</button>\n        </span>\n      </mat-card-content>\n\n    </mat-card-content>\n  </mat-card-content>\n\n\n  <mat-card-content class=\"admin_superbillsection superbillerContainer\">\n    <h1>This Month Patient Report Status</h1>\n    <mat-card-content class=\"biller_wrapper\">\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon1.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total Number of <br>\n            Reports Processed\n          </p>\n          <h2> {{ allResolveData.total_report_processed_count_by_week_month.this_month }} </h2>\n          <button mat-flat-button (click)=\"viewAllButton('Total Number of Reports Processed', 'This Month');\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon2.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total Number of <br>\n            Reports Approved\n          </p>\n          <h2> {{ allResolveData.total_report_approved_count_by_week_month.this_month }} </h2>\n          <button mat-flat-button (click)=\"viewAllButton('Total Number of Reports Approved', 'This Month');\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon2.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total Number of <br>\n            Reports Not Approved\n          </p>\n          <h2> {{ allResolveData.total_report_not_approved_count_by_week_month.this_month }} </h2>\n          <button mat-flat-button (click)=\"viewAllButton('Total Number of Reports Not Approved', 'This Month');\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon2.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total Number of <br>\n            Reports in Hold\n          </p>\n          <h2> {{ allResolveData.total_report_hold_count_by_week_month.this_month }} </h2>\n          <button mat-flat-button (click)=\"viewAllButton('Total Number of Reports in Hold', 'This Month');\">view all</button>\n        </span>\n      </mat-card-content>\n\n    </mat-card-content>\n  </mat-card-content>\n\n  <mat-card-content class=\"admin_superbillsection superbillerContainer\">\n    <h1>Last Week Patient Report Status</h1>\n    <mat-card-content class=\"biller_wrapper\">\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon1.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total Number of <br>\n            Reports Processed\n          </p>\n          <h2> {{ allResolveData.total_report_processed_count_by_week_month.last_week }} </h2>\n          <button mat-flat-button (click)=\"viewAllButton('Total Number of Reports Processed', 'Last Week');\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon2.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total Number of <br>\n            Reports Approved\n          </p>\n          <h2> {{ allResolveData.total_report_approved_count_by_week_month.last_week }} </h2>\n          <button mat-flat-button (click)=\"viewAllButton('Total Number of Reports Approved', 'Last Week');\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon2.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total Number of <br>\n            Reports Not Approved\n          </p>\n          <h2> {{ allResolveData.total_report_not_approved_count_by_week_month.last_week }} </h2>\n          <button mat-flat-button (click)=\"viewAllButton('Total Number of Reports Not Approved', 'Last Week');\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon2.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total Number of <br>\n            Reports in Hold\n          </p>\n          <h2> {{ allResolveData.total_report_hold_count_by_week_month.last_week }} </h2>\n          <button mat-flat-button (click)=\"viewAllButton('Total Number of Reports in Hold', 'Last Week');\">view all</button>\n        </span>\n      </mat-card-content>\n    </mat-card-content>\n  </mat-card-content>\n\n  <mat-card-content class=\"admin_superbillsection superbillerContainer\">\n    <h1>This Week Patient Report Status</h1>\n    <mat-card-content class=\"biller_wrapper\">\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon1.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total Number of <br>\n            Reports Processed\n          </p>\n          <h2> {{ allResolveData.total_report_processed_count_by_week_month.this_week }} </h2>\n          <button mat-flat-button (click)=\"viewAllButton('Total Number of Reports Processed', 'This Week');\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon2.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total Number of <br>\n            Reports Approved\n          </p>\n          <h2> {{ allResolveData.total_report_approved_count_by_week_month.this_week }} </h2>\n          <button mat-flat-button (click)=\"viewAllButton('Total Number of Reports Approved', 'This Week');\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon2.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total Number of <br>\n            Reports Not Approved\n          </p>\n          <h2> {{ allResolveData.total_report_not_approved_count_by_week_month.this_week }} </h2>\n          <button mat-flat-button (click)=\"viewAllButton('Total Number of Reports Not Approved', 'This Week');\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon2.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total Number of <br>\n            Reports in Hold\n          </p>\n          <h2> {{ allResolveData.total_report_hold_count_by_week_month.this_week }} </h2>\n          <button mat-flat-button (click)=\"viewAllButton('Total Number of Reports in Hold', 'This Week');\">view all</button>\n        </span>\n      </mat-card-content>\n    </mat-card-content>\n  </mat-card-content>\n\n\n  <!-- 1st List Hide on load, Click on View All button then view this -->\n  <!-- View All button listing start here -->\n  <mat-card-content id=\"viewAllButtonList\" class=\"table_wrapper admin_dashboard\">\n    <mat-card-content class=\"headr_tagh\" *ngIf=\"htmlText.viewAllButtonTable.headerText != ''\">\n      <span class=\"counter_with_tool\">\n        <h1>{{ htmlText.viewAllButtonTable.headerText }}</h1>\n        <span class=\"tolTip\">\n          <a mat-raised-button #processedReports=\"matTooltip\"\n            matTooltip=\"All the Reports listed here are reviewed by Admin.\" matTooltipPosition=\"above\"\n            aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n          </a>\n          <a mat-button (click)=\"processedReports.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n            <span class=\"material-icons\"> help_outline </span>\n          </a>\n        </span>\n      </span>\n    </mat-card-content>\n    <app-view-all-button-list [viewFlag]=\"htmlText.viewAllButtonTable.headerText\"></app-view-all-button-list>\n  </mat-card-content>\n  <!-- View All button listing end here -->\n\n\n  <!-- 2nd List -->\n  <!-- Patient Reports Pending Actions listing start here -->\n  <mat-card-content class=\"table_wrapper admin_dashboard\">\n    <mat-card-content class=\"headr_tagh\">\n      <span class=\"counter_with_tool\">\n        <h1>Patient Reports Pending Actions</h1>\n        <span class=\"tolTip\">\n          <a mat-raised-button #pendingActions=\"matTooltip\"\n            matTooltip=\" All the Reports listed here are processed by System but awaiting on Admin actions.\"\n            matTooltipPosition=\"above\" aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n          </a>\n          <a mat-button (click)=\"pendingActions.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n            <span class=\"material-icons\"> help_outline </span>\n          </a>\n        </span>\n      </span>\n    </mat-card-content>\n\n    <!-- table -->\n    <lib-listing class=\"DataTable\" *ngIf=\"allBillerData.length>0\" [datasource]=\"allBillerData\" [skip]=\"allUserData_skip\"\n      [modify_header_array]=\"allUserData_modify_header\" [detail_skip_array]=\"previewModal_detail_skip\" [apiurl]=\"apiUrl\"\n      [sourcedata]=\"tableName\" [editroute]=\"editUrl\" [jwttoken]=\"jwtToken\" [statusarr]=\"status\"\n      [updateendpoint]=\"UpdateEndpoint\" [deleteendpoint]=\"deleteEndpoint\" [date_search_endpoint]=\"SearchingEndpoint\"\n      [date_search_source]=\"SearchingSourceName\" [search_settings]=\"search_settings\" [sortdata]=\"sortdata\"\n      [datacollection]=\"datacollection\" [libdata]=\"libdata\" [date_search_source_count]=\"billerData_count\"\n      [limitcond]=\"limitcond\">\n    </lib-listing>\n\n  </mat-card-content>\n  <!-- Patient Reports Pending Actions listing end here -->\n  \n  <!-- 3rd List -->\n  <!-- Admin Processed Reports start here -->\n  <mat-card-content class=\"table_wrapper admin_dashboard\">\n    <mat-card-content class=\"headr_tagh\">\n      <span class=\"counter_with_tool\">\n        <h1>Admin Processed Reports</h1>\n        <span class=\"tolTip\">\n          <a mat-raised-button #processedReports=\"matTooltip\"\n            matTooltip=\"All the Reports listed here are reviewed by Admin.\" matTooltipPosition=\"above\"\n            aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n          </a>\n          <a mat-button (click)=\"processedReports.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n            <span class=\"material-icons\"> help_outline </span>\n          </a>\n        </span>\n      </span>\n    </mat-card-content>\n    <app-approved-patient-reports></app-approved-patient-reports>\n  </mat-card-content>\n  <!-- Admin Processed Reports end here -->\n\n  <!-- 4th List -->\n  <!-- Patient Reports with Job Tickets start here -->\n  <mat-card-content id=\"jobTickets\" class=\"table_wrapper admin_dashboard\">\n    <mat-card-content class=\"headr_tagh\">\n      <span class=\"counter_with_tool\">\n        <h1>Patient Reports with Job Tickets</h1>\n        <span class=\"tolTip\">\n          <a mat-raised-button #JobTickets=\"matTooltip\"\n            matTooltip=\"All the Reports listed here are on Hold for further clarification from Doctor through job tickets.\"\n            matTooltipPosition=\"above\" aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n          </a>\n          <a mat-button (click)=\"JobTickets.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n            <span class=\"material-icons\"> help_outline </span>\n          </a>\n        </span>\n      </span>\n    </mat-card-content>\n\n    <app-job-ticket-patient-reports></app-job-ticket-patient-reports>\n\n  </mat-card-content>\n  <!-- Patient Reports with Job Tickets end here -->\n\n\n</mat-card>\n\n<app-admin-footer></app-admin-footer>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/adminbiller/adminbiller-footer/adminbiller-footer.component.html":
  /*!***********************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/adminbiller/adminbiller-footer/adminbiller-footer.component.html ***!
    \***********************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminbillerAdminbillerFooterAdminbillerFooterComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<p>adminbiller-footer works!</p>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/adminbiller/adminbiller-header/adminbiller-header.component.html":
  /*!***********************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/adminbiller/adminbiller-header/adminbiller-header.component.html ***!
    \***********************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminbillerAdminbillerHeaderAdminbillerHeaderComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<mat-toolbar class=\"techdashboard_header\" [ngClass]=\"{'sticky' : isSticky}\">\n    <mat-card-content class=\"header_wrapper\">\n      <span class=\"logo_wrapper\" [routerLink]=\"[ '/admin/dashboard' ]\">\n        <img src=\"../../../assets/images/logo.png\">\n      </span>\n  \n      <button mat-flat-button (click)=\"menuFunction()\" class=\"togle_menu\"><i class=\"material-icons\"> menu </i></button>\n      <mat-card-content class=\"quotation\" [ngClass]=\"status ? 'success' : 'danger'\" >\n        <mat-nav-list>\n          <a mat-list-item routerLinkActive=\"active\" [routerLink]=\"['/admin-biller/dashboard']\"> Dashboard </a>\n   \n  \n          <a mat-list-item [routerLink]=\"['/admin-biller/cpt-reports']\" routerLinkActive=\"active\">CPT Validate Report</a>\n  \n          <a mat-list-item [routerLink]=\"['/admin-biller/faq']\" routerLinkActive=\"active\">FAQ </a>\n          \n        </mat-nav-list>\n       \n      </mat-card-content>\n  \n  \n      <mat-card-content class=\"profile_section\">\n        <mat-menu #appMenu=\"matMenu\">\n          <button mat-menu-item [routerLink]=\"['/admin/account-settings']\">\n            <mat-icon>account_circle</mat-icon> Account Settings\n          </button>\n  \n          <button mat-menu-item [routerLink]=\"['/admin/account-settings/change-password']\">\n            <mat-icon>vpn_key</mat-icon> Change Password\n          </button>\n  \n          <button mat-menu-item (click)=\"logout()\">\n            <mat-icon>power_settings_new</mat-icon> Logout\n          </button>\n        </mat-menu>\n        <span class=\"username\">{{user_details.firstname}} {{user_details.lastname}}</span>\n        <button mat-icon-button [matMenuTriggerFor]=\"appMenu\">\n          <span class=\"user_profile\">\n            <mat-icon>account_circle</mat-icon>\n            <i class=\"material-icons\">\n              keyboard_arrow_down\n            </i>\n          </span>\n        </button>\n      </mat-card-content>\n    </mat-card-content>\n  </mat-toolbar>\n  <!-- end header -->";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/adminbiller/approved-patient-reports/approved-patient-reports-billeradmin/approved-patient-reports-billeradmin.component.html":
  /*!************************************************************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/adminbiller/approved-patient-reports/approved-patient-reports-billeradmin/approved-patient-reports-billeradmin.component.html ***!
    \************************************************************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAdminbillerApprovedPatientReportsApprovedPatientReportsBilleradminApprovedPatientReportsBilleradminComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- table -->\n<mat-card-content class=\"admin_dashboard approveed_report\">\n<lib-listing\nclass=\"DataTable\" \n*ngIf=\"allBillerData.length>0\" \n[datasource]=\"allBillerData\" \n[skip]=\"allUserData_skip\"\n[modify_header_array]=\"allUserData_modify_header\" \n[detail_skip_array]=\"previewModal_detail_skip\" \n[apiurl]=\"apiUrl\"\n[sourcedata]=\"tableName\" \n[editroute]=\"editUrl\" \n[jwttoken]=\"jwtToken\" \n[statusarr]=\"status\"\n[updateendpoint]=\"UpdateEndpoint\" \n[deleteendpoint]=\"deleteEndpoint\" \n[date_search_endpoint]=\"SearchingEndpoint\"\n[date_search_source]=\"SearchingSourceName\" \n[search_settings]=\"search_settings\" \n[sortdata]=\"sortdata\" \n[datacollection]=\"datacollection\" \n[libdata]=\"libdata\" \n[date_search_source_count]=\"billerData_count\" \n[limitcond]=\"limitcond\" >\n</lib-listing>\n</mat-card-content>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/auth/forgetpassword/forgetpassword.component.html":
  /*!********************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/auth/forgetpassword/forgetpassword.component.html ***!
    \********************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAuthForgetpasswordForgetpasswordComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<span class=\"main_wrapper\">\n\n  <mat-card class=\"login_wrapper\">\n\n    <mat-card-content>\n      <div class=\"login_container\">\n        <span class=\"logo_section\">\n          <img src=\"assets/images/logo.png\">\n        </span>\n        <h2>FORGOTTEN PASSWORD</h2>\n\n        <p class=\"paragraph\">Please enter your valid email address and you will be sent a link to reset your password.\n          You must use the same email id you have registered with us. If you no longer have the same email address then\n          you must contact us directly with proof of your identity.</p>\n        <!-- <mat-form-field appearance=\"fill\">\n              <mat-label>Email Address</mat-label>\n            <input matInput   type=\"email\">\n          </mat-form-field>\n\n          <button mat-flat-button color=\"primary\" class=\"loginBtn\">Reset Password</button> -->\n\n        <lib-forget-password \n        [serverUrl]=\"serverUrl\"\n        [signUpRouteingUrl]=\"signUpRouteingUrl\" \n        [domainUrl]=\"domainUrl\"\n        [addEndpoint]=\"addEndpoint\" \n        [loginRouteingUrl]=\"loginRouteingUrl\" \n        [buttonName]=\"buttonName\"\n          > </lib-forget-password>\n        <!-- <span class=\"forget_wrapper\">\n            <a routerLink=\"/login\">Login</a>\n          </span> -->\n      </div>\n\n    </mat-card-content>\n\n  </mat-card>\n\n</span>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/auth/login/login.component.html":
  /*!**************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/auth/login/login.component.html ***!
    \**************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAuthLoginLoginComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<span class=\"main_wrapper\">\n  <span class=\"img_wrapper\">\n    <mat-card class=\"login_wrapper\">\n\n      <mat-card-content>\n        <div class=\"login_container\">\n\n          <lib-login \n            [fromTitle]=\"fromTitle\"\n            [fullUrl]=\"fullUrl\"\n            [ipinfoid] = 'ipinfoid'\n            [forgetRouteingUrl]=\"forgetRouteingUrl\"\n            [signUpRouteingUrl]='signUpRouteingUrl'\n            [routerStatus]=\"routerStatus\" \n            [defaultLoginUrl]=\"defaultLoginUrl\"\n            [endpoint]=\"endpoint\" \n            [logo]=\"logo\">\n          </lib-login>\n        </div>\n\n      </mat-card-content>\n\n    </mat-card>\n  </span>\n</span>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/auth/logout/logout.component.html":
  /*!****************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/auth/logout/logout.component.html ***!
    \****************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAuthLogoutLogoutComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<div style=\"display: flex; justify-content: center; align-items: center; height: 100%;\">\n    <div>Please wait....</div>\n</div>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/auth/resetpassword/resetpassword.component.html":
  /*!******************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/auth/resetpassword/resetpassword.component.html ***!
    \******************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsAuthResetpasswordResetpasswordComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<span class=\"main_wrapper\">\n  <span class=\"img_wrapper\">\n    <mat-card class=\"login_wrapper\">\n\n      <mat-card-content>\n        <div class=\"login_container\">\n\n          <lib-reset-password \n            [fromTitleName]=\"fromTitleName\" \n            [serverUrl]=\"serverUrl\" \n            [addEndpoint]=\"addEndpoint\"\n            [logo]=\"logo\">\n          </lib-reset-password>\n        </div>\n      </mat-card-content>\n\n    </mat-card>\n  </span>\n</span>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/biller/biller-dashboard/biller-dashboard.component.html":
  /*!**************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/biller/biller-dashboard/biller-dashboard.component.html ***!
    \**************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsBillerBillerDashboardBillerDashboardComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<app-biller-header></app-biller-header>\n\n<mat-card class=\"admin_wrapper biller_Dashboard\">\n\n  <!-- new stra -->\n  <mat-card-content class=\"admin_superbillsection\">\n    <h1>Physician Report Process Status</h1>\n    \n    <mat-card-content class=\"biller_wrapper\">\n      \n      <mat-card-content class=\"super_bill_item sp_one\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon1.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>All Data</p>\n          <h2>{{ allResolveData.totalDownloadCount + this.allResolveData.totalNotDownloadCount }} </h2>\n          <button mat-flat-button (click)=\"viewReportData();\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item sp_two\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon2.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p> Total Download\n          </p>\n          <h2> {{ allResolveData.totalDownloadCount }} </h2>\n          <button mat-flat-button (click)=\"viewReportData('Total Downloaded');\">view all</button>\n        </span>\n      </mat-card-content>\n      \n      <mat-card-content class=\"super_bill_item sp_three\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon2.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p> Pending Downloads</p>\n          <h2> {{ allResolveData.totalNotDownloadCount }} </h2>\n          <button mat-flat-button (click)=\"viewReportData('Not Downloaded');\">view all</button>\n        </span>\n      </mat-card-content>\n\n    </mat-card-content>\n  </mat-card-content> \n\n  <!-- patainet report section -->\n  <mat-card-content class=\"table_wrapper admin_dashboard\">\n    <mat-card-content class=\"headr_tagh\">\n      \n      <span class=\"counter_with_tool\">\n        <h1>Patient Reports Pending Actions</h1>\n        <span class=\"tolTip\">\n          <a mat-raised-button #pendingActions=\"matTooltip\"\n            matTooltip=\" All the Reports listed here are processed by System but awaiting on Admin actions.\"\n            matTooltipPosition=\"above\" aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n          </a>\n          <a mat-button (click)=\"pendingActions.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n            <span class=\"material-icons\"> help_outline </span>\n          </a>\n        </span>\n      </span>\n\n    </mat-card-content>\n    \n    <lib-listing\n      class=\"DataTable\" \n      *ngIf=\"allBillerData.length>0\" \n      [datasource]=\"allBillerData\" \n      [skip]=\"allUserData_skip\"\n      [modify_header_array]=\"allUserData_modify_header\" \n      [detail_skip_array]=\"previewModal_detail_skip\" \n      [apiurl]=\"apiUrl\"\n      [sourcedata]=\"tableName\" \n      [editroute]=\"editUrl\" \n      [jwttoken]=\"jwtToken\" \n      [statusarr]=\"status\"\n      [updateendpoint]=\"UpdateEndpoint\" \n      [deleteendpoint]=\"deleteEndpoint\" \n      [date_search_endpoint]=\"SearchingEndpoint\"\n      [date_search_source]=\"SearchingSourceName\" \n      [search_settings]=\"search_settings\" \n      [sortdata]=\"sortdata\" \n      [datacollection]=\"datacollection\" \n      [libdata]=\"libdata\" \n      [date_search_source_count]=\"billerData_count\" \n      [limitcond]=\"limitcond\" >\n    </lib-listing>\n\n  </mat-card-content>\n</mat-card>\n<!-- Biller Footer -->\n<app-admin-footer></app-admin-footer>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/biller/biller-footer/biller-footer.component.html":
  /*!********************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/biller/biller-footer/biller-footer.component.html ***!
    \********************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsBillerBillerFooterBillerFooterComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<mat-card-content class=\"footer_section\">\n    <span class=\"footer_content\">\n  \n      <mat-card-content class=\"link\">\n        <a href=\"\">Privacy Policy</a>\n        <a href=\"\"> Terms & conditions</a>\n      </mat-card-content>\n      <p>© Copyright {{ htmlData.year }} Advanced Wellness Solutions- All Rights Reserved</p>\n    </span>\n  </mat-card-content>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/biller/biller-header/biller-header.component.html":
  /*!********************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/biller/biller-header/biller-header.component.html ***!
    \********************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsBillerBillerHeaderBillerHeaderComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<ng-container *ngIf=\"main_user.flag == true\">\n  <button mat-menu-item (click)=\"returnToAdmin()\">\n    <mat-icon>power_settings_new</mat-icon> {{ main_user.buttonText }}\n  </button>\n</ng-container>\n<mat-toolbar class=\"techdashboard_header\" [ngClass]=\"{'sticky' : isSticky}\">\n \n  <mat-card-content class=\"header_wrapper\">\n    <span class=\"logo_wrapper\" [routerLink]=\"[ '/biller/dashboard' ]\">\n      <img src=\"../../../assets/images/logo.png\">\n    </span>\n    <button mat-flat-button (click)=\"menuFunction()\" class=\"togle_menu\">\n      <i class=\"material-icons\"> menu </i>\n    </button>\n    <mat-card-content class=\"quotation\" [ngClass]=\"toggleStatus ? 'success' : 'danger'\">\n      <mat-nav-list>\n        <a mat-list-item routerLinkActive=\"active\" [routerLink]=\"['/biller/dashboard']\"> Dashboard </a>\n        <a mat-list-item [routerLink]=\"['/biller/faq']\" routerLinkActive=\"active\"> FAQ </a>\n      </mat-nav-list>\n    </mat-card-content>\n\n    <mat-card-content class=\"profile_section\">\n      <mat-menu #appMenu=\"matMenu\">\n        <button mat-menu-item [routerLink]=\"['/doctor/account-settings']\">\n          <mat-icon>account_circle</mat-icon> Account Settings\n        </button>\n        <button mat-menu-item [routerLink]=\"['/doctor/account-settings/change-password']\">\n          <mat-icon>vpn_key</mat-icon> Change Password\n        </button>\n        <ng-container *ngIf = \"flag == 0\">\n          <button mat-menu-item (click)=\"logout()\">\n            <mat-icon>power_settings_new</mat-icon> Logout\n          </button>\n        </ng-container>\n        <ng-container *ngIf = \"flag == 1\">\n          <button mat-menu-item [routerLink]=\"['/admin/dashboard']\">\n            <mat-icon>vpn_key</mat-icon> Return to My Account\n          </button>\n        </ng-container>\n      </mat-menu>\n      <span class=\"username\">{{user_data.firstname}} {{user_data.lastname}}</span>\n      <button mat-icon-button [matMenuTriggerFor]=\"appMenu\">\n        <span class=\"user_profile\">\n          <mat-icon>account_circle</mat-icon>\n          <i class=\"material-icons\">\n            keyboard_arrow_down\n          </i>\n        </span>\n      </button>\n\n    </mat-card-content>\n  </mat-card-content>\n  \n</mat-toolbar>\n<!-- end header -->";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/biller/direct-download-reports/direct-download-reports.component.html":
  /*!****************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/biller/direct-download-reports/direct-download-reports.component.html ***!
    \****************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsBillerDirectDownloadReportsDirectDownloadReportsComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<p>Downloading...</p>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/biller/download-superbiller/download-superbiller.component.html":
  /*!**********************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/biller/download-superbiller/download-superbiller.component.html ***!
    \**********************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsBillerDownloadSuperbillerDownloadSuperbillerComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<mat-toolbar class=\"techdashboard_header\">\n  <mat-toolbar-row>\n    <span class=\"logo_wrapper\" [routerLink]=\"[ '/biller/dashboard' ]\">\n      <img src=\"../../../assets/images/logo.png\">\n    </span>\n\n    <mat-card-content class=\"quotation\">\n      <p>ADVANCED ANS TECHNOLOGY – BETTER PATIENT CARE – INCREASE PRACTICE REVENUE</p>\n    </mat-card-content>\n    <mat-card-content class=\"profile\">\n\n    </mat-card-content>\n  </mat-toolbar-row>\n</mat-toolbar>\n\n<!-- end header -->\n<mat-card-content class=\"reset_wrapper\">\n  <mat-card-content class=\"card_wrapper\">\n    <mat-card-content class=\"icon\">\n      <i class=\"material-icons\">cloud_download</i>\n    </mat-card-content>\n    <mat-card-title *ngIf=\"!htmlText.downloadFlug\">{{ htmlText.hraderText }}</mat-card-title>\n    <mat-card-title *ngIf=\"htmlText.downloadFlug\" class=\"success_message\">{{ htmlText.hraderText }}</mat-card-title>\n\n    <mat-form-field *ngIf=\"!htmlText.downloadFlug\" class=\"example-full-width\" appearance=\"fill\">\n      <input matInput placeholder=\"Enter password\" type=\"password\" value=\"\" [(ngModel)]=\"htmlText.password\">\n    </mat-form-field>\n\n    <span class=\"captcha_wrapper\" *ngIf=\"htmlText.passwordAttemptsCount >= 3 && !htmlText.downloadFlug\">\n      <span class=\"botText\">{{ htmlText.notBotText }} </span>\n      <button mat-button class=\"refreshButton\" (click)=\"changeChapcha(6);\"><i class=\"material-icons\"> autorenew </i></button>\n    </span>\n    \n    <mat-form-field *ngIf=\"htmlText.passwordAttemptsCount >= 3 && !htmlText.downloadFlug\" class=\"example-full-width\" appearance=\"fill\">\n      <input matInput placeholder=\"Enter text\" type=\"text\" value=\"\" [(ngModel)]=\"htmlText.notBotInput\">\n    </mat-form-field>\n\n    <button *ngIf=\"!htmlText.downloadFlug\" mat-raised-button class=\"download_button\" (click)=\"downloadPDF();\">Download</button>\n\n    <!-- <p class=\"error_message\">Error! Try Again</p> -->\n    \n    <button *ngIf=\"htmlText.downloadFlug\" routerLink=\"/login\" mat-raised-button class=\"download_button\">Home</button>\n  </mat-card-content>\n</mat-card-content>\n<app-admin-footer></app-admin-footer>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/booked-events-listing/past-appoinments/past-appoinments.component.html":
  /*!*****************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/booked-events-listing/past-appoinments/past-appoinments.component.html ***!
    \*****************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsBookedEventsListingPastAppoinmentsPastAppoinmentsComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<mat-label *ngIf=\"configData.responseData == null || configData.responseData.length < 1\">\n  No booked evnets found\n</mat-label>\n<h1 class=\"db_title\"> Booked Appointment</h1>\n<div class=\"admin_dashboard\">\n<lib-listing class=\"app_list DataTable \" *ngIf=\"configData.responseData != null && configData.responseData.length > 0\"\n             [datasource]=\"configData.responseData\"\n             [skip]=\"configData.skipFields\"\n             [modify_header_array]=\"configData.modify_header_array\"\n             [apiurl]=\"configData.baseUrl\"\n             [deleteendpoint]=\"configData.endPoint.deleteBookedEvent\"\n             [updateendpoint]=\"configData.endPoint.rescheduleBookedEvent\"\n             [jwttoken]=\"configData.jwtToken\"\n             [date_search_source]=\"configData.source\"\n             [date_search_endpoint]=\"configData.endPoint.listBookedEvents\"\n             [sourcedata]=\"configData.source\"\n             [statusarr]=\"configData.statusarray\"\n             [url]=\"configData.custom_link\"\n             [search_settings]=\"configData.search_settings\"\n             [searchendpoint]=\"configData.endPoint.listBookedEvents\"\n             [sortdata]=\"configData.sortdata\"\n             [datacollection]=\"configData.endPoint.listBookedEvents\"\n             [date_search_source_count]=\"configData.date_search_source_count\"\n             [libdata]=\"configData.libdata\"\n             [updatetable]=\"configData.updatetable\"\n             [detail_skip_array]=\"configData.detail_skip_array\"\n             [limitcond]=\"configData.limitcond\">\n</lib-listing>\n</div>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/booked-events-listing/reschedule-appointment/reschedule-appointment.component.html":
  /*!*****************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/booked-events-listing/reschedule-appointment/reschedule-appointment.component.html ***!
    \*****************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsBookedEventsListingRescheduleAppointmentRescheduleAppointmentComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- Listing starts -->\n<mat-dialog-content>\n  <div class=\"center\">\n    <mat-label>\n      <b>{{availableSlots.length > 0 || progressSpinner.loading ? 'Available slots' : 'No slot available'}}</b>\n    </mat-label>\n  </div>\n\n  <div class=\"center\" *ngIf=\"progressSpinner.loading\">\n    <mat-progress-spinner [mode]=\"progressSpinner.mode\"></mat-progress-spinner> <br>\n    <mat-label><b>{{progressSpinner.bookingStatus}}</b></mat-label>\n  </div>\n\n\n  <div class=\"filter\" *ngIf=\"availableSlots.length > 0\">\n\n    <!-- Update timezone -->\n    <mat-form-field appearance=\"outline\" class=\"filter-box\">\n      <mat-label>My timezone</mat-label>\n      <mat-select [(ngModel)]=\"filterOptions.timezone\" (selectionChange)=\"onChangeTimezone($event)\"\n                  placeholder=\"Change timezone\">\n        <mat-option *ngFor=\"let tz of configData.timeZone;\" [value]=\"tz.value\">{{ tz.text }}</mat-option>\n      </mat-select>\n    </mat-form-field>\n\n    <!-- Event Type -->\n    <!-- <mat-form-field appearance=\"outline\" class=\"filter-box\">\n      <mat-label>Event Type</mat-label>\n      <mat-select [(ngModel)]=\"filterOptions.eventType\">\n        <mat-option *ngFor=\"let et of libConfigData.eventType;\" [value]=\"et.value\">{{ et.text }}\n        </mat-option>\n      </mat-select>\n    </mat-form-field> -->\n\n    <!-- Search by Date range -->\n    <mat-form-field appearance=\"outline\" class=\"filter-box\">\n      <mat-label>Search by date range</mat-label>\n      <input matInput [(ngModel)]=\"filterOptions.availableDates\" placeholder=\"Date range\" [satDatepicker]=\"picker2\"\n             [min]=\"today\" disabled>\n      <sat-datepicker #picker2 [rangeMode]=\"true\" disabled=\"false\"></sat-datepicker>\n      <sat-datepicker-toggle matSuffix [for]=\"picker2\"></sat-datepicker-toggle>\n    </mat-form-field>\n\n    <!-- Search button -->\n    <button mat-stroked-button color=\"primary\" class=\"m-r\" (click)=\"search()\">\n      <mat-icon>search</mat-icon>\n    </button>\n\n    <!-- Reset filter button -->\n    <button mat-stroked-button color=\"primary\" class=\"m-l\" (click)=\"resetFilter()\" matTooltip=\"Reset filter\">\n      <mat-icon>rotate_right</mat-icon>\n    </button>\n\n\n    <!-- -------------------------- Pagination start ------------------------ -->\n    <div class=\"pagination\">\n      <button mat-icon-button (click)=\"pageStep('prev')\">\n        <mat-icon>arrow_back</mat-icon>\n      </button>\n      <mat-label>\n        <b *ngIf=\"page.total_record == 0\">No event slot found</b>\n        <b *ngIf=\"page.total_record != 0\">Showing results {{page.start}} - {{page.end}} of {{page.total_record}}</b>\n      </mat-label>\n      <button mat-icon-button (click)=\"pageStep('next')\">\n        <mat-icon>arrow_forward</mat-icon>\n      </button>\n\n      <br>\n      <mat-label class=\"sample_label\">Items/page:</mat-label> &nbsp;\n      <mat-select class=\"selectPageCount\" [(ngModel)]=\"itemCount\" (selectionChange)=\"onChangePageCount()\">\n        <mat-option [value]=\"20\">20</mat-option>\n        <mat-option [value]=\"50\">50</mat-option>\n        <mat-option [value]=\"100\">100</mat-option>\n        <mat-option [value]=\"200\">200</mat-option>\n      </mat-select>\n\n      <mat-label class=\"sample_label\">Page:</mat-label> &nbsp;\n      <mat-select class=\"selectPageCount\" [(ngModel)]=\"jumpToPageNumber\" (selectionChange)=\"jumpToPage()\">\n        <mat-option *ngFor=\"let i of arrPage\" [value]=\"i - 1\">\n          {{i}}\n        </mat-option>\n      </mat-select>\n\n    </div>\n    <!-- ------------------------- Pagination end ------------------------- -->\n\n  </div>\n\n  <div class=\"slotview\">\n    <mat-card class=\"slot-card\" *ngFor=\"let data of availableSlots\">\n      <mat-card-content class=\"slot-card-content\">\n        <p><b>{{data.event_title}}</b></p>\n        <p><b>Details:</b> {{data.description}}</p>\n        <p><b>Date:</b> {{data.startdate}} &nbsp; <b>Slot:</b> {{data.slot}} - {{data.slot_end_time}}</p>\n        <p><b>Timezone:</b> {{data.timezoneName}}</p>\n      </mat-card-content>\n      <mat-card-actions>\n        <button mat-raised-button color=\"primary\" (click)=\"rebook(data)\">Reschedule</button>\n      </mat-card-actions>\n    </mat-card>\n  </div>\n</mat-dialog-content>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/booked-events-listing/upcoming-appoinments/cancel-alert.html":
  /*!*******************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/booked-events-listing/upcoming-appoinments/cancel-alert.html ***!
    \*******************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsBookedEventsListingUpcomingAppoinmentsCancelAlertHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<h1 mat-dialog-title>Cancel this appointment?</h1>\n<div mat-dialog-content style=\"text-align: center\">\n  <span class=\"cancel-alert-span\">\n    <button mat-raised-button color=\"warn\" mat-dialog-close=\"true\">Yes</button>\n     &nbsp; &nbsp; &nbsp;\n    <button mat-raised-button color=\"primary\" mat-dialog-close=\"false\">No</button>\n  </span>\n</div>\n\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/booked-events-listing/upcoming-appoinments/upcoming-appoinments.component.html":
  /*!*************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/booked-events-listing/upcoming-appoinments/upcoming-appoinments.component.html ***!
    \*************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsBookedEventsListingUpcomingAppoinmentsUpcomingAppoinmentsComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<mat-label *ngIf=\"configData.responseData == null || configData.responseData.length < 1\">\n  No booked evnets found\n</mat-label>\n<h1 class=\"db_title\"> Booked Appointment</h1>\n<div class=\"admin_dashboard\">\n<lib-listing class=\"app_list DataTable \" *ngIf=\"configData.responseData != null && configData.responseData.length > 0\"\n             [datasource]=\"configData.responseData\"\n             [skip]=\"configData.skipFields\"\n             [modify_header_array]=\"configData.modify_header_array\"\n             [apiurl]=\"configData.baseUrl\"\n             [deleteendpoint]=\"configData.endPoint.deleteBookedEvent\"\n             [updateendpoint]=\"configData.endPoint.rescheduleBookedEvent\"\n             [jwttoken]=\"configData.jwtToken\"\n             [date_search_source]=\"configData.source\"\n             [date_search_endpoint]=\"configData.endPoint.listUpcomingBookedEvents\"\n             [sourcedata]=\"configData.source\"\n             [statusarr]=\"configData.statusarray\"\n             [url]=\"configData.custom_link\"\n             [search_settings]=\"configData.search_settings\"\n             [searchendpoint]=\"configData.endPoint.listUpcomingBookedEvents\"\n             [sortdata]=\"configData.sortdata\"\n             [datacollection]=\"configData.endPoint.listUpcomingBookedEvents\"\n             [date_search_source_count]=\"configData.date_search_source_count\"\n             [libdata]=\"configData.libdata\"\n             [updatetable]=\"configData.updatetable\"\n             [detail_skip_array]=\"configData.detail_skip_array\"\n             [limitcond]=\"configData.limitcond\"\n             (onLiblistingChange)=\"listenLiblistingChange($event)\">\n</lib-listing>\n</div>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/common/account-settings/account-settings.component.html":
  /*!**************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/common/account-settings/account-settings.component.html ***!
    \**************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsCommonAccountSettingsAccountSettingsComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- Header Start -->\n<app-admin-header *ngIf=\"headerFlag == 'admin'\"></app-admin-header>\n<app-biller-header *ngIf=\"headerFlag == 'biller'\"></app-biller-header>\n<app-tech-header *ngIf=\"headerFlag == 'tech'\"></app-tech-header>\n<app-doctor-header *ngIf=\"headerFlag == 'doctor'\"></app-doctor-header>\n<app-doctor-office-header *ngIf=\"headerFlag == 'doctor-office'\"></app-doctor-office-header>\n\n\n<!-- Header End -->\n<mat-card class=\"admin_wrapper\">\n  <mat-progress-bar *ngIf=\"loader\" mode=\"indeterminate\"></mat-progress-bar>\n\n  <mat-card-content class=\"title_wrapper\">Account Setting</mat-card-content>\n\n  <span class=\"add_header\" *ngIf=\"cookiesData.type == 'tech'\">\n    <span class=\"bradcrumb\"><a [routerLink]=\"['/tech/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Account Setting</span>\n  </span>\n\n  <span class=\"add_header\" *ngIf=\"cookiesData.type == 'admin'\">\n    <span class=\"bradcrumb\"><a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Account Setting</span>\n  </span>\n\n  <span class=\"add_header\" *ngIf=\"cookiesData.type == 'biller'\">\n    <span class=\"bradcrumb\"><a [routerLink]=\"['/biller/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Account Setting</span>\n  </span>\n\n  <span class=\"add_header\" *ngIf=\"cookiesData.type == 'doctor'\">\n    <span class=\"bradcrumb\"><a [routerLink]=\"['/biller/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Account Setting</span>\n  </span>\n  <!-- End header with add button -->\n\n  <mat-card class=\"add_form\">\n    <h2 class=\"t_head\">Account Information</h2>\n    <mat-card-content class=\"form_wrapper\">\n\n      <form class=\"example-form\" autocomplete=\"off\" name=\"AccountSettingsForm\" [formGroup]=\"AccountSettingsForm\" (ngSubmit)=\"AccountSettingsFormSubmit()\">\n\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Enter First Name</mat-label>\n          <input matInput placeholder=\"First Name\" [formControl]=\"AccountSettingsForm.controls['firstname']\" (blur)=\"inputUntouch(AccountSettingsForm,'firstname')\">\n          <mat-error *ngIf=\"AccountSettingsForm.controls['firstname'].touched && !AccountSettingsForm.controls['firstname'].valid && AccountSettingsForm.controls['firstname'].errors.required\">First Name field can not be blank</mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Enter Last Name</mat-label>\n          <input matInput placeholder=\"Last Name\" [formControl]=\"AccountSettingsForm.controls['lastname']\" (blur)=\"inputUntouch(AccountSettingsForm,'lastname')\">\n          <mat-error *ngIf=\"AccountSettingsForm.controls['lastname'].touched && !AccountSettingsForm.controls['lastname'].valid && AccountSettingsForm.controls['lastname'].errors.required\">Last Name field can not be blank</mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Email Address</mat-label>\n          <input matInput placeholder=\"Email Address\" [disabled]=\"true\" value=\"{{ cookiesData.email }}\" />\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Phone </mat-label>\n          <input type=\"number\" matInput placeholder=\"Phone\" [formControl]=\"AccountSettingsForm.controls['phoneno']\" (blur)=\"inputUntouch(AccountSettingsForm,'phoneno')\">\n          <mat-error *ngIf=\"AccountSettingsForm.controls['phoneno'].touched && !AccountSettingsForm.controls['phoneno'].valid && AccountSettingsForm.controls['phoneno'].errors.required\">Phone Number field can not be blank</mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Date</mat-label>\n          <input [value]=\"date.value\" matInput [matDatepicker]=\"myPicker\" placeholder=\"date\">\n          <mat-datepicker-toggle matSuffix [for]=\"myPicker\" disabled></mat-datepicker-toggle>\n          <mat-datepicker #myPicker></mat-datepicker>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Zip</mat-label>\n          <input type=\"number\" matInput placeholder=\"ZIP\" [formControl]=\"AccountSettingsForm.controls['zip']\" (blur)=\"inputUntouch(AccountSettingsForm,'zip')\">\n          <mat-error *ngIf=\"AccountSettingsForm.controls['zip'].touched && !AccountSettingsForm.controls['zip'].valid && AccountSettingsForm.controls['zip'].errors.required\">Zip field can not be blank. </mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Address</mat-label>\n          <input matInput placeholder=\"Address\" [formControl]=\"AccountSettingsForm.controls['address']\" (blur)=\"inputUntouch(AccountSettingsForm,'address')\" />\n          <mat-error *ngIf=\"AccountSettingsForm.controls['address'].touched && !AccountSettingsForm.controls['address'].valid && AccountSettingsForm.controls['address'].errors.required\">Address field can not be blank</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"parent_cat\" appearance=\"fill\">\n          <mat-label>State</mat-label>\n          <mat-select formControlName=\"state\" (selectionChange)=\"getCity($event.value);\">\n            <mat-option [value]=0>Select a category</mat-option>\n            <mat-option *ngFor=\"let state of states;\" value=\"{{ state.name }}\">{{ state.name }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field class=\"parent_cat\" appearance=\"fill\">\n          <mat-label>City</mat-label>\n          <mat-select formControlName=\"city\">\n            <mat-option value=0>Select a category</mat-option>\n            <mat-option *ngFor=\"let city of cities;\" value=\"{{ city }}\">{{ city }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <span class=\"submit_form\">\n          <button mat-flat-button type=\"button\" (click)=\"CancelRedirectToDashboard()\"> Cancel </button>\n          <button mat-flat-button type=\"submit\" [disabled]=\"!AccountSettingsForm.valid\"> Update </button>\n        </span>\n\n      </form>\n\n    </mat-card-content>\n  </mat-card>\n</mat-card>\n\n<app-admin-footer></app-admin-footer>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/common/account-settings/change-password/change-password.component.html":
  /*!*****************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/common/account-settings/change-password/change-password.component.html ***!
    \*****************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsCommonAccountSettingsChangePasswordChangePasswordComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- Header Start -->\n\n<app-admin-header *ngIf=\"headerFlag == 'admin'\"></app-admin-header>\n\n<app-biller-header *ngIf=\"headerFlag == 'biller'\"></app-biller-header>\n\n<app-tech-header *ngIf=\"headerFlag == 'tech'\"></app-tech-header>\n\n<app-doctor-header *ngIf=\"headerFlag == 'doctor'\"></app-doctor-header>\n\n<!-- Header End -->\n\n<mat-progress-bar *ngIf=\"loader\" mode=\"indeterminate\"></mat-progress-bar>\n<mat-card class=\"admin_wrapper\">\n<mat-card-content class=\"title_wrapper\">\n    Account Setting\n</mat-card-content>\n\n\n<span class=\"add_header\">\n    <span class=\"bradcrumb\"><a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Change Password</span>\n</span>\n<!-- End header with add button -->\n\n<mat-card class=\"add_form\">\n    <h2>Change Password</h2>\n    <mat-card-content class=\"form_wrapper\">\n        <form class=\"example-form\" autocomplete=\"off\" name=\"ChangePasswordForm\" [formGroup]=\"ChangePasswordForm\"\n            (ngSubmit)=\"ChangePasswordFormSubmit()\">\n            <!-- Old Password -->\n            <mat-form-field class=\"form-group\">\n                <input matInput placeholder=\"Type Current Password\" type=\"password\"\n                    [formControl]=\"ChangePasswordForm.controls['oldPassword']\" (blur)=\"inputUntouch(ChangePasswordForm,'oldPassword')\">\n                <mat-error\n                    *ngIf=\"!ChangePasswordForm.controls['oldPassword'].valid && ChangePasswordForm.controls['oldPassword'].touched\">\n                    Password field can not be blank</mat-error>\n            </mat-form-field>\n            <!-- New Password -->\n            <mat-form-field class=\"form-group\">\n                <input matInput placeholder=\"Type New Password\" type=\"password\"\n                    [formControl]=\"ChangePasswordForm.controls['newPassword']\"\n                    (blur)=\"inputUntouch(ChangePasswordForm,'newPassword')\">\n                <mat-error\n                    *ngIf=\"!ChangePasswordForm.controls['newPassword'].valid && ChangePasswordForm.controls['newPassword'].touched\">\n                    Password field can not be blank</mat-error>\n            </mat-form-field>\n            <!-- Confirm Password -->\n            <mat-form-field class=\"form-group\">\n                <input matInput placeholder=\"Retype New Password\" type=\"password\"\n                    [formControl]=\"ChangePasswordForm.controls['confirmPassword']\"\n                    (blur)=\"inputUntouch(ChangePasswordForm,'confirmPassword')\">\n                <mat-error\n                    *ngIf=\"!ChangePasswordForm.controls['confirmPassword'].valid && ChangePasswordForm.controls['confirmPassword'].touched\">\n                    Password does not match </mat-error>\n            </mat-form-field>\n\n            <span class=\"submit_form\">\n                <button mat-flat-button type=\"button\" (click)=\"CancelRedirectToDashboard()\"> Cancel </button>\n                <button mat-flat-button type=\"submit\" > Update </button>\n            </span>\n        </form>\n    </mat-card-content>\n\n</mat-card>\n</mat-card>\n<app-admin-footer></app-admin-footer>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/common/approval-settings-update/approval-settings-update.component.html":
  /*!******************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/common/approval-settings-update/approval-settings-update.component.html ***!
    \******************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsCommonApprovalSettingsUpdateApprovalSettingsUpdateComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<mat-card class=\"admin_wrapper\">\n    <!-- header with add button -->\n    <mat-card-content class=\"title_wrapper\">\n        Update Approval Settings\n    </mat-card-content>\n    <!-- End header with add button -->\n\n    <mat-card class=\"add_form\">\n        <mat-card-content class=\"form_wrapper\">\n            <form class=\"example-form\" autocomplete=\"off\" name=\"ApprovalSettingsUpdateForm\"\n                [formGroup]=\"ApprovalSettingsUpdateForm\" (ngSubmit)=\"TechManagementAddFormFormSubmit()\">\n\n                <!-- Question Start -->\n                <label>Default Value Percentage: </label>\n                <mat-form-field appearance=\"fill\">\n                    <input matInput placeholder=\"Enter Value (0 to 100)\" [formControl]=\"ApprovalSettingsUpdateForm.controls['default_value_percentage']\"\n                        (blur)=\"inputUntouch(ApprovalSettingsUpdateForm, 'default_value_percentage')\" (keyup)=\"changeDefaultValuePercentage();\">\n\n                    <span matSuffix>%</span>\n\n                    <mat-error\n                        *ngIf=\"ApprovalSettingsUpdateForm.controls['default_value_percentage'].touched && !ApprovalSettingsUpdateForm.controls['default_value_percentage'].valid && ApprovalSettingsUpdateForm.controls['default_value_percentage'].errors.required\">\n                        Required Field.\n                    </mat-error>\n\n                    <mat-error\n                        *ngIf=\"ApprovalSettingsUpdateForm.controls['default_value_percentage'].touched && !ApprovalSettingsUpdateForm.controls['default_value_percentage'].valid && ApprovalSettingsUpdateForm.controls['default_value_percentage'].errors.max\">\n                        Not valid.\n                    </mat-error>\n\n                    <mat-error\n                        *ngIf=\"ApprovalSettingsUpdateForm.controls['default_value_percentage'].touched && !ApprovalSettingsUpdateForm.controls['default_value_percentage'].valid && ApprovalSettingsUpdateForm.controls['default_value_percentage'].errors.min\">\n                        Not valid.\n                    </mat-error>\n                </mat-form-field>\n                <!-- Question End -->\n\n               \n\n                <!-- end here -->\n                <span class=\"submit_form\">\n                    <ng-container *ngIf=\"this.allReceivedData.doctorData.default_value != 1\">\n                        <button mat-button type=\"button\" class=\"resetBtn\" (click)=\"chnageToDefault();\">\n                            {{ htmlText.defaultButtonText }}\n                        </button>\n                    </ng-container>\n                    <button mat-flat-button type=\"button\" (click)=\"closeModal();\">Close</button>\n                    <button mat-flat-button type=\"submit\"> Update </button>\n                </span>\n            </form>\n        </mat-card-content>\n    </mat-card>\n\n</mat-card>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/common/dialog-box/dialog-box.component.html":
  /*!**************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/common/dialog-box/dialog-box.component.html ***!
    \**************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsCommonDialogBoxDialogBoxComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<div class=\"modal_wrapper\">\n    <h1 mat-dialog-title>{{ data.header }}</h1>\n    <div mat-dialog-content>\n        <p>{{ data.message }}</p>\n    </div>\n</div>\n<div mat-dialog-actions>\n    <button mat-button *ngIf=\"data.button1.text != ''\" (click)=\"button1()\">{{ data.button1.text }}</button>\n    <button mat-button *ngIf=\"data.button2.text != ''\" (click)=\"button2()\" cdkFocusInitial>{{ data.button2.text }}</button>\n</div>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/common/doctor-signup-share/doctor-signup-share.component.html":
  /*!********************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/common/doctor-signup-share/doctor-signup-share.component.html ***!
    \********************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsCommonDoctorSignupShareDoctorSignupShareComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<mat-card-content class=\"shareLink_wrpr\">\n\n\n  <mat-toolbar class=\"link_field\">\n    <h2>Share link for Doctor Signup:</h2>\n    <span class=\"small_view\">\n      <span class=\"shreWr\">\n        <input type=\"text\" [value]=\"shareDetailsData.link\" #shareLinkUrl>\n        <a mat-button (click)=\"copyShareLink(shareLinkUrl);\"><i class=\"material-icons\">\n            link\n          </i></a>\n      </span>\n      <span class=\"icon_wr\">\n        <a mat-button [href]=\"shareDetailsData.facebookShareLink\" target=\"_blank\">\n          <i class=\"fab fa-facebook-f\"></i> \n        </a>\n\n        <a mat-button [href]=\"shareDetailsData.twitterShareLink\" target=\"_blank\">\n           <i class=\"fab fa-twitter\"></i> \n        </a>\n\n        <a mat-button [href]=\"shareDetailsData.linkedinShareLink\" target=\"_blank\">\n          <i class=\"fab fa-linkedin-in\"></i> \n        </a>\n\n        <a mat-button [href]=\"shareDetailsData.tumblrShareLink\" target=\"_blank\">\n          <i class=\"fab fa-tumblr\"></i> \n        </a>\n      </span>\n    </span>\n  </mat-toolbar>\n\n</mat-card-content>\n\n ";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/common/encounter-form-rules/encounter-form-rules.component.html":
  /*!**********************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/common/encounter-form-rules/encounter-form-rules.component.html ***!
    \**********************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsCommonEncounterFormRulesEncounterFormRulesComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<app-admin-header></app-admin-header>\n<mat-card class=\"admin_wrapper encounter_rules\">\n    <mat-card-content class=\"admin_superbillsection\">\n        <div class=\"greenbar\">\n            <p>Encounter Form Rules</p>\n        </div>\n        <h1> Encounter Form Rules </h1>\n        <mat-card-content class=\"tab\">\n            <h3>ICD10 Code Rules</h3>\n            <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n                <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n\n                <!-- Position Column -->\n                <ng-container matColumnDef=\"SL\">\n                    <th mat-header-cell *matHeaderCellDef> SL. </th>\n                    <td mat-cell *matCellDef=\"let element\" title=\"SL.\"> {{element.SL}} </td>\n                </ng-container>\n\n                <!-- Name Column -->\n                <ng-container matColumnDef=\"Rules\">\n                    <th mat-header-cell *matHeaderCellDef> Rules </th>\n                    <td mat-cell *matCellDef=\"let element\" title=\"Rules\"> {{element.Rules}} </td>\n                </ng-container>\n\n                <!-- Weight Column -->\n                <ng-container matColumnDef=\"Remarks\">\n                    <th mat-header-cell *matHeaderCellDef> Remarks </th>\n                    <td mat-cell *matCellDef=\"let element\" title=\"Remarks\"> {{element.Remarks}} </td>\n                </ng-container>\n\n                <tr mat-header-row *matHeaderRowDef=\"icdColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: icdColumns;\"></tr>\n            </table>\n        </mat-card-content>\n        <br>\n        <mat-card-content class=\"tab\">\n            <h3>CPT Code Rules</h3>\n\n            <table mat-table [dataSource]=\"dataSourceCPT\" class=\"mat-elevation-z8\">\n\n\n                <ng-container matColumnDef=\"SL\">\n                    <th mat-header-cell *matHeaderCellDef> SL. </th>\n                    <td mat-cell *matCellDef=\"let element\" title=\"SL.\"> {{element.SL}} </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"Rules\">\n                    <th mat-header-cell *matHeaderCellDef> Rules </th>\n                    <td mat-cell *matCellDef=\"let element\" title=\"Rules\"> {{element.Rules}} </td>\n                </ng-container>\n\n\n                <ng-container matColumnDef=\"Remarks\">\n                    <th mat-header-cell *matHeaderCellDef> Remarks </th>\n                    <td mat-cell *matCellDef=\"let element\" title=\"Remarks\"> {{element.Remarks}} </td>\n                </ng-container>\n\n                <tr mat-header-row *matHeaderRowDef=\"icdColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: icdColumns;\"></tr>\n            </table>\n        </mat-card-content>\n\n    </mat-card-content>\n</mat-card>\n\n\n<app-admin-footer></app-admin-footer>\n\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/common/faq-view/faq-view.component.html":
  /*!**********************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/common/faq-view/faq-view.component.html ***!
    \**********************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsCommonFaqViewFaqViewComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- Header Start -->\n\n<!-- Admin -->\n<app-admin-header *ngIf=\"loginUserData.user_details.user_type == 'admin'\"></app-admin-header>\n\n<!-- Biller -->\n<app-biller-header *ngIf=\"loginUserData.user_details.user_type == 'biller'\"></app-biller-header>\n\n<!-- Diagnostic Admin -->\n<app-diagnostic-admin-header *ngIf=\"loginUserData.user_details.user_type == 'diagnostic_admin'\">\n</app-diagnostic-admin-header>\n\n<!-- Doctor -->\n<app-doctor-header *ngIf=\"loginUserData.user_details.user_type == 'doctor'\"></app-doctor-header>\n\n<!-- Doctor Office -->\n<app-doctor-office-header *ngIf=\"loginUserData.user_details.user_type == 'doctor_office'\"></app-doctor-office-header>\n\n<!-- Sales Person -->\n<app-sales-person-header *ngIf=\"loginUserData.user_details.user_type == 'sales_person'\"></app-sales-person-header>\n\n<!-- Tech -->\n<app-tech-header *ngIf=\"loginUserData.user_details.user_type == 'tech'\"></app-tech-header>\n\n<!-- doctor group -->\n<app-doctor-group-header *ngIf=\"loginUserData.user_details.user_type == 'doctor_group'\"></app-doctor-group-header>\n\n<!-- distributors  -->\n<app-distributors-header *ngIf=\"loginUserData.user_details.user_type == 'distributors'\"></app-distributors-header> \n\n<!-- admin_biller  -->\n<app-adminbiller-header *ngIf=\"loginUserData.user_details.user_type == 'admin_biller'\"></app-adminbiller-header>\n\n<!-- Header End -->\n\n\n<mat-card class=\"faq_wrapper\">\n    <h2 class=\"header\"> Frequently Asked Questions (FAQs) </h2>\n    <mat-accordion>\n        \n        <mat-expansion-panel *ngFor=\"let data of allResolveData; let i = index;\">\n            <mat-expansion-panel-header>\n                <mat-panel-title>\n                    <b>{{ i + 1 }} &nbsp;</b> <span [innerHTML]=\"data.question\"></span>\n                </mat-panel-title>\n            </mat-expansion-panel-header>\n            <!-- body -->\n            <div class=\"body_wrapper\">\n                <div class=\"content_wr\">\n                    <p [innerHTML]=\"data.answer\"></p>\n                </div>\n                <div class=\"video_wr\" *ngIf=\"data.youtube_link != ''\">\n                    <iframe width=\"400\" height=\"315\" [src]=\"data.youtube_link_save\" frameborder=\"0\"\n                        allowfullscreen></iframe>\n                </div>\n            </div>\n        </mat-expansion-panel>\n\n    </mat-accordion>\n</mat-card>\n\n\n\n<!-- Footer Start -->\n\n<!-- Admin -->\n<app-admin-footer></app-admin-footer>\n\n<!-- Footer End -->";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/common/http-loader/http-loader.component.html":
  /*!****************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/common/http-loader/http-loader.component.html ***!
    \****************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsCommonHttpLoaderHttpLoaderComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<div *ngIf=\"httpLoading == true\" class=\"mainOverlayLoader\">\n</div>\n\n\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/common/not-found-error/not-found-error.component.html":
  /*!************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/common/not-found-error/not-found-error.component.html ***!
    \************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsCommonNotFoundErrorNotFoundErrorComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<ng-container *ngIf=\"cookiesData.type == 'admin'\">\n  <app-admin-header></app-admin-header>\n</ng-container>\n\n<ng-container *ngIf=\"cookiesData.type == 'tech'\">\n  <app-tech-header></app-tech-header>\n</ng-container>\n\n<ng-container *ngIf=\"cookiesData.type == 'biller'\">\n  <app-biller-header></app-biller-header>\n</ng-container>\n\n<ng-container *ngIf=\"cookiesData.type == 'doctor'\">\n  <app-doctor-header></app-doctor-header>\n</ng-container>\n\n<mat-card-content class=\"error_banner\">\n  <span class=\"imagesss\">\n    <img src=\"assets/images/exclametroy_warning.png\">\n  </span>\n  <mat-card-content class=\"error_page_content\">\n    <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>\n\n    <h1> 404 Error </h1>\n    <h3> ooops! Page Not Found </h3>\n    <button class=\"goto_home\" mat-button type=\"button\" (click)=\"gotoHome();\">Back to home</button>\n  </mat-card-content>\n</mat-card-content>\n\n\n\n<mat-card-content class=\"footer_section\">\n  <span class=\"footer_content\">\n\n    <mat-card-content class=\"link\">\n      <a href=\"\">Privacy Policy</a>\n      <a href=\"\"> Terms & conditions</a>\n    </mat-card-content>\n    <p>© Copyright 2018 Advanced Wellness Solutions- All Rights Reserved</p>\n  </span>\n</mat-card-content>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/common/password-dialog-box/password-dialog-box.component.html":
  /*!********************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/common/password-dialog-box/password-dialog-box.component.html ***!
    \********************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsCommonPasswordDialogBoxPasswordDialogBoxComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<p>password-dialog-box works!</p>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/common/upload-dialog-box/upload-dialog-box.component.html":
  /*!****************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/common/upload-dialog-box/upload-dialog-box.component.html ***!
    \****************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsCommonUploadDialogBoxUploadDialogBoxComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<mat-card class=\"add_form\">\n    <form class=\"example-form\" autocomplete=\"off\" name=\"techBulkUploadForm\" [formGroup]=\"techUploadForm\"\n        (ngSubmit)=\"techUploadFormSubmit()\">\n        <mat-dialog-content class=\"mat-typography\">\n            <!-- <lib-file-upload [config]=\"configData\"></lib-file-upload>\n            <mat-error *ngIf=\"ErrCode==true\">Please add just one image.</mat-error> -->\n            <p class=\"signaturefont\">{{ sign }}</p>\n            <label>Signature : </label>\n            <mat-form-field>\n                <input name=\"sign\" matInput [formControl]=\"techUploadForm.controls['sign']\" [(ngModel)]=\"sign\"\n                    (blur)=\"inputUntouch(techUploadForm,'sign')\">\n                <mat-error *ngIf=\"techUploadForm.controls['sign'].touched && !techUploadForm.controls['sign'].valid\n          && techUploadForm.controls['sign'].errors.required\">\n                    Signature field can not be blank</mat-error>\n            </mat-form-field>\n            \n            <span class=\"submit_form\">\n                <button mat-flat-button mat-dialog-close type=\"button\" (click)=\"cancelButtonFunction()\"> Cancel </button>\n                <button mat-flat-button type=\"submit\" [mat-dialog-close]=\"true\" cdkFocusInitial> Submit </button>\n            </span>\n        </mat-dialog-content>\n    </form>\n</mat-card>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/diagnostic-admin/diagnostic-admin-dashboard/diagnostic-admin-dashboard.component.html":
  /*!********************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/diagnostic-admin/diagnostic-admin-dashboard/diagnostic-admin-dashboard.component.html ***!
    \********************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsDiagnosticAdminDiagnosticAdminDashboardDiagnosticAdminDashboardComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<app-diagnostic-admin-header></app-diagnostic-admin-header>\n\n<mat-card class=\"admin_wrapper\">\n\n  <mat-card-content class=\"content_wrapper\">\n\n    <mat-card-content class=\"itemsection\">\n      <span class=\"icon\">\n        <img src=\"../../../../assets/images/totalDoctorIcon.png\">\n      </span>\n      <span class=\"counteer\">\n        <span class=\"counter_with_tool\">\n          <h4 class=\"dataCount\"> {{ allResolveData.total_doctor }}</h4>\n          <span class=\"tolTip\">\n            <a mat-raised-button #TNDoctors=\"matTooltip\" matTooltip=\"Data listed for the total number of doctors registered under the logged in Diagnostic Admin.\" matTooltipPosition=\"above\"\n              aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n            </a>\n            <a mat-button (click)=\"TNDoctors.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n              <span class=\"material-icons\"> help_outline </span>\n            </a>\n          </span>\n\n        </span>\n      </span>\n      <span class=\"button_wrapper\">\n        <p class=\"doctorNumber\">Total Number of <br>Doctors</p>\n        <button mat-button [routerLink]=\"['/diagnostic-admin/doctor-management']\">View Details</button>\n      </span>\n    </mat-card-content>\n\n\n    <mat-card-content class=\"itemsection\">\n      <span class=\"icon\">\n        <img src=\"../../../../assets/images/billerIcon.png\">\n      </span>\n      <span class=\"counteer\">\n        <span class=\"counter_with_tool\">\n          <h4 class=\"dataCount\"> {{ allResolveData.total_biller }}</h4>\n          <span class=\"tolTip\">\n            <a mat-raised-button #TNBillers=\"matTooltip\" matTooltip=\"Data listed for the total number of billers registered under the logged in Diagnostic Admin.\n            \" matTooltipPosition=\"above\"\n              aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n            </a>\n            <a mat-button (click)=\"TNBillers.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n              <span class=\"material-icons\"> help_outline </span>\n            </a>\n          </span>\n\n        </span>\n      </span>\n      <span class=\"button_wrapper\">\n        <p class=\"doctorNumber\">Total Number of<br> Billers</p>\n        <button mat-flat-button [routerLink]=\"['/diagnostic-admin/biller-management']\">View Details</button>\n      </span>\n    </mat-card-content>\n\n    <mat-card-content class=\"itemsection\">\n      <span class=\"icon\">\n        <img src=\"../../../../assets/images/techIcon.png\">\n      </span>\n      <span class=\"counteer\">\n        <span class=\"counter_with_tool\">\n          <h4 class=\"dataCount\"> {{ allResolveData.total_tech }}</h4>\n          <span class=\"tolTip\">\n            <a mat-raised-button #TNTechs=\"matTooltip\" matTooltip=\"Data listed for the total number of techs registered under the logged in Diagnostic Admin.\n            \" matTooltipPosition=\"above\"\n              aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n            </a>\n            <a mat-button (click)=\"TNTechs.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n              <span class=\"material-icons\"> help_outline </span>\n            </a>\n          </span>\n\n        </span>\n      </span>\n      <span class=\"button_wrapper\">\n        <p class=\"doctorNumber\">Total Number of <br>Techs</p>\n        <button mat-flat-button [routerLink]=\"['/diagnostic-admin/biller-management']\">View Details</button>\n      </span>\n    </mat-card-content>\n    <!-- new modification -->\n\n  </mat-card-content> \n\n  <mat-card-content class=\"content_wrapper\">\n    <mat-card-content class=\"itemsection\">\n      <span class=\"icon\">\n        <img src=\"../../../../assets/images/doctorOfficeIcon.png\">\n      </span>\n      <span class=\"counteer\">\n        <span class=\"counter_with_tool\">\n          <h4 class=\"dataCount\"> {{ allResolveData.total_doctor_office }}</h4>\n          <span class=\"tolTip\">\n            <a mat-raised-button #TNdoctoroffice=\"matTooltip\" matTooltip=\"Data listed for the total number of techs registered under the logged in Diagnostic Admin.\n            \" matTooltipPosition=\"above\"\n              aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n            </a>\n            <a mat-button (click)=\"TNdoctoroffice.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n              <span class=\"material-icons\"> help_outline </span>\n            </a>\n          </span>\n        </span>\n      </span>\n      <span class=\"button_wrapper\">\n        <p class=\"doctorNumber\">Total Number of <br>Doctor's Office</p>\n        <button mat-button [routerLink]=\"['/diagnostic-admin/doctor-office-management']\">View Details</button>\n      </span>\n    </mat-card-content>\n\n    <mat-card-content class=\"itemsection\">\n      <span class=\"icon\">\n        <img src=\"../../../../assets/images/appointmentsPendingIcon.png\">\n      </span>\n      <span class=\"counteer\">\n        <span class=\"counter_with_tool\">\n          <h4 class=\"dataCount\"> {{ allResolveData.total_sales_person }}</h4>\n          <span class=\"tolTip\">\n            <a mat-raised-button #AppPending=\"matTooltip\" matTooltip=\"Data listed for the total number of techs registered under the logged in Sales Person.\" matTooltipPosition=\"above\"\n              aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n            </a>\n            <a mat-button (click)=\"AppPending.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n              <span class=\"material-icons\"> help_outline </span>\n            </a>\n          </span>\n\n        </span>\n      </span>\n      <span class=\"button_wrapper\">\n        <p class=\"doctorNumber\">Total Number of<br> Sales Person</p>\n        <button mat-flat-button [routerLink]=\"['/diagnostic-admin/sales-person-management']\">View Details</button>\n      </span>\n    </mat-card-content>\n\n  \n  </mat-card-content>\n\n\n\n  <mat-card-content class=\"admin_superbillsection superbillerContainer\">\n    <h1>Physician Report and Super Bills</h1>\n    <mat-card-content class=\"biller_wrapper\">\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon1.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total No of <br>\n            Reports Added\n          </p> \n\n          <span class=\"counter_with_tool\">\n            <h2> {{ allResolveData.total_reports_added }} </h2>\n            <span class=\"tolTip\">\n              <a mat-raised-button #total_biller=\"matTooltip\"\n                matTooltip=\"The data listed for the total number of reports added by the biller.\n                \"\n                matTooltipPosition=\"above\" aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n              </a>\n              <a mat-button (click)=\"total_biller.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n                <span class=\"material-icons\"> help_outline </span>\n              </a>\n            </span>\n          </span>\n          \n          <!-- <button mat-flat-button (click)=\"viewReportProcessData('Total No of Reports Added')\">view all</button> -->\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon2.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total No of <br>\n            Report Processed\n          </p>\n         \n          <span class=\"counter_with_tool\">\n            <h2> {{ allResolveData.total_report_processed }} </h2>\n            <span class=\"tolTip\">\n              <a mat-raised-button #TNRProcess=\"matTooltip\"\n                matTooltip=\"The data listed for the total number of reports processed by the system.\"\n                matTooltipPosition=\"above\" aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n              </a>\n              <a mat-button (click)=\"TNRProcess.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n                <span class=\"material-icons\"> help_outline </span>\n              </a>\n            </span>\n          </span>\n          <button mat-flat-button (click)=\"viewReportProcessData('Total No of Report Processed')\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon3.png\">\n          </mat-card-content>\n        </span>\n        <span class=\"container_wrapper\">\n          <p>Total Number of <br>\n            Report Signed\n          </p>\n         \n          <span class=\"counter_with_tool\">\n            <h2> {{ allResolveData.total_report_signed }} </h2>\n            <span class=\"tolTip\">\n              <a mat-raised-button #TNRsigned=\"matTooltip\"\n                matTooltip=\"The data listed for the total number of reports signed by the doctors.\"\n                matTooltipPosition=\"above\" aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n              </a>\n              <a mat-button (click)=\"TNRsigned.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n                <span class=\"material-icons\"> help_outline </span>\n              </a>\n            </span>\n          </span>\n          <button mat-flat-button (click)=\"viewReportProcessData('Total No of Report Signed')\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon4.png\">\n          </mat-card-content>\n        </span>\n        <span class=\"container_wrapper\">\n          <p> Sent to <br>\n            Biller\n          </p>\n          \n          <span class=\"counter_with_tool\">\n            <h2> {{ allResolveData.total_sent_to_biller }} </h2>\n            <span class=\"tolTip\">\n              <a mat-raised-button #SendTOBiller=\"matTooltip\"\n                matTooltip=\"The data listed for the total no. of reports sent to the billers.\"\n                matTooltipPosition=\"above\" aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n              </a>\n              <a mat-button (click)=\"SendTOBiller.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n                <span class=\"material-icons\"> help_outline </span>\n              </a>\n            </span>\n          </span>\n          <button mat-flat-button (click)=\"viewReportProcessData('Sent to Biller')\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon4.png\">\n          </mat-card-content>\n        </span>\n        <span class=\"container_wrapper\">\n          <p> Reports Downloaded </p>\n         \n          <span class=\"counter_with_tool\">\n            <h2> {{ allResolveData.total_reports_download }} </h2>\n            <span class=\"tolTip\">\n              <a mat-raised-button #ReportsDownloaded=\"matTooltip\"\n                matTooltip=\"The data listed for the number of reports that are downloaded.\"\n                matTooltipPosition=\"above\" aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n              </a>\n              <a mat-button (click)=\"ReportsDownloaded.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n                <span class=\"material-icons\"> help_outline </span>\n              </a>\n            </span>\n          </span>\n          <button mat-flat-button (click)=\"viewReportProcessData('Reports Downloaded')\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon4.png\">\n          </mat-card-content>\n        </span>\n        <span class=\"container_wrapper\">\n          <p> Reports Pending Sing </p>\n          \n          <span class=\"counter_with_tool\">\n            <h2> {{ allResolveData.total_not_sign_reports }} </h2>\n            <span class=\"tolTip\">\n              <a mat-raised-button #ReportsPendingSing=\"matTooltip\"\n                matTooltip=\"The data listed for the total no. of reports that are yet to be signed by the doctors.\"\n                matTooltipPosition=\"above\" aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n              </a>\n              <a mat-button (click)=\" ReportsPendingSing.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n                <span class=\"material-icons\"> help_outline </span>\n              </a>\n            </span>\n          </span>\n          <button mat-flat-button (click)=\"viewReportProcessData('Reports Pending Sing')\">view all</button>\n        </span>\n      </mat-card-content>\n    </mat-card-content>\n  </mat-card-content>\n\n\n  <!-- Share doctor sign up link -->\n  <app-doctor-signup-share [shareDetails]=\"shareDetails\"></app-doctor-signup-share>\n\n\n  <!-- All Data listing start here(default listing) -->\n  <mat-card-content class=\"table_wrapper\">\n\n    <!-- <mat-toolbar class=\"top_header\">\n      <h2> {{ htmlText.headerText }} </h2>\n    </mat-toolbar> -->\n    <mat-card-content class=\"headr_tagh\">\n      <span class=\"counter_with_tool\">\n        <h1> {{ htmlText.headerText }} </h1>\n        <span class=\"tolTip\">\n          <a mat-raised-button #pendingActions=\"matTooltip\"\n            matTooltip=\"The reports listed here are reviewed by Admin.\"\n            matTooltipPosition=\"above\" aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n          </a>\n          <a mat-button (click)=\"pendingActions.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n            <span class=\"material-icons\"> help_outline </span>\n          </a>\n        </span>\n      </span>\n    </mat-card-content>\n    <mat-card-content class=\"admin_dashboard\">\n      <!-- table -->\n      <lib-listing class=\"DataTable\" *ngIf=\"allBillerData.length>0\" [datasource]=\"allBillerData\"\n        [skip]=\"allUserData_skip\" [modify_header_array]=\"allUserData_modify_header\"\n        [detail_skip_array]=\"previewModal_detail_skip\" [apiurl]=\"apiUrl\" [sourcedata]=\"tableName\" [editroute]=\"editUrl\"\n        [jwttoken]=\"jwtToken\" [statusarr]=\"status\" [updateendpoint]=\"UpdateEndpoint\" [deleteendpoint]=\"deleteEndpoint\"\n        [date_search_endpoint]=\"SearchingEndpoint\" [date_search_source]=\"SearchingSourceName\"\n        [search_settings]=\"search_settings\" [sortdata]=\"sortdata\" [datacollection]=\"datacollection\" [libdata]=\"libdata\"\n        [date_search_source_count]=\"billerData_count\" [limitcond]=\"limitcond\">\n      </lib-listing>\n    </mat-card-content>\n  </mat-card-content>\n  <!-- dashboard all listing end here -->\n</mat-card>\n\n<app-admin-footer></app-admin-footer>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/diagnostic-admin/diagnostic-admin-footer/diagnostic-admin-footer.component.html":
  /*!**************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/diagnostic-admin/diagnostic-admin-footer/diagnostic-admin-footer.component.html ***!
    \**************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsDiagnosticAdminDiagnosticAdminFooterDiagnosticAdminFooterComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<mat-card-content class=\"footer_section\">\n  <span class=\"footer_content\">\n\n    <mat-card-content class=\"link\">\n      <a href=\"\">Privacy Policy</a>\n      <a href=\"\"> Terms & conditions</a>\n    </mat-card-content>\n    <p>© Copyright {{ htmlData.year }} Advanced Wellness Solutions- All Rights Reserved</p>\n  </span>\n</mat-card-content>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/diagnostic-admin/diagnostic-admin-header/diagnostic-admin-header.component.html":
  /*!**************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/diagnostic-admin/diagnostic-admin-header/diagnostic-admin-header.component.html ***!
    \**************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsDiagnosticAdminDiagnosticAdminHeaderDiagnosticAdminHeaderComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<ng-container *ngIf=\"main_user.flag == true\">\n  <button mat-menu-item (click)=\"returnToAdmin()\">\n    <mat-icon>power_settings_new</mat-icon> {{ main_user.buttonText }}\n  </button>\n</ng-container>\n<mat-toolbar class=\"techdashboard_header\" [ngClass]=\"{'sticky' : isSticky}\">\n  <mat-card-content class=\"header_wrapper\">\n    <span class=\"logo_wrapper\" [routerLink]=\"[ '/diagnostic-admin/dashboard' ]\">\n      <img src=\"../../../assets/images/logo.png\">\n    </span>\n\n    <button mat-flat-button (click)=\"menuFunction()\" class=\"togle_menu\"><i class=\"material-icons\"> menu </i></button>\n    <mat-card-content class=\"quotation\" [ngClass]=\"status ? 'success' : 'danger'\">\n      <mat-nav-list>\n        <a mat-list-item routerLinkActive=\"active\" [routerLink]=\"['/diagnostic-admin/dashboard']\"> Dashboard </a>\n        \n        <a mat-list-item [routerLink]=\"['/diagnostic-admin/doctor-management']\" routerLinkActive=\"active\"> Manage Doctor </a>\n        <a mat-list-item [routerLink]=\"['/diagnostic-admin/tech-management']\" routerLinkActive=\"active\"> Manage Tech </a>\n        <a mat-list-item [routerLink]=\"['/diagnostic-admin/biller-management']\" routerLinkActive=\"active\"> Manage Biller </a>\n        <a mat-list-item [routerLink]=\"['/diagnostic-admin/doctor-office-management']\" routerLinkActive=\"active\"> Manage Doctor Office </a>\n        <a mat-list-item [routerLink]=\"['/diagnostic-admin/faq']\" routerLinkActive=\"active\"> FAQ </a>\n        <a mat-list-item [routerLink]=\"['/diagnostic_admin/reports-details']\" routerLinkActive=\"active\"> CPT VAlidate Reports </a>\n        <a mat-list-item [routerLink]=\"['/diagnostic-admin/sales-person-management']\" routerLinkActive=\"active\"> Manage Sales Person </a>\n        \n\n      </mat-nav-list>\n    </mat-card-content>\n\n\n    <mat-card-content class=\"profile_section\">\n      <mat-menu #appMenu=\"matMenu\">\n        <button mat-menu-item [routerLink]=\"['/diagnostic-admin/account-settings']\">\n          <mat-icon>account_circle</mat-icon> Account Settings\n        </button>\n\n        <button mat-menu-item [routerLink]=\"['/diagnostic-admin/account-settings/change-password']\">\n          <mat-icon>vpn_key</mat-icon> Change Password\n        </button>\n\n        <button mat-menu-item (click)=\"logout()\">\n          <mat-icon>power_settings_new</mat-icon> Logout\n        </button>\n      </mat-menu>\n      <span class=\"username\">{{ user_data.center_name }} </span>\n      <button mat-icon-button [matMenuTriggerFor]=\"appMenu\">\n        <span class=\"user_profile\">\n          <mat-icon>account_circle</mat-icon>\n          <i class=\"material-icons\">\n            keyboard_arrow_down\n          </i>\n        </span>\n      </button>\n    </mat-card-content>\n  </mat-card-content>\n</mat-toolbar>\n<!-- end header -->";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/distributors/distributors-dashboard/distributors-dashboard.component.html":
  /*!********************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/distributors/distributors-dashboard/distributors-dashboard.component.html ***!
    \********************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsDistributorsDistributorsDashboardDistributorsDashboardComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<app-distributors-header></app-distributors-header>\n\n<mat-card class=\"admin_wrapper\"> \n  <mat-card-content class=\"content_wrapper\">\n    <mat-card-content class=\"itemsection\">\n      <span class=\"icon\">\n        <img src=\"../../../../assets/images/billerIcon.png\">\n      </span>\n      <span class=\"counteer\">\n        <span class=\"counter_with_tool\">\n          <h4 class=\"dataCount\"> {{ allResolveData.dashboardCount.billerCount }} </h4>\n          <span class=\"tolTip\">\n            <a mat-raised-button #TNBillers=\"matTooltip\" matTooltip=\"comming..\" matTooltipPosition=\"above\"\n              aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n            </a>\n            <a mat-button (click)=\"TNBillers.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n              <span class=\"material-icons\"> help_outline </span>\n            </a>\n          </span>\n\n        </span>\n      </span>\n      <span class=\"button_wrapper\">\n        <p class=\"doctorNumber\">Total Number of<br> Billers</p>\n        <button mat-flat-button [routerLink]=\"['/distributors/biller-management']\">View Details</button>\n      </span>\n    </mat-card-content>\n\n    <mat-card-content class=\"itemsection\">\n      <span class=\"icon\">\n        <img src=\"../../../../assets/images/techIcon.png\">\n      </span>\n      <span class=\"counteer\">\n        <span class=\"counter_with_tool\">\n          <h4 class=\"dataCount\"> {{ allResolveData.dashboardCount.techCount }} </h4>\n          <span class=\"tolTip\">\n            <a mat-raised-button #TNTechs=\"matTooltip\" matTooltip=\"comming..\" matTooltipPosition=\"above\"\n              aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n            </a>\n            <a mat-button (click)=\"TNTechs.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n              <span class=\"material-icons\"> help_outline </span>\n            </a>\n          </span>\n\n        </span>\n      </span>\n      <span class=\"button_wrapper\">\n        <p class=\"doctorNumber\">Total Number of <br>Techs</p>\n        <button mat-flat-button [routerLink]=\"['/distributors/tech-management']\">View Details</button>\n      </span>\n    </mat-card-content>\n\n    <mat-card-content class=\"itemsection\">\n      <span class=\"icon\">\n        <img src=\"../../../../assets/images/doctorOfficeIcon.png\">\n      </span>\n      <span class=\"counteer\">\n        <span class=\"counter_with_tool\">\n          <h4 class=\"dataCount\"> {{ allResolveData.dashboardCount.doctorOfficeCount }} </h4>\n          <span class=\"tolTip\">\n            <a mat-raised-button #TNDOffice=\"matTooltip\" matTooltip=\"comming..\" matTooltipPosition=\"above\"\n              aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n            </a>\n            <a mat-button (click)=\"TNDOffice.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n              <span class=\"material-icons\"> help_outline </span>\n            </a>\n          </span>\n        </span>\n      </span>\n      <span class=\"button_wrapper\">\n        <p class=\"doctorNumber\">Total Number of <br>Doctor's Office</p>\n        <button mat-flat-button [routerLink]=\"['/distributors/doctor-office-management']\">View Details</button>\n      </span>\n    </mat-card-content>\n  </mat-card-content>\n\n\n  <!-- Doctor occide related -->\n  <mat-card-content class=\"content_wrapper\">\n\n    <mat-card-content class=\"itemsection\">\n      <span class=\"icon\">\n        <img src=\"../../../../assets/images/totalDoctorIcon.png\">\n      </span>\n      <span class=\"counteer\">\n        <span class=\"counter_with_tool\">\n          <h4 class=\"dataCount\"> {{ allResolveData.dashboardCount.doctorsCount }} </h4>\n          <span class=\"tolTip\">\n            <a mat-raised-button #TNDrs=\"matTooltip\" matTooltip=\"comming..\" matTooltipPosition=\"above\"\n              aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n            </a>\n            <a mat-button (click)=\"TNDrs.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n              <span class=\"material-icons\"> help_outline </span>\n            </a>\n          </span>\n\n        </span>\n      </span>\n      <span class=\"button_wrapper\">\n        <p class=\"doctorNumber\">Total Number of <br>Doctors</p>\n        <button mat-button [routerLink]=\"['/distributors/doctor-management']\">View Details</button>\n      </span>\n    </mat-card-content>\n\n    <mat-card-content class=\"itemsection\">\n      <span class=\"icon\">\n        <img src=\"../../../../assets/images/totalDoctorIcon.png\">\n      </span>\n      <span class=\"counteer\">\n        <span class=\"counter_with_tool\">\n          <h4 class=\"dataCount\"> {{ allResolveData.dashboardCount.salesPersonCount }} </h4>\n          <span class=\"tolTip\">\n            <a mat-raised-button #TNSPerson=\"matTooltip\" matTooltip=\"comming..\" matTooltipPosition=\"above\"\n              aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n            </a>\n            <a mat-button (click)=\"TNSPerson.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n              <span class=\"material-icons\"> help_outline </span>\n            </a>\n          </span>\n\n        </span>\n      </span>\n      <span class=\"button_wrapper\">\n        <p class=\"doctorNumber\">Total Number of<br> Sales Person</p>\n        <button mat-flat-button [routerLink]=\"['/distributors/sales-person-management']\">View Details</button>\n      </span>\n    </mat-card-content>\n\n  </mat-card-content>\n\n  <!-- Doctor other related -->\n  <!-- <mat-card-content class=\"content_wrapper\">\n    <mat-card-content class=\"itemsection\">\n      <span class=\"icon\">\n        <img src=\"../../../../assets/images/loveHandshake.png\">\n      </span> \n      <span class=\"counteer\">\n        <span class=\"counter_with_tool\">\n          <h4 class=\"dataCount\"> 34 </h4> \n          <span class=\"tolTip\">\n            <a mat-raised-button #TACompleted=\"matTooltip\"\n              matTooltip=\"comming..\" matTooltipPosition=\"above\"\n              aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n            </a>\n            <a mat-button (click)=\"TACompleted.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n              <span class=\"material-icons\"> help_outline </span>\n            </a>\n          </span>\n  \n        </span>\n      </span>\n      <span class=\"button_wrapper\">\n        <p class=\"doctorNumber\">Total Appointments<br> Completed</p>\n        <button mat-flat-button [routerLink]=\"['/admin/tech-management']\">View Details</button>\n      </span>\n    </mat-card-content>\n    <mat-card-content class=\"itemsection\">\n      <span class=\"icon\">\n        <img src=\"../../../../assets/images/loveHandshake.png\">\n      </span>\n      <span class=\"counteer\">\n        <span class=\"counter_with_tool\">\n          <h4 class=\"dataCount\"> 34 </h4> \n          <span class=\"tolTip\">\n            <a mat-raised-button #TACompleted=\"matTooltip\"\n              matTooltip=\"comming..\" matTooltipPosition=\"above\"\n              aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n            </a>\n            <a mat-button (click)=\"TACompleted.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n              <span class=\"material-icons\"> help_outline </span>\n            </a>\n          </span>\n  \n        </span>\n      </span>\n      <span class=\"button_wrapper\">\n        <p class=\"doctorNumber\">Total Appointments<br> Completed</p>\n        <button mat-flat-button [routerLink]=\"['/admin/tech-management']\">View Details</button>\n      </span>\n    </mat-card-content>\n  \n    <mat-card-content class=\"itemsection\">\n      <span class=\"icon\">\n        <img src=\"../../../../assets/images/loveHandshake.png\">\n      </span>\n      <span class=\"counteer\">\n        <span class=\"counter_with_tool\">\n          <h4 class=\"dataCount\"> 34 </h4> \n          <span class=\"tolTip\">\n            <a mat-raised-button #TACompleted=\"matTooltip\"\n              matTooltip=\"comming..\" matTooltipPosition=\"above\"\n              aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n            </a>\n            <a mat-button (click)=\"TACompleted.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n              <span class=\"material-icons\"> help_outline </span>\n            </a>\n          </span>\n  \n        </span>\n      </span>\n      <span class=\"button_wrapper\">\n        <p class=\"doctorNumber\">Total Appointments<br> Completed</p>\n        <button mat-flat-button [routerLink]=\"['/admin/tech-management']\">View Details</button>\n      </span>\n    </mat-card-content>\n   -->\n  <!-- new edit -->\n  <!-- <mat-card-content class=\"itemsection\">\n      <span class=\"icon\">\n        <img src=\"../../../../assets/images/calenderAppointment.png\">\n      </span>\n      <span class=\"counteer\">\n        <h4 class=\"dataCount\"> 34 </h4>\n        <p class=\"doctorNumber\">Total Appointments<br> Completed</p>\n      </span>\n      <span class=\"button_wrapper\">\n        <button mat-flat-button [routerLink]=\"['/admin/tech-management']\">View Details</button>\n      </span>\n    </mat-card-content> -->\n\n  <!-- </mat-card-content> -->\n\n  <!-- <mat-card-content class=\"admin_superbillsection\">\n    <h1>Physician Report Process Status</h1>\n    <mat-card-content class=\"biller_wrapper\">\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon1.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total No of <br>\n            Images Not Processed\n          </p>\n          <h2>54 </h2>\n          <button mat-flat-button (click)=\"viewAllButton('Images Not Processed')\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon2.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total No of <br>\n            Basic Details Not Processed\n          </p>\n          <h2> 54 </h2>\n          <button mat-flat-button (click)=\"viewAllButton('Basic Details Not Processed')\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item \">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon2.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total No of <br>\n            Risk Markers Not Processed\n          </p>\n          <h2>54</h2>\n          <button mat-flat-button (click)=\"viewAllButton('Risk Markers Not Processed')\">view all</button>\n        </span>\n      </mat-card-content>\n\n    </mat-card-content>\n  </mat-card-content> -->\n\n\n\n  <mat-card-content class=\"admin_superbillsection superbillerContainer\">\n    <h1>Physician Report and Super Bills</h1>\n    <mat-card-content class=\"biller_wrapper\">\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon1.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total Number of <br>\n            Reports Added\n          </p>\n          <h2> {{ allResolveData.dashboardCount.reportsAddedCount }} </h2>\n          <!-- <button mat-flat-button (click)=\"viewAllButton('Total Number of Reports Added')\">view all</button> -->\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon2.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total Number of <br>\n            Report Processed\n          </p>\n          <h2> {{ allResolveData.dashboardCount.reportProcessedCount }} </h2>\n          <button mat-flat-button (click)=\"viewAllButton('Total Number of Report Processed')\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon3.png\">\n          </mat-card-content>\n        </span>\n        <span class=\"container_wrapper\">\n          <p>Total Number of <br>\n            Report Signed\n          </p>\n          <h2> {{ allResolveData.dashboardCount.reportSignedCount }} </h2>\n          <button mat-flat-button (click)=\"viewAllButton('Total Number of Report Signed')\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon4.png\">\n          </mat-card-content>\n        </span>\n        <span class=\"container_wrapper\">\n          <p> Sent to <br>\n            Biller\n          </p>\n          <h2> {{ allResolveData.dashboardCount.sendTobBillerCount }} </h2>\n          <button mat-flat-button (click)=\"viewAllButton('Sent to Biller')\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon4.png\">\n          </mat-card-content>\n        </span>\n        <span class=\"container_wrapper\">\n          <p> Reports Downloaded </p>\n          <h2> {{ allResolveData.dashboardCount.reportsDownloadedCount }} </h2>\n          <button mat-flat-button (click)=\"viewAllButton('Reports Downloaded')\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon4.png\">\n          </mat-card-content>\n        </span>\n        <span class=\"container_wrapper\">\n          <p> Reports Pending Sing </p>\n          <h2> {{ allResolveData.dashboardCount.reportsPendingSingCount }} </h2>\n          <button mat-flat-button (click)=\"viewAllButton('Reports Pending Sing')\">view all</button>\n        </span>\n      </mat-card-content>\n    </mat-card-content>\n  </mat-card-content>\n\n\n  <!-- Share doctor sign up link -->\n  <app-doctor-signup-share [shareDetails]=\"shareDetails\"></app-doctor-signup-share>\n\n\n  <!-- All Data listing start here(default listing) -->\n  <mat-card-content class=\"table_wrapper admin_dashboard\">\n\n    <mat-toolbar class=\"top_header\">\n      <h2> {{ htmlText.headerText }} </h2>\n      <span class=\"wrappp_R\">\n      </span>\n    </mat-toolbar>\n\n    <!-- Listing goes here  -->\n    <!-- table -->\n    <!-- <ng-container *ngIf=\"listFlag == true\"> -->\n    <lib-listing\n      class=\"DataTable\" \n      *ngIf=\"allBillerData.length>0\" \n      [datasource]=\"allBillerData\" \n      [skip]=\"allUserData_skip\"\n      [modify_header_array]=\"allUserData_modify_header\" \n      [detail_skip_array]=\"previewModal_detail_skip\" \n      [apiurl]=\"apiUrl\"\n      [sourcedata]=\"tableName\" \n      [editroute]=\"editUrl\" \n      [jwttoken]=\"jwtToken\" \n      [statusarr]=\"status\"\n      [updateendpoint]=\"UpdateEndpoint\" \n      [deleteendpoint]=\"deleteEndpoint\" \n      [date_search_endpoint]=\"SearchingEndpoint\"\n      [date_search_source]=\"SearchingSourceName\" \n      [search_settings]=\"search_settings\" \n      [sortdata]=\"sortdata\" \n      [datacollection]=\"datacollection\" \n      [libdata]=\"libdata\" \n      [date_search_source_count]=\"billerData_count\" \n      [limitcond]=\"limitcond\"\n      [updatetable]=\"updatetable\" >\n    </lib-listing>\n  <!-- </ng-container> -->\n  </mat-card-content>\n\n\n</mat-card>\n\n\n<app-distributors-footer></app-distributors-footer>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/distributors/distributors-footer/distributors-footer.component.html":
  /*!**************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/distributors/distributors-footer/distributors-footer.component.html ***!
    \**************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsDistributorsDistributorsFooterDistributorsFooterComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<mat-card-content class=\"footer_section\">\n    <span class=\"footer_content\">\n  \n      <mat-card-content class=\"link\">\n        <a href=\"\">Privacy Policy</a>\n        <a href=\"\"> Terms & conditions</a>\n      </mat-card-content>\n      <p>© Copyright {{ htmlData.year }} Advanced Wellness Solutions- All Rights Reserved</p>\n    </span>\n  </mat-card-content>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/distributors/distributors-header/distributors-header.component.html":
  /*!**************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/distributors/distributors-header/distributors-header.component.html ***!
    \**************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsDistributorsDistributorsHeaderDistributorsHeaderComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<ng-container *ngIf=\"main_user.flag == true\">\n  <button mat-menu-item (click)=\"returnToAdmin()\">\n    <mat-icon>power_settings_new</mat-icon> {{ main_user.buttonText }}\n  </button>\n</ng-container>\n<mat-toolbar class=\"techdashboard_header\" [ngClass]=\"{'sticky' : isSticky}\">\n    <mat-card-content class=\"header_wrapper\">\n      <span class=\"logo_wrapper\" [routerLink]=\"[ '/distributors/dashboard' ]\">\n        <img src=\"../../../assets/images/logo.png\">\n      </span>\n  \n      <button mat-flat-button (click)=\"menuFunction()\" class=\"togle_menu\"><i class=\"material-icons\"> menu </i></button>\n      <mat-card-content class=\"quotation\" [ngClass]=\"status ? 'success' : 'danger'\">\n        <mat-nav-list>\n          <a mat-list-item routerLinkActive=\"active\" [routerLink]=\"['/distributors/dashboard']\"> Dashboard </a>\n          \n          <a mat-list-item [routerLink]=\"['/distributors/doctor-management']\" routerLinkActive=\"active\"> Manage Doctor </a>\n\n          <a mat-list-item [routerLink]=\"['/distributors/biller-management']\" routerLinkActive=\"active\"> Manage Biller </a>\n\n          <a mat-list-item [routerLink]=\"['/distributors/tech-management']\" routerLinkActive=\"active\"> Manage Tech </a>\n\n          <a mat-list-item [routerLink]=\"['/distributors/doctor-office-management']\" routerLinkActive=\"active\"> Manage Doctor Office </a>\n\n          <a mat-list-item [routerLink]=\"['/distributors/sales-person-management']\" routerLinkActive=\"active\"> Manage Sales Person </a>\n          \n          <a mat-list-item [routerLink]=\"['/distributors/faq']\" routerLinkActive=\"active\"> FAQ </a>\n          <a mat-list-item [routerLink]=\"['/distributors/reports-details']\" routerLinkActive=\"active\"> CPT Validate Reports </a>\n  \n        </mat-nav-list>\n      </mat-card-content>\n  \n  \n      <mat-card-content class=\"profile_section\">\n        <mat-menu #appMenu=\"matMenu\">\n          <button mat-menu-item [routerLink]=\"['/distributors/account-settings']\">\n            <mat-icon>account_circle</mat-icon> Account Settings\n          </button>\n  \n          <button mat-menu-item [routerLink]=\"['/distributors/account-settings/change-password']\">\n            <mat-icon>vpn_key</mat-icon> Change Password\n          </button>\n  \n          <button mat-menu-item (click)=\"logout()\">\n            <mat-icon>power_settings_new</mat-icon> Logout\n          </button>\n        </mat-menu>\n        <span class=\"username\">{{ user_data.distributorname }} </span>\n        <button mat-icon-button [matMenuTriggerFor]=\"appMenu\">\n          <span class=\"user_profile\">\n            <mat-icon>account_circle</mat-icon>\n            <i class=\"material-icons\">\n              keyboard_arrow_down\n            </i>\n          </span>\n        </button>\n      </mat-card-content>\n    </mat-card-content>\n  </mat-toolbar>\n  <!-- end header -->";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor-group/doctor-group-dashboard/doctor-group-dashboard.component.html":
  /*!********************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor-group/doctor-group-dashboard/doctor-group-dashboard.component.html ***!
    \********************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsDoctorGroupDoctorGroupDashboardDoctorGroupDashboardComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<app-doctor-group-header></app-doctor-group-header>\n\n<mat-card class=\"admin_wrapper\">\n\n  <mat-card-content class=\"content_wrapper\">\n\n    <mat-card-content class=\"itemsection\">\n      <span class=\"icon\">\n        <img src=\"../../../../assets/images/billerIcon.png\">\n      </span>\n      <span class=\"counteer\">\n        <span class=\"counter_with_tool\">\n          <h4 class=\"dataCount\">{{ allResolveData.billerCount }}</h4>\n          <span class=\"tolTip\">\n            <a mat-raised-button #NumberofBillers=\"matTooltip\" matTooltip=\"Data listed for the total number of billers registered under the doctor group admin.\" matTooltipPosition=\"above\"\n              aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n            </a>\n            <a mat-button (click)=\"NumberofBillers.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n              <span class=\"material-icons\"> help_outline </span>\n            </a>\n          </span>\n\n        </span>\n      </span>\n      <span class=\"button_wrapper\">\n        <p class=\"doctorNumber\">Total Number of<br> Billers</p>\n        <button mat-button [routerLink]=\"['/doctor-group/biller-management']\">View Details</button>\n      </span>\n    </mat-card-content>\n\n    <mat-card-content class=\"itemsection\">\n      <span class=\"icon\">\n        <img src=\"../../../../assets/images/techIcon.png\">\n      </span>\n      <span class=\"counteer\">\n        <span class=\"counter_with_tool\">\n          <h4 class=\"dataCount\">{{ allResolveData.techCount }}</h4>\n          <span class=\"tolTip\">\n            <a mat-raised-button #NumberofTechs=\"matTooltip\" matTooltip=\"Data listed for the total number of technicians registered under the doctor group admin.\n            \" matTooltipPosition=\"above\"\n              aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n            </a>\n            <a mat-button (click)=\"NumberofTechs.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n              <span class=\"material-icons\"> help_outline </span>\n            </a>\n          </span>\n\n        </span>\n      </span>\n      <span class=\"button_wrapper\">\n        <p class=\"doctorNumber\">Total Number of <br>Techs</p>\n        <button mat-flat-button [routerLink]=\"['/doctor-group/tech-management']\">View Details</button>\n      </span>\n    </mat-card-content>\n\n    <mat-card-content class=\"itemsection\">\n      <span class=\"icon\">\n        <img src=\"../../../../assets/images/doctorOfficeIcon.png\">\n      </span>\n      <span class=\"counteer\">\n        <span class=\"counter_with_tool\">\n          <h4 class=\"dataCount\">{{ allResolveData.doctorOfficeCount }}</h4>\n          <span class=\"tolTip\">\n            <a mat-raised-button #NoDoctorsOffice=\"matTooltip\" matTooltip=\"Data listed for the total number of doctor’s office registered under the doctor group admin.\" matTooltipPosition=\"above\"\n              aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n            </a>\n            <a mat-button (click)=\"NoDoctorsOffice.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n              <span class=\"material-icons\"> help_outline </span>\n            </a>\n          </span>\n\n        </span>\n      </span>\n      <span class=\"button_wrapper\">\n        <p class=\"doctorNumber\">Total Number of <br>Doctor's Office</p>\n        <button mat-flat-button [routerLink]=\"['/doctor-group/doctor-office-management']\">View Details</button>\n      </span>\n    </mat-card-content>\n\n  </mat-card-content>\n\n\n  <!-- Doctor occide related -->\n  <mat-card-content class=\"content_wrapper\">\n\n    <mat-card-content class=\"itemsection\">\n      <span class=\"icon\">\n        <img src=\"../../../../assets/images/totalDoctorIcon.png\">\n      </span>\n      <span class=\"counteer\">\n        <span class=\"counter_with_tool\">\n          <h4 class=\"dataCount\">{{ allResolveData.doctorsCount }}</h4>\n          <span class=\"tolTip\">\n            <a mat-raised-button #TotalDrs=\"matTooltip\" matTooltip=\"Data listed for the total number of doctors registered under the doctor group admin.\" matTooltipPosition=\"above\"\n              aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n            </a>\n            <a mat-button (click)=\"TotalDrs.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n              <span class=\"material-icons\"> help_outline </span>\n            </a>\n          </span>\n\n        </span>\n      </span>\n      <span class=\"button_wrapper\">\n        <p class=\"doctorNumber\">Total Number of <br>Doctors</p>\n        <button mat-flat-button [routerLink]=\"['/doctor-group/doctor-management']\">View Details</button>\n      </span>\n    </mat-card-content>\n\n  </mat-card-content>\n\n\n  <mat-card-content class=\"admin_superbillsection superbillerContainer\">\n    <h1>Physician Report and Super Bills</h1>\n    <mat-card-content class=\"biller_wrapper\">\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon1.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total Number of <br>\n            Reports Added\n          </p>\n          <span class=\"counter_with_tool\">\n            <h2>{{ allResolveData.reportsAddedCount }}</h2>\n            <!-- tool tip -->\n            <span class=\"tolTip\">\n              <a mat-raised-button #tnrAdded=\"matTooltip\"\n                matTooltip=\"The data listed for the total number of reports added by the biller\"\n                matTooltipPosition=\"above\" aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n              </a>\n              <a mat-button (click)=\"tnrAdded.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n                <span class=\"material-icons\"> help_outline </span>\n              </a>\n            </span>\n          </span>\n          \n         \n          <button mat-flat-button (click)=\"viewAllButton('Total Number of Reports Added')\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon2.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          \n          <p>Total Number of <br>\n            Report Processed\n          </p>\n          \n          <span class=\"counter_with_tool\">\n            <h2>{{ allResolveData.reportProcessedCount }}</h2>\n            <!-- tool tip -->\n            <span class=\"tolTip\">\n              <a mat-raised-button #tnrProcessed=\"matTooltip\"\n                matTooltip=\"The data listed for the total number of reports processed by the system.\"\n                matTooltipPosition=\"above\" aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n              </a>\n              <a mat-button (click)=\"tnrProcessed.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n                <span class=\"material-icons\"> help_outline </span>\n              </a>\n            </span>\n          </span>\n          <button mat-flat-button (click)=\"viewAllButton('Total Number of Report Processed')\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon3.png\">\n          </mat-card-content>\n        </span>\n        <span class=\"container_wrapper\">\n          <p>Total Number of <br>\n            Report Signed\n          </p>\n\n          <span class=\"counter_with_tool\">\n            <h2> {{ allResolveData.reportSignedCount }} </h2>\n            <!-- tool tip -->\n            <span class=\"tolTip\">\n              <a mat-raised-button #tnrReportsign=\"matTooltip\"\n                matTooltip=\"the data listed for the total number of reports signed by the doctor.\"\n                matTooltipPosition=\"above\" aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n              </a>\n              <a mat-button (click)=\"tnrReportsign.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n                <span class=\"material-icons\"> help_outline </span>\n              </a>\n            </span>\n          </span>\n\n        \n          <button mat-flat-button (click)=\"viewAllButton('Total Number of Report Signed')\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon4.png\">\n          </mat-card-content>\n        </span>\n        <span class=\"container_wrapper\">\n          <p> Sent to <br>\n            Biller\n          </p> \n        \n          <span class=\"counter_with_tool\">\n            <h2> {{ allResolveData.sendTobBillerCount }} </h2>\n            <!-- tool tip -->\n            <span class=\"tolTip\">\n              <a mat-raised-button #sentTobiller=\"matTooltip\"\n                matTooltip=\"The data listed for the total number of reports signed by the doctor and sent to the biller.\"\n                matTooltipPosition=\"above\" aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n              </a>\n              <a mat-button (click)=\"sentTobiller.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n                <span class=\"material-icons\"> help_outline </span>\n              </a>\n            </span>\n          </span>\n          <button mat-flat-button (click)=\"viewAllButton('Sent to Biller')\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon4.png\">\n          </mat-card-content>\n        </span>\n        <span class=\"container_wrapper\">\n          <p> Reports Downloaded </p>\n          \n          <span class=\"counter_with_tool\">\n            <h2> {{ allResolveData.sendTobBillerCount }} </h2>\n            <!-- tool tip -->\n            <span class=\"tolTip\">\n              <a mat-raised-button #reportsDownloaded=\"matTooltip\"\n                matTooltip=\"The data listed for the total number of reports downloaded by the biller.\"\n                matTooltipPosition=\"above\" aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n              </a>\n              <a mat-button (click)=\"reportsDownloaded.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n                <span class=\"material-icons\"> help_outline </span>\n              </a>\n            </span>\n          </span>\n\n          <button mat-flat-button (click)=\"viewAllButton('Reports Downloaded')\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon4.png\">\n          </mat-card-content>\n        </span>\n        <span class=\"container_wrapper\">\n          <p> Reports Pending Sign </p>\n          \n\n          <span class=\"counter_with_tool\">\n            <h2> {{ allResolveData.reportsPendingSingCount }} </h2>\n            <!-- tool tip -->\n            <span class=\"tolTip\">\n              <a mat-raised-button #reportsPending=\"matTooltip\"\n                matTooltip=\"The data listed for the total number of p[atient reports that are yet to be signed by the doctor.\"\n                matTooltipPosition=\"above\" aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n              </a>\n              <a mat-button (click)=\"reportsPending.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n                <span class=\"material-icons\"> help_outline </span>\n              </a>\n            </span>\n          </span>\n          <button mat-flat-button (click)=\"viewAllButton('Reports Pending Sing')\">view all</button>\n        </span>\n      </mat-card-content>\n    </mat-card-content>\n  </mat-card-content>\n\n\n  <!-- Share doctor sign up link -->\n  <app-doctor-signup-share [shareDetails]=\"shareDetails\"></app-doctor-signup-share>\n\n\n  <!-- All Data listing start here(default listing) -->\n  <mat-card-content class=\"table_wrapper\">\n\n    <mat-toolbar class=\"top_header\">\n      <h2> {{ htmlText.headerText }} </h2>\n      <!-- <span class=\"wrappp_R\">\n        <button class=\"add_new tooltip\" mat-button routerLink=\"/admin/patient-management/add\" matTooltip=\"Add Report\"\n          matTooltipPosition=\"above\">\n          <span class=\"tooltiptext\"> Add Report </span>\n          <i class=\"material-icons\">add</i> Add Report Manually\n        </button>\n\n\n        <button class=\"add_new tooltip\" mat-button matTooltipPosition=\"above\" matTooltip=\"ReportRefresh Dashboard\">\n          <span class=\"tooltiptext\"> Refresh Dashboard </span> \n          <i class=\"material-icons\">cached</i>\n        </button>\n      </span> -->\n    </mat-toolbar>\n\n\n    <mat-card-content class=\"tablewrapper admin_dashboard\">\n      <!-- table -->\n      <lib-listing class=\"DataTable\" *ngIf=\"allBillerData.length>0\" [datasource]=\"allBillerData\"\n        [skip]=\"allUserData_skip\" [modify_header_array]=\"allUserData_modify_header\"\n        [detail_skip_array]=\"previewModal_detail_skip\" [apiurl]=\"apiUrl\" [sourcedata]=\"tableName\" [editroute]=\"editUrl\"\n        [jwttoken]=\"jwtToken\" [statusarr]=\"status\" [updateendpoint]=\"UpdateEndpoint\" [deleteendpoint]=\"deleteEndpoint\"\n        [date_search_endpoint]=\"SearchingEndpoint\" [date_search_source]=\"SearchingSourceName\"\n        [search_settings]=\"search_settings\" [sortdata]=\"sortdata\" [datacollection]=\"datacollection\" [libdata]=\"libdata\"\n        [date_search_source_count]=\"billerData_count\" [limitcond]=\"limitcond\">\n      </lib-listing>\n    </mat-card-content>\n\n\n  </mat-card-content>\n</mat-card>\n\n<app-doctor-group-footer></app-doctor-group-footer>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor-group/doctor-group-footer/doctor-group-footer.component.html":
  /*!**************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor-group/doctor-group-footer/doctor-group-footer.component.html ***!
    \**************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsDoctorGroupDoctorGroupFooterDoctorGroupFooterComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<mat-card-content class=\"footer_section\">\n    <span class=\"footer_content\">\n  \n      <mat-card-content class=\"link\">\n        <a href=\"\">Privacy Policy</a>\n        <a href=\"\"> Terms & conditions</a>\n      </mat-card-content>\n      <p>© Copyright {{ htmlData.year }} Advanced Wellness Solutions- All Rights Reserved</p>\n    </span>\n  </mat-card-content>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor-group/doctor-group-header/doctor-group-header.component.html":
  /*!**************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor-group/doctor-group-header/doctor-group-header.component.html ***!
    \**************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsDoctorGroupDoctorGroupHeaderDoctorGroupHeaderComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<ng-container *ngIf=\"main_user.flag == true\">\n  <button mat-menu-item (click)=\"returnToAdmin()\">\n    <mat-icon>power_settings_new</mat-icon> {{ main_user.buttonText }}\n  </button>\n</ng-container>\n<mat-toolbar class=\"techdashboard_header\" [ngClass]=\"{'sticky' : isSticky}\">\n    <mat-card-content class=\"header_wrapper\">\n      <span class=\"logo_wrapper\" [routerLink]=\"[ '/doctor-group/dashboard' ]\">\n        <img src=\"../../../assets/images/logo.png\">\n      </span>\n  \n      <button mat-flat-button (click)=\"menuFunction()\" class=\"togle_menu\"><i class=\"material-icons\"> menu </i></button>\n      <mat-card-content class=\"quotation\" [ngClass]=\"status ? 'success' : 'danger'\">\n        <mat-nav-list>\n          <a mat-list-item routerLinkActive=\"active\" [routerLink]=\"['/doctor-group/dashboard']\"> Dashboard </a>\n          \n          <a mat-list-item [routerLink]=\"['/doctor-group/doctor-management']\" routerLinkActive=\"active\"> Manage Doctor </a>\n          \n          <a mat-list-item [routerLink]=\"['/doctor-group/biller-management']\" routerLinkActive=\"active\"> Manage Biller </a>\n\n          <a mat-list-item [routerLink]=\"['/doctor-group/doctor-office-management']\" routerLinkActive=\"active\"> Manage Doctor Office </a>\n\n          <a mat-list-item [routerLink]=\"['/doctor-group/tech-management']\" routerLinkActive=\"active\"> Manage Tech </a>\n          \n          <a mat-list-item [routerLink]=\"['/doctor-group/faq']\" routerLinkActive=\"active\"> FAQ </a>\n          <a mat-list-item [routerLink]=\"['/doctor-group/reports-details']\" routerLinkActive=\"active\"> CPT Validate Reports </a>\n        </mat-nav-list>\n      </mat-card-content>\n  \n  \n      <mat-card-content class=\"profile_section\">\n        <mat-menu #appMenu=\"matMenu\">\n          <button mat-menu-item [routerLink]=\"['/doctor-group/account-settings']\">\n            <mat-icon>account_circle</mat-icon> Account Settings\n          </button>\n  \n          <button mat-menu-item [routerLink]=\"['/doctor-group/account-settings/change-password']\">\n            <mat-icon>vpn_key</mat-icon> Change Password\n          </button>\n  \n          <button mat-menu-item (click)=\"logout()\">\n            <mat-icon>power_settings_new</mat-icon> Logout\n          </button>\n        </mat-menu>\n        <span class=\"username\">{{ user_data.groupname }} </span>\n        <button mat-icon-button [matMenuTriggerFor]=\"appMenu\">\n          <span class=\"user_profile\">\n            <mat-icon>account_circle</mat-icon>\n            <i class=\"material-icons\">\n              keyboard_arrow_down\n            </i>\n          </span>\n        </button>\n      </mat-card-content>\n    </mat-card-content>\n  </mat-toolbar>\n  <!-- end header -->";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor-office/add-patient/add-patient-manually/add-patient-manually.component.html":
  /*!*****************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor-office/add-patient/add-patient-manually/add-patient-manually.component.html ***!
    \*****************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsDoctorOfficeAddPatientAddPatientManuallyAddPatientManuallyComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<app-doctor-office-header></app-doctor-office-header>\n\n<!-- Header Start -->\n\n<app-admin-header *ngIf=\"headerFlag == 'admin'\"></app-admin-header>\n\n<app-biller-header *ngIf=\"headerFlag == 'biller'\"></app-biller-header>\n\n<app-tech-header *ngIf=\"headerFlag == 'tech'\"></app-tech-header>\n\n<app-doctor-header *ngIf=\"headerFlag == 'doctor'\"></app-doctor-header>\n\n<!-- Header End -->\n\n<mat-progress-bar *ngIf=\"loader\" mode=\"indeterminate\"></mat-progress-bar>\n\n\n<span class=\"add_header\">\n    <span class=\"bradcrumb\"><a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Add Patient</span>\n</span>\n<!-- End header with add button -->\n\n<mat-card class=\"add_form\">\n    <h2>Add Record</h2>\n    <mat-card-content class=\"form_wrapper\">\n<!--        <lib-showform class=\"adptient_manually\" *ngIf=\"formdata !=null\"-->\n<!--                  [formdata]=\"formdata\"-->\n<!--                  [formfieldrefresh]=\"formfieldrefresh\"-->\n<!--                  [formfieldrefreshdata]=\"formfieldrefreshdata\"-->\n<!--                  (onFormFieldChange)=\"listenFormFieldChange($event)\"-->\n<!--    > </lib-showform>-->\n\n      <lib-book-appointment-form class=\"book-appointment\" *ngIf=\"configData.patientInfoFormFields.length > 0\"\n                                 [configData]=\"configData\">\n      </lib-book-appointment-form>\n    </mat-card-content>\n</mat-card>\n\n\n\n\n\n<app-admin-footer></app-admin-footer>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor-office/doctor-office-account-settings/doctor-office-account-settings.component.html":
  /*!*************************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor-office/doctor-office-account-settings/doctor-office-account-settings.component.html ***!
    \*************************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsDoctorOfficeDoctorOfficeAccountSettingsDoctorOfficeAccountSettingsComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<app-doctor-office-header></app-doctor-office-header>\n\n<span class=\"add_header\">\n    <span class=\"bradcrumb\">\n        <a [routerLink]=\"['/doctor-office/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Account Setting</span>\n</span>\n<!-- End header with add button -->\n\n\n<!-- End header with add button -->\n\n<mat-card class=\"add_form\">\n    <h2>Doctor Office Account Information</h2>\n    <mat-card-content class=\"form_wrapper\">\n\n        <form [formGroup]=\"accountForm\" autocomplete=\"off\">\n\n\n            <mat-form-field>\n                <mat-label>Date:</mat-label>\n                <input matInput formControlName=\"date\" [readonly]=\"true\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <mat-label>Center Name:</mat-label>\n                <input matInput formControlName=\"centername\">\n                <mat-error *ngIf=\"!accountForm.controls['centername'].valid\n          && accountForm.controls['centername'].errors.required\">Center Name is required.</mat-error>\n            </mat-form-field>\n\n\n            <mat-form-field>\n                <mat-label>Email:</mat-label>\n                <input matInput formControlName=\"email\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <mat-label>Phone:</mat-label>\n                <input matInput formControlName=\"phone\">\n                <mat-error *ngIf=\"!accountForm.controls['phone'].valid\n          && accountForm.controls['phone'].errors.required\">Phone is required.</mat-error>\n            </mat-form-field>\n\n            <mat-form-field>\n                <mat-label>Address:</mat-label>\n                <input matInput formControlName=\"address\">\n                <mat-error *ngIf=\"!accountForm.controls['address'].valid\n          && accountForm.controls['address'].errors.required\">Address is required.</mat-error>\n            </mat-form-field>\n\n            <mat-form-field class=\"parent_cat\" appearance=\"fill\">\n                <mat-label>State</mat-label>\n                <mat-select formControlName=\"state\" (selectionChange)=\"getCity($event.value);\">\n                    <mat-option [value]=0>Select a category</mat-option>\n                    <mat-option *ngFor=\"let state of states;\" value=\"{{ state.name }}\">{{ state.name }}</mat-option>\n                </mat-select>\n            </mat-form-field>\n\n\n\n            <mat-form-field class=\"parent_cat\" appearance=\"fill\">\n                <mat-label>City</mat-label>\n                <mat-select formControlName=\"city\">\n                    <mat-option value=0>Select a city</mat-option>\n                    <mat-option *ngFor=\"let city of cities;\" value=\"{{ city }}\">{{ city }}</mat-option>\n                </mat-select>\n            </mat-form-field>\n\n\n            <mat-form-field>\n                <mat-label>ZIP:</mat-label>\n                <input matInput formControlName=\"zip\">\n                <mat-error *ngIf=\"!accountForm.controls['zip'].valid\n          && accountForm.controls['zip'].errors.required\">ZIP is required.</mat-error>\n            </mat-form-field>\n\n\n\n\n\n\n            <span class=\"submit_form\">\n                <button mat-flat-button type=\"button\" (click)=\"cancelRedirectToDashboard()\"> Cancel </button>\n                <button mat-flat-button type=\"submit\" (click)=\"onSubmit()\"\n                    [disabled]=\"!accountForm.valid\">Update</button>\n            </span>\n        </form>\n\n    </mat-card-content>\n\n</mat-card>\n\n<app-doctor-office-footer></app-doctor-office-footer>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor-office/doctor-office-change-password/doctor-office-change-password.component.html":
  /*!***********************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor-office/doctor-office-change-password/doctor-office-change-password.component.html ***!
    \***********************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsDoctorOfficeDoctorOfficeChangePasswordDoctorOfficeChangePasswordComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<app-doctor-office-header></app-doctor-office-header>\n\n<!-- Header Start -->\n\n<app-admin-header *ngIf=\"headerFlag == 'admin'\"></app-admin-header>\n\n<app-biller-header *ngIf=\"headerFlag == 'biller'\"></app-biller-header>\n\n<app-tech-header *ngIf=\"headerFlag == 'tech'\"></app-tech-header>\n\n<app-doctor-header *ngIf=\"headerFlag == 'doctor'\"></app-doctor-header>\n\n<!-- Header End -->\n\n<mat-progress-bar *ngIf=\"loader\" mode=\"indeterminate\"></mat-progress-bar>\n\n\n<span class=\"add_header\">\n    <span class=\"bradcrumb\"><a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Change Password</span>\n</span>\n<!-- End header with add button -->\n\n<mat-card class=\"add_form\">\n    <h2>Change Password</h2>\n    <mat-card-content class=\"form_wrapper\">\n        <form class=\"example-form\" autocomplete=\"off\" [formGroup]=\"doctorOfficeChangePasswordForm\">\n\n            <!-- Old Password -->\n            <mat-form-field class=\"form-group\">\n                <input matInput placeholder=\"Type Current Password\" type=\"password\" formControlName=\"old_pwd\">\n                <mat-error *ngIf=\"!doctorOfficeChangePasswordForm.controls['old_pwd'].valid\n                && doctorOfficeChangePasswordForm.controls['old_pwd'].errors.required\">old_pwd is required.</mat-error>\n\n            </mat-form-field>\n            <!-- New Password -->\n            <mat-form-field class=\"form-group\">\n                <input matInput placeholder=\"Type New Password\" type=\"password\" formControlName=\"new_pwd\">\n                <mat-error *ngIf=\"!doctorOfficeChangePasswordForm.controls['new_pwd'].valid\n                && doctorOfficeChangePasswordForm.controls['new_pwd'].errors.required\">password is required.\n                </mat-error>\n            </mat-form-field>\n\n            <!-- Confirm Password -->\n            <mat-form-field class=\"form-group\">\n                <input matInput placeholder=\"Retype New Password\" type=\"password\" formControlName=\"confirm_new_pwd\">\n          </mat-form-field>\n\n            <span class=\"submit_form\">\n                <button mat-flat-button type=\"button\"> Cancel </button>\n                <button mat-flat-button type=\"submit\" (click)=\"changePassword() \"> Change Password </button>\n            </span>\n        </form>\n    </mat-card-content>\n\n</mat-card>\n<app-admin-footer></app-admin-footer>\n\n\n\n<app-doctor-office-footer></app-doctor-office-footer>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor-office/doctor-office-dashboard/doctor-office-dashboard.component.html":
  /*!***********************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor-office/doctor-office-dashboard/doctor-office-dashboard.component.html ***!
    \***********************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsDoctorOfficeDoctorOfficeDashboardDoctorOfficeDashboardComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<app-doctor-office-header></app-doctor-office-header>\n\n<mat-card class=\"admin_wrapper\">\n\n  <mat-card-content class=\"admin_superbillsection\">\n    <h1>Physician Report Process Status</h1>\n    <mat-card-content class=\"biller_wrapper\">\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon1.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p> Total Appointments<br> Booked </p>\n          <h2> {{ htmlText.allResolveData.totalAppointmentsBookedCount }} </h2>\n          <button mat-flat-button (click)=\"viewReportProcessData('Total Appointments Booked')\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon2.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total Appointments <br> Completed </p>\n          <h2> {{ htmlText.allResolveData.totalAppointmentsCompletedCount }} </h2>\n          <button mat-flat-button (click)=\"viewReportProcessData('Total Appointments Completed')\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item \">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon2.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total Appointments<br> Pending\n          </p>\n          <h2> {{ htmlText.allResolveData.totalAppointmentsPendingCount }} </h2>\n          <button mat-flat-button (click)=\"viewReportProcessData('Total Appointments Pending')\">view all</button>\n        </span>\n      </mat-card-content>\n\n    </mat-card-content>\n  </mat-card-content>\n\n  <div class=\"tablewrapper admin_dashboard\">\n    <mat-toolbar class=\"top_header\">\n      <h2> Patient Records </h2>\n      <span class=\"wrappp_R\">\n      </span>\n    </mat-toolbar>\n      \n    <!-- table -->\n    <lib-listing\n      class=\"DataTable\" \n      *ngIf=\"allBillerData.length>0\" \n      [datasource]=\"allBillerData\" \n      [skip]=\"allUserData_skip\"\n      [modify_header_array]=\"allUserData_modify_header\" \n      [detail_skip_array]=\"previewModal_detail_skip\" \n      [apiurl]=\"apiUrl\"\n      [sourcedata]=\"tableName\" \n      [editroute]=\"editUrl\" \n      [jwttoken]=\"jwtToken\" \n      [statusarr]=\"status\"\n      [updateendpoint]=\"UpdateEndpoint\" \n      [deleteendpoint]=\"deleteEndpoint\" \n      [date_search_endpoint]=\"SearchingEndpoint\"\n      [date_search_source]=\"SearchingSourceName\" \n      [search_settings]=\"search_settings\" \n      [sortdata]=\"sortdata\" \n      [datacollection]=\"datacollection\" \n      [libdata]=\"libdata\" \n      [date_search_source_count]=\"billerData_count\" \n      [limitcond]=\"limitcond\" >\n    </lib-listing>\n\n  </div>\n\n<!--  <lib-booked-event-listing class=\"calendar_data\" [configData]=\"configData\"></lib-booked-event-listing>-->\n  <!-- Booked Events Listing -->\n  <!-- <mat-tab-group> -->\n    <!-- Upcoming events -->\n    <!-- <mat-tab label=\"Upcoming events\">\n      <app-upcoming-appoinments></app-upcoming-appoinments>\n    </mat-tab> -->\n    <!-- Past events -->\n    <!-- <mat-tab label=\"Past Events\">\n      <app-past-appoinments></app-past-appoinments>\n    </mat-tab>\n  </mat-tab-group> -->\n\n</mat-card>\n\n<app-admin-footer></app-admin-footer>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor-office/doctor-office-footer/doctor-office-footer.component.html":
  /*!*****************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor-office/doctor-office-footer/doctor-office-footer.component.html ***!
    \*****************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsDoctorOfficeDoctorOfficeFooterDoctorOfficeFooterComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<mat-card-content class=\"footer_section\">\n  <span class=\"footer_content\">\n\n    <mat-card-content class=\"link\">\n      <a href=\"\">Privacy Policy</a>\n      <a href=\"\"> Terms & conditions</a>\n    </mat-card-content>\n    <p>© Copyright {{ htmlData.year }} Advanced Wellness Solutions- All Rights Reserved</p>\n  </span>\n</mat-card-content>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor-office/doctor-office-header/doctor-office-header.component.html":
  /*!*****************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor-office/doctor-office-header/doctor-office-header.component.html ***!
    \*****************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsDoctorOfficeDoctorOfficeHeaderDoctorOfficeHeaderComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<ng-container *ngIf=\"main_user.flag == true\">\n  <button mat-menu-item (click)=\"returnToAdmin()\">\n    <mat-icon>power_settings_new</mat-icon> {{ main_user.buttonText }}\n  </button>\n</ng-container>\n<mat-toolbar class=\"techdashboard_header\" [ngClass]=\"{'sticky' : isSticky}\">\n  <mat-card-content class=\"header_wrapper\">\n    <span class=\"logo_wrapper\" [routerLink]=\"[ '/biller/dashboard' ]\">\n      <img src=\"../../../assets/images/logo.png\">\n    </span>\n\n    <mat-card-content *ngIf=\"user_data.headerFlag != 'undefined'\" class=\"quotation\">\n      <button mat-flat-button (click)=\"menuFunction()\" class=\"togle_menu\">\n        <i class=\"material-icons\"> menu </i>\n      </button>\n\n      <mat-card-content class=\"quotation\" [ngClass]=\"toggleStatus ? 'success' : 'danger'\">\n        <mat-nav-list>\n          <a mat-list-item routerLinkActive=\"active\" [routerLink]=\"['/doctor-office/dashboard']\"> Dashboard </a>\n          <a mat-list-item [routerLink]=\"['/doctor-office/manage-appointments']\" routerLinkActive=\"active\"> Manage\n            Appointments </a>\n\n          <a mat-list-item routerLinkActive=\"active\" [matMenuTriggerFor]=\"CreatePatientMenu\"> Create Patient <i class=\"material-icons\">\n            keyboard_arrow_down\n          </i> </a>\n\n          <a mat-list-item [routerLink]=\"['/doctor-office/faq']\" routerLinkActive=\"active\"> FAQ </a>\n          <!-- <a mat-list-item [routerLink]=\"['/doctor-office/reports-details']\" routerLinkActive=\"active\"> CPT Validate Reports </a> -->\n        </mat-nav-list>\n      </mat-card-content>   \n    </mat-card-content>\n\n    <mat-menu #CreatePatientMenu=\"matMenu\">\n      <button mat-menu-item [routerLink]=\"['/doctor-office/create-patient/add-patient-manually']\"> Add Manually\n      </button>\n      <button mat-menu-item [routerLink]=\"['/doctor-office/manage-appointments/book-appoinment-now']\"  > Book Appointment </button>\n    </mat-menu>\n\n    <mat-card-content class=\"profile_section\">\n      <mat-menu #appMenu=\"matMenu\">\n        <button mat-menu-item [routerLink]=\"['/doctor-office/account-settings']\">\n          <mat-icon>account_circle</mat-icon> Account Settings\n        </button>\n\n        <button mat-menu-item [routerLink]=\"['/doctor-office/account-settings/change-password']\">\n          <mat-icon>vpn_key</mat-icon> Change Password\n        </button>\n\n        <ng-container *ngIf = \"flag == 0\">\n          <button mat-menu-item (click)=\"logout()\">\n            <mat-icon>power_settings_new</mat-icon> Logout\n          </button>\n        </ng-container>\n        <ng-container *ngIf = \"flag == 1\">\n          <button mat-menu-item [routerLink]=\"['/admin/dashboard']\">\n            <mat-icon>vpn_key</mat-icon> Return to My Account\n          </button>\n        </ng-container>\n      </mat-menu>\n\n      <span class=\"username\">{{ user_data.center_name }}</span>\n      <button mat-icon-button [matMenuTriggerFor]=\"appMenu\">\n        <span class=\"user_profile\">\n          <mat-icon>account_circle</mat-icon>\n          <i class=\"material-icons\">\n            keyboard_arrow_down\n          </i>\n        </span>\n      </button>\n\n    </mat-card-content>\n  </mat-card-content>\n</mat-toolbar>\n<!-- end header -->";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor-office/manage-appointments/appoinments-listing/appoinments-listing.component.html":
  /*!***********************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor-office/manage-appointments/appoinments-listing/appoinments-listing.component.html ***!
    \***********************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsDoctorOfficeManageAppointmentsAppoinmentsListingAppoinmentsListingComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<app-doctor-office-header></app-doctor-office-header>\n\n\n<mat-card class=\"admin_wrapper\">\n\n  <!-- patainet report section -->\n  <mat-card-content class=\"table_wrapper \">\n\n    <mat-toolbar class=\"top_header\">\n      <h2>{{ htmlText.headerText }}</h2>\n      <button class=\"add_new\" mat-button routerLink=\"/doctor-office/manage-appointments/book-appoinment-now\">Book\n        Appoinment Now</button>\n    </mat-toolbar>\n\n    <!--all dashboard data table start here-->\n<!--    <lib-booked-event-listing [configData]=\"configData\" class=\"calendar_data\"></lib-booked-event-listing>-->\n\n\n    <!-- Booked Events Listing -->\n    <mat-tab-group>\n      <!-- Upcoming events -->\n      <mat-tab label=\"Upcoming events\">\n        <app-upcoming-appoinments [searchByDoctorValues]=\"doctors\"></app-upcoming-appoinments>\n      </mat-tab>\n      <!-- Past events -->\n      <mat-tab label=\"Past Events\">\n        <app-past-appoinments [searchByDoctorValues]=\"doctors\"></app-past-appoinments>\n      </mat-tab>\n    </mat-tab-group>\n\n  </mat-card-content>\n\n</mat-card>\n\n\n<app-admin-footer></app-admin-footer>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor-office/manage-appointments/book-appoinment-now/book-appoinment-now.component.html":
  /*!***********************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor-office/manage-appointments/book-appoinment-now/book-appoinment-now.component.html ***!
    \***********************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsDoctorOfficeManageAppointmentsBookAppoinmentNowBookAppoinmentNowComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<app-doctor-office-header></app-doctor-office-header>\n\n\n\n<mat-card class=\"admin_wrapper\">\n  <button mat-button (click)=\"openDialog()\" class=\"changeBTN\">Change Doctor</button>\n  <mat-label *ngIf=\"configData.responseData.length == 0 && !loading\">No slot found for this tech</mat-label>\n\n  <lib-view-slot-user class=\"calenderView\" [configData]=\"configData\"\n                      *ngIf=\"configData.responseData.length > 0 && configData.patientInfoFormFields.length > 0\"></lib-view-slot-user>\n\n</mat-card>\n\n<app-admin-footer></app-admin-footer>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor-office/manage-appointments/book-appoinment-now/choose-doctor.html":
  /*!*******************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor-office/manage-appointments/book-appoinment-now/choose-doctor.html ***!
    \*******************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsDoctorOfficeManageAppointmentsBookAppoinmentNowChooseDoctorHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<h1 mat-dialog-title>Choose your doctor from below</h1>\n<div mat-dialog-content>\n<!--  <p>What's your favorite animal?</p>-->\n  <mat-form-field>\n    <mat-label>Select doctor</mat-label>\n    <mat-select [(ngModel)]=\"doctor\" (selectionChange)=\"onChangeDoctor($event.value)\">\n      <mat-option *ngFor=\"let doctor of doctorList\" [value]=\"{doctor_id: doctor._id, parent_id: doctor.parent_id, parent_type: doctor.parent_type}\">\n        {{doctor.firstname + ' ' + doctor.lastname}}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n\n\n  <!--\n  <mat-form-field>\n    <mat-label>Select tech</mat-label>\n    <mat-select [(ngModel)]=\"selectedIds.tech_id\">\n      <mat-option *ngFor=\"let tech of techList\" [value]=\"tech.value\">\n        {{tech.text}}\n      </mat-option>\n    </mat-select>\n    <mat-progress-bar mode=\"buffer\" *ngIf=\"loadingTech\"></mat-progress-bar>\n  </mat-form-field>\n  -->\n</div>\n<div mat-dialog-actions>\n<!--  <button mat-button (click)=\"onNoClick()\">No Thanks</button>-->\n  <button mat-button [mat-dialog-close]=\"selectedIds\" cdkFocusInitial>Ok</button>\n</div>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor/doctor-dashboard/doctor-dashboard.component.html":
  /*!**************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor/doctor-dashboard/doctor-dashboard.component.html ***!
    \**************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsDoctorDoctorDashboardDoctorDashboardComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<app-doctor-header></app-doctor-header>\n\n<mat-card class=\"admin_wrapper\">\n\n  <section class=\"mediaDoc\" *ngIf=\"authData.parent_type != 'admin'\">\n    <mat-card-title class=\"testingDoc\"> Media Deck of Testing Services </mat-card-title>\n    <mat-card-content class=\"mediaDoc_wrapper\">\n      <span class=\"new_wrapper_left\">\n        <mat-card-content class=\"media_inner_items\">\n          <mat-card-content class=\"image_wrapper\">\n            <img src=\"../../../../assets/images/doctor-Dashboard-Banner.jpg\">\n          </mat-card-content>\n          <a mat-button class=\"action_button\" href=\"../../../../assets/Doctors Resources/DCS doctor's deck.pdf\"\n            target=\"_blank\"> download </a>\n        </mat-card-content>\n      </span>\n      <span class=\"new_wrapper_right\">\n        <mat-card-content class=\"media_inner_items\">\n\n          <mat-card-content class=\"image_wrapper\">\n            <img src=\"../../../../assets/images/doctor-Dashboard-sampeltest.jpg\">\n          </mat-card-content>\n          <a mat-button class=\"action_button\" href=\"../../../../assets/Doctors Resources/AWSPhysiciansReport2019567.pdf\"\n            target=\"_blank\"> download </a>\n        </mat-card-content>\n\n        <mat-card-content class=\"media_inner_items\">\n          <mat-card-content class=\"image_wrapper\">\n            <img src=\"../../../../assets/images/doctor-Dashboard-Health-report.jpg\">\n          </mat-card-content>\n          <a mat-button class=\"action_button\"\n            href=\"../../../../assets/Doctors Resources/Clinical Quick Reference Guide.pdf\" target=\"_blank\"> download\n          </a>\n        </mat-card-content>\n      </span>\n\n    </mat-card-content>\n  </section>\n\n\n  <section class=\"quickRef\" *ngIf=\"authData.parent_type != 'admin'\">\n    <mat-card-title class=\"testingDoc\">Clinical Quick Reference Guide </mat-card-title>\n\n    <mat-card-content class=\"report_wrapper\">\n\n      <mat-card-content class=\"items_w\">\n        <mat-card-content class=\"icon_w\">\n          <img src=\"../../../../assets/images/clinicalReport1.jpg\">\n        </mat-card-content>\n\n        <mat-card-content class=\"name_wr\">\n          <span class=\"reportName\">Impact of Reduced Heart Rate Variability on Risk for\n            Cardiac Events</span>\n          <img src=\"../../../../assets/images/pdfIcon.jpg\">\n        </mat-card-content>\n\n        <a mat-button class=\"action_button\"\n          href=\"https://pece-doctor-pdf.s3.amazonaws.com/Impact_of_Reduced_Heart_Rate_Variability.pdf\"\n          target=\"_blank\"> download </a>\n      </mat-card-content>\n\n      <!-- https://pece-doctor-pdf.s3.amazonaws.com -->\n      <mat-card-content class=\"items_w\">\n        <mat-card-content class=\"icon_w\">\n          <img src=\"../../../../assets/images/clinicalReport2.jpg\">\n        </mat-card-content>\n\n        <mat-card-content class=\"name_wr\">\n          <span class=\"reportName\">Determination of age-related increases in largeartery stiffness by digital pulse\n            contour analysis</span>\n          <img src=\"../../../../assets/images/pdfIcon.jpg\">\n        </mat-card-content>\n\n        <a mat-button class=\"action_button\"\n          href=\"https://pece-doctor-pdf.s3.amazonaws.com/Independent_Determinants_of_Second_Derivative.pdf\" target=\"_blank\">\n          download</a>\n      </mat-card-content>\n\n      <mat-card-content class=\"items_w\">\n        <mat-card-content class=\"icon_w\">\n          <img src=\"../../../../assets/images/clinicalReport3.jpg\">\n        </mat-card-content>\n\n        <mat-card-content class=\"name_wr\">\n          <span class=\"reportName\">Role of Endothelial Dysfunction in Atherosclerosis</span>\n          <img src=\"../../../../assets/images/pdfIcon.jpg\">\n        </mat-card-content>\n\n        <a mat-button class=\"action_button\"\n          href=\"https://pece-doctor-pdf.s3.amazonaws.com/Role_of_Endothelial_Dysfunction_in_Atherosclerosis.pdf\"\n          target=\"_blank\"> download </a>\n      </mat-card-content>\n      <mat-card-content class=\"items_w\">\n        <mat-card-content class=\"icon_w\">\n          <img src=\"../../../../assets/images/clinicalReport4.jpg\">\n        </mat-card-content>\n\n        <mat-card-content class=\"name_wr\">\n          <span class=\"reportName\">Diabetes, Glucose, Insulin, and Heart Rate Variability</span>\n          <img src=\"../../../../assets/images/pdfIcon.jpg\">\n        </mat-card-content>\n\n        <a mat-button class=\"action_button\"\n          href=\"https://pece-doctor-pdf.s3.amazonaws.com/Diabetes_Glucose_Insulin_and_Heart.pdf\" target=\"_blank\">\n          download </a>\n      </mat-card-content>\n\n\n<!-- <test></test> -->\n\n\n\n      <mat-card-content class=\"items_w\">\n        <mat-card-content class=\"icon_w\">\n          <img src=\"../../../../assets/images/clinicalReport5.jpg\">\n        </mat-card-content>\n\n        <mat-card-content class=\"name_wr\">\n          <span class=\"reportName\">Diabetic Neuropathies: The Nerve Damageof Diabetes</span>\n          <img src=\"../../../../assets/images/pdfIcon.jpg\">\n        </mat-card-content>\n\n        <a mat-button class=\"action_button\"\n          href=\"https://pece-doctor-pdf.s3.amazonaws.com/AWS_Diabetic_Neuropathies.pdf\" target=\"_blank\"> download </a>\n      </mat-card-content>\n\n      <mat-card-content class=\"items_w\">\n        <mat-card-content class=\"icon_w\">\n          <img src=\"../../../../assets/images/clinicalReport6.jpg\">\n        </mat-card-content>\n\n        <mat-card-content class=\"name_wr\">\n          <span class=\"reportName\">Vitamin D Status, Autonomic Nervous SystemActivity, and Cardiometabolic Risk</span>\n          <img src=\"../../../../assets/images/pdfIcon.jpg\">\n        </mat-card-content>\n\n        <a mat-button class=\"action_button\"\n          href=\"https://pece-doctor-pdf.s3.amazonaws.com/Vitamin_D_Status_Autonomic_Nervous_System.pdf\"\n          target=\"_blank\"> download </a>\n      </mat-card-content>\n      <span class=\"viewMore\" [ngClass]=\"viewstatus ? 'show' : 'hide'\">\n        <mat-card-content class=\"items_w\">\n          <mat-card-content class=\"icon_w\">\n            <img src=\"../../../../assets/images/clinicalReport7.jpg\">\n          </mat-card-content>\n\n          <mat-card-content class=\"name_wr\">\n            <span class=\"reportName\">Assessment of Vascular Aging and\n              Atherosclerosis in Hypertensive Subjects:\n              Second Derivative of Photoplethysmogram\n              Versus Pulse Wave Velocity</span>\n            <img src=\"../../../../assets/images/pdfIcon.jpg\">\n          </mat-card-content>\n\n          <a mat-button class=\"action_button\"\n            href=\"https://pece-doctor-pdf.s3.amazonaws.com/Assessment_of_Vascular_Aging.pdf\" target=\"_blank\">\n            download\n          </a>\n        </mat-card-content>\n\n        <mat-card-content class=\"items_w\">\n          <mat-card-content class=\"icon_w\">\n            <img src=\"../../../../assets/images/clinicalReport8.jpg\">\n          </mat-card-content>\n\n          <mat-card-content class=\"name_wr\">\n            <span class=\"reportName\">Determination of age-related increases in large\n              artery stiffness by digital pulse contour analysis</span>\n            <img src=\"../../../../assets/images/pdfIcon.jpg\">\n          </mat-card-content>\n\n          <a mat-button class=\"action_button\"\n            href=\"https://pece-doctor-pdf.s3.amazonaws.com/Determination_of_age_related_increases.pdf\" target=\"_blank\">\n            download\n          </a>\n        </mat-card-content>\n        <mat-card-content class=\"items_w\">\n          <mat-card-content class=\"icon_w\">\n            <img src=\"../../../../assets/images/clinicalReport9.jpg\">\n          </mat-card-content>\n\n          <mat-card-content class=\"name_wr\">\n            <span class=\"reportName\">Diabetes: Sweat Response and\n              Heart Rate Variability During\n              Electrical Stimulation in Controls\n              and People With Diabetes</span>\n            <img src=\"../../../../assets/images/pdfIcon.jpg\">\n          </mat-card-content>\n\n          <a mat-button class=\"action_button\"\n            href=\"https://pece-doctor-pdf.s3.amazonaws.com/Diabetes_Sweat_Response_&_Heart_Rate_Variability.pdf\" target=\"_blank\"> download\n          </a>\n        </mat-card-content>\n\n        <mat-card-content class=\"items_w\">\n          <mat-card-content class=\"icon_w\">\n            <img src=\"../../../../assets/images/clinicalReport10.jpg\">\n          </mat-card-content>\n\n          <mat-card-content class=\"name_wr\">\n            <span class=\"reportName\">The Relationship between Vascular Function\n              and the Autonomic Nervous System</span>\n            <img src=\"../../../../assets/images/pdfIcon.jpg\">\n          </mat-card-content>\n\n          <a mat-button class=\"action_button\"\n            href=\"https://pece-doctor-pdf.s3.amazonaws.com/The_Relationship_between_Vascular_Function.pdf\" target=\"_blank\"> download\n          </a>\n        </mat-card-content>\n        <mat-card-content class=\"items_w\">\n          <mat-card-content class=\"icon_w\">\n            <img src=\"../../../../assets/images/clinicalReport11.jpg\">\n          </mat-card-content>\n\n          <mat-card-content class=\"name_wr\">\n            <span class=\"reportName\">Assessment of insulin sensitivity by the hyperinsulinemic euglycemic clamp:\n              Comparison with the spectral analysis of photoplethysmography</span>\n            <img src=\"../../../../assets/images/pdfIcon.jpg\">\n          </mat-card-content>\n\n          <a mat-button class=\"action_button\"\n            href=\"https://pece-doctor-pdf.s3.amazonaws.com/Assessment_of_insulin_sensitivity.pdf\"\n            target=\"_blank\"> download </a>\n        </mat-card-content>\n\n\n        <mat-card-content class=\"items_w\">\n          <mat-card-content class=\"icon_w\">\n            <img src=\"../../../../assets/images/clinicalReport12.jpg\">\n          </mat-card-content>\n\n          <mat-card-content class=\"name_wr\">\n            <span class=\"reportName\">Detection of neuropathy using a sudomotor\n              test in type 2 diabetes</span>\n            <img src=\"../../../../assets/images/pdfIcon.jpg\">\n          </mat-card-content>\n\n          <a mat-button class=\"action_button\"\n            href=\"https://pece-doctor-pdf.s3.amazonaws.com/Detection_of_neuropathy_using_a_sudomotor_test.pdf\"\n            target=\"_blank\"> download </a>\n        </mat-card-content>\n\n        <mat-card-content class=\"items_w\">\n          <mat-card-content class=\"icon_w\">\n            <img src=\"../../../../assets/images/clinicalReport13.jpg\">\n          </mat-card-content>\n\n          <mat-card-content class=\"name_wr\">\n            <span class=\"reportName\">Diagnosis and Treatment of Pain in Small Fiber Neuropathy.</span>\n            <img src=\"../../../../assets/images/pdfIcon.jpg\">\n          </mat-card-content>\n\n          <a mat-button class=\"action_button\"\n            href=\"https://pece-doctor-pdf.s3.amazonaws.com/Diagnosis_&_Treatment_of_Pain_in_SFN.pdf\"\n            target=\"_blank\"> download </a>\n        </mat-card-content>\n      </span>\n\n    </mat-card-content>\n\n    <mat-toolbar class=\"viewMore_w\">\n      <button mat-button (click)=\"viewMore()\">{{ btnName }}</button>\n    </mat-toolbar>\n  </section>\n\n  <ng-container *ngIf=\"otherData.all_details.user_type == 'distributors'\">\n    <section class=\"Admindmin_details\">\n      <mat-card-content class=\"inner_er\">\n\n        <mat-list class=\"list_wrapper\">\n          <h3>{{header.name}} : {{otherData.all_details.distributorname}} &nbsp;</h3>\n          <h2>Details</h2>\n\n          <span class=\"inner\">\n\n            <mat-list-item>\n              <span class=\"lg\">Contact Person :&nbsp; </span><span> {{ otherData.all_details.contactperson }} </span>\n\n            </mat-list-item>\n            <mat-list-item>\n              <span class=\"lg\">Contact Phone :&nbsp; </span><span> {{otherData.all_details.phone}}</span>\n\n            </mat-list-item>\n            <mat-list-item>\n              <span class=\"lg\">Contact Email :&nbsp; </span><span> {{otherData.all_details.email}} </span>\n\n            </mat-list-item>\n            <mat-list-item>\n              <span class=\"lg\">Address :&nbsp; </span><span> {{otherData.all_details.address}} </span>\n\n            </mat-list-item>\n          </span>\n        </mat-list>\n      </mat-card-content>\n    </section>\n  </ng-container>\n\n\n  <ng-container *ngIf=\"otherData.all_details.user_type == 'diagnostic_admin'\">\n    <section class=\"Admindmin_details\">\n      <mat-card-content class=\"inner_er\">\n        <mat-list class=\"list_wrapper\">\n          <h3>{{header.name}} : {{otherData.all_details.center_name}} &nbsp;</h3>\n          <h2>Details</h2>\n\n          <span class=\"inner\">\n\n            <mat-list-item>\n              <span class=\"lg\">Contact Person :&nbsp; </span><span> {{ otherData.all_details.contact_person[0].name }}\n              </span>\n\n            </mat-list-item>\n            <mat-list-item>\n              <span class=\"lg\">Contact Phone :&nbsp; </span><span>\n                {{otherData.all_details.contact_person[0].phone}}</span>\n\n            </mat-list-item>\n            <mat-list-item>\n              <span class=\"lg\">Contact Email :&nbsp; </span><span> {{otherData.all_details.contact_person[0].email}}\n              </span>\n\n            </mat-list-item>\n            <mat-list-item>\n              <span class=\"lg\">Address :&nbsp; </span><span> {{otherData.all_details.address}} </span>\n\n            </mat-list-item>\n          </span>\n        </mat-list>\n      </mat-card-content>\n    </section>\n\n  </ng-container>\n\n\n  <ng-container *ngIf=\"otherData.all_details.user_type == 'doctor_group'\">\n    <section class=\"Admindmin_details\">\n      <mat-card-content class=\"inner_er\">\n\n        <mat-list class=\"list_wrapper\">\n          <h3>{{header.name}} : {{otherData.all_details.groupname }} &nbsp;</h3>\n          <h2>Details</h2>\n\n          <span class=\"inner\">\n\n            <mat-list-item>\n              <span class=\"lg\">Contact Person :&nbsp; </span><span> {{ otherData.all_details.contactperson }} </span>\n\n            </mat-list-item>\n            <mat-list-item>\n              <span class=\"lg\">Contact Phone :&nbsp; </span><span> {{otherData.all_details.phone}}</span>\n\n            </mat-list-item>\n            <mat-list-item>\n              <span class=\"lg\">Contact Email :&nbsp; </span><span> {{otherData.all_details.email}} </span>\n\n            </mat-list-item>\n            <mat-list-item>\n              <span class=\"lg\">Address :&nbsp; </span><span> {{otherData.all_details.address}} </span>\n\n            </mat-list-item>\n          </span>\n        </mat-list>\n      </mat-card-content>\n    </section>\n  </ng-container>\n\n  <!-- Count Block  -->\n\n  <mat-card-content class=\"admin_superbillsection\">\n    <mat-card-title class=\"testingDoc\">Physician Report</mat-card-title>\n    <mat-card-content class=\"biller_wrapper\">\n      <mat-card-content class=\"super_bill_item sp_one\" *ngIf=\"htmlText.signFlag == true\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon3.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <span class=\"counter_with_tool\">\n            <p>MANAGE YOUR SIGNATURE</p>\n            <span class=\"tolTip\">\n              <a mat-raised-button #manageSignature=\"matTooltip\"\n                matTooltip=\"Here the doctor can manage their signature by updating their signature if required.\"\n                matTooltipPosition=\"above\" aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n              </a>\n              <a mat-button (click)=\"manageSignature.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n                <span class=\"material-icons\"> help_outline </span>\n              </a>\n            </span>\n          </span>\n          <button mat-flat-button [routerLink]=\"['/doctor/signature-management']\">Manage</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item sp_two\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon2.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <span class=\"counter_with_tool\">\n            <p>Total Numbers of <br> Reports Processed</p>\n            <span class=\"tolTip\">\n              <a mat-raised-button #reportsProcessed=\"matTooltip\"\n                matTooltip=\"Data listed for the total number of reports processed by the system.\"\n                matTooltipPosition=\"above\" aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n              </a>\n              <a mat-button (click)=\"reportsProcessed.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n                <span class=\"material-icons\"> help_outline </span>\n              </a>\n            </span>\n          </span>\n\n          <h2> {{ allResolveData.dashboardData.reportsProcessedCount }} </h2>\n          <button mat-flat-button (click)=\"viewReportProcessData('Reports Processed')\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item sp_two\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon2.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <span class=\"counter_with_tool\">\n            <p>Total Numbers of <br> Reports Pending Signature</p>\n            <span class=\"tolTip\">\n              <a mat-raised-button #reportsPending=\"matTooltip\"\n                matTooltip=\"Data listed for the total number of reports yet to be signed by the doctor.\"\n                matTooltipPosition=\"above\" aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n              </a>\n              <a mat-button (click)=\"reportsPending.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n                <span class=\"material-icons\"> help_outline </span>\n              </a>\n            </span>\n          </span>\n          <h2> {{ allResolveData.dashboardData.reportsPendingSignatureCount }} </h2>\n          <button mat-flat-button (click)=\"viewReportProcessData('Reports Pending Signature')\">view all</button>\n        </span>\n      </mat-card-content>\n    </mat-card-content>\n\n    <mat-card-content class=\"admin_superbillsection\">\n      <mat-card-content class=\"biller_wrapper\">\n        <mat-card-content class=\"super_bill_item sp_two\">\n          <span class=\"border_wrapper\">\n            <mat-card-content class=\"circle\">\n              <img src=\"../../../../assets/images/reporticon2.png\">\n            </mat-card-content>\n          </span>\n\n          <span class=\"container_wrapper\">\n\n            <span class=\"counter_with_tool\">\n              <p> Total Numbers of <br> Reports Asked for Review</p>\n              <span class=\"tolTip\">\n                <a mat-raised-button #reportsReview=\"matTooltip\"\n                  matTooltip=\"Data listed for the total of reports, that admins or biller admins asked for a review.\"\n                  matTooltipPosition=\"above\" aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n                </a>\n                <a mat-button (click)=\"reportsReview.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n                  <span class=\"material-icons\"> help_outline </span>\n                </a>\n              </span>\n            </span>\n            <h2> {{ allResolveData.dashboardData.reportsAskedForReview }} </h2>\n            <button mat-flat-button (click)=\"viewReportProcessData('Reports Asked for Review')\">view all</button>\n          </span>\n        </mat-card-content>\n\n        <mat-card-content class=\"super_bill_item sp_two\">\n          <span class=\"border_wrapper\">\n            <mat-card-content class=\"circle\">\n              <img src=\"../../../../assets/images/reporticon2.png\">\n            </mat-card-content>\n          </span>\n\n          <span class=\"container_wrapper\">\n\n            <span class=\"counter_with_tool\">\n              <p> Total Numbers of <br> Reports Sent to Biller</p>\n              <span class=\"tolTip\">\n                <a mat-raised-button #reportsBiller=\"matTooltip\"\n                  matTooltip=\"Data listed for the total numbers of reports signed by the doctor and sent to the biller.\"\n                  matTooltipPosition=\"above\" aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n                </a>\n                <a mat-button (click)=\"reportsBiller.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n                  <span class=\"material-icons\"> help_outline </span>\n                </a>\n              </span>\n            </span>\n            <h2> {{ allResolveData.dashboardData.reportsSentToBillerCount }} </h2>\n            <button mat-flat-button (click)=\"viewReportProcessData('Reports Sent to Biller')\">view all</button>\n          </span>\n        </mat-card-content>\n\n        <mat-card-content class=\"super_bill_item sp_two\">\n          <span class=\"border_wrapper\">\n            <mat-card-content class=\"circle\">\n              <img src=\"../../../../assets/images/reporticon2.png\">\n            </mat-card-content>\n          </span>\n\n          <span class=\"container_wrapper\">\n\n            <span class=\"counter_with_tool\">\n              <p>Total Numbers of <br> Reports Downloaded by Biller</p>\n              <span class=\"tolTip\">\n                <a mat-raised-button #reportsDownloaded=\"matTooltip\"\n                  matTooltip=\"The data available for the total of reports the biller downloaded.\"\n                  matTooltipPosition=\"above\" aria-tooltip=\" tooltip area\" matTooltipClass=\"tooltip_bg\">\n                </a>\n                <a mat-button (click)=\"reportsDownloaded.toggle()\" class=\"toggle_btn\" aria-label=\" toggle section\">\n                  <span class=\"material-icons\"> help_outline </span>\n                </a>\n              </span>\n            </span>\n            <h2> {{ allResolveData.dashboardData.reportsDownloadedByBillerCount }} </h2>\n            <button mat-flat-button (click)=\"viewReportProcessData('Reports Downloaded by Biller')\">view all</button>\n          </span>\n        </mat-card-content>\n\n      </mat-card-content>\n    </mat-card-content>\n  </mat-card-content>\n\n  <!-- Pending and signed  Data listing start here -->\n  <mat-card-content class=\"table_wrapper\">\n    <mat-card-title class=\"testingDoc\">Physician Report List</mat-card-title>\n    <mat-toolbar class=\"top_header\">\n      <h2> {{ htmlText.headerText }} </h2>\n    </mat-toolbar>\n\n    <div class=\"tablewrapper admin_dashboard\">\n\n      <!-- table -->\n      <lib-listing class=\"DataTable\" *ngIf=\"allDocData.length>0\" [datasource]=\"allDocData\" [skip]=\"allUserData_skip\"\n        [modify_header_array]=\"allUserData_modify_header\" [detail_skip_array]=\"previewModal_detail_skip\"\n        [apiurl]=\"apiUrl\" [sourcedata]=\"tableName\" [editroute]=\"editUrl\" [jwttoken]=\"jwtToken\" [statusarr]=\"status\"\n        [updateendpoint]=\"UpdateEndpoint\" [deleteendpoint]=\"deleteEndpoint\" [date_search_endpoint]=\"SearchingEndpoint\"\n        [date_search_source]=\"SearchingSourceName\" [search_settings]=\"search_settings\" [sortdata]=\"sortdata\"\n        [datacollection]=\"datacollection\" [libdata]=\"libdata\" [date_search_source_count]=\"docData_count\"\n        [limitcond]=\"limitcond\">\n      </lib-listing>\n\n    </div>\n    <!-- <mat-paginator [pageSizeOptions]=\"[50, 100, 200]\"></mat-paginator> -->\n  </mat-card-content>\n</mat-card>\n\n<app-admin-footer></app-admin-footer>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor/doctor-dashboard/patient-report-view/additional-recommemded-diagnostic-tests/additional-recommemded-diagnostic-tests.component.html":
  /*!*************************************************************************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor/doctor-dashboard/patient-report-view/additional-recommemded-diagnostic-tests/additional-recommemded-diagnostic-tests.component.html ***!
    \*************************************************************************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsDoctorDoctorDashboardPatientReportViewAdditionalRecommemdedDiagnosticTestsAdditionalRecommemdedDiagnosticTestsComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<mat-card-content class=\"encounter_wrapper\">\n  <table class=\"tableone\">\n    <tr>\n      <td colspan=\"2\">\n        <h2 class=\"header\"> Additional Recommended Diagnostic Tests</h2>\n      </td>\n    </tr>\n\n    <tr>\n      <td data-label=\"Patient Name\"> \n        <label><span>Patient Name</span></label>\n        \n         <input type=\"text\" value=\"{{ orginalReportDetails.patient_details[0].patient_name }}\"></td>\n      <td data-label=\"Patient Gender\">       \n        <label><span>Patient Gender</span></label>\n        <label> <input type=\"radio\" [checked]=\"orginalReportDetails.patient_details[0].gender_male_flag == true\" [value]=\"true\">M</label>\n        <label> <input type=\"radio\" [checked]=\"orginalReportDetails.patient_details[0].gender_female_flag == true\" [value]=\"true\">F</label>\n      </td>\n\n    </tr>\n\n    <tr>\n      <td data-label=\"D.O.B\"><label><span> D.O.B </span><input type=\"text\" value=\"{{ orginalReportDetails.patient_details[0].dob | date }}\"></label></td>\n      <td data-label=\"Test Date \"><label><span>Test Date </span></label> <input type=\"text\" value=\"{{ orginalReportDetails.test_date | date }}\"></td>\n    </tr>\n\n\n  </table>\n</mat-card-content>\n\n<!-- <mat-card>\n    test Lorem ipsum, dolor sit amet consectetur adipisicing elit. Reprehenderit nobis nesciunt, accusamus dolores nostrum quisquam. Possimus, similique qui minima reiciendis unde temporibus non aspernatur iusto fuga libero voluptatum laudantium quidem!\n    <table>\n      <tr>\n        <th>Column</th>\n        <td>1</td>\n      </tr>\n      <tr>\n        <th>Description</th>\n        <td>Pre-Diabetes</td>\n      </tr>\n      <tr>\n        <th>ICD -10</th>\n        <td>data</td>\n      </tr>\n      <tr>\n        <th>ABI &/or Doppler</th>\n        <td>data</td>\n      </tr>\n      <tr>\n        <th>Additional Testing</th>\n        <td>data</td>\n      </tr>\n    </table>\n\n\n\n</mat-card> -->\n\n<span class=\"loop\">\n  <mat-card-content class=\"content\" *ngFor=\"let data of orginalReportDetails.additional_testing; let i = index;\">\n    <table>\n      <tr>\n        <th>Column</th>\n        <td>{{ i + 1 }}</td>\n      </tr>\n      <tr>\n        <th>Description</th>\n        <td [innerHtml]=\"data.description\"></td>\n      </tr>\n      <!-- <tr>\n        <th>ICD -10</th>\n        <td [innerHtml]=\"data.ICD10\"></td>\n      </tr> -->\n      <tr>\n        <th>ABI &/or Doppler</th>\n        <td [innerHtml]=\"data.ABI_doppler\"></td>\n      </tr>\n      <tr>\n        <th>Additional Testing</th>\n        <td [innerHtml]=\"data.additional_testing\"></td>\n      </tr>\n    </table>\n  </mat-card-content>\n</span>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor/doctor-dashboard/patient-report-view/health-risk-analysis/health-risk-analysis.component.html":
  /*!***********************************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor/doctor-dashboard/patient-report-view/health-risk-analysis/health-risk-analysis.component.html ***!
    \***********************************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsDoctorDoctorDashboardPatientReportViewHealthRiskAnalysisHealthRiskAnalysisComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<mat-card-content class=\"health_risk_report\">\n  <form class=\"example-form\" autocomplete=\"off\">\n    \n    <table>\n      <tr>\n        <td colspan=\"3\">\n          <h2 class=\"ordering_phy\">Ordering Physician:</h2>\n        </td>\n        <td colspan=\"2\">\n          <input class=\"order_input\" type=\"text\" value=\"{{ reportDetails.reportData[0].doctor_name }}\">\n        </td>\n      </tr>\n\n      <tr>\n        <td colspan=\"5\">\n          <h1 class=\"rm_phy\">RM-3A Clinical Report Evaluation Worksheet</h1>\n        </td>\n      </tr>\n\n      <tr>\n        <td colspan=\"3\">Patient Name:\n          <input type=\"text\" class=\"patientName\" value=\"{{ reportDetails.reportData[0].patient_name }}\">\n        </td>\n\n        <td colspan=\"1\">Patient Gender: <label>\n          <input type=\"radio\" [(ngModel)]=\"reportDetails.reportData[0].gender\" [ngModelOptions]=\"{standalone: true}\" value='Male'>Male</label>\n          <label><input type=\"radio\" [(ngModel)]=\"reportDetails.reportData[0].gender\" [ngModelOptions]=\"{standalone: true}\" value='Female'>Female</label>\n        </td>\n\n        <td colspan=\"1\">D.O.B:\n          <input class=\"order_input\" type=\"text\" value=\"{{ reportDetails.reportData[0].birth_date | date }}\">\n        </td>\n      </tr>\n\n      <tr>\n        <td colspan=\"3\">Test Date:\n          <input class=\"order_input\" type=\"text\" value=\"{{ reportDetails.patient_details[0].test_date | date }}\">\n        </td>\n\n        <td colspan=\"1\">Tests Completed:\n          <input class=\"order_input\" type=\"text\" value=\"{{ reportDetails.reportData[0].test_completed_date | date }}\">\n        </td>\n      </tr>\n\n      <tr>\n        <th>Risk Maker</th>\n        <th>Report\n          Page(s)</th>\n        <th>Current\n          Risk\n          Status</th>\n        <th>Description of Marker</th>\n        <th>Potential ICD 10 Code or other Recommendations</th>\n      </tr>\n\n      <tr>\n        <td>PTGTP </td>\n        <td> 3 </td>\n        <td><input type=\"text\" value=\"{{ reportDetails.reportData[0].PTGTP }}\"></td>\n        <td>\n          <p>Helps to identify the risk of insulin resistance (Pre-diabetes &\n            diabetes), heart disease and other metabolic disorders. High\n            numbers may be associated with fatty liver and atherosclerosis</p>\n        </td>\n        <td>\n          <p>\n            If PTGVLFI and IR are above normal, and the patient\n            has not been diagnosed with Diabetes previously, use\n            the Diabetes ICD 10 codes E10.40-E13.610G (with one\n            other qualified morbidity), or use ICD 10 code G90.3\n          </p>\n        </td>\n      </tr>\n\n      <tr>\n        <td>PTGVLFI </td>\n        <td> 3 & 6 </td>\n        <td><input type=\"text\" value=\"{{ reportDetails.reportData[0].PTGVLFI }}\"></td>\n        <td>\n          <p><b>Marker for Diabetes</b> - is a marker for impaired glucose\n            tolerance (IGT) and Microcirculation complications.</p>\n        </td>\n        <td>\n          <p>\n            Use the ICD 10 Diabetes Codes E10.40-E13.610 if IR and\n            PTGTP shown above are Abnormal or High Risk. Or if\n            already diagnosed use ICD 10 Code G90.3\n          </p>\n        </td>\n      </tr>\n\n      <tr>\n        <td>IR </td>\n        <td> 1 </td>\n        <td><input type=\"text\" value=\"{{ reportDetails.reportData[0].IR }}\"></td>\n        <td>\n          <p><b>Marker for Impaired Glucose Tolerance (IGT), Type 2 Diabetes\n              (T2DM) and cardiovascular diseases.</b>Comparing our PTGTP\n            marker vs the HE Clamp; our Marker has a sensitivity of 90%\n            and specificity of 90%</p>\n        </td>\n        <td>\n          <p>\n            E10.40-E13.610 if Diabetes has not already been\n            Diagnosed and there is also any other qualified\n            morbidity not previously diagnosed and treated (see\n            each Diabetes related ICD 10’s description). Or use ICD\n            10 Code 90.3 if both of the above have been diagnosed.\n          </p>\n        </td>\n      </tr>\n\n      <tr>\n        <td>ESRNO\n          Baseline </td>\n        <td> 7 </td>\n        <td><input type=\"text\" value=\"{{ reportDetails.reportData[0].ESRNO }}\"></td>\n        <td>\n          <p><b>Marker for Distal Neuropathy </b> - is a marker of electrical skin\n            response to nitric oxide (NO) production and vasodilation. Low\n            numbers indicate risk of distal neuropathy.</p>\n        </td>\n        <td>\n          <p>\n            G60.3, G60.8, G60.9 or a combination of diabetes and\n            Neuropathy if Diabetes has not already been diagnosed\n            (or ICD 10 code 90.3 if already diagnosed)\n          </p>\n        </td>\n      </tr>\n\n      <tr>\n        <td>ESR L<br>\n          (Latency)</td>\n        <td> 7</td>\n        <td><input type=\"text\" value=\"{{ reportDetails.reportData[0].ESRL }}\"></td>\n        <td>\n          <p><b>Marker for Peripheral Distal Neuropathy</b> - is a marker of sweat\n            gland nerve density. Low numbers are an early detection of\n            peripheral distal neuropathy</p>\n        </td>\n        <td>\n          <p>\n            G60.3, G60.8, G60.9 or a combination of diabetes and\n            Neuropathy if Diabetes has not already been diagnosed\n          </p>\n        </td>\n      </tr>\n\n      <tr>\n        <td>Peak C<br>\n          (Amplitude)</td>\n        <td> 7 </td>\n        <td><input type=\"text\" value=\"{{ reportDetails.reportData[0].peakC }}\"></td>\n        <td>\n          <p>Marker of sweat gland function. Low Peak C numbers are found\n            with nerve damage or Hyperhidrosis.</p>\n        </td>\n        <td>\n          <p>\n            Shows Nerve Damage and indicates additional testing\n            or use ICD 10 Code R61 if patient has excessive sweat\n            (Hyperhidrosis) which will show on the foot plates)\n          </p>\n        </td>\n      </tr>\n\n      <tr>\n        <td>PTG Type<br>\n          ( Enter Type 1-5 )\n        </td>\n        <td> 6</td>\n        <td><input type=\"text\" value=\"{{ reportDetails.reportData[0].PTGtype_value }}\"></td>\n        <td>\n          <p><b>Marker for Arterial Aging</b>– The pulse wave velocity (PWV) and\n            the photoplethysmogram (PTG) are noninvasive methods for\n            evaluating the pulse wave. a score of 1 to 2 is normal. A score of\n            3 is Abnormal and a score of 4 or 5 is High</p>\n        </td>\n        <td>\n          <p>\n            Use ICD 10 code 173.9 for Peripheral Vascular Disease\n            or, depending on RI below, choose one of the\n            Atherosclerosis ICD 10 codes 170.209, 219 or 229.\n          </p>\n        </td>\n      </tr>\n\n      <tr>\n        <td>PTG CVD\n        </td>\n        <td> 3</td>\n        <td><input type=\"text\" value=\"{{ reportDetails.reportData[0].PTGCVD }}\"></td>\n        <td>\n          <p>Marker used to evaluate CVD. A score of 0 = normal, 1 =\n            borderline and 2 = abnormal.</p>\n        </td>\n        <td>\n          <p>\n            Use ICD 10 code I25.10 - Atheroslerotic\n            heart disease of native coronary artery\n          </p>\n        </td>\n      </tr>\n\n      <tr>\n        <td>Stress I<br>\n          (Stress Index)\n        </td>\n        <td> 2, 3 and 4 </td>\n        <td><input type=\"text\" value=\"{{ reportDetails.reportData[0].stressI }}\"></td>\n        <td>\n          <p><b>Marker heart disease</b> - correlates to C-Reactive Protein\n            (CRP) and high numbers indicate a risk of Heart disease.</p>\n        </td>\n        <td>\n          <p>\n            If not already diagnosed and there is no\n            indication of PAD, CVD or Atherosclerosis, use ICD\n            10 Code I51.90\n          </p>\n        </td>\n      </tr>\n\n      <tr>\n        <td>RI </td>\n        <td> 3 & 6</td>\n        <td><input type=\"text\" value=\"{{ reportDetails.reportData[0].RI }}\"></td>\n        <td>\n          <p>Marker for Atherosclerosis - an indicator of stiffness of the\n            small and medium arteries.\n          </p>\n        </td>\n        <td>\n          <p>\n            Use ICD 10 codes I70.209, 219 0r 229 if PTG R is also\n            above normal (choice of ICD 10 code 173.9 is also an\n            acceptable ICD 10 Code, at MD, NP or PA’s discretion)\n          </p>\n        </td>\n      </tr>\n\n      <tr>\n        <td>AIPTG<br>\n          (IPTG) </td>\n        <td>3 & 6</td>\n        <td><input type=\"text\" value=\"{{ reportDetails.reportData[0].AIPTG }}\"></td>\n        <td>\n          <p><b>Marker for LDL Cholesterol Level.</b> High LDL Cholesterol is a\n            Marker for Coronary Heart Disease (CHD) –\n          </p>\n        </td>\n        <td>\n          <p>\n            Additional LDL Cholesterol Testing when Abnormal or\n            High Risk\n          </p>\n        </td>\n      </tr>\n\n      <tr>\n        <td>CIs (CI)</td>\n        <td> 5</td>\n        <td><input type=\"text\" value=\"{{ reportDetails.reportData[0].CIsCI }}\"></td>\n        <td>\n          <p>Marker is an indicator that relates to Cardiac output to Body\n            Surface Area (BSA)\n          </p>\n        </td>\n        <td>\n          <p>\n            Shows a need for more Cardio Exercise unless\n            prohibited due to other heart disease issues\n          </p>\n        </td>\n      </tr>\n\n      <tr>\n        <td>pNN50</td>\n        <td>4</td>\n        <td><input type=\"text\" value=\"{{ reportDetails.reportData[0].pNN50 }}\"></td>\n        <td>\n          <p>Marker for heart rhythm stability. Shows a risk of\n            Heart Rate Variability issues\n          </p>\n        </td>\n        <td>\n          <p>\n            Use ICD 10 Code R00.0\n          </p>\n        </td>\n      </tr>\n\n      <tr>\n        <td>RMSSD</td>\n        <td> 2 & 4 </td>\n        <td><input type=\"text\" value=\"{{ reportDetails.reportData[0].RMSSD }}\"></td>\n        <td>\n          <p>Marker that reflects the electrical stability of the heart\n          </p>\n        </td>\n        <td>\n          <p>\n            Suggests additional Cardiometabolic testing for\n            potential of tachycardia or other related issues\n          </p>\n        </td>\n      </tr>\n\n      <tr>\n        <td>SD ba</td>\n        <td> 6 </td>\n        <td><input type=\"text\" value=\"{{ reportDetails.reportData[0].SDba }}\"></td>\n        <td>\n          <p>Marker for angiotensin activity </p>\n        </td>\n        <td>\n          <p>\n            Angiotensin is a peptide hormone that causes\n            vasoconstriction and increase in blood pressure. It also\n            stimulates the release of aldosterone from the adrenal\n            cortex to promote sodium retention by the kidneys.\n          </p>\n        </td>\n      </tr>\n\n      <tr>\n        <td>DPRS</td>\n        <td> 2 & 5 </td>\n        <td><input type=\"text\" value=\"{{ reportDetails.reportData[0].DPRS }}\"></td>\n        <td>\n          <p>Diastolic Pressure Response to Standing (DPRS) is the\n            difference between the sitting diastolic minus the\n            standing diastolic pressure. Normal <=5 ->=10 mmHg.</p>\n        </td>\n        <td>\n          <p>\n            If above normal, additional cardio exercise may be\n            recommended and possibly the need for additional\n            Cardiometabolic testing.\n\n          </p>\n        </td>\n      </tr>\n\n      <tr>\n        <td>ValsR</td>\n        <td> 2 & 5 </td>\n        <td><input type=\"text\" value=\"{{ reportDetails.reportData[0].ValsR }}\"></td>\n        <td>\n          <p>Valsalva Ratio (ValsR.) - is the measure of the Heart Rate\n            response to Blood Pressure changes from the mechanical\n            and cardiovascular effects of the Valsalva Maneuver.</p>\n        </td>\n        <td>\n          <p>\n            If above normal, additional cardio exercise may be\n            suggested after additional Cardiometabolic testing.\n\n          </p>\n        </td>\n      </tr>\n\n      <tr>\n        <td>BMI<br>\n          Enter BMI\n          Score\n          (I.E. 29.1)</td>\n        <td> 1-7</td>\n        <td><input type=\"text\" value=\"{{ reportDetails.reportData[0].BMI }}\"></td>\n        <td>\n          <p>The National Institutes of Health (NIH) now defines normal\n            weight, overweight, and obesity according to BMI rather\n            than the traditional height/weight charts. Overweight is a\n            BMI of 27.3 or more for women and 27.8 or more for men.\n            29 or above qualifies a person for Intensive Behavioral\n            Therapy for Obesity. Medicare has no deductible or Co</p>\n        </td>\n        <td>\n          <p>\n            If the BMI reading is 30 or above, Obesity\n            Counseling is paid for by Medicare with no co-pay\n            or deductable. Most Comercial Carriers are paying\n            for this program as well Click Here for Medicare\n            Guidelines or Request document via e-mail at\n            gmw@ourwhy-deas.com.\n          </p>\n        </td>\n      </tr>\n\n      <tr>\n        <td>Blood Pressure <br>\n          Systolic &\n          Diastolic\n          (120/80)</td>\n        <td>3 </td>\n        <td><input type=\"text\" value=\"{{ reportDetails.reportData[0].systolic_value }}/{{ reportDetails.reportData[0].diastolic_value }}\"></td>\n        <td>\n          <p>As of April 2018, The American Heart Association defines\n            Hypertension as 130/80 millimeters of mercury (mm Hg)\n            and higher for all adults (The previous guidelines set the\n            threshold at 140/90 mm Hg for people younger than age\n            65, and 150/80 mm Hg for those ages 65 and older).</p>\n        </td>\n        <td>\n          <p>\n            use ICD10 Diagnostic Code I10\n          </p>\n        </td>\n      </tr>\n\n      <tr>\n        <td colspan=\"5\">\n          <p class=\"area_header\"><b>Patient Diagnoses & Notes:</b></p>\n          <textarea class=\"area_content\" value=\"{{ reportDetails.reportData[0].leave_notes }}\"></textarea>\n        </td>\n      </tr>\n      <tr>\n        <td colspan=\"5\">\n          <p><b>IMPORTANT DISCLAIMER NOTE: The above are only patient recommendations and suggested ICD-10 codes based\n              on\n              the Risk Markers identified and\n              what they have been proven to identify risk for. No Medical Doctor, NP or Pa was involved in these\n              determinations. For Insurance claim process to\n              be valid, a qualified M.D, D.O, NP or PA must establish their own independent diagnoses. </b></p>\n        </td>\n      </tr>\n    </table>\n  </form>\n</mat-card-content>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor/doctor-dashboard/patient-report-view/healthrisk-system-encounter/healthrisk-system-encounter.component.html":
  /*!*************************************************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor/doctor-dashboard/patient-report-view/healthrisk-system-encounter/healthrisk-system-encounter.component.html ***!
    \*************************************************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsDoctorDoctorDashboardPatientReportViewHealthriskSystemEncounterHealthriskSystemEncounterComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<mat-card-content class=\"encounter_wrapper\">\n  <form class=\"example-form\" autocomplete=\"off\">\n\n    <table class=\"tableone\">\n      <tr>\n        <td colspan=\"3\">\n          <h2 class=\"header\"> Health Risk Analysis System</h2>\n        </td>\n      </tr>\n\n      <tr>\n        <td data-label=\"Patient Name\">\n          <label>\n            <span>Patient Name</span>\n          </label>\n          <input type=\"text\" value=\"{{ orginalReportDetails.patient_details[0].patient_name }}\"></td>\n        <td data-label=\"Gender\">\n          <label> <input type=\"radio\" [checked]=\"orginalReportDetails.patient_details[0].gender_male_flag == true\"\n              [value]=\"true\">M</label>\n          <label> <input type=\"radio\" [checked]=\"orginalReportDetails.patient_details[0].gender_female_flag == true\"\n              [value]=\"true\">F</label>\n        </td>\n        <td data-label=\"Date\">\n          <label>\n            <span> Date </span>\n            <input type=\"text\" value=\"{{ orginalReportDetails.test_date | date }}\"> </label></td>\n      </tr>\n\n      <tr>\n        <td data-label=\"Ordering Physician\">\n          <label> <span> Ordering Physician </span></label>\n          <input type=\"text\"\n            value=\"{{ orginalReportDetails.patient_details[0].doctor_details[0].firstname }} {{ orginalReportDetails.patient_details[0].doctor_details[0].lastname }}\">\n        </td>\n        <td colspan=\"2\" data-label=\"D.O.B\"><label><span> D.O.B </span></label>\n          <input type=\"text\" value=\"{{ orginalReportDetails.patient_details[0].dob | date }}\"></td>\n      </tr>\n\n      <tr>\n        <td data-label=\"Physician’s Signature\"><label><span>Physician’s Signature</span></label> <input\n            class=\"signaturefont\" type=\"text\" value=\"{{ orginalReportDetails.doctor_signature }}\"></td>\n        <td colspan=\"2\">\n          <p class=\"suggest\">Suggested billing amounts per CPT Code: </p>\n          <span class=\"reportCheck\">\n            <label><input type=\"checkbox\"\n                (change)=\"checkValue('cpt_codes', orginalReportDetails.cpt_codes.v95923?'1':'0', 'v95923')\"\n                [(ngModel)]=\"orginalReportDetails.cpt_codes.v95923\" [ngModelOptions]=\"{standalone: 1}\"> 95923: $410\n            </label>\n            <label><input type=\"checkbox\"\n                (change)=\"checkValue('cpt_codes', orginalReportDetails.cpt_codes.v95943?'1':'0', 'v95943')\"\n                [(ngModel)]=\"orginalReportDetails.cpt_codes.v95943\" [ngModelOptions]=\"{standalone: 1}\"> 95943: $440\n            </label>\n            <label><input type=\"checkbox\"\n                (change)=\"checkValue('cpt_codes', orginalReportDetails.cpt_codes.v95921?'1':'0', 'v95921')\"\n                [(ngModel)]=\"orginalReportDetails.cpt_codes.v95921\" [ngModelOptions]=\"{standalone: 1}\"> 95921: $280\n            </label>\n            <label><input type=\"checkbox\"\n                (change)=\"checkValue('cpt_codes', orginalReportDetails.cpt_codes.v93923?'1':'0', 'v93923')\"\n                [(ngModel)]=\"orginalReportDetails.cpt_codes.v93923\" [ngModelOptions]=\"{standalone: 1}\"> 93923: $250\n            </label>\n            <label><input type=\"checkbox\"\n                (change)=\"checkValue('cpt_codes', orginalReportDetails.cpt_codes.v93922?'1':'0', 'v93922')\"\n                [(ngModel)]=\"orginalReportDetails.cpt_codes.v93922\" [ngModelOptions]=\"{standalone: 1}\"> 93922: $280\n            </label>\n          </span>\n        </td>\n      </tr>\n\n      <tr>\n        <td data-label=\"Patient’s Insurance Carrier (s)\">\n          <label><span>Patient’s Insurance Carrier (s)</span></label>\n\n          <input type=\"text\" [(ngModel)]=\"orginalReportDetails.patient_details[0].insurance_details.insurancename\"\n            [ngModelOptions]=\"{standalone: true}\"> </td>\n        <td colspan=\"2\">\n          <label>\n            <input type=\"checkbox\"\n              (change)=\"checkValue(orginalReportDetails.cpt_codes.no_diagnosis_detected?'1':'0', 'cpt_codes', 'no_diagnosis_detected')\"\n              [(ngModel)]=\"orginalReportDetails.cpt_codes.no_diagnosis_detected\" [ngModelOptions]=\"{standalone: 1}\">\n            No Diagnoses Established\n          </label>\n        </td>\n      </tr>\n    </table>\n\n    <mat-card-content class=\"second_table\">\n      <table class=\"tabletwo\">\n        <tr>\n          <td colspan=\"2\">\n            <h2 class=\"red_para\">ICD 10 DIAGNOSTIC CODES TO BE USED WITH CPT CODE: 95921 (where 95943 is less or not\n              allowed), and 95923 </h2>\n          </td>\n        </tr>\n\n        <tr>\n          <td class=\"widther\">\n        <tr>\n          <td><input type=\"checkbox\"\n              (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.E0840?'1':'0', 'E0840')\"\n              [(ngModel)]=\"orginalReportDetails.icd_codes.E0840\" [ngModelOptions]=\"{standalone: 1}\"> </td>\n          <td> E08.40 Type 1 Diabetes W/ Neurological Manifestations, Not Stated as Uncontrolled</td>\n        </tr>\n        </td>\n        <td class=\"widther\">\n          <tr>\n            <td><input type=\"checkbox\"\n                (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.G603?'1':'0', 'G603')\"\n                [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.G603\"></td>\n            <td> G60.3 Idiopathic progressive neuropathy</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td> <input type=\"checkbox\"\n              (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.E1041?'1':'0', 'E1041')\"\n              [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.E1041\"></td>\n          <td>E10.41 Type 1 Diabetes Mellitus W/ Diabetic Mononeuropathy</td>\n        </tr>\n        </td>\n        <td>\n          <tr>\n            <td> <input type=\"checkbox\"\n                (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.G608?'1':'0', 'G608')\"\n                [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.G608\"></td>\n            <td>G60.8 Other hereditary and idiopathic neuropathies</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td> <input type=\"checkbox\"\n              (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.E1042?'1':'0', 'E1042')\"\n              [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.E1042\"></td>\n          <td> E10.42 Type 1 Diabetes Mellitus W/ Diabetic Polyneuropathy</td>\n        </tr>\n        </td>\n        <td>\n          <tr>\n            <td> <input type=\"checkbox\"\n                (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.G629?'1':'0', 'G629')\"\n                [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.G629\"></td>\n            <td>G62.9 Polyneuropathy, unspecified</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td> </td>\n          <td> </td>\n        </tr>\n        </td>\n        <td>\n          <tr>\n            <td> <input type=\"checkbox\"\n                (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.G609?'1':'0', 'G609')\"\n                [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.G609\"></td>\n            <td>G60.9 Hereditary and idiopathic neuropathy, unspecified</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td><input type=\"checkbox\"\n              (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.E1043?'1':'0', 'E1043')\"\n              [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.E1043\"></td>\n          <td>E10.43 Type 1 Diabetes Mellitus W/ Diabetic Autonomic (Poly) Neuropathy</td>\n        </tr>\n        </td>\n        <td>\n          <tr>\n            <td><input type=\"checkbox\"\n                (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.G9009?'1':'0', 'G9009')\"\n                [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.G9009\"></td>\n            <td>G90.09 Other idiopathic peripheral autonomic neuropathy</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td> <input type=\"checkbox\"\n              (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.E1044?'1':'0', 'E1044')\"\n              [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.E1044\"></td>\n          <td>E10.44 Type 1 Diabetes Mellitus W/ Diabetic Amyotrophy</td>\n        </tr>\n        </td>\n        <td>\n          <tr>\n            <td> <input type=\"checkbox\"\n                (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.G903?'1':'0', 'G903')\"\n                [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.G903\"></td>\n            <td>G90.3 Multi-system degeneration of the autonomic nervous system</td>\n          </tr>\n          <tr>\n            <td></td>\n            <td></td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td><input type=\"checkbox\"\n              (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.E1049?'1':'0', 'E1049')\"\n              [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.E1049\"></td>\n          <td>E10.49 Type 1 Diabetes Mellitus W/ Other Diabetic Neurological Complications</td>\n        </tr>\n        </td>\n        <td>\n          <tr>\n            <td><input type=\"checkbox\"\n                (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.G9050?'1':'0', 'G9050')\"\n                [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.G9050\"></td>\n            <td>G90.50 Complex regional pain syndrome I, unspecified</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td><input type=\"checkbox\"\n              (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.E10610?'1':'0', 'E10610')\"\n              [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.E10610\"></td>\n          <td>E10.610 Type 1 Diabetes (Juvenile) W/ diabetic Neuropathic Arthropathy</td>\n        </tr>\n        </td>\n\n        <td>\n          <tr>\n            <td> <input type=\"checkbox\"\n                (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.G9059?'1':'0', 'G9059')\"\n                [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.G9059\"></td>\n            <td>G90.59 Complex regional pain syndrome I of other specified site</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td><input type=\"checkbox\"\n              (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.E119?'1':'0', 'E119')\"\n              [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.E119\"></td>\n          <td>E11.9 Type 2 Diabetes Without Complications (non-Medicare)</td>\n        </tr>\n        </td>\n\n        <td>\n          <tr>\n            <td> <input type=\"checkbox\"\n                (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.R000?'1':'0', 'R000')\"\n                [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.R000\"></td>\n            <td>R00.0 Tachycardia, unspecified\n              <ng-container>\n\n              </ng-container>\n              {{ orginalReportDetails.r00_description.R000_text_1 }}\n              {{ orginalReportDetails.r00_description.R000_text_2 }}\n              {{ orginalReportDetails.r00_description.R000_text_3 }}\n            </td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td><input type=\"checkbox\"\n              (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.E1141?'1':'0', 'E1141')\"\n              [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.E1141\"></td>\n          <td>E11.41 Type 2 Diabetes Mellitus W/ Diabetic Mononeuropathy</td>\n        </tr>\n        </td>\n        <td>\n          <tr>\n            <td> <input type=\"checkbox\"\n                (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.R55?'1':'0', 'R55')\"\n                [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.R55\"></td>\n            <td>R55 Vasovagal Syndrome/Syncope and collapse</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td><input type=\"checkbox\"\n              (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.E1142?'1':'0', 'E1142')\"\n              [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.E1142\"></td>\n          <td>E11.42 Type 2 Diabetes Mellitus W/ Diabetic Polyneuropathy</td>\n        </tr>\n        </td>\n        <td>\n          <tr>\n            <td> <input type=\"checkbox\"\n                (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.R7301?'1':'0', 'R7301')\"\n                [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.R7301\"></td>\n            <td>R73.01 Impaired fasting glucose (Non-Medicare)</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td><input type=\"checkbox\"\n              (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.E1143?'1':'0', 'E1143')\"\n              [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.E1143\"></td>\n          <td>E11.43 Type 2 Diabetes W/ Autonomic Neuropathy</td>\n        </tr>\n        </td>\n        <td>\n          <tr>\n            <td> <input type=\"checkbox\"\n                (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.R733?'1':'0', 'R733')\"\n                [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.R733\"></td>\n            <td>R73.03 Prediabetes (Non-Medicare)</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td><input type=\"checkbox\"\n              (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.E1144?'1':'0', 'E1144')\"\n              [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.E1144\"></td>\n          <td>E11.44 Type 2 Diabetes Mellitus W/Diabetic Amyotrophy</td>\n        </tr>\n        </td>\n        <td>\n          <tr>\n            <td> <input type=\"checkbox\"\n                (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.G9050?'1':'0', 'G9050')\"\n                [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.G9050\"></td>\n            <td>G90.50 Complex regional pain syndrome I, unspecified</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td><input type=\"checkbox\"\n              (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.E1149?'1':'0', 'E1149')\"\n              [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.E1149\"></td>\n          <td>E11.49 Type 2 Diabetes Mellitus W/ Other Diabetic Neurological Complications</td>\n        </tr>\n        </td>\n        <td>\n          <tr>\n            <td><input type=\"checkbox\"\n                (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.G90511?'1':'0', 'G90511')\"\n                [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.G90511\"></td>\n            <td>G90.511 Complex regional pain syndrome I of right upper limb</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td><input type=\"checkbox\"\n              (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.E850?'1':'0', 'E850')\"\n              [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.E850\"></td>\n          <td>E85.0 Mediterranean Fever</td>\n        </tr>\n        </td>\n        <td>\n          <tr>\n            <td><input type=\"checkbox\"\n                (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.G90512?'1':'0', 'G90512')\"\n                [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.G90512\"></td>\n            <td>G90.512 Complex regional pain syndrome I of left upper limb</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td><input type=\"checkbox\"\n              (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.E851?'1':'0', 'E851')\"\n              [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.E851\"></td>\n          <td>E85.1 Neuropathic Heredofamilial Amyloidosis</td>\n        </tr>\n        </td>\n        <td>\n          <tr>\n            <td><input type=\"checkbox\"\n                (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.G90513?'1':'0', 'G90513')\"\n                [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.G90513\"></td>\n            <td>G90.513 Complex regional pain syndrome I of upper limb, bilateral</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td><input type=\"checkbox\"\n              (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.E853?'1':'0', 'E853')\"\n              [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.E853\"></td>\n          <td>E85.3 Secondary Systemic Amyloidosis</td>\n        </tr>\n        </td>\n        <td>\n          <tr>\n            <td><input type=\"checkbox\"\n                (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.G90512?'1':'0', 'G90512')\"\n                [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.G90512\"></td>\n            <td>G90.521 Complex regional pain syndrome I of right lower limb</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td> <input type=\"checkbox\"\n              (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.E854?'1':'0', 'E854')\"\n              [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.E854\"></td>\n          <td>E85.4 Organ – Limited Amyloidosis</td>\n        </tr>\n        </td>\n        <td>\n          <tr>\n            <td><input type=\"checkbox\"\n                (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.G90522?'1':'0', 'G90522')\"\n                [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.G90522\"> </td>\n            <td>G90.522 Complex regional pain syndrome I of left lower limb</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td> <input type=\"checkbox\"\n              (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.G200?'1':'0', 'G200')\"\n              [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.G200\"></td>\n          <td>G20.0 Parkinson’s Disease</td>\n        </tr>\n        </td>\n\n        <td>\n          <tr>\n            <td> <input type=\"checkbox\"\n                (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.G90523?'1':'0', 'G90523')\"\n                [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.G90523\"></td>\n            <td> G90.523 Complex regional pain syndrome I of lower limb, bilateral </td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td><input type=\"checkbox\"\n              (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.G230?'1':'0', 'G230')\"\n              [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.G230\"></td>\n          <td>G23.0 Hallervorden – Spatz Disease</td>\n        </tr>\n        </td>\n        <td>\n          <tr>\n            <td><input type=\"checkbox\"\n                (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.G9059?'1':'0', 'G9059')\"\n                [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.G9059\"></td>\n            <td> G90.59 Complex regional pain syndrome I of other specified site</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td><input type=\"checkbox\"\n              (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.G231?'1':'0', 'G231')\"\n              [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.G231\"></td>\n          <td>G23.1 Progressive supranuclear ophthalmoplegia [Steele-Richardson\n            Olszewski]</td>\n        </tr>\n        </td>\n        <td>\n          <tr>\n            <td><input type=\"checkbox\"\n                (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.I951?'1':'0', 'I951')\"\n                [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.I951\"></td>\n            <td>I95.1 Orthostatic Hypotension</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td> <input type=\"checkbox\"\n              (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.G232?'1':'0', 'field_name')\"\n              [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.G232\"></td>\n          <td>G23.2 Striatonigral degeneration </td>\n        </tr>\n        </td>\n\n        <td>\n          <tr>\n            <td> <input type=\"checkbox\"\n                (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.R61?'1':'0', 'field_name')\"\n                [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.R61\"></td>\n            <td>R61 Generalized hyperhidrosis </td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td><input type=\"checkbox\"\n              (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.G238?'1':'0', 'field_name')\"\n              [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.G238\"></td>\n          <td>G23.8 Other specified degenerative diseases of basal ganglia</td>\n        </tr>\n        </td>\n\n        <td>\n          <tr>\n            <td></td>\n            <td></td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td colspan=\"2\">\n            <p class=\"red_para\">ICD 10 DIAGNOSTIC CODES TO BE USED WITH CPT CODE: 93922 or 93923 (93923 1\n              UNIT FOR UPPER AND 1\n              UNIT FOR LOWER EXTREMITY) REQUIRED ANSILLARY TESTING: ABI, WAVE FORM DOPPLER OR PULSE WAVE\n              /PHOTO PLETHYSMOGRAPHY DEVICE\n            </p>\n          </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td><input type=\"checkbox\"\n              (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.E1059?'1':'0', 'E1059')\"\n              [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.E1059\"></td>\n          <td>E10.59 Type 1 Diabetes W/ Other Circulatory Complications</td>\n        </tr>\n        </td>\n\n        <td>\n\n          <tr>\n            <td><input type=\"checkbox\"\n                (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.I70222?'1':'0', 'I70222')\"\n                [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.I70222\"></td>\n            <td>I70.222 Atherosclerosis of native arteries of extremities with rest pain, left\n              leg</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td><input type=\"checkbox\"\n              (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.E1159?'1':'0', 'E1159')\"\n              [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.E1159\"></td>\n          <td>E11.59 Type 2 Diabetes W/ Other Circulatory Complications</td>\n        </tr>\n        </td>\n\n        <td>\n          <tr>\n            <td> <input type=\"checkbox\"\n                (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.I70223?'1':'0', 'I70223')\"\n                [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.I70223\"></td>\n            <td>I70.223 Atherosclerosis of native arteries of extremities with rest pain,\n              Bilateral legs</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n\n        <tr>\n          <td> <input type=\"checkbox\"\n              (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.G458?'1':'0', 'G458')\"\n              [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.G458\"></td>\n          <td>G45.8 Other Transient Cerebral Ischemic Attacks and Related Syndrome</td>\n        </tr>\n        </td>\n\n        <td>\n          <tr>\n            <td><input type=\"checkbox\"\n                (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.I70228?'1':'0', 'I70228')\"\n                [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.I70228\"></td>\n            <td>I70.228 Atherosclerosis of native arteries of extremities with rest pain,\n              other extremity</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td><input type=\"checkbox\"\n              (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.I10?'1':'0', 'I10')\"\n              [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.I10\"></td>\n          <td>I10 Hypertension Unspecified (Non-Medicare)\n            <b>{{ reportDetails.reportData[0].systolic_value }}/{{ reportDetails.reportData[0].diastolic_value }}</b>\n          </td>\n        </tr>\n        </td>\n\n        <td>\n          <tr>\n            <td><input type=\"checkbox\"\n                (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.I70268?'1':'0', 'I70268')\"\n                [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.I70268\"></td>\n            <td>I70.268 Atherosclerosis of native arteries of extremities with gangrene, Other extremity</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td><input type=\"checkbox\"\n              (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.I2510?'1':'0', 'I2510')\"\n              [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.I2510\"></td>\n          <td>I25.10 Atherosclerotic heart disease of native coronary artery w/o angina pectoris</td>\n        </tr>\n        </td>\n\n        <td>\n          <tr>\n            <td><input type=\"checkbox\"\n                (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.I7025?'1':'0', 'I7025')\"\n                [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.I7025\"></td>\n            <td>I70.25 Atherosclerosis of native arteries of other extremities with Ulceration</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td><input type=\"checkbox\"\n              (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.I519?'1':'0', 'I519')\"\n              [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.I519\"></td>\n          <td>I70.0 Atherosclerosis of aorta (Non-Medicate)</td>\n\n\n        </tr>\n        </td>\n\n        <td>\n          <tr>\n\n            <td><input type=\"checkbox\"\n                (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.I721?'1':'0', 'I721')\"\n                [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.I721\"></td>\n            <td>I72.1 Aneurysm of artery of upper extremity</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n\n          <td><input type=\"checkbox\"\n              (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.I519?'1':'0', 'I519')\"\n              [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.I519\"></td>\n          <td>I51.9 Heart disease, unspecified (Non-Medicare)</td>\n\n        </tr>\n        </td>\n\n        <td>\n          <tr>\n            <td> <input type=\"checkbox\"\n                (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.I724?'1':'0', 'I724')\"\n                [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.I724\"></td>\n            <td>I72.4 Aneurysm of artery of lower extremity </td>\n          </tr>\n        </td>\n        </tr>\n        <tr>\n          <td>\n        <tr>\n\n\n          <td><input type=\"checkbox\"\n              (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.I70209?'1':'0', 'I70209')\"\n              [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.I70209\"></td>\n          <td>I70.209 Atherosclerosis Native Arteries Extremities Unspecified (non-Medicare)</td>\n\n        </tr>\n        </td>\n        <td>\n          <tr>\n            <td> <input type=\"checkbox\"\n                (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.I7389?'1':'0', 'I7389')\"\n                [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.I7389\"></td>\n            <td>I73.89 Other specified peripheral vascular diseases</td>\n          </tr>\n        </td>\n        </tr>\n        <tr>\n          <td>\n        <tr>\n\n\n          <td><input type=\"checkbox\"\n              (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.I70221?'1':'0', 'I70221')\"\n              [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.I70221\"></td>\n          <td>I70.211 Atherosclerosis of native arteries of extremities with intermittent\n            Claudication, right leg</td>\n        </tr>\n        </td>\n        <td>\n          <tr>\n            <td> <input type=\"checkbox\"\n                (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.I739?'1':'0', 'I739')\"\n                [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.I739\"></td>\n            <td>I73.9 Peripheral vascular disease, unspecified</td>\n          </tr>\n        </td>\n        </tr>\n        <tr>\n          <td>\n        <tr>\n          <td><input type=\"checkbox\"\n              (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.I70212?'1':'0', 'I70212')\"\n              [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.I70212\"></td>\n          <td>I70.212 Atherosclerosis of native arteries of extremities with intermittent\n            Claudication, left leg</td>\n\n        </tr>\n        </td>\n        <td>\n          <tr>\n            <td> <input type=\"checkbox\"\n                (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.R088?'1':'0', 'R088')\"\n                [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.R088\"></td>\n            <td>R08.8 9 Other Specific Signs & Symptoms of Circulatory &\n              Respiratory Systems</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td> <input type=\"checkbox\"\n              (change)=\"checkValue('icd_codes', orginalReportDetails.icd_codes.I70213?'1':'0', 'I70213')\"\n              [ngModelOptions]=\"{standalone: 1}\" [(ngModel)]=\"orginalReportDetails.icd_codes.I70213\"> </td>\n          <td> I70.213 Atherosclerosis of native arteries of extremities with intermittent\n            Claudication, bilateral legs</td>\n\n\n        </tr>\n        </td>\n        <td>\n          <p>ADDITIONAL POTENTIAL HEALTH RISKS</p>\n        </td>\n        </tr>\n\n\n        <tr>\n          <td rowspan=\"2\">\n            <p>ADDITIONAL POTENTIAL HEALTH RISKS</p>\n            <!-- <textarea class=\"additionalnotes additionalnotes3\" [(ngModel)]=\"\"> -->\n            <ng-container *ngFor=\"let data of orginalReportDetails.additional_potential_health_risks\">\n              <p>{{ data }}</p>\n            </ng-container>\n            <!-- </textarea> -->\n          </td>\n\n          <td>\n            <p>Pre-Existing Diagnoses: </p>\n            <textarea class=\"additionalnotes\"></textarea>\n            <br>\n            <p>Additional Physician’s Chart Notes:</p>\n            <textarea class=\"additionalnotes\"></textarea>\n          </td>\n        </tr>\n      </table>\n\n    </mat-card-content>\n  </form>\n</mat-card-content>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor/doctor-dashboard/patient-report-view/patient-details/patient-details.component.html":
  /*!*************************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor/doctor-dashboard/patient-report-view/patient-details/patient-details.component.html ***!
    \*************************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsDoctorDoctorDashboardPatientReportViewPatientDetailsPatientDetailsComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<mat-card-content class=\"encounter_wrapper\">\n    <form class=\"example-form\" autocomplete=\"off\">\n\n        <mat-card-content class=\"second_table\">\n            <table class=\"tabletwo\">\n                <tr>\n                    <td colspan=\"2\">\n                        <h2 class=\"red_para\">Patient Details</h2>\n                    </td>\n                </tr>\n\n                <tr>\n                    <td colspan=\"2\">\n                        <lib-book-appointment-form class=\"book-appointment\" [configData]=\"configData\" *ngIf=\"configData.patientInfoFormFields.length > 0\"></lib-book-appointment-form>\n                    </td>\n                </tr>\n\n            </table>\n\n        </mat-card-content>\n    </form>\n</mat-card-content>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor/doctor-dashboard/patient-report-view/patient-report-view.component.html":
  /*!*************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor/doctor-dashboard/patient-report-view/patient-report-view.component.html ***!
    \*************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsDoctorDoctorDashboardPatientReportViewPatientReportViewComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- Admin Header -->\n<app-admin-header *ngIf=\"cookiesData.user_details.user_type == 'admin'\"></app-admin-header>\n\n<!-- Admin Biller Header -->\n<app-adminbiller-header *ngIf=\"cookiesData.user_details.user_type == 'admin_biller'\"></app-adminbiller-header>\n\n<!-- Biller Header -->\n<app-biller-header *ngIf=\"cookiesData.user_details.user_type == 'biller'\"></app-biller-header>\n\n<!-- Diagnostic Admin -->\n<app-diagnostic-admin-header *ngIf=\"cookiesData.user_details.user_type == 'diagnostic_admin'\"></app-diagnostic-admin-header>\n\n<!-- Distributors Header -->\n<app-distributors-header *ngIf=\"cookiesData.user_details.user_type == 'distributors'\"></app-distributors-header>\n\n<!-- Doctor Header -->\n<app-doctor-header *ngIf=\"cookiesData.user_details.user_type == 'doctor'\"></app-doctor-header>\n\n<!-- Doctor Group Header -->\n<app-doctor-group-header *ngIf=\"cookiesData.user_details.user_type == 'doctor_group'\"></app-doctor-group-header>\n\n<!-- Doctor Office Header -->\n<app-doctor-office-header *ngIf=\"cookiesData.user_details.user_type == 'doctor_office'\"></app-doctor-office-header>\n\n<!-- Tech Header -->\n<app-tech-header *ngIf=\"cookiesData.user_details.user_type == 'tech'\"></app-tech-header>\n\n<!-- Sales Person Header -->\n<app-sales-person-header *ngIf=\"cookiesData.user_details.user_type == 'sales_person'\"></app-sales-person-header>\n\n<ng-container>\n\n  <ng-container *ngIf=\"htmlText.orginalData.status == 11 || htmlText.orginalData.status == 14\">\n    <mat-toolbar class=\"patient_preview\" *ngIf=\"(cookiesData.user_details.user_type == 'diagnostic_admin' || cookiesData.user_details.user_type == 'doctor')\">\n      <mat-form-field color=\"warn\" *ngIf=\"cookiesData.user_details.parent_type != 'distributor'\">\n        <mat-label>Select A Biller</mat-label>\n        <mat-select [(ngModel)]=\"htmlText.billerArrayIndex\" placeholder=\"Select A Biller\">\n          <mat-option *ngFor=\"let biller of htmlText.billers; let i = index;\" [value]=\"i\">\n            {{ biller.firstname }} {{ biller.lastname }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <button mat-button type=\"button\" (click)=\"reportSign('back');\">{{ htmlText.sendButton[0] }}</button>\n\n      <button mat-button type=\"button\" (click)=\"reportSign('next');\">{{ htmlText.sendButton[1] }}</button>\n    </mat-toolbar>\n  </ng-container>\n\n  <mat-card-content class=\"patient_report_wrapper \">\n    <mat-card-content class=\"patient_item_section\" [ngClass]=\"{'mat-elevation-z5' : true, 'sticky' : isSticky}\">\n\n      <mat-card-content class=\"title_wrapper report_header\">\n        {{ htmlText.header }}\n      </mat-card-content>\n\n      <mat-card class=\"add_form\" *ngIf=\"htmlText.allResolveData.reportData[0].report_type == 'manual'\">\n        <mat-card-content>\n\n          <form class=\"example-form\">\n            <fieldset class=\"field_setmodel\">\n              <legend class=\"legend_model\">Patients Information:</legend>\n              <span class=\"wrapper\">\n\n                <!-- Patient Name Start -->\n                <mat-card-content>\n                  <label>Patient Name</label>\n                  <mat-form-field>\n                    <input matInput value=\"{{ htmlText.allResolveData.reportData[0].patient_name }}\">\n                  </mat-form-field>\n                </mat-card-content>\n                <!-- Patient Name End -->\n\n                <!-- Patient Gender Start -->\n                <mat-card-content>\n                  <label>Patient Gender</label>\n                  <input type=\"radio\" [(ngModel)]=\"htmlText.allResolveData.reportData[0].gender\" [ngModelOptions]=\"{standalone: true}\" value=\"Male\">Male\n                  <input type=\"radio\" [(ngModel)]=\"htmlText.allResolveData.reportData[0].gender\" [ngModelOptions]=\"{standalone: true}\" value=\"Female\">Female\n                </mat-card-content>\n                <!-- Patient Gender End -->\n\n                <!-- DOB Start -->\n                <mat-card-content>\n                  <label> DOB</label>\n                  <mat-form-field>\n                    <input matInput type=\"text\" value=\"{{ htmlText.allResolveData.reportData[0].birth_date | date }}\">\n                  </mat-form-field>\n                </mat-card-content>\n                <!-- DOB End -->\n\n                <!-- Ordering Physician Start -->\n                <mat-card-content>\n                  <label> Ordering Physician</label>\n                  <mat-form-field>\n                    <input matInput matInput value=\"{{ htmlText.allResolveData.reportData[0].doctor_name }}\">\n                  </mat-form-field>\n                </mat-card-content>\n                <!-- Ordering Physician Start -->\n\n                <!-- Test Date Start -->\n                <mat-card-content>\n                  <label> Test Date</label>\n                  <mat-form-field>\n                    <input matInput value=\"{{ htmlText.allResolveData.reportData[0].test_date | date }}\">\n                  </mat-form-field>\n                </mat-card-content>\n                <!-- Test Date End -->\n\n                <!-- Test Completed Start -->\n                <mat-card-content>\n                  <label> Test Completed</label>\n                  <mat-form-field>\n                    <input matInput value=\"{{ htmlText.allResolveData.reportData[0].test_completed_date | date }}\">\n                  </mat-form-field>\n                </mat-card-content>\n                <!-- Test Completed Start -->\n              </span>\n            </fieldset>\n\n            <br><br>\n\n            <fieldset class=\"field_setmodel\">\n              <legend class=\"legend_model\">Rm-3a status report</legend>\n              <span class=\"test_date_wrapper\">\n\n                <mat-card-content>\n                  <label> PTGTP </label>\n                  <mat-form-field>\n                    <input matInput value=\"{{ htmlText.allResolveData.reportData[0].PTGTP }}\">\n                  </mat-form-field>\n                </mat-card-content>\n\n                <mat-card-content>\n                  <label> PTGVLFI </label>\n                  <mat-form-field>\n                    <input matInput value=\"{{ htmlText.allResolveData.reportData[0].PTGVLFI }}\">\n                  </mat-form-field>\n                </mat-card-content>\n\n                <mat-card-content>\n                  <label> IR </label>\n                  <mat-form-field>\n                    <input matInput value=\"{{ htmlText.allResolveData.reportData[0].IR }}\">\n                  </mat-form-field>\n                </mat-card-content>\n\n                <mat-card-content>\n                  <label> ESRNO<br> (Baseline) </label>\n                  <mat-form-field>\n                    <input matInput value=\"{{ htmlText.allResolveData.reportData[0].ESRNO }}\">\n                  </mat-form-field>\n                </mat-card-content>\n\n                <mat-card-content>\n                  <label> ESR L<br> (Latency) </label>\n                  <mat-form-field>\n                    <input matInput value=\"{{ htmlText.allResolveData.reportData[0].ESRL }}\">\n                  </mat-form-field>\n                </mat-card-content>\n\n                <mat-card-content>\n                  <label> Peak C <br> (Amplitude) </label>\n                  <mat-form-field>\n                    <input matInput value=\"{{ htmlText.allResolveData.reportData[0].peakC }}\">\n                  </mat-form-field>\n                </mat-card-content>\n\n                <mat-card-content>\n                  <label> PTG Type <br> (Enter\n                    Type 1-5) </label>\n                  <mat-form-field>\n                    <input matInput value=\"{{ htmlText.allResolveData.reportData[0].PTGtype }}\">\n                  </mat-form-field>\n                </mat-card-content>\n\n                <mat-card-content>\n                  <label> PTG CVD </label>\n                  <mat-form-field>\n                    <input matInput value=\"{{ htmlText.allResolveData.reportData[0].PTGCVD }}\">\n                  </mat-form-field>\n                </mat-card-content>\n\n                <mat-card-content>\n                  <label> Stress I <br> (Stress Index) </label>\n                  <mat-form-field>\n                    <input matInput value=\"{{ htmlText.allResolveData.reportData[0].stressI }}\">\n                  </mat-form-field>\n                </mat-card-content>\n\n                <mat-card-content>\n                  <label> RI </label>\n                  <mat-form-field>\n                    <input matInput value=\"{{ htmlText.allResolveData.reportData[0].RI }}\">\n                  </mat-form-field>\n                </mat-card-content>\n\n                <mat-card-content>\n                  <label> AIPTG<br> (IPTG) </label>\n                  <mat-form-field>\n                    <input matInput value=\"{{ htmlText.allResolveData.reportData[0].AIPTG }}\">\n                  </mat-form-field>\n                </mat-card-content>\n\n                <mat-card-content>\n                  <label> CIs (CI) </label>\n                  <mat-form-field>\n                    <input matInput value=\"{{ htmlText.allResolveData.reportData[0].CIsCI }}\">\n                  </mat-form-field>\n                </mat-card-content>\n\n                <mat-card-content>\n                  <label> pNN50 </label>\n                  <mat-form-field>\n                    <input matInput value=\"{{ htmlText.allResolveData.reportData[0].pNN50 }}\">\n                  </mat-form-field>\n                </mat-card-content>\n\n                <mat-card-content>\n                  <label> RMSSD </label>\n                  <mat-form-field>\n                    <input matInput value=\"{{ htmlText.allResolveData.reportData[0].RMSSD }}\">\n                  </mat-form-field>\n                </mat-card-content>\n\n                <mat-card-content>\n                  <label> SD ba - </label>\n                  <mat-form-field>\n                    <input matInput value=\"{{ htmlText.allResolveData.reportData[0].SDba }}\">\n                  </mat-form-field>\n                </mat-card-content>\n\n                <mat-card-content>\n                  <label> SD da </label>\n                  <mat-form-field>\n                    <input matInput value=\"{{ htmlText.allResolveData.reportData[0].SDda }}\">\n                  </mat-form-field>\n                </mat-card-content>\n\n                <mat-card-content>\n                  <label>DPRS </label>\n                  <mat-form-field>\n                    <input matInput value=\"{{ htmlText.allResolveData.reportData[0].DPRS }}\">\n                  </mat-form-field>\n                </mat-card-content>\n\n                <mat-card-content>\n                  <label>ValsR. </label>\n                  <mat-form-field>\n                    <input matInput value=\"{{ htmlText.allResolveData.reportData[0].ValsR }}\">\n                  </mat-form-field>\n                </mat-card-content>\n\n                <mat-card-content>\n                  <label>BMI <br> Enter BMI Score (I.E. 29.1) </label>\n                  <mat-form-field>\n                    <input matInput value=\"{{ htmlText.allResolveData.reportData[0].BMI }}\">\n                  </mat-form-field>\n                </mat-card-content>\n\n                <mat-card-content>\n                  <label>Blood Pressure <br>\n                    Systolic & Diastolic (120/80)\n                  </label>\n                  <mat-form-field>\n                    <input matInput value=\"{{ htmlText.allResolveData.reportData[0].systolic_value }}/{{ htmlText.allResolveData.reportData[0].diastolic_value }}\">\n                  </mat-form-field>\n                </mat-card-content>\n              </span>\n\n              <span class=\"patient_diagnotes\">\n                <label>Patient Diagnoses & Notes:</label>\n                <mat-form-field class=\"example-full-width\">\n                  <textarea matInput> {{ htmlText.allResolveData.reportData[0].leave_notes }} </textarea>\n                </mat-form-field>\n              </span>\n            </fieldset>\n          </form>\n\n        </mat-card-content>\n      </mat-card>\n\n      <section *ngIf=\"htmlText.allResolveData.reportData[0].report_type == 'file'\"  >\n        <mat-card-content class=\"document_wrapper\">\n          <span class=\"imageGallery\">\n            <ng-container *ngFor=\"let image of htmlText.allResolveData.reportData[0].images; let i = index;\">\n              <ng-container *ngIf=\"htmlText.sliderCount == i\">\n                <!-- <img [defaultImage]=\"'../../../../../assets/images/image-loader.svg'\" [lazyLoad]=\"htmlText.allResolveData.reportData[0].images[i].image_url\" /> -->\n                <img [src]=\"htmlText.allResolveData.reportData[0].images[i].image_url\" />\n              </ng-container>\n            </ng-container>\n          </span>\n          <mat-card-content>\n            <button mat-icon-button class=\"prev\" type=\"button\" (click)=\"playSlider('preview');\"> \n              <mat-icon> keyboard_arrow_left</mat-icon> </button> \n\n              <button mat-icon-button class=\"next\" type=\"button\" (click)=\"playSlider('next');\">  \n                <mat-icon>keyboard_arrow_right</mat-icon> \n            </button>\n            <!-- <button mat-fab (click)=\"playSlider('play');\">PLAY</button> -->\n          </mat-card-content>\n          <span class=\"itemCounter\">Report {{ htmlText.sliderCount + 1 }} of {{ htmlText.allResolveData.reportData[0].images.length }}</span>\n        </mat-card-content>\n      </section>\n    </mat-card-content>\n\n    <mat-card-content class=\"patient_item_section mat-elevation-z8\" [ngClass]=\"{'mat-elevation-z5' : true, 'stickyRight' : isSticky}\">\n\n      <mat-tab-group class=\"previewTabs\">\n        <!-- <mat-tab label=\"Evaluation Worksheet\" *ngIf=\"cookiesData.user_details.user_type == 'admin'\">\n          <ng-template matTabContent>\n            <app-health-risk-analysis [patientDetails]=\"htmlText.allResolveData\"></app-health-risk-analysis>\n          </ng-template>\n        </mat-tab> -->\n\n        <mat-tab label=\"Patient Details\">\n          <ng-template matTabContent>\n            <app-patient-details [patientDetails]=\"htmlText.allResolveData\" [orginalData]=\"htmlText.orginalData\"></app-patient-details>\n          </ng-template>\n        </mat-tab>\n\n        <mat-tab label=\"Encounter Form\">\n          <ng-template matTabContent>\n            <app-healthrisk-system-encounter [patientDetails]=\"htmlText.allResolveData\" [orginalData]=\"htmlText.orginalData\"></app-healthrisk-system-encounter>\n          </ng-template>\n        </mat-tab>\n\n        <mat-tab label=\"Superbill For Obesity\" *ngIf=\"htmlText.allResolveData.reportData[0].BMI_flag >= 290\">\n          <ng-template matTabContent>\n            <app-system-superbill [patientDetails]=\"htmlText.allResolveData\" [orginalData]=\"htmlText.orginalData\"></app-system-superbill>\n          </ng-template>\n        </mat-tab>\n\n        <mat-tab label=\"Additional Recommemded Diagnostic Tests\">\n          <ng-template matTabContent>\n            <app-additional-recommemded-diagnostic-tests [patientDetails]=\"htmlText.allResolveData\" [orginalData]=\"htmlText.orginalData\"></app-additional-recommemded-diagnostic-tests>\n          </ng-template>\n        </mat-tab>\n\n      </mat-tab-group>\n\n    </mat-card-content>\n\n  </mat-card-content>\n\n  <ng-container *ngIf=\"htmlText.orginalData.status == 11 || htmlText.orginalData.status == 14\">\n    <mat-toolbar class=\"patient_preview\" *ngIf=\"(cookiesData.user_details.user_type == 'diagnostic_admin' || cookiesData.user_details.user_type == 'doctor')\">\n      <mat-form-field color=\"warn\" *ngIf=\"cookiesData.user_details.parent_type != 'distributor'\">\n        <mat-label>Select A Biller</mat-label>\n        <mat-select [(ngModel)]=\"htmlText.billerArrayIndex\" placeholder=\"Select A Biller\">\n          <mat-option *ngFor=\"let biller of htmlText.billers; let i = index;\" [value]=\"i\">\n            {{ biller.firstname }} {{ biller.lastname }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <button mat-button type=\"button\" (click)=\"reportSign('back');\">{{ htmlText.sendButton[0] }}</button>\n\n      <button mat-button type=\"button\" (click)=\"reportSign('next');\">{{ htmlText.sendButton[1] }}</button>\n    </mat-toolbar>\n  </ng-container>\n\n</ng-container>\n\n\n<app-admin-footer></app-admin-footer>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor/doctor-dashboard/patient-report-view/system-superbill/system-superbill.component.html":
  /*!***************************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor/doctor-dashboard/patient-report-view/system-superbill/system-superbill.component.html ***!
    \***************************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsDoctorDoctorDashboardPatientReportViewSystemSuperbillSystemSuperbillComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<mat-card-content class=\"system_superbill_wrapper\">\n    <form class=\"example-form\" autocomplete=\"off\">\n\n        <table class=\"table_one\">\n            <tr>\n                <td colspan=\"3\">\n                    <h2 class=\"top_header\">For Intensive Behavioral Therapy Obesity Counseling</h2>\n                </td>\n            </tr>\n\n            <tr>\n                <td data-label=\"Patient Name\">\n                    <label>\n                        <span>Patient Name</span>\n                        <input type=\"text\" value=\"{{ orginalReportDetails.patient_details[0].patient_name }}\">\n                    </label>\n                </td>\n\n                <td class=\"gender\" data-label=\"Gender\">\n                    <label><input type=\"radio\"\n                            [checked]=\"orginalReportDetails.patient_details[0].gender_male_flag == true\"\n                            [value]=\"true\">Male</label>\n                    <label><input type=\"radio\"\n                            [checked]=\"orginalReportDetails.patient_details[0].gender_female_flag == true\"\n                            [value]=\"true\">Female</label>\n                </td>\n\n                <td data-label=\"Test Date\">\n                    <label>\n                        <span>Test Date:</span>\n                        <input type=\"text\" value=\"{{ orginalReportDetails.test_date | date }}\">\n                    </label>\n                </td>\n            </tr>\n\n            <tr>\n                <td data-label=\"Ordering Physician\">\n                    <label>\n                        <span> Ordering Physician </span>\n                        <input type=\"text\"\n                            value=\"{{ orginalReportDetails.patient_details[0].doctor_details[0].firstname }} {{ orginalReportDetails.patient_details[0].doctor_details[0].lastname }}\"></label>\n                </td>\n                <td> </td>\n                <td data-label=\"D.O.B\">\n                    <label>\n                        <span> D.O.B </span>\n                        <input type=\"text\" value=\"{{ orginalReportDetails.patient_details[0].dob | date }}\">\n                    </label>\n                </td>\n            </tr>\n\n            <tr>\n                <td class=\"fifty\" colspan=\"2\" data-label=\"Physician’s Signature\">\n                    <label>\n                        <span> Physician’s Signature </span>\n                        <input class=\"signaturefont\" type=\"text\" value=\"{{ orginalReportDetails.doctor_signature }}\">\n                    </label>\n                </td>\n\n                <td class=\"fifty\">Suggested billing amounts per CPT Code: </td>\n            </tr>\n            <tr>\n                <td class=\"fifty\" colspan=\"2\">\n                    <p>1. Medicare modifier “XU” must be used on secondary CPT codes.</p>\n                    <p>2. Modifier “59” for commercial insurance must be used on secondary CPT codes</p>\n                    <p>3. Do not bill these tests on the same day as a physical</p>\n                </td>\n\n                <td class=\"fifty\">\n                    <h4>Obesity Counseling ICD 10 Codes for Z68 CPT Codes Shown Below</h4>\n                    <p><label><input type=\"checkbox\" checked>G0447 Face-to-face obesity Counseling. 15 minutes:\n                            $40</label></p>\n                    <p><label><input type=\"checkbox\" checked>G0473 Face-to-face Obesity Counseling for groups of (2-10)\n                            30 minutes:\n                            $20</label></p>\n                </td>\n            </tr>\n\n\n\n\n        </table>\n        <h2 class=\"table2_header\"> INTENSIVE BEHAVIORAL THERAPY (IBT) FOR OBESITY ICD10 DIAGNOSTIC CODES\n        </h2>\n        <table class=\"table_two\">\n\n            <tr>\n                <td>\n                    <label> <input type=\"checkbox\" [(ngModel)]=\"reportDetails.reportData[0].BMI29\"\n                            [ngModelOptions]=\"{standalone: true}\">\n                        Z68.29 <span> BMI 29 to 29.9</span> </label>\n                </td>\n                <td>\n                    <label><input type=\"checkbox\" [(ngModel)]=\"reportDetails.reportData[0].BMI33\"\n                            [ngModelOptions]=\"{standalone: true}\">\n                        Z68.33 <span> BMI 33 to 33.9</span> </label>\n                </td>\n                <td>\n                    <label><input type=\"checkbox\" [(ngModel)]=\"reportDetails.reportData[0].BMI37\"\n                            [ngModelOptions]=\"{standalone: true}\">\n                        Z68.37<span> BMI 37 to 37.9</span> </label>\n                </td>\n                <td>\n                    <label><input type=\"checkbox\" [(ngModel)]=\"reportDetails.reportData[0].BMI45\"\n                            [ngModelOptions]=\"{standalone: true}\">\n                        Z68.42 <span>BMI 45 to 49.9 </span> </label>\n                </td>\n            </tr>\n\n            <tr>\n                <td>\n                    <label><input type=\"checkbox\" [(ngModel)]=\"reportDetails.reportData[0].BMI30\"\n                            [ngModelOptions]=\"{standalone: true}\">\n                        Z68.30 <span>BMI 30 to 30.9 </span> </label>\n                </td>\n                <td>\n                    <label><input type=\"checkbox\" [(ngModel)]=\"reportDetails.reportData[0].BMI34\"\n                            [ngModelOptions]=\"{standalone: true}\">\n                        Z68.34 <span> BMI 34 to 34.9 </span> </label>\n                </td>\n                <td>\n                    <label><input type=\"checkbox\" [(ngModel)]=\"reportDetails.reportData[0].BMI38\"\n                            [ngModelOptions]=\"{standalone: true}\">\n                        Z68.38 <span>BMI 38 to 38.9</span> </label>\n                </td>\n                <td>\n                    <label><input type=\"checkbox\" [(ngModel)]=\"reportDetails.reportData[0].BMI50\"\n                            [ngModelOptions]=\"{standalone: true}\">\n                        Z68.43 <span>BMI 50 to 59.9</span> </label>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <label><input type=\"checkbox\" [(ngModel)]=\"reportDetails.reportData[0].BMI31\"\n                            [ngModelOptions]=\"{standalone: true}\">\n                        Z68.31 <span>BMI 31 to 31.9</span> </label>\n                </td>\n                <td>\n                    <label><input type=\"checkbox\" [(ngModel)]=\"reportDetails.reportData[0].BMI35\"\n                            [ngModelOptions]=\"{standalone: true}\">\n                        Z68.35 <span> BMI 35 to 35.9 </span> </label>\n                </td>\n                <td>\n                    <label><input type=\"checkbox\" [(ngModel)]=\"reportDetails.reportData[0].BMI39\"\n                            [ngModelOptions]=\"{standalone: true}\">\n                        Z68.39 <span>BMI 39 to 39.9</span> </label>\n                </td>\n                <td>\n                    <label><input type=\"checkbox\" [(ngModel)]=\"reportDetails.reportData[0].BMI60\"\n                            [ngModelOptions]=\"{standalone: true}\">\n                        Z68.44 <span>BMI 60 to 69.9</span> </label>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <label><input type=\"checkbox\" [(ngModel)]=\"reportDetails.reportData[0].BMI32\"\n                            [ngModelOptions]=\"{standalone: true}\">\n                        Z68.32 <span>BMI 32 to 32.9</span> </label>\n                </td>\n                <td>\n                    <label><input type=\"checkbox\" [(ngModel)]=\"reportDetails.reportData[0].BMI36\"\n                            [ngModelOptions]=\"{standalone: true}\">\n                        Z68.36 <span>BMI 36 to 36.9 </span> </label>\n                </td>\n                <td>\n                    <label><input type=\"checkbox\" [(ngModel)]=\"reportDetails.reportData[0].BMI40\"\n                            [ngModelOptions]=\"{standalone: true}\">\n                        Z68.41 <span>BMI 40 to 44.9</span> </label>\n                </td>\n                <td>\n                    <label><input type=\"checkbox\" [(ngModel)]=\"reportDetails.reportData[0].BMI70\"\n                            [ngModelOptions]=\"{standalone: true}\">\n                        Z68.45 <span>BMI 70 and over</span> </label>\n                </td>\n            </tr>\n\n\n           \n\n        </table>\n        <a class=\"line_link\" target=\"_blank\"\n        href=\"https://www.cms.gov/medicare-coverage-database/details/nca-decision-memo.aspx?&NcaName=Intensive%20Behavioral%20Therapy%20for%20Obesity&bc=ACAAAAAAIAAA&NCAId=253&\">Clinical\n        Obesity Counselling - Qualifications, Procedures and On-going Requirements</a>\n\n    </form>\n\n\n</mat-card-content>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor/doctor-footer/doctor-footer.component.html":
  /*!********************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor/doctor-footer/doctor-footer.component.html ***!
    \********************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsDoctorDoctorFooterDoctorFooterComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<mat-card-content class=\"footer_section\">\n    <span class=\"footer_content\">\n  \n      <mat-card-content class=\"link\">\n        <a href=\"\">Privacy Policy</a>\n        <a href=\"\"> Terms & conditions</a>\n      </mat-card-content>\n      <p>© Copyright {{ htmlData.year }} Advanced Wellness Solutions- All Rights Reserved</p>\n    </span>\n  </mat-card-content>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor/doctor-header/doctor-header.component.html":
  /*!********************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor/doctor-header/doctor-header.component.html ***!
    \********************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsDoctorDoctorHeaderDoctorHeaderComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<ng-container *ngIf=\"main_user.flag == true\">\n  <button mat-menu-item (click)=\"returnToAdmin()\">\n    <mat-icon>power_settings_new</mat-icon> {{ main_user.buttonText }}\n  </button>\n</ng-container>\n\n<mat-toolbar class=\"techdashboard_header\" [ngClass]=\"{'sticky' : isSticky}\">\n  <mat-card-content class=\"header_wrapper\">\n    <span class=\"logo_wrapper\" [routerLink]=\"[ '/biller/dashboard' ]\">\n      <img src=\"../../../assets/images/logo.png\">\n    </span>\n\n    <mat-card-content *ngIf=\"user_data.headerFlag != 'undefined'\" class=\"quotation\">\n      <button mat-flat-button (click)=\"menuFunction()\" class=\"togle_menu\">\n        <i class=\"material-icons\"> menu </i>\n      </button>\n\n      <mat-card-content class=\"quotation\" [ngClass]=\"toggleStatus ? 'success' : 'danger'\">\n        <mat-nav-list>\n          <a mat-list-item routerLinkActive=\"active\" [routerLink]=\"['/doctor/dashboard']\"> Dashboard </a>\n          <a mat-list-item [routerLink]=\"['/doctor/doctor-office-management']\" routerLinkActive=\"active\"> Manage Doctor Office </a>\n          <a mat-list-item [routerLink]=\"['/doctor/faq']\" routerLinkActive=\"active\"> FAQ </a>\n        </mat-nav-list>\n      </mat-card-content>\n    </mat-card-content>\n\n    <ng-container *ngIf=\"user_data.headerFlag == 'undefined'\">\n      <button mat-flat-button (click)=\"menuFunction()\" class=\"togle_menu\">\n        <i class=\"material-icons\"> menu </i>\n      </button>\n\n      <mat-card-content class=\"quotation\" [ngClass]=\"toggleStatus ? 'success' : 'danger'\">\n        <mat-nav-list>\n          <a mat-list-item routerLinkActive=\"active\" [routerLink]=\"['/doctor/dashboard']\"> Dashboard </a>\n          <ng-container *ngIf=\"flag == 0\">\n          <a mat-list-item [routerLink]=\"['/doctor/tech-management']\" routerLinkActive=\"active\"> Manage Tech </a>\n          </ng-container>\n          <ng-container *ngIf=\"flag == 1\">\n            <a mat-list-item [routerLink]=\"['/admin/doctor/tech-management']\" routerLinkActive=\"active\"> Manage Tech </a>\n            </ng-container>\n          <a mat-list-item [routerLink]=\"['/doctor/biller-management']\" routerLinkActive=\"active\"> Manage Biller </a>\n          <a mat-list-item [routerLink]=\"['/doctor/doctor-office-management']\" routerLinkActive=\"active\"> Manage Doctor Office </a>\n          <a mat-list-item [routerLink]=\"['/doctor/faq']\" routerLinkActive=\"active\"> FAQ </a>\n          <a mat-list-item [routerLink]=\"['/doctor/reports-details']\" routerLinkActive=\"active\"> CPT Validate Reports </a>\n        </mat-nav-list>\n      </mat-card-content>\n    </ng-container>\n\n\n    <mat-card-content class=\"profile_section\">\n      <mat-menu #appMenu=\"matMenu\">\n        <button mat-menu-item [routerLink]=\"['/doctor/account-settings']\">\n          <mat-icon>account_circle</mat-icon> Account Settings\n        </button>\n        <button mat-menu-item [routerLink]=\"['/doctor/account-settings/change-password']\">\n          <mat-icon>vpn_key</mat-icon> Change Password\n        </button>\n        <ng-container *ngIf = \"flag == 0\">\n        <button mat-menu-item (click)=\"logout()\">\n          <mat-icon>power_settings_new</mat-icon> Logout\n        </button>\n      </ng-container>\n      <ng-container *ngIf = \"flag == 1\">\n        <button mat-menu-item [routerLink]=\"['/admin/dashboard']\">\n          <mat-icon>vpn_key</mat-icon> Return to My Account\n        </button>\n      </ng-container>\n      </mat-menu>\n      <span class=\"username\">{{user_data.firstname}} {{user_data.lastname}}</span>\n      <button mat-icon-button [matMenuTriggerFor]=\"appMenu\">\n        <span class=\"user_profile\">\n          <mat-icon>account_circle</mat-icon>\n          <i class=\"material-icons\">\n            keyboard_arrow_down\n          </i>\n        </span>\n      </button>\n\n    </mat-card-content>\n  </mat-card-content>\n</mat-toolbar>\n<!-- end header -->\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor/signature-management/signature-management.component.html":
  /*!**********************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor/signature-management/signature-management.component.html ***!
    \**********************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsDoctorSignatureManagementSignatureManagementComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<app-doctor-header></app-doctor-header>\n\n\n<mat-card-content class=\"content_wrapper\">\n  <mat-card-content class=\"itemsection\">\n    <mat-card-content class=\"one uploadsign\">\n      <p>Manage Your Signature </p>\n\n    </mat-card-content>\n\n    <span class=\"section_title\">\n      <img src=\"../../../../assets/images/editicon.png\">\n    </span>\n\n    <span class=\"signaturefont\">{{ htmlText.viewSign }}</span>\n\n    <mat-card-content class=\"sign_uploader\">\n      <span class=\"sing_box\">\n        <input type=\"text\" [(ngModel)]=\"htmlText.viewSign\" (keyup)=\"removeErrorMessage();\">\n        <br/>\n        <span style=\"color: red;\">{{ htmlText.errorMessage }}</span>\n      </span>\n\n      <br />\n\n      <span class=\"sing_box\">\n        <button class=\"signature_upload\" (click)=\"updateSignature();\" mat-flat-button>{{ htmlText.buttonText }}</button>\n      </span>\n    </mat-card-content>\n  </mat-card-content>\n</mat-card-content>\n\n<!-- Tech Footer -->\n<app-admin-footer></app-admin-footer>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/encounter-form/encounter-form.component.html":
  /*!***************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/encounter-form/encounter-form.component.html ***!
    \***************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsEncounterFormEncounterFormComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>New york report pdf</title>\n    <style>\n        body {\n            margin: 0;\n            padding: 0;\n            font-family: sans-serif;\n        }\n\n        .min_wrapr {\n            width: 798px;\n            height:auto;\n            background: #fff;\n            margin: 50px auto;\n            border: 1px solid #3a3838;\n        }\n\n        table {\n            width: 100%;\n        }\n\n        table th,\n        table td {\n            padding: 4px 8px;\n            vertical-align: top;\n        }\n\n        table tr td p {\n            display: flex;\n            margin: 0;\n            box-sizing: border-box;\n            font-size: 12px;\n        }\n\n        table tr td p span {\n            min-width: 124px;\n        }\n\n        table tr td p input[type='text'] {\n            width: 100%;\n            font-family: sans-serif;\n            border: none;\n            border-bottom: 1px solid #252424;\n            padding-bottom: 4px;\n            background: none;\n        }\n\n        table tr td p input[type='text']:focus {\n            outline: none;\n        }\n\n        .suggestBill {\n            border: 1px solid #6b6a6a;\n            padding: 4px;\n            justify-content: center;\n            margin-bottom: 6px;\n        }\n\n        .bill_amount {\n            flex-wrap: wrap;\n        }\n\n        .bill_amount label {\n            font-size: 12px;\n        }\n\n        .middle_part h2 {\n            color: #f50808;\n            font-size: 12px;\n            text-align: center;\n            border: 2px solid #3e3c3c;\n            padding: 8px 0;\n            border-left: 0;\n            border-right: 0;\n            box-sizing: border-box;\n            margin: 0;\n        }\n\n        .chkValue {\n            min-width: 70px;\n            font-size: 10px;\n            display: flex;\n            align-items: center;\n        }\n  \n        .inner_form table {\n            border-collapse: collapse;\n        }\n\n        .inner_form tr td {\n            width: 50%;\n            padding: 1px;\n        }\n\n        .inner_form tr td span {\n            font-size: 10px;\n        }\n\n        h3 {\n            font-size: 10px;\n            margin: 3px auto;\n            border-bottom: 1px solid #302f31;\n            width: 215px;\n        }\n        ul li{\n            font-size: 10px; margin: 2px 0;\n        }\n    </style>\n</head>\n\n<body>\n    <div class=\"min_wrapr\">\n        <div class=\"top_part\">\n            <table>\n                <tr>\n                    <td>\n                        <p><span> Patient Name</span><input type=\"text\"></p>\n                    </td>\n                    <td>\n                        <p><label style=\"border: none;\">M <input type=\"checkbox\"></label> <label style=\"border: none;\">F\n                                <input type=\"checkbox\"></label></p>\n                    </td>\n                    <td>\n                        <p><span>Test Date</span><input type=\"text\" value=\"test patient name\"></p>\n                    </td>\n                </tr>\n\n                <tr>\n                    <td colspan=\"2\">\n                        <p><span> Ordering Physician</span><input type=\"text\" value=\"patient name\"> </p>\n                    </td>\n                    <td>\n                        <p><span style=\"text-align: right; padding-right: 16px;\"> D.O.B</span><input type=\"text\"\n                                value=\"test patient name\"></p>\n                    </td>\n                </tr>\n\n                <tr>\n                    <td colspan=\"2\">\n                        <p><span>Physician’s Signature</span><input type=\"text\" value=\"patient name\"> </p>\n                    </td>\n                    <td style=\"width: 45%;\">\n                        <p class=\"suggestBill\">Suggested billing amounts per CPT</p>\n                        <p class=\"bill_amount\">\n                            <label><input type=\"checkbox\">95923: $410</label>\n                            <label><input type=\"checkbox\">95943: $440</label>\n                            <label><input type=\"checkbox\">95921: $280</label>\n                            <label><input type=\"checkbox\">93923: $250.00</label>\n                            <label><input type=\"checkbox\">93922: $280</label>\n\n\n                        </p>\n\n                    </td>\n                </tr>\n\n\n                <tr>\n                    <td colspan=\"2\">\n                        <p><span>Patient’s Insurance Carrier (s)</span><input type=\"text\" value=\"patient name\"> </p>\n                    </td>\n                    <td>\n                        <p> <label><input type=\"checkbox\">No Diagnoses Established</label></p>\n                    </td>\n                </tr>\n            </table>\n        </div>\n\n\n        <div class=\"middle_part\">\n            <h2>ICD 10 DIAGNOSTIC CODES TO BE USED WITH CPT CODE: 95921 (or use 95943 is allowed), and 95923</h2>\n\n\n            <div class=\"inner_form\">\n                <table>\n                    <tr>\n                        <td style=\"border-right: 2px solid #000;\">\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">E08.40</label>\n                                <span>Type 1 Diabetes W/ Neurological Manifestations, Not Stated as\n                                    Uncontrolled</span> </p>\n                        </td>\n\n                        <td>\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">G60.3 </label>\n                                <span>Idiopathic progressive neuropathy</span> </p>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"border-right: 2px solid #000;\">\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">E10.41</label>\n\n                                <span>Type 1 Diabetes Mellitus W/ Diabetic Mononeuropathy</span> </p>\n                        </td>\n\n                        <td>\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">G60.8 </label>\n                                <span>Other hereditary and idiopathic neuropathies</span> </p>\n                        </td>\n                    </tr>\n\n                    <tr>\n                        <td style=\"border-right: 2px solid #000;\">\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">E10.42</label>\n                                <span>Type 1 Diabetes Mellitus W/ Diabetic Polyneuropathy</span> </p>\n                        </td>\n\n                        <td>\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">G60.9</label>\n                                <span>Hereditary and idiopathic neuropathy, unspecified</span> </p>\n                        </td>\n                    </tr>\n\n                    <tr>\n                        <td style=\"border-right: 2px solid #000;\">\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">E10.43</label>\n                                <span> Type 1 Diabetes Mellitus W/ Diabetic Autonomic (Poly) Neuropathy</span> </p>\n                        </td>\n\n                        <td>\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">G62.9</label>\n                                <span> Polyneuropathy, unspecified</span> </p>\n                        </td>\n                    </tr>\n\n                    <tr>\n                        <td style=\"border-right: 2px solid #000;\">\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">E10.44</label>\n                                <span>Type 1 Diabetes Mellitus W/ Diabetic Amyotrophy</span> </p>\n\n                        </td>\n\n                        <td>\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">G90.09</label>\n                                <span>Other idiopathic peripheral autonomic neuropathy </span> </p>\n                        </td>\n                    </tr>\n\n                    <tr>\n                        <td style=\"border-right: 2px solid #000;\">\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">E10.49</label>\n                                <span>Type 1 Diabetes Mellitus W/ Other Diabetic Neurological Complications </span> </p>\n\n                        </td>\n\n                        <td>\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">G90.3</label>\n                                <span>Multi-system degeneration of the autonomic nervous system</span> </p>\n                        </td>\n                    </tr>\n\n                    <tr>\n                        <td style=\"border-right: 2px solid #000;\">\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">E10.610</label>\n                                <span>Type 1 Diabetes (Juvenile) W/ diabetic Neuropathic Arthropathy </span> </p>\n\n                        </td>\n\n                        <td>\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">G90.50</label>\n                                <span> Complex regional pain syndrome I, unspecified</span> </p>\n                        </td>\n                    </tr>\n\n                    <tr>\n                        <td style=\"border-right: 2px solid #000;\">\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">E11.9</label>\n                                <span> Type 2 Diabetes Without Complications (non-Medicare) </span> </p>\n\n                        </td>\n\n                        <td>\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">G90.59</label>\n                                <span> Complex regional pain syndrome I of other specified site</span> </p>\n                        </td>\n                    </tr>\n\n                    <tr>\n                        <td style=\"border-right: 2px solid #000;\">\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">E11.41</label>\n                                <span> Type 2 Diabetes Mellitus W/ Diabetic Mononeuropathy</span> </p>\n\n                        </td>\n\n                        <td>\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">R00.0</label>\n                                <span> Tachycardia, unspecified Abnormal Heart Rhythm & Electrical Stability</span> </p>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"border-right: 2px solid #000;\">\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">E11.42</label>\n                                <span>Type 2 Diabetes Mellitus W/ Diabetic Polyneuropathy </span> </p>\n\n                        </td>\n\n                        <td>\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">R55</label>\n                                <span> Vasovagal Syndrome/Syncope and collapse </span> </p>\n                        </td>\n                    </tr>\n\n                    <tr>\n                        <td style=\"border-right: 2px solid #000;\">\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">E11.43</label>\n                                <span>Type 2 Diabetes Mellitus W/ Diabetic Polyneuropathy Type 2 Diabetes W/ Autonomic\n                                    Neuropathy </span> </p>\n\n                        </td>\n\n                        <td>\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">R73.01</label>\n                                <span> Impaired fasting glucose (Non-Medicare) </span> </p>\n                        </td>\n                    </tr>\n\n                    <tr>\n                        <td style=\"border-right: 2px solid #000;\">\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\"> E11.44</label>\n                                <span> Type 2 Diabetes Mellitus W/Diabetic Amyotrophy </span> </p>\n\n                        </td>\n\n                        <td>\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">R73.03</label>\n                                <span>Prediabetes (Non-Medicare) </span> </p>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"border-right: 2px solid #000;\">\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">E11.49</label>\n                                <span>\n                                    Type 2 Diabetes Mellitus W/ Other Diabetic Neurological Complications </span> </p>\n                        </td>\n\n                        <td>\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">G90.50</label>\n                                <span>Complex regional pain syndrome I, unspecified</span> </p>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"border-right: 2px solid #000;\">\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\"> E85.0 </label>\n                                <span>Mediterranean Fever </span> </p>\n                        </td>\n\n                        <td>\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">G90.511</label>\n                                <span> Complex regional pain syndrome I of right upper limb </span> </p>\n                        </td>\n                    </tr>\n\n                    <tr>\n                        <td style=\"border-right: 2px solid #000;\">\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">E85.1</label>\n                                <span>Neuropathic Heredofamilial Amyloidosis </span> </p>\n                        </td>\n\n                        <td>\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">G90.512</label>\n                                <span> Complex regional pain syndrome I of left upper limb </span> </p>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"border-right: 2px solid #000;\">\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">E85.3</label>\n                                <span>Secondary Systemic Amyloidosis </span> </p>\n                        </td>\n\n                        <td>\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">G90.513</label>\n                                <span> Complex regional pain syndrome I of upper limb, bilateral </span> </p>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"border-right: 2px solid #000;\">\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">E85.4</label>\n                                <span> Organ – Limited Amyloidosis </span> </p>\n                        </td>\n\n                        <td>\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">G90.521</label>\n                                <span> Complex regional pain syndrome I of right lower limb </span> </p>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"border-right: 2px solid #000;\">\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">G20.0 </label>\n                                <span> Parkinson’s Disease </span> </p>\n                        </td>\n\n                        <td>\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">G90.522</label>\n                                <span>Complex regional pain syndrome I of left lower limb </span> </p>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"border-right: 2px solid #000;\">\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">G23.0</label>\n                                <span> Hallervorden – Spatz Disease </span> </p>\n                        </td>\n\n                        <td>\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">G90.523</label>\n                                <span> Complex regional pain syndrome I of lower limb, bilateral </span> </p>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"border-right: 2px solid #000;\">\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">G23.1</label>\n                                <span> Progressive supranuclear ophthalmoplegia [Steele-Richardson Olszewski]</span>\n                            </p>\n                        </td>\n\n                        <td>\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">G90.59</label>\n                                <span> Complex regional pain syndrome I of other specified site </span> </p>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"border-right: 2px solid #000;\">\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">G23.2</label>\n                                <span> Striatonigral degeneration</span> </p>\n                        </td>\n\n                        <td>\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">I95.1</label>\n                                <span> Orthostatic Hypotension </span> </p>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"border-right: 2px solid #000;\">\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">G23.8</label>\n                                <span> Other specified degenerative diseases of basal ganglia </span> </p>\n                        </td>\n\n                        <td>\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">R61 </label>\n                                <span>Generalized hyperhidrosis\n                                </span> </p>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n        <!-- end middle part -->\n        <div class=\"middle_part\">\n            <h2>ICD 10 DIAGNOSTIC CODES TO BE USED WITH CPT CODE: 93922 or 93923 (93923 1 UNIT FOR UPPER AND 1 UNIT FOR\n                LOWER EXTREMITY) REQUIRED ANSILLARY TESTING: ABI, WAVE FORM DOPPLER OR PULSE WAVE /PHOTO PLETHYSMOGRAPHY\n                DEVICE </h2>\n\n\n            <div class=\"inner_form\">\n                <table>\n                    <tr>\n                        <td style=\"border-right: 2px solid #000;\">\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">E10.59</label>\n                                <span> Type 1 Diabetes W/ Other Circulatory Complications</span> </p>\n                        </td>\n\n                        <td>\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">I70.222</label>\n                                <span> Atherosclerosis of native arteries of extremities with rest pain, left leg</span>\n                            </p>\n                        </td>\n                    </tr>\n\n                    <tr>\n                        <td style=\"border-right: 2px solid #000;\">\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">E11.59</label>\n                                <span> Type 2 Diabetes W/ Other Circulatory Complications </span> </p>\n                        </td>\n\n                        <td>\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">I70.223</label>\n                                <span> Atherosclerosis of native arteries of extremities with rest pain, Bilateral legs\n                                </span> </p>\n                        </td>\n                    </tr>\n\n                    <tr>\n                        <td style=\"border-right: 2px solid #000;\">\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">G45.8</label>\n                                <span> Other Transient Cerebral Ischemic Attacks and Related Syndrome </span> </p>\n                        </td>\n\n                        <td>\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">I70.228</label>\n                                <span> Atherosclerosis of native arteries of extremities with rest pain, other extremity\n                                </span> </p>\n                        </td>\n                    </tr>\n\n                    <tr>\n                        <td style=\"border-right: 2px solid #000;\">\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">I10</label>\n                                <span> Hypertension Unspecified (Non-Medicare) </span>&nbsp; <b>130/80</b> </p>\n                        </td>\n\n                        <td>\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">I70.268 </label>\n                                <span> Atherosclerosis of native arteries of extremities with gangrene, Other extremity\n                                </span> </p>\n                        </td>\n                    </tr>\n\n                    <tr>\n                        <td style=\"border-right: 2px solid #000;\">\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">I59.1</label>\n                                <span> Heart disease, unspecified (Non-Medicare) </span> </p>\n                        </td>\n\n                        <td>\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">I70.268</label>\n                                <span> Atherosclerosis of native arteries of extremities with gangrene, Other extremity\n                                </span> </p>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"border-right: 2px solid #000;\">\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">I70.209</label>\n                                <span> Atherosclerosis Native Arteries Extremities Unspecified (non-Medicare) </span>\n                            </p>\n                        </td>\n\n                        <td>\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">I70.25</label>\n                                <span> Atherosclerosis of native arteries of other extremities with Ulceration </span>\n                            </p>\n                        </td>\n                    </tr>\n\n                    <tr>\n                        <td style=\"border-right: 2px solid #000;\">\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">I70.211</label>\n                                <span> Atherosclerosis of native arteries of extremities with intermittent Claudication,\n                                    right leg </span> </p>\n                        </td>\n\n                        <td>\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">I72.1 </label>\n                                <span> Aneurysm of artery of upper extremity </span> </p>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"border-right: 2px solid #000;\">\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">I70.212</label>\n                                <span> Atherosclerosis of native arteries of extremities with intermittent Claudication,\n                                    left leg </span> </p>\n                        </td>\n\n                        <td>\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">I72.4</label>\n                                <span> Aneurysm of artery of lower extremity </span> </p>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"border-right: 2px solid #000;\">\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">I70.212</label>\n                                <span> I70.213 Atherosclerosis of native arteries of extremities with intermittent\n                                    Claudication, bilateral leg</span> </p>\n                        </td>\n\n                        <td>\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">I73.89</label>\n                                <span> Other specified peripheral vascular diseases </span> </p>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"border-right: 2px solid #000;\">\n                            <h3> ADDITIONAL POTENTIAL HEALTH RISKS </h3>\n                        </td>\n\n                        <td>\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">I73.9 </label>\n                                <span> Peripheral vascular disease, unspecified </span> </p>\n                        </td>\n                    </tr>\n\n                    <tr>\n                        <td style=\"border-right: 2px solid #000;\">\n                            <div>\n                              <ul>\n                                  <li>Lorem ipsum dolor sit amet consectetur adipisicing elit. Ad, deserunt.</li>\n                                  <li>Lorem ipsum dolor sit amet consectetur adipisicing elit. Ad, deserunt.</li>\n                                  <li>Lorem ipsum dolor sit amet consectetur adipisicing elit. Ad, deserunt.</li>\n                                  <li>Lorem ipsum dolor sit amet consectetur adipisicing elit. Ad, deserunt.</li>\n                              </ul>\n                                    <!-- </p> -->\n                            </div>\n                        </td>\n\n                        <td>\n                            <p> <label class=\"chkValue\"><input type=\"checkbox\">R08.8 9 </label>\n                                <span>    Other Specific Signs & Symptoms of Circulatory & Respiratory  Systems </span> </p>\n\n                                <div style=\"min-height: 40px;\">\n                                    <h3> Pre-Existing Diagnoses:</h3>\n\n                                </div>\n                                <div style=\"min-height: 40px;\">\n                                    <h3> Additional Physician’s Chart Notes</h3>\n                                </div>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n\n    </div>\n</body>\n\n</html>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/lazyload-training/training-management/manage-lesson/add-edit-lesson/add-edit-lesson.component.html":
  /*!*********************************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/lazyload-training/training-management/manage-lesson/add-edit-lesson/add-edit-lesson.component.html ***!
    \*********************************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsLazyloadTrainingTrainingManagementManageLessonAddEditLessonAddEditLessonComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- Admin Header -->\n<app-admin-header *ngIf=\"userData.user_type == 'admin'\"></app-admin-header>\n\n\n<mat-card class=\"admin_wrapper\">\n  <!-- header with add button -->\n  <mat-card-content class=\"table_wrapper\">\n    <mat-toolbar class=\"top_header\">\n      <h2> Manage Lesson </h2>\n    </mat-toolbar>\n\n  <span class=\"add_header\">\n\n  <ng-container *ngIf=\"userData.user_type == 'admin'\">\n    <span class=\"bradcrumb\"><a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp;  {{header_txt}}</span>\n    <!-- <button mat-flat-button [routerLink]=\"['/admin/faq-management/add']\">Add FAQ</button> -->\n  </ng-container>\n</span>\n<!-- End header with add button -->\n\n<div class=\"form2_wrapper\">\n\n    <lib-traning \n    [formdata]=\"formdataval\" \n    [serverDetails]=\"serverDetails\" \n    [formSource]=\"formSource\"\n    [ObjectId]=\"additionalData\"\n    [ListingPageRoute]=\"listingPageRoute\"\n    [IsItDna]=\"isitdna\"></lib-traning>\n\n</div>\n</mat-card-content>\n</mat-card>\n\n\n<!-- Admin Footer -->\n<app-admin-footer *ngIf=\"userData.user_type == 'admin'\"></app-admin-footer>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/lazyload-training/training-management/manage-lesson/list-lesson/list-lesson.component.html":
  /*!*************************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/lazyload-training/training-management/manage-lesson/list-lesson/list-lesson.component.html ***!
    \*************************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsLazyloadTrainingTrainingManagementManageLessonListLessonListLessonComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- Admin Header -->\n<app-admin-header *ngIf=\"userData.user_type == 'admin'\"></app-admin-header>\n\n\n<mat-card class=\"admin_wrapper\">\n    <!-- header with add button -->\n    <mat-card-content class=\"table_wrapper\">\n        <mat-toolbar class=\"top_header\">\n            <h2> Manage Lesson </h2>\n        </mat-toolbar>\n\n        <span class=\"add_header\">\n\n            <ng-container *ngIf=\"userData.user_type == 'admin'\">\n                <span class=\"bradcrumb\"><a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp; List\n                    Lesson</span>\n                <!-- <button mat-flat-button [routerLink]=\"['/admin/faq-management/add']\">Add FAQ</button> -->\n            </ng-container>\n        </span>\n        <!-- End header with add button -->\n\n        <div class=\"form2_wrapper\">\n\n            <lib-list-lession \n            [allDataList]=\"manageLessionList\"\n            [serverDetails]=\"serverDetails\"\n            [formSource]=\"formSource\"\n            [EditPageRoute]=\"editPageRoute\"\n            [AddPageRoute]=\"addPageRoute\"\n            [SearchSourceName]=\"searchSourceName\"\n            [ManageQuizRoute]=\"manageQuizRoute\"\n            [IsItDna]=\"isitdna\"></lib-list-lession>\n\n            <h2 *ngIf=\"manageLessionList.length == 0\">No record found.</h2>\n        </div>\n    </mat-card-content>\n</mat-card>\n\n\n<!-- Admin Footer -->\n<app-admin-footer *ngIf=\"userData.user_type == 'admin'\"></app-admin-footer>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/lazyload-training/training-management/manage-quiz/add-edit-answer/add-edit-answer.component.html":
  /*!*******************************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/lazyload-training/training-management/manage-quiz/add-edit-answer/add-edit-answer.component.html ***!
    \*******************************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsLazyloadTrainingTrainingManagementManageQuizAddEditAnswerAddEditAnswerComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- Admin Header -->\n<app-admin-header *ngIf=\"userData.user_type == 'admin'\"></app-admin-header>\n\n\n<mat-card class=\"admin_wrapper\">\n    <!-- header with add button -->\n    <mat-card-content class=\"table_wrapper\">\n        <mat-toolbar class=\"top_header\">\n            <h2> Manage Answer </h2>\n        </mat-toolbar>\n\n        <span class=\"add_header\">\n\n            <ng-container *ngIf=\"userData.user_type == 'admin'\">\n                <span class=\"bradcrumb\"><a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp; {{header_txt}}</span>\n                <!-- <button mat-flat-button [routerLink]=\"['/admin/faq-management/add']\">Add FAQ</button> -->\n            </ng-container>\n        </span>\n        <!-- End header with add button -->\n\n        <div class=\"form2_wrapper\">\n\n            <lib-add-update-answer\n            [ParamsId]=\"paramsId\"\n            [serverDetails]=\"serverDetails\" \n            [formSource]=\"formSource\"\n            [ListingPageRoute]=\"listingPageRoute\"\n            [LessonId]=\"lessonId\"\n            [DnaFlag]=\"dnaFlag\"></lib-add-update-answer>\n\n        </div>\n    </mat-card-content>\n</mat-card>\n\n\n<!-- Admin Footer -->\n<app-admin-footer *ngIf=\"userData.user_type == 'admin'\"></app-admin-footer>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/lazyload-training/training-management/manage-quiz/add-edit-quiz/add-edit-quiz.component.html":
  /*!***************************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/lazyload-training/training-management/manage-quiz/add-edit-quiz/add-edit-quiz.component.html ***!
    \***************************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsLazyloadTrainingTrainingManagementManageQuizAddEditQuizAddEditQuizComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- Admin Header -->\n<app-admin-header *ngIf=\"userData.user_type == 'admin'\"></app-admin-header>\n\n\n<mat-card class=\"admin_wrapper\">\n    <!-- header with add button -->\n    <mat-card-content class=\"table_wrapper\">\n        <mat-toolbar class=\"top_header\">\n            <h2> Manage Quiz </h2>\n        </mat-toolbar>\n\n        <span class=\"add_header\">\n\n            <ng-container *ngIf=\"userData.user_type == 'admin'\">\n                <span class=\"bradcrumb\"><a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp; {{header_txt}}</span>\n                <!-- <button mat-flat-button [routerLink]=\"['/admin/faq-management/add']\">Add FAQ</button> -->\n            </ng-container>\n        </span>\n        <!-- End header with add button -->\n\n        <div class=\"form2_wrapper\">\n\n            <lib-add-edit [serverDetails]=\"serverDetails\" [formSource]=\"formSource\"\n                [ListingPageRoute]=\"listingPageRoute\" [DataList]=\"quizQuestionSingleDataList\" [LessonId]=\"lessonId\"\n                [lessonIdInedit]=\"lessonIdInedit\"></lib-add-edit>\n        </div>\n    </mat-card-content>\n</mat-card>\n\n\n<!-- Admin Footer -->\n<app-admin-footer *ngIf=\"userData.user_type == 'admin'\"></app-admin-footer>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/lazyload-training/training-management/manage-quiz/list-answer/list-answer.component.html":
  /*!***********************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/lazyload-training/training-management/manage-quiz/list-answer/list-answer.component.html ***!
    \***********************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsLazyloadTrainingTrainingManagementManageQuizListAnswerListAnswerComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- Admin Header -->\n<app-admin-header *ngIf=\"userData.user_type == 'admin'\"></app-admin-header>\n\n\n<mat-card class=\"admin_wrapper\">\n    <!-- header with add button -->\n    <mat-card-content class=\"table_wrapper\">\n        <mat-toolbar class=\"top_header\">\n            <h2> Manage Answer </h2>\n        </mat-toolbar>\n\n        <span class=\"add_header\">\n\n            <ng-container *ngIf=\"userData.user_type == 'admin'\">\n                <span class=\"bradcrumb\"><a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage\n                    Answer</span>\n                <!-- <button mat-flat-button [routerLink]=\"['/admin/faq-management/add']\">Add FAQ</button> -->\n            </ng-container>\n        </span>\n        <!-- End header with add button -->\n\n        <div class=\"form2_wrapper\">\n\n            <lib-update-answer\n            [serverDetails]=\"serverDetails\" \n            [formSource]=\"formSource\"\n            [DataList]=\"quizAnswerList\">\n            </lib-update-answer>\n\n            <h2 *ngIf=\"quizAnswerList.length == 0\">No record found.</h2>\n        </div>\n    </mat-card-content>\n</mat-card>\n\n\n<!-- Admin Footer -->\n<app-admin-footer *ngIf=\"userData.user_type == 'admin'\"></app-admin-footer>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/lazyload-training/training-management/manage-quiz/list-quiz/list-quiz.component.html":
  /*!*******************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/lazyload-training/training-management/manage-quiz/list-quiz/list-quiz.component.html ***!
    \*******************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsLazyloadTrainingTrainingManagementManageQuizListQuizListQuizComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- Admin Header -->\n<app-admin-header *ngIf=\"userData.user_type == 'admin'\"></app-admin-header>\n\n\n<mat-card class=\"admin_wrapper\">\n    <!-- header with add button -->\n    <mat-card-content class=\"table_wrapper\">\n        <mat-toolbar class=\"top_header\">\n            <h2> Manage Quiz </h2>\n        </mat-toolbar>\n\n        <span class=\"add_header\">\n\n            <ng-container *ngIf=\"userData.user_type == 'admin'\">\n                <span class=\"bradcrumb\"><a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp; List\n                    Quiz</span>\n                <!-- <button mat-flat-button [routerLink]=\"['/admin/faq-management/add']\">Add FAQ</button> -->\n            </ng-container>\n        </span>\n        <!-- End header with add button -->\n\n        <div class=\"form2_wrapper\">\n\n            <lib-manage-quiz\n            [AddPageRoute]=\"addPageRoute\"\n            [LessonPageRoute]=\"lessonPageRoute\"\n            [allDataList]=\"quizQuestionList\"\n            [serverDetails]=\"serverDetails\"\n            [formSource]=\"formSource\"\n            [EditPageRoute]=\"editPageRoute\"\n            [AddUpdateAnswerRoute]=\"addUpdateAnswerRoute\"\n            [ParamsId] =\"paramsId\"\n            ></lib-manage-quiz>\n\n            <h2 *ngIf=\"quizQuestionList.length == 0\">No record found.</h2>\n        </div>\n    </mat-card-content>\n</mat-card>\n\n\n<!-- Admin Footer -->\n<app-admin-footer *ngIf=\"userData.user_type == 'admin'\"></app-admin-footer>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/lazyload-training/training-management/manage-training/add-edit-training/add-edit-training.component.html":
  /*!***************************************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/lazyload-training/training-management/manage-training/add-edit-training/add-edit-training.component.html ***!
    \***************************************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsLazyloadTrainingTrainingManagementManageTrainingAddEditTrainingAddEditTrainingComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- Admin Header -->\n<app-admin-header *ngIf=\"userData.user_type == 'admin'\"></app-admin-header>\n\n\n<mat-card class=\"admin_wrapper\">\n  <!-- header with add button -->\n  <mat-card-content class=\"table_wrapper\">\n    <mat-toolbar class=\"top_header\">\n      <h2> Manage Training </h2>\n    </mat-toolbar>\n\n  <span class=\"add_header\">\n\n  <ng-container *ngIf=\"userData.user_type == 'admin'\">\n    <span class=\"bradcrumb\"><a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp;  {{header_txt}}</span>\n    <!-- <button mat-flat-button [routerLink]=\"['/admin/faq-management/add']\">Add FAQ</button> -->\n  </ng-container>\n</span>\n<!-- End header with add button -->\n\n<div class=\"form2_wrapper\">\n\n    <lib-traning \n    [formdata]=\"formdataval\" \n    [serverDetails]=\"serverDetails\" \n    [formSource]=\"formSource\"\n    [ObjectId]=\"additionalData\"\n    [ListingPageRoute]=\"listingPageRoute\"\n    [IsItDna]=\"isDna\"></lib-traning>\n\n</div>\n</mat-card-content>\n</mat-card>\n\n\n<!-- Admin Footer -->\n<app-admin-footer *ngIf=\"userData.user_type == 'admin'\"></app-admin-footer>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/lazyload-training/training-management/manage-training/listing-training/listing-training.component.html":
  /*!*************************************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/lazyload-training/training-management/manage-training/listing-training/listing-training.component.html ***!
    \*************************************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsLazyloadTrainingTrainingManagementManageTrainingListingTrainingListingTrainingComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- Admin Header -->\n<app-admin-header *ngIf=\"userData.user_type == 'admin'\"></app-admin-header>\n\n\n<mat-card class=\"admin_wrapper\">\n  <!-- header with add button -->\n  <mat-card-content class=\"table_wrapper\">\n    <mat-toolbar class=\"top_header\">\n      <h2> Manage Training </h2>\n    </mat-toolbar>\n\n  <span class=\"add_header\">\n\n  <ng-container *ngIf=\"userData.user_type == 'admin'\">\n    <span class=\"bradcrumb\"><a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp;  List Training</span>\n    <!-- <button mat-flat-button [routerLink]=\"['/admin/faq-management/add']\">Add FAQ</button> -->\n  </ng-container>\n</span>\n<!-- End header with add button -->\n\n<div class=\"form2_wrapper\">\n\n  <lib-listing-training\n  [allDataList]=\"manageTrainingList\"\n  [serverDetails]=\"serverDetails\"\n  [formSource]=\"formSource\"\n  [EditPageRoute]=\"editPageRoute\"\n  [AddPageRoute]=\"addPageRoute\"\n  [SearchSourceName]=\"searchSourceName\"\n  ></lib-listing-training>\n\n<!-- <h2 *ngIf=\"manageTrainingList.length == 0\">No record found.</h2> -->\n</div>\n</mat-card-content>\n</mat-card>\n\n\n<!-- Admin Footer -->\n<app-admin-footer *ngIf=\"userData.user_type == 'admin'\"></app-admin-footer>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/sales-person/add-new-doctor/add-new-doctor.component.html":
  /*!****************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/sales-person/add-new-doctor/add-new-doctor.component.html ***!
    \****************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsSalesPersonAddNewDoctorAddNewDoctorComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<app-sales-person-header></app-sales-person-header>\n\n\n<!-- header with add button -->\n<mat-card class=\"admin_wrapper\">\n    <mat-card-content class=\"title_wrapper\">\n        {{ htmlText.header }}\n    </mat-card-content>\n\n    <span class=\"add_header\">\n        <span class=\"bradcrumb\">\n            <a [routerLink]=\"['/sales-person/dashboard']\">Dashboard &nbsp;/</a> &nbsp;\n            {{ htmlText.nav }}\n        </span>\n    </span>\n    <!-- End header with add button -->\n\n    <mat-card class=\"add_form\">\n        <mat-card-content class=\"form_wrapper\">\n            <form class=\"example-form\" autocomplete=\"off\" [formGroup]=\"doctorManagementAddEditForm\"\n                (ngSubmit)=\"doctorManagementAddEditFormSubmit()\">\n\n                <!-- First Name Start -->\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>First Name</mat-label>\n\n                    <input matInput placeholder=\"First Name\"\n                        [formControl]=\"doctorManagementAddEditForm.controls['firstname']\"\n                        (blur)=\"inputUntouch(doctorManagementAddEditForm,'firstname')\">\n\n                    <mat-error\n                        *ngIf=\"doctorManagementAddEditForm.controls['firstname'].touched && !doctorManagementAddEditForm.controls['firstname'].valid && doctorManagementAddEditForm.controls['firstname'].errors.required\">\n                        First Name required.\n                    </mat-error>\n\n                    <mat-error\n                        *ngIf=\"doctorManagementAddEditForm.controls['firstname'].touched && !doctorManagementAddEditForm.controls['firstname'].valid && doctorManagementAddEditForm.controls['firstname'].errors.maxlength\">\n                        First Name is not valid.\n                    </mat-error>\n                </mat-form-field>\n                <!-- First Name End -->\n\n                <!-- Last Name Start -->\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Last Name</mat-label>\n\n                    <input matInput placeholder=\"Last Name\"\n                        [formControl]=\"doctorManagementAddEditForm.controls['lastname']\"\n                        (blur)=\"inputUntouch(doctorManagementAddEditForm,'lastname')\">\n\n                    <mat-error\n                        *ngIf=\"doctorManagementAddEditForm.controls['lastname'].touched && !doctorManagementAddEditForm.controls['lastname'].valid && doctorManagementAddEditForm.controls['lastname'].errors.required\">\n                        Last Name required.\n                    </mat-error>\n\n                    <mat-error\n                        *ngIf=\"doctorManagementAddEditForm.controls['lastname'].touched && !doctorManagementAddEditForm.controls['lastname'].valid && doctorManagementAddEditForm.controls['lastname'].errors.maxlength\">\n                        Last Name is not valid.\n                    </mat-error>\n                </mat-form-field>\n                <!-- Last Name End -->\n\n                <!-- Email Start -->\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Email Address</mat-label>\n\n                    <input matInput placeholder=\"Email Address\"\n                        [formControl]=\"doctorManagementAddEditForm.controls['email']\"\n                        (blur)=\"inputUntouch(doctorManagementAddEditForm,'email')\">\n\n                    <mat-error\n                        *ngIf=\"doctorManagementAddEditForm.controls['email'].touched && !doctorManagementAddEditForm.controls['email'].valid && doctorManagementAddEditForm.controls['email'].errors.required\">\n                        Email required.\n                    </mat-error>\n\n                    <mat-error\n                        *ngIf=\"doctorManagementAddEditForm.controls['email'].touched && !doctorManagementAddEditForm.controls['email'].valid && doctorManagementAddEditForm.controls['email'].errors.email\">\n                        Email is not valid.\n                    </mat-error>\n                </mat-form-field>\n                <!-- Email End -->\n\n\n                <!-- Phone Number Start -->\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Phone Number</mat-label>\n\n                    <input matInput placeholder=\"Phone\" [formControl]=\"doctorManagementAddEditForm.controls['phone']\"\n                        (blur)=\"inputUntouch(doctorManagementAddEditForm,'phone')\">\n\n                    <mat-error\n                        *ngIf=\"doctorManagementAddEditForm.controls['phone'].touched && !doctorManagementAddEditForm.controls['phone'].valid && doctorManagementAddEditForm.controls['phone'].errors.required\">\n                        Phone Number required.\n                    </mat-error>\n\n                    <mat-error\n                        *ngIf=\"doctorManagementAddEditForm.controls['phone'].touched && !doctorManagementAddEditForm.controls['phone'].valid && doctorManagementAddEditForm.controls['phone'].errors.maxlength\">\n                        Phone Number is not valid.\n                    </mat-error>\n                </mat-form-field>\n                <!-- Phone Number End -->\n\n                <!-- FAX Start -->\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Fax</mat-label>\n\n                    <input matInput placeholder=\"Fax Number\" formControlName=\"fax\"\n                        (blur)=\"inputUntouch(doctorManagementAddEditForm,'fax')\">\n\n                    <mat-error\n                        *ngIf=\"doctorManagementAddEditForm.controls['fax'].touched && !doctorManagementAddEditForm.controls['fax'].valid && doctorManagementAddEditForm.controls['fax'].errors.required\">\n                        Fax required.\n                    </mat-error>\n                </mat-form-field>\n                <!-- FAX End -->\n\n                <!-- Practice Name Start  -->\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Practice Name</mat-label>\n\n                    <input matInput placeholder=\"Practice Name\" formControlName=\"practice_name\"\n                        (blur)=\"inputUntouch(doctorManagementAddEditForm, 'practice_name')\">\n\n                    <mat-error\n                        *ngIf=\"doctorManagementAddEditForm.controls['practice_name'].touched && !doctorManagementAddEditForm.controls['practice_name'].valid && doctorManagementAddEditForm.controls['practice_name'].errors.required\">\n                        Practice Name required.\n                    </mat-error>\n                </mat-form-field>\n                <!-- Practice Name Start  -->\n\n                <!-- Taxonomies Start -->\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Select Taxonomies</mat-label>\n                    <mat-select formControlName=\"taxo_list\" multiple>\n                        <mat-option [value]=\"\">Select Tech</mat-option>\n                        <mat-option *ngFor=\"let taxonomie of htmlText.taxonomies;\" value=\"{{ taxonomie.name }}\">\n                            {{ taxonomie.name }}</mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <!-- Taxonomies End -->\n\n                <!-- NPI Start  -->\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>#NPI</mat-label>\n\n                    <input matInput placeholder=\"#NPI Number\" formControlName=\"npi\"\n                        (blur)=\"inputUntouch(doctorManagementAddEditForm,'npi')\">\n\n                    <mat-error\n                        *ngIf=\"doctorManagementAddEditForm.controls['npi'].touched && !doctorManagementAddEditForm.controls['npi'].valid && doctorManagementAddEditForm.controls['npi'].errors.required\">\n                        #NPI required.\n                    </mat-error>\n                </mat-form-field>\n                <!-- NPI End  -->\n\n                <!-- Address Start -->\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Address</mat-label>\n\n                    <input matInput placeholder=\"Address\"\n                        [formControl]=\"doctorManagementAddEditForm.controls['address']\"\n                        (blur)=\"inputUntouch(doctorManagementAddEditForm,'address')\">\n\n                    <mat-error\n                        *ngIf=\"doctorManagementAddEditForm.controls['address'].touched && !doctorManagementAddEditForm.controls['address'].valid && doctorManagementAddEditForm.controls['address'].errors.required\">\n                        Address required.\n                    </mat-error>\n\n                    <mat-error\n                        *ngIf=\"doctorManagementAddEditForm.controls['address'].touched && !doctorManagementAddEditForm.controls['address'].valid && doctorManagementAddEditForm.controls['address'].errors.maxlength\">\n                        Address is not valid.\n                    </mat-error>\n                </mat-form-field>\n                <!-- Address End -->\n\n\n                <!-- parent type Start -->\n                <mat-form-field class=\"parent_cat\" appearance=\"fill\" *ngIf=\"htmlText.user_details.user_type == 'admin'\">\n                    <mat-label>Parent Type</mat-label>\n\n                    <mat-select formControlName=\"parent_type\">\n                        <mat-option value=\"admin\">Select Parent Type</mat-option>\n                        <mat-option *ngFor=\"let parent of htmlText.parent_type;\" value=\"{{ parent.value }}\"\n                            (click)=\"getParentData(parent.name)\">{{ parent.name }}</mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <!-- Parent Type End -->\n\n                <!-- State Start -->\n                <mat-form-field class=\"parent_cat\" appearance=\"fill\">\n                    <mat-label>State</mat-label>\n\n                    <!-- <mat-select formControlName=\"state\" (selectionChange)=\"getCity($event.value);\"> -->\n                    <mat-select formControlName=\"state\">\n                        <mat-option [value]=\"\">Select State</mat-option>\n                        <mat-option *ngFor=\"let state of htmlText.states;\" value=\"{{ state.name }}\">{{ state.name }}\n                        </mat-option>\n                    </mat-select>\n\n                    <mat-error\n                        *ngIf=\"doctorManagementAddEditForm.controls['state'].touched && !doctorManagementAddEditForm.controls['state'].valid && doctorManagementAddEditForm.controls['state'].errors.required\">\n                        State required.\n                    </mat-error>\n                </mat-form-field>\n                <!-- State End -->\n\n                <!-- City Start -->\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>City</mat-label>\n\n                    <input matInput placeholder=\"City\" formControlName=\"city\"\n                        (blur)=\"inputUntouch(doctorManagementAddEditForm,'city')\">\n\n                    <mat-error\n                        *ngIf=\"doctorManagementAddEditForm.controls['npi'].touched && !doctorManagementAddEditForm.controls['city'].valid && doctorManagementAddEditForm.controls['city'].errors.required\">\n                        City required.\n                    </mat-error>\n                </mat-form-field>\n                <!-- City End -->\n\n                <!-- Zip Start -->\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Zip</mat-label>\n\n                    <input type=\"number\" matInput placeholder=\"ZIP\"\n                        [formControl]=\"doctorManagementAddEditForm.controls['zip']\"\n                        (blur)=\"inputUntouch(doctorManagementAddEditForm,'zip')\">\n\n                    <mat-error\n                        *ngIf=\"doctorManagementAddEditForm.controls['zip'].touched && !doctorManagementAddEditForm.controls['zip'].valid && doctorManagementAddEditForm.controls['zip'].errors.required\">\n                        Zip required.\n                    </mat-error>\n                </mat-form-field>\n                <!-- Zip Start -->\n\n                <!-- CPT Validate Amount Start  -->\n                <mat-form-field class=\"parent_cat\" appearance=\"fill\">\n                    <mat-label>CPT Validated Amount</mat-label>\n\n                    <mat-select formControlName=\"cpt_validate_amount\">\n                        <!-- <mat-option value=\"admin\">Select Cpt Amount</mat-option> -->\n                        <mat-option *ngFor=\"let cpt of htmlText.cpt_amount;\" value=\"{{ cpt.value }}\">${{ cpt.value }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <!-- CPT Validate AmountStart  -->\n\n                <!-- Tech Details Start -->\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Select Tech</mat-label>\n                    <mat-select formControlName=\"tech_id\" multiple>\n                        <mat-option [value]=\"\">Select Tech</mat-option>\n                        <mat-option *ngFor=\"let tech of htmlText.techData;\" value=\"{{ tech._id }}\">{{ tech.firstname }}\n                            {{tech.lastname}}</mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <!-- Tech Details name -->\n\n                <!-- Biller Details Start -->\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Select Biiler</mat-label>\n                    <mat-select formControlName=\"biller_id\" multiple>\n                        <mat-option [value]=\"\">Select a biiler</mat-option>\n                        <mat-option *ngFor=\"let biller of htmlText.billerData;\" value=\"{{ biller._id }}\">\n                            {{ biller.firstname }} {{ biller.lastname }}</mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <!-- Biller Details End -->\n\n                <!-- Doctor's Office Start -->\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Select Doctor's Office</mat-label>\n                    <mat-select formControlName=\"doctors_office_id\" multiple>\n                        <mat-option [value]=\"\">Select Doctor's Office</mat-option>\n                        <mat-option *ngFor=\"let doctorOfficeData of htmlText.doctorOfficeData;\"\n                            value=\"{{ doctorOfficeData._id }}\">{{ doctorOfficeData.firstname }}\n                            {{ doctorOfficeData.lastname }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <!-- Doctor's Office End -->\n\n                <!-- Password Start -->\n                <ng-container *ngIf=\"!params_id\">\n                    <mat-form-field class=\"form-group\" appearance=\"fill\">\n        \n                    <input matInput placeholder=\"Password\" type=\"password\"\n                        [formControl]=\"doctorManagementAddEditForm.controls['password']\">\n        \n                    <mat-error *ngIf=\"!doctorManagementAddEditForm.controls['password'].valid && doctorManagementAddEditForm.controls['password'].touched\">\n                        Password required.\n                    </mat-error>\n                    </mat-form-field>\n        \n                    <mat-form-field class=\"form-group\" appearance=\"fill\">\n                    <input matInput placeholder=\"Confirm Password\" type=\"password\"\n                        [formControl]=\"doctorManagementAddEditForm.controls['confirmpassword']\">\n        \n                    <mat-error *ngIf=\"!doctorManagementAddEditForm.controls['confirmpassword'].valid && doctorManagementAddEditForm.controls['confirmpassword'].touched\">\n                        Password does not match\n                    </mat-error>\n                    </mat-form-field>\n                </ng-container>\n                <!-- Password End -->\n\n                <!-- Status -->\n                <span class=\"status_wrapper\">\n                    <mat-checkbox formControlName=\"status\">Active</mat-checkbox>\n                </span>\n\n                <span class=\"submit_form\">\n                    <button mat-flat-button type=\"button\" [routerLink]=\"['/admin/doctor-management']\"> Back</button>\n\n                    <button mat-flat-button type=\"reset\" *ngIf=\"params_id == ''\">Reset</button>\n                    <button mat-flat-button type=\"submit\"> {{ htmlText.buttonText }} </button>\n                </span>\n            </form>\n        </mat-card-content>\n    </mat-card>\n\n</mat-card>\n\n\n<app-sales-person-footer></app-sales-person-footer>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/sales-person/cpt-validate-report-salesperson/cpt-validate-report-sales-person/cpt-validate-report-sales-person.component.html":
  /*!************************************************************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/sales-person/cpt-validate-report-salesperson/cpt-validate-report-sales-person/cpt-validate-report-sales-person.component.html ***!
    \************************************************************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsSalesPersonCptValidateReportSalespersonCptValidateReportSalesPersonCptValidateReportSalesPersonComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<mat-card class=\"admin_wrapper\">\n    <mat-card-content class=\"table_wrapper admin_dashboard\">\n    \n      <!-- table -->\n      <lib-listing class=\"DataTable\" *ngIf=\"allBillerData.length>0\" [datasource]=\"allBillerData\" [skip]=\"allUserData_skip\"\n        [modify_header_array]=\"allUserData_modify_header\" [detail_skip_array]=\"previewModal_detail_skip\" [apiurl]=\"apiUrl\"\n        [sourcedata]=\"tableName\" [editroute]=\"editUrl\" [jwttoken]=\"jwtToken\" [statusarr]=\"status\"\n        [updateendpoint]=\"UpdateEndpoint\" [deleteendpoint]=\"deleteEndpoint\" [date_search_endpoint]=\"SearchingEndpoint\"\n        [date_search_source]=\"SearchingSourceName\" [search_settings]=\"search_settings\" [sortdata]=\"sortdata\"\n        [datacollection]=\"datacollection\" [libdata]=\"libdata\" [date_search_source_count]=\"billerData_count\"\n        [limitcond]=\"limitcond\">\n      </lib-listing>\n    \n    </mat-card-content>\n    \n      <h2 *ngIf=\"allBillerData.length == 0\">No record found.</h2>\n    </mat-card>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/sales-person/sales-person-dashboard/sales-person-dashboard.component.html":
  /*!********************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/sales-person/sales-person-dashboard/sales-person-dashboard.component.html ***!
    \********************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsSalesPersonSalesPersonDashboardSalesPersonDashboardComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<app-sales-person-header></app-sales-person-header>\n\n\n<mat-card class=\"admin_wrapper\">\n  <!-- <app-doctor-signup-share [shareDetails]=\"shareDetails\"></app-doctor-signup-share> -->\n\n  <mat-card-content class=\"sales_person_db\">\n\n    <mat-card-content class=\"admin_superbillsection\">\n      <h1>Encounter Form Status</h1>\n      <mat-card-content class=\"biller_wrapper\">\n\n        <mat-card-content class=\"super_bill_item\">\n          <span class=\"border_wrapper\">\n            <mat-card-content class=\"circle\">\n              <img src=\"../../../../assets/images/reporticon1.png\">\n            </mat-card-content>\n          </span>\n\n          <span class=\"container_wrapper\">\n            <p>Total No of <br>\n              Tests Done\n            </p>\n            <h2> {{ allResolveData.testsDoneCount }} </h2>\n            <button mat-flat-button>view all</button>\n          </span>\n        </mat-card-content>\n\n        <mat-card-content class=\"super_bill_item\">\n          <span class=\"border_wrapper\">\n            <mat-card-content class=\"circle\">\n              <img src=\"../../../../assets/images/reporticon2.png\">\n            </mat-card-content>\n          </span>\n\n          <span class=\"container_wrapper\">\n            <p>Total No of <br>\n              CPT Codes Found\n            </p>\n            <h2> {{ allResolveData.cptCodesFoundCount }} </h2>\n            <button mat-flat-button>view all</button>\n          </span>\n        </mat-card-content>\n        <mat-card-content class=\"super_bill_item\">\n          <span class=\"border_wrapper\">\n            <mat-card-content class=\"circle\">\n              <img src=\"../../../../assets/images/reporticon3.png\">\n            </mat-card-content>\n          </span>\n\n          <span class=\"container_wrapper\">\n            <p>Total No of <br>\n              CPT Codes Not Found\n            </p>\n            <h2> {{ allResolveData.cptCodesNotFoundCount }} </h2>\n            <button mat-flat-button>view all</button>\n          </span>\n        </mat-card-content>\n      </mat-card-content>\n    </mat-card-content>\n    <!-- Encounter Form Status Section End -->\n  </mat-card-content>\n\n  <!-- Share doctor sign up link -->\n  <app-doctor-signup-share [shareDetails]=\"shareDetails\"></app-doctor-signup-share>\n\n  <section class=\"table_list\">\n    <mat-card-content class=\"table_wrapper\">\n\n      <mat-toolbar class=\"top_header\">\n        <h2> Doctor Joining Report</h2>\n\n        <button mat-raised-button color=\"primary\" style=\"float: right;\" [routerLink]=\"['/sales-person/add-doctor']\">Add Doctor</button>\n      </mat-toolbar>\n      <mat-card-content class=\"tablewrapper\">\n        <lib-listing class=\"DataTable manageDoctor\" *ngIf=\"docData.length>0\" [datasource]=\"docData\"\n          [skip]=\"docData_skip\" [modify_header_array]=\"docData_modify_header\" [sourcedata]=\"tableName\"\n          [detail_skip_array]=\"previewModal_skip\" [apiurl]=\"apiUrl\" [editroute]=\"editUrl\" [jwttoken]=\"user_cookie\"\n          [statusarr]=\"status\" [updateendpoint]=\"UpdateEndpoint\" [deleteendpoint]=\"deleteEndpoint\"\n          [date_search_endpoint]=\"searchingEndpoint\" [date_search_source]=\"searchSourceName\"\n          [search_settings]=\"search_settings\" [sortdata]=\"sortdata\" [datacollection]=\"datacollection\"\n          [libdata]=\"libdata\" [date_search_source_count]=\"docData_count\" [limitcond]=\"limitcond\">\n\n        </lib-listing>\n      </mat-card-content>\n\n    <h2 *ngIf=\"docData.length == 0\">No record found.</h2>\n    </mat-card-content>\n    <mat-card-content class=\"table_wrapper\">\n\n      <mat-toolbar class=\"top_header\">\n        <h2> CPT Validated Amount Report</h2>\n      </mat-toolbar>\n      <mat-card-content class=\"tablewrapper sales_new_width\">\n        <app-cpt-validate-report-sales-person></app-cpt-validate-report-sales-person>\n      </mat-card-content>\n    </mat-card-content>\n\n  </section>\n\n</mat-card>\n<app-sales-person-footer></app-sales-person-footer>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/sales-person/sales-person-footer/sales-person-footer.component.html":
  /*!**************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/sales-person/sales-person-footer/sales-person-footer.component.html ***!
    \**************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsSalesPersonSalesPersonFooterSalesPersonFooterComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<mat-card-content class=\"footer_section\">\n    <span class=\"footer_content\">\n  \n      <mat-card-content class=\"link\">\n        <a href=\"\">Privacy Policy</a>\n        <a href=\"\"> Terms & conditions</a>\n      </mat-card-content>\n      <p>© Copyright {{ htmlData.year }} Advanced Wellness Solutions- All Rights Reserved</p>\n    </span>\n  </mat-card-content>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/sales-person/sales-person-header/sales-person-header.component.html":
  /*!**************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/sales-person/sales-person-header/sales-person-header.component.html ***!
    \**************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsSalesPersonSalesPersonHeaderSalesPersonHeaderComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<mat-toolbar class=\"techdashboard_header\" [ngClass]=\"{'sticky' : isSticky}\">\n  <mat-card-content class=\"header_wrapper\">\n    <span class=\"logo_wrapper\" [routerLink]=\"[ '/admin/dashboard' ]\">\n      <img src=\"../../../assets/images/logo.png\">\n    </span>\n\n\n    <mat-card-content class=\"quotation\">\n      <button mat-flat-button (click)=\"menuFunction()\" class=\"togle_menu\">\n        <i class=\"material-icons\"> menu </i>\n      </button>\n\n      <mat-card-content class=\"quotation\" [ngClass]=\"toggleStatus ? 'success' : 'danger'\">\n        <mat-nav-list>\n          <a mat-list-item routerLinkActive=\"active\" [routerLink]=\"['/sales-person/dashboard']\"> Dashboard </a>\n          <a mat-list-item [routerLink]=\"['/sales-person/faq']\" routerLinkActive=\"active\"> FAQ </a>\n        </mat-nav-list>\n      </mat-card-content>\n    </mat-card-content>\n    \n    \n    <mat-card-content class=\"profile_section\">\n      <mat-menu #appMenu=\"matMenu\">\n        <button mat-menu-item [routerLink]=\"['/doctor/account-settings']\">\n          <mat-icon>account_circle</mat-icon> Account Settings\n        </button>\n        <button mat-menu-item [routerLink]=\"['/doctor/account-settings/change-password']\">\n          <mat-icon>vpn_key</mat-icon> Change Password\n        </button>\n        <button mat-menu-item (click)=\"logout()\">\n          <mat-icon>power_settings_new</mat-icon> Logout\n        </button>\n      </mat-menu>\n      <span class=\"username\">{{user_data.firstname}} {{user_data.lastname}}</span>\n      <button mat-icon-button [matMenuTriggerFor]=\"appMenu\">\n        <span class=\"user_profile\">\n          <mat-icon>account_circle</mat-icon>\n          <i class=\"material-icons\">\n            keyboard_arrow_down\n          </i>\n        </span>\n      </button>\n\n    </mat-card-content>\n  </mat-card-content>\n</mat-toolbar>\n<!-- end header -->";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/tech/manage-calender/manage-schedule/booked-events/booked-events.component.html":
  /*!**************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/tech/manage-calender/manage-schedule/booked-events/booked-events.component.html ***!
    \**************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsTechManageCalenderManageScheduleBookedEventsBookedEventsComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<app-tech-header></app-tech-header>\n\n<mat-card class=\"admin_wrapper\">\n\n  <!-- Booked Events Listing -->\n  <mat-tab-group>\n    <!-- Upcoming events -->\n    <mat-tab label=\"Upcoming events\">\n      <app-upcoming-appoinments></app-upcoming-appoinments>\n    </mat-tab>\n    <!-- Past events -->\n    <mat-tab label=\"Past Events\">\n      <app-past-appoinments></app-past-appoinments>\n    </mat-tab>\n  </mat-tab-group>\n\n</mat-card>\n\n<app-admin-footer></app-admin-footer>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/tech/manage-calender/manage-schedule/cal-create-slot/cal-create-slot.component.html":
  /*!******************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/tech/manage-calender/manage-schedule/cal-create-slot/cal-create-slot.component.html ***!
    \******************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsTechManageCalenderManageScheduleCalCreateSlotCalCreateSlotComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<app-tech-header></app-tech-header>\n\n<mat-card class=\"admin_wrapper\">\n    <lib-create-slot class=\"calenderView\" [configData]=\"configData\"></lib-create-slot>\n</mat-card>\n\n<app-admin-footer></app-admin-footer>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/tech/manage-calender/manage-schedule/cal-event-listing/cal-event-listing.component.html":
  /*!**********************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/tech/manage-calender/manage-schedule/cal-event-listing/cal-event-listing.component.html ***!
    \**********************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsTechManageCalenderManageScheduleCalEventListingCalEventListingComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<app-tech-header></app-tech-header>\n\n\n\n<mat-card class=\"admin_wrapper\">\n\n  <lib-event-listing class=\"calenderView\" [configData]=\"configData\"></lib-event-listing>\n\n</mat-card>\n\n\n<app-admin-footer></app-admin-footer>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/tech/manage-calender/manage-schedule/cal-home/cal-home.component.html":
  /*!****************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/tech/manage-calender/manage-schedule/cal-home/cal-home.component.html ***!
    \****************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsTechManageCalenderManageScheduleCalHomeCalHomeComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<app-tech-header></app-tech-header>\n\n\n<mat-card class=\"admin_wrapper\">\n\n  <lib-view-slot class=\"calenderView\" [configData]=\"configData\"></lib-view-slot>\n\n</mat-card>\n\n\n<app-admin-footer></app-admin-footer>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/tech/manage-calender/manage-schedule/cal-sync-with-google/cal-sync-with-google.component.html":
  /*!****************************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/tech/manage-calender/manage-schedule/cal-sync-with-google/cal-sync-with-google.component.html ***!
    \****************************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsTechManageCalenderManageScheduleCalSyncWithGoogleCalSyncWithGoogleComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<div style=\"display: flex; justify-content: center; align-items: center; height: 100%;\">\n    <div>{{ displayMessage }}</div>\n</div>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/tech/manage-calender/manage-schedule/cal-view-slot/cal-view-slot.component.html":
  /*!**************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/tech/manage-calender/manage-schedule/cal-view-slot/cal-view-slot.component.html ***!
    \**************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsTechManageCalenderManageScheduleCalViewSlotCalViewSlotComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<app-tech-header></app-tech-header>\n\n\n\n<mat-card class=\"admin_wrapper\">\n  \n    <lib-view-slot-user class=\"calenderView\" [configData]=\"configData\"></lib-view-slot-user>\n\n</mat-card>\n\n\n<app-admin-footer></app-admin-footer>\n\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/tech/manage-calender/my-appointments/list/list.component.html":
  /*!********************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/tech/manage-calender/my-appointments/list/list.component.html ***!
    \********************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsTechManageCalenderMyAppointmentsListListComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<app-tech-header></app-tech-header>\n\n<mat-card class=\"admin_wrapper\">\n  <!-- header with add button -->\n  <mat-card-content class=\"title_wrapper\">\n    my appoinments\n  </mat-card-content>\n  <mat-toolbar class=\"add_header\">\n\n    <span class=\"bradcrumb\"><a [routerLink]=\"['/tech/dashboard']\">Dashboard &nbsp;/</a> &nbsp;\n      Appoinments</span>\n  </mat-toolbar>\n  <!-- End header with add button -->\n\n  <!-- <lib-booked-event-listing [configData]=\"configData\"></lib-booked-event-listing> -->\n  <!-- Booked Events Listing -->\n  <mat-tab-group>\n    <!-- Upcoming events -->\n    <mat-tab label=\"Upcoming Events\">\n      <app-upcoming-appoinments></app-upcoming-appoinments>\n    </mat-tab>\n    <!-- Past events -->\n    <mat-tab label=\"Past Events\">\n      <app-past-appoinments></app-past-appoinments>\n    </mat-tab>\n  </mat-tab-group>\n\n</mat-card>\n\n<app-admin-footer></app-admin-footer>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/tech/patient-management/bulk-upload/bulk-upload.component.html":
  /*!*********************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/tech/patient-management/bulk-upload/bulk-upload.component.html ***!
    \*********************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsTechPatientManagementBulkUploadBulkUploadComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<app-tech-header></app-tech-header>\n\n<mat-card class=\"admin_wrapper\" >\n  <mat-card-content class=\"add_form\">\n    <form class=\"example-form\" autocomplete=\"off\" name=\"techBulkUploadForm\" [formGroup]=\"techBulkUploadForm\">\n\n      <mat-card-content class=\"status_wrapper\" >\n        <label>Batch Name</label>\n        <mat-form-field appearance=\"fill\">\n          <input placeholder=\"Batch Name\" matInput [formControl]=\"techBulkUploadForm.controls['batch_name']\"\n            (blur)=\"inputUntouch(techBulkUploadForm,'batch_name')\">\n          <mat-error *ngIf=\"techBulkUploadForm.controls['batch_name'].touched && !techBulkUploadForm.controls['batch_name'].valid\n            && techBulkUploadForm.controls['batch_name'].errors.required\">\n            Batch Name field can not be blank</mat-error>\n        </mat-form-field>\n\n        <!-- <mat-card-content>\n          <label>Ordering Physician</label>\n          <mat-form-field >\n              <mat-select (selectionChange)=\"getsellabel($event.value);\" placeholder=\"Select a Doctor\" >\n                <mat-option *ngFor=\"let doc of allDoctorDataArray; let i = index;\" value=\"{{ i }}\"> \n                  {{ doc.firstname }} {{ doc.lastname }}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n        </mat-card-content> -->\n\n        <mat-card-content>\n          <label>File Type</label>\n          <mat-form-field>\n              <mat-select formControlName=\"report_file_type\" placeholder=\"Select a File Type\" >\n                <mat-option value=\"RM-3A\">RM-3A</mat-option>\n                <mat-option value=\"TM FLOW V3\">TM FLOW V3</mat-option>\n                <mat-option value=\"TM FLOW V4\">TM FLOW V4</mat-option>\n                <mat-option value=\"CMAT with BP Cuffs\">CMAT with BP Cuffs</mat-option>\n              </mat-select>\n            </mat-form-field>\n        </mat-card-content>\n\n\n    </mat-card-content>\n\n      <lib-file-upload [config]=\"configData\" class=\"file_upload\" ></lib-file-upload>\n      <span style=\"color: red;\" *ngIf=\"!configData.files && configData.formSubmit\">Please upload a file</span>\n\n      <span class=\"patient_diagnotes\">\n        <label>Notes:</label>\n        <mat-form-field class=\"example-full-width\">\n\n          <textarea matInput placeholder=\"Leave a comment\" [formControl]=\"techBulkUploadForm.controls['note']\"\n            >\n       </textarea>\n\n        </mat-form-field>\n      </span>\n      \n      <span class=\"submit_form\">\n        <button mat-flat-button type=\"button\" (click)=\"techBulkUploadFormSubmit()\"> Submit </button>\n        <button mat-flat-button type=\"reset\"> Reset </button>\n        <button mat-flat-button type=\"button\" (click)=\"cancelButton()\"> Back </button>\n      </span>\n\n\n    </form>\n  </mat-card-content>\n</mat-card>\n\n\n<app-tech-footer></app-tech-footer>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/tech/patient-management/patient-select-modal/patient-select-modal.component.html":
  /*!***************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/tech/patient-management/patient-select-modal/patient-select-modal.component.html ***!
    \***************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsTechPatientManagementPatientSelectModalPatientSelectModalComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<h2 mat-dialog-title>Select Patient</h2>\n<mat-card class=\"modal_view\">\n<mat-form-field>\n    <mat-label>Select patient</mat-label>\n    <mat-select (selectionChange)=\"selectPatient($event.value);\">\n        <mat-option *ngFor=\"let patient of data.allPatient; let i = index;\" [value]=\"i\">\n            {{ patient.patient_name }}\n        </mat-option>\n    </mat-select>\n</mat-form-field>\n\n<mat-list *ngIf=\"selectPatientData != ''\">\n    <mat-list-item>Patient Name: {{ selectPatientData.patient_name }} </mat-list-item>\n    <mat-divider></mat-divider>\n    <mat-list-item>DOB: {{ selectPatientData.dob | date }} </mat-list-item>\n    <mat-divider></mat-divider>\n    <mat-list-item>Gender: {{ selectPatientData.gender }} </mat-list-item>\n    <mat-divider></mat-divider>\n    <mat-list-item>Height: {{ selectPatientData.height }} </mat-list-item>\n    <mat-divider></mat-divider>\n    <mat-list-item>Email: {{ selectPatientData.email }} </mat-list-item>\n    <mat-divider></mat-divider>\n    <mat-list-item>Booking date: {{ selectPatientData.booking_date | date }} </mat-list-item>\n    <mat-divider></mat-divider>\n    <mat-list-item *ngIf=\"selectPatientData.doctor_details.length > 0\">Related Doctor: {{ selectPatientData.doctor_details[0].firstname }} {{ selectPatientData.doctor_details[0].lastname }} </mat-list-item>\n    <mat-divider *ngIf=\"selectPatientData.doctor_details.length > 0\"></mat-divider>\n    <mat-list-item *ngIf=\"selectPatientData.doctor_office_details.length > 0\">Doctor Office: {{ selectPatientData.doctor_office_details[0].firstname }} {{ selectPatientData.doctor_office_details[0].lastname }} </mat-list-item>\n    <mat-divider *ngIf=\"selectPatientData.doctor_office_details.length > 0\"></mat-divider>\n</mat-list>\n\n\n<mat-dialog-actions align=\"end\">\n    <button mat-button mat-dialog-close>Cancel</button>\n    <button mat-button [mat-dialog-close]=\"selectPatientData\" cdkFocusInitial>Confirm</button>\n</mat-dialog-actions>\n</mat-card>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/tech/patient-management/report-conformation/report-conformation.component.html":
  /*!*************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/tech/patient-management/report-conformation/report-conformation.component.html ***!
    \*************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsTechPatientManagementReportConformationReportConformationComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<app-tech-header></app-tech-header>\n\n<mat-card class=\"admin_wrapper\">\n\n  <ng-container *ngIf=\"htmlText.confirmSubmittedDataSource.length > 0\">\n    <mat-card-content class=\"table_wrapper\">\n      <mat-toolbar class=\"top_header\">\n        <h2> Confirm submitted records with existing patient profile which yet to have a report.</h2>\n      </mat-toolbar>\n      <div class=\"tablewrapper\">\n      <table mat-table [dataSource]=\"confirmSubmittedDataSource\" class=\"report_modal mat-elevation-z8\">\n\n        <!--- Note that these columns can be defined in any order.\n              The actual rendered columns are set as a property on the row definition\" -->\n\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"no\">\n          <th mat-header-cell *matHeaderCellDef> No. </th>\n          <td mat-cell *matCellDef=\"let element; let i = index;\"> {{ i + 1 }} </td>\n        </ng-container>\n\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"patient_report\">\n          <th mat-header-cell *matHeaderCellDef> Patient Report </th>\n          <td mat-cell *matCellDef=\"let element\"> {{ element.file_original_name }} </td>\n        </ng-container>\n\n        <!-- Weight Column -->\n        <ng-container matColumnDef=\"suggested_patient_by_system\">\n          <th mat-header-cell *matHeaderCellDef> Suggested Patient by System </th>\n          <td mat-cell *matCellDef=\"let element\">\n\n            <ng-container *ngFor=\"let p of element.patient_details; let i = index;\">\n              <p>Patient Name: {{ p.patient_name }}</p>\n              <p>Date of Birth: {{ p.dob | date }}</p>\n              <p>Gender: {{ p.gender }}</p>\n              <p>Height: {{ p.height }}</p>\n              <p>Waigth: {{ p.weight }}</p>\n              <p *ngIf=\"p.doctor_details.length > 0\">Related Doctor: {{ p.doctor_details[0].firstname }} {{ p.doctor_details[0].lastname }} </p>\n              <p *ngIf=\"p.doctor_office_details.length > 0\">Doctor Office: {{ p.doctor_office_details[0].firstname }} {{ p.doctor_office_details[0].lastname }}\n              </p>\n            </ng-container>\n          </td>\n        </ng-container>\n\n        <!-- Symbol Column -->\n        <ng-container matColumnDef=\"choose_other_patient\">\n          <th mat-header-cell *matHeaderCellDef> Choose Other Patient </th>\n          <td mat-cell *matCellDef=\"let element; let i = index;\">\n            <button mat-button color=\"primary\" (click)=\"changePatientDialog('submitted', i);\">Select Patient</button>\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"confirmSubmittedDisplayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: confirmSubmittedDisplayedColumns;\"></tr>\n      </table>\n    </div>\n    </mat-card-content>\n  </ng-container>\n\n  <ng-container *ngIf=\"htmlText.conflictingPatientRecordsDataSource.length > 0\">\n    <mat-card-content class=\"table_wrapper\">\n      <mat-toolbar class=\"top_header\">\n        <h2> Conflicting Patient Records </h2>\n      </mat-toolbar>\n    </mat-card-content>\n    <div class=\"tablewrapper\">\n    <table mat-table [dataSource]=\"conflictingPatientRecordsDataSource\" class=\"report_modal mat-elevation-z8\">\n\n      <!--- Note that these columns can be defined in any order.\n              The actual rendered columns are set as a property on the row definition\" -->\n\n      <!-- Position Column -->\n      <ng-container matColumnDef=\"no\">\n        <th mat-header-cell *matHeaderCellDef> No. </th>\n        <td mat-cell *matCellDef=\"let element; let i = index;\"> {{ i + 1 }} </td>\n      </ng-container>\n\n      <!-- Name Column -->\n      <ng-container matColumnDef=\"patient_report\">\n        <th mat-header-cell *matHeaderCellDef> Patient Report </th>\n        <td mat-cell *matCellDef=\"let element\"> {{ element.file_original_name }} </td>\n      </ng-container>\n\n      <!-- Weight Column -->\n      <ng-container matColumnDef=\"conflicting_records\">\n        <th mat-header-cell *matHeaderCellDef> Conflicting Records </th>\n        <td mat-cell *matCellDef=\"let element; let j = index;\">\n          <ng-container *ngFor=\"let p of element.patient_details; let i = index;\">\n\n            <p>Patient Name: {{ p.patient_name }}</p>\n            <p>Date of Birth: {{ p.dob | date }}</p>\n            <p>Gender: {{ p.gender }}</p>\n            <p>Height: {{ p.height }}</p>\n            <p>Waigth: {{ p.weight }}</p>\n            <p>\n              <button mat-raised-button color=\"primary\"\n                (click)=\"selectConflictingRecord('conflicting', j, i);\">Select</button>\n            </p>\n\n          </ng-container>\n        </td>\n      </ng-container>\n\n      <!-- Symbol Column -->\n      <ng-container matColumnDef=\"choose_other_patient\">\n        <th mat-header-cell *matHeaderCellDef> Choose Other Patient </th>\n        <td mat-cell *matCellDef=\"let element; let i = index;\">\n          <button mat-button color=\"primary\" (click)=\"changePatientDialog('conflicting', i);\">Select Patient</button>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"conflictingPatientRecordsDisplayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: conflictingPatientRecordsDisplayedColumns;\"></tr>\n    </table>\n  </div>\n  </ng-container>\n\n  <br />\n\n  <ng-container *ngIf=\"htmlText.notFindDataSource.length > 0\">\n    <mat-card-content class=\"table_wrapper\">\n      <mat-toolbar class=\"top_header\">\n        <h2> Reports That System can't Map </h2>\n      </mat-toolbar>\n    </mat-card-content>\n    <div class=\"tablewrapper\"> \n      <table mat-table [dataSource]=\"notFindPatientRecordsDataSource\" class=\"report_modal\">\n\n        <!--- Note that these columns can be defined in any order.\n              The actual rendered columns are set as a property on the row definition\" -->\n\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"no\">\n          <th mat-header-cell *matHeaderCellDef> No. </th>\n          <td mat-cell *matCellDef=\"let element; let i = index;\"> {{ i + 1 }} </td>\n        </ng-container>\n\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"patient_report\">\n          <th mat-header-cell *matHeaderCellDef> Patient Report </th>\n          <td mat-cell *matCellDef=\"let element\"> {{ element.file_original_name }} </td>\n        </ng-container>\n\n        <!-- Symbol Column -->\n        <ng-container matColumnDef=\"choose_other_patient\">\n          <th mat-header-cell *matHeaderCellDef> Choose Other Patient </th>\n          <td mat-cell *matCellDef=\"let element; let i = index;\">\n            <button mat-button color=\"primary\" (click)=\"changePatientDialog('not found', i);\">Select Patient</button>\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"notFindPatientRecordsDisplayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: notFindPatientRecordsDisplayedColumns;\"></tr>\n      </table>\n   \n    </div>\n  </ng-container>\n\n  <mat-card-content class=\"con-report-lebel\">\n    <p>\n      <mat-checkbox [(ngModel)]=\"checkboxData.checkbox1\">You want to submit with conflicts then please check this to\n        agree conflicting data will not be added/updated into the system.</mat-checkbox>\n    </p>\n    <p>\n      <mat-checkbox [(ngModel)]=\"checkboxData.checkbox2\">All mapping of patient records and patient data is verified\n        correct.</mat-checkbox>\n    </p>\n\n    <button mat-raised-button color=\"primary\" (click)=\"updateRecord();\">Submit</button>\n  </mat-card-content>\n</mat-card>\n\n\n<app-admin-footer></app-admin-footer>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/tech/patient-management/report-upload-success-modal/report-upload-success-modal.component.html":
  /*!*****************************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/tech/patient-management/report-upload-success-modal/report-upload-success-modal.component.html ***!
    \*****************************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsTechPatientManagementReportUploadSuccessModalReportUploadSuccessModalComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<h2 mat-dialog-title>Report Successfully Uploaded</h2>\n\n<mat-card class=\"modal_view\">\n\n    <ng-container *ngIf=\"data.confirmSubmittedDataSource.length > 0\">\n        <mat-card-content class=\"table_wrapper\">\n            <mat-toolbar class=\"top_header\">\n                <h2> Confirm Submitted Records</h2>\n            </mat-toolbar>\n            <div class=\"tablewrapper\">\n                <table mat-table [dataSource]=\"confirmSubmittedDataSource\" class=\"report_modal mat-elevation-z8\">\n\n                    <!--- Note that these columns can be defined in any order.\n                  The actual rendered columns are set as a property on the row definition\" -->\n\n                    <!-- Position Column -->\n                    <ng-container matColumnDef=\"no\">\n                        <th mat-header-cell *matHeaderCellDef> No. </th>\n                        <td mat-cell *matCellDef=\"let element; let i = index;\"> {{ i + 1 }} </td>\n                    </ng-container>\n\n                    <!-- Name Column -->\n                    <ng-container matColumnDef=\"patient_report\">\n                        <th mat-header-cell *matHeaderCellDef> Patient Report </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{ element.file_original_name }} </td>\n                    </ng-container>\n\n                    <!-- Weight Column -->\n                    <ng-container matColumnDef=\"suggested_patient_by_system\">\n                        <th mat-header-cell *matHeaderCellDef> Suggested Patient by System </th>\n                        <td mat-cell *matCellDef=\"let element\">\n\n                            <ng-container *ngFor=\"let p of element.patient_details; let i = index;\">\n                                <p>Patient Name: {{ p.patient_name }}</p>\n                                <p>Date of Birth: {{ p.dob | date }}</p>\n                                <p>Gender: {{ p.gender }}</p>\n                                <p>Height: {{ p.height }}</p>\n                                <p>Waigth: {{ p.weight }}</p>\n                                <p *ngIf=\"p.doctor_details.length > 0\">Related Doctor:\n                                    {{ p.doctor_details[0].firstname }} {{ p.doctor_details[0].lastname }} </p>\n                                <p *ngIf=\"p.doctor_office_details.length > 0\">Doctor Office: {{ p.doctor_office_details[0].firstname }}\n                                    {{ p.doctor_office_details[0].lastname }}\n                                </p>\n                            </ng-container>\n                        </td>\n                    </ng-container>\n\n                    <tr mat-header-row *matHeaderRowDef=\"confirmSubmittedDisplayedColumns\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: confirmSubmittedDisplayedColumns;\"></tr>\n                </table>\n            </div>\n        </mat-card-content>\n    </ng-container>\n\n    <ng-container *ngIf=\"data.conflictingPatientRecordsDataSource.length > 0\">\n        <mat-card-content class=\"table_wrapper\">\n            <mat-toolbar class=\"top_header\">\n                <h2> Conflicting Patient Records </h2>\n            </mat-toolbar>\n        </mat-card-content>\n        <div class=\"tablewrapper\">\n            <table mat-table [dataSource]=\"conflictingPatientRecordsDataSource\" class=\"report_modal mat-elevation-z8\">\n\n                <!--- Note that these columns can be defined in any order.\n                  The actual rendered columns are set as a property on the row definition\" -->\n\n                <!-- Position Column -->\n                <ng-container matColumnDef=\"no\">\n                    <th mat-header-cell *matHeaderCellDef> No. </th>\n                    <td mat-cell *matCellDef=\"let element; let i = index;\"> {{ i + 1 }} </td>\n                </ng-container>\n\n                <!-- Name Column -->\n                <ng-container matColumnDef=\"patient_report\">\n                    <th mat-header-cell *matHeaderCellDef> Patient Report </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{ element.file_original_name }} </td>\n                </ng-container>\n\n                <tr mat-header-row *matHeaderRowDef=\"conflictingPatientRecordsDisplayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: conflictingPatientRecordsDisplayedColumns;\"></tr>\n            </table>\n        </div>\n    </ng-container>\n\n    <br />\n\n    <ng-container *ngIf=\"data.notFindDataSource.length > 0\">\n        <mat-card-content class=\"table_wrapper\">\n            <mat-toolbar class=\"top_header\">\n                <h2> Reports That System can't Map </h2>\n            </mat-toolbar>\n        </mat-card-content>\n        <div class=\"tablewrapper\">\n            <table mat-table [dataSource]=\"notFindPatientRecordsDataSource\" class=\"report_modal\">\n\n                <!--- Note that these columns can be defined in any order.\n                  The actual rendered columns are set as a property on the row definition\" -->\n\n                <!-- Position Column -->\n                <ng-container matColumnDef=\"no\">\n                    <th mat-header-cell *matHeaderCellDef> No. </th>\n                    <td mat-cell *matCellDef=\"let element; let i = index;\"> {{ i + 1 }} </td>\n                </ng-container>\n\n                <!-- Name Column -->\n                <ng-container matColumnDef=\"patient_report\">\n                    <th mat-header-cell *matHeaderCellDef> Patient Report </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{ element.file_original_name }} </td>\n                </ng-container>\n\n                <tr mat-header-row *matHeaderRowDef=\"notFindPatientRecordsDisplayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: notFindPatientRecordsDisplayedColumns;\"></tr>\n            </table>\n\n        </div>\n    </ng-container>\n\n    <mat-dialog-actions align=\"end\">\n        <button mat-button mat-dialog-close>DONE</button>\n    </mat-dialog-actions>\n\n</mat-card>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/tech/report-details/report-details.component.html":
  /*!********************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/tech/report-details/report-details.component.html ***!
    \********************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsTechReportDetailsReportDetailsComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<ng-container *ngIf=\"router.url == '/tech/report/total-uploaded'\">\n    total uploaded \n</ng-container>\n\n<ng-container *ngIf=\"router.url == '/tech/report/total-processed'\">\n   total-processed\n</ng-container>\n\n<ng-container *ngIf=\"router.url == '/tech/report/total-remained-processed'\">\n    total-remained-processed\n</ng-container>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/tech/tech-dashboard/doctorview.component.html":
  /*!****************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/tech/tech-dashboard/doctorview.component.html ***!
    \****************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsTechTechDashboardDoctorviewComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<span *ngIf=\"!loader\" class=\"modalmainwrapper\">\n\n    <mat-card-subtitle class=\"main_title\">Doctors You are Working With</mat-card-subtitle>\n\n    <!-- <mat-accordion>\n      <mat-expansion-panel *ngFor=\"let doc of allDoctorData\">\n        <mat-expansion-panel-header>\n          <mat-panel-title>\n            {{doc.fullName}}\n          </mat-panel-title>\n        </mat-expansion-panel-header>\n        Email:{{doc.email}}<br>\n        Phone:{{doc.phone}}<br>\n        Fax:{{doc.fax}}<br>\n        Taxonomies:{{doc.taxo_list}}\n      </mat-expansion-panel>\n    </mat-accordion> -->\n\n\n\n\n<mat-card-content class=\"allDocGrid\">\n  <mat-card-content class=\"allItem\" *ngFor=\"let doc of allDoctorData\">\n    <h3 class=\"header\"> {{doc.fullName}}</h3>\n    <p class=\"otherDetails\"> <label> Email: </label>{{doc.email}}</p>\n    <p class=\"otherDetails\"> <label> Phone: </label>{{doc.phone}}</p>\n    <p class=\"otherDetails\"> <label> Fax: </label>{{doc.fax}}</p>\n    <p class=\"otherDetails\"> <label> NPI: </label>{{doc.npm}}</p>\n    <p class=\"otherDetails\"> <label> Taxonomies: </label>{{doc.taxo_list}}</p>\n\n    <span class=\"items_counter\">**</span>\n  </mat-card-content>\n</mat-card-content>\n<mat-toolbar class=\"button_w\">\n<button mat-button class=\"modalclosebtn\" (click)=\"onNoClick()\">close</button>\n</mat-toolbar>\n</span>\n\n<div *ngIf=\"loader\" style=\"display: flex; justify-content: center; align-items: center; height: 100%;\">\n  <div>Please wait....</div>\n</div>\n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/tech/tech-dashboard/tech-dashboard.component.html":
  /*!********************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/tech/tech-dashboard/tech-dashboard.component.html ***!
    \********************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsTechTechDashboardTechDashboardComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<app-tech-header></app-tech-header>\n\n<mat-card class=\"admin_wrapper\">\n\n  <!-- new -->\n  <mat-card-content class=\"admin_superbillsection techDashboard\">\n    <!-- <h1>Physician Report and Super Bills</h1> -->\n    <mat-card-content class=\"biller_wrapper\">\n      <mat-card-content class=\"super_bill_item sp_one\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon1.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total Number of <br>\n            Reports Uploaded\n          </p>\n          <h2> {{ allResolveData.totalReportCount }} </h2>\n          <button mat-flat-button (click)=\"viewDetailsData('Reports Uploaded')\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item sp_two\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon2.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total Number of <br>\n            Reports Processed\n          </p>\n          <h2> {{ allResolveData.processedReportCount }} </h2>\n          <button mat-flat-button (click)=\"viewDetailsData('Reports Processed')\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item sp_three\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon3.png\">\n          </mat-card-content>\n        </span>\n        <span class=\"container_wrapper\">\n          <p>Total Number Of Reports Processed This Week </p>\n          <h2> {{ allResolveData.totalRemainToProcessCount }} </h2>\n          <button mat-flat-button (click)=\"viewDetailsData('Remain Process')\">view all</button>\n        </span>\n      </mat-card-content>\n    </mat-card-content>\n\n    <mat-card-content class=\"biller_wrapper\">\n      <mat-card-content class=\"super_bill_item sp_one\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon1.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total Number of Reports<br>\n            Uploaded This Week\n          </p>\n          <h2> {{ allResolveData.totalreportthisweek }} </h2>\n          <button mat-flat-button (click)=\"viewDetailsData('Reports Uploaded')\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item sp_two\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon2.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>\n            Total Number Of Reports <br>Processed Last Week\n          </p>\n          <h2> {{ allResolveData.totalreportpreviousweek }} </h2>\n          <button mat-flat-button (click)=\"viewDetailsData('Reports Processed')\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item sp_three\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon3.png\">\n          </mat-card-content>\n        </span>\n        <span class=\"container_wrapper\">\n          <p>\n            Total Number of Reports <br> Uploaded Last Week\n          </p>\n          <h2> {{ allResolveData.totalreportthismonth }} </h2>\n          <button mat-flat-button (click)=\"viewDetailsData('Remain Process')\">view all</button>\n        </span>\n      </mat-card-content>\n\n    </mat-card-content>\n\n    <mat-card-content class=\"biller_wrapper\">\n\n      <mat-card-content class=\"super_bill_item sp_one\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon1.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total Number Of Reports Uploaded Last Week</p>\n\n          <h2> {{ allResolveData.totalreportlastmonth }}</h2>\n          <button mat-flat-button (click)=\"viewDetailsData('Reports Uploaded')\">view all</button>\n        </span>\n      </mat-card-content>\n      <mat-card-content class=\"super_bill_item sp_two\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon1.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total Number Of Reports Processed Last Week\n          </p>\n          <h2> {{ allResolveData.totalreportlastmonth }} </h2>\n          <button mat-flat-button (click)=\"viewDetailsData('Reports Uploaded')\">view all</button>\n        </span>\n      </mat-card-content>\n      <mat-card-content class=\"super_bill_item sp_three\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon1.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total Number Of Reports Remain\n            To Process Last Week\n          </p>\n          <h2> {{ allResolveData.totalreportlastmonth }}</h2>\n          <button mat-flat-button (click)=\"viewDetailsData('Reports Uploaded')\">view all</button>\n        </span>\n      </mat-card-content>\n    </mat-card-content>\n\n    <mat-card-content class=\"biller_wrapper\">\n\n      <mat-card-content class=\"super_bill_item sp_one\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon1.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total Number Of Reports Uploaded Last Month</p>\n\n          <h2> {{ allResolveData.totalreportlastmonth }}</h2>\n          <button mat-flat-button (click)=\"viewDetailsData('Reports Uploaded')\">view all</button>\n        </span>\n      </mat-card-content>\n      <mat-card-content class=\"super_bill_item sp_two\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon1.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total Number Of Reports Remain To Process Last Month\n          </p>\n          <h2> {{ allResolveData.totalreportlastmonth }} </h2>\n          <button mat-flat-button (click)=\"viewDetailsData('Reports Uploaded')\">view all</button>\n        </span>\n      </mat-card-content>\n      <mat-card-content class=\"super_bill_item sp_three\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon1.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total Number Of Reports Processed Last Month\n          </p>\n          <h2> {{ allResolveData.totalreportlastmonth }}</h2>\n          <button mat-flat-button (click)=\"viewDetailsData('Reports Uploaded')\">view all</button>\n        </span>\n      </mat-card-content>\n    </mat-card-content>\n  </mat-card-content>\n\n\n  <!-- <mat-card-content class=\"doctor_content_wrapper\">\n    <mat-card-title>Doctor You Are Working With </mat-card-title>\n    <mat-card-content class=\"table_structure\">\n      <mat-list>\n\n        <mat-list-item>\n          <p class=\"title_n\">Name</p>\n          <p class=\"title_a\">\n            <ng-container>\n              {{ allResolveData.doctorWorkingWith[0].firstname }} {{ allResolveData.doctorWorkingWith[0].lastname }}\n            </ng-container>\n          </p>\n        </mat-list-item>\n\n        <mat-list-item>\n          <p class=\"title_n\">Taxonomies</p>\n          <p class=\"title_a\">\n            <ng-container>\n              {{ allResolveData.doctorWorkingWith[0].taxo_list[0] }}\n            </ng-container>\n          </p>\n        </mat-list-item>\n\n        <mat-list-item>\n          <p class=\"title_n\">Email</p>\n          <p class=\"title_a\">\n            <ng-container>\n              {{ allResolveData.doctorWorkingWith[0].email }}\n            </ng-container>\n          </p>\n        </mat-list-item>\n\n        <mat-list-item>\n          <p class=\"title_n\">Phone</p>\n          <p class=\"title_a\">\n            <ng-container>\n              {{ allResolveData.doctorWorkingWith[0].phone }}\n            </ng-container>\n          </p>\n        </mat-list-item>\n\n        <mat-list-item>\n          <p class=\"title_n\">FAX</p>\n          <p class=\"title_a\">\n            <ng-container>\n              {{ allResolveData.doctorWorkingWith[0].fax }}\n            </ng-container>\n          </p>\n        </mat-list-item>\n\n        <mat-list-item>\n          <p class=\"title_n\">NPI#</p>\n          <p class=\"title_a\">\n            <ng-container>\n              {{ allResolveData.doctorWorkingWith[0].npm }}\n            </ng-container>\n          </p>\n        </mat-list-item>\n\n      </mat-list>\n    </mat-card-content>\n\n    <p class=\"doctorCount\">and&nbsp; <a\n        (click)=\"allDoctorViewModal()\">({{ allResolveData.doctorWorkingWith.length }})</a>&nbsp;more.</p>\n\n  </mat-card-content> -->\n\n\n\n  <!-- patainet report section -->\n  <mat-card-content class=\"table_wrapper admin_dashboard \">\n\n    <mat-toolbar class=\"top_header\">\n      <h2>{{ htmlText.headerText }}</h2>\n\n      <button class=\"add_new\" mat-button routerLink=\"/tech/patient-management/bulk-upload\">upload bulk report</button>\n    </mat-toolbar>\n\n    <!--all dashboard data table start here-->\n    <div class=\"tablewrapper\">\n      <!-- table -->\n      <lib-listing class=\"DataTable\" *ngIf=\"allBillerData.length>0\" [datasource]=\"allBillerData\"\n        [skip]=\"allUserData_skip\" [modify_header_array]=\"allUserData_modify_header\"\n        [detail_skip_array]=\"previewModal_detail_skip\" [apiurl]=\"apiUrl\" [sourcedata]=\"tableName\" [editroute]=\"editUrl\"\n        [jwttoken]=\"jwtToken\" [statusarr]=\"status\" [updateendpoint]=\"UpdateEndpoint\" [deleteendpoint]=\"deleteEndpoint\"\n        [date_search_endpoint]=\"SearchingEndpoint\" [date_search_source]=\"SearchingSourceName\"\n        [search_settings]=\"search_settings\" [sortdata]=\"sortdata\" [datacollection]=\"datacollection\" [libdata]=\"libdata\"\n        [date_search_source_count]=\"billerData_count\" [limitcond]=\"limitcond\">\n      </lib-listing>\n    </div>\n\n\n    <span class=\"button_action\">\n      <button mat-flat-button routerLink=\"/tech/patient-management/bulk-upload\">upload bulk report</button>\n    </span>\n  </mat-card-content>\n\n</mat-card>\n<app-admin-footer></app-admin-footer>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/tech/tech-footer/tech-footer.component.html":
  /*!**************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/tech/tech-footer/tech-footer.component.html ***!
    \**************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsTechTechFooterTechFooterComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<mat-card-content class=\"footer_section\" >\n  <span class=\"footer_content\">\n\n    <mat-card-content class=\"link\">\n      <a href=\"\">Privacy Policy</a>\n      <a href=\"\"> Terms & conditions</a>\n    </mat-card-content>\n    <p>© Copyright {{ htmlData.year }} Advanced Wellness Solutions- All Rights Reserved</p>\n  </span>\n</mat-card-content>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/tech/tech-header/tech-header.component.html":
  /*!**************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/tech/tech-header/tech-header.component.html ***!
    \**************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsTechTechHeaderTechHeaderComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<ng-container *ngIf=\"main_user.flag == true\">\n  <button mat-menu-item (click)=\"returnToAdmin()\">\n    <mat-icon>power_settings_new</mat-icon> {{ main_user.buttonText }}\n  </button>\n</ng-container>\n<mat-toolbar class=\"techdashboard_header\" [ngClass]=\"{'sticky' : isSticky}\">\n  <mat-card-content class=\"header_wrapper\">\n    <span class=\"logo_wrapper\" [routerLink]=\"[ '/tech/dashboard' ]\">\n      <img src=\"../../../assets/images/logo.png\">\n    </span>\n\n\n    <button mat-flat-button (click)=\"menuFunction()\" class=\"togle_menu\"><i class=\"material-icons\"> menu </i></button>\n    <mat-card-content class=\"quotation\" [ngClass]=\"status ? 'success' : 'danger'\">\n      <mat-nav-list>\n        <a mat-list-item routerLinkActive=\"active\" [routerLink]=\"['/tech/dashboard']\"> Dashboard </a>\n        <a mat-list-item routerLinkActive=\"active\" [matMenuTriggerFor]=\"calendarMenu\"> Manage Calendar <i class=\"material-icons\">\n          keyboard_arrow_down\n          </i>\n        </a>\n        <a mat-list-item routerLinkActive=\"active\" [routerLink]=\"['/tech/faq']\"> FAQ </a>\n        <!-- <a mat-list-item routerLinkActive=\"active\" [routerLink]=\"['/tech/reports-details']\"> CPT Validate Reports </a> -->\n      </mat-nav-list>\n\n      <mat-menu #calendarMenu=\"matMenu\" class=\"sub_menu\">\n        <button mat-menu-item [routerLink]=\"['/tech/manage-calender/manage-sehedule']\">Manage Schedule\n        </button>\n        <button mat-menu-item [routerLink]=\"['/tech/manage-calender/my-appoinments']\">My Appointments</button>\n      </mat-menu>\n    </mat-card-content>\n\n    <mat-card-content class=\"profile_section\">\n      <mat-menu #appMenu=\"matMenu\">\n        <button mat-menu-item [routerLink]=\"['/tech/account-settings']\">\n          <mat-icon>account_circle</mat-icon> Account Settings\n        </button>\n        <button mat-menu-item [routerLink]=\"['/tech/account-settings/change-password']\">\n          <mat-icon>vpn_key</mat-icon> Change Password\n        </button>\n        <ng-container *ngIf = \"flag == 0\">\n          <button mat-menu-item (click)=\"logout()\">\n            <mat-icon>power_settings_new</mat-icon> Logout\n          </button>\n        </ng-container>\n        <ng-container *ngIf = \"flag == 1\">\n          <button mat-menu-item [routerLink]=\"['/admin/dashboard']\">\n            <mat-icon>vpn_key</mat-icon> Return to My Account\n          </button>\n        </ng-container>\n      </mat-menu>\n      <span class=\"username\">{{user_data.firstname}} {{user_data.lastname}}</span>\n      <button mat-icon-button [matMenuTriggerFor]=\"appMenu\">\n        <span class=\"user_profile\">\n          <mat-icon>account_circle</mat-icon>\n          <i class=\"material-icons\">\n            keyboard_arrow_down\n          </i>\n        </span>\n      </button>\n\n    </mat-card-content>\n  </mat-card-content>\n</mat-toolbar>\n<!-- end header -->";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/components/test/test.component.html":
  /*!*******************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/test/test.component.html ***!
    \*******************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppComponentsTestTestComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<!-- All Data listing start here(default listing) -->\n<mat-card-content class=\"table_wrapper admin_dashboard\">\n\n    <h1>Patient Reports Pending Approval</h1>\n\n    <!-- table -->\n    <lib-listing\n      class=\"DataTable\" \n      *ngIf=\"allBillerData.length>0\" \n      [datasource]=\"allBillerData\" \n      [skip]=\"allUserData_skip\"\n      [modify_header_array]=\"allUserData_modify_header\" \n      [detail_skip_array]=\"previewModal_detail_skip\" \n      [apiurl]=\"apiUrl\"\n      [sourcedata]=\"tableName\" \n      [editroute]=\"editUrl\" \n      [jwttoken]=\"jwtToken\" \n      [statusarr]=\"status\"\n      [updateendpoint]=\"UpdateEndpoint\" \n      [deleteendpoint]=\"deleteEndpoint\" \n      [date_search_endpoint]=\"SearchingEndpoint\"\n      [date_search_source]=\"SearchingSourceName\" \n      [search_settings]=\"search_settings\" \n      [sortdata]=\"sortdata\" \n      [datacollection]=\"datacollection\" \n      [libdata]=\"libdata\" \n      [date_search_source_count]=\"billerData_count\" \n      [limitcond]=\"limitcond\" >\n    </lib-listing>\n\n  </mat-card-content>\n  <!-- dashboard all listing end here -->";
    /***/
  },

  /***/
  "./node_modules/tslib/tslib.es6.js":
  /*!*****************************************!*\
    !*** ./node_modules/tslib/tslib.es6.js ***!
    \*****************************************/

  /*! exports provided: __extends, __assign, __rest, __decorate, __param, __metadata, __awaiter, __generator, __createBinding, __exportStar, __values, __read, __spread, __spreadArrays, __await, __asyncGenerator, __asyncDelegator, __asyncValues, __makeTemplateObject, __importStar, __importDefault, __classPrivateFieldGet, __classPrivateFieldSet */

  /***/
  function node_modulesTslibTslibEs6Js(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__extends", function () {
      return __extends;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__assign", function () {
      return _assign;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__rest", function () {
      return __rest;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__decorate", function () {
      return __decorate;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__param", function () {
      return __param;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__metadata", function () {
      return __metadata;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__awaiter", function () {
      return __awaiter;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__generator", function () {
      return __generator;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__createBinding", function () {
      return __createBinding;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__exportStar", function () {
      return __exportStar;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__values", function () {
      return __values;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__read", function () {
      return __read;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__spread", function () {
      return __spread;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__spreadArrays", function () {
      return __spreadArrays;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__await", function () {
      return __await;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__asyncGenerator", function () {
      return __asyncGenerator;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__asyncDelegator", function () {
      return __asyncDelegator;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__asyncValues", function () {
      return __asyncValues;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__makeTemplateObject", function () {
      return __makeTemplateObject;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__importStar", function () {
      return __importStar;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__importDefault", function () {
      return __importDefault;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__classPrivateFieldGet", function () {
      return __classPrivateFieldGet;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__classPrivateFieldSet", function () {
      return __classPrivateFieldSet;
    });
    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.
    
    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.
    
    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */

    /* global Reflect, Promise */


    var _extendStatics = function extendStatics(d, b) {
      _extendStatics = Object.setPrototypeOf || {
        __proto__: []
      } instanceof Array && function (d, b) {
        d.__proto__ = b;
      } || function (d, b) {
        for (var p in b) {
          if (b.hasOwnProperty(p)) d[p] = b[p];
        }
      };

      return _extendStatics(d, b);
    };

    function __extends(d, b) {
      _extendStatics(d, b);

      function __() {
        this.constructor = d;
      }

      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    var _assign = function __assign() {
      _assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];

          for (var p in s) {
            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
          }
        }

        return t;
      };

      return _assign.apply(this, arguments);
    };

    function __rest(s, e) {
      var t = {};

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
      }

      if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
      }
      return t;
    }

    function __decorate(decorators, target, key, desc) {
      var c = arguments.length,
          r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
          d;
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
      }
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    }

    function __param(paramIndex, decorator) {
      return function (target, key) {
        decorator(target, key, paramIndex);
      };
    }

    function __metadata(metadataKey, metadataValue) {
      if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    }

    function __awaiter(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function (resolve) {
          resolve(value);
        });
      }

      return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }

        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }

        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }

        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    }

    function __generator(thisArg, body) {
      var _ = {
        label: 0,
        sent: function sent() {
          if (t[0] & 1) throw t[1];
          return t[1];
        },
        trys: [],
        ops: []
      },
          f,
          y,
          t,
          g;
      return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
      }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
        return this;
      }), g;

      function verb(n) {
        return function (v) {
          return step([n, v]);
        };
      }

      function step(op) {
        if (f) throw new TypeError("Generator is already executing.");

        while (_) {
          try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];

            switch (op[0]) {
              case 0:
              case 1:
                t = op;
                break;

              case 4:
                _.label++;
                return {
                  value: op[1],
                  done: false
                };

              case 5:
                _.label++;
                y = op[1];
                op = [0];
                continue;

              case 7:
                op = _.ops.pop();

                _.trys.pop();

                continue;

              default:
                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                  _ = 0;
                  continue;
                }

                if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                  _.label = op[1];
                  break;
                }

                if (op[0] === 6 && _.label < t[1]) {
                  _.label = t[1];
                  t = op;
                  break;
                }

                if (t && _.label < t[2]) {
                  _.label = t[2];

                  _.ops.push(op);

                  break;
                }

                if (t[2]) _.ops.pop();

                _.trys.pop();

                continue;
            }

            op = body.call(thisArg, _);
          } catch (e) {
            op = [6, e];
            y = 0;
          } finally {
            f = t = 0;
          }
        }

        if (op[0] & 5) throw op[1];
        return {
          value: op[0] ? op[1] : void 0,
          done: true
        };
      }
    }

    function __createBinding(o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    }

    function __exportStar(m, exports) {
      for (var p in m) {
        if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
      }
    }

    function __values(o) {
      var s = typeof Symbol === "function" && Symbol.iterator,
          m = s && o[s],
          i = 0;
      if (m) return m.call(o);
      if (o && typeof o.length === "number") return {
        next: function next() {
          if (o && i >= o.length) o = void 0;
          return {
            value: o && o[i++],
            done: !o
          };
        }
      };
      throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }

    function __read(o, n) {
      var m = typeof Symbol === "function" && o[Symbol.iterator];
      if (!m) return o;
      var i = m.call(o),
          r,
          ar = [],
          e;

      try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
          ar.push(r.value);
        }
      } catch (error) {
        e = {
          error: error
        };
      } finally {
        try {
          if (r && !r.done && (m = i["return"])) m.call(i);
        } finally {
          if (e) throw e.error;
        }
      }

      return ar;
    }

    function __spread() {
      for (var ar = [], i = 0; i < arguments.length; i++) {
        ar = ar.concat(__read(arguments[i]));
      }

      return ar;
    }

    function __spreadArrays() {
      for (var s = 0, i = 0, il = arguments.length; i < il; i++) {
        s += arguments[i].length;
      }

      for (var r = Array(s), k = 0, i = 0; i < il; i++) {
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {
          r[k] = a[j];
        }
      }

      return r;
    }

    ;

    function __await(v) {
      return this instanceof __await ? (this.v = v, this) : new __await(v);
    }

    function __asyncGenerator(thisArg, _arguments, generator) {
      if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
      var g = generator.apply(thisArg, _arguments || []),
          i,
          q = [];
      return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
        return this;
      }, i;

      function verb(n) {
        if (g[n]) i[n] = function (v) {
          return new Promise(function (a, b) {
            q.push([n, v, a, b]) > 1 || resume(n, v);
          });
        };
      }

      function resume(n, v) {
        try {
          step(g[n](v));
        } catch (e) {
          settle(q[0][3], e);
        }
      }

      function step(r) {
        r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
      }

      function fulfill(value) {
        resume("next", value);
      }

      function reject(value) {
        resume("throw", value);
      }

      function settle(f, v) {
        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
      }
    }

    function __asyncDelegator(o) {
      var i, p;
      return i = {}, verb("next"), verb("throw", function (e) {
        throw e;
      }), verb("return"), i[Symbol.iterator] = function () {
        return this;
      }, i;

      function verb(n, f) {
        i[n] = o[n] ? function (v) {
          return (p = !p) ? {
            value: __await(o[n](v)),
            done: n === "return"
          } : f ? f(v) : v;
        } : f;
      }
    }

    function __asyncValues(o) {
      if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
      var m = o[Symbol.asyncIterator],
          i;
      return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
        return this;
      }, i);

      function verb(n) {
        i[n] = o[n] && function (v) {
          return new Promise(function (resolve, reject) {
            v = o[n](v), settle(resolve, reject, v.done, v.value);
          });
        };
      }

      function settle(resolve, reject, d, v) {
        Promise.resolve(v).then(function (v) {
          resolve({
            value: v,
            done: d
          });
        }, reject);
      }
    }

    function __makeTemplateObject(cooked, raw) {
      if (Object.defineProperty) {
        Object.defineProperty(cooked, "raw", {
          value: raw
        });
      } else {
        cooked.raw = raw;
      }

      return cooked;
    }

    ;

    function __importStar(mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) {
        if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
      }
      result["default"] = mod;
      return result;
    }

    function __importDefault(mod) {
      return mod && mod.__esModule ? mod : {
        "default": mod
      };
    }

    function __classPrivateFieldGet(receiver, privateMap) {
      if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
      }

      return privateMap.get(receiver);
    }

    function __classPrivateFieldSet(receiver, privateMap, value) {
      if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
      }

      privateMap.set(receiver, value);
      return value;
    }
    /***/

  },

  /***/
  "./src/app/app.browser.module.ts":
  /*!***************************************!*\
    !*** ./src/app/app.browser.module.ts ***!
    \***************************************/

  /*! exports provided: AppBrowserModule */

  /***/
  function srcAppAppBrowserModuleTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AppBrowserModule", function () {
      return AppBrowserModule;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/platform-browser */
    "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _modules_app_routing_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./modules/app-routing.module */
    "./src/app/modules/app-routing.module.ts");
    /* harmony import */


    var _app_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./app.component */
    "./src/app/app.component.ts");
    /* harmony import */


    var _app_module__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./app.module */
    "./src/app/app.module.ts");
    /* harmony import */


    var _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/platform-browser/animations */
    "./node_modules/@angular/platform-browser/fesm2015/animations.js");

    var AppBrowserModule = function AppBrowserModule() {
      _classCallCheck(this, AppBrowserModule);
    };

    AppBrowserModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["NgModule"])({
      imports: [_modules_app_routing_module__WEBPACK_IMPORTED_MODULE_3__["AppRoutingModule"], _app_module__WEBPACK_IMPORTED_MODULE_5__["AppModule"], _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__["BrowserTransferStateModule"], _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_6__["BrowserAnimationsModule"]],
      providers: [],
      bootstrap: [_app_component__WEBPACK_IMPORTED_MODULE_4__["AppComponent"]]
    })], AppBrowserModule);
    /***/
  },

  /***/
  "./src/app/app.component.css":
  /*!***********************************!*\
    !*** ./src/app/app.component.css ***!
    \***********************************/

  /*! exports provided: default */

  /***/
  function srcAppAppComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = ".mainOverlayLoader {\n    position: fixed;\n    display: flex;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: rgba(0,0,0,0.5);\n    z-index: 2;\n    cursor: pointer;\n    justify-content: center;\n    align-items: center;\n  }\n  .mat_card_content{ width: 200px; align-items: center;  flex-direction: column;display: flex;\n    justify-content: center;}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxlQUFlO0lBQ2YsYUFBYTtJQUNiLFdBQVc7SUFDWCxZQUFZO0lBQ1osTUFBTTtJQUNOLE9BQU87SUFDUCxRQUFRO0lBQ1IsU0FBUztJQUNULGlDQUFpQztJQUNqQyxVQUFVO0lBQ1YsZUFBZTtJQUNmLHVCQUF1QjtJQUN2QixtQkFBbUI7RUFDckI7RUFDQSxtQkFBbUIsWUFBWSxFQUFFLG1CQUFtQixHQUFHLHNCQUFzQixDQUFDLGFBQWE7SUFDekYsdUJBQXVCLENBQUMiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYWluT3ZlcmxheUxvYWRlciB7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHJpZ2h0OiAwO1xuICAgIGJvdHRvbTogMDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsMCwwLDAuNSk7XG4gICAgei1pbmRleDogMjtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgfVxuICAubWF0X2NhcmRfY29udGVudHsgd2lkdGg6IDIwMHB4OyBhbGlnbi1pdGVtczogY2VudGVyOyAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO30iXX0= */";
    /***/
  },

  /***/
  "./src/app/app.component.ts":
  /*!**********************************!*\
    !*** ./src/app/app.component.ts ***!
    \**********************************/

  /*! exports provided: AppComponent */

  /***/
  function srcAppAppComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AppComponent", function () {
      return AppComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");

    var AppComponent = /*#__PURE__*/function () {
      function AppComponent(cookieService, router) {
        var _this = this;

        _classCallCheck(this, AppComponent);

        this.cookieService = cookieService;
        this.router = router;
        this.title = 'aws-backend';
        this.loading = false;
        this.testJsonData = {
          "data": "test",
          "others": "others test"
        };
        /* Universal Loader for Reslove */

        this.router.events.subscribe(function (event) {
          switch (true) {
            case event instanceof _angular_router__WEBPACK_IMPORTED_MODULE_3__["NavigationStart"]:
              {
                _this.loading = true;
                break;
              }

            case event instanceof _angular_router__WEBPACK_IMPORTED_MODULE_3__["NavigationEnd"]:
            case event instanceof _angular_router__WEBPACK_IMPORTED_MODULE_3__["NavigationCancel"]:
            case event instanceof _angular_router__WEBPACK_IMPORTED_MODULE_3__["NavigationError"]:
              {
                _this.loading = false;
                break;
              }

            default:
              {
                break;
              }
          }
        });
      }
      /**page open at the top portion start**/


      _createClass(AppComponent, [{
        key: "onActivate",
        value: function onActivate(event) {
          window.scroll(0, 0);
        }
      }]);

      return AppComponent;
    }();

    AppComponent.ctorParameters = function () {
      return [{
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"]
      }];
    };

    AppComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-root',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./app.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/app.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./app.component.css */
      "./src/app/app.component.css"))["default"]]
    })], AppComponent);
    /***/
  },

  /***/
  "./src/app/app.module.ts":
  /*!*******************************!*\
    !*** ./src/app/app.module.ts ***!
    \*******************************/

  /*! exports provided: AppModule */

  /***/
  function srcAppAppModuleTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AppModule", function () {
      return AppModule;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _trademe_ng_defer_load__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @trademe/ng-defer-load */
    "./node_modules/@trademe/ng-defer-load/fesm2015/trademe-ng-defer-load.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_common_http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/common/http */
    "./node_modules/@angular/common/fesm2015/http.js");
    /* harmony import */


    var _modules_app_routing_module__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./modules/app-routing.module */
    "./src/app/modules/app-routing.module.ts");
    /* harmony import */


    var _app_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./app.component */
    "./src/app/app.component.ts");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var _nguniversal_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @nguniversal/common */
    "./node_modules/@nguniversal/common/fesm2015/common.js");
    /* harmony import */


    var _ng_toolkit_universal__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! @ng-toolkit/universal */
    "./node_modules/@ng-toolkit/universal/fesm2015/ng-toolkit-universal.js");
    /* harmony import */


    var _components_auth_login_login_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ./components/auth/login/login.component */
    "./src/app/components/auth/login/login.component.ts");
    /* harmony import */


    var login_lib_influxiq__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! login-lib-influxiq */
    "./node_modules/login-lib-influxiq/fesm2015/login-lib-influxiq.js");
    /* harmony import */


    var listing_angular7__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
    /*! listing-angular7 */
    "./node_modules/listing-angular7/fesm2015/listing-angular7.js");
    /* harmony import */


    var file_upload_lib_influxiq__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
    /*! file-upload-lib-influxiq */
    "./node_modules/file-upload-lib-influxiq/fesm2015/file-upload-lib-influxiq.js");
    /* harmony import */


    var time_ago_pipe__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
    /*! time-ago-pipe */
    "./node_modules/time-ago-pipe/esm2015/time-ago-pipe.js");
    /* harmony import */


    var _ngx_meta_core__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
    /*! @ngx-meta/core */
    "./node_modules/@ngx-meta/core/fesm2015/ngx-meta-core.js");
    /* harmony import */


    var ngx_device_detector__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
    /*! ngx-device-detector */
    "./node_modules/ngx-device-detector/fesm2015/ngx-device-detector.js");
    /* harmony import */


    var ckeditor4_angular__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
    /*! ckeditor4-angular */
    "./node_modules/ckeditor4-angular/fesm2015/ckeditor4-angular.js");
    /* harmony import */


    var calendar_management_lib_influxiq__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
    /*! calendar-management-lib-influxiq */
    "./node_modules/calendar-management-lib-influxiq/fesm2015/calendar-management-lib-influxiq.js");
    /* harmony import */


    var saturn_datepicker__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
    /*! saturn-datepicker */
    "./node_modules/saturn-datepicker/fesm2015/saturn-datepicker.js");
    /* harmony import */


    var _angular_material_moment_adapter__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(
    /*! @angular/material-moment-adapter */
    "./node_modules/@angular/material-moment-adapter/esm2015/material-moment-adapter.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _services_authguard_service__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(
    /*! ./services/authguard.service */
    "./src/app/services/authguard.service.ts");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(
    /*! ./services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _components_common_http_loader_http_loader_component__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(
    /*! ./components/common/http-loader/http-loader.component */
    "./src/app/components/common/http-loader/http-loader.component.ts");
    /* harmony import */


    var _services_http_loader_service__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(
    /*! ./services/http-loader.service */
    "./src/app/services/http-loader.service.ts");
    /* harmony import */


    var _class_common_loader_interceptor__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(
    /*! ./class/common/loader.interceptor */
    "./src/app/class/common/loader.interceptor.ts");
    /* harmony import */


    var _class_common_common_function__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(
    /*! ./class/common/common-function */
    "./src/app/class/common/common-function.ts");
    /* harmony import */


    var _app_modules_materialModule__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(
    /*! ../app/modules/materialModule */
    "./src/app/modules/materialModule.ts");
    /* harmony import */


    var _components_auth_forgetpassword_forgetpassword_component__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(
    /*! ./components/auth/forgetpassword/forgetpassword.component */
    "./src/app/components/auth/forgetpassword/forgetpassword.component.ts");
    /* harmony import */


    var _components_auth_resetpassword_resetpassword_component__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(
    /*! ./components/auth/resetpassword/resetpassword.component */
    "./src/app/components/auth/resetpassword/resetpassword.component.ts");
    /* harmony import */


    var _components_common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(
    /*! ./components/common/dialog-box/dialog-box.component */
    "./src/app/components/common/dialog-box/dialog-box.component.ts");
    /* harmony import */


    var _components_common_upload_dialog_box_upload_dialog_box_component__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(
    /*! ./components/common/upload-dialog-box/upload-dialog-box.component */
    "./src/app/components/common/upload-dialog-box/upload-dialog-box.component.ts");
    /* harmony import */


    var _components_common_password_dialog_box_password_dialog_box_component__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(
    /*! ./components/common/password-dialog-box/password-dialog-box.component */
    "./src/app/components/common/password-dialog-box/password-dialog-box.component.ts");
    /* harmony import */


    var _components_admin_admin_dashboard_admin_dashboard_component__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(
    /*! ./components/admin/admin-dashboard/admin-dashboard.component */
    "./src/app/components/admin/admin-dashboard/admin-dashboard.component.ts");
    /* harmony import */


    var _components_admin_admin_management_add_edit_add_edit_component__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(
    /*! ./components/admin/admin-management/add-edit/add-edit.component */
    "./src/app/components/admin/admin-management/add-edit/add-edit.component.ts");
    /* harmony import */


    var _components_admin_admin_management_manage_admin_list_manage_admin_list_component__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(
    /*! ./components/admin/admin-management/manage-admin-list/manage-admin-list.component */
    "./src/app/components/admin/admin-management/manage-admin-list/manage-admin-list.component.ts");
    /* harmony import */


    var _components_admin_doctor_management_addedit_doctor_addedit_doctor_component__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(
    /*! ./components/admin/doctor-management/addedit-doctor/addedit-doctor.component */
    "./src/app/components/admin/doctor-management/addedit-doctor/addedit-doctor.component.ts");
    /* harmony import */


    var _components_admin_doctor_management_list_doctor_list_doctor_component__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(
    /*! ./components/admin/doctor-management/list-doctor/list-doctor.component */
    "./src/app/components/admin/doctor-management/list-doctor/list-doctor.component.ts");
    /* harmony import */


    var _components_admin_biller_management_add_edit_biller_add_edit_biller_component__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(
    /*! ./components/admin/biller-management/add-edit-biller/add-edit-biller.component */
    "./src/app/components/admin/biller-management/add-edit-biller/add-edit-biller.component.ts");
    /* harmony import */


    var _components_admin_biller_management_listing_biller_listing_biller_component__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(
    /*! ./components/admin/biller-management/listing-biller/listing-biller.component */
    "./src/app/components/admin/biller-management/listing-biller/listing-biller.component.ts");
    /* harmony import */


    var _components_admin_tech_management_listing_tech_listing_tech_component__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(
    /*! ./components/admin/tech-management/listing-tech/listing-tech.component */
    "./src/app/components/admin/tech-management/listing-tech/listing-tech.component.ts");
    /* harmony import */


    var _components_admin_tech_management_add_edit_tech_add_edit_tech_component__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(
    /*! ./components/admin/tech-management/add-edit-tech/add-edit-tech.component */
    "./src/app/components/admin/tech-management/add-edit-tech/add-edit-tech.component.ts");
    /* harmony import */


    var _components_common_account_settings_account_settings_component__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(
    /*! ./components/common/account-settings/account-settings.component */
    "./src/app/components/common/account-settings/account-settings.component.ts");
    /* harmony import */


    var _components_common_account_settings_change_password_change_password_component__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(
    /*! ./components/common/account-settings/change-password/change-password.component */
    "./src/app/components/common/account-settings/change-password/change-password.component.ts");
    /* harmony import */


    var _components_admin_user_management_user_add_edit_user_add_edit_component__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(
    /*! ./components/admin/user-management/user-add-edit/user-add-edit.component */
    "./src/app/components/admin/user-management/user-add-edit/user-add-edit.component.ts");
    /* harmony import */


    var _components_admin_sales_person_management_list_sales_person_list_sales_person_component__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(
    /*! ./components/admin/sales-person-management/list-sales-person/list-sales-person.component */
    "./src/app/components/admin/sales-person-management/list-sales-person/list-sales-person.component.ts");
    /* harmony import */


    var _components_admin_sales_person_management_add_edit_sales_person_add_edit_sales_person_component__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(
    /*! ./components/admin/sales-person-management/add-edit-sales-person/add-edit-sales-person.component */
    "./src/app/components/admin/sales-person-management/add-edit-sales-person/add-edit-sales-person.component.ts");
    /* harmony import */


    var _components_tech_tech_dashboard_tech_dashboard_component__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(
    /*! ./components/tech/tech-dashboard/tech-dashboard.component */
    "./src/app/components/tech/tech-dashboard/tech-dashboard.component.ts");
    /* harmony import */


    var _components_tech_tech_header_tech_header_component__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(
    /*! ./components/tech/tech-header/tech-header.component */
    "./src/app/components/tech/tech-header/tech-header.component.ts");
    /* harmony import */


    var _components_admin_admin_dashboard_add_edit_patient_add_edit_patient_component__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(
    /*! ./components/admin/admin-dashboard/add-edit-patient/add-edit-patient.component */
    "./src/app/components/admin/admin-dashboard/add-edit-patient/add-edit-patient.component.ts");
    /* harmony import */


    var _components_tech_patient_management_bulk_upload_bulk_upload_component__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(
    /*! ./components/tech/patient-management/bulk-upload/bulk-upload.component */
    "./src/app/components/tech/patient-management/bulk-upload/bulk-upload.component.ts");
    /* harmony import */


    var _components_doctor_doctor_dashboard_doctor_dashboard_component__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(
    /*! ./components/doctor/doctor-dashboard/doctor-dashboard.component */
    "./src/app/components/doctor/doctor-dashboard/doctor-dashboard.component.ts");
    /* harmony import */


    var _components_doctor_doctor_header_doctor_header_component__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(
    /*! ./components/doctor/doctor-header/doctor-header.component */
    "./src/app/components/doctor/doctor-header/doctor-header.component.ts");
    /* harmony import */


    var _components_biller_biller_dashboard_biller_dashboard_component__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(
    /*! ./components/biller/biller-dashboard/biller-dashboard.component */
    "./src/app/components/biller/biller-dashboard/biller-dashboard.component.ts");
    /* harmony import */


    var _components_biller_biller_header_biller_header_component__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(
    /*! ./components/biller/biller-header/biller-header.component */
    "./src/app/components/biller/biller-header/biller-header.component.ts");
    /* harmony import */


    var _components_test_test_component__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(
    /*! ./components/test/test.component */
    "./src/app/components/test/test.component.ts");
    /* harmony import */


    var _components_doctor_doctor_dashboard_patient_report_view_healthrisk_system_encounter_healthrisk_system_encounter_component__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(
    /*! ./components/doctor/doctor-dashboard/patient-report-view/healthrisk-system-encounter/healthrisk-system-encounter.component */
    "./src/app/components/doctor/doctor-dashboard/patient-report-view/healthrisk-system-encounter/healthrisk-system-encounter.component.ts");
    /* harmony import */


    var _components_doctor_doctor_dashboard_patient_report_view_system_superbill_system_superbill_component__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(
    /*! ./components/doctor/doctor-dashboard/patient-report-view/system-superbill/system-superbill.component */
    "./src/app/components/doctor/doctor-dashboard/patient-report-view/system-superbill/system-superbill.component.ts");
    /* harmony import */


    var _components_doctor_doctor_dashboard_patient_report_view_health_risk_analysis_health_risk_analysis_component__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(
    /*! ./components/doctor/doctor-dashboard/patient-report-view/health-risk-analysis/health-risk-analysis.component */
    "./src/app/components/doctor/doctor-dashboard/patient-report-view/health-risk-analysis/health-risk-analysis.component.ts");
    /* harmony import */


    var _components_tech_report_details_report_details_component__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(
    /*! ./components/tech/report-details/report-details.component */
    "./src/app/components/tech/report-details/report-details.component.ts");
    /* harmony import */


    var _components_common_not_found_error_not_found_error_component__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(
    /*! ./components/common/not-found-error/not-found-error.component */
    "./src/app/components/common/not-found-error/not-found-error.component.ts");
    /* harmony import */


    var _components_biller_biller_footer_biller_footer_component__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(
    /*! ./components/biller/biller-footer/biller-footer.component */
    "./src/app/components/biller/biller-footer/biller-footer.component.ts");
    /* harmony import */


    var _components_tech_tech_footer_tech_footer_component__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(
    /*! ./components/tech/tech-footer/tech-footer.component */
    "./src/app/components/tech/tech-footer/tech-footer.component.ts");
    /* harmony import */


    var _components_doctor_doctor_footer_doctor_footer_component__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(
    /*! ./components/doctor/doctor-footer/doctor-footer.component */
    "./src/app/components/doctor/doctor-footer/doctor-footer.component.ts");
    /* harmony import */


    var _components_doctor_signature_management_signature_management_component__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(
    /*! ./components/doctor/signature-management/signature-management.component */
    "./src/app/components/doctor/signature-management/signature-management.component.ts");
    /* harmony import */


    var _components_admin_doctor_office_management_doctor_office_management_component__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(
    /*! ./components/admin/doctor-office-management/doctor-office-management.component */
    "./src/app/components/admin/doctor-office-management/doctor-office-management.component.ts");
    /* harmony import */


    var _components_admin_doctor_office_management_add_edit_doctor_ofc_add_edit_doctor_ofc_component__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(
    /*! ./components/admin/doctor-office-management/add-edit-doctor-ofc/add-edit-doctor-ofc.component */
    "./src/app/components/admin/doctor-office-management/add-edit-doctor-ofc/add-edit-doctor-ofc.component.ts");
    /* harmony import */


    var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(
    /*! @angular/material/paginator */
    "./node_modules/@angular/material/esm2015/paginator.js");
    /* harmony import */


    var _components_admin_booked_appoinments_booked_appoinments_component__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(
    /*! ./components/admin/booked-appoinments/booked-appoinments.component */
    "./src/app/components/admin/booked-appoinments/booked-appoinments.component.ts");
    /* harmony import */


    var _components_tech_manage_calender_my_appointments_list_list_component__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(
    /*! ./components/tech/manage-calender/my-appointments/list/list.component */
    "./src/app/components/tech/manage-calender/my-appointments/list/list.component.ts");
    /* harmony import */


    var _components_doctor_office_doctor_office_dashboard_doctor_office_dashboard_component__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(
    /*! ./components/doctor-office/doctor-office-dashboard/doctor-office-dashboard.component */
    "./src/app/components/doctor-office/doctor-office-dashboard/doctor-office-dashboard.component.ts");
    /* harmony import */


    var _components_doctor_office_doctor_office_header_doctor_office_header_component__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(
    /*! ./components/doctor-office/doctor-office-header/doctor-office-header.component */
    "./src/app/components/doctor-office/doctor-office-header/doctor-office-header.component.ts");
    /* harmony import */


    var _components_doctor_office_doctor_office_footer_doctor_office_footer_component__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(
    /*! ./components/doctor-office/doctor-office-footer/doctor-office-footer.component */
    "./src/app/components/doctor-office/doctor-office-footer/doctor-office-footer.component.ts");
    /* harmony import */


    var _components_doctor_office_doctor_office_account_settings_doctor_office_account_settings_component__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(
    /*! ./components/doctor-office/doctor-office-account-settings/doctor-office-account-settings.component */
    "./src/app/components/doctor-office/doctor-office-account-settings/doctor-office-account-settings.component.ts");
    /* harmony import */


    var _components_auth_logout_logout_component__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(
    /*! ./components/auth/logout/logout.component */
    "./src/app/components/auth/logout/logout.component.ts");
    /* harmony import */


    var _components_doctor_office_doctor_office_change_password_doctor_office_change_password_component__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(
    /*! ./components/doctor-office/doctor-office-change-password/doctor-office-change-password.component */
    "./src/app/components/doctor-office/doctor-office-change-password/doctor-office-change-password.component.ts");
    /* harmony import */


    var _components_doctor_doctor_dashboard_patient_report_view_patient_report_view_component__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(
    /*! ./components/doctor/doctor-dashboard/patient-report-view/patient-report-view.component */
    "./src/app/components/doctor/doctor-dashboard/patient-report-view/patient-report-view.component.ts");
    /* harmony import */


    var _components_admin_admin_dashboard_edit_patient_record_edit_patient_record_component__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(
    /*! ./components/admin/admin-dashboard/edit-patient-record/edit-patient-record.component */
    "./src/app/components/admin/admin-dashboard/edit-patient-record/edit-patient-record.component.ts");
    /* harmony import */


    var _components_admin_report_not_process_report_not_process_component__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(
    /*! ./components/admin/report-not-process/report-not-process.component */
    "./src/app/components/admin/report-not-process/report-not-process.component.ts");
    /* harmony import */


    var _components_biller_download_superbiller_download_superbiller_component__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(
    /*! ./components/biller/download-superbiller/download-superbiller.component */
    "./src/app/components/biller/download-superbiller/download-superbiller.component.ts");
    /* harmony import */


    var _components_admin_admin_dashboard_download_details_download_details_component__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(
    /*! ./components/admin/admin-dashboard/download-details/download-details.component */
    "./src/app/components/admin/admin-dashboard/download-details/download-details.component.ts");
    /* harmony import */


    var ngx_ui_loader__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(
    /*! ngx-ui-loader */
    "./node_modules/ngx-ui-loader/fesm2015/ngx-ui-loader.js");
    /* harmony import */


    var _components_admin_diagnostic_admin_management_add_edit_diagnostic_admin_add_edit_diagnostic_admin_component__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(
    /*! ./components/admin/diagnostic-admin-management/add-edit-diagnostic-admin/add-edit-diagnostic-admin.component */
    "./src/app/components/admin/diagnostic-admin-management/add-edit-diagnostic-admin/add-edit-diagnostic-admin.component.ts");
    /* harmony import */


    var _components_admin_diagnostic_admin_management_listing_diagnostic_admin_listing_diagnostic_admin_component__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(
    /*! ./components/admin/diagnostic-admin-management/listing-diagnostic-admin/listing-diagnostic-admin.component */
    "./src/app/components/admin/diagnostic-admin-management/listing-diagnostic-admin/listing-diagnostic-admin.component.ts");
    /* harmony import */


    var _components_diagnostic_admin_diagnostic_admin_dashboard_diagnostic_admin_dashboard_component__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(
    /*! ./components/diagnostic-admin/diagnostic-admin-dashboard/diagnostic-admin-dashboard.component */
    "./src/app/components/diagnostic-admin/diagnostic-admin-dashboard/diagnostic-admin-dashboard.component.ts");
    /* harmony import */


    var _components_diagnostic_admin_diagnostic_admin_header_diagnostic_admin_header_component__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(
    /*! ./components/diagnostic-admin/diagnostic-admin-header/diagnostic-admin-header.component */
    "./src/app/components/diagnostic-admin/diagnostic-admin-header/diagnostic-admin-header.component.ts");
    /* harmony import */


    var _components_diagnostic_admin_diagnostic_admin_footer_diagnostic_admin_footer_component__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(
    /*! ./components/diagnostic-admin/diagnostic-admin-footer/diagnostic-admin-footer.component */
    "./src/app/components/diagnostic-admin/diagnostic-admin-footer/diagnostic-admin-footer.component.ts");
    /* harmony import */


    var _components_doctor_doctor_dashboard_patient_report_view_additional_recommemded_diagnostic_tests_additional_recommemded_diagnostic_tests_component__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(
    /*! ./components/doctor/doctor-dashboard/patient-report-view/additional-recommemded-diagnostic-tests/additional-recommemded-diagnostic-tests.component */
    "./src/app/components/doctor/doctor-dashboard/patient-report-view/additional-recommemded-diagnostic-tests/additional-recommemded-diagnostic-tests.component.ts");
    /* harmony import */


    var _components_sales_person_sales_person_dashboard_sales_person_dashboard_component__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(
    /*! ./components/sales-person/sales-person-dashboard/sales-person-dashboard.component */
    "./src/app/components/sales-person/sales-person-dashboard/sales-person-dashboard.component.ts");
    /* harmony import */


    var _components_sales_person_sales_person_header_sales_person_header_component__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(
    /*! ./components/sales-person/sales-person-header/sales-person-header.component */
    "./src/app/components/sales-person/sales-person-header/sales-person-header.component.ts");
    /* harmony import */


    var _components_sales_person_sales_person_footer_sales_person_footer_component__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(
    /*! ./components/sales-person/sales-person-footer/sales-person-footer.component */
    "./src/app/components/sales-person/sales-person-footer/sales-person-footer.component.ts");
    /* harmony import */


    var _components_admin_faq_management_add_edit_faq_add_edit_faq_component__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(
    /*! ./components/admin/faq-management/add-edit-faq/add-edit-faq.component */
    "./src/app/components/admin/faq-management/add-edit-faq/add-edit-faq.component.ts");
    /* harmony import */


    var _components_admin_faq_management_list_faq_list_faq_component__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__(
    /*! ./components/admin/faq-management/list-faq/list-faq.component */
    "./src/app/components/admin/faq-management/list-faq/list-faq.component.ts");
    /* harmony import */


    var _components_common_faq_view_faq_view_component__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__(
    /*! ./components/common/faq-view/faq-view.component */
    "./src/app/components/common/faq-view/faq-view.component.ts");
    /* harmony import */


    var _components_tech_manage_calender_manage_schedule_cal_create_slot_cal_create_slot_component__WEBPACK_IMPORTED_MODULE_95__ = __webpack_require__(
    /*! ./components/tech/manage-calender/manage-schedule/cal-create-slot/cal-create-slot.component */
    "./src/app/components/tech/manage-calender/manage-schedule/cal-create-slot/cal-create-slot.component.ts");
    /* harmony import */


    var _components_tech_manage_calender_manage_schedule_cal_sync_with_google_cal_sync_with_google_component__WEBPACK_IMPORTED_MODULE_96__ = __webpack_require__(
    /*! ./components/tech/manage-calender/manage-schedule/cal-sync-with-google/cal-sync-with-google.component */
    "./src/app/components/tech/manage-calender/manage-schedule/cal-sync-with-google/cal-sync-with-google.component.ts");
    /* harmony import */


    var _components_tech_manage_calender_manage_schedule_cal_home_cal_home_component__WEBPACK_IMPORTED_MODULE_97__ = __webpack_require__(
    /*! ./components/tech/manage-calender/manage-schedule/cal-home/cal-home.component */
    "./src/app/components/tech/manage-calender/manage-schedule/cal-home/cal-home.component.ts");
    /* harmony import */


    var _components_tech_manage_calender_manage_schedule_cal_view_slot_cal_view_slot_component__WEBPACK_IMPORTED_MODULE_98__ = __webpack_require__(
    /*! ./components/tech/manage-calender/manage-schedule/cal-view-slot/cal-view-slot.component */
    "./src/app/components/tech/manage-calender/manage-schedule/cal-view-slot/cal-view-slot.component.ts");
    /* harmony import */


    var _components_tech_manage_calender_manage_schedule_cal_event_listing_cal_event_listing_component__WEBPACK_IMPORTED_MODULE_99__ = __webpack_require__(
    /*! ./components/tech/manage-calender/manage-schedule/cal-event-listing/cal-event-listing.component */
    "./src/app/components/tech/manage-calender/manage-schedule/cal-event-listing/cal-event-listing.component.ts");
    /* harmony import */


    var _components_doctor_office_manage_appointments_appoinments_listing_appoinments_listing_component__WEBPACK_IMPORTED_MODULE_100__ = __webpack_require__(
    /*! ./components/doctor-office/manage-appointments/appoinments-listing/appoinments-listing.component */
    "./src/app/components/doctor-office/manage-appointments/appoinments-listing/appoinments-listing.component.ts");
    /* harmony import */


    var _components_doctor_office_manage_appointments_book_appoinment_now_book_appoinment_now_component__WEBPACK_IMPORTED_MODULE_101__ = __webpack_require__(
    /*! ./components/doctor-office/manage-appointments/book-appoinment-now/book-appoinment-now.component */
    "./src/app/components/doctor-office/manage-appointments/book-appoinment-now/book-appoinment-now.component.ts");
    /* harmony import */


    var _components_tech_manage_calender_manage_schedule_booked_events_booked_events_component__WEBPACK_IMPORTED_MODULE_102__ = __webpack_require__(
    /*! ./components/tech/manage-calender/manage-schedule/booked-events/booked-events.component */
    "./src/app/components/tech/manage-calender/manage-schedule/booked-events/booked-events.component.ts");
    /* harmony import */


    var _components_tech_patient_management_report_conformation_report_conformation_component__WEBPACK_IMPORTED_MODULE_103__ = __webpack_require__(
    /*! ./components/tech/patient-management/report-conformation/report-conformation.component */
    "./src/app/components/tech/patient-management/report-conformation/report-conformation.component.ts");
    /* harmony import */


    var _components_admin_manage_insurance_add_edit_insurance_add_edit_insurance_component__WEBPACK_IMPORTED_MODULE_104__ = __webpack_require__(
    /*! ./components/admin/manage-insurance/add-edit-insurance/add-edit-insurance.component */
    "./src/app/components/admin/manage-insurance/add-edit-insurance/add-edit-insurance.component.ts");
    /* harmony import */


    var _components_admin_manage_insurance_listing_insurance_listing_insurance_component__WEBPACK_IMPORTED_MODULE_105__ = __webpack_require__(
    /*! ./components/admin/manage-insurance/listing-insurance/listing-insurance.component */
    "./src/app/components/admin/manage-insurance/listing-insurance/listing-insurance.component.ts");
    /* harmony import */


    var _components_admin_manage_insurancetype_add_edit_insurancetype_add_edit_insurancetype_component__WEBPACK_IMPORTED_MODULE_106__ = __webpack_require__(
    /*! ./components/admin/manage-insurancetype/add-edit-insurancetype/add-edit-insurancetype.component */
    "./src/app/components/admin/manage-insurancetype/add-edit-insurancetype/add-edit-insurancetype.component.ts");
    /* harmony import */


    var _components_admin_manage_insurancetype_listing_insurancetype_listing_insurancetype_component__WEBPACK_IMPORTED_MODULE_107__ = __webpack_require__(
    /*! ./components/admin/manage-insurancetype/listing-insurancetype/listing-insurancetype.component */
    "./src/app/components/admin/manage-insurancetype/listing-insurancetype/listing-insurancetype.component.ts");
    /* harmony import */


    var _components_admin_manage_doctorgroup_add_edit_doctorgroup_add_edit_doctorgroup_component__WEBPACK_IMPORTED_MODULE_108__ = __webpack_require__(
    /*! ./components/admin/manage-doctorgroup/add-edit-doctorgroup/add-edit-doctorgroup.component */
    "./src/app/components/admin/manage-doctorgroup/add-edit-doctorgroup/add-edit-doctorgroup.component.ts");
    /* harmony import */


    var _components_admin_manage_doctorgroup_listing_doctorgroup_listing_doctorgroup_component__WEBPACK_IMPORTED_MODULE_109__ = __webpack_require__(
    /*! ./components/admin/manage-doctorgroup/listing-doctorgroup/listing-doctorgroup.component */
    "./src/app/components/admin/manage-doctorgroup/listing-doctorgroup/listing-doctorgroup.component.ts");
    /* harmony import */


    var _components_admin_manage_adminbiller_add_edit_adminbiller_add_edit_adminbiller_component__WEBPACK_IMPORTED_MODULE_110__ = __webpack_require__(
    /*! ./components/admin/manage-adminbiller/add-edit-adminbiller/add-edit-adminbiller.component */
    "./src/app/components/admin/manage-adminbiller/add-edit-adminbiller/add-edit-adminbiller.component.ts");
    /* harmony import */


    var _components_admin_manage_adminbiller_listing_adminbiller_listing_adminbiller_component__WEBPACK_IMPORTED_MODULE_111__ = __webpack_require__(
    /*! ./components/admin/manage-adminbiller/listing-adminbiller/listing-adminbiller.component */
    "./src/app/components/admin/manage-adminbiller/listing-adminbiller/listing-adminbiller.component.ts");
    /* harmony import */


    var _components_admin_manage_patientinformation_add_edit_patientinformation_add_edit_patientinformation_component__WEBPACK_IMPORTED_MODULE_112__ = __webpack_require__(
    /*! ./components/admin/manage-patientinformation/add-edit-patientinformation/add-edit-patientinformation.component */
    "./src/app/components/admin/manage-patientinformation/add-edit-patientinformation/add-edit-patientinformation.component.ts");
    /* harmony import */


    var _components_admin_manage_patientinformation_listing_patientinformation_listing_patientinformation_component__WEBPACK_IMPORTED_MODULE_113__ = __webpack_require__(
    /*! ./components/admin/manage-patientinformation/listing-patientinformation/listing-patientinformation.component */
    "./src/app/components/admin/manage-patientinformation/listing-patientinformation/listing-patientinformation.component.ts");
    /* harmony import */


    var _components_admin_manage_distributors_add_edit_distributors_add_edit_distributors_component__WEBPACK_IMPORTED_MODULE_114__ = __webpack_require__(
    /*! ./components/admin/manage-distributors/add-edit-distributors/add-edit-distributors.component */
    "./src/app/components/admin/manage-distributors/add-edit-distributors/add-edit-distributors.component.ts");
    /* harmony import */


    var _components_admin_manage_distributors_listing_distributors_listing_distributors_component__WEBPACK_IMPORTED_MODULE_115__ = __webpack_require__(
    /*! ./components/admin/manage-distributors/listing-distributors/listing-distributors.component */
    "./src/app/components/admin/manage-distributors/listing-distributors/listing-distributors.component.ts");
    /* harmony import */


    var _components_doctor_group_doctor_group_dashboard_doctor_group_dashboard_component__WEBPACK_IMPORTED_MODULE_116__ = __webpack_require__(
    /*! ./components/doctor-group/doctor-group-dashboard/doctor-group-dashboard.component */
    "./src/app/components/doctor-group/doctor-group-dashboard/doctor-group-dashboard.component.ts");
    /* harmony import */


    var _components_doctor_group_doctor_group_header_doctor_group_header_component__WEBPACK_IMPORTED_MODULE_117__ = __webpack_require__(
    /*! ./components/doctor-group/doctor-group-header/doctor-group-header.component */
    "./src/app/components/doctor-group/doctor-group-header/doctor-group-header.component.ts");
    /* harmony import */


    var _components_doctor_group_doctor_group_footer_doctor_group_footer_component__WEBPACK_IMPORTED_MODULE_118__ = __webpack_require__(
    /*! ./components/doctor-group/doctor-group-footer/doctor-group-footer.component */
    "./src/app/components/doctor-group/doctor-group-footer/doctor-group-footer.component.ts");
    /* harmony import */


    var _components_distributors_distributors_dashboard_distributors_dashboard_component__WEBPACK_IMPORTED_MODULE_119__ = __webpack_require__(
    /*! ./components/distributors/distributors-dashboard/distributors-dashboard.component */
    "./src/app/components/distributors/distributors-dashboard/distributors-dashboard.component.ts");
    /* harmony import */


    var _components_distributors_distributors_header_distributors_header_component__WEBPACK_IMPORTED_MODULE_120__ = __webpack_require__(
    /*! ./components/distributors/distributors-header/distributors-header.component */
    "./src/app/components/distributors/distributors-header/distributors-header.component.ts");
    /* harmony import */


    var _components_distributors_distributors_footer_distributors_footer_component__WEBPACK_IMPORTED_MODULE_121__ = __webpack_require__(
    /*! ./components/distributors/distributors-footer/distributors-footer.component */
    "./src/app/components/distributors/distributors-footer/distributors-footer.component.ts");
    /* harmony import */


    var _components_adminbiller_adminbiller_dashboard_adminbiller_dashboard_component__WEBPACK_IMPORTED_MODULE_122__ = __webpack_require__(
    /*! ./components/adminbiller/adminbiller-dashboard/adminbiller-dashboard.component */
    "./src/app/components/adminbiller/adminbiller-dashboard/adminbiller-dashboard.component.ts");
    /* harmony import */


    var _components_adminbiller_adminbiller_header_adminbiller_header_component__WEBPACK_IMPORTED_MODULE_123__ = __webpack_require__(
    /*! ./components/adminbiller/adminbiller-header/adminbiller-header.component */
    "./src/app/components/adminbiller/adminbiller-header/adminbiller-header.component.ts");
    /* harmony import */


    var _components_adminbiller_adminbiller_footer_adminbiller_footer_component__WEBPACK_IMPORTED_MODULE_124__ = __webpack_require__(
    /*! ./components/adminbiller/adminbiller-footer/adminbiller-footer.component */
    "./src/app/components/adminbiller/adminbiller-footer/adminbiller-footer.component.ts");
    /* harmony import */


    var _components_doctor_office_add_patient_add_patient_manually_add_patient_manually_component__WEBPACK_IMPORTED_MODULE_125__ = __webpack_require__(
    /*! ./components/doctor-office/add-patient/add-patient-manually/add-patient-manually.component */
    "./src/app/components/doctor-office/add-patient/add-patient-manually/add-patient-manually.component.ts");
    /* harmony import */


    var _components_booked_events_listing_upcoming_appoinments_upcoming_appoinments_component__WEBPACK_IMPORTED_MODULE_126__ = __webpack_require__(
    /*! ./components/booked-events-listing/upcoming-appoinments/upcoming-appoinments.component */
    "./src/app/components/booked-events-listing/upcoming-appoinments/upcoming-appoinments.component.ts");
    /* harmony import */


    var _components_booked_events_listing_past_appoinments_past_appoinments_component__WEBPACK_IMPORTED_MODULE_127__ = __webpack_require__(
    /*! ./components/booked-events-listing/past-appoinments/past-appoinments.component */
    "./src/app/components/booked-events-listing/past-appoinments/past-appoinments.component.ts");
    /* harmony import */


    var _components_tech_patient_management_patient_select_modal_patient_select_modal_component__WEBPACK_IMPORTED_MODULE_128__ = __webpack_require__(
    /*! ./components/tech/patient-management/patient-select-modal/patient-select-modal.component */
    "./src/app/components/tech/patient-management/patient-select-modal/patient-select-modal.component.ts");
    /* harmony import */


    var _components_tech_patient_management_report_upload_success_modal_report_upload_success_modal_component__WEBPACK_IMPORTED_MODULE_129__ = __webpack_require__(
    /*! ./components/tech/patient-management/report-upload-success-modal/report-upload-success-modal.component */
    "./src/app/components/tech/patient-management/report-upload-success-modal/report-upload-success-modal.component.ts");
    /* harmony import */


    var _components_encounter_form_encounter_form_component__WEBPACK_IMPORTED_MODULE_130__ = __webpack_require__(
    /*! ./components/encounter-form/encounter-form.component */
    "./src/app/components/encounter-form/encounter-form.component.ts");
    /* harmony import */


    var _components_booked_events_listing_reschedule_appointment_reschedule_appointment_component__WEBPACK_IMPORTED_MODULE_131__ = __webpack_require__(
    /*! ./components/booked-events-listing/reschedule-appointment/reschedule-appointment.component */
    "./src/app/components/booked-events-listing/reschedule-appointment/reschedule-appointment.component.ts");
    /* harmony import */


    var _components_doctor_doctor_dashboard_patient_report_view_patient_details_patient_details_component__WEBPACK_IMPORTED_MODULE_132__ = __webpack_require__(
    /*! ./components/doctor/doctor-dashboard/patient-report-view/patient-details/patient-details.component */
    "./src/app/components/doctor/doctor-dashboard/patient-report-view/patient-details/patient-details.component.ts");
    /* harmony import */


    var _components_common_encounter_form_rules_encounter_form_rules_component__WEBPACK_IMPORTED_MODULE_133__ = __webpack_require__(
    /*! ./components/common/encounter-form-rules/encounter-form-rules.component */
    "./src/app/components/common/encounter-form-rules/encounter-form-rules.component.ts");
    /* harmony import */


    var _components_admin_admin_dashboard_approved_patient_reports_approved_patient_reports_component__WEBPACK_IMPORTED_MODULE_134__ = __webpack_require__(
    /*! ./components/admin/admin-dashboard/approved-patient-reports/approved-patient-reports.component */
    "./src/app/components/admin/admin-dashboard/approved-patient-reports/approved-patient-reports.component.ts");
    /* harmony import */


    var _components_common_doctor_signup_share_doctor_signup_share_component__WEBPACK_IMPORTED_MODULE_135__ = __webpack_require__(
    /*! ./components/common/doctor-signup-share/doctor-signup-share.component */
    "./src/app/components/common/doctor-signup-share/doctor-signup-share.component.ts");
    /* harmony import */


    var _components_adminbiller_approved_patient_reports_approved_patient_reports_billeradmin_approved_patient_reports_billeradmin_component__WEBPACK_IMPORTED_MODULE_136__ = __webpack_require__(
    /*! ./components/adminbiller/approved-patient-reports/approved-patient-reports-billeradmin/approved-patient-reports-billeradmin.component */
    "./src/app/components/adminbiller/approved-patient-reports/approved-patient-reports-billeradmin/approved-patient-reports-billeradmin.component.ts");
    /* harmony import */


    var _components_admin_admin_dashboard_hold_report_job_ticket_hold_report_job_ticket_component__WEBPACK_IMPORTED_MODULE_137__ = __webpack_require__(
    /*! ./components/admin/admin-dashboard/hold-report-job-ticket/hold-report-job-ticket.component */
    "./src/app/components/admin/admin-dashboard/hold-report-job-ticket/hold-report-job-ticket.component.ts");
    /* harmony import */


    var _components_admin_cpt_validate_reports_cpt_validate_reports_cpt_validate_reports_component__WEBPACK_IMPORTED_MODULE_138__ = __webpack_require__(
    /*! ./components/admin/cpt-validate-reports/cpt-validate-reports/cpt-validate-reports.component */
    "./src/app/components/admin/cpt-validate-reports/cpt-validate-reports/cpt-validate-reports.component.ts");
    /* harmony import */


    var _components_admin_reports_details_reports_details_reports_details_component__WEBPACK_IMPORTED_MODULE_139__ = __webpack_require__(
    /*! ./components/admin/reports-details/reports-details/reports-details.component */
    "./src/app/components/admin/reports-details/reports-details/reports-details.component.ts");
    /* harmony import */


    var _components_admin_admin_dashboard_job_ticket_patient_reports_job_ticket_patient_reports_component__WEBPACK_IMPORTED_MODULE_140__ = __webpack_require__(
    /*! ./components/admin/admin-dashboard/job-ticket-patient-reports/job-ticket-patient-reports.component */
    "./src/app/components/admin/admin-dashboard/job-ticket-patient-reports/job-ticket-patient-reports.component.ts");
    /* harmony import */


    var _components_admin_admin_dashboard_hold_report_job_ticket_view_job_ticket_image_view_job_ticket_image_component__WEBPACK_IMPORTED_MODULE_141__ = __webpack_require__(
    /*! ./components/admin/admin-dashboard/hold-report-job-ticket/view-job-ticket-image/view-job-ticket-image.component */
    "./src/app/components/admin/admin-dashboard/hold-report-job-ticket/view-job-ticket-image/view-job-ticket-image.component.ts");
    /* harmony import */


    var _components_sales_person_cpt_validate_report_salesperson_cpt_validate_report_sales_person_cpt_validate_report_sales_person_component__WEBPACK_IMPORTED_MODULE_142__ = __webpack_require__(
    /*! ./components/sales-person/cpt-validate-report-salesperson/cpt-validate-report-sales-person/cpt-validate-report-sales-person.component */
    "./src/app/components/sales-person/cpt-validate-report-salesperson/cpt-validate-report-sales-person/cpt-validate-report-sales-person.component.ts");
    /* harmony import */


    var _components_admin_report_process_time_report_process_time_report_process_time_component__WEBPACK_IMPORTED_MODULE_143__ = __webpack_require__(
    /*! ./components/admin/report-process-time/report-process-time/report-process-time.component */
    "./src/app/components/admin/report-process-time/report-process-time/report-process-time.component.ts");
    /* harmony import */


    var _components_biller_direct_download_reports_direct_download_reports_component__WEBPACK_IMPORTED_MODULE_144__ = __webpack_require__(
    /*! ./components/biller/direct-download-reports/direct-download-reports.component */
    "./src/app/components/biller/direct-download-reports/direct-download-reports.component.ts");
    /* harmony import */


    var _components_admin_admin_dashboard_view_all_button_list_view_all_button_list_component__WEBPACK_IMPORTED_MODULE_145__ = __webpack_require__(
    /*! ./components/admin/admin-dashboard/view-all-button-list/view-all-button-list.component */
    "./src/app/components/admin/admin-dashboard/view-all-button-list/view-all-button-list.component.ts");
    /* harmony import */


    var _components_admin_login_as_doctor_login_dotor_by_admin_login_dotor_by_admin_component__WEBPACK_IMPORTED_MODULE_146__ = __webpack_require__(
    /*! ./components/admin/login-as-doctor/login-dotor-by-admin/login-dotor-by-admin.component */
    "./src/app/components/admin/login-as-doctor/login-dotor-by-admin/login-dotor-by-admin.component.ts");
    /* harmony import */


    var _components_admin_report_time_setting_report_time_setting_report_time_setting_component__WEBPACK_IMPORTED_MODULE_147__ = __webpack_require__(
    /*! ./components/admin/report-time-setting/report-time-setting/report-time-setting.component */
    "./src/app/components/admin/report-time-setting/report-time-setting/report-time-setting.component.ts");
    /* harmony import */


    var _components_admin_report_time_setting_add_setting_time_add_setting_time_component__WEBPACK_IMPORTED_MODULE_148__ = __webpack_require__(
    /*! ./components/admin/report-time-setting/add-setting-time/add-setting-time.component */
    "./src/app/components/admin/report-time-setting/add-setting-time/add-setting-time.component.ts");
    /* harmony import */


    var _components_common_approval_settings_update_approval_settings_update_component__WEBPACK_IMPORTED_MODULE_149__ = __webpack_require__(
    /*! ./components/common/approval-settings-update/approval-settings-update.component */
    "./src/app/components/common/approval-settings-update/approval-settings-update.component.ts");
    /* harmony import */


    var _components_lazyload_training_training_module__WEBPACK_IMPORTED_MODULE_150__ = __webpack_require__(
    /*! ./components/lazyload-training/training.module */
    "./src/app/components/lazyload-training/training.module.ts");
    /* harmony import */


    var traning_lib_influxiq__WEBPACK_IMPORTED_MODULE_151__ = __webpack_require__(
    /*! traning-lib-influxiq */
    "./node_modules/traning-lib-influxiq/fesm2015/traning-lib-influxiq.js");
    /* harmony import */


    var _components_sales_person_add_new_doctor_add_new_doctor_component__WEBPACK_IMPORTED_MODULE_152__ = __webpack_require__(
    /*! ./components/sales-person/add-new-doctor/add-new-doctor.component */
    "./src/app/components/sales-person/add-new-doctor/add-new-doctor.component.ts");
    /* harmony import */


    var _common_template_common_template_module__WEBPACK_IMPORTED_MODULE_153__ = __webpack_require__(
    /*! ./common-template/common-template.module */
    "./src/app/common-template/common-template.module.ts");
    /* harmony import */


    var _services_training_api_service__WEBPACK_IMPORTED_MODULE_154__ = __webpack_require__(
    /*! ./services/training-api.service */
    "./src/app/services/training-api.service.ts"); // import { BrowserModule } from '@angular/platform-browser';
    // import {BrowserAnimationsModule} from "@angular/platform-browser/animations";
    // login library
    // ck editor

    /* Date Range Picker */

    /* Http Loader */

    /* Common Function */
    // modules

    /* Component (Common uses) Start Here */

    /* Component (Common uses) End Here */

    /* Components (Pages) Start Here */

    /* >>>>------> Admin <------<<<< */
    // import { AdminHeaderComponent } from './components/admin/admin-header/admin-header.component';

    /* >>>>------> Tech <------<<<< */

    /* >>>>------> Doctor <------<<<< */

    /* >>>>------> Biller <------<<<< */

    /* Components (Pages) End Here */

    /* testing purpose start here */
    // import { AdminFooterComponent } from './components/admin/admin-footer/admin-footer.component';

    /* Loader */
    // diagnostic-admin-management
    // import { AddEditTrainingComponent } from './components/lazyload-training/training-management/manage-training/add-edit-training/add-edit-training.component';
    // import { ListingTrainingComponent } from './components/lazyload-training/training-management/manage-training/listing-training/listing-training.component';
    // import { AddEditLessonComponent } from './components/lazyload-training/training-management/manage-lesson/add-edit-lesson/add-edit-lesson.component';
    // import { ListLessonComponent } from './components/lazyload-training/training-management/manage-lesson/list-lesson/list-lesson.component';


    var ngxUiLoaderConfig = {
      "bgsColor": "red",
      "bgsOpacity": 1,
      "bgsPosition": "center-center",
      "bgsSize": 80,
      "bgsType": "rectangle-bounce",
      "blur": 30,
      "delay": 0,
      "fgsColor": "red",
      "fgsPosition": "center-center",
      "fgsSize": 100,
      "fgsType": "three-strings",
      "gap": 50,
      //"logoPosition": "center-center",
      //"logoSize": 120,
      //"logoUrl": "../assets/images/minilogo.png",
      "masterLoaderId": "master",
      "overlayBorderRadius": "0",
      "overlayColor": "rgba(40, 40, 40, 0.8)",
      "pbColor": "red",
      "pbDirection": "ltr",
      "pbThickness": 6,
      "hasProgressBar": true,
      "text": "",
      "textColor": "#FFFFFF",
      "textPosition": "center-center",
      "maxTime": -1,
      "minTime": 500
    };

    var AppModule = function AppModule(http) {
      _classCallCheck(this, AppModule);

      this.http = http; // this.http.get('localhost/api/googleapiphp/powertag.php?q=car&count=3')
      //   .subscribe((r) => {
      //     console.log(r);
      //   });
    };

    AppModule.ctorParameters = function () {
      return [{
        type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]
      }];
    };

    AppModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["NgModule"])({
      declarations: [_app_component__WEBPACK_IMPORTED_MODULE_5__["AppComponent"], // Auth
      _components_auth_login_login_component__WEBPACK_IMPORTED_MODULE_9__["LoginComponent"], _components_auth_forgetpassword_forgetpassword_component__WEBPACK_IMPORTED_MODULE_29__["ForgetpasswordComponent"], _components_auth_resetpassword_resetpassword_component__WEBPACK_IMPORTED_MODULE_30__["ResetpasswordComponent"], // dashboard
      _components_tech_tech_dashboard_tech_dashboard_component__WEBPACK_IMPORTED_MODULE_48__["TechDashboardComponent"], _components_admin_admin_dashboard_admin_dashboard_component__WEBPACK_IMPORTED_MODULE_34__["AdminDashboardComponent"], _components_biller_biller_dashboard_biller_dashboard_component__WEBPACK_IMPORTED_MODULE_54__["BillerDashboardComponent"], _components_doctor_doctor_dashboard_doctor_dashboard_component__WEBPACK_IMPORTED_MODULE_52__["DoctorDashboardComponent"], //user-management
      _components_admin_user_management_user_add_edit_user_add_edit_component__WEBPACK_IMPORTED_MODULE_45__["UserAddEditComponent"], // Test
      _components_test_test_component__WEBPACK_IMPORTED_MODULE_56__["TestComponent"], _components_admin_admin_management_add_edit_add_edit_component__WEBPACK_IMPORTED_MODULE_35__["AddEditComponent"], _components_admin_admin_management_manage_admin_list_manage_admin_list_component__WEBPACK_IMPORTED_MODULE_36__["ManageAdminListComponent"], // AdminHeaderComponent,
      _components_admin_doctor_management_addedit_doctor_addedit_doctor_component__WEBPACK_IMPORTED_MODULE_37__["AddeditDoctorComponent"], _components_admin_doctor_management_list_doctor_list_doctor_component__WEBPACK_IMPORTED_MODULE_38__["ListDoctorComponent"], _components_admin_doctor_management_addedit_doctor_addedit_doctor_component__WEBPACK_IMPORTED_MODULE_37__["ChangePasswordDoctorModal"], _components_admin_biller_management_add_edit_biller_add_edit_biller_component__WEBPACK_IMPORTED_MODULE_39__["AddEditBillerComponent"], _components_admin_biller_management_listing_biller_listing_biller_component__WEBPACK_IMPORTED_MODULE_40__["ListingBillerComponent"], _components_admin_tech_management_listing_tech_listing_tech_component__WEBPACK_IMPORTED_MODULE_41__["ListingTechComponent"], _components_admin_tech_management_add_edit_tech_add_edit_tech_component__WEBPACK_IMPORTED_MODULE_42__["AddEditTechComponent"], _components_admin_tech_management_add_edit_tech_add_edit_tech_component__WEBPACK_IMPORTED_MODULE_42__["Dialogtest"], _components_admin_sales_person_management_add_edit_sales_person_add_edit_sales_person_component__WEBPACK_IMPORTED_MODULE_47__["SRDialogtest"], _components_admin_biller_management_add_edit_biller_add_edit_biller_component__WEBPACK_IMPORTED_MODULE_39__["ChangePasswordModal"], _components_admin_doctor_office_management_add_edit_doctor_ofc_add_edit_doctor_ofc_component__WEBPACK_IMPORTED_MODULE_67__["ChangePasswordDoctorOfficeModal"], _components_admin_admin_management_add_edit_add_edit_component__WEBPACK_IMPORTED_MODULE_35__["ChangePasswordAdminModal"], _components_common_account_settings_account_settings_component__WEBPACK_IMPORTED_MODULE_43__["AccountSettingsComponent"], _components_common_account_settings_change_password_change_password_component__WEBPACK_IMPORTED_MODULE_44__["ChangePasswordComponent"], _components_admin_admin_dashboard_add_edit_patient_add_edit_patient_component__WEBPACK_IMPORTED_MODULE_50__["AddEditPatientComponent"], _components_common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_31__["DialogBoxComponent"], _components_tech_patient_management_bulk_upload_bulk_upload_component__WEBPACK_IMPORTED_MODULE_51__["BulkUploadComponent"], _components_common_upload_dialog_box_upload_dialog_box_component__WEBPACK_IMPORTED_MODULE_32__["UploadDialogBoxComponent"], _components_biller_biller_header_biller_header_component__WEBPACK_IMPORTED_MODULE_55__["BillerHeaderComponent"], _components_doctor_doctor_header_doctor_header_component__WEBPACK_IMPORTED_MODULE_53__["DoctorHeaderComponent"], _components_tech_tech_header_tech_header_component__WEBPACK_IMPORTED_MODULE_49__["TechHeaderComponent"], _components_doctor_doctor_dashboard_patient_report_view_healthrisk_system_encounter_healthrisk_system_encounter_component__WEBPACK_IMPORTED_MODULE_57__["HealthriskSystemEncounterComponent"], _components_doctor_doctor_dashboard_patient_report_view_system_superbill_system_superbill_component__WEBPACK_IMPORTED_MODULE_58__["SystemSuperbillComponent"], _components_doctor_doctor_dashboard_patient_report_view_health_risk_analysis_health_risk_analysis_component__WEBPACK_IMPORTED_MODULE_59__["HealthRiskAnalysisComponent"], _components_tech_report_details_report_details_component__WEBPACK_IMPORTED_MODULE_60__["ReportDetailsComponent"], _components_common_http_loader_http_loader_component__WEBPACK_IMPORTED_MODULE_24__["HttpLoaderComponent"], _components_common_not_found_error_not_found_error_component__WEBPACK_IMPORTED_MODULE_61__["NotFoundErrorComponent"], // AdminFooterComponent,
      _components_biller_biller_footer_biller_footer_component__WEBPACK_IMPORTED_MODULE_62__["BillerFooterComponent"], _components_tech_tech_footer_tech_footer_component__WEBPACK_IMPORTED_MODULE_63__["TechFooterComponent"], _components_doctor_doctor_footer_doctor_footer_component__WEBPACK_IMPORTED_MODULE_64__["DoctorFooterComponent"], _components_doctor_signature_management_signature_management_component__WEBPACK_IMPORTED_MODULE_65__["SignatureManagementComponent"], _components_common_password_dialog_box_password_dialog_box_component__WEBPACK_IMPORTED_MODULE_33__["PasswordDialogBoxComponent"], _components_admin_doctor_office_management_doctor_office_management_component__WEBPACK_IMPORTED_MODULE_66__["DoctorOfficeManagementComponent"], _components_admin_doctor_office_management_add_edit_doctor_ofc_add_edit_doctor_ofc_component__WEBPACK_IMPORTED_MODULE_67__["AddEditDoctorOfcComponent"], _components_admin_booked_appoinments_booked_appoinments_component__WEBPACK_IMPORTED_MODULE_69__["BookedAppoinmentsComponent"], _components_tech_manage_calender_my_appointments_list_list_component__WEBPACK_IMPORTED_MODULE_70__["ListComponent"], _components_doctor_office_doctor_office_dashboard_doctor_office_dashboard_component__WEBPACK_IMPORTED_MODULE_71__["DoctorOfficeDashboardComponent"], _components_doctor_office_doctor_office_header_doctor_office_header_component__WEBPACK_IMPORTED_MODULE_72__["DoctorOfficeHeaderComponent"], _components_doctor_office_doctor_office_footer_doctor_office_footer_component__WEBPACK_IMPORTED_MODULE_73__["DoctorOfficeFooterComponent"], _components_admin_booked_appoinments_booked_appoinments_component__WEBPACK_IMPORTED_MODULE_69__["BookedAppoinmentsComponent"], _components_doctor_office_doctor_office_account_settings_doctor_office_account_settings_component__WEBPACK_IMPORTED_MODULE_74__["DoctorOfficeAccountSettingsComponent"], _components_doctor_office_doctor_office_change_password_doctor_office_change_password_component__WEBPACK_IMPORTED_MODULE_76__["DoctorOfficeChangePasswordComponent"], _components_auth_logout_logout_component__WEBPACK_IMPORTED_MODULE_75__["LogoutComponent"], _components_doctor_doctor_dashboard_patient_report_view_patient_report_view_component__WEBPACK_IMPORTED_MODULE_77__["PatientReportViewComponent"], _components_tech_tech_dashboard_tech_dashboard_component__WEBPACK_IMPORTED_MODULE_48__["DoctorViewDialogComponent"], _components_admin_admin_dashboard_edit_patient_record_edit_patient_record_component__WEBPACK_IMPORTED_MODULE_78__["EditPatientRecordComponent"], _components_admin_report_not_process_report_not_process_component__WEBPACK_IMPORTED_MODULE_79__["ReportNotProcessComponent"], _components_biller_download_superbiller_download_superbiller_component__WEBPACK_IMPORTED_MODULE_80__["DownloadSuperbillerComponent"], _components_admin_admin_dashboard_download_details_download_details_component__WEBPACK_IMPORTED_MODULE_81__["DownloadDetailsComponent"], _components_admin_diagnostic_admin_management_add_edit_diagnostic_admin_add_edit_diagnostic_admin_component__WEBPACK_IMPORTED_MODULE_83__["AddEditDiagnosticAdminComponent"], _components_admin_diagnostic_admin_management_add_edit_diagnostic_admin_add_edit_diagnostic_admin_component__WEBPACK_IMPORTED_MODULE_83__["DiagnosticAdminPasswordChange"], _components_admin_diagnostic_admin_management_listing_diagnostic_admin_listing_diagnostic_admin_component__WEBPACK_IMPORTED_MODULE_84__["ListingDiagnosticAdminComponent"], _components_diagnostic_admin_diagnostic_admin_dashboard_diagnostic_admin_dashboard_component__WEBPACK_IMPORTED_MODULE_85__["DiagnosticAdminDashboardComponent"], _components_diagnostic_admin_diagnostic_admin_header_diagnostic_admin_header_component__WEBPACK_IMPORTED_MODULE_86__["DiagnosticAdminHeaderComponent"], _components_diagnostic_admin_diagnostic_admin_footer_diagnostic_admin_footer_component__WEBPACK_IMPORTED_MODULE_87__["DiagnosticAdminFooterComponent"], _components_doctor_doctor_dashboard_patient_report_view_additional_recommemded_diagnostic_tests_additional_recommemded_diagnostic_tests_component__WEBPACK_IMPORTED_MODULE_88__["AdditionalRecommemdedDiagnosticTestsComponent"], _components_admin_sales_person_management_list_sales_person_list_sales_person_component__WEBPACK_IMPORTED_MODULE_46__["ListSalesPersonComponent"], _components_admin_sales_person_management_add_edit_sales_person_add_edit_sales_person_component__WEBPACK_IMPORTED_MODULE_47__["AddEditSalesPersonComponent"], _components_sales_person_sales_person_dashboard_sales_person_dashboard_component__WEBPACK_IMPORTED_MODULE_89__["SalesPersonDashboardComponent"], _components_sales_person_sales_person_header_sales_person_header_component__WEBPACK_IMPORTED_MODULE_90__["SalesPersonHeaderComponent"], _components_sales_person_sales_person_footer_sales_person_footer_component__WEBPACK_IMPORTED_MODULE_91__["SalesPersonFooterComponent"], _components_admin_faq_management_add_edit_faq_add_edit_faq_component__WEBPACK_IMPORTED_MODULE_92__["AddEditFaqComponent"], _components_admin_faq_management_list_faq_list_faq_component__WEBPACK_IMPORTED_MODULE_93__["ListFaqComponent"], _components_common_faq_view_faq_view_component__WEBPACK_IMPORTED_MODULE_94__["FaqViewComponent"], _components_common_faq_view_faq_view_component__WEBPACK_IMPORTED_MODULE_94__["FaqViewComponent"], _components_tech_manage_calender_manage_schedule_cal_create_slot_cal_create_slot_component__WEBPACK_IMPORTED_MODULE_95__["CalCreateSlotComponent"], _components_tech_manage_calender_manage_schedule_cal_sync_with_google_cal_sync_with_google_component__WEBPACK_IMPORTED_MODULE_96__["CalSyncWithGoogleComponent"], _components_tech_manage_calender_manage_schedule_cal_home_cal_home_component__WEBPACK_IMPORTED_MODULE_97__["CalHomeComponent"], _components_tech_manage_calender_manage_schedule_cal_view_slot_cal_view_slot_component__WEBPACK_IMPORTED_MODULE_98__["CalViewSlotComponent"], _components_tech_manage_calender_manage_schedule_cal_event_listing_cal_event_listing_component__WEBPACK_IMPORTED_MODULE_99__["CalEventListingComponent"], _components_doctor_office_manage_appointments_appoinments_listing_appoinments_listing_component__WEBPACK_IMPORTED_MODULE_100__["AppoinmentsListingComponent"], _components_doctor_office_manage_appointments_book_appoinment_now_book_appoinment_now_component__WEBPACK_IMPORTED_MODULE_101__["BookAppoinmentNowComponent"], _components_tech_manage_calender_manage_schedule_booked_events_booked_events_component__WEBPACK_IMPORTED_MODULE_102__["BookedEventsComponent"], _components_tech_patient_management_report_conformation_report_conformation_component__WEBPACK_IMPORTED_MODULE_103__["ReportConformationComponent"], _components_admin_manage_insurance_add_edit_insurance_add_edit_insurance_component__WEBPACK_IMPORTED_MODULE_104__["AddEditInsuranceComponent"], _components_admin_manage_insurance_listing_insurance_listing_insurance_component__WEBPACK_IMPORTED_MODULE_105__["ListingInsuranceComponent"], _components_admin_manage_insurancetype_add_edit_insurancetype_add_edit_insurancetype_component__WEBPACK_IMPORTED_MODULE_106__["AddEditInsurancetypeComponent"], _components_admin_manage_insurancetype_listing_insurancetype_listing_insurancetype_component__WEBPACK_IMPORTED_MODULE_107__["ListingInsurancetypeComponent"], _components_admin_manage_doctorgroup_add_edit_doctorgroup_add_edit_doctorgroup_component__WEBPACK_IMPORTED_MODULE_108__["AddEditDoctorgroupComponent"], _components_admin_manage_doctorgroup_listing_doctorgroup_listing_doctorgroup_component__WEBPACK_IMPORTED_MODULE_109__["ListingDoctorgroupComponent"], _components_admin_manage_adminbiller_add_edit_adminbiller_add_edit_adminbiller_component__WEBPACK_IMPORTED_MODULE_110__["AddEditAdminbillerComponent"], _components_admin_manage_adminbiller_listing_adminbiller_listing_adminbiller_component__WEBPACK_IMPORTED_MODULE_111__["ListingAdminbillerComponent"], _components_admin_manage_patientinformation_add_edit_patientinformation_add_edit_patientinformation_component__WEBPACK_IMPORTED_MODULE_112__["AddEditPatientinformationComponent"], _components_admin_manage_patientinformation_listing_patientinformation_listing_patientinformation_component__WEBPACK_IMPORTED_MODULE_113__["ListingPatientinformationComponent"], _components_admin_manage_distributors_add_edit_distributors_add_edit_distributors_component__WEBPACK_IMPORTED_MODULE_114__["AddEditDistributorsComponent"], _components_admin_manage_distributors_listing_distributors_listing_distributors_component__WEBPACK_IMPORTED_MODULE_115__["ListingDistributorsComponent"], _components_doctor_group_doctor_group_dashboard_doctor_group_dashboard_component__WEBPACK_IMPORTED_MODULE_116__["DoctorGroupDashboardComponent"], _components_doctor_group_doctor_group_header_doctor_group_header_component__WEBPACK_IMPORTED_MODULE_117__["DoctorGroupHeaderComponent"], _components_doctor_group_doctor_group_footer_doctor_group_footer_component__WEBPACK_IMPORTED_MODULE_118__["DoctorGroupFooterComponent"], _components_distributors_distributors_dashboard_distributors_dashboard_component__WEBPACK_IMPORTED_MODULE_119__["DistributorsDashboardComponent"], _components_distributors_distributors_header_distributors_header_component__WEBPACK_IMPORTED_MODULE_120__["DistributorsHeaderComponent"], _components_distributors_distributors_footer_distributors_footer_component__WEBPACK_IMPORTED_MODULE_121__["DistributorsFooterComponent"], _components_adminbiller_adminbiller_dashboard_adminbiller_dashboard_component__WEBPACK_IMPORTED_MODULE_122__["AdminbillerDashboardComponent"], _components_adminbiller_adminbiller_header_adminbiller_header_component__WEBPACK_IMPORTED_MODULE_123__["AdminbillerHeaderComponent"], _components_adminbiller_adminbiller_footer_adminbiller_footer_component__WEBPACK_IMPORTED_MODULE_124__["AdminbillerFooterComponent"], _components_doctor_office_add_patient_add_patient_manually_add_patient_manually_component__WEBPACK_IMPORTED_MODULE_125__["AddPatientManuallyComponent"], _components_booked_events_listing_upcoming_appoinments_upcoming_appoinments_component__WEBPACK_IMPORTED_MODULE_126__["UpcomingAppoinmentsComponent"], _components_booked_events_listing_past_appoinments_past_appoinments_component__WEBPACK_IMPORTED_MODULE_127__["PastAppoinmentsComponent"], _components_doctor_office_manage_appointments_book_appoinment_now_book_appoinment_now_component__WEBPACK_IMPORTED_MODULE_101__["ChooseDoctorDialog"], _components_tech_patient_management_patient_select_modal_patient_select_modal_component__WEBPACK_IMPORTED_MODULE_128__["PatientSelectModalComponent"], _components_tech_patient_management_report_upload_success_modal_report_upload_success_modal_component__WEBPACK_IMPORTED_MODULE_129__["ReportUploadSuccessModalComponent"], _components_encounter_form_encounter_form_component__WEBPACK_IMPORTED_MODULE_130__["EncounterFormComponent"], _components_booked_events_listing_reschedule_appointment_reschedule_appointment_component__WEBPACK_IMPORTED_MODULE_131__["RescheduleAppointmentComponent"], _components_encounter_form_encounter_form_component__WEBPACK_IMPORTED_MODULE_130__["EncounterFormComponent"], _components_doctor_doctor_dashboard_patient_report_view_patient_details_patient_details_component__WEBPACK_IMPORTED_MODULE_132__["PatientDetailsComponent"], _components_common_encounter_form_rules_encounter_form_rules_component__WEBPACK_IMPORTED_MODULE_133__["EncounterFormRulesComponent"], _components_admin_admin_dashboard_approved_patient_reports_approved_patient_reports_component__WEBPACK_IMPORTED_MODULE_134__["ApprovedPatientReportsComponent"], _components_common_doctor_signup_share_doctor_signup_share_component__WEBPACK_IMPORTED_MODULE_135__["DoctorSignupShareComponent"], _components_adminbiller_approved_patient_reports_approved_patient_reports_billeradmin_approved_patient_reports_billeradmin_component__WEBPACK_IMPORTED_MODULE_136__["ApprovedPatientReportsBilleradminComponent"], _components_admin_admin_dashboard_hold_report_job_ticket_hold_report_job_ticket_component__WEBPACK_IMPORTED_MODULE_137__["HoldReportJobTicketComponent"], _components_admin_cpt_validate_reports_cpt_validate_reports_cpt_validate_reports_component__WEBPACK_IMPORTED_MODULE_138__["CptValidateReportsComponent"], _components_admin_reports_details_reports_details_reports_details_component__WEBPACK_IMPORTED_MODULE_139__["ReportsDetailsComponent"], _components_admin_admin_dashboard_job_ticket_patient_reports_job_ticket_patient_reports_component__WEBPACK_IMPORTED_MODULE_140__["JobTicketPatientReportsComponent"], _components_admin_admin_dashboard_hold_report_job_ticket_view_job_ticket_image_view_job_ticket_image_component__WEBPACK_IMPORTED_MODULE_141__["ViewJobTicketImageComponent"], time_ago_pipe__WEBPACK_IMPORTED_MODULE_13__["TimeAgoPipe"], _components_sales_person_cpt_validate_report_salesperson_cpt_validate_report_sales_person_cpt_validate_report_sales_person_component__WEBPACK_IMPORTED_MODULE_142__["CptValidateReportSalesPersonComponent"], _components_admin_report_process_time_report_process_time_report_process_time_component__WEBPACK_IMPORTED_MODULE_143__["ReportProcessTimeComponent"], _components_biller_direct_download_reports_direct_download_reports_component__WEBPACK_IMPORTED_MODULE_144__["DirectDownloadReportsComponent"], _components_admin_admin_dashboard_view_all_button_list_view_all_button_list_component__WEBPACK_IMPORTED_MODULE_145__["ViewAllButtonListComponent"], _components_admin_login_as_doctor_login_dotor_by_admin_login_dotor_by_admin_component__WEBPACK_IMPORTED_MODULE_146__["LoginDotorByAdminComponent"], _components_admin_report_time_setting_report_time_setting_report_time_setting_component__WEBPACK_IMPORTED_MODULE_147__["ReportTimeSettingComponent"], _components_admin_report_time_setting_add_setting_time_add_setting_time_component__WEBPACK_IMPORTED_MODULE_148__["AddSettingTimeComponent"], _components_booked_events_listing_upcoming_appoinments_upcoming_appoinments_component__WEBPACK_IMPORTED_MODULE_126__["DialogCancelAlert"], _components_common_approval_settings_update_approval_settings_update_component__WEBPACK_IMPORTED_MODULE_149__["ApprovalSettingsUpdateComponent"], _components_sales_person_add_new_doctor_add_new_doctor_component__WEBPACK_IMPORTED_MODULE_152__["AddNewDoctorComponent"]],
      imports: [saturn_datepicker__WEBPACK_IMPORTED_MODULE_18__["SatDatepickerModule"], // BrowserModule.withServerTransition({ appId: 'serverApp' }),
      _trademe_ng_defer_load__WEBPACK_IMPORTED_MODULE_1__["DeferLoadModule"], _ngx_meta_core__WEBPACK_IMPORTED_MODULE_14__["MetaModule"].forRoot(), _modules_app_routing_module__WEBPACK_IMPORTED_MODULE_4__["AppRoutingModule"], _angular_common__WEBPACK_IMPORTED_MODULE_6__["CommonModule"], _nguniversal_common__WEBPACK_IMPORTED_MODULE_7__["TransferHttpCacheModule"], _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClientModule"], _ng_toolkit_universal__WEBPACK_IMPORTED_MODULE_8__["NgtUniversalModule"], _app_modules_materialModule__WEBPACK_IMPORTED_MODULE_28__["DemoMaterialModule"], login_lib_influxiq__WEBPACK_IMPORTED_MODULE_10__["LoginModule"], listing_angular7__WEBPACK_IMPORTED_MODULE_11__["ListingModule"], calendar_management_lib_influxiq__WEBPACK_IMPORTED_MODULE_17__["CalendarManagementModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_22__["FormsModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_22__["ReactiveFormsModule"], file_upload_lib_influxiq__WEBPACK_IMPORTED_MODULE_12__["FileUploadModule"], _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClientModule"], ngx_device_detector__WEBPACK_IMPORTED_MODULE_15__["DeviceDetectorModule"].forRoot(),
      /* Loader */
      ngx_ui_loader__WEBPACK_IMPORTED_MODULE_82__["NgxUiLoaderModule"], ngx_ui_loader__WEBPACK_IMPORTED_MODULE_82__["NgxUiLoaderRouterModule"], ngx_ui_loader__WEBPACK_IMPORTED_MODULE_82__["NgxUiLoaderModule"].forRoot(ngxUiLoaderConfig), ngx_ui_loader__WEBPACK_IMPORTED_MODULE_82__["NgxUiLoaderRouterModule"], ngx_ui_loader__WEBPACK_IMPORTED_MODULE_82__["NgxUiLoaderHttpModule"], _common_template_common_template_module__WEBPACK_IMPORTED_MODULE_153__["CommonTemplateModule"], //ckeditor
      ckeditor4_angular__WEBPACK_IMPORTED_MODULE_16__["CKEditorModule"], // TraningModule,
      _components_lazyload_training_training_module__WEBPACK_IMPORTED_MODULE_150__["TrainingModule"], traning_lib_influxiq__WEBPACK_IMPORTED_MODULE_151__["TraningModule"] // TraningModule
      // BrowserAnimationsModule
      ],
      exports: [_angular_material_paginator__WEBPACK_IMPORTED_MODULE_68__["MatPaginatorModule"]],
      providers: [_services_http_loader_service__WEBPACK_IMPORTED_MODULE_25__["HttpLoaderService"], {
        provide: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HTTP_INTERCEPTORS"],
        useClass: _class_common_loader_interceptor__WEBPACK_IMPORTED_MODULE_26__["LoaderInterceptor"],
        multi: true
      }, ngx_cookie_service__WEBPACK_IMPORTED_MODULE_20__["CookieService"], _services_authguard_service__WEBPACK_IMPORTED_MODULE_21__["AuthguardService"], _services_http_service_service__WEBPACK_IMPORTED_MODULE_23__["HttpServiceService"], _services_training_api_service__WEBPACK_IMPORTED_MODULE_154__["TrainingApiService"], _angular_common__WEBPACK_IMPORTED_MODULE_6__["DatePipe"], _class_common_common_function__WEBPACK_IMPORTED_MODULE_27__["CommonFunction"], {
        provide: saturn_datepicker__WEBPACK_IMPORTED_MODULE_18__["DateAdapter"],
        useClass: _angular_material_moment_adapter__WEBPACK_IMPORTED_MODULE_19__["MomentDateAdapter"],
        deps: [saturn_datepicker__WEBPACK_IMPORTED_MODULE_18__["MAT_DATE_LOCALE"]]
      }, {
        provide: saturn_datepicker__WEBPACK_IMPORTED_MODULE_18__["MAT_DATE_FORMATS"],
        useValue: _angular_material_moment_adapter__WEBPACK_IMPORTED_MODULE_19__["MAT_MOMENT_DATE_FORMATS"]
      }],
      bootstrap: [_app_component__WEBPACK_IMPORTED_MODULE_5__["AppComponent"]],
      entryComponents: [_components_admin_doctor_management_addedit_doctor_addedit_doctor_component__WEBPACK_IMPORTED_MODULE_37__["ChangePasswordDoctorModal"], _components_admin_tech_management_add_edit_tech_add_edit_tech_component__WEBPACK_IMPORTED_MODULE_42__["Dialogtest"], _components_admin_sales_person_management_add_edit_sales_person_add_edit_sales_person_component__WEBPACK_IMPORTED_MODULE_47__["SRDialogtest"], _components_admin_biller_management_add_edit_biller_add_edit_biller_component__WEBPACK_IMPORTED_MODULE_39__["ChangePasswordModal"], _components_admin_admin_management_add_edit_add_edit_component__WEBPACK_IMPORTED_MODULE_35__["ChangePasswordAdminModal"], _components_admin_doctor_office_management_add_edit_doctor_ofc_add_edit_doctor_ofc_component__WEBPACK_IMPORTED_MODULE_67__["ChangePasswordDoctorOfficeModal"], _components_admin_diagnostic_admin_management_add_edit_diagnostic_admin_add_edit_diagnostic_admin_component__WEBPACK_IMPORTED_MODULE_83__["DiagnosticAdminPasswordChange"], _components_admin_diagnostic_admin_management_add_edit_diagnostic_admin_add_edit_diagnostic_admin_component__WEBPACK_IMPORTED_MODULE_83__["DiagnosticAdminPasswordChange"], _components_common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_31__["DialogBoxComponent"], _components_common_password_dialog_box_password_dialog_box_component__WEBPACK_IMPORTED_MODULE_33__["PasswordDialogBoxComponent"], _components_common_upload_dialog_box_upload_dialog_box_component__WEBPACK_IMPORTED_MODULE_32__["UploadDialogBoxComponent"], _components_test_test_component__WEBPACK_IMPORTED_MODULE_56__["TestComponent"], _components_tech_tech_dashboard_tech_dashboard_component__WEBPACK_IMPORTED_MODULE_48__["DoctorViewDialogComponent"], _components_admin_admin_dashboard_download_details_download_details_component__WEBPACK_IMPORTED_MODULE_81__["DownloadDetailsComponent"], _components_doctor_office_manage_appointments_book_appoinment_now_book_appoinment_now_component__WEBPACK_IMPORTED_MODULE_101__["ChooseDoctorDialog"], // Bulk Upload Modal
      _components_tech_patient_management_patient_select_modal_patient_select_modal_component__WEBPACK_IMPORTED_MODULE_128__["PatientSelectModalComponent"], _components_tech_patient_management_report_upload_success_modal_report_upload_success_modal_component__WEBPACK_IMPORTED_MODULE_129__["ReportUploadSuccessModalComponent"], // View job tickets image
      _components_admin_admin_dashboard_hold_report_job_ticket_view_job_ticket_image_view_job_ticket_image_component__WEBPACK_IMPORTED_MODULE_141__["ViewJobTicketImageComponent"], _components_booked_events_listing_upcoming_appoinments_upcoming_appoinments_component__WEBPACK_IMPORTED_MODULE_126__["DialogCancelAlert"], // Update setting
      _components_common_approval_settings_update_approval_settings_update_component__WEBPACK_IMPORTED_MODULE_149__["ApprovalSettingsUpdateComponent"]],
      schemas: [_angular_core__WEBPACK_IMPORTED_MODULE_2__["CUSTOM_ELEMENTS_SCHEMA"], _angular_core__WEBPACK_IMPORTED_MODULE_2__["NO_ERRORS_SCHEMA"]]
    })], AppModule);
    /***/
  },

  /***/
  "./src/app/class/common/common-function.ts":
  /*!*************************************************!*\
    !*** ./src/app/class/common/common-function.ts ***!
    \*************************************************/

  /*! exports provided: CommonFunction */

  /***/
  function srcAppClassCommonCommonFunctionTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CommonFunction", function () {
      return CommonFunction;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _ngx_meta_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @ngx-meta/core */
    "./node_modules/@ngx-meta/core/fesm2015/ngx-meta-core.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../../services/http-service.service */
    "./src/app/services/http-service.service.ts");

    var CommonFunction = /*#__PURE__*/function () {
      function CommonFunction(httpServiceService, meta, cookie, router, activeRoute) {
        _classCallCheck(this, CommonFunction);

        this.httpServiceService = httpServiceService;
        this.meta = meta;
        this.cookie = cookie;
        this.router = router;
        this.activeRoute = activeRoute;
      }

      _createClass(CommonFunction, [{
        key: "setTitleMetaTags",
        value: function setTitleMetaTags() {
          var url = this.router.url;
          var urlArr = url.split("/");
          var title = '';

          for (var loop = 1; loop < urlArr.length; loop++) {
            urlArr[loop] = urlArr[loop].replace("-", " ");
            urlArr[loop] = this.titleCase(urlArr[loop]);

            switch (urlArr[loop]) {
              case 'Admin':
                title = 'Admin';
                break;

              case 'Patient Record':
                title = title + ' | View Report ';
                break;

              case 'Tech':
                title = 'Tech ';
                break;

              case 'Doctor':
                title = 'Doctor ';
                break;

              case 'Doctor Office':
                title = 'Doctor Office ';
                break;

              case 'List':
                break;

              case 'Add':
                title = title + '- Create New ';
                break;

              case 'Bulk Upload':
                title = title + '- Bulk Report Upload ';
                break;

              case 'Change Password':
                title = title + '- Change Password ';
                break;

              case 'Edit':
                title = title + '- Update Record ';
                loop = urlArr.length;
                break;

              default:
                //title += urlArr[loop] + ' ';
                break;
            }
          }

          var getToken = this.cookie.check('jwtToken');

          if (getToken) {
            var allData = this.cookie.getAll();
            var userData = JSON.parse(allData.user_details);

            switch (urlArr[1]) {
              case 'Doctor Office':
                title = title + '| ' + userData.centerName + ' - AWS Backend';
                break;

              default:
                title = title + '| ' + userData.firstname + ' ' + userData.lastname + ' - AWS Backend';
                break;
            }
          } else {
            title = 'Welcome to AWS Backend | ' + title;
          }
          /* Set Meta Data */


          this.meta.setTitle('Welcome to AWS Backend');
          this.meta.setTag('og:description', 'Welcome to AWS Backend.');
          this.meta.setTag('og:title', 'Welcome to AWS Backend.');
          this.meta.setTag('og:type', 'website');
          this.meta.setTag('og:image', 'favicon.ico');
        }
      }, {
        key: "titleCase",
        value: function titleCase(str) {
          var splitStr = str.toLowerCase().split(' ');

          for (var i = 0; i < splitStr.length; i++) {
            // You do not need to check if i is larger than splitStr length, as your for does that for you
            // Assign it back to the array
            splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);
          } // Directly return the joined string


          return splitStr.join(' ');
        }
      }, {
        key: "randomNumber",
        value: function randomNumber(length) {
          var result = '';
          var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
          var charactersLength = characters.length;

          for (var i = 0; i < length; i++) {
            result += characters.charAt(Math.floor(Math.random() * charactersLength));
          }

          return result;
        }
      }, {
        key: "getYoutubeEmbedUrl",
        value: function getYoutubeEmbedUrl(url) {
          if (typeof url == 'string') {
            var regExp = /^.*(youtu.be\/|v\/|u\/\w\/|embed\/|watch\?v=|\&v=)([^#\&\?]*).*/;
            var match = url.match(regExp);

            if (match && match[2].length == 11) {
              return {
                status: true,
                url: 'https://www.youtube.com/embed/' + match[2]
              };
            } else {
              return {
                status: false,
                url: ''
              };
            }
          } else {
            return {
              status: false,
              url: ''
            };
          }
        }
      }]);

      return CommonFunction;
    }();

    CommonFunction.ctorParameters = function () {
      return [{
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_5__["HttpServiceService"]
      }, {
        type: _ngx_meta_core__WEBPACK_IMPORTED_MODULE_4__["MetaService"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"]
      }];
    };

    CommonFunction = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()], CommonFunction);
    /***/
  },

  /***/
  "./src/app/class/common/loader.interceptor.ts":
  /*!****************************************************!*\
    !*** ./src/app/class/common/loader.interceptor.ts ***!
    \****************************************************/

  /*! exports provided: LoaderInterceptor */

  /***/
  function srcAppClassCommonLoaderInterceptorTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "LoaderInterceptor", function () {
      return LoaderInterceptor;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/common/http */
    "./node_modules/@angular/common/fesm2015/http.js");
    /* harmony import */


    var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! rxjs */
    "./node_modules/rxjs/_esm2015/index.js");
    /* harmony import */


    var _services_http_loader_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../services/http-loader.service */
    "./src/app/services/http-loader.service.ts");

    var LoaderInterceptor = /*#__PURE__*/function () {
      function LoaderInterceptor(loaderService) {
        _classCallCheck(this, LoaderInterceptor);

        this.loaderService = loaderService;
        this.requests = [];
      }

      _createClass(LoaderInterceptor, [{
        key: "removeRequest",
        value: function removeRequest(req) {
          var i = this.requests.indexOf(req);

          if (i >= 0) {
            this.requests.splice(i, 1);
          }

          this.loaderService.isLoading.next(this.requests.length > 0);
        }
      }, {
        key: "intercept",
        value: function intercept(req, next) {
          var _this2 = this;

          this.requests.push(req);
          this.loaderService.isLoading.next(true);
          return rxjs__WEBPACK_IMPORTED_MODULE_3__["Observable"].create(function (observer) {
            var subscription = next.handle(req).subscribe(function (event) {
              if (event instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpResponse"]) {
                _this2.removeRequest(req);

                observer.next(event);
              }
            }, function (err) {
              console.log('Error occord.');

              _this2.removeRequest(req);

              observer.error(err);
            }, function () {
              _this2.removeRequest(req);

              observer.complete();
            }); // remove request from queue when cancelled

            return function () {
              _this2.removeRequest(req);

              subscription.unsubscribe();
            };
          });
        }
      }]);

      return LoaderInterceptor;
    }();

    LoaderInterceptor.ctorParameters = function () {
      return [{
        type: _services_http_loader_service__WEBPACK_IMPORTED_MODULE_4__["HttpLoaderService"]
      }];
    };

    LoaderInterceptor = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()], LoaderInterceptor);
    /***/
  },

  /***/
  "./src/app/common-template/common-template.module.ts":
  /*!***********************************************************!*\
    !*** ./src/app/common-template/common-template.module.ts ***!
    \***********************************************************/

  /*! exports provided: CommonTemplateModule */

  /***/
  function srcAppCommonTemplateCommonTemplateModuleTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CommonTemplateModule", function () {
      return CommonTemplateModule;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _components_admin_admin_header_admin_header_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../components/admin/admin-header/admin-header.component */
    "./src/app/components/admin/admin-header/admin-header.component.ts");
    /* harmony import */


    var _components_admin_admin_footer_admin_footer_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../components/admin/admin-footer/admin-footer.component */
    "./src/app/components/admin/admin-footer/admin-footer.component.ts");
    /* harmony import */


    var _modules_materialModule__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../modules/materialModule */
    "./src/app/modules/materialModule.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js"); // import { CommonModule } from '@angular/common';
    // import { BrowserModule } from '@angular/platform-browser';
    // import { TraningModule } from 'traning-lib-influxiq';


    var CommonTemplateModule = function CommonTemplateModule() {
      _classCallCheck(this, CommonTemplateModule);
    };

    CommonTemplateModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
      declarations: [_components_admin_admin_header_admin_header_component__WEBPACK_IMPORTED_MODULE_2__["AdminHeaderComponent"], _components_admin_admin_footer_admin_footer_component__WEBPACK_IMPORTED_MODULE_3__["AdminFooterComponent"]],
      imports: [// CommonModule,
      _modules_materialModule__WEBPACK_IMPORTED_MODULE_4__["DemoMaterialModule"], // BrowserModule.withServerTransition({ appId: 'serverApp' }),
      // TraningModule,
      _angular_router__WEBPACK_IMPORTED_MODULE_5__["RouterModule"]],
      exports: [_components_admin_admin_header_admin_header_component__WEBPACK_IMPORTED_MODULE_2__["AdminHeaderComponent"], _components_admin_admin_footer_admin_footer_component__WEBPACK_IMPORTED_MODULE_3__["AdminFooterComponent"], _modules_materialModule__WEBPACK_IMPORTED_MODULE_4__["DemoMaterialModule"]],
      schemas: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["CUSTOM_ELEMENTS_SCHEMA"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["NO_ERRORS_SCHEMA"]]
    })], CommonTemplateModule);
    /***/
  },

  /***/
  "./src/app/components/admin/admin-dashboard/add-edit-patient/add-edit-patient.component.css":
  /*!**************************************************************************************************!*\
    !*** ./src/app/components/admin/admin-dashboard/add-edit-patient/add-edit-patient.component.css ***!
    \**************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminAdminDashboardAddEditPatientAddEditPatientComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n\n.add_form{ width: 100%; margin: 20px auto; background: #f7f7f7; padding: 16px 10px; padding-bottom: 25px; border: 1px solid #91e7ff; box-sizing: border-box;}\n.add_form .form_wrapper .mat-form-field{ width: 49%; margin: 0.5%; }\n.add_form .form_wrapper textarea{ resize: none;}\n.add_form h2{ font-family: \"RobotoBlack\"; text-transform: uppercase; font-size: 24px; padding: 0 6px; color: #1dbce9; }\n.add_form .submit_form { display: block; width: 100%; text-align: center; margin-top: 30px; }\n.add_form .submit_form button{ border-radius: 5px; text-transform: uppercase; font-family: \"AvenirMedium\"; font-size: 26px; padding: 6px 10px; width: 200px; background: var(--button-color2); color: #fff;}\n.add_form .submit_form button:first-child{ margin-right: 16px; background: var(--button-color1);}\n.add_form .example-form .field_setmodel{ border: 1px solid #6fa6bb;}\n.add_form .example-form .field_setmodel .legend_model{ font-family: \"AvenirLight\"; font-size: 20px; text-transform: uppercase; color: #03a9f5;}\n.add_form .example-form .patients_info_wrapper{ display: inline-flex; flex-wrap: wrap;}\n/* .add_form .example-form .patients_info_wrapper  .mat-card-content { flex: 1 1 32%; margin: 0;} */\n.add_form .example-form .patients_info_wrapper .mat-card-content { width: 32%; display: flex; flex-direction: column; margin-bottom: 0; margin-left: 9px;}\n.add_form .example-form .patients_info_wrapper .mat-card-content .patientGender{ background: #fff; padding: 10px 0px; border: 1px solid #d0d0d0; border-bottom: 1px solid #5f5f5f; }\n.add_form .example-form .patients_info_wrapper label{ width: auto;  margin-bottom: 5px;}\n.add_form .test_date_wrapper .mat-card-actions,\n.add_form .test_date_wrapper .mat-card-content,\n.add_form .test_date_wrapper .mat-card-subtitle {\n  display: inline-flex; margin: 0.5%; vertical-align: middle; justify-content: flex-start; align-items: center; width: 32%; }\n.add_form .mat-card-content label , .add_form .patient_diagnotes label{ font-family: \"AvenirMedium\"; color: #000; font-size: 14px; line-height: 16px; width: 125px;}\n.add_form .test_date_wrapper .mat-card-content .subValue { margin-left: 5px; width: 24%; }\n.add_form .test_date_wrapper{ display: flex; justify-content: flex-start; flex-wrap: wrap; }\n.add_form .mat-card-content .mat-checkbox { margin: 0 5px; }\n.add_form .mat-card-content ,\n.add_form .patient_diagnotes .mat-form-field { position: relative; text-align: left; }\n.add_form .patient_diagnotes{ width: auto; flex-direction: column; display: flex; margin: 0; border: 1px solid #43cef5; background: #fff; box-sizing: border-box; padding: 10px;}\n.add_form .patient_diagnotes .example-full-width textarea{ resize: none; }\n.add_header button{ margin-left: auto;\n  background: linear-gradient(180deg, #fac855, #e47e2a)!important;\n  text-transform: uppercase; font-family: \"RobotoBlack\"; padding-top: 4px; }\n.add_form .patient_diagnotes label{ width: 100%!important; }\n.auto_width{width: auto!important;}\n@media screen and (max-width: 1600px){\n  .add_form{ width: 1320px;}\n  .add_form .mat-card-content label { width: 95px; }\n\n}\n@media screen and (max-width: 1500px){\n  .add_form { width: 100%; }\n}\n@media screen and (max-width: 1460px){\n  .techdashboard_header .mat-toolbar-row .quotation p { font-size: 24px; line-height: 26px;}\n}\n@media screen and (max-width: 1440px){\n  .add_form  { width: 1190px;}\n  .add_form .mat-card-content label { width: 150px; margin: 0; margin-right: 10px; }\n}\n@media screen and (max-width: 1420px){\n  .add_form .test_date_wrapper .mat-card-content{ width: 49%; }\n}\n@media screen and (max-width: 1400px){\n  .add_form { width: 100%; }\n}\n@media screen and (max-width: 1000px){\n  .add_form .submit_form button { width: 48%; }\n}\n@media screen and (max-width: 991px){\n.techdashboard_header .mat-toolbar-row { flex-direction: column; padding: 20px;}\n.techdashboard_header .mat-toolbar-row .quotation p { margin-top: 16px; }\n.add_form .test_date_wrapper .mat-card-content{ width: 100%; }\n.auto_width { width: auto!important; display: inline-block!important; }\n}\n@media screen and (max-width: 800px){\n  .add_form .example-form .patients_info_wrapper .mat-card-content { width: 31%; }\n\n}\n@media screen and (max-width: 768px){\n  .add_form .form_wrapper .mat-form-field { width: 100%; margin: 0; }\n}\n@media screen and (max-width: 700px){\n  .add_form .test_date_wrapper .mat-card-content{ display: flex; flex-direction: column; justify-content: flex-start; }\n  .add_form .mat-card-content label { width: 100%; margin: 0; margin-bottom: 5px; }\n  .add_form .mat-card-content label br { display: none; }\n  .add_form .mat-card-content .mat-form-field{ width: 100%; }\n  .add_form .test_date_wrapper .mat-card-content .subValue { margin-left: 0px; width: 100%; }\n  .add_form .example-form .patients_info_wrapper .mat-card-content { flex: 1 1 100%; margin: 0; margin-top: 10px;}\n}\n@media screen and (max-width: 576px){\n.add_form .submit_form button { font-size: 22px; padding: 2px; }\n.add_form .submit_form button { width: 100%; margin: 0; margin-top: 20px; }\n.add_form .submit_form { display: flex; flex-direction: column-reverse; text-align: center; margin-top: 0px; }\n.add_form .submit_form button:nth-child(1) { margin-right: 0; margin-top: 20px; }\n}\n@media screen and (max-width: 360px){\n.techdashboard_header .mat-toolbar-row .quotation p { font-size: 16px; line-height: 22px; }\n.add_form h2 { font-size: 22px; line-height: 24px; text-align: center; }\n}\n/*# sourceMappingURL=data:application/json;base64, */";
    /***/
  },

  /***/
  "./src/app/components/admin/admin-dashboard/add-edit-patient/add-edit-patient.component.ts":
  /*!*************************************************************************************************!*\
    !*** ./src/app/components/admin/admin-dashboard/add-edit-patient/add-edit-patient.component.ts ***!
    \*************************************************************************************************/

  /*! exports provided: AddEditPatientComponent */

  /***/
  function srcAppComponentsAdminAdminDashboardAddEditPatientAddEditPatientComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AddEditPatientComponent", function () {
      return AddEditPatientComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var _common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../../../common/dialog-box/dialog-box.component */
    "./src/app/components/common/dialog-box/dialog-box.component.ts");
    /* harmony import */


    var _class_common_common_function__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ../../../../class/common/common-function */
    "./src/app/class/common/common-function.ts");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! ../../../../../environments/environment */
    "./src/environments/environment.ts");

    var AddEditPatientComponent = /*#__PURE__*/function () {
      function AddEditPatientComponent(fb, activeRoute, router, httpService, datePipe, cookie, snakBar, dialog, commonFunction) {
        _classCallCheck(this, AddEditPatientComponent);

        this.fb = fb;
        this.activeRoute = activeRoute;
        this.router = router;
        this.httpService = httpService;
        this.datePipe = datePipe;
        this.cookie = cookie;
        this.snakBar = snakBar;
        this.dialog = dialog;
        this.commonFunction = commonFunction;
        this.htmlText = {
          nav: 'Add Patient',
          header: "Add Report Manually",
          buttonText: "Submit"
        };
        this.allCookies = this.cookie.getAll();
        this.allCookies.user_details = JSON.parse(this.allCookies.user_details);
        this.getAllDoctorData();
        this.patientAddEditForm = this.fb.group({
          patient_name: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(30)]],
          gender: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          birth_date: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          doctor_id: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          doctor_name: ['', []],
          doctor_email: ['', []],
          doctor_details: ['', []],
          tech_id: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          tech_name: ['', []],
          tech_email: ['', []],
          test_date: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          test_completed_date: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          PTGTP: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          PTGTP_value: ['', []],
          PTGVLFI: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          PTGVLFI_value: ['', []],
          IR: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          IR_value: ['', []],
          ESRNO: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          ESRNO_value: ['', []],
          ESRL: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          ESRL_value: ['', []],
          peakC: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          peakC_value: ['', []],
          PTGtype: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          PTGtype_value: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].pattern(_environments_environment__WEBPACK_IMPORTED_MODULE_10__["environment"].floatPattern)]],
          PTGCVD: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          PTGCVD_value: ['', []],
          stressI: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          stressI_value: ['', []],
          RI: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          RI_value: ['', []],
          AIPTG: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          AIPTG_value: ['', []],
          CIsCI: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          CIsCI_value: ['', []],
          pNN50: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          pNN50_value: ['', []],
          RMSSD: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          RMSSD_value: ['', []],
          SDba: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          SDba_value: ['', []],
          SDda: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          SDda_value: ['', []],
          DPRS: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          DPRS_value: ['', []],
          ValsR: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          ValsR_value: ['', []],
          BMI: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          blood_pressure: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          leave_notes: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          systolic_value: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].pattern(_environments_environment__WEBPACK_IMPORTED_MODULE_10__["environment"].floatPattern)]],
          diastolic_value: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].pattern(_environments_environment__WEBPACK_IMPORTED_MODULE_10__["environment"].floatPattern)]],
          status: ['Pending Signature', []],
          report_type: ['manual', []],
          added_by: [this.allCookies.user_details._id, []]
        });
      }

      _createClass(AddEditPatientComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }, {
        key: "getAllDoctorData",
        value: function getAllDoctorData() {
          var _this3 = this;

          var data = {
            source: "data_pece",
            condition: {
              user_type: "doctor",
              status: 1
            },
            token: this.allCookies.jwtToken
          };

          if (this.allCookies.user_details.user_type == 'diagnostic_admin') {
            data.condition.diagnostic_admin_id_object = this.allCookies.user_details._id;
          }

          this.httpService.httpViaPost('datalist', data).subscribe(function (response) {
            _this3.htmlText.allDoctor = response.res;
          });
        }
      }, {
        key: "getTechList",
        value: function getTechList(index) {
          var _this4 = this;

          var details = '<p class="doctor_name">';
          details += this.htmlText.allDoctor[index].firstname + ' ' + this.htmlText.allDoctor[index].lastname;
          details += '<p class="doctor_name"> <span> Email: </span>';
          details += this.htmlText.allDoctor[index].email;
          details += '</p><p class="doctor_name"> <span>NPI: </span>';
          details += this.htmlText.allDoctor[index].npi;
          details += '</p>';
          this.patientAddEditForm.patchValue({
            doctor_id: this.htmlText.allDoctor[index]._id,
            doctor_name: this.htmlText.allDoctor[index].firstname + ' ' + this.htmlText.allDoctor[index].lastname,
            doctor_email: this.htmlText.allDoctor[index].email,
            doctor_details: details
          });
          var data = {
            "source": "tech_by_doctor_id",
            "condition": {
              "_id_object": this.htmlText.allDoctor[index]._id,
              "status": 1
            },
            "token": this.allCookies.jwtToken
          };

          if (this.allCookies.user_details.user_type == 'diagnostic_admin') {//data.condition.diagnostic_admin_id_object = this.allCookies.user_details._id;
          }

          this.httpService.httpViaPost('datalist', data).subscribe(function (response) {
            _this4.htmlText.allTech = response.res;
          });
        }
      }, {
        key: "selectTech",
        value: function selectTech(techID) {
          for (var loop = 0; loop < this.htmlText.allTech.length; loop++) {
            if (this.htmlText.allTech[loop].tech_id == techID) {
              this.htmlText.tech_details = this.htmlText.allTech[loop];
              this.patientAddEditForm.patchValue({
                tech_name: this.htmlText.allTech[loop].firstname + ' ' + this.htmlText.allTech[loop].lastname,
                tech_email: this.htmlText.allTech[loop].email
              });
            }
          }
        }
      }, {
        key: "patientAddEditFormSubmit",
        value: function patientAddEditFormSubmit() {
          var _this5 = this;

          for (var x in this.patientAddEditForm.controls) {
            this.patientAddEditForm.controls[x].markAsTouched();
          }

          if (this.patientAddEditForm.valid) {
            this.patientAddEditForm.value.birth_date = new Date(this.patientAddEditForm.value.birth_date).getTime();
            this.patientAddEditForm.value.test_date = new Date(this.patientAddEditForm.value.test_date).getTime();
            this.patientAddEditForm.value.test_completed_date = new Date(this.patientAddEditForm.value.test_completed_date).getTime();
            var data = {
              "source": "data_pece",
              "data": this.patientAddEditForm.value,
              "sourceobj": ["doctor_id", "tech_id"],
              "token": this.allCookies.jwtToken,
              "login_url": _environments_environment__WEBPACK_IMPORTED_MODULE_10__["environment"].siteBaseUrl + "login",
              "tech_details": this.htmlText.tech_details,
              "report_upload": true
            };

            if (this.allCookies.user_details.user_type == 'diagnostic_admin') {
              data.data.diagnostic_admin_id = this.allCookies.user_details._id;
              data.sourceobj.push("diagnostic_admin_id");
            }

            this.httpService.httpViaPost("addorupdatedata", data).subscribe(function (response) {
              if (response.status = "success") {
                //this.formDirective.resetForm();

                /* Open modal */
                var _data = {
                  width: '250px',
                  data: {
                    header: "Success",
                    message: "Record Saved Successfully",
                    button1: {
                      text: "Cancel"
                    },
                    button2: {
                      text: "Add Next"
                    }
                  }
                };

                _this5.openDialog(_data);
              }
            });
          }
        }
      }, {
        key: "openDialog",
        value: function openDialog(data) {
          var _this6 = this;

          this.dialogRef = this.dialog.open(_common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_8__["DialogBoxComponent"], data);
          this.dialogRef.afterClosed().subscribe(function (result) {
            switch (result) {
              case "Cancel":
                _this6.router.navigateByUrl('/tech/dashboard');

                break;

              case "Add Next":
                _this6.formDirective.resetForm();

                break;
            }
          });
        }
      }, {
        key: "inputUntouch",
        value: function inputUntouch(form, val) {
          form.controls[val].markAsUntouched();
        }
      }]);

      return AddEditPatientComponent;
    }();

    AddEditPatientComponent.ctorParameters = function () {
      return [{
        type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__["HttpServiceService"]
      }, {
        type: _angular_common__WEBPACK_IMPORTED_MODULE_5__["DatePipe"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_6__["CookieService"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatSnackBar"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatDialog"]
      }, {
        type: _class_common_common_function__WEBPACK_IMPORTED_MODULE_9__["CommonFunction"]
      }];
    };

    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroupDirective"], {
      "static": false
    })], AddEditPatientComponent.prototype, "formDirective", void 0);
    AddEditPatientComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-add-edit-patient',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./add-edit-patient.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/admin-dashboard/add-edit-patient/add-edit-patient.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./add-edit-patient.component.css */
      "./src/app/components/admin/admin-dashboard/add-edit-patient/add-edit-patient.component.css"))["default"]]
    }), Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["HostListener"])('window:scroll', ['$event'])], AddEditPatientComponent);
    /***/
  },

  /***/
  "./src/app/components/admin/admin-dashboard/admin-dashboard.component.css":
  /*!********************************************************************************!*\
    !*** ./src/app/components/admin/admin-dashboard/admin-dashboard.component.css ***!
    \********************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminAdminDashboardAdminDashboardComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/* .content_wrapper{ display: flex; justify-content: space-between;  align-items: center; width: 100%; margin: auto; text-align: center; }\n.content_wrapper .itemsection{width: 33%; margin: 0px 7px; box-sizing: border-box; display: flex; justify-content: center; position: relative; border-radius: 10px; border: 1px solid #e8e9ef;  overflow: hidden;  }\n.content_wrapper .itemsection .icon{  display: flex; align-items: center; justify-content: center; width: 20%; box-sizing: border-box;}\n.content_wrapper .itemsection .icon img{ max-width: 100%; }\n.content_wrapper .itemsection .button_wrapper{ background: #4d545a; width: 25%; display: flex; align-items: center; justify-content: center; }\n.content_wrapper .itemsection .button_wrapper button{ width: auto; background: transparent; color: #fff; padding: 0; font-family: \"AvenirMedium\"; font-size: 15px; }\n.content_wrapper .itemsection .counteer { box-sizing: border-box; width: 55%; padding: 5px; text-align: left; }\n.content_wrapper .itemsection .counteer .dataCount{ font-size: 48px; font-family: \"AvenirBlack\";  color: #4d545a; margin: 0;}\n.content_wrapper .itemsection .counteer .doctorNumber{ font-size: 18px; font-family: \"AvenirMedium\";  color: #4d545a; margin:0;}\n.content_wrapper .itemsection:nth-child(3n+1){ margin-left: 0;}\n.content_wrapper .itemsection:nth-child(3n+3){ margin-right: 0;} */\n\n\n/* Subha CSS */\n\n\n.tooltip {\n    position: relative;\n    display: inline-block;\n  }\n\n\n.tooltip .tooltiptext {\n    visibility: hidden;\n    min-width: 100px;\n    background-color: #555;\n    color: #fff;\n    text-align: center;\n    border-radius: 6px;\n    padding:6px 10px;\n    position: absolute;\n    z-index: 1;\n    bottom: 125%;\n    left: 50%;\n    margin-left: -60px;\n    opacity: 0;\n    transition: opacity 0.3s;\n  }\n\n\n.tooltip .tooltiptext::after {\n    content: \"\";\n    position: absolute;\n    top: 100%;\n    left: 50%;\n    margin-left: -5px;\n    border-width: 5px;\n    border-style: solid;\n    border-color: #555 transparent transparent transparent;\n  }\n\n\n.tooltip:hover .tooltiptext {\n    visibility: visible;\n    opacity: 1;\n  }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9hZG1pbi9hZG1pbi1kYXNoYm9hcmQvYWRtaW4tZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBOzs7Ozs7Ozs7O2tFQVVrRTs7O0FBR2xFLGNBQWM7OztBQUNkO0lBQ0ksa0JBQWtCO0lBQ2xCLHFCQUFxQjtFQUN2Qjs7O0FBRUE7SUFDRSxrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCLHNCQUFzQjtJQUN0QixXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFDaEIsa0JBQWtCO0lBQ2xCLFVBQVU7SUFDVixZQUFZO0lBQ1osU0FBUztJQUNULGtCQUFrQjtJQUNsQixVQUFVO0lBQ1Ysd0JBQXdCO0VBQzFCOzs7QUFFQTtJQUNFLFdBQVc7SUFDWCxrQkFBa0I7SUFDbEIsU0FBUztJQUNULFNBQVM7SUFDVCxpQkFBaUI7SUFDakIsaUJBQWlCO0lBQ2pCLG1CQUFtQjtJQUNuQixzREFBc0Q7RUFDeEQ7OztBQUVBO0lBQ0UsbUJBQW1CO0lBQ25CLFVBQVU7RUFDWiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW4vYWRtaW4tZGFzaGJvYXJkL2FkbWluLWRhc2hib2FyZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG4vKiAuY29udGVudF93cmFwcGVyeyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47ICBhbGlnbi1pdGVtczogY2VudGVyOyB3aWR0aDogMTAwJTsgbWFyZ2luOiBhdXRvOyB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbi5jb250ZW50X3dyYXBwZXIgLml0ZW1zZWN0aW9ue3dpZHRoOiAzMyU7IG1hcmdpbjogMHB4IDdweDsgYm94LXNpemluZzogYm9yZGVyLWJveDsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IHBvc2l0aW9uOiByZWxhdGl2ZTsgYm9yZGVyLXJhZGl1czogMTBweDsgYm9yZGVyOiAxcHggc29saWQgI2U4ZTllZjsgIG92ZXJmbG93OiBoaWRkZW47ICB9XG4uY29udGVudF93cmFwcGVyIC5pdGVtc2VjdGlvbiAuaWNvbnsgIGRpc3BsYXk6IGZsZXg7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IGp1c3RpZnktY29udGVudDogY2VudGVyOyB3aWR0aDogMjAlOyBib3gtc2l6aW5nOiBib3JkZXItYm94O31cbi5jb250ZW50X3dyYXBwZXIgLml0ZW1zZWN0aW9uIC5pY29uIGltZ3sgbWF4LXdpZHRoOiAxMDAlOyB9XG4uY29udGVudF93cmFwcGVyIC5pdGVtc2VjdGlvbiAuYnV0dG9uX3dyYXBwZXJ7IGJhY2tncm91bmQ6ICM0ZDU0NWE7IHdpZHRoOiAyNSU7IGRpc3BsYXk6IGZsZXg7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IGp1c3RpZnktY29udGVudDogY2VudGVyOyB9XG4uY29udGVudF93cmFwcGVyIC5pdGVtc2VjdGlvbiAuYnV0dG9uX3dyYXBwZXIgYnV0dG9ueyB3aWR0aDogYXV0bzsgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7IGNvbG9yOiAjZmZmOyBwYWRkaW5nOiAwOyBmb250LWZhbWlseTogXCJBdmVuaXJNZWRpdW1cIjsgZm9udC1zaXplOiAxNXB4OyB9XG4uY29udGVudF93cmFwcGVyIC5pdGVtc2VjdGlvbiAuY291bnRlZXIgeyBib3gtc2l6aW5nOiBib3JkZXItYm94OyB3aWR0aDogNTUlOyBwYWRkaW5nOiA1cHg7IHRleHQtYWxpZ246IGxlZnQ7IH1cbi5jb250ZW50X3dyYXBwZXIgLml0ZW1zZWN0aW9uIC5jb3VudGVlciAuZGF0YUNvdW50eyBmb250LXNpemU6IDQ4cHg7IGZvbnQtZmFtaWx5OiBcIkF2ZW5pckJsYWNrXCI7ICBjb2xvcjogIzRkNTQ1YTsgbWFyZ2luOiAwO31cbi5jb250ZW50X3dyYXBwZXIgLml0ZW1zZWN0aW9uIC5jb3VudGVlciAuZG9jdG9yTnVtYmVyeyBmb250LXNpemU6IDE4cHg7IGZvbnQtZmFtaWx5OiBcIkF2ZW5pck1lZGl1bVwiOyAgY29sb3I6ICM0ZDU0NWE7IG1hcmdpbjowO31cbi5jb250ZW50X3dyYXBwZXIgLml0ZW1zZWN0aW9uOm50aC1jaGlsZCgzbisxKXsgbWFyZ2luLWxlZnQ6IDA7fVxuLmNvbnRlbnRfd3JhcHBlciAuaXRlbXNlY3Rpb246bnRoLWNoaWxkKDNuKzMpeyBtYXJnaW4tcmlnaHQ6IDA7fSAqL1xuXG5cbi8qIFN1YmhhIENTUyAqL1xuLnRvb2x0aXAge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIH1cblxuICAudG9vbHRpcCAudG9vbHRpcHRleHQge1xuICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgICBtaW4td2lkdGg6IDEwMHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM1NTU7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgICBwYWRkaW5nOjZweCAxMHB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB6LWluZGV4OiAxO1xuICAgIGJvdHRvbTogMTI1JTtcbiAgICBsZWZ0OiA1MCU7XG4gICAgbWFyZ2luLWxlZnQ6IC02MHB4O1xuICAgIG9wYWNpdHk6IDA7XG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzO1xuICB9XG5cbiAgLnRvb2x0aXAgLnRvb2x0aXB0ZXh0OjphZnRlciB7XG4gICAgY29udGVudDogXCJcIjtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAxMDAlO1xuICAgIGxlZnQ6IDUwJTtcbiAgICBtYXJnaW4tbGVmdDogLTVweDtcbiAgICBib3JkZXItd2lkdGg6IDVweDtcbiAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICAgIGJvcmRlci1jb2xvcjogIzU1NSB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCB0cmFuc3BhcmVudDtcbiAgfVxuXG4gIC50b29sdGlwOmhvdmVyIC50b29sdGlwdGV4dCB7XG4gICAgdmlzaWJpbGl0eTogdmlzaWJsZTtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG4iXX0= */";
    /***/
  },

  /***/
  "./src/app/components/admin/admin-dashboard/admin-dashboard.component.ts":
  /*!*******************************************************************************!*\
    !*** ./src/app/components/admin/admin-dashboard/admin-dashboard.component.ts ***!
    \*******************************************************************************/

  /*! exports provided: AdminDashboardComponent */

  /***/
  function srcAppComponentsAdminAdminDashboardAdminDashboardComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AdminDashboardComponent", function () {
      return AdminDashboardComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../../common/dialog-box/dialog-box.component */
    "./src/app/components/common/dialog-box/dialog-box.component.ts");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var ngx_device_detector__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ngx-device-detector */
    "./node_modules/ngx-device-detector/fesm2015/ngx-device-detector.js");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../../../../environments/environment */
    "./src/environments/environment.ts");
    /* harmony import */


    var moment__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! moment */
    "./node_modules/moment/moment.js");
    /* harmony import */


    var moment__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_9__);

    var moment = moment__WEBPACK_IMPORTED_MODULE_9__;

    var AdminDashboardComponent = /*#__PURE__*/function () {
      // lib list end
      function AdminDashboardComponent(router, cookieService, http, activatedRoute, dialog, deviceService, matSnackBar) {
        var _this7 = this;

        _classCallCheck(this, AdminDashboardComponent);

        this.router = router;
        this.cookieService = cookieService;
        this.http = http;
        this.activatedRoute = activatedRoute;
        this.dialog = dialog;
        this.deviceService = deviceService;
        this.matSnackBar = matSnackBar;
        this.loginUserData = {};
        this.jwtToken = "";
        this.htmlText = {
          viewAllButtonTable: {
            viewTable: false,
            headerText: ""
          }
        };
        this.allResolveData = {};
        this.shareDetails = {
          baseUrl: _environments_environment__WEBPACK_IMPORTED_MODULE_8__["environment"].doctorSignUpBaseUrl,
          userId: ""
        }; // Lib list

        this.allBillerData = [];
        this.billerData_count = 0;
        this.allUserData_skip = ["_id", "report_file_type", "tech_id", "tech_email", "batch_name", "report_type", "status", "file_basepath", "file_bucketname", "file_name", "file_original_name", "file_type", "converted_image", "images", "patient_details", "patient_name_search", "report_life_circle", "note", "additional_potential_health_risks", "cpt_codes", "created_at", "doctor_name"];
        this.editUrl = "admin/biller-management/edit";
        this.libdata = {
          basecondition: {},
          updateendpoint: 'status-update',
          // updateendpointmany:'status-update',
          custombuttons: [{
            label: "View Report",
            route: "admin/view-patient-record/",
            type: 'internallink',
            param: ['_id']
          }, {
            label: "Download Report",
            link: _environments_environment__WEBPACK_IMPORTED_MODULE_8__["environment"].s3bucket + "reports",
            type: 'externallink',
            paramtype: 'angular',
            param: ['download_file_name']
          }, {
            label: "Tech Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-tech-details',
            datafields: ['first name', 'last name', 'email', 'phone', 'address', 'city', 'state', 'zip'],
            param: 'id',
            headermessage: 'Tech Information'
          }, {
            label: "View Codes",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-codes-details',
            datafields: ['Additional Potential Health Risks', 'CPT Codes', 'ICD Codes'],
            param: 'id',
            headermessage: 'Associated Codes'
          }, {
            label: "Doctor Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-doctor-details',
            datafields: ['firstname', 'lastname', 'email', 'fax', 'Practice Name', 'NPI', 'phone', 'address', 'city', 'state', 'zip'],
            param: 'id',
            headermessage: 'Doctor Information'
          }, {
            label: "Doctor Office Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-doctor-office-details',
            datafields: ['center name', 'first name', 'last name', 'email', 'phone', 'address', 'city', 'state', 'zip'],
            param: 'id',
            headermessage: 'Doctor Office Info'
          }, {
            label: "Parent Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-parent-details',
            datafields: ['Parent Name', 'Contact Person', 'email', 'phone', 'address', 'city', 'state', 'zip'],
            cond: "parent_check_flag",
            condval: 1,
            param: 'id',
            headermessage: 'Parent Information'
          }, {
            label: "View Jobticket",
            route: "admin/report-jobtickets/",
            type: 'internallink',
            param: ['_id'],
            cond: 'status',
            condval: 13
          }, {
            label: "Generate Pdf",
            type: 'listner',
            id: 'i1'
          }],
          hideeditbutton: true,
          hidedeletebutton: true,
          hidedeletemany: true,
          // hidestatustogglebutton: true,
          hideviewbutton: true,
          tableheaders: ["patient_name", "status_text", "created_at_datetime", "cpt_addl", "general_details"]
        };
        this.allUserData_modify_header = {
          "general_details": "Related Info",
          "patient_name": "Patient Name",
          "status_text": "Status",
          "created_at_datetime": "Report Added",
          "cpt_addl": "CPT/ Addl Hrisk C"
        };
        this.UpdateEndpoint = "addorupdatedata";
        this.deleteEndpoint = "deletesingledata";
        this.apiUrl = _environments_environment__WEBPACK_IMPORTED_MODULE_8__["environment"].apiBaseUrl;
        this.tableName = "data_pece";
        this.datacollection = 'dashboard-report-data-list';
        this.sortdata = {
          "type": 'desc',
          "field": 'patient_name',
          "options": ['patient_name', 'created_at_datetime']
        };
        this.limitcond = {
          "limit": 10,
          "skip": 0,
          "pagecount": 1
        };
        this.previewModal_detail_skip = ['_id', 'user_type', 'status', 'password', 'created_at'];
        this.status = [{
          val: "Biller Admin Approved",
          'name': 'Biller Admin Approved'
        }, {
          val: "Biller Admin Not Approved",
          'name': 'Biller Admin Not Approved'
        }, {
          val: "Biller Admin Hold",
          'name': "Biller Admin Hold"
        }];
        this.cptcodes = [{
          val: "95923",
          'name': '95923'
        }, {
          val: "95943",
          'name': '95943'
        }, {
          val: "95921",
          'name': "95921"
        }, {
          val: "93923",
          'name': "93923"
        }, {
          val: "93922",
          'name': "93922"
        }];
        this.parent_type = [{
          val: "admin",
          'name': 'Admin'
        }, {
          val: "diagnostic_admin",
          'name': 'Diagnostic Admin'
        }, {
          val: "distributor",
          'name': 'Distributor'
        }, {
          val: "doctor_group",
          'name': 'Doctor Group'
        }];
        this.report_type = [{
          val: "RM-3A",
          'name': 'RM-3A'
        }, {
          val: "TM FLOW V3",
          'name': 'TM FLOW V3'
        }, {
          val: "TM FLOW V4",
          'name': 'TM FLOW V4'
        }, {
          val: "CMAT with BP Cuffs",
          'name': 'CMAT with BP Cuffs'
        }];
        this.report = [{
          val: 11,
          'name': 'Biller Admin Approved'
        }, {
          val: 12,
          'name': 'Biller Admin Not Approved'
        }, {
          val: 13,
          'name': "Biller Admin Hold"
        }];
        this.SearchingEndpoint = "datalist";
        this.authval = [];
        this.docofficeval = [];
        this.techval = [];
        this.parentnameval = [];
        this.doctorcity = [];
        this.doctorstate = [];
        this.patientcity = [];
        this.patientstate = [];
        this.SearchingSourceName = "data_biller_list";
        this.search_settings = {
          selectsearch: [{
            label: 'Search By Report Type',
            field: 'report_file_type',
            values: this.report_type
          }, {
            label: 'Search By CPT Codes',
            field: 'cpt_codes_search',
            values: this.cptcodes
          }, {
            label: 'Search By Parent Type',
            field: 'parent_type',
            values: this.parent_type
          }, {
            label: "Search By Doctor",
            field: 'doc_name_search',
            values: this.authval
          }, {
            label: "Search By Tech",
            field: 'tech_name_search',
            values: this.techval
          }, {
            label: "Search By Doctor Office",
            field: 'doctor_ofiice_name_search',
            values: this.docofficeval
          }, {
            label: "Search By Parent Name",
            field: 'parent_name_search',
            values: this.parentnameval
          }, {
            label: "Search By Doctor City",
            field: 'doctor_city_search',
            values: this.doctorcity
          }, {
            label: "Search By Doctor State",
            field: 'doctor_state_search',
            values: this.doctorstate
          }, {
            label: "Search By Patient City",
            field: 'patient_city_search',
            values: this.patientcity
          }, {
            label: "Search By Patient State",
            field: 'patient_state_search',
            values: this.patientstate
          }],
          datesearch: [{
            startdatelabel: "Start Date",
            enddatelabel: "End Date",
            submit: "Search",
            field: "created_at_datetime"
          }],
          textsearch: [{
            label: "Search By Patient Name",
            field: 'patient_name_search'
          }]
        };
        this.loginUserData["user_details"] = cookieService.getAll();
        this.loginUserData.user_details.user_details = JSON.parse(this.loginUserData.user_details.user_details);
        this.shareDetails.userId = this.loginUserData.user_details.user_details._id;
        this.shareDetails.user_type = this.loginUserData.user_details.user_details.user_type;
        this.loginUserData["jwtToken"] = cookieService.get('jwtToken');
        /* Get Auth Token */

        this.jwtToken = cookieService.get('jwtToken');
        /* Get resolve data */

        this.activatedRoute.data.subscribe(function (resolveData) {
          _this7.allResolveData = resolveData.dataCount.data;

          _this7.getReportData();
        });
      }

      _createClass(AdminDashboardComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          this.getSearchData();
        }
      }, {
        key: "ngAfterViewInit",
        value: function ngAfterViewInit() {}
      }, {
        key: "listenLiblistingChange",
        value: function listenLiblistingChange() {
          var _this8 = this;

          var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
          console.log(data);
          var modalData1 = {
            panelClass: 'bulkupload-dialog',
            data: {
              header: "Alert",
              message: "Do you want to Generate the Pdf",
              button1: {
                text: "Yes"
              },
              button2: {
                text: "No"
              }
            }
          };
          var dialogRef1 = this.dialog.open(_common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_5__["DialogBoxComponent"], modalData1);
          dialogRef1.afterClosed().subscribe(function (result) {
            switch (result) {
              case "Yes":
                var requestData = {
                  _id: data.custombuttonclick.data._id
                };

                _this8.http.httpViaPost("get-html-data", requestData).subscribe(function (response) {
                  var modalData = {
                    panelClass: 'bulkupload-dialog',
                    data: {
                      header: "Alert",
                      message: "Pdf Generated Successfully",
                      button1: {
                        text: ""
                      },
                      button2: {
                        text: "OK"
                      }
                    }
                  };

                  var dialogRef = _this8.dialog.open(_common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_5__["DialogBoxComponent"], modalData);
                });

                break;

              case "No":
                dialogRef1.close();
                break;
            }
          });
        }
      }, {
        key: "getReportData",
        value: function getReportData() {
          var _this9 = this;

          this.billerData_count = 0;
          this.allBillerData = []; // lib list

          var data = {
            "condition": {
              "limit": 10,
              "skip": 0
            },
            "sort": {
              "field": "patient_name",
              "type": "desc"
            },
            "searchcondition": {
              "parent_id": this.loginUserData.user_details._id
            },
            "secretkey": "na"
          };
          data.searchcondition.report_type = {
            $exists: true
          };
          data.searchcondition.status = {
            $in: [8, 9, 10]
          };
          this.libdata.basecondition.status = {
            $in: [8, 9, 10]
          }; // API Hit

          this.http.httpViaPost('dashboard-report-data-list', data).subscribe(function (res) {
            _this9.allBillerData = res.results.res;
            _this9.billerData_count = res.results.data_count;
          }, function (error) {
            console.log('Oooops!');
          });
        }
      }, {
        key: "viewAllButton",
        value: function viewAllButton() {
          var flag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";

          switch (flag) {
            case 'Job Tickets':
              document.getElementById("jobTickets").scrollIntoView();
              break;

            default:
              this.htmlText.viewAllButtonTable.headerText = flag;
              break;
          }
        }
      }, {
        key: "getSearchData",
        value: function getSearchData() {
          var _this10 = this;

          var data = {
            "source": "patient_data_desc_patient_name",
            "condition": {},
            "token": this.jwtToken
          };
          this.http.httpViaPost("datalist", data).subscribe(function (response) {
            var start = false;
            var count = 0;

            for (var i in response.res) {
              if (response.res[i].doc_name_search != "") {
                for (var j in _this10.authval) {
                  if (response.res[i].doc_name == _this10.authval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this10.authval.push({
                    name: response.res[i].doc_name,
                    val: response.res[i].doc_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].tech_name_search != "") {
                for (var j in _this10.techval) {
                  if (response.res[i].tech_namesearch == _this10.techval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this10.techval.push({
                    name: response.res[i].tech_namesearch,
                    val: response.res[i].tech_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].parent_name_search != "") {
                for (var j in _this10.parentnameval) {
                  if (response.res[i].parent_namesearch == _this10.parentnameval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this10.parentnameval.push({
                    name: response.res[i].parent_namesearch,
                    val: response.res[i].parent_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].doctor_state_search != "") {
                for (var j in _this10.doctorstate) {
                  if (response.res[i].doctor_state == _this10.doctorstate[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this10.doctorstate.push({
                    name: response.res[i].doctor_state,
                    val: response.res[i].doctor_state_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].doctor_city_search != "") {
                for (var j in _this10.doctorcity) {
                  if (response.res[i].doctor_city == _this10.doctorcity[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this10.doctorcity.push({
                    name: response.res[i].doctor_city,
                    val: response.res[i].doctor_city_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].patient_city_search != "") {
                for (var j in _this10.patientcity) {
                  if (response.res[i].patient_city == _this10.patientcity[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this10.patientcity.push({
                    name: response.res[i].patient_city,
                    val: response.res[i].patient_city_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].patient_state_search != "") {
                for (var j in _this10.patientstate) {
                  if (response.res[i].patient_state == _this10.patientstate[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this10.patientstate.push({
                    name: response.res[i].patient_state,
                    val: response.res[i].patient_state_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].doctor_ofiice_name_search != "") {
                for (var j in _this10.docofficeval) {
                  if (response.res[i].doctor_ofiice_namesearch == _this10.docofficeval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this10.docofficeval.push({
                    name: response.res[i].doctor_ofiice_namesearch,
                    val: response.res[i].doctor_ofiice_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }
          }, function (error) {
            console.log('Oooops!');
          });
        }
      }]);

      return AdminDashboardComponent;
    }();

    AdminDashboardComponent.ctorParameters = function () {
      return [{
        type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__["HttpServiceService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_6__["MatDialog"]
      }, {
        type: ngx_device_detector__WEBPACK_IMPORTED_MODULE_7__["DeviceDetectorService"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_6__["MatSnackBar"]
      }];
    };

    AdminDashboardComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-admin-dashboard',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./admin-dashboard.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/admin-dashboard/admin-dashboard.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./admin-dashboard.component.css */
      "./src/app/components/admin/admin-dashboard/admin-dashboard.component.css"))["default"]]
    })], AdminDashboardComponent);
    /***/
  },

  /***/
  "./src/app/components/admin/admin-dashboard/approved-patient-reports/approved-patient-reports.component.css":
  /*!******************************************************************************************************************!*\
    !*** ./src/app/components/admin/admin-dashboard/approved-patient-reports/approved-patient-reports.component.css ***!
    \******************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminAdminDashboardApprovedPatientReportsApprovedPatientReportsComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW4vYWRtaW4tZGFzaGJvYXJkL2FwcHJvdmVkLXBhdGllbnQtcmVwb3J0cy9hcHByb3ZlZC1wYXRpZW50LXJlcG9ydHMuY29tcG9uZW50LmNzcyJ9 */";
    /***/
  },

  /***/
  "./src/app/components/admin/admin-dashboard/approved-patient-reports/approved-patient-reports.component.ts":
  /*!*****************************************************************************************************************!*\
    !*** ./src/app/components/admin/admin-dashboard/approved-patient-reports/approved-patient-reports.component.ts ***!
    \*****************************************************************************************************************/

  /*! exports provided: ApprovedPatientReportsComponent */

  /***/
  function srcAppComponentsAdminAdminDashboardApprovedPatientReportsApprovedPatientReportsComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ApprovedPatientReportsComponent", function () {
      return ApprovedPatientReportsComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var ngx_device_detector__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ngx-device-detector */
    "./node_modules/ngx-device-detector/fesm2015/ngx-device-detector.js");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../../../../../environments/environment */
    "./src/environments/environment.ts");
    /* harmony import */


    var moment__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! moment */
    "./node_modules/moment/moment.js");
    /* harmony import */


    var moment__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_8__);

    var moment = moment__WEBPACK_IMPORTED_MODULE_8__;

    var ApprovedPatientReportsComponent = /*#__PURE__*/function () {
      // lib list end
      function ApprovedPatientReportsComponent(router, cookieService, http, activatedRoute, dialog, deviceService, matSnackBar) {
        _classCallCheck(this, ApprovedPatientReportsComponent);

        this.router = router;
        this.cookieService = cookieService;
        this.http = http;
        this.activatedRoute = activatedRoute;
        this.dialog = dialog;
        this.deviceService = deviceService;
        this.matSnackBar = matSnackBar;
        this.loginUserData = {};
        this.jwtToken = "";
        this.htmlText = {
          headerText: "Patient Reports"
        };
        this.allResolveData = {}; // Lib list

        this.allBillerData = [];
        this.billerData_count = 0;
        this.allUserData_skip = ["_id", "report_file_type", "tech_id", "tech_email", "batch_name", "report_type", "status", "file_basepath", "file_bucketname", "file_name", "file_original_name", "file_type", "converted_image", "images", "patient_details", "patient_name_search", "report_life_circle", "note", "additional_potential_health_risks", "cpt_codes", "created_at", "doctor_name"];
        this.editUrl = "admin/biller-management/edit";
        this.libdata = {
          basecondition: {
            status: {
              $gt: 10,
              $lt: 14
            }
          },
          updateendpoint: '',
          custombuttons: [{
            label: "View Report",
            route: "admin/view-patient-record/",
            type: 'internallink',
            param: ['_id']
          }, {
            label: "Download Report",
            link: _environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].s3bucket + "reports",
            type: 'externallink',
            paramtype: 'angular',
            param: ['download_file_name']
          }, {
            label: "Tech Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-tech-details',
            datafields: ['first name', 'last name', 'email', 'phone', 'address', 'city', 'state', 'zip'],
            param: 'id',
            headermessage: 'Tech Information'
          }, {
            label: "View Codes",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-codes-details',
            datafields: ['Additional Potential Health Risks', 'CPT Codes', 'ICD Codes'],
            param: 'id',
            headermessage: 'Associated Codes'
          }, {
            label: "Doctor Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-doctor-details',
            datafields: ['firstname', 'lastname', 'email', 'fax', 'Practice Name', 'NPI', 'phone', 'address', 'city', 'state', 'zip'],
            param: 'id',
            headermessage: 'Doctor Information'
          }, {
            label: "Doctor Office Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-doctor-office-details',
            datafields: ['centername', 'firstname', 'lastname', 'email', 'phone', 'address', 'city', 'state', 'zip'],
            param: 'id',
            headermessage: 'Doctor Office Info'
          }, {
            label: "Parent Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-parent-details',
            datafields: ['Parent Name', 'Contact Person', 'email', 'phone', 'address', 'city', 'state', 'zip'],
            param: 'id',
            headermessage: 'Parent Information'
          }, {
            label: "View Jobticket",
            route: "admin/report-jobtickets/",
            type: 'internallink',
            param: ['_id'],
            cond: 'status',
            condval: 13
          }],
          hideeditbutton: true,
          hidedeletebutton: true,
          hidedeletemany: true,
          hidestatustogglebutton: true,
          hideviewbutton: true,
          tableheaders: ["patient_name", "status_text", "created_at_datetime", "status_datetime", "cpt_addl", "general_details"]
        };
        this.allUserData_modify_header = {
          "general_details": "Related Info",
          "patient_name": "Patient Name",
          "status_text": "Status",
          "created_at_datetime": "Report Added",
          "status_datetime": "Last Status Time",
          "cpt_addl": "CPT/ Addl Hrisk C"
        };
        this.UpdateEndpoint = "addorupdatedata";
        this.deleteEndpoint = "deletesingledata";
        this.apiUrl = _environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].apiBaseUrl;
        this.tableName = "data_pece";
        this.datacollection = 'dashboard-report-data-list';
        this.sortdata = {
          "type": 'desc',
          "field": 'patient_name',
          "options": ['patient_name', 'created_at_datetime']
        };
        this.limitcond = {
          "limit": 10,
          "skip": 0,
          "pagecount": 1
        };
        this.previewModal_detail_skip = ['_id', 'user_type', 'status', 'password', 'created_at'];
        this.parent_type = [{
          val: "admin",
          'name': 'Admin'
        }, {
          val: "diagnostic_admin",
          'name': 'Diagnostic Admin'
        }, {
          val: "distributor",
          'name': 'Distributor'
        }, {
          val: "doctor_group",
          'name': 'Doctor Group'
        }];
        this.cptcodes = [{
          val: "95923",
          'name': '95923'
        }, {
          val: "95943",
          'name': '95943'
        }, {
          val: "95921",
          'name': "95921"
        }, {
          val: "93923",
          'name': "93923"
        }, {
          val: "93922",
          'name': "93922"
        }];
        this.report_type = [{
          val: "RM-3A",
          'name': 'RM-3A'
        }, {
          val: "TM FLOW V3",
          'name': 'TM FLOW V3'
        }, {
          val: "TM FLOW V4",
          'name': 'TM FLOW V4'
        }, {
          val: "CMAT with BP Cuffs",
          'name': 'CMAT with BP Cuffs'
        }];
        this.status = [{
          val: 11,
          'name': 'Biller Admin Approved'
        }, {
          val: 12,
          'name': 'Biller Admin Not Approved'
        }, {
          val: 13,
          'name': "Biller Admin Hold"
        }, {
          val: 14,
          "name": "Report Downloaded"
        }, {
          val: 15,
          "name": "Send to Biller"
        }];
        this.SearchingEndpoint = "datalist";
        this.authval = [];
        this.docofficeval = [];
        this.techval = [];
        this.parentnameval = [];
        this.doctorcity = [];
        this.doctorstate = [];
        this.patientcity = [];
        this.patientstate = [];
        this.SearchingSourceName = "data_biller_list";
        this.search_settings = {
          selectsearch: [{
            label: 'Search By Report Type',
            field: 'report_file_type',
            values: this.report_type
          }, {
            label: 'Search By Status',
            field: 'status_search',
            values: this.status
          }, {
            label: 'Search By Parent Type',
            field: 'parent_type',
            values: this.parent_type
          }, {
            label: 'Search By CPT Codes',
            field: 'cpt_codes_search',
            values: this.cptcodes
          }, {
            label: "Search By Doctor",
            field: 'doc_name_search',
            values: this.authval
          }, {
            label: "Search By Tech",
            field: 'tech_name_search',
            values: this.techval
          }, {
            label: "Search By Doctor Office",
            field: 'doctor_ofiice_name_search',
            values: this.docofficeval
          }, {
            label: "Search By Parent Name",
            field: 'parent_name_search',
            values: this.parentnameval
          }, {
            label: "Search By Doctor City",
            field: 'doctor_city_search',
            values: this.doctorcity
          }, {
            label: "Search By Doctor State",
            field: 'doctor_state_search',
            values: this.doctorstate
          }, {
            label: "Search By Patient City",
            field: 'patient_city_search',
            values: this.patientcity
          }, {
            label: "Search By Patient State",
            field: 'patient_state_search',
            values: this.patientstate
          }],
          datesearch: [{
            startdatelabel: "Start Date",
            enddatelabel: "End Date",
            submit: "Search",
            field: "created_at_datetime"
          }],
          textsearch: [{
            label: "Search By Patient Name",
            field: 'patient_name_search'
          }]
        };
        this.loginUserData["user_details"] = cookieService.getAll();
        this.loginUserData["jwtToken"] = cookieService.get('jwtToken');
        /* Get Auth Token */

        this.jwtToken = cookieService.get('jwtToken');
        this.getReportData();
      }

      _createClass(ApprovedPatientReportsComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          this.getSearchData();
        }
      }, {
        key: "ngAfterViewInit",
        value: function ngAfterViewInit() {}
      }, {
        key: "getReportData",
        value: function getReportData() {
          var _this11 = this;

          this.billerData_count = 0;
          this.allBillerData = []; // lib list

          var data = {
            "condition": {
              "limit": 10,
              "skip": 0
            },
            "sort": {
              "field": "patient_name",
              "type": "desc"
            },
            "searchcondition": {
              "parent_id": this.loginUserData.user_details._id
            },
            "secretkey": "na"
          };
          data.searchcondition.report_type = {
            $exists: true
          };
          data.searchcondition.status = {
            $in: [11, 12, 13]
          };
          this.libdata.basecondition.status = {
            $in: [11, 12, 13]
          }; // API Hit

          this.http.httpViaPost('dashboard-report-data-list', data).subscribe(function (res) {
            _this11.allBillerData = res.results.res;
            _this11.billerData_count = res.results.data_count;
          }, function (error) {
            console.log('Oooops!');
          });
        }
      }, {
        key: "getSearchData",
        value: function getSearchData() {
          var _this12 = this;

          var data = {
            "source": "patient_data_desc_patient_name",
            "condition": {
              "status": {
                $gt: 10
              }
            },
            "token": this.jwtToken
          };
          this.http.httpViaPost("datalist", data).subscribe(function (response) {
            var start = false;
            var count = 0;

            for (var i in response.res) {
              if (response.res[i].doc_name_search != "") {
                for (var j in _this12.authval) {
                  if (response.res[i].doc_name == _this12.authval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this12.authval.push({
                    name: response.res[i].doc_name,
                    val: response.res[i].doc_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].tech_name_search != "") {
                for (var j in _this12.techval) {
                  if (response.res[i].tech_namesearch == _this12.techval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this12.techval.push({
                    name: response.res[i].tech_namesearch,
                    val: response.res[i].tech_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].parent_name_search != "") {
                for (var j in _this12.parentnameval) {
                  if (response.res[i].parent_namesearch == _this12.parentnameval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this12.parentnameval.push({
                    name: response.res[i].parent_namesearch,
                    val: response.res[i].parent_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].doctor_state_search != "") {
                for (var j in _this12.doctorstate) {
                  if (response.res[i].doctor_state == _this12.doctorstate[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this12.doctorstate.push({
                    name: response.res[i].doctor_state,
                    val: response.res[i].doctor_state_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].doctor_city_search != "") {
                for (var j in _this12.doctorcity) {
                  if (response.res[i].doctor_city == _this12.doctorcity[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this12.doctorcity.push({
                    name: response.res[i].doctor_city,
                    val: response.res[i].doctor_city_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].patient_city_search != "") {
                for (var j in _this12.patientcity) {
                  if (response.res[i].patient_city == _this12.patientcity[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this12.patientcity.push({
                    name: response.res[i].patient_city,
                    val: response.res[i].patient_city_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].patient_state_search != "") {
                for (var j in _this12.patientstate) {
                  if (response.res[i].patient_state == _this12.patientstate[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this12.patientstate.push({
                    name: response.res[i].patient_state,
                    val: response.res[i].patient_state_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].doctor_ofiice_name_search != "") {
                for (var j in _this12.docofficeval) {
                  if (response.res[i].doctor_ofiice_namesearch == _this12.docofficeval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this12.docofficeval.push({
                    name: response.res[i].doctor_ofiice_namesearch,
                    val: response.res[i].doctor_ofiice_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }
          }, function (error) {
            console.log('Oooops!');
          });
        }
      }]);

      return ApprovedPatientReportsComponent;
    }();

    ApprovedPatientReportsComponent.ctorParameters = function () {
      return [{
        type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__["HttpServiceService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatDialog"]
      }, {
        type: ngx_device_detector__WEBPACK_IMPORTED_MODULE_6__["DeviceDetectorService"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatSnackBar"]
      }];
    };

    ApprovedPatientReportsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-approved-patient-reports',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./approved-patient-reports.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/admin-dashboard/approved-patient-reports/approved-patient-reports.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./approved-patient-reports.component.css */
      "./src/app/components/admin/admin-dashboard/approved-patient-reports/approved-patient-reports.component.css"))["default"]]
    })], ApprovedPatientReportsComponent);
    /***/
  },

  /***/
  "./src/app/components/admin/admin-dashboard/download-details/download-details.component.css":
  /*!**************************************************************************************************!*\
    !*** ./src/app/components/admin/admin-dashboard/download-details/download-details.component.css ***!
    \**************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminAdminDashboardDownloadDetailsDownloadDetailsComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW4vYWRtaW4tZGFzaGJvYXJkL2Rvd25sb2FkLWRldGFpbHMvZG93bmxvYWQtZGV0YWlscy5jb21wb25lbnQuY3NzIn0= */";
    /***/
  },

  /***/
  "./src/app/components/admin/admin-dashboard/download-details/download-details.component.ts":
  /*!*************************************************************************************************!*\
    !*** ./src/app/components/admin/admin-dashboard/download-details/download-details.component.ts ***!
    \*************************************************************************************************/

  /*! exports provided: DownloadDetailsComponent */

  /***/
  function srcAppComponentsAdminAdminDashboardDownloadDetailsDownloadDetailsComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DownloadDetailsComponent", function () {
      return DownloadDetailsComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _angular_material_table__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/material/table */
    "./node_modules/@angular/material/esm2015/table.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");

    var DownloadDetailsComponent = /*#__PURE__*/function () {
      function DownloadDetailsComponent(dialogRef, dialogData, router, cookieService, http) {
        _classCallCheck(this, DownloadDetailsComponent);

        this.dialogRef = dialogRef;
        this.dialogData = dialogData;
        this.router = router;
        this.cookieService = cookieService;
        this.http = http;
        this.loader = true;
        this.displayedColumns = ['position', 'ip_address', 'os', 'browser', 'device', 'download_attempt', 'date_time'];
        this.data = this.dialogData;
        this.getDownloadReportDetails(this.data.report_id);
      }

      _createClass(DownloadDetailsComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }, {
        key: "getDownloadReportDetails",
        value: function getDownloadReportDetails(reportID) {
          var _this13 = this;

          var jwtToken = this.cookieService.get('jwtToken');
          var data = {
            "source": "report_download",
            "condition": {
              "report_id_object": reportID
            },
            "token": jwtToken
          };
          this.http.httpViaPost('datalist', data).subscribe(function (response) {
            _this13.loader = false;
            _this13.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_5__["MatTableDataSource"](response.res);
          });
        }
      }]);

      return DownloadDetailsComponent;
    }();

    DownloadDetailsComponent.ctorParameters = function () {
      return [{
        type: _angular_material__WEBPACK_IMPORTED_MODULE_6__["MatDialogRef"]
      }, {
        type: undefined,
        decorators: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
          args: [_angular_material__WEBPACK_IMPORTED_MODULE_6__["MAT_DIALOG_DATA"]]
        }]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__["HttpServiceService"]
      }];
    };

    DownloadDetailsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-download-details',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./download-details.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/admin-dashboard/download-details/download-details.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./download-details.component.css */
      "./src/app/components/admin/admin-dashboard/download-details/download-details.component.css"))["default"]]
    }), tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_6__["MAT_DIALOG_DATA"]))], DownloadDetailsComponent);
    /***/
  },

  /***/
  "./src/app/components/admin/admin-dashboard/edit-patient-record/edit-patient-record.component.css":
  /*!********************************************************************************************************!*\
    !*** ./src/app/components/admin/admin-dashboard/edit-patient-record/edit-patient-record.component.css ***!
    \********************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminAdminDashboardEditPatientRecordEditPatientRecordComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = ".editPatient_wrapper{ display: flex; justify-content: space-between; background: #f2f2f2;}\n.editPatient_wrapper .editItems{  width: 50%; margin-bottom: 0; box-sizing: border-box; padding: 16px; background: #fff; }\n/* .editPatient_wrapper .editItems:first-child{ max-height: 75vh;} */\n.editPatient_wrapper .editItems .image_slider{ position: relative; }\n.editPatient_wrapper .editItems .image_slider button{top:40%; font-family: 'AvenirBlack'; position: absolute; }\n.editPatient_wrapper .editItems .image_slider .prev{ left: 0; }\n.editPatient_wrapper .editItems .image_slider .next{ right: 0; top: 39%; }\n.editPatient_wrapper .editItems .image_slider .img_w{ width: 100%; margin-bottom: 0; text-align: center; }\n.editPatient_wrapper .editItems .image_slider .img_w img{ max-width: 100%;}\n.action_button{ justify-content: center;}\n.action_button button{ border-radius: 5px; text-transform: uppercase; font-family: \"AvenirMedium\"; font-size: 26px; padding: 6px 10px; width: 200px; background: var(--button-color2);  color: #fff;}\n.action_button button:first-child{ margin-right: 10px; background: var(--button-color1);}\n.action_button button:first-child{ margin-left:0;}\n.action_button button:last-child{ margin-right:0;}\n.display_section{ width: 100%!important; margin: auto;}\n/*left part css start here*/\n/* background: #f3f3f3; */\n.add_form{ width: 100%; margin: 20px auto;  padding: 16px 10px; padding-bottom: 25px; border: 1px solid #91e7ff; box-sizing: border-box;}\n.add_form .form_wrapper .mat-form-field{ width: 49%; margin: 0.5%; }\n.add_form .form_wrapper textarea{ resize: none;}\n.add_form h2{ font-family: \"AvenirMedium\"; text-transform: uppercase; font-size: 24px; padding: 0 6px; color: #1dbce9; }\n.add_form .submit_form { display: block; width: 100%; text-align: center; margin-top: 30px; }\n.add_form .submit_form button{ border-radius: 5px; background: linear-gradient(180deg, #f9dc19, #daa505); color: #5e3619; text-transform: uppercase; font-family: \"RobotoBlack\"; font-size: 25px; padding: 8px;\nwidth: 390px; border: 3px solid #d59d01; }\n.add_form .submit_form button:nth-child(1){ background: linear-gradient(180deg, #f2be00, #a52a08); color: #f3f3f3; border: 2px solid #bb3c0d; margin-right: 16px; }\n.add_form .return_button { background: #1dbce9; color: #fff; margin-bottom: 12px;}\n.add_form .example-form .field_setmodel{ border: 1px solid #6fa6bb;}\n.add_form .example-form .field_setmodel .legend_model{ font-family: \"AvenirLight\"; font-size: 20px; text-transform: uppercase; color: #03a9f5;}\n.add_form .example-form .patients_info_wrapper{ display: flex; flex-wrap: wrap; align-items: center; justify-content: space-between; width: 100%;}\n.add_form .example-form .patients_info_wrapper .mat-card-content { width: 32%; margin: 0.5%; flex-direction: column;}\n.add_form .example-form .patients_info_wrapper .mat-card-content .mat-form-field { width: 100%; }\n.add_form .example-form .patients_info_wrapper .gender_wrapper{ padding-bottom: 16px;}\n.add_form .example-form .patients_info_wrapper .gender_wrapper .patientGender{ background: #fff; display: flex; border: 1px solid #dedede; padding: 10px 4px;\n  box-sizing: border-box; border-bottom: 2px solid #c5c4c4; }\n.add_form .mat-card-content label{ margin-right: 5px; }\n.add_form .test_date_wrapper .mat-card-actions,\n.add_form .test_date_wrapper .mat-card-content,\n.add_form .test_date_wrapper .mat-card-subtitle {\n  display: inline-flex; margin-bottom: 16px; vertical-align: middle; justify-content: center; align-items: center; }\n.add_form .mat-card-content label ,\n.add_form .patient_diagnotes label{ font-family: \"AvenirLight\"; color: #000; font-size: 14px; line-height: 20px; width: 140px;}\n.add_form .mat-card-content .mat-checkbox { margin: 0 5px; }\n.add_form .mat-card-content ,\n.add_form .patient_diagnotes .mat-form-field { position: relative; text-align: left; margin: 0 10px; }\n.add_form .patient_diagnotes{ width: auto; flex-direction: column; display: flex; margin: 0; border: 1px solid #43cef5; background: #fff; box-sizing: border-box;}\n.add_form .patient_diagnotes .example-full-width textarea{ resize: none; }\n.add_header { display: flex; margin: 0 16px;}\n.add_header button{ margin-left: auto; background: linear-gradient(180deg, #fac855, #e47e2a)!important; text-transform: uppercase; font-family: \"RobotoBlack\"; padding-top: 4px; }\n.add_form .patient_diagnotes label{ width: 100%!important; margin: 5px 10px!important;}\n.add_form .test_date_wrapper .mat-card-content .subValue { margin-left: 5px; width: 20%; }\n.add_form .test_date_wrapper{ display: flex; justify-content: space-between; width: 100%; flex-wrap: wrap;}\n.add_form .test_date_wrapper .mat-card-content{ margin: 0; width: 49%;}\n@media screen and (max-width: 1600px){\n  .add_form .mat-card-content label { width: 95px; }\n  .add_form .test_date_wrapper .mat-form-field{ width: 160px;}\n}\n@media screen and (max-width: 1460px){\n  .techdashboard_header .mat-toolbar-row .quotation p { font-size: 24px; line-height: 26px;}\n  .add_form .mat-card-content{ margin: 0 2px; }\n}\n@media screen and (max-width: 1440px){\n  .add_form .mat-card-content label { margin: 0; margin-right: 5px; }\n  .add_form .test_date_wrapper .mat-card-content { flex-direction: column; }\n  .add_form .mat-card-content label { width: 100%; margin: 0; margin-bottom: 6px; font-family: 'AvenirMedium'; line-height: 16px;}\n  .add_form .mat-card-content label br{ display: none;}\n  .add_form .test_date_wrapper .mat-form-field { width: 100%; }\n  .add_form .test_date_wrapper .mat-card-content .subValue { margin-left: 0; width: 100%;  margin-top: -10px; }\n}\n@media screen and (max-width: 1199px){\n.editPatient_wrapper .editItems { width: 100%; }\n.editPatient_wrapper { display: flex; flex-direction: column; justify-content: flex-start; }\n.add_form .test_date_wrapper .mat-card-actions,\n.add_form .test_date_wrapper .mat-card-content,\n.add_form .test_date_wrapper .mat-card-subtitle { width: 32%; margin: 0.5%;}\n.add_form .test_date_wrapper { display: flex; flex-wrap: wrap; justify-content: center; }\n\n}\n@media screen and (max-width: 1000px){\n  .add_form .submit_form button { width: 48%; }\n}\n@media screen and (max-width: 991px){\n.techdashboard_header .mat-toolbar-row { flex-direction: column; padding: 20px;}\n.techdashboard_header .mat-toolbar-row .quotation p { margin-top: 16px; }\n.add_form .test_date_wrapper .mat-card-actions,\n.add_form .test_date_wrapper .mat-card-content,\n.add_form .test_date_wrapper .mat-card-subtitle { width: 48%; }\n}\n@media screen and (max-width: 768px){\n  .add_form .form_wrapper .mat-form-field { width: 100%; margin: 0; }\n}\n@media screen and (max-width: 600px){\n  .add_form .example-form .patients_info_wrapper .mat-card-content { width: 100%; margin: 0; flex-direction: column; }\n  .add_form .test_date_wrapper .mat-card-content{ width: 100%; margin: 0; margin-bottom: 16px; }\n}\n@media screen and (max-width: 576px){\n.add_form .submit_form button { font-size: 22px; padding: 2px; }\n.add_form .submit_form button { width: 100%; margin: 0; margin-top: 20px; }\n.add_form .submit_form { display: flex; flex-direction: column-reverse; text-align: center; margin-top: 0px; }\n.add_form .submit_form button:nth-child(1) { margin-right: 0; margin-top: 20px; }\n}\n@media screen and (max-width: 360px){\n.techdashboard_header .mat-toolbar-row .quotation p { font-size: 16px; line-height: 22px; }\n.add_form h2 { font-size: 22px; line-height: 24px; text-align: center; }\n}\n\n/*# sourceMappingURL=data:application/json;base64, */";
    /***/
  },

  /***/
  "./src/app/components/admin/admin-dashboard/edit-patient-record/edit-patient-record.component.ts":
  /*!*******************************************************************************************************!*\
    !*** ./src/app/components/admin/admin-dashboard/edit-patient-record/edit-patient-record.component.ts ***!
    \*******************************************************************************************************/

  /*! exports provided: EditPatientRecordComponent */

  /***/
  function srcAppComponentsAdminAdminDashboardEditPatientRecordEditPatientRecordComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "EditPatientRecordComponent", function () {
      return EditPatientRecordComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var _common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../../../common/dialog-box/dialog-box.component */
    "./src/app/components/common/dialog-box/dialog-box.component.ts");
    /* harmony import */


    var _class_common_common_function__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ../../../../class/common/common-function */
    "./src/app/class/common/common-function.ts");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! ../../../../../environments/environment */
    "./src/environments/environment.ts");

    ;

    var EditPatientRecordComponent = /*#__PURE__*/function () {
      function EditPatientRecordComponent(fb, activeRoute, router, httpService, datePipe, cookie, snakBar, dialog, commonFunction) {
        _classCallCheck(this, EditPatientRecordComponent);

        this.fb = fb;
        this.activeRoute = activeRoute;
        this.router = router;
        this.httpService = httpService;
        this.datePipe = datePipe;
        this.cookie = cookie;
        this.snakBar = snakBar;
        this.dialog = dialog;
        this.commonFunction = commonFunction;
        this.htmlText = {
          nav: 'Add Patient',
          header: "Add Report Manually",
          buttonText: "Submit"
        };
        this.ImageData = [];
        this.sliderCount = 0;
        this.paramsId = this.activeRoute.snapshot.params._id;
        this.allCookies = this.cookie.getAll();
        this.allCookies.user_details = JSON.parse(this.allCookies.user_details);
        this.getAllDoctorData();
        this.patientAddEditForm = this.fb.group({
          id: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          patient_name: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(30)]],
          gender: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          birth_date: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          doctor_id: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          doctor_name: ['', []],
          doctor_email: ['', []],
          doctor_details: ['', []],
          tech_id: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          tech_name: ['', []],
          tech_email: ['', []],
          test_date: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          test_completed_date: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          PTGTP: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          PTGTP_value: ['', []],
          PTGVLFI: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          PTGVLFI_value: ['', []],
          IR: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          IR_value: ['', []],
          ESRNO: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          ESRNO_value: ['', []],
          ESRL: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          ESRL_value: ['', []],
          peakC: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          peakC_value: ['', []],
          PTGtype: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          PTGtype_value: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].pattern(_environments_environment__WEBPACK_IMPORTED_MODULE_10__["environment"].floatPattern)]],
          PTGCVD: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          PTGCVD_value: ['', []],
          stressI: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          stressI_value: ['', []],
          RI: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          RI_value: ['', []],
          AIPTG: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          AIPTG_value: ['', []],
          CIsCI: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          CIsCI_value: ['', []],
          pNN50: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          pNN50_value: ['', []],
          RMSSD: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          RMSSD_value: ['', []],
          SDba: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          SDba_value: ['', []],
          SDda: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          SDda_value: ['', []],
          DPRS: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          DPRS_value: ['', []],
          ValsR: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          ValsR_value: ['', []],
          BMI: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          BMI_value: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].pattern(_environments_environment__WEBPACK_IMPORTED_MODULE_10__["environment"].floatPattern)]],
          blood_pressure: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          leave_notes: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          systolic_value: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].pattern(_environments_environment__WEBPACK_IMPORTED_MODULE_10__["environment"].floatPattern)]],
          diastolic_value: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].pattern(_environments_environment__WEBPACK_IMPORTED_MODULE_10__["environment"].floatPattern)]],
          status: [1, []],
          report_type: ['mannual', []]
        });
      }

      _createClass(EditPatientRecordComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          this.getAllPatientData();
        }
      }, {
        key: "getAllDoctorData",
        value: function getAllDoctorData() {
          var _this14 = this;

          var data = {
            source: "data_pece",
            condition: {
              user_type: "doctor",
              status: 1
            },
            token: this.allCookies.jwtToken
          };
          this.httpService.httpViaPost('datalist', data).subscribe(function (response) {
            _this14.htmlText.allDoctor = response.res;
          });
        }
      }, {
        key: "getTechList",
        value: function getTechList(index) {
          var _this15 = this;

          var details = '<p class="doctor_name">';
          details += this.htmlText.allDoctor[index].firstname + ' ' + this.htmlText.allDoctor[index].lastname;
          details += '<p class="doctor_name"> <span> Email: </span>';
          details += this.htmlText.allDoctor[index].email;
          details += '</p><p class="doctor_name"> <span>NPI: </span>';
          details += this.htmlText.allDoctor[index].npi;
          details += '</p>';
          this.patientAddEditForm.patchValue({
            doctor_id: this.htmlText.allDoctor[index]._id,
            doctor_name: this.htmlText.allDoctor[index].firstname + ' ' + this.htmlText.allDoctor[index].lastname,
            doctor_email: this.htmlText.allDoctor[index].email,
            doctor_details: details
          });
          var data = {
            "source": "tech_by_doctor_id",
            "condition": {
              "_id_object": this.htmlText.allDoctor[index]._id,
              "status": 1
            },
            "token": this.allCookies.jwtToken
          };
          this.httpService.httpViaPost('datalist', data).subscribe(function (response) {
            _this15.htmlText.allTech = response.res;
          });
        }
      }, {
        key: "getTechListByID",
        value: function getTechListByID(ID) {
          var _this16 = this;

          var data = {
            "source": "tech_by_doctor_id",
            "condition": {
              "_id_object": ID,
              "status": 1
            },
            "token": this.allCookies.jwtToken
          };
          this.httpService.httpViaPost('datalist', data).subscribe(function (response) {
            _this16.htmlText.allTech = response.res;
          });
        }
      }, {
        key: "selectTech",
        value: function selectTech(techID) {
          for (var loop = 0; loop < this.htmlText.allTech.length; loop++) {
            if (this.htmlText.allTech[loop].tech_id == techID) {
              this.patientAddEditForm.patchValue({
                tech_name: this.htmlText.allTech[loop].firstname + ' ' + this.htmlText.allTech[loop].lastname,
                tech_email: this.htmlText.allTech[loop].email
              });
            }
          }
        }
      }, {
        key: "getAllPatientData",
        value: function getAllPatientData() {
          var _this17 = this;

          this.activeRoute.data.forEach(function (data) {
            _this17.allPatientDataArray = data.patientData.res;
            _this17.ImageData = _this17.allPatientDataArray[0].images;
            /* Date format */

            _this17.allPatientDataArray[0].birth_date = new Date(_this17.allPatientDataArray[0].birth_date);
            _this17.allPatientDataArray[0].test_date = new Date(_this17.allPatientDataArray[0].test_date);
            _this17.allPatientDataArray[0].test_completed_date = new Date(_this17.allPatientDataArray[0].test_completed_date);
            setTimeout(function () {
              _this17.getTechListByID(_this17.allPatientDataArray[0].doctor_id);
            }, 2000);

            _this17.patientAddEditForm.patchValue({
              id: _this17.allPatientDataArray[0]._id,
              patient_name: _this17.allPatientDataArray[0].patient_name,
              gender: _this17.allPatientDataArray[0].gender,
              birth_date: _this17.allPatientDataArray[0].birth_date,
              doctor_id: _this17.allPatientDataArray[0].doctor_id,
              doctor_name: _this17.allPatientDataArray[0].doctor_name,
              doctor_details: _this17.allPatientDataArray[0].doctor_details,
              tech_id: _this17.allPatientDataArray[0].tech_id,
              tech_name: _this17.allPatientDataArray[0].tech_name,
              test_date: _this17.allPatientDataArray[0].test_date,
              test_completed_date: _this17.allPatientDataArray[0].test_completed_date,
              PTGTP: _this17.allPatientDataArray[0].PTGTP,
              PTGTP_value: _this17.allPatientDataArray[0].PTGTP_value,
              PTGVLFI: _this17.allPatientDataArray[0].PTGVLFI,
              PTGVLFI_value: _this17.allPatientDataArray[0].PTGVLFI_value,
              IR: _this17.allPatientDataArray[0].IR,
              IR_value: _this17.allPatientDataArray[0].IR_value,
              ESRNO: _this17.allPatientDataArray[0].ESRNO,
              ESRNO_value: _this17.allPatientDataArray[0].ESRNO_value,
              ESRL: _this17.allPatientDataArray[0].ESRL,
              ESRL_value: _this17.allPatientDataArray[0].ESRL_value,
              peakC: _this17.allPatientDataArray[0].peakC,
              peakC_value: _this17.allPatientDataArray[0].peakC_value,
              PTGtype: _this17.allPatientDataArray[0].PTGtype,
              PTGtype_value: _this17.allPatientDataArray[0].PTGtype_value,
              PTGCVD: _this17.allPatientDataArray[0].PTGCVD,
              PTGCVD_value: _this17.allPatientDataArray[0].PTGCVD_value,
              stressI: _this17.allPatientDataArray[0].stressI,
              stressI_value: _this17.allPatientDataArray[0].stressI_value,
              RI: _this17.allPatientDataArray[0].RI,
              RI_value: _this17.allPatientDataArray[0].RI_value,
              AIPTG: _this17.allPatientDataArray[0].AIPTG,
              AIPTG_value: _this17.allPatientDataArray[0].AIPTG_value,
              CIsCI: _this17.allPatientDataArray[0].CIsCI,
              CIsCI_value: _this17.allPatientDataArray[0].CIsCI_value,
              pNN50: _this17.allPatientDataArray[0].pNN50,
              pNN50_value: _this17.allPatientDataArray[0].pNN50_value,
              RMSSD: _this17.allPatientDataArray[0].RMSSD,
              RMSSD_value: _this17.allPatientDataArray[0].RMSSD_value,
              SDba: _this17.allPatientDataArray[0].SDba,
              SDba_value: _this17.allPatientDataArray[0].SDba_value,
              SDda: _this17.allPatientDataArray[0].SDda,
              SDda_value: _this17.allPatientDataArray[0].SDda_value,
              DPRS: _this17.allPatientDataArray[0].DPRS,
              DPRS_value: _this17.allPatientDataArray[0].DPRS_value,
              ValsR: _this17.allPatientDataArray[0].ValsR,
              ValsR_value: _this17.allPatientDataArray[0].ValsR_value,
              BMI: _this17.allPatientDataArray[0].BMI,
              BMI_value: _this17.allPatientDataArray[0].BMI_value,
              blood_pressure: _this17.allPatientDataArray[0].blood_pressure,
              systolic_value: _this17.allPatientDataArray[0].systolic_value,
              diastolic_value: _this17.allPatientDataArray[0].diastolic_value,
              leave_notes: _this17.allPatientDataArray[0].leave_notes,
              report_type: _this17.allPatientDataArray[0].report_type
            });
          });
        }
      }, {
        key: "patientAddEditFormSubmit",
        value: function patientAddEditFormSubmit() {
          var _this18 = this;

          for (var x in this.patientAddEditForm.controls) {
            this.patientAddEditForm.controls[x].markAsTouched();
          }

          if (this.patientAddEditForm.valid) {
            this.patientAddEditForm.value.birth_date = new Date(this.patientAddEditForm.value.birth_date).getTime();
            this.patientAddEditForm.value.test_date = new Date(this.patientAddEditForm.value.test_date).getTime();
            this.patientAddEditForm.value.test_completed_date = new Date(this.patientAddEditForm.value.test_completed_date).getTime();
            var data = {
              "source": "data_pece",
              "data": this.patientAddEditForm.value,
              "sourceobj": ["doctor_id", "tech_id"],
              "token": this.allCookies.jwtToken
            };
            this.httpService.httpViaPost("addorupdatedata", data).subscribe(function (response) {
              if (response.status = "success") {
                _this18.formDirective.resetForm();
                /* Open modal */


                var _data2 = {
                  width: '250px',
                  data: {
                    header: "Success",
                    message: "Record Saved Updated.",
                    button1: {
                      text: "OK"
                    },
                    button2: {
                      text: ""
                    }
                  }
                };

                _this18.openDialog(_data2);
              }
            });
          }
        }
      }, {
        key: "openDialog",
        value: function openDialog(data) {
          var _this19 = this;

          this.dialogRef = this.dialog.open(_common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_8__["DialogBoxComponent"], data);
          this.dialogRef.afterClosed().subscribe(function (result) {
            switch (result) {
              case "OK":
                _this19.router.navigateByUrl('/admin/dashboard');

                break;
            }
          });
        }
      }, {
        key: "playSlider",
        value: function playSlider(action) {
          switch (action) {
            case 'preview':
              if (this.sliderCount == 0) {
                this.sliderCount = this.ImageData.length - 1;
              } else {
                this.sliderCount--;
              }

              break;

            case 'next':
              if (this.sliderCount + 1 == this.ImageData.length) {
                this.sliderCount = 0;
              } else {
                this.sliderCount++;
              }

              break;
          }
        }
      }, {
        key: "inputUntouch",
        value: function inputUntouch(form, val) {
          form.controls[val].markAsUntouched();
        }
      }]);

      return EditPatientRecordComponent;
    }();

    EditPatientRecordComponent.ctorParameters = function () {
      return [{
        type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__["HttpServiceService"]
      }, {
        type: _angular_common__WEBPACK_IMPORTED_MODULE_5__["DatePipe"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_6__["CookieService"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatSnackBar"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatDialog"]
      }, {
        type: _class_common_common_function__WEBPACK_IMPORTED_MODULE_9__["CommonFunction"]
      }];
    };

    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroupDirective"], {
      "static": false
    })], EditPatientRecordComponent.prototype, "formDirective", void 0);
    EditPatientRecordComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-edit-patient-record',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./edit-patient-record.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/admin-dashboard/edit-patient-record/edit-patient-record.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./edit-patient-record.component.css */
      "./src/app/components/admin/admin-dashboard/edit-patient-record/edit-patient-record.component.css"))["default"]]
    })], EditPatientRecordComponent);
    /***/
  },

  /***/
  "./src/app/components/admin/admin-dashboard/hold-report-job-ticket/hold-report-job-ticket.component.css":
  /*!**************************************************************************************************************!*\
    !*** ./src/app/components/admin/admin-dashboard/hold-report-job-ticket/hold-report-job-ticket.component.css ***!
    \**************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminAdminDashboardHoldReportJobTicketHoldReportJobTicketComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = ".example-card {\n    max-width: 100%;\n  }\n  \n  .example-header-image {\n    background-image: url('account_circle-24px.svg');\n    background-size: cover;\n  }\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9hZG1pbi9hZG1pbi1kYXNoYm9hcmQvaG9sZC1yZXBvcnQtam9iLXRpY2tldC9ob2xkLXJlcG9ydC1qb2ItdGlja2V0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxlQUFlO0VBQ2pCOztFQUVBO0lBQ0UsZ0RBQTZFO0lBQzdFLHNCQUFzQjtFQUN4QiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW4vYWRtaW4tZGFzaGJvYXJkL2hvbGQtcmVwb3J0LWpvYi10aWNrZXQvaG9sZC1yZXBvcnQtam9iLXRpY2tldC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtY2FyZCB7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICB9XG4gIFxuICAuZXhhbXBsZS1oZWFkZXItaW1hZ2Uge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vLi4vLi4vLi4vLi4vYXNzZXRzL2ltYWdlcy9hY2NvdW50X2NpcmNsZS0yNHB4LnN2ZycpO1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIH0iXX0= */";
    /***/
  },

  /***/
  "./src/app/components/admin/admin-dashboard/hold-report-job-ticket/hold-report-job-ticket.component.ts":
  /*!*************************************************************************************************************!*\
    !*** ./src/app/components/admin/admin-dashboard/hold-report-job-ticket/hold-report-job-ticket.component.ts ***!
    \*************************************************************************************************************/

  /*! exports provided: HoldReportJobTicketComponent */

  /***/
  function srcAppComponentsAdminAdminDashboardHoldReportJobTicketHoldReportJobTicketComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "HoldReportJobTicketComponent", function () {
      return HoldReportJobTicketComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../../../common/dialog-box/dialog-box.component */
    "./src/app/components/common/dialog-box/dialog-box.component.ts");
    /* harmony import */


    var _view_job_ticket_image_view_job_ticket_image_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ./view-job-ticket-image/view-job-ticket-image.component */
    "./src/app/components/admin/admin-dashboard/hold-report-job-ticket/view-job-ticket-image/view-job-ticket-image.component.ts");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! ../../../../../environments/environment */
    "./src/environments/environment.ts");

    var HoldReportJobTicketComponent = /*#__PURE__*/function () {
      function HoldReportJobTicketComponent(formBuilder, httpService, cookieService, router, acivatedRoute, snackBar, dialog, _location) {
        _classCallCheck(this, HoldReportJobTicketComponent);

        this.formBuilder = formBuilder;
        this.httpService = httpService;
        this.cookieService = cookieService;
        this.router = router;
        this.acivatedRoute = acivatedRoute;
        this.snackBar = snackBar;
        this.dialog = dialog;
        this._location = _location;
        this.params_id = '';
        this.htmlText = {
          userData: "",
          header: 'Create a job tickets',
          nav: 'Add Doctor',
          buttonText: 'Create',
          message: "Your Job Ticket Added Successfully.",
          oldTickets: [],
          reportId: '',
          ckEditorValue: '',
          ckeditorError: false,
          defaultLoadingImage: "https://www.drupal.org/files/issues/throbber_12.gif"
        };
        this.configData = {
          baseUrl: _environments_environment__WEBPACK_IMPORTED_MODULE_10__["environment"].fileUploadUrl,
          endpoint: "uploads",
          size: "51200",
          format: ["jpg", "jpeg", "png", "gif", "bmp", "pdf", "doc", "docx", "odt", "xls", "xlsx", "ppt", "pptx", "txt", "text"],
          type: "patient-file",
          path: "patientFile",
          prefix: "patient-file",
          formSubmit: false,
          conversionNeeded: 1,
          bucketName: "awsbackend-dev-patient-files"
        };
        this.htmlText.userData = this.cookieService.getAll();
        this.htmlText.user_details = JSON.parse(this.htmlText.userData.user_details);
      }

      _createClass(HoldReportJobTicketComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this20 = this;

          this.acivatedRoute.paramMap.subscribe(function (params) {
            _this20.htmlText.reportId = params.get('_id');
            var data = {
              "source": "data_pece",
              "condition": {
                "_id_object": _this20.htmlText.reportId
              },
              "token": _this20.htmlText.userData.jwtToken
            };

            _this20.httpService.httpViaPost('datalist', data).subscribe(function (response) {
              if (typeof response.res[0].job_tickets_details != 'undefined') {
                _this20.htmlText.header = 'Reply';
                _this20.htmlText.buttonText = "Reply";
                _this20.htmlText.message = "Reply Submited Successfully.";
                _this20.htmlText.oldTickets = response.res[0].job_tickets_details;

                for (var loop1 = 0; loop1 < _this20.htmlText.oldTickets.length; loop1++) {
                  for (var loop2 = 0; loop2 < _this20.htmlText.oldTickets[loop1].files.length; loop2++) {
                    _this20.htmlText.oldTickets[loop1].files[loop2].show = false;
                    _this20.htmlText.oldTickets[loop1].files[loop2].image_path = _this20.htmlText.oldTickets[loop1].files[loop2].basepath + _this20.htmlText.oldTickets[loop1].files[loop2].fileservername;
                  }
                }

                _this20.htmlText.oldTickets.reverse();
              } else {
                _this20.htmlText.oldTickets = [];
              }
            });
          });
        }
      }, {
        key: "createJobTickets",
        value: function createJobTickets() {
          var _this21 = this;

          if (this.htmlText.ckEditorValue.length == 0) {
            this.htmlText.ckeditorError = true;
            return;
          } else {
            this.htmlText.ckeditorError = false;
          }

          if (typeof this.configData.files != 'undefined' && this.configData.files.length > 0) {
            var images_array = [];

            for (var loop in this.configData.files) {
              images_array = images_array.concat({
                "upload_server_id": this.configData.files[loop].upload.data._id,
                "basepath": this.configData.files[loop].upload.data.basepath + '/' + this.configData.path + '/',
                "fileservername": this.configData.files[loop].upload.data.data.fileservername,
                "name": this.configData.files[loop].name,
                "type": this.configData.files[loop].type,
                "bucketname": this.configData.bucketName
              });
            }

            this.htmlText.uploadFiles = images_array;
          } else {
            this.htmlText.uploadFiles = [];
          }

          var data = {
            "source": "data_pece",
            "data": {
              id: this.htmlText.reportId,
              job_tickets_details: {
                user_id: this.htmlText.user_details._id,
                user_type: this.htmlText.user_details.user_type,
                user_name: this.htmlText.user_details.firstname + ' ' + this.htmlText.user_details.lastname,
                description: this.htmlText.ckEditorValue,
                files: this.htmlText.uploadFiles
              },
              job_ticket_status: 'open'
            },
            "token": this.htmlText.userData.jwtToken,
            "job_tickets": true
          };
          this.httpService.httpViaPost("addorupdatedata", data).subscribe(function (response) {
            if (response.status == "success") {
              var _data3 = {
                panelClass: 'jobViewModal',
                data: {
                  header: "Success",
                  message: _this21.htmlText.message,
                  button1: {
                    text: ""
                  },
                  button2: {
                    text: "Close"
                  }
                }
              };
              _this21.dialogRef = _this21.dialog.open(_common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_8__["DialogBoxComponent"], _data3);

              _this21.dialogRef.afterClosed().subscribe(function (result) {
                switch (result) {
                  case "Close":
                    _this21.router.navigate(['/admin/dashboard'], {
                      queryParams: {
                        scroll_position: "Job Tickets"
                      }
                    });

                    break;

                  default:
                    _this21.router.navigate(['/admin/dashboard'], {
                      queryParams: {
                        scroll_position: "Job Tickets"
                      }
                    });

                    break;
                }
              });
            } else {
              _this21.snackBar.open(response.msg, '', {
                duration: 2000
              });
            }
          });
        }
      }, {
        key: "randomNumber",
        value: function randomNumber(min, max) {
          var table = {
            cols: Math.round(Math.random() * (max - min) + min),
            rows: Math.round(Math.random() * (max - min) + min)
          };
          return table;
        }
      }, {
        key: "viewImage",
        value: function viewImage(ticketIndex, fileIndex) {
          var data = {
            panelClass: 'jobViewModal',
            data: {
              allImages: this.htmlText.oldTickets[ticketIndex].files,
              selectImageIndex: fileIndex
            }
          };
          this.dialogRef = this.dialog.open(_view_job_ticket_image_view_job_ticket_image_component__WEBPACK_IMPORTED_MODULE_9__["ViewJobTicketImageComponent"], data);
          this.dialogRef.afterClosed().subscribe(function (result) {
            switch (result) {
              case "Close":
                break;

              default:
                break;
            }
          });
        }
      }, {
        key: "downloadAttachment",
        value: function downloadAttachment(ticketIndex, fileIndex) {
          window.open(this.htmlText.oldTickets[ticketIndex].files[fileIndex].basepath + this.htmlText.oldTickets[ticketIndex].files[fileIndex].fileservername);
        }
      }, {
        key: "changeStatus",
        value: function changeStatus() {
          var _this22 = this;

          var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
          var letModalData = {
            width: '250px',
            data: {
              header: "Alert !!",
              message: "Do you want to change status to " + action + " ?",
              button1: {
                text: "Yes"
              },
              button2: {
                text: "No"
              }
            }
          };
          this.dialogRef = this.dialog.open(_common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_8__["DialogBoxComponent"], letModalData);
          this.dialogRef.afterClosed().subscribe(function (result) {
            switch (result) {
              case "Yes":
                var message = "Status change to ";

                switch (action) {
                  case 'approved':
                    var data = {
                      "source": "data_pece",
                      "data": {
                        id: _this22.htmlText.reportId,
                        status: 11,
                        report_life_circle: {
                          date: 1591791772277,
                          status: 11,
                          status_text: "Biller Admin Approved"
                        }
                      },
                      "token": _this22.htmlText.userData.jwtToken
                    };
                    message += "Approved.";
                    break;

                  case 'not approved':
                    var data = {
                      "source": "data_pece",
                      "data": {
                        id: _this22.htmlText.reportId,
                        status: 12,
                        report_life_circle: {
                          date: 1591791772277,
                          status: 12,
                          status_text: "Biller Admin Not Approved"
                        }
                      },
                      "token": _this22.htmlText.userData.jwtToken
                    };
                    message += "Not Approved.";
                    break;

                  default:
                    break;
                }

                _this22.httpService.httpViaPost("job-tickets-status-change", data).subscribe(function (response) {
                  if (response.status == "success") {
                    var _data4 = {
                      width: '250px',
                      data: {
                        header: "Success",
                        message: message,
                        button1: {
                          text: ""
                        },
                        button2: {
                          text: "Close"
                        }
                      }
                    };
                    _this22.dialogRef = _this22.dialog.open(_common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_8__["DialogBoxComponent"], _data4);

                    _this22.dialogRef.afterClosed().subscribe(function (result) {
                      switch (result) {
                        case "Close":
                          _this22.router.navigateByUrl('/admin/dashboard');

                          break;

                        default:
                          _this22.router.navigateByUrl('/admin/dashboard');

                          break;
                      }
                    });
                  } else {
                    _this22.snackBar.open(response.msg, '', {
                      duration: 2000
                    });
                  }
                });

                break;

              default:
                break;
            }
          });
        }
      }, {
        key: "openDialog",
        value: function openDialog(data) {
          var _this23 = this;

          this.dialogRef = this.dialog.open(_common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_8__["DialogBoxComponent"], data);
          this.dialogRef.afterClosed().subscribe(function (result) {
            switch (result) {
              case "Ok":
                _this23.dialogRef.close();

                break;
            }
          });
        }
      }, {
        key: "hideLoader",
        value: function hideLoader() {
          console.log("complete...");
        }
      }]);

      return HoldReportJobTicketComponent;
    }();

    HoldReportJobTicketComponent.ctorParameters = function () {
      return [{
        type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__["HttpServiceService"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_5__["CookieService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_7__["Router"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_7__["ActivatedRoute"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_6__["MatSnackBar"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_6__["MatDialog"]
      }, {
        type: _angular_common__WEBPACK_IMPORTED_MODULE_2__["Location"]
      }];
    };

    HoldReportJobTicketComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-hold-report-job-ticket',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./hold-report-job-ticket.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/admin-dashboard/hold-report-job-ticket/hold-report-job-ticket.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./hold-report-job-ticket.component.css */
      "./src/app/components/admin/admin-dashboard/hold-report-job-ticket/hold-report-job-ticket.component.css"))["default"]]
    })], HoldReportJobTicketComponent);
    /***/
  },

  /***/
  "./src/app/components/admin/admin-dashboard/hold-report-job-ticket/view-job-ticket-image/view-job-ticket-image.component.css":
  /*!***********************************************************************************************************************************!*\
    !*** ./src/app/components/admin/admin-dashboard/hold-report-job-ticket/view-job-ticket-image/view-job-ticket-image.component.css ***!
    \***********************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminAdminDashboardHoldReportJobTicketViewJobTicketImageViewJobTicketImageComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW4vYWRtaW4tZGFzaGJvYXJkL2hvbGQtcmVwb3J0LWpvYi10aWNrZXQvdmlldy1qb2ItdGlja2V0LWltYWdlL3ZpZXctam9iLXRpY2tldC1pbWFnZS5jb21wb25lbnQuY3NzIn0= */";
    /***/
  },

  /***/
  "./src/app/components/admin/admin-dashboard/hold-report-job-ticket/view-job-ticket-image/view-job-ticket-image.component.ts":
  /*!**********************************************************************************************************************************!*\
    !*** ./src/app/components/admin/admin-dashboard/hold-report-job-ticket/view-job-ticket-image/view-job-ticket-image.component.ts ***!
    \**********************************************************************************************************************************/

  /*! exports provided: ViewJobTicketImageComponent */

  /***/
  function srcAppComponentsAdminAdminDashboardHoldReportJobTicketViewJobTicketImageViewJobTicketImageComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ViewJobTicketImageComponent", function () {
      return ViewJobTicketImageComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/material/dialog */
    "./node_modules/@angular/material/esm2015/dialog.js");

    var ViewJobTicketImageComponent = /*#__PURE__*/function () {
      function ViewJobTicketImageComponent(dialogRef, data) {
        _classCallCheck(this, ViewJobTicketImageComponent);

        this.dialogRef = dialogRef;
        this.data = data;
        this.defaultLoadingImage = "https://www.drupal.org/files/issues/throbber_12.gif";
      }

      _createClass(ViewJobTicketImageComponent, [{
        key: "onNoClick",
        value: function onNoClick() {
          this.dialogRef.close();
        }
      }, {
        key: "imageAction",
        value: function imageAction() {
          var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'next';

          switch (action) {
            case 'previous':
              if (this.data.selectImageIndex == 0) {
                this.data.selectImageIndex = this.data.allImages.length - 1;
              } else {
                this.data.selectImageIndex--;
              }

              break;

            case 'next':
              if (this.data.selectImageIndex == this.data.allImages.length - 1) {
                this.data.selectImageIndex = 0;
              } else {
                this.data.selectImageIndex++;
              }

              break;

            case 'download':
              window.open(this.data.allImages[this.data.selectImageIndex].basepath + this.data.allImages[this.data.selectImageIndex].fileservername);
              break;
          }
        }
      }]);

      return ViewJobTicketImageComponent;
    }();

    ViewJobTicketImageComponent.ctorParameters = function () {
      return [{
        type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"]
      }, {
        type: undefined,
        decorators: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
          args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"]]
        }]
      }];
    };

    ViewJobTicketImageComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-view-job-ticket-image',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./view-job-ticket-image.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/admin-dashboard/hold-report-job-ticket/view-job-ticket-image/view-job-ticket-image.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./view-job-ticket-image.component.css */
      "./src/app/components/admin/admin-dashboard/hold-report-job-ticket/view-job-ticket-image/view-job-ticket-image.component.css"))["default"]]
    }), tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"]))], ViewJobTicketImageComponent);
    /***/
  },

  /***/
  "./src/app/components/admin/admin-dashboard/job-ticket-patient-reports/job-ticket-patient-reports.component.css":
  /*!**********************************************************************************************************************!*\
    !*** ./src/app/components/admin/admin-dashboard/job-ticket-patient-reports/job-ticket-patient-reports.component.css ***!
    \**********************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminAdminDashboardJobTicketPatientReportsJobTicketPatientReportsComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW4vYWRtaW4tZGFzaGJvYXJkL2pvYi10aWNrZXQtcGF0aWVudC1yZXBvcnRzL2pvYi10aWNrZXQtcGF0aWVudC1yZXBvcnRzLmNvbXBvbmVudC5jc3MifQ== */";
    /***/
  },

  /***/
  "./src/app/components/admin/admin-dashboard/job-ticket-patient-reports/job-ticket-patient-reports.component.ts":
  /*!*********************************************************************************************************************!*\
    !*** ./src/app/components/admin/admin-dashboard/job-ticket-patient-reports/job-ticket-patient-reports.component.ts ***!
    \*********************************************************************************************************************/

  /*! exports provided: JobTicketPatientReportsComponent */

  /***/
  function srcAppComponentsAdminAdminDashboardJobTicketPatientReportsJobTicketPatientReportsComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "JobTicketPatientReportsComponent", function () {
      return JobTicketPatientReportsComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var ngx_device_detector__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ngx-device-detector */
    "./node_modules/ngx-device-detector/fesm2015/ngx-device-detector.js");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../../../../../environments/environment */
    "./src/environments/environment.ts");
    /* harmony import */


    var moment__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! moment */
    "./node_modules/moment/moment.js");
    /* harmony import */


    var moment__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_8__);

    var moment = moment__WEBPACK_IMPORTED_MODULE_8__;

    var JobTicketPatientReportsComponent = /*#__PURE__*/function () {
      // lib list end
      function JobTicketPatientReportsComponent(router, cookieService, http, activatedRoute, dialog, deviceService, matSnackBar) {
        _classCallCheck(this, JobTicketPatientReportsComponent);

        this.router = router;
        this.cookieService = cookieService;
        this.http = http;
        this.activatedRoute = activatedRoute;
        this.dialog = dialog;
        this.deviceService = deviceService;
        this.matSnackBar = matSnackBar;
        this.loginUserData = {};
        this.jwtToken = "";
        this.htmlText = {
          headerText: "Patient Reports"
        };
        this.allResolveData = {}; // Lib list

        this.allBillerData = [];
        this.billerData_count = 0;
        this.allUserData_skip = ["_id", "report_file_type", "tech_id", "tech_email", "batch_name", "report_type", "status", "file_basepath", "file_bucketname", "file_name", "file_original_name", "file_type", "converted_image", "images", "patient_details", "patient_name_search", "report_life_circle", "note", "additional_potential_health_risks", "cpt_codes", "created_at", "doctor_name"];
        this.editUrl = "admin/biller-management/edit";
        this.libdata = {
          basecondition: {
            status: {
              $gt: 10,
              $lt: 14
            },
            job_tickets_details: {
              $exists: true
            }
          },
          updateendpoint: '',
          custombuttons: [{
            label: "View Report",
            route: "admin/view-patient-record/",
            type: 'internallink',
            param: ['_id']
          }, {
            label: "Tech Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-tech-details',
            datafields: ['first name', 'last name', 'email', 'phone', 'address', 'city', 'state', 'zip'],
            param: 'id',
            headermessage: 'Tech Info'
          }, {
            label: "View Codes",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-codes-details',
            datafields: ['Additional Potential Health Risks', 'CPT Codes', 'ICD Codes'],
            param: 'id',
            headermessage: 'Associated Codes'
          }, {
            label: "Doctor Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-doctor-details',
            datafields: ['firstname', 'lastname', 'email', 'fax', 'practice_name', 'npi', 'phone', 'address', 'city', 'state', 'zip'],
            param: 'id',
            headermessage: 'Doctor Info'
          }, {
            label: "Doctor Office Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-doctor-office-details',
            datafields: ['center name', 'first name', 'last name', 'email', 'phone', 'address', 'city', 'state', 'zip'],
            param: 'id',
            headermessage: 'Doctor Office Info'
          }, {
            label: "Parent Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-parent-details',
            datafields: ['Parent Name', 'Contact Person', 'email', 'phone', 'address', 'city', 'state', 'zip'],
            cond: "parent_check_flag",
            condval: 1,
            param: 'id',
            headermessage: 'Parent Information'
          }, {
            label: "View Jobticket",
            route: "admin/report-jobtickets/",
            type: 'internallink',
            param: ['_id'],
            cond: 'status',
            condval: 13
          }],
          hideeditbutton: true,
          hidedeletebutton: true,
          hidestatustogglebutton: true,
          hideviewbutton: true,
          tableheaders: ["patient_name", "status_text", "created_at_datetime", "status_datetime", "cpt_addl", "general_details"]
        };
        this.allUserData_modify_header = {
          "general_details": "Related Info",
          "patient_name": "Patient Name",
          "status_text": "Status",
          "created_at_datetime": "Report Added",
          "status_datetime": "Last Status Time",
          "cpt_addl": "CPT/ Addl Hrisk C"
        };
        this.UpdateEndpoint = "addorupdatedata";
        this.deleteEndpoint = "deletesingledata";
        this.apiUrl = _environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].apiBaseUrl1;
        this.tableName = "data_pece";
        this.datacollection = 'getPatientlistdata-approved';
        this.sortdata = {
          "type": 'desc',
          "field": 'patient_name',
          "options": ['patient_name', 'created_at_datetime']
        };
        this.limitcond = {
          "limit": 10,
          "skip": 0,
          "pagecount": 1
        };
        this.previewModal_detail_skip = ['_id', 'user_type', 'status', 'password', 'created_at'];
        this.cptcodes = [{
          val: "95923",
          'name': '95923'
        }, {
          val: "95943",
          'name': '95943'
        }, {
          val: "95921",
          'name': "95921"
        }, {
          val: "93923",
          'name': "93923"
        }, {
          val: "93922",
          'name': "93922"
        }];
        this.status = [{
          val: 1,
          'name': 'Active'
        }, {
          val: 0,
          'name': 'Inactive'
        }];
        this.parent_type = [{
          val: "admin",
          'name': 'Admin'
        }, {
          val: "diagnostic_admin",
          'name': 'Diagnostic Admin'
        }, {
          val: "distributors",
          'name': 'Distributor'
        }, {
          val: "doctor_group",
          'name': 'Doctor Group'
        }];
        this.report_type = [{
          val: "RM-3A",
          'name': 'RM-3A'
        }, {
          val: "TM FLOW V3",
          'name': 'TM FLOW V3'
        }, {
          val: "TM FLOW V4",
          'name': 'TM FLOW V4'
        }, {
          val: "CMAT with BP Cuffs",
          'name': 'CMAT with BP Cuffs'
        }];
        this.SearchingEndpoint = "datalist";
        this.authval = [];
        this.docofficeval = [];
        this.techval = [];
        this.parentnameval = [];
        this.doctorcity = [];
        this.doctorstate = [];
        this.patientcity = [];
        this.patientstate = [];
        this.SearchingSourceName = "data_biller_list";
        this.search_settings = {
          selectsearch: [{
            label: 'Search By Report Type',
            field: 'report_file_type',
            values: this.report_type
          }, {
            label: 'Search By Parent Type',
            field: 'parent_type',
            values: this.parent_type
          }, {
            label: 'Search By CPT Codes',
            field: 'cpt_codes_search',
            values: this.cptcodes
          }, {
            label: "Search By Doctor",
            field: 'doc_name_search',
            values: this.authval
          }, {
            label: "Search By Tech",
            field: 'tech_name_search',
            values: this.techval
          }, {
            label: "Search By Doctor Office",
            field: 'doctor_ofiice_name_search',
            values: this.docofficeval
          }, {
            label: "Search By Parent Name",
            field: 'parent_name_search',
            values: this.parentnameval
          }, {
            label: "Search By Doctor City",
            field: 'doctor_city_search',
            values: this.doctorcity
          }, {
            label: "Search By Doctor State",
            field: 'doctor_state_search',
            values: this.doctorstate
          }, {
            label: "Search By Patient City",
            field: 'patient_state_search',
            values: this.patientcity
          }, {
            label: "Search By Patient State",
            field: 'patient_city_search',
            values: this.patientstate
          }],
          datesearch: [{
            startdatelabel: "Start Date",
            enddatelabel: "End Date",
            submit: "Search",
            field: "created_at_datetime"
          }],
          textsearch: [{
            label: "Search By Patient Name",
            field: 'patient_name_search'
          }]
        };
        this.loginUserData["user_details"] = cookieService.getAll();
        this.loginUserData["jwtToken"] = cookieService.get('jwtToken');
        /* Get Auth Token */

        this.jwtToken = cookieService.get('jwtToken'); // Get report datalist

        this.getReportData();
      }

      _createClass(JobTicketPatientReportsComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          this.getSearchData();
        }
      }, {
        key: "ngAfterViewInit",
        value: function ngAfterViewInit() {}
      }, {
        key: "getReportData",
        value: function getReportData() {
          var _this24 = this;

          this.billerData_count = 0;
          this.allBillerData = []; // lib list

          var data = {
            "condition": {
              "limit": 10,
              "skip": 0
            },
            "sort": {
              "field": "patient_name",
              "type": "desc"
            },
            "searchcondition": {
              "parent_id": this.loginUserData.user_details._id
            },
            "secretkey": "na"
          };
          data.searchcondition.report_type = {
            $exists: true
          };
          data.searchcondition.job_tickets_details = {
            $exists: true
          };
          this.libdata.basecondition.job_tickets_details = {
            $exists: true
          }; // API Hit

          this.http.httpViaPost('dashboard-report-data-list', data).subscribe(function (res) {
            _this24.allBillerData = res.results.res;
            _this24.billerData_count = res.results.data_count;
          }, function (error) {
            console.log('Oooops!');
          });
        }
      }, {
        key: "getSearchData",
        value: function getSearchData() {
          var _this25 = this;

          var data = {
            "source": "patient_data_desc_patient_name",
            "condition": {
              "status": {
                $gt: 10
              },
              job_tickets_details: {
                $exists: true
              }
            },
            "token": this.jwtToken
          };
          this.http.httpViaPost("datalist", data).subscribe(function (response) {
            var start = false;
            var count = 0;

            for (var i in response.res) {
              if (response.res[i].doc_name_search != "") {
                for (var j in _this25.authval) {
                  if (response.res[i].doc_name == _this25.authval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this25.authval.push({
                    name: response.res[i].doc_name,
                    val: response.res[i].doc_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].tech_name_search != "") {
                for (var j in _this25.techval) {
                  if (response.res[i].tech_namesearch == _this25.techval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this25.techval.push({
                    name: response.res[i].tech_namesearch,
                    val: response.res[i].tech_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].parent_name_search != "") {
                for (var j in _this25.parentnameval) {
                  if (response.res[i].parent_namesearch == _this25.parentnameval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this25.parentnameval.push({
                    name: response.res[i].parent_namesearch,
                    val: response.res[i].parent_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].doctor_state_search != "") {
                for (var j in _this25.doctorstate) {
                  if (response.res[i].doctor_state == _this25.doctorstate[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this25.doctorstate.push({
                    name: response.res[i].doctor_state,
                    val: response.res[i].doctor_state_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].doctor_city_search != "") {
                for (var j in _this25.doctorcity) {
                  if (response.res[i].doctor_city == _this25.doctorcity[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this25.doctorcity.push({
                    name: response.res[i].doctor_city,
                    val: response.res[i].doctor_city_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].patient_city_search != "") {
                for (var j in _this25.patientcity) {
                  if (response.res[i].patient_city == _this25.patientcity[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this25.patientcity.push({
                    name: response.res[i].patient_city,
                    val: response.res[i].patient_city_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].patient_state_search != "") {
                for (var j in _this25.patientstate) {
                  if (response.res[i].patient_state == _this25.patientstate[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this25.patientstate.push({
                    name: response.res[i].patient_state,
                    val: response.res[i].patient_state_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].doctor_ofiice_name_search != "") {
                for (var j in _this25.docofficeval) {
                  if (response.res[i].doctor_ofiice_namesearch == _this25.docofficeval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this25.docofficeval.push({
                    name: response.res[i].doctor_ofiice_namesearch,
                    val: response.res[i].doctor_ofiice_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }
          }, function (error) {
            console.log('Oooops!');
          });
        }
      }]);

      return JobTicketPatientReportsComponent;
    }();

    JobTicketPatientReportsComponent.ctorParameters = function () {
      return [{
        type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__["HttpServiceService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatDialog"]
      }, {
        type: ngx_device_detector__WEBPACK_IMPORTED_MODULE_6__["DeviceDetectorService"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatSnackBar"]
      }];
    };

    JobTicketPatientReportsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-job-ticket-patient-reports',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./job-ticket-patient-reports.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/admin-dashboard/job-ticket-patient-reports/job-ticket-patient-reports.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./job-ticket-patient-reports.component.css */
      "./src/app/components/admin/admin-dashboard/job-ticket-patient-reports/job-ticket-patient-reports.component.css"))["default"]]
    })], JobTicketPatientReportsComponent);
    /***/
  },

  /***/
  "./src/app/components/admin/admin-dashboard/view-all-button-list/view-all-button-list.component.css":
  /*!**********************************************************************************************************!*\
    !*** ./src/app/components/admin/admin-dashboard/view-all-button-list/view-all-button-list.component.css ***!
    \**********************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminAdminDashboardViewAllButtonListViewAllButtonListComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW4vYWRtaW4tZGFzaGJvYXJkL3ZpZXctYWxsLWJ1dHRvbi1saXN0L3ZpZXctYWxsLWJ1dHRvbi1saXN0LmNvbXBvbmVudC5jc3MifQ== */";
    /***/
  },

  /***/
  "./src/app/components/admin/admin-dashboard/view-all-button-list/view-all-button-list.component.ts":
  /*!*********************************************************************************************************!*\
    !*** ./src/app/components/admin/admin-dashboard/view-all-button-list/view-all-button-list.component.ts ***!
    \*********************************************************************************************************/

  /*! exports provided: ViewAllButtonListComponent */

  /***/
  function srcAppComponentsAdminAdminDashboardViewAllButtonListViewAllButtonListComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ViewAllButtonListComponent", function () {
      return ViewAllButtonListComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var ngx_device_detector__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ngx-device-detector */
    "./node_modules/ngx-device-detector/fesm2015/ngx-device-detector.js");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../../../../../environments/environment */
    "./src/environments/environment.ts");
    /* harmony import */


    var moment__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! moment */
    "./node_modules/moment/moment.js");
    /* harmony import */


    var moment__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_8__);

    var moment = moment__WEBPACK_IMPORTED_MODULE_8__;

    var ViewAllButtonListComponent = /*#__PURE__*/function () {
      // lib list end
      function ViewAllButtonListComponent(router, cookieService, http, activatedRoute, dialog, deviceService, matSnackBar) {
        _classCallCheck(this, ViewAllButtonListComponent);

        this.router = router;
        this.cookieService = cookieService;
        this.http = http;
        this.activatedRoute = activatedRoute;
        this.dialog = dialog;
        this.deviceService = deviceService;
        this.matSnackBar = matSnackBar;
        this.viewFlagData = "";
        this.loginUserData = {};
        this.jwtToken = "";
        this.htmlText = {
          headerText: "Patient Reports"
        };
        this.allResolveData = {}; // Lib list

        this.allBillerData = [];
        this.billerData_count = 0;
        this.allUserData_skip = ["_id", "report_file_type", "tech_id", "tech_email", "batch_name", "report_type", "status", "file_basepath", "file_bucketname", "file_name", "file_original_name", "file_type", "converted_image", "images", "patient_details", "patient_name_search", "report_life_circle", "note", "additional_potential_health_risks", "cpt_codes", "created_at", "doctor_name"];
        this.editUrl = "admin/biller-management/edit";
        this.libdata = {
          basecondition: {},
          updateendpoint: '',
          custombuttons: [{
            label: "View Report",
            route: "admin/view-patient-record/",
            type: 'internallink',
            param: ['_id']
          }, {
            label: "Tech Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-tech-details',
            datafields: ['first name', 'last name', 'email', 'phone', 'address', 'city', 'state', 'zip'],
            param: 'id',
            headermessage: 'Tech Info'
          }, {
            label: "View Codes",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-codes-details',
            datafields: ['Additional Potential Health Risks', 'CPT Codes', 'ICD Codes'],
            param: 'id',
            headermessage: 'Associated Codes'
          }, {
            label: "Doctor Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-doctor-details',
            datafields: ['firstname', 'lastname', 'email', 'fax', 'practice_name', 'npi', 'phone', 'address', 'city', 'state', 'zip'],
            param: 'id',
            headermessage: 'Doctor Info'
          }, {
            label: "Doctor Office Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-doctor-office-details',
            datafields: ['center name', 'first name', 'last name', 'email', 'phone', 'address', 'city', 'state', 'zip'],
            param: 'id',
            headermessage: 'Doctor Office Info'
          }, {
            label: "Parent Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-parent-details',
            datafields: ['Parent Name', 'Contact Person', 'email', 'phone', 'address', 'city', 'state', 'zip'],
            cond: "parent_check_flag",
            condval: 1,
            param: 'id',
            headermessage: 'Parent Information'
          }, {
            label: "View Jobticket",
            route: "admin/report-jobtickets/",
            type: 'internallink',
            param: ['_id'],
            cond: 'status',
            condval: 13
          }],
          hideeditbutton: true,
          hidedeletebutton: true,
          hidestatustogglebutton: true,
          hideviewbutton: true,
          tableheaders: ["patient_name", "status_text", "created_at_datetime", "status_datetime", "cpt_addl", "general_details"]
        };
        this.allUserData_modify_header = {
          "general_details": "Related Info",
          "patient_name": "Patient Name",
          "status_text": "Status",
          "created_at_datetime": "Report Added",
          "status_datetime": "Last Status Time",
          "cpt_addl": "CPT/ Addl Hrisk C"
        };
        this.UpdateEndpoint = "addorupdatedata";
        this.deleteEndpoint = "deletesingledata";
        this.apiUrl = _environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].apiBaseUrl;
        this.tableName = "data_pece";
        this.datacollection = 'dashboard-report-data-list';
        this.sortdata = {
          "type": 'desc',
          "field": 'patient_name',
          "options": ['patient_name', 'created_at_datetime']
        };
        this.limitcond = {
          "limit": 10,
          "skip": 0,
          "pagecount": 1
        };
        this.previewModal_detail_skip = ['_id', 'user_type', 'status', 'password', 'created_at'];
        this.cptcodes = [{
          val: "95923",
          'name': '95923'
        }, {
          val: "95943",
          'name': '95943'
        }, {
          val: "95921",
          'name': "95921"
        }, {
          val: "93923",
          'name': "93923"
        }, {
          val: "93922",
          'name': "93922"
        }];
        this.status = [{
          val: 11,
          'name': 'Biller Admin Approved'
        }, {
          val: 12,
          'name': 'Biller Admin Not Approved'
        }, {
          val: 13,
          'name': "Biller Admin Hold"
        }, {
          val: 14,
          'name': "Doctor Signed"
        }, {
          val: 15,
          'name': "Sent to Biller"
        }, {
          val: 16,
          "name": "Report Downloaded"
        }];
        this.parent_type = [{
          val: "admin",
          'name': 'Admin'
        }, {
          val: "diagnostic_admin",
          'name': 'Diagnostic Admin'
        }, {
          val: "distributors",
          'name': 'Distributor'
        }, {
          val: "doctor_group",
          'name': 'Doctor Group'
        }];
        this.report_type = [{
          val: "RM-3A",
          'name': 'RM-3A'
        }, {
          val: "TM FLOW V3",
          'name': 'TM FLOW V3'
        }, {
          val: "TM FLOW V4",
          'name': 'TM FLOW V4'
        }, {
          val: "CMAT with BP Cuffs",
          'name': 'CMAT with BP Cuffs'
        }];
        this.report = [{
          val: "Biller Admin Approved",
          'name': 'Biller Admin Approved'
        }, {
          val: "Biller Admin Not Approved",
          'name': 'Biller Admin Not Approved'
        }, {
          val: "Biller Admin Hold",
          'name': "Biller Admin Hold"
        }];
        this.SearchingEndpoint = "datalist";
        this.authval = [];
        this.docofficeval = [];
        this.techval = [];
        this.parentnameval = [];
        this.doctorcity = [];
        this.doctorstate = [];
        this.patientcity = [];
        this.patientstate = [];
        this.SearchingSourceName = "data_biller_list";
        this.search_settings = {
          selectsearch: [{
            label: 'Search By Report Type',
            field: 'report_file_type',
            values: this.report_type
          }, {
            label: 'Search By Parent Type',
            field: 'parent_type',
            values: this.parent_type
          }, {
            label: 'Search By CPT Codes',
            field: 'cpt_codes_search',
            values: this.cptcodes
          }, {
            label: "Search By Doctor",
            field: 'doc_name_search',
            values: this.authval
          }, {
            label: "Search By Tech",
            field: 'tech_name_search',
            values: this.techval
          }, {
            label: "Search By Doctor Office",
            field: 'doctor_ofiice_name_search',
            values: this.docofficeval
          }, {
            label: "Search By Parent Name",
            field: 'parent_name_search',
            values: this.parentnameval
          }, {
            label: "Search By Doctor City",
            field: 'doctor_city_search',
            values: this.doctorcity
          }, {
            label: "Search By Doctor State",
            field: 'doctor_state_search',
            values: this.doctorstate
          }, {
            label: "Search By Patient City",
            field: 'patient_city_search',
            values: this.patientcity
          }, {
            label: "Search By Patient State",
            field: 'patient_state_search',
            values: this.patientstate
          }],
          datesearch: [{
            startdatelabel: "Start Date",
            enddatelabel: "End Date",
            submit: "Search",
            field: "created_at_datetime"
          }],
          textsearch: [{
            label: "Search By Patient Name",
            field: 'patient_name_search'
          }]
        };
        this.loginUserData["user_details"] = cookieService.getAll();
        this.loginUserData["jwtToken"] = cookieService.get('jwtToken');
        /* Get Auth Token */

        this.jwtToken = cookieService.get('jwtToken');
      }

      _createClass(ViewAllButtonListComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          this.getSearchData();
        }
      }, {
        key: "ngAfterViewInit",
        value: function ngAfterViewInit() {}
      }, {
        key: "viewReportProcessData",
        value: function viewReportProcessData() {
          var _this26 = this;

          var flag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
          this.billerData_count = 0;
          this.allBillerData = []; // lib list

          var data = {
            "condition": {
              "limit": 10,
              "skip": 0
            },
            "sort": {
              "field": "patient_name",
              "type": "desc"
            },
            "searchcondition": {
              "parent_id": this.loginUserData.user_details._id
            },
            "secretkey": "na"
          };

          switch (flag) {
            case 'Total Number of Reports Added':
              data.searchcondition.report_type = {
                $exists: true
              };
              data.searchcondition.status = {
                $gte: 3
              };
              this.libdata.basecondition.status = {
                $gte: 3
              }; // Add status search filed

              this.deleteStatusSearchField();
              var searchData = this.search_settings.selectsearch;
              searchData.push({
                label: 'Search By Status',
                field: 'status',
                values: this.status
              });
              this.search_settings.selectsearch = [];
              this.search_settings.selectsearch = searchData;
              break;

            case 'Total Number of Report Processed':
              data.searchcondition.report_type = {
                $exists: true
              };
              data.searchcondition.status = {
                $gte: 8
              }; // this.libdata.basecondition.status = { $gte: 11 };
              // Add status search filed

              this.deleteStatusSearchField();
              var searchData = this.search_settings.selectsearch;
              searchData.push({
                label: 'Search By Status',
                field: 'status',
                values: this.status
              });
              this.search_settings.selectsearch = [];
              this.search_settings.selectsearch = searchData;
              break;

            case 'Total Number of Report Signed':
              data.searchcondition.report_type = {
                $exists: true
              };
              data.searchcondition.status = {
                $eq: 14
              };
              this.libdata.basecondition.status = {
                $eq: 14
              }; // delete status filter

              this.deleteStatusSearchField();
              break;

            case 'Sent to Biller':
              data.searchcondition.report_type = {
                $exists: true
              };
              data.searchcondition.status = {
                $eq: 15
              };
              this.libdata.basecondition.status = {
                $eq: 15
              }; // delete status filter

              this.deleteStatusSearchField();
              break;

            case 'Reports Downloaded':
              data.searchcondition.report_type = {
                $exists: true
              };
              data.searchcondition.status = {
                $eq: 16
              };
              this.libdata.basecondition.status = {
                $eq: 16
              }; // delete status filter

              this.deleteStatusSearchField();
              break;

            case 'Reports Pending Sing':
              data.searchcondition.report_type = {
                $exists: true
              };
              data.searchcondition.status = {
                $eq: 11
              };
              this.libdata.basecondition.status = {
                $eq: 11
              };
              this.deleteStatusSearchField();
              break;
          } // API Hit


          this.http.httpViaPost('dashboard-report-data-list', data).subscribe(function (res) {
            _this26.allBillerData = res.results.res;
            _this26.billerData_count = res.results.data_count;
          }, function (error) {
            console.log('Oooops!');
          });
        }
      }, {
        key: "deleteStatusSearchField",
        value: function deleteStatusSearchField() {
          // Delete Status Filter Field
          var searchData = this.search_settings.selectsearch;

          for (var loop in searchData) {
            if (searchData[loop].label == 'Search By Status') {
              searchData.splice(loop, 1);
            }
          }

          this.search_settings.selectsearch = [];
          this.search_settings.selectsearch = searchData;
        }
      }, {
        key: "getSearchData",
        value: function getSearchData() {
          var _this27 = this;

          var data = {
            "source": "patient_data_desc_patient_name",
            "condition": {
              "status": {
                $gt: 10
              },
              job_tickets_details: {
                $exists: true
              }
            },
            "token": this.jwtToken
          };
          this.http.httpViaPost("datalist", data).subscribe(function (response) {
            var start = false;
            var count = 0;

            for (var i in response.res) {
              if (response.res[i].doc_name_search != "") {
                for (var j in _this27.authval) {
                  if (response.res[i].doc_name == _this27.authval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this27.authval.push({
                    name: response.res[i].doc_name,
                    val: response.res[i].doc_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].tech_name_search != "") {
                for (var j in _this27.techval) {
                  if (response.res[i].tech_namesearch == _this27.techval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this27.techval.push({
                    name: response.res[i].tech_namesearch,
                    val: response.res[i].tech_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].parent_name_search != "") {
                for (var j in _this27.parentnameval) {
                  if (response.res[i].parent_namesearch == _this27.parentnameval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this27.parentnameval.push({
                    name: response.res[i].parent_namesearch,
                    val: response.res[i].parent_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].doctor_state_search != "") {
                for (var j in _this27.doctorstate) {
                  if (response.res[i].doctor_state == _this27.doctorstate[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this27.doctorstate.push({
                    name: response.res[i].doctor_state,
                    val: response.res[i].doctor_state_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].doctor_city_search != "") {
                for (var j in _this27.doctorcity) {
                  if (response.res[i].doctor_city == _this27.doctorcity[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this27.doctorcity.push({
                    name: response.res[i].doctor_city,
                    val: response.res[i].doctor_city_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].patient_city_search != "") {
                for (var j in _this27.patientcity) {
                  if (response.res[i].patient_city == _this27.patientcity[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this27.patientcity.push({
                    name: response.res[i].patient_city,
                    val: response.res[i].patient_city_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].patient_state_search != "") {
                for (var j in _this27.patientstate) {
                  if (response.res[i].patient_state == _this27.patientstate[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this27.patientstate.push({
                    name: response.res[i].patient_state,
                    val: response.res[i].patient_state_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].doctor_ofiice_name_search != "") {
                for (var j in _this27.docofficeval) {
                  if (response.res[i].doctor_ofiice_namesearch == _this27.docofficeval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this27.docofficeval.push({
                    name: response.res[i].doctor_ofiice_namesearch,
                    val: response.res[i].doctor_ofiice_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }
          }, function (error) {
            console.log('Oooops!');
          });
        }
      }, {
        key: "viewFlag",
        set: function set(viewFlagData) {
          this.viewFlagData = viewFlagData;
          this.viewReportProcessData(this.viewFlagData);
        }
      }]);

      return ViewAllButtonListComponent;
    }();

    ViewAllButtonListComponent.ctorParameters = function () {
      return [{
        type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__["HttpServiceService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatDialog"]
      }, {
        type: ngx_device_detector__WEBPACK_IMPORTED_MODULE_6__["DeviceDetectorService"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatSnackBar"]
      }];
    };

    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], ViewAllButtonListComponent.prototype, "viewFlag", null);
    ViewAllButtonListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-view-all-button-list',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./view-all-button-list.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/admin-dashboard/view-all-button-list/view-all-button-list.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./view-all-button-list.component.css */
      "./src/app/components/admin/admin-dashboard/view-all-button-list/view-all-button-list.component.css"))["default"]]
    })], ViewAllButtonListComponent);
    /***/
  },

  /***/
  "./src/app/components/admin/admin-footer/admin-footer.component.css":
  /*!**************************************************************************!*\
    !*** ./src/app/components/admin/admin-footer/admin-footer.component.css ***!
    \**************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminAdminFooterAdminFooterComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = ".footer_section{ display: block; border-top: 1px solid #c7c7c7; margin-top: 30px; background: #e0e5eb; padding: 10px; margin: 0;\n  width: 100%; \n  /* z-index: 1; position: fixed; bottom: -100px; transition: all 200ms; */\n }\n.footer_section .footer_content{ width: 600px; padding: 0 16px; margin: 0 auto; display: block; text-align: center; }\n.footer_section .footer_content .link{ margin-top: 10px; display: block; margin-bottom: 6px; }\n.footer_section .footer_content .link a:nth-of-type(1){ border-right: 1px solid #797979; padding-right: 5px; }\n.footer_section .footer_content .link a, .footer_section .footer_content p{ font-size: 16px; font-family: \"AvenirLight\"; color: #797979; text-decoration: none;}\n.footer_content p{ margin: 0; margin-bottom: 5px; }\n/* .sticky {\n  position: fixed;\n  bottom: 0px;\n} */\n@media screen and (max-width: 1199px){\n  .sticky {\n    position: inherit;\n    bottom: 0px;\n}\n}\n@media screen and (max-width: 668px){\n  .footer_section .footer_content { width: auto; }\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9hZG1pbi9hZG1pbi1mb290ZXIvYWRtaW4tZm9vdGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCLGNBQWMsRUFBRSw2QkFBNkIsRUFBRSxnQkFBZ0IsRUFBRSxtQkFBbUIsRUFBRSxhQUFhLEVBQUUsU0FBUztFQUM3SCxXQUFXO0VBQ1gsd0VBQXdFO0NBQ3pFO0FBQ0QsaUNBQWlDLFlBQVksRUFBRSxlQUFlLEVBQUUsY0FBYyxFQUFFLGNBQWMsRUFBRSxrQkFBa0IsRUFBRTtBQUNwSCx1Q0FBdUMsZ0JBQWdCLEVBQUUsY0FBYyxFQUFFLGtCQUFrQixFQUFFO0FBQzdGLHdEQUF3RCwrQkFBK0IsRUFBRSxrQkFBa0IsRUFBRTtBQUM3Ryw0RUFBNEUsZUFBZSxFQUFFLDBCQUEwQixFQUFFLGNBQWMsRUFBRSxxQkFBcUIsQ0FBQztBQUMvSixtQkFBbUIsU0FBUyxFQUFFLGtCQUFrQixFQUFFO0FBRWxEOzs7R0FHRztBQUNIO0VBQ0U7SUFDRSxpQkFBaUI7SUFDakIsV0FBVztBQUNmO0FBQ0E7QUFDQTtFQUNFLGtDQUFrQyxXQUFXLEVBQUU7QUFDakQiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2FkbWluL2FkbWluLWZvb3Rlci9hZG1pbi1mb290ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb290ZXJfc2VjdGlvbnsgZGlzcGxheTogYmxvY2s7IGJvcmRlci10b3A6IDFweCBzb2xpZCAjYzdjN2M3OyBtYXJnaW4tdG9wOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZTBlNWViOyBwYWRkaW5nOiAxMHB4OyBtYXJnaW46IDA7XG4gIHdpZHRoOiAxMDAlOyBcbiAgLyogei1pbmRleDogMTsgcG9zaXRpb246IGZpeGVkOyBib3R0b206IC0xMDBweDsgdHJhbnNpdGlvbjogYWxsIDIwMG1zOyAqL1xuIH1cbi5mb290ZXJfc2VjdGlvbiAuZm9vdGVyX2NvbnRlbnR7IHdpZHRoOiA2MDBweDsgcGFkZGluZzogMCAxNnB4OyBtYXJnaW46IDAgYXV0bzsgZGlzcGxheTogYmxvY2s7IHRleHQtYWxpZ246IGNlbnRlcjsgfVxuLmZvb3Rlcl9zZWN0aW9uIC5mb290ZXJfY29udGVudCAubGlua3sgbWFyZ2luLXRvcDogMTBweDsgZGlzcGxheTogYmxvY2s7IG1hcmdpbi1ib3R0b206IDZweDsgfVxuLmZvb3Rlcl9zZWN0aW9uIC5mb290ZXJfY29udGVudCAubGluayBhOm50aC1vZi10eXBlKDEpeyBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjNzk3OTc5OyBwYWRkaW5nLXJpZ2h0OiA1cHg7IH1cbi5mb290ZXJfc2VjdGlvbiAuZm9vdGVyX2NvbnRlbnQgLmxpbmsgYSwgLmZvb3Rlcl9zZWN0aW9uIC5mb290ZXJfY29udGVudCBweyBmb250LXNpemU6IDE2cHg7IGZvbnQtZmFtaWx5OiBcIkF2ZW5pckxpZ2h0XCI7IGNvbG9yOiAjNzk3OTc5OyB0ZXh0LWRlY29yYXRpb246IG5vbmU7fVxuLmZvb3Rlcl9jb250ZW50IHB7IG1hcmdpbjogMDsgbWFyZ2luLWJvdHRvbTogNXB4OyB9XG5cbi8qIC5zdGlja3kge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIGJvdHRvbTogMHB4O1xufSAqL1xuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTE5OXB4KXtcbiAgLnN0aWNreSB7XG4gICAgcG9zaXRpb246IGluaGVyaXQ7XG4gICAgYm90dG9tOiAwcHg7XG59XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA2NjhweCl7XG4gIC5mb290ZXJfc2VjdGlvbiAuZm9vdGVyX2NvbnRlbnQgeyB3aWR0aDogYXV0bzsgfVxufVxuIl19 */";
    /***/
  },

  /***/
  "./src/app/components/admin/admin-footer/admin-footer.component.ts":
  /*!*************************************************************************!*\
    !*** ./src/app/components/admin/admin-footer/admin-footer.component.ts ***!
    \*************************************************************************/

  /*! exports provided: AdminFooterComponent */

  /***/
  function srcAppComponentsAdminAdminFooterAdminFooterComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AdminFooterComponent", function () {
      return AdminFooterComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");

    var AdminFooterComponent = /*#__PURE__*/function () {
      function AdminFooterComponent() {
        _classCallCheck(this, AdminFooterComponent);

        this.htmlData = {};
        this.htmlData["year"] = new Date().getFullYear();
      }

      _createClass(AdminFooterComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }]);

      return AdminFooterComponent;
    }();

    AdminFooterComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-admin-footer',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./admin-footer.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/admin-footer/admin-footer.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./admin-footer.component.css */
      "./src/app/components/admin/admin-footer/admin-footer.component.css"))["default"]]
    })], AdminFooterComponent);
    /***/
  },

  /***/
  "./src/app/components/admin/admin-header/admin-header.component.css":
  /*!**************************************************************************!*\
    !*** ./src/app/components/admin/admin-header/admin-header.component.css ***!
    \**************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminAdminHeaderAdminHeaderComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "/* header css */\n\n.techdashboard_header { height: auto; padding: 0; background: #fff; box-shadow: 0px 2px 7px 2px #b7b7b7; margin: 20px 0; }\n\n.techdashboard_header .header_wrapper{ width: 1400px; margin: 0 auto; display: flex; align-items: center; justify-content: space-between;}\n\n.techdashboard_header .logo_wrapper { max-width: 160px; display: block; cursor: pointer; flex: none; }\n\n.techdashboard_header .logo_wrapper:focus { outline: none; border: none; }\n\n.techdashboard_header .logo_wrapper img { max-width: 100%; vertical-align: middle; }\n\n.techdashboard_header .quotation { margin-bottom: 0px; }\n\n.techdashboard_header .quotation p { font-family: \"RobotoMedium\"; font-size: 30px; color: #002035; text-transform: uppercase; margin: 0; }\n\n.techdashboard_header .profile_section button { padding-top: 8px; }\n\n.techdashboard_header .profile_section {  display: flex; padding-left: 5px;  margin-bottom: 0;  justify-content: center; position: relative;  align-items: center; }\n\n.techdashboard_header .profile_section::before{ content: ''; position: absolute; width: 1.5px; height: 20px; background: #908d8d;\nleft: -1px;}\n\n.techdashboard_header .profile_section .username { padding-right: 10px; display: block; font-family: \"AvenirRoman\";\nfont-size: 16px; color: #1f1f1f;}\n\n.techdashboard_header .quotation .mat-list-base { display: flex; padding-top: 0; }\n\n/* .techdashboard_header .quotation .mat-list-base .mat-list-item:before {\n  content: \"\";\n  left: -15px;\n  width: 2px;\n  height: 15px;\n  background: #1c1c1c;\n  display: inline-block;\n  position: absolute;\n  top: 35%;\n} */\n\n.techdashboard_header .quotation .mat-nav-list .mat-list-item { margin: 0; position: relative; font-family: \"AvenirMedium\"; font-size: 16px; color: #767676;}\n\n.active { color: #000000!important; \n   /* border-bottom: 3px solid #fecb00; position: relative; */\n  }\n\n.active::before{ content: ''; width: 100%; height: 4px; background: #fecb00; position: absolute; bottom: -25px; }\n\n/*End header css */\n\n.togle_menu { display: none;}\n\n.sticky { position: fixed; top: 0; margin: 0; z-index: 1; }\n\n@media screen and (max-width: 1540px) {\n  .techdashboard_header .header_wrapper { width: 90%; }\n\n}\n\n@media screen and (max-width: 1500px) {\n  .techdashboard_header .quotation .mat-nav-list .mat-list-item {\n    margin: 0px;\n    position: relative;\n  }\n  .techdashboard_header .quotation p { font-size: 22px; }\n  .content_wrapper .itemsection {\n    padding-bottom: 36px;\n  }\n  .techdashboard_header .logo_wrapper { max-width: 120px; }\n  .active::before { bottom: -13px; }\n}\n\n@media screen and (max-width: 1440px) {\n  .content_wrapper .itemsection p { line-height: 26px; font-size: 24px; }\n}\n\n@media screen and (max-width: 1400px) {\n  .techdashboard_header .header_wrapper {width: 95%; }\n}\n\n@media screen and (max-width: 1366px) {\n  .techdashboard_header .quotation .mat-nav-list .mat-list-item { margin: 0; font-size: 13px; } \n  .techdashboard_header .profile_section .username { font-size: 13px; } \n}\n\n@media screen and (max-width: 1280px) {\n  .techdashboard_header .profile_section { padding-left: 8px; }\n  .techdashboard_header .quotation .mat-nav-list .mat-list-item .mat-list-base .mat-list-item .mat-list-item-content {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    box-sizing: border-box;\n    padding: 0 10px;\n    position: relative;\n    height: inherit;\n  }\n}\n\n@media screen and (max-width: 1240px) {\n  .doctor_content_wrapper { background: #012035; }\n  .techdashboard_header .quotation .mat-nav-list .mat-list-item { font-size: 14px; }\n}\n\n@media screen and (max-width: 1199px) {\n.doctor_content_wrapper .table_structure { width: 100%; }\n.patient_report_section .button_action { width: 970px; }\n.patient_report_section .button_action button { width: 475px; font-size: 20px;  padding: 8px; }\n.content_wrapper { display: flex; justify-content: center; align-items: center; text-align: center; flex-wrap: wrap;\n}\n  .content_wrapper .itemsection { width: 31%; margin: 15px 12px; }\n  .doctor_content_wrapper { padding: 40px 30px; }\n  .doctor_content_wrapper .mat-card-title { font-size: 36px; margin-bottom: 20px; }\n  .table_structure .mat-list-item .title_n { font-size: 26px; }\n  .table_structure .mat-list-item .title_a { font-size: 22px; }\n  .content_wrapper .itemsection p { width: 100%; font-size: 22px; }\n  .techdashboard_header { height: auto; flex-direction: column; }\n  .techdashboard_header .header_wrapper { flex-direction: column; }\n  .techdashboard_header .profile_section::before{ display: none;}\n}\n\n@media screen and (max-width: 1100px) {\n  .techdashboard_header .header_wrapper { width: 100%; flex-direction: column;   box-sizing: border-box; }\n  .techdashboard_header .logo_wrapper { max-width: 160px; } \n  .techdashboard_header .profile_section { padding-left: 0; border: none; }\n  .techdashboard_header .profile_section .username { font-size: 16px; }\n  .active { color: #000000!important; border-bottom: 3px solid #fecb00; position: relative; }\n  .active::before{ content: ''; display: none;}\n  .techdashboard_header .quotation .mat-nav-list .mat-list-item { font-size: 13px; }\n}\n\n@media screen and (max-width: 1080px) { \n  .doctor_content_wrapper { padding: 40px 20px; }\n  .doctor_content_wrapper .mat-card-title { font-size: 32px; margin-bottom: 20px; }\n  .table_structure .mat-list-item .title_n { font-size: 22px; }\n  .table_structure .mat-list-item .title_a { font-size: 20px; }\n}\n\n@media screen and (max-width: 1038px) {\n  .content_wrapper .itemsection { width: 30.9%; }\n}\n\n@media screen and (max-width: 991px) {\n  .doctor_content_wrapper { text-align: center; }\n  .patient_report_section .patient_top_search { display: flex; align-items: center; flex-direction: column; }\n  .patient_report_section .patient_top_search .search_bar { margin-bottom: 20px; }\n  .patient_report_section .button_action button { padding: 8px 30px; margin: 0 10px; width: 100%; }\n  .patient_report_section .button_action { width: auto; margin: 0 5px; display: flex; justify-content: center;\n  }\n\n  .content_wrapper .itemsection { width: 30.8%; }\n  .table_structure .mat-list-item .title_a { font-size: 16px; }\n  .togle_menu { display: block; margin-top: 10px; background: #f8c655; color: #fff; position: absolute;\n  right: 20px; min-width: auto; padding: 0 6px; line-height: inherit; border-radius: 3px;}\n  .techdashboard_header .quotation { display: none; width: 100%; background: #ffd06f;}\n  .techdashboard_header .quotation .mat-list-base { display: block; }\n  .techdashboard_header .quotation .mat-nav-list .mat-list-item { margin: 0;\n  align-items: center; justify-content: center; display: flex; background: #fff3da; margin: 1px 0; }\n  .techdashboard_header .quotation .mat-nav-list .mat-list-item:nth-child(1) { margin-top: 0; }\n  .techdashboard_header .quotation .mat-list-base .mat-list-item:before {\n   content: \"\"; left: -15px; width: 2px; height: 15px; background: #1c1c1c; display: inline-block;\n   position: absolute; top: 35%; display: none; }\n  .techdashboard_header .quotation .mat-nav-list .mat-list-item { font-size: 16px; }\n}\n\n@media screen and (max-width: 970px) {\n  .patient_report_section .button_action button {\n    width: auto;\n  }\n  .table_structure .mat-list-item .title_n {\n    font-size: 18px;\n  }\n  .one {\n    background: linear-gradient(100deg, #f9c856, #dd671d);\n  }\n  .two {\n    background: linear-gradient(100deg, #0973d1, #05335a);\n  }\n  .three {\n    background: linear-gradient(100deg, #44cf80, #26a555);\n  }\n}\n\n@media screen and (max-width: 950px) {\n  .content_wrapper .itemsection {\n    width: 30.8%;\n  }\n  .content_wrapper .itemsection p {\n    font-size: 20px;\n  }\n  .table_structure .mat-list-base .mat-list-item, .mat-list-base .mat-list-option {\n    margin-bottom: 16px;\n  }\n}\n\n@media screen and (max-width: 850px) {\n  .content_wrapper .itemsection {\n    width: 30.2%;\n  }\n  /* hiding searchbar */\n  .patient_report_section .patient_top_search .search_bar {\n    margin-bottom: 20px;\n    display: none;\n  }\n  .techdashboard_header {\n    padding: 0 16px;\n    flex-direction: column;\n  }\n}\n\n@media screen and (max-width: 768px) {\n  .content_wrapper .itemsection {\n    width: 100%;\n    margin: 16px;\n    margin-bottom: 0;\n  }\n  .content_wrapper .itemsection:nth-last-child(1) {\n    margin-bottom: 16px;\n  }\n  .patient_report_section .button_action {\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n  }\n  .patient_report_section .button_action button {\n    margin-bottom: 16px;\n    word-break: break-word;\n    white-space: normal;\n    line-height: 22px;\n  }\n  .techdashboard_header {\n    padding: 0 16px;\n  }\n  .techdashboard_header .quotation p {\n    margin: 16px 0;\n  }\n  .doctor_content_wrapper {\n    padding: 20px 0px;\n  }\n  .table_structure .mat-list-item .title_a {\n    font-size: 14px;\n  }\n  .doctor_content_wrapper .mat-card-title {\n    font-size: 28px;\n    margin-bottom: 5px;\n    text-align: left;\n    padding: 0 16px;\n  }\n  .table_structure .mat-list-base .mat-list-item, .mat-list-base .mat-list-option {\n    margin-bottom: 16px;\n  }\n  .footer_section .footer_content {\n    width: auto;\n  }\n  .table_structure .mat-list-base .mat-list-item, .mat-list-base .mat-list-option {\n    display: flex;\n    text-align: left;\n  }\n}\n\n@media screen and (max-width: 480px) {\n  .doctor_content_wrapper .mat-card-title {\n    font-size: 24px;\n  }\n  .patient_report_section .patient_top_search h1 {\n    font-size: 24px;\n  }\n}\n\n.danger {\n  display: block!important;\n  margin-top: 20px;\n  transition: 5px ease-out;\n}\n/*# sourceMappingURL=data:application/json;base64, */";
    /***/
  },

  /***/
  "./src/app/components/admin/admin-header/admin-header.component.ts":
  /*!*************************************************************************!*\
    !*** ./src/app/components/admin/admin-header/admin-header.component.ts ***!
    \*************************************************************************/

  /*! exports provided: AdminHeaderComponent */

  /***/
  function srcAppComponentsAdminAdminHeaderAdminHeaderComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AdminHeaderComponent", function () {
      return AdminHeaderComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _class_common_common_function__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../class/common/common-function */
    "./src/app/class/common/common-function.ts");

    var AdminHeaderComponent = /*#__PURE__*/function () {
      function AdminHeaderComponent(cookies, router, commonFunction) {
        _classCallCheck(this, AdminHeaderComponent);

        this.cookies = cookies;
        this.router = router;
        this.commonFunction = commonFunction;
        this.status = true;
        this.user_data = {};
        this.loader = true; // sticky section

        this.isSticky = false;
        window.scroll(0, 0);
        var user_details = {};
        var allData = this.cookies.getAll();
        this.user_details = JSON.parse(allData.user_details);
        this.user_cookie = cookies.get('jwtToken');
      }

      _createClass(AdminHeaderComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          /* Set Meta Data */
          this.commonFunction.setTitleMetaTags();
        }
        /**logout function start here**/

      }, {
        key: "logout",
        value: function logout() {
          var _this28 = this;

          this.cookies["delete"]('jwtToken');
          this.cookies["delete"]('user_details');
          this.cookies.deleteAll();
          setTimeout(function () {
            _this28.router.navigateByUrl('logout');
          }, 1000);
        }
        /**logout function end here**/
        // don't remove it's for menu toggleing

      }, {
        key: "menuFunction",
        value: function menuFunction() {
          this.status = !this.status;
        }
      }]);

      return AdminHeaderComponent;
    }();

    AdminHeaderComponent.ctorParameters = function () {
      return [{
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"]
      }, {
        type: _class_common_common_function__WEBPACK_IMPORTED_MODULE_4__["CommonFunction"]
      }];
    };

    AdminHeaderComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-admin-header',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./admin-header.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/admin-header/admin-header.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./admin-header.component.css */
      "./src/app/components/admin/admin-header/admin-header.component.css"))["default"]]
    })], AdminHeaderComponent);
    /***/
  },

  /***/
  "./src/app/components/admin/admin-management/add-edit/add-edit.component.css":
  /*!***********************************************************************************!*\
    !*** ./src/app/components/admin/admin-management/add-edit/add-edit.component.css ***!
    \***********************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminAdminManagementAddEditAddEditComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n\n\n\n\n\n\n\n\n\n@media screen and (max-width: 1460px){\n  .techdashboard_header .mat-toolbar-row .quotation p { font-size: 24px; line-height: 26px;}\n}\n@media screen and (max-width: 1366px){\n.add_form .submit_form button {font-size: 22px;}\n}\n@media screen and (max-width: 1199px){\n  .add_form .submit_form button{ font-size: 18px; }\n}\n@media screen and (max-width: 991px){\n.techdashboard_header .mat-toolbar-row { flex-direction: column; padding: 20px;}\n.techdashboard_header .mat-toolbar-row .quotation p { margin-top: 16px; }\n.add_form .submit_form{ display: flex; flex-wrap: wrap; }\n}\n@media screen and (max-width: 768px){\n  .add_form .form_wrapper .mat-form-field { width: 100%; margin: 0; }\n}\n@media screen and (max-width: 680px){\n  .add_form .submit_form button { margin-bottom: 16px;}\n}\n@media screen and (max-width: 576px){\n.add_form .submit_form button { font-size: 22px; padding: 2px; }\n\n.add_form .submit_form button { width: 100%; margin: 0; margin-top: 20px; }\n.add_form .submit_form { display: flex; flex-direction: column-reverse; text-align: center; margin-top: 0px; }\n.add_form .submit_form button:nth-child(1) { margin-right: 0; margin-top: 20px; }\n}\n@media screen and (max-width: 360px){\n.techdashboard_header .mat-toolbar-row .quotation p { font-size: 16px; line-height: 22px; }\n.add_form h2 { font-size: 22px; line-height: 24px; text-align: center; }\n}\n#menu_button{ display: none;}\n.add_header{ display: flex; margin: 0 16px;}\n.add_header button{ margin-left: auto;\n  background: linear-gradient(180deg, #fac855, #e47e2a)!important;\n  text-transform: uppercase;\n  font-family: \"RobotoBlack\"; padding-top: 4px;\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9hZG1pbi9hZG1pbi1tYW5hZ2VtZW50L2FkZC1lZGl0L2FkZC1lZGl0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQVVBO0VBQ0Usc0RBQXNELGVBQWUsRUFBRSxpQkFBaUIsQ0FBQztBQUMzRjtBQUNBO0FBQ0EsK0JBQStCLGVBQWUsQ0FBQztBQUMvQztBQUNBO0VBQ0UsK0JBQStCLGVBQWUsRUFBRTtBQUNsRDtBQUVBO0FBQ0EseUNBQXlDLHNCQUFzQixFQUFFLGFBQWEsQ0FBQztBQUMvRSxzREFBc0QsZ0JBQWdCLEVBQUU7QUFDeEUsd0JBQXdCLGFBQWEsRUFBRSxlQUFlLEVBQUU7QUFDeEQ7QUFDQTtFQUNFLDBDQUEwQyxXQUFXLEVBQUUsU0FBUyxFQUFFO0FBQ3BFO0FBQ0E7RUFDRSxnQ0FBZ0MsbUJBQW1CLENBQUM7QUFDdEQ7QUFDQTtBQUNBLGdDQUFnQyxlQUFlLEVBQUUsWUFBWSxFQUFFOztBQUUvRCxnQ0FBZ0MsV0FBVyxFQUFFLFNBQVMsRUFBRSxnQkFBZ0IsRUFBRTtBQUMxRSx5QkFBeUIsYUFBYSxFQUFFLDhCQUE4QixFQUFFLGtCQUFrQixFQUFFLGVBQWUsRUFBRTtBQUM3Ryw2Q0FBNkMsZUFBZSxFQUFFLGdCQUFnQixFQUFFO0FBQ2hGO0FBRUE7QUFDQSxzREFBc0QsZUFBZSxFQUFFLGlCQUFpQixFQUFFO0FBQzFGLGVBQWUsZUFBZSxFQUFFLGlCQUFpQixFQUFFLGtCQUFrQixFQUFFO0FBQ3ZFO0FBSUEsY0FBYyxhQUFhLENBQUM7QUFFNUIsYUFBYSxhQUFhLEVBQUUsY0FBYyxDQUFDO0FBQzNDLG9CQUFvQixpQkFBaUI7RUFDbkMsK0RBQStEO0VBQy9ELHlCQUF5QjtFQUN6QiwwQkFBMEIsRUFBRSxnQkFBZ0I7QUFDOUMiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2FkbWluL2FkbWluLW1hbmFnZW1lbnQvYWRkLWVkaXQvYWRkLWVkaXQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuXG5cblxuXG5cblxuXG5cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTQ2MHB4KXtcbiAgLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5tYXQtdG9vbGJhci1yb3cgLnF1b3RhdGlvbiBwIHsgZm9udC1zaXplOiAyNHB4OyBsaW5lLWhlaWdodDogMjZweDt9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMzY2cHgpe1xuLmFkZF9mb3JtIC5zdWJtaXRfZm9ybSBidXR0b24ge2ZvbnQtc2l6ZTogMjJweDt9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMTk5cHgpe1xuICAuYWRkX2Zvcm0gLnN1Ym1pdF9mb3JtIGJ1dHRvbnsgZm9udC1zaXplOiAxOHB4OyB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDk5MXB4KXtcbi50ZWNoZGFzaGJvYXJkX2hlYWRlciAubWF0LXRvb2xiYXItcm93IHsgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgcGFkZGluZzogMjBweDt9XG4udGVjaGRhc2hib2FyZF9oZWFkZXIgLm1hdC10b29sYmFyLXJvdyAucXVvdGF0aW9uIHAgeyBtYXJnaW4tdG9wOiAxNnB4OyB9XG4uYWRkX2Zvcm0gLnN1Ym1pdF9mb3JteyBkaXNwbGF5OiBmbGV4OyBmbGV4LXdyYXA6IHdyYXA7IH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KXtcbiAgLmFkZF9mb3JtIC5mb3JtX3dyYXBwZXIgLm1hdC1mb3JtLWZpZWxkIHsgd2lkdGg6IDEwMCU7IG1hcmdpbjogMDsgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjgwcHgpe1xuICAuYWRkX2Zvcm0gLnN1Ym1pdF9mb3JtIGJ1dHRvbiB7IG1hcmdpbi1ib3R0b206IDE2cHg7fVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTc2cHgpe1xuLmFkZF9mb3JtIC5zdWJtaXRfZm9ybSBidXR0b24geyBmb250LXNpemU6IDIycHg7IHBhZGRpbmc6IDJweDsgfVxuXG4uYWRkX2Zvcm0gLnN1Ym1pdF9mb3JtIGJ1dHRvbiB7IHdpZHRoOiAxMDAlOyBtYXJnaW46IDA7IG1hcmdpbi10b3A6IDIwcHg7IH1cbi5hZGRfZm9ybSAuc3VibWl0X2Zvcm0geyBkaXNwbGF5OiBmbGV4OyBmbGV4LWRpcmVjdGlvbjogY29sdW1uLXJldmVyc2U7IHRleHQtYWxpZ246IGNlbnRlcjsgbWFyZ2luLXRvcDogMHB4OyB9XG4uYWRkX2Zvcm0gLnN1Ym1pdF9mb3JtIGJ1dHRvbjpudGgtY2hpbGQoMSkgeyBtYXJnaW4tcmlnaHQ6IDA7IG1hcmdpbi10b3A6IDIwcHg7IH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMzYwcHgpe1xuLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5tYXQtdG9vbGJhci1yb3cgLnF1b3RhdGlvbiBwIHsgZm9udC1zaXplOiAxNnB4OyBsaW5lLWhlaWdodDogMjJweDsgfVxuLmFkZF9mb3JtIGgyIHsgZm9udC1zaXplOiAyMnB4OyBsaW5lLWhlaWdodDogMjRweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9XG59XG5cblxuXG4jbWVudV9idXR0b257IGRpc3BsYXk6IG5vbmU7fVxuXG4uYWRkX2hlYWRlcnsgZGlzcGxheTogZmxleDsgbWFyZ2luOiAwIDE2cHg7fVxuLmFkZF9oZWFkZXIgYnV0dG9ueyBtYXJnaW4tbGVmdDogYXV0bztcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDE4MGRlZywgI2ZhYzg1NSwgI2U0N2UyYSkhaW1wb3J0YW50O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBmb250LWZhbWlseTogXCJSb2JvdG9CbGFja1wiOyBwYWRkaW5nLXRvcDogNHB4O1xufVxuIl19 */";
    /***/
  },

  /***/
  "./src/app/components/admin/admin-management/add-edit/add-edit.component.ts":
  /*!**********************************************************************************!*\
    !*** ./src/app/components/admin/admin-management/add-edit/add-edit.component.ts ***!
    \**********************************************************************************/

  /*! exports provided: AddEditComponent, ChangePasswordAdminModal */

  /***/
  function srcAppComponentsAdminAdminManagementAddEditAddEditComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AddEditComponent", function () {
      return AddEditComponent;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ChangePasswordAdminModal", function () {
      return ChangePasswordAdminModal;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../../../../../environments/environment */
    "./src/environments/environment.ts");

    var AddEditComponent = /*#__PURE__*/function () {
      function AddEditComponent(fb, datePipe, httpService, cookie, router, snackBar, activeRoute, dialog) {
        _classCallCheck(this, AddEditComponent);

        this.fb = fb;
        this.datePipe = datePipe;
        this.httpService = httpService;
        this.cookie = cookie;
        this.router = router;
        this.snackBar = snackBar;
        this.activeRoute = activeRoute;
        this.dialog = dialog;
        this.params_id = '';
        this.htmlText = {
          userData: "",
          header: 'Add New Admin',
          nav: 'Add Admin',
          buttonText: 'Save',
          message: "Submitted Successfully"
        };
        this.taxo_array = [];
        this.htmlText.userData = cookie.getAll();

        if (this.activeRoute.snapshot.params._id) {
          this.generateAddEditForm('edit');
          this.htmlText.message = "Updated Successfully";
          this.htmlText.header = 'Edit Admin Record';
          this.htmlText.nav = 'Edit Admin';
          this.htmlText.buttonText = 'Update';
          this.params_id = this.activeRoute.snapshot.params._id;
        } else {
          this.generateAddEditForm('add');
        }
      }

      _createClass(AddEditComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }, {
        key: "generateAddEditForm",
        value: function generateAddEditForm() {
          var _this29 = this;

          var flag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
          var validateRule = {
            id: ['', []],
            firstname: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(50)]],
            lastname: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(50)]],
            email: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].email, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(100)]],
            phone: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(7), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(16)]],
            user_type: ['admin', []],
            status: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
            password: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(16), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(6)]],
            confirmpassword: []
          };
          var passwordRule = {
            validator: this.machpassword('password', 'confirmpassword')
          };

          switch (flag) {
            case 'edit':
              delete validateRule.password;
              delete validateRule.confirmpassword;
              this.adminManagementAddEditForm = this.fb.group(validateRule);
              this.activeRoute.data.forEach(function (data) {
                var AdminSingleData = data.adminsingleData.res;

                _this29.adminManagementAddEditForm.controls['id'].patchValue(AdminSingleData[0]._id);

                _this29.adminManagementAddEditForm.controls['firstname'].patchValue(AdminSingleData[0].firstname);

                _this29.adminManagementAddEditForm.controls['lastname'].patchValue(AdminSingleData[0].lastname);

                _this29.adminManagementAddEditForm.controls['email'].patchValue(AdminSingleData[0].email);

                _this29.adminManagementAddEditForm.controls['phone'].patchValue(AdminSingleData[0].phone);

                _this29.adminManagementAddEditForm.controls['status'].patchValue(AdminSingleData[0].status);
              });
              break;

            case 'add':
              delete validateRule.id;
              this.adminManagementAddEditForm = this.fb.group(validateRule, passwordRule);
              break;
          }
        }
      }, {
        key: "validateEmailNotTaken",
        value: function validateEmailNotTaken(control) {
          var _this30 = this;

          return function (control) {
            return _this30.httpService.checkingDuplicateEmail(control.value).subscribe(function (res) {
              if (res.data.length == 0) {
                return {
                  emailTaken: false
                };
              } else {
                return {
                  emailTaken: true
                };
              }
            });
          };
        }
      }, {
        key: "machpassword",
        value: function machpassword(passwordkye, confirmpasswordkye) {
          return function (group) {
            var passwordInput = group.controls[passwordkye],
                confirmpasswordInput = group.controls[confirmpasswordkye];

            if (passwordInput.value !== confirmpasswordInput.value) {
              return confirmpasswordInput.setErrors({
                notEquivalent: true
              });
            } else {
              return confirmpasswordInput.setErrors(null);
            }
          };
        }
        /**for validation purpose**/

      }, {
        key: "inputUntouch",
        value: function inputUntouch(form, val) {
          form.controls[val].markAsUntouched();
        }
      }, {
        key: "openDialog",
        value: function openDialog(x) {
          this.dialogRef = this.dialog.open(ChangePasswordAdminModal, {
            data: {
              message: x,
              'id': this.params_id
            }
          });
          this.dialogRef.afterClosed().subscribe(function (result) {});
        }
      }, {
        key: "AdminManagementAddFormSubmit",
        value: function AdminManagementAddFormSubmit() {
          var _this31 = this;

          for (var x in this.adminManagementAddEditForm.controls) {
            this.adminManagementAddEditForm.controls[x].markAsTouched();
          }

          if (this.adminManagementAddEditForm.valid) {
            delete this.adminManagementAddEditForm.value.confirmpassword;

            if (this.adminManagementAddEditForm.value.status) {
              this.adminManagementAddEditForm.value.status = parseInt("1");
            } else {
              this.adminManagementAddEditForm.value.status = parseInt("0");
            }

            var data = {
              "source": "data_pece",
              "data": this.adminManagementAddEditForm.value,
              "token": this.htmlText.userData.jwtToken,
              "domainurl": _environments_environment__WEBPACK_IMPORTED_MODULE_8__["environment"].siteBaseUrl + 'reset-password'
            };
            this.httpService.httpViaPost("addorupdatedata", data).subscribe(function (response) {
              if (response.status == 'success') {
                _this31.snackBar.open(_this31.htmlText.message, "Ok", {
                  duration: 2000
                });

                _this31.formDirective.resetForm();

                setTimeout(function () {
                  _this31.router.navigateByUrl('/admin/admin-management');
                }, 1000);
              } else {
                _this31.snackBar.open("An error occoed. Error code: F-AEA-TS-164.", "Ok", {
                  duration: 2000
                });
              }
            });
          }
        }
      }]);

      return AddEditComponent;
    }();

    AddEditComponent.ctorParameters = function () {
      return [{
        type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]
      }, {
        type: _angular_common__WEBPACK_IMPORTED_MODULE_3__["DatePipe"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__["HttpServiceService"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_5__["CookieService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_6__["Router"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatSnackBar"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_6__["ActivatedRoute"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatDialog"]
      }];
    };

    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroupDirective"], {
      "static": false
    })], AddEditComponent.prototype, "formDirective", void 0);
    AddEditComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-add-edit',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./add-edit.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/admin-management/add-edit/add-edit.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./add-edit.component.css */
      "./src/app/components/admin/admin-management/add-edit/add-edit.component.css"))["default"]]
    })], AddEditComponent);

    var ChangePasswordAdminModal = /*#__PURE__*/function () {
      function ChangePasswordAdminModal(dialogRef, fb, httpService, cookie, activeRoute, data) {
        _classCallCheck(this, ChangePasswordAdminModal);

        this.dialogRef = dialogRef;
        this.fb = fb;
        this.httpService = httpService;
        this.cookie = cookie;
        this.activeRoute = activeRoute;
        this.data = data;
        this.changePwdForm = _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroup"];
        this.params_id = data.id;
        this.user_token = cookie.get('jwtToken');
        this.changePwdForm = this.fb.group({
          password: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
          confirmpassword: []
        }, {
          validators: this.matchpassword('password', 'confirmpassword')
        });
      }

      _createClass(ChangePasswordAdminModal, [{
        key: "matchpassword",
        value: function matchpassword(passwordkye, confirmpasswordkye) {
          return function (group) {
            var passwordInput = group.controls[passwordkye],
                confirmpasswordInput = group.controls[confirmpasswordkye];

            if (passwordInput.value !== confirmpasswordInput.value) {
              return confirmpasswordInput.setErrors({
                notEquivalent: true
              });
            } else {
              return confirmpasswordInput.setErrors(null);
            }
          };
        }
      }, {
        key: "changePasswordFormSubmit",
        value: function changePasswordFormSubmit() {
          var x;

          for (x in this.changePwdForm.controls) {
            this.changePwdForm.controls[x].markAsTouched();
          }

          if (this.changePwdForm.valid) {
            delete this.changePwdForm.value.confirmpassword;
            var data = {
              "_id": this.params_id,
              "adminflag": 1,
              "newPassword": this.changePwdForm.value.password
            };
            this.httpService.httpViaPost('changepassword', data).subscribe(function (response) {
              console.log("response", response);
            });
          }
        }
      }]);

      return ChangePasswordAdminModal;
    }();

    ChangePasswordAdminModal.ctorParameters = function () {
      return [{
        type: _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatDialogRef"]
      }, {
        type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__["HttpServiceService"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_5__["CookieService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_6__["ActivatedRoute"]
      }, {
        type: undefined,
        decorators: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
          args: [_angular_material__WEBPACK_IMPORTED_MODULE_7__["MAT_DIALOG_DATA"]]
        }]
      }];
    };

    ChangePasswordAdminModal = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'dialogtest',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./modal.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/admin-management/add-edit/modal.html"))["default"]
    }), tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](5, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_7__["MAT_DIALOG_DATA"]))], ChangePasswordAdminModal);
    /***/
  },

  /***/
  "./src/app/components/admin/admin-management/manage-admin-list/manage-admin-list.component.css":
  /*!*****************************************************************************************************!*\
    !*** ./src/app/components/admin/admin-management/manage-admin-list/manage-admin-list.component.css ***!
    \*****************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminAdminManagementManageAdminListManageAdminListComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW4vYWRtaW4tbWFuYWdlbWVudC9tYW5hZ2UtYWRtaW4tbGlzdC9tYW5hZ2UtYWRtaW4tbGlzdC5jb21wb25lbnQuY3NzIn0= */";
    /***/
  },

  /***/
  "./src/app/components/admin/admin-management/manage-admin-list/manage-admin-list.component.ts":
  /*!****************************************************************************************************!*\
    !*** ./src/app/components/admin/admin-management/manage-admin-list/manage-admin-list.component.ts ***!
    \****************************************************************************************************/

  /*! exports provided: ManageAdminListComponent */

  /***/
  function srcAppComponentsAdminAdminManagementManageAdminListManageAdminListComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ManageAdminListComponent", function () {
      return ManageAdminListComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");

    var ManageAdminListComponent = /*#__PURE__*/function () {
      function ManageAdminListComponent(activatedRoute, cookie, httpService) {
        _classCallCheck(this, ManageAdminListComponent);

        this.activatedRoute = activatedRoute;
        this.cookie = cookie;
        this.httpService = httpService;
        this.TechDashboardAllData = [];
        this.adminData_count = 0;
        this.allUserData_skip = ["_id", "user_type", "password", "created_at", "access_code", "address", "city", "state", "updated_at", "zip", "name_search"];
        this.editUrl = "admin/admin-management/edit";
        this.allUserData_modify_header = {
          "firstname": "First Name",
          "lastname": "Last Name",
          "email": "Email",
          "phone": "Phone Number",
          "status": "Status"
        };
        this.UpdateEndpoint = "addorupdatedata";
        this.deleteEndpoint = "deletesingledata";
        this.previewModal_skip = ["_id", "user_type", "password", "created_at", "access_code", "updated_at"];
        this.tableName = "data_pece";
        this.status = [{
          val: 1,
          'name': 'Active'
        }, {
          val: 0,
          'name': 'Inactive'
        }];
        this.SearchingEndpoint = "datalist";
        this.SearchingSourceName = "data_admin_list";
        this.datacollection = 'getadminlistdata';
        this.sortdata = {
          "type": 'desc',
          "field": 'firstname',
          "options": ['firstname']
        };
        this.limitcond = {
          "limit": 10,
          "skip": 0,
          "pagecount": 1
        };
        this.search_settings = {
          selectsearch: [{
            label: 'Search By Status',
            field: 'status',
            values: this.status
          }],
          textsearch: [{
            label: "Search By Name",
            field: 'name_search'
          }, {
            label: "Search By E-Mail",
            field: 'email'
          }]
        };
        this.user_cookie = cookie.get('jwtToken');
        this.apiUrl = httpService.baseUrl;
      }

      _createClass(ManageAdminListComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this32 = this;

          this.datasource = '';
          var endpoint = 'getadminlistdata';
          var endpointc = 'getadminlistdata-count';
          var data = {
            "condition": {
              "limit": 10,
              "skip": 0
            },
            sort: {
              "type": 'desc',
              "field": 'firstname'
            }
          };
          this.httpService.httpViaPost(endpointc, data).subscribe(function (res) {
            // console.log('in constructor');
            // console.log(result);
            _this32.adminData_count = res.count; //console.warn('blogData c',res);
          }, function (error) {
            console.log('Oooops!');
          });
          this.httpService.httpViaPost(endpoint, data).subscribe(function (res) {
            _this32.TechDashboardAllData = res.results.res;
          }, function (error) {
            console.log('Oooops!');
          });
        }
      }]);

      return ManageAdminListComponent;
    }();

    ManageAdminListComponent.ctorParameters = function () {
      return [{
        type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__["CookieService"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__["HttpServiceService"]
      }];
    };

    ManageAdminListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-manage-admin-list',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./manage-admin-list.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/admin-management/manage-admin-list/manage-admin-list.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./manage-admin-list.component.css */
      "./src/app/components/admin/admin-management/manage-admin-list/manage-admin-list.component.css"))["default"]]
    })], ManageAdminListComponent);
    /***/
  },

  /***/
  "./src/app/components/admin/biller-management/add-edit-biller/add-edit-biller.component.css":
  /*!**************************************************************************************************!*\
    !*** ./src/app/components/admin/biller-management/add-edit-biller/add-edit-biller.component.css ***!
    \**************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminBillerManagementAddEditBillerAddEditBillerComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n\n\n.add_form{margin: 20px auto; background: #f3f3f3; padding: 16px 10px; padding-bottom: 50px; border: 1px solid #91e7ff; }\n.add_form .form_wrapper .mat-form-field{ width: 49%; margin: 0.5%; }\n.add_form .form_wrapper textarea{ resize: none;}\n.add_form h2{ font-family: \"RobotoBlack\"; text-transform: uppercase; font-size: 24px; padding: 0 6px; color: #1dbce9; }\n.add_form .submit_form{ display: flex; width: 100%; text-align: center; margin-top: 30px; justify-content: center;  }\n.add_form .return_button { background: #1dbce9; color: #fff; margin-bottom: 12px; margin-left: 0;}\n@media screen and (max-width: 1460px){\n  .techdashboard_header .mat-toolbar-row .quotation p { font-size: 24px; line-height: 26px;}\n}\n@media screen and (max-width: 1400px){\n  .add_form .submit_form button {width: 240px;margin: 8px; font-size: 20px;}\n}\n@media screen and (max-width: 1100px){\n  .add_form .submit_form button { width: 240px; font-size: 18px;  padding: 5px;}\n}\n@media screen and (max-width: 991px){\n.techdashboard_header .mat-toolbar-row { flex-direction: column; padding: 20px;}\n.techdashboard_header .mat-toolbar-row .quotation p { margin-top: 16px; }\n.add_form .submit_form { display: flex; flex-wrap: wrap; }\n.add_form .submit_form button { width: 47%; }\n}\n@media screen and (max-width: 768px){\n  .add_form .form_wrapper .mat-form-field { width: 100%; margin: 0; }\n\n.add_form .submit_form button { width: 100%; }\n}\n@media screen and (max-width: 576px){\n.add_form .submit_form button { font-size: 22px; padding: 2px; }\n\n.add_form .submit_form button { width: 100%; margin: 0; margin-top: 20px; }\n.add_form .submit_form { display: flex; flex-direction: column-reverse; text-align: center; margin-top: 0px; }\n.add_form .submit_form button:nth-child(1) { margin-right: 0; margin-top: 20px; }\n}\n@media screen and (max-width: 360px){\n.techdashboard_header .mat-toolbar-row .quotation p { font-size: 16px; line-height: 22px; }\n.add_form h2 { font-size: 22px; line-height: 24px; text-align: center; }\n}\n\n\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9hZG1pbi9iaWxsZXItbWFuYWdlbWVudC9hZGQtZWRpdC1iaWxsZXIvYWRkLWVkaXQtYmlsbGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBR0EsVUFBVSxpQkFBaUIsRUFBRSxtQkFBbUIsRUFBRSxrQkFBa0IsRUFBRSxvQkFBb0IsRUFBRSx5QkFBeUIsRUFBRTtBQUN2SCx5Q0FBeUMsVUFBVSxFQUFFLFlBQVksRUFBRTtBQUNuRSxrQ0FBa0MsWUFBWSxDQUFDO0FBQy9DLGNBQWMsMEJBQTBCLEVBQUUseUJBQXlCLEVBQUUsZUFBZSxFQUFFLGNBQWMsRUFBRSxjQUFjLEVBQUU7QUFFdEgsd0JBQXdCLGFBQWEsRUFBRSxXQUFXLEVBQUUsa0JBQWtCLEVBQUUsZ0JBQWdCLEVBQUUsdUJBQXVCLEdBQUc7QUFJcEgsMkJBQTJCLG1CQUFtQixFQUFFLFdBQVcsRUFBRSxtQkFBbUIsRUFBRSxjQUFjLENBQUM7QUFJakc7RUFDRSxzREFBc0QsZUFBZSxFQUFFLGlCQUFpQixDQUFDO0FBQzNGO0FBQ0E7RUFDRSwrQkFBK0IsWUFBWSxDQUFDLFdBQVcsRUFBRSxlQUFlLENBQUM7QUFDM0U7QUFDQTtFQUNFLGdDQUFnQyxZQUFZLEVBQUUsZUFBZSxHQUFHLFlBQVksQ0FBQztBQUMvRTtBQUNBO0FBQ0EseUNBQXlDLHNCQUFzQixFQUFFLGFBQWEsQ0FBQztBQUMvRSxzREFBc0QsZ0JBQWdCLEVBQUU7QUFDeEUseUJBQXlCLGFBQWEsRUFBRSxlQUFlLEVBQUU7QUFDekQsZ0NBQWdDLFVBQVUsRUFBRTtBQUM1QztBQUNBO0VBQ0UsMENBQTBDLFdBQVcsRUFBRSxTQUFTLEVBQUU7O0FBRXBFLGdDQUFnQyxXQUFXLEVBQUU7QUFDN0M7QUFDQTtBQUNBLGdDQUFnQyxlQUFlLEVBQUUsWUFBWSxFQUFFOztBQUUvRCxnQ0FBZ0MsV0FBVyxFQUFFLFNBQVMsRUFBRSxnQkFBZ0IsRUFBRTtBQUMxRSx5QkFBeUIsYUFBYSxFQUFFLDhCQUE4QixFQUFFLGtCQUFrQixFQUFFLGVBQWUsRUFBRTtBQUM3Ryw2Q0FBNkMsZUFBZSxFQUFFLGdCQUFnQixFQUFFO0FBQ2hGO0FBRUE7QUFDQSxzREFBc0QsZUFBZSxFQUFFLGlCQUFpQixFQUFFO0FBQzFGLGVBQWUsZUFBZSxFQUFFLGlCQUFpQixFQUFFLGtCQUFrQixFQUFFO0FBQ3ZFIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9hZG1pbi9iaWxsZXItbWFuYWdlbWVudC9hZGQtZWRpdC1iaWxsZXIvYWRkLWVkaXQtYmlsbGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcblxuXG4uYWRkX2Zvcm17bWFyZ2luOiAyMHB4IGF1dG87IGJhY2tncm91bmQ6ICNmM2YzZjM7IHBhZGRpbmc6IDE2cHggMTBweDsgcGFkZGluZy1ib3R0b206IDUwcHg7IGJvcmRlcjogMXB4IHNvbGlkICM5MWU3ZmY7IH1cbi5hZGRfZm9ybSAuZm9ybV93cmFwcGVyIC5tYXQtZm9ybS1maWVsZHsgd2lkdGg6IDQ5JTsgbWFyZ2luOiAwLjUlOyB9XG4uYWRkX2Zvcm0gLmZvcm1fd3JhcHBlciB0ZXh0YXJlYXsgcmVzaXplOiBub25lO31cbi5hZGRfZm9ybSBoMnsgZm9udC1mYW1pbHk6IFwiUm9ib3RvQmxhY2tcIjsgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgZm9udC1zaXplOiAyNHB4OyBwYWRkaW5nOiAwIDZweDsgY29sb3I6ICMxZGJjZTk7IH1cblxuLmFkZF9mb3JtIC5zdWJtaXRfZm9ybXsgZGlzcGxheTogZmxleDsgd2lkdGg6IDEwMCU7IHRleHQtYWxpZ246IGNlbnRlcjsgbWFyZ2luLXRvcDogMzBweDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7ICB9XG5cblxuXG4uYWRkX2Zvcm0gLnJldHVybl9idXR0b24geyBiYWNrZ3JvdW5kOiAjMWRiY2U5OyBjb2xvcjogI2ZmZjsgbWFyZ2luLWJvdHRvbTogMTJweDsgbWFyZ2luLWxlZnQ6IDA7fVxuXG5cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTQ2MHB4KXtcbiAgLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5tYXQtdG9vbGJhci1yb3cgLnF1b3RhdGlvbiBwIHsgZm9udC1zaXplOiAyNHB4OyBsaW5lLWhlaWdodDogMjZweDt9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxNDAwcHgpe1xuICAuYWRkX2Zvcm0gLnN1Ym1pdF9mb3JtIGJ1dHRvbiB7d2lkdGg6IDI0MHB4O21hcmdpbjogOHB4OyBmb250LXNpemU6IDIwcHg7fVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTEwMHB4KXtcbiAgLmFkZF9mb3JtIC5zdWJtaXRfZm9ybSBidXR0b24geyB3aWR0aDogMjQwcHg7IGZvbnQtc2l6ZTogMThweDsgIHBhZGRpbmc6IDVweDt9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5OTFweCl7XG4udGVjaGRhc2hib2FyZF9oZWFkZXIgLm1hdC10b29sYmFyLXJvdyB7IGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IHBhZGRpbmc6IDIwcHg7fVxuLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5tYXQtdG9vbGJhci1yb3cgLnF1b3RhdGlvbiBwIHsgbWFyZ2luLXRvcDogMTZweDsgfVxuLmFkZF9mb3JtIC5zdWJtaXRfZm9ybSB7IGRpc3BsYXk6IGZsZXg7IGZsZXgtd3JhcDogd3JhcDsgfVxuLmFkZF9mb3JtIC5zdWJtaXRfZm9ybSBidXR0b24geyB3aWR0aDogNDclOyB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCl7XG4gIC5hZGRfZm9ybSAuZm9ybV93cmFwcGVyIC5tYXQtZm9ybS1maWVsZCB7IHdpZHRoOiAxMDAlOyBtYXJnaW46IDA7IH1cblxuLmFkZF9mb3JtIC5zdWJtaXRfZm9ybSBidXR0b24geyB3aWR0aDogMTAwJTsgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTc2cHgpe1xuLmFkZF9mb3JtIC5zdWJtaXRfZm9ybSBidXR0b24geyBmb250LXNpemU6IDIycHg7IHBhZGRpbmc6IDJweDsgfVxuXG4uYWRkX2Zvcm0gLnN1Ym1pdF9mb3JtIGJ1dHRvbiB7IHdpZHRoOiAxMDAlOyBtYXJnaW46IDA7IG1hcmdpbi10b3A6IDIwcHg7IH1cbi5hZGRfZm9ybSAuc3VibWl0X2Zvcm0geyBkaXNwbGF5OiBmbGV4OyBmbGV4LWRpcmVjdGlvbjogY29sdW1uLXJldmVyc2U7IHRleHQtYWxpZ246IGNlbnRlcjsgbWFyZ2luLXRvcDogMHB4OyB9XG4uYWRkX2Zvcm0gLnN1Ym1pdF9mb3JtIGJ1dHRvbjpudGgtY2hpbGQoMSkgeyBtYXJnaW4tcmlnaHQ6IDA7IG1hcmdpbi10b3A6IDIwcHg7IH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMzYwcHgpe1xuLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5tYXQtdG9vbGJhci1yb3cgLnF1b3RhdGlvbiBwIHsgZm9udC1zaXplOiAxNnB4OyBsaW5lLWhlaWdodDogMjJweDsgfVxuLmFkZF9mb3JtIGgyIHsgZm9udC1zaXplOiAyMnB4OyBsaW5lLWhlaWdodDogMjRweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9XG59XG5cblxuIl19 */";
    /***/
  },

  /***/
  "./src/app/components/admin/biller-management/add-edit-biller/add-edit-biller.component.ts":
  /*!*************************************************************************************************!*\
    !*** ./src/app/components/admin/biller-management/add-edit-biller/add-edit-biller.component.ts ***!
    \*************************************************************************************************/

  /*! exports provided: AddEditBillerComponent, ChangePasswordModal */

  /***/
  function srcAppComponentsAdminBillerManagementAddEditBillerAddEditBillerComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AddEditBillerComponent", function () {
      return AddEditBillerComponent;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ChangePasswordModal", function () {
      return ChangePasswordModal;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../../../../../environments/environment */
    "./src/environments/environment.ts");

    var AddEditBillerComponent = /*#__PURE__*/function () {
      function AddEditBillerComponent(fb, datePipe, httpService, cookie, router, snackBar, activeRoute, dialog) {
        _classCallCheck(this, AddEditBillerComponent);

        this.fb = fb;
        this.datePipe = datePipe;
        this.httpService = httpService;
        this.cookie = cookie;
        this.router = router;
        this.snackBar = snackBar;
        this.activeRoute = activeRoute;
        this.dialog = dialog;
        this.htmlText = {
          header: 'Add New Biller',
          nav: 'Add Biller',
          buttonText: 'Save',
          userData: '',
          parent_type: [{
            name: "Distributor",
            value: "distributor"
          }, {
            name: "DiagnosticAdmin",
            value: "diagnostic_admin"
          }, {
            name: "DoctorGroup",
            value: "doctor_group"
          }]
        };
        this.params_id = '';
        this.message = "Submitted Successfully";
        this.taxo_array = [];
        this.htmlText.userData = cookie.getAll();
        this.htmlText.userData.user_details = JSON.parse(this.htmlText.userData.user_details);
        this.allStateCityData();

        if (this.activeRoute.snapshot.params._id) {
          this.generateAddEditForm('edit');
          this.htmlText.header = 'Edit Biller Record';
          this.htmlText.nav = 'Edit Biller';
          this.htmlText.buttonText = 'Update';
          this.message = "Updated Successfully";
          this.params_id = this.activeRoute.snapshot.params._id;
        } else {
          this.generateAddEditForm('add');
        }
      }

      _createClass(AddEditBillerComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }, {
        key: "generateAddEditForm",
        value: function generateAddEditForm(flag) {
          var _this33 = this;

          var validateRule = {
            id: ['', []],
            firstname: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(50)]],
            lastname: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(50)]],
            email: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].email, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(100)]],
            phone: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(7), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(16)]],
            company_name: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(100)]],
            address: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(200)]],
            zip: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(4), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(18)]],
            city: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
            state: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
            user_type: ['biller', []],
            parent_type: ['admin'],
            parent_id: ['', []],
            status: ['', []],
            password: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(16), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(6)]],
            confirmpassword: ['', []]
          };
          var passwordRule = {
            validators: this.matchpassword('password', 'confirmpassword')
          };

          switch (flag) {
            case 'edit':
              delete validateRule.password;
              delete validateRule.confirmpassword;

              if (this.htmlText.userData.user_details.user_type != 'admin') {
                delete validateRule.parent_id;
              }

              this.billerManagementAddEditForm = this.fb.group(validateRule);
              this.activeRoute.data.forEach(function (data) {
                var billerDetails = data.billersingleData.res;
                setTimeout(function () {
                  _this33.getCity(billerDetails[0].state);
                }, 1000);

                _this33.billerManagementAddEditForm.controls['id'].patchValue(billerDetails[0]._id);

                _this33.billerManagementAddEditForm.controls['firstname'].patchValue(billerDetails[0].firstname);

                _this33.billerManagementAddEditForm.controls['lastname'].patchValue(billerDetails[0].lastname);

                _this33.billerManagementAddEditForm.controls['email'].patchValue(billerDetails[0].email);

                _this33.billerManagementAddEditForm.controls['phone'].patchValue(billerDetails[0].phone);

                _this33.billerManagementAddEditForm.controls['company_name'].patchValue(billerDetails[0].company_name);

                _this33.billerManagementAddEditForm.controls['address'].patchValue(billerDetails[0].address); // this.getCity(doctorDetails[0].state);


                _this33.getParentData(billerDetails[0].parent_type); //  this.getCity(doctorDetails[0].state);
                // this.getCityByName(doctorDetails[0].state);


                setTimeout(function () {
                  // getCityByName
                  _this33.billerManagementAddEditForm.controls['parent_type'].patchValue(billerDetails[0].parent_type);

                  if (_this33.htmlText.userData.user_details.user_type == 'admin') {
                    _this33.billerManagementAddEditForm.controls['parent_id'].patchValue(billerDetails[0].parent_id);
                  }
                }, 2000);

                _this33.billerManagementAddEditForm.controls['zip'].patchValue(billerDetails[0].zip);

                _this33.billerManagementAddEditForm.controls['city'].patchValue(billerDetails[0].city);

                _this33.billerManagementAddEditForm.controls['state'].patchValue(billerDetails[0].state);

                _this33.billerManagementAddEditForm.controls['status'].patchValue(billerDetails[0].status);
              });
              break;

            case 'add':
              delete validateRule.id;
              this.billerManagementAddEditForm = this.fb.group(validateRule, passwordRule);
              break;
          }
        }
      }, {
        key: "matchpassword",
        value: function matchpassword(passwordkye, confirmpasswordkye) {
          return function (group) {
            var passwordInput = group.controls[passwordkye],
                confirmpasswordInput = group.controls[confirmpasswordkye];

            if (passwordInput.value !== confirmpasswordInput.value) {
              return confirmpasswordInput.setErrors({
                notEquivalent: true
              });
            } else {
              return confirmpasswordInput.setErrors(null);
            }
          };
        }
        /**for validation purpose**/

      }, {
        key: "inputUntouch",
        value: function inputUntouch(form, val) {
          form.controls[val].markAsUntouched();
        }
        /**for validation purpose**/

        /**for getting all states & cities function start here**/

      }, {
        key: "allStateCityData",
        value: function allStateCityData() {
          var _this34 = this;

          this.httpService.getSiteSettingData("./assets/data-set/state.json").subscribe(function (response) {
            _this34.states = response;
          });
          this.httpService.getSiteSettingData("./assets/data-set/city.json").subscribe(function (response) {
            _this34.allCities = response;
          });
        }
        /**for getting all states & cities  function end here**/

      }, {
        key: "getCity",
        value: function getCity(event) {
          var val = event;
          this.cities = this.allCities[val];
        }
      }, {
        key: "getCityByName",
        value: function getCityByName(stateName) {
          this.cities = this.allCities[stateName];
        }
        /**getting all the Parent data**/

      }, {
        key: "getParentData",
        value: function getParentData() {
          var _this35 = this;

          var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
          console.log('222222222222', id);
          var billerData = id;
          this.selectionChangeValue = billerData;
          console.log('1111', billerData);

          if (billerData == 'DiagnosticAdmin' || billerData == "diagnostic_admin") {
            // data['diagnostic_admin_id_object'] = this.htmlText.userData.user_details._id;
            var data = {
              "source": "data_pece",
              "condition": {
                "user_type": "diagnostic_admin"
              },
              "token": this.htmlText.userData.jwtToken
            };
          }

          if (billerData == 'Distributor' || billerData == 'distributor') {
            // data['diagnostic_admin_id_object'] = this.htmlText.userData.user_details._id;
            var data = {
              "source": "data_pece",
              "condition": {
                "user_type": "distributors"
              },
              "token": this.htmlText.userData.jwtToken
            };
          }

          if (billerData == 'DoctorGroup' || billerData == "doctor_group") {
            // data['diagnostic_admin_id_object'] = this.htmlText.userData.user_details._id;
            var data = {
              "source": "data_pece",
              "condition": {
                "user_type": "doctor_group"
              },
              "token": this.htmlText.userData.jwtToken
            };
          } // if(this.htmlText.user_details.user_type == 'distributors') {
          //   data['distributor_id_object'] = this.htmlText.userData.user_details._id;
          // }


          this.httpService.httpViaPost('datalist', data).subscribe(function (response) {
            // console.log('+++++++++',response);
            _this35.htmlText.parent_id = response.res; // this.htmlText.parent_id = response;
            // this.htmlText.doctorOfficeData = response.data.doctor_office_data;
            // this.htmlText.billerData = response.data.biller_data;
          });
        }
      }, {
        key: "openDialog",
        value: function openDialog(x) {
          this.dialogRef = this.dialog.open(ChangePasswordModal, {
            data: {
              message: x,
              'id': this.params_id
            }
          });
          this.dialogRef.afterClosed().subscribe(function (result) {});
        }
      }, {
        key: "BillerManagementAddFormSubmit",
        value: function BillerManagementAddFormSubmit() {
          var _this36 = this;

          for (var x in this.billerManagementAddEditForm.controls) {
            this.billerManagementAddEditForm.controls[x].markAsTouched();
          }

          if (this.billerManagementAddEditForm.valid) {
            delete this.billerManagementAddEditForm.value.confirmpassword;

            if (this.billerManagementAddEditForm.value.status) {
              this.billerManagementAddEditForm.value.status = parseInt("1");
            } else {
              this.billerManagementAddEditForm.value.status = parseInt("0");
            }

            var data = {
              "source": "data_pece",
              "data": this.billerManagementAddEditForm.value,
              "sourceobj": ["parent_id"],
              "token": this.htmlText.userData.jwtToken,
              "domainurl": _environments_environment__WEBPACK_IMPORTED_MODULE_8__["environment"].siteBaseUrl + 'reset-password'
            };

            if (this.htmlText.userData.user_details.user_type == 'diagnostic_admin') {
              data.data["parent_id"] = this.htmlText.userData.user_details._id;
              data.data["parent_type"] = "diagnostic_admin";
              data["sourceobj"] = ["parent_id"];
            }

            if (this.htmlText.userData.user_details.user_type == 'doctor') {
              data.data["doctor_id"] = this.htmlText.userData.user_details._id;
              data["sourceobj"] = ["doctor_id"];
            }

            if (this.htmlText.userData.user_details.user_type == 'doctor_group') {
              data.data["parent_id"] = this.htmlText.userData.user_details._id;
              data.data["parent_type"] = "doctor_group";
              data["sourceobj"] = ["parent_id"];
            }

            if (this.htmlText.userData.user_details.user_type == 'distributors') {
              data.data["parent_id"] = this.htmlText.userData.user_details._id;
              data.data["parent_type"] = "distributor";
              data["sourceobj"] = ["parent_id"];
            }

            if (this.htmlText.userData.user_details.user_type != 'doctor') {
              this.httpService.httpViaPost("addorupdatedata", data).subscribe(function (response) {
                if (response.status == 'success') {
                  _this36.snackBar.open(_this36.message, 'Ok', {
                    duration: 2000
                  });

                  _this36.formDirective.resetForm();

                  setTimeout(function () {
                    switch (_this36.htmlText.userData.user_details.user_type) {
                      case 'admin':
                        _this36.router.navigateByUrl("admin/biller-management");

                        break;

                      case 'diagnostic_admin':
                        _this36.router.navigateByUrl("diagnostic-admin/biller-management");

                        break;

                      case 'doctor_group':
                        _this36.router.navigateByUrl("doctor-group/biller-management");

                        break;

                      case 'distributors':
                        _this36.router.navigateByUrl("distributors/biller-management");

                        break;
                    }
                  }, 1000);
                } else {
                  _this36.snackBar.open(response.msg, '', {
                    duration: 2000
                  });
                }
              });
            } else {
              data.data["parent_id"] = this.htmlText.userData.user_details._id;
              data.data["parent_type"] = "doctor";
              data["sourceobj"] = ["parent_id"];
              data["doctorid"] = this.htmlText.userData.user_details._id;
              this.httpService.httpViaPost("add-biller-data", data).subscribe(function (response) {
                if (response.status == 'success') {
                  _this36.snackBar.open(_this36.message, 'Ok', {
                    duration: 2000
                  });

                  _this36.formDirective.resetForm();

                  setTimeout(function () {
                    switch (_this36.htmlText.userData.user_details.user_type) {
                      case 'admin':
                        _this36.router.navigateByUrl("admin/biller-management");

                        break;

                      case 'diagnostic_admin':
                        _this36.router.navigateByUrl("diagnostic-admin/biller-management");

                        break;

                      case 'doctor_group':
                        _this36.router.navigateByUrl("doctor-group/biller-management");

                        break;

                      case 'distributors':
                        _this36.router.navigateByUrl("distributors/biller-management");

                        break;

                      case 'doctor':
                        _this36.router.navigateByUrl("doctor/biller-management");

                        break;
                    }
                  }, 1000);
                } else {
                  _this36.snackBar.open(response.msg, '', {
                    duration: 2000
                  });
                }
              });
            }
          }
        }
      }]);

      return AddEditBillerComponent;
    }();

    AddEditBillerComponent.ctorParameters = function () {
      return [{
        type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]
      }, {
        type: _angular_common__WEBPACK_IMPORTED_MODULE_3__["DatePipe"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__["HttpServiceService"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_5__["CookieService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_6__["Router"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatSnackBar"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_6__["ActivatedRoute"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatDialog"]
      }];
    };

    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroupDirective"], {
      "static": true
    })], AddEditBillerComponent.prototype, "formDirective", void 0);
    AddEditBillerComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-add-edit-biller',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./add-edit-biller.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/biller-management/add-edit-biller/add-edit-biller.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./add-edit-biller.component.css */
      "./src/app/components/admin/biller-management/add-edit-biller/add-edit-biller.component.css"))["default"]]
    })], AddEditBillerComponent);

    var ChangePasswordModal = /*#__PURE__*/function () {
      function ChangePasswordModal(dialogRef, fb, httpService, cookie, activeRoute, data, snackBar) {
        _classCallCheck(this, ChangePasswordModal);

        this.dialogRef = dialogRef;
        this.fb = fb;
        this.httpService = httpService;
        this.cookie = cookie;
        this.activeRoute = activeRoute;
        this.data = data;
        this.snackBar = snackBar;
        this.changePwdForm = _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroup"];
        this.params_id = data.id;
        this.user_token = cookie.get('jwtToken');
        this.changePwdForm = this.fb.group({
          password: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(16), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(6)]],
          confirmpassword: []
        }, {
          validators: this.matchpassword('password', 'confirmpassword')
        });
      }

      _createClass(ChangePasswordModal, [{
        key: "matchpassword",
        value: function matchpassword(passwordkye, confirmpasswordkye) {
          return function (group) {
            var passwordInput = group.controls[passwordkye],
                confirmpasswordInput = group.controls[confirmpasswordkye];

            if (passwordInput.value !== confirmpasswordInput.value) {
              return confirmpasswordInput.setErrors({
                notEquivalent: true
              });
            } else {
              return confirmpasswordInput.setErrors(null);
            }
          };
        }
      }, {
        key: "changePasswordFormSubmit",
        value: function changePasswordFormSubmit() {
          var _this37 = this;

          for (var x in this.changePwdForm.controls) {
            this.changePwdForm.controls[x].markAsTouched();
          }

          if (this.changePwdForm.valid) {
            delete this.changePwdForm.value.confirmpassword;
            var data = {
              "_id": this.params_id,
              "adminflag": 1,
              "newPassword": this.changePwdForm.value.password
            };
            this.httpService.httpViaPost('changepassword', data).subscribe(function (response) {
              if (response.status == true) {
                _this37.snackBar.open('Successfully changed.', '', {
                  duration: 2000
                });
              } else {
                _this37.snackBar.open(response.message, '', {
                  duration: 2000
                });
              }
            });
          }
        }
      }]);

      return ChangePasswordModal;
    }();

    ChangePasswordModal.ctorParameters = function () {
      return [{
        type: _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatDialogRef"]
      }, {
        type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__["HttpServiceService"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_5__["CookieService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_6__["ActivatedRoute"]
      }, {
        type: undefined,
        decorators: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
          args: [_angular_material__WEBPACK_IMPORTED_MODULE_7__["MAT_DIALOG_DATA"]]
        }]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatSnackBar"]
      }];
    };

    ChangePasswordModal = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'dialogtest',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./modal.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/biller-management/add-edit-biller/modal.html"))["default"]
    }), tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](5, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_7__["MAT_DIALOG_DATA"]))], ChangePasswordModal);
    /***/
  },

  /***/
  "./src/app/components/admin/biller-management/listing-biller/listing-biller.component.css":
  /*!************************************************************************************************!*\
    !*** ./src/app/components/admin/biller-management/listing-biller/listing-biller.component.css ***!
    \************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminBillerManagementListingBillerListingBillerComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW4vYmlsbGVyLW1hbmFnZW1lbnQvbGlzdGluZy1iaWxsZXIvbGlzdGluZy1iaWxsZXIuY29tcG9uZW50LmNzcyJ9 */";
    /***/
  },

  /***/
  "./src/app/components/admin/biller-management/listing-biller/listing-biller.component.ts":
  /*!***********************************************************************************************!*\
    !*** ./src/app/components/admin/biller-management/listing-biller/listing-biller.component.ts ***!
    \***********************************************************************************************/

  /*! exports provided: ListingBillerComponent */

  /***/
  function srcAppComponentsAdminBillerManagementListingBillerListingBillerComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ListingBillerComponent", function () {
      return ListingBillerComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/material/dialog */
    "./node_modules/@angular/material/esm2015/dialog.js");
    /* harmony import */


    var _common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../../../common/dialog-box/dialog-box.component */
    "./src/app/components/common/dialog-box/dialog-box.component.ts");

    var ListingBillerComponent = /*#__PURE__*/function () {
      function ListingBillerComponent(dialog, activeRoute, cookie, httpService, router) {
        _classCallCheck(this, ListingBillerComponent);

        this.dialog = dialog;
        this.activeRoute = activeRoute;
        this.cookie = cookie;
        this.httpService = httpService;
        this.router = router;
        this.allBillerData = [];
        this.billerData_count = 0;
        this.allUserData_skip = ["_id", "address", "zip", "city", "state", "user_type", "password", "created_at", "diagnostic_admin_id", "doctor_id", "id", "updated_at", "name_search", "company_search", "diagnostic_admin_id", "distributor_id", "doctorgroup_id"];
        this.editUrl = "admin/biller-management/edit";
        this.libdata = {
          basecondition: "",
          updateendpoint: 'statusupdate',
          notes: {
            label: "Notes",
            addendpoint: "addnotedata",
            deleteendpoint: "deletenotedata",
            listendpoint: "listnotedata",
            user: "",
            currentuserfullname: " ",
            header: 'fullname'
          },
          // hideeditbutton:true,// all these button options are optional not mandatory
          //hidedeletebutton:true,
          //hideviewbutton:false,
          //hidestatustogglebutton:true,
          // hideaction:true,
          tableheaders: ['firstname', 'lastname', 'email', 'phone', 'company_name', 'status', 'created_date'],
          custombuttons: []
        };
        this.allUserData_modify_header = {
          "firstname": "First Name",
          "lastname": "Last Name",
          "email": "Email",
          "phone": "Phone",
          "company_name": "Company Name",
          "status": "Status",
          "parent_name": "Parent Name",
          "parent_type": "Parent Type",
          "created_date": "Created Date"
        };
        this.UpdateEndpoint = "addorupdatedata";
        this.deleteEndpoint = "deletesingledata";
        this.tableName = "data_pece";
        this.datacollection = 'getbillerlistdata';
        this.sortdata = {
          "type": 'desc',
          "field": 'firstname',
          "options": ['firstname', 'email', 'created_date']
        };
        this.limitcond = {
          "limit": 10,
          "skip": 0,
          "pagecount": 1
        };
        this.previewModal_detail_skip = ['_id', 'user_type', 'status', 'password', 'created_at'];
        this.status = [{
          val: 1,
          'name': 'Active'
        }, {
          val: 0,
          'name': 'Inactive'
        }];
        this.parent_type = [{
          val: "admin",
          'name': 'Admin'
        }, {
          val: "diagnostic_admin",
          'name': 'Diagnostic Admin'
        }, {
          val: "distributor",
          'name': 'Distributors'
        }, {
          val: "doctor_group",
          'name': 'Doctors Group Admin'
        }];
        this.SearchingEndpoint = "datalist";
        this.SearchingSourceName = "data_biller_list";
        this.search_settings = {
          selectsearch: [{
            label: 'Search By Status',
            field: 'status',
            values: this.status
          }],
          textsearch: [{
            label: "Search By Name",
            field: 'name_search'
          }, {
            label: "Search By E-Mail",
            field: 'email'
          }, {
            label: "Search By Company Name",
            field: 'company_search'
          }]
        };
        this.user_cookie = cookie.get('jwtToken');

        if (this.activeRoute.snapshot.routeConfig.path == "admin/doctor/tech-management") {
          this.userData = {
            user_type: "doctor",
            _id: JSON.parse(this.cookie.get('id'))
          };
        } else {
          this.userData = JSON.parse(this.cookie.get('user_details'));
        }

        this.userData = JSON.parse(this.cookie.get('user_details'));
        this.libdata.notes.user = this.userData._id;
        this.libdata.notes.currentuserfullname = this.userData.firstname + this.userData.lastname;

        if (this.userData.user_type == 'diagnostic_admin') {
          this.editUrl = 'diagnostic-admin/biller-management/edit';
          this.libdata.basecondition = {
            'parent_id': this.userData._id
          };
          this.field = {
            'parent_id': this.userData._id
          };
          this.data = this.userData._id;
          this.libdata.notes.user = this.userData._id;
          this.libdata.notes.currentuserfullname = this.userData.center_name;
        }

        if (this.userData.user_type == 'doctor') {
          this.editUrl = 'doctor/biller-management/edit';
          this.libdata.basecondition = {
            doctor_id: this.userData._id,
            type: "doctor"
          };
          this.libdata.notes.user = this.userData._id;
          this.libdata.notes.currentuserfullname = this.userData.firstname + this.userData.lastname;
        }

        if (this.userData.user_type == 'doctor_group') {
          this.editUrl = 'doctor-group/biller-management/edit';
          this.field = {
            'parent_id': this.userData._id
          };
          this.libdata.basecondition = {
            'parent_id': this.userData._id
          };
          this.data = this.userData._id;
          this.libdata.notes.user = this.userData._id;
          this.libdata.notes.currentuserfullname = this.userData.groupname;
        }

        if (this.userData.user_type == 'distributors') {
          this.editUrl = 'distributors/biller-management/edit';
          this.field = {
            'parent_id': this.userData._id
          };
          this.libdata.basecondition = {
            'parent_id': this.userData._id
          };
          this.data = this.userData._id;
          this.libdata.notes.user = this.userData._id;
          this.libdata.notes.currentuserfullname = this.userData.distributorname;
        }

        if (this.userData.user_type == 'admin') {
          this.libdata.custombuttons = {
            label: "Log Me",
            type: 'listner',
            id: 'i1'
          };
          this.search_settings.textsearch.push({
            label: "Search By Parent Name",
            field: 'parent_name_search'
          });
          this.search_settings.selectsearch.push({
            label: 'Search By Parent Type',
            field: 'parent_type_search',
            values: this.parent_type
          });
          this.libdata.tableheaders.splice(3, 0, "parent_name");
          this.libdata.tableheaders.splice(4, 0, "parent_type");
          this.libdata.notes.user = this.userData._id;
          this.libdata.notes.currentuserfullname = this.userData.firstname + this.userData.lastname;
        } // this.libdata.basecondition = this.field;


        this.apiUrl = httpService.baseUrl;
        console.log("+++++", this.libdata.notes);
      }

      _createClass(ListingBillerComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this38 = this;

          this.datasource = '';

          if (this.userData.user_type != "doctor") {
            var endpoint = 'getbillerlistdata';
            var endpointc = 'getbillerlistdata-count';
            var data = {
              "condition": {
                "limit": 10,
                "skip": 0
              },
              sort: {
                "type": 'desc',
                "field": 'firstname'
              },
              data: this.fetch
            };

            if (this.userData.user_type == 'diagnostic_admin') {
              this.fetch = {
                'parent_id': this.data
              };
            }

            if (this.userData.user_type == 'doctor_group') {
              this.fetch = {
                'parent_id': this.data
              };
            }

            if (this.userData.user_type == 'distributors') {
              this.fetch = {
                'parent_id': this.data
              };
            }

            data.data = this.fetch;
            this.httpService.httpViaPost(endpointc, data).subscribe(function (res) {
              // console.log('in constructor');
              // console.log(result);
              _this38.billerData_count = res.count; //console.warn('blogData c',res);
            }, function (error) {
              console.log('Oooops!');
            });
            this.httpService.httpViaPost(endpoint, data).subscribe(function (res) {
              _this38.allBillerData = res.results.res;
            }, function (error) {
              console.log('Oooops!');
            });
          } else {
            var _endpoint = 'getbillerlistdata';
            var _endpointc = 'getbillerlistdata-count';
            var _data5 = {
              "condition": {
                "limit": 10,
                "skip": 0
              },
              sort: {
                "type": 'desc',
                "field": 'firstname'
              },
              type: "doctor",
              billerid: this.userData._id
            };

            if (this.userData.user_type == 'diagnostic_admin') {
              this.fetch = {
                'parent_id': this.data
              };
            }

            if (this.userData.user_type == 'doctor_group') {
              this.fetch = {
                'parent_id': this.data
              };
            }

            if (this.userData.user_type == 'distributors') {
              this.fetch = {
                'parent_id': this.data
              };
            }

            _data5.data = this.fetch;
            this.httpService.httpViaPost(_endpointc, _data5).subscribe(function (res) {
              // console.log('in constructor');
              // console.log(result);
              _this38.billerData_count = res.count; //console.warn('blogData c',res);
            }, function (error) {
              console.log('Oooops!');
            });
            this.httpService.httpViaPost(_endpoint, _data5).subscribe(function (res) {
              _this38.allBillerData = res.results.res;
            }, function (error) {
              console.log('Oooops!');
            });
          }
        }
      }, {
        key: "getAllBillerData",
        value: function getAllBillerData() {
          var _this39 = this;

          this.activeRoute.data.forEach(function (data) {
            _this39.allBillerData = data.Billerdata.res;
          });
        }
      }, {
        key: "listenLiblistingChange",
        value: function listenLiblistingChange() {
          var _this40 = this;

          var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;

          if (data != null) {
            switch (data.custombuttonclick.btninfo.label) {
              case "Log Me":
                var modalData1 = {
                  panelClass: 'bulkupload-dialog',
                  data: {
                    header: "Alert",
                    message: "Do you want to login as biller : " + data.custombuttonclick.data.firstname + " " + data.custombuttonclick.data.lastname + "?",
                    button1: {
                      text: "Yes"
                    },
                    button2: {
                      text: "No"
                    }
                  }
                };
                var dialogRef1 = this.dialog.open(_common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_6__["DialogBoxComponent"], modalData1);
                dialogRef1.afterClosed().subscribe(function (result) {
                  switch (result) {
                    case "Yes":
                      // Delete Cookie
                      _this40.cookie["delete"]('user_details');

                      _this40.cookie["delete"]('main_user');

                      _this40.cookie["delete"]('jwtToken');

                      _this40.cookie.deleteAll('/');

                      setTimeout(function () {
                        // Reset again Cookie
                        _this40.cookie.set('jwtToken', _this40.user_cookie);

                        _this40.cookie.set('user_details', JSON.stringify(data.custombuttonclick.data));

                        _this40.cookie.set('main_user', JSON.stringify(_this40.userData)); // Redirect to page


                        _this40.router.navigateByUrl("doctor/dashboard");
                      }, 500);
                      break;

                    case "No":
                      dialogRef1.close();
                      break;
                  }
                });
                break;
            }
          }
        }
      }]);

      return ListingBillerComponent;
    }();

    ListingBillerComponent.ctorParameters = function () {
      return [{
        type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__["MatDialog"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__["CookieService"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__["HttpServiceService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"]
      }];
    };

    ListingBillerComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-listing-biller',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./listing-biller.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/biller-management/listing-biller/listing-biller.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./listing-biller.component.css */
      "./src/app/components/admin/biller-management/listing-biller/listing-biller.component.css"))["default"]]
    })], ListingBillerComponent);
    /***/
  },

  /***/
  "./src/app/components/admin/booked-appoinments/booked-appoinments.component.css":
  /*!**************************************************************************************!*\
    !*** ./src/app/components/admin/booked-appoinments/booked-appoinments.component.css ***!
    \**************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminBookedAppoinmentsBookedAppoinmentsComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW4vYm9va2VkLWFwcG9pbm1lbnRzL2Jvb2tlZC1hcHBvaW5tZW50cy5jb21wb25lbnQuY3NzIn0= */";
    /***/
  },

  /***/
  "./src/app/components/admin/booked-appoinments/booked-appoinments.component.ts":
  /*!*************************************************************************************!*\
    !*** ./src/app/components/admin/booked-appoinments/booked-appoinments.component.ts ***!
    \*************************************************************************************/

  /*! exports provided: BookedAppoinmentsComponent */

  /***/
  function srcAppComponentsAdminBookedAppoinmentsBookedAppoinmentsComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BookedAppoinmentsComponent", function () {
      return BookedAppoinmentsComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");

    var BookedAppoinmentsComponent = /*#__PURE__*/function () {
      function BookedAppoinmentsComponent(cookieService, activatedRoute, snackBar, httpService, cookie) {
        _classCallCheck(this, BookedAppoinmentsComponent);

        this.cookieService = cookieService;
        this.activatedRoute = activatedRoute;
        this.snackBar = snackBar;
        this.httpService = httpService;
        this.cookie = cookie;
        this.tabFlag = 0;
        this.doctors = [];
      }

      _createClass(BookedAppoinmentsComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          if (this.activatedRoute.snapshot.params.tab_flag) {
            switch (this.activatedRoute.snapshot.params.tab_flag) {
              case 'pending':
                break;

              case 'completed':
                this.tabFlag = 1;
                break;
            }
          } // load doctor search data
          // const data1 = {
          //   token: this.cookie.get('jwtToken'),
          //   condition: {}
          // };
          // this.httpService.postRequest('get-doctor-info', data1).subscribe((response: any) => {
          //   for (let i = 0; i < response.data.length; i++) {
          //     let temp: any = {};
          //     temp['val'] = response.data[i]._id;
          //     temp['name'] = response.data[i].firstname + ' ' + response.data[i].lastname;
          //     this.doctors.push(temp);
          //   }
          // });

        }
      }, {
        key: "openSnackBar",
        value: function openSnackBar(message, action) {
          this.snackBar.open(message, action, {
            duration: 3000
          });
        }
      }]);

      return BookedAppoinmentsComponent;
    }();

    BookedAppoinmentsComponent.ctorParameters = function () {
      return [{
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatSnackBar"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__["HttpServiceService"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }];
    };

    BookedAppoinmentsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-booked-appoinments',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./booked-appoinments.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/booked-appoinments/booked-appoinments.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./booked-appoinments.component.css */
      "./src/app/components/admin/booked-appoinments/booked-appoinments.component.css"))["default"]]
    })], BookedAppoinmentsComponent);
    /***/
  },

  /***/
  "./src/app/components/admin/cpt-validate-reports/cpt-validate-reports/cpt-validate-reports.component.css":
  /*!***************************************************************************************************************!*\
    !*** ./src/app/components/admin/cpt-validate-reports/cpt-validate-reports/cpt-validate-reports.component.css ***!
    \***************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminCptValidateReportsCptValidateReportsCptValidateReportsComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW4vY3B0LXZhbGlkYXRlLXJlcG9ydHMvY3B0LXZhbGlkYXRlLXJlcG9ydHMvY3B0LXZhbGlkYXRlLXJlcG9ydHMuY29tcG9uZW50LmNzcyJ9 */";
    /***/
  },

  /***/
  "./src/app/components/admin/cpt-validate-reports/cpt-validate-reports/cpt-validate-reports.component.ts":
  /*!**************************************************************************************************************!*\
    !*** ./src/app/components/admin/cpt-validate-reports/cpt-validate-reports/cpt-validate-reports.component.ts ***!
    \**************************************************************************************************************/

  /*! exports provided: CptValidateReportsComponent */

  /***/
  function srcAppComponentsAdminCptValidateReportsCptValidateReportsCptValidateReportsComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CptValidateReportsComponent", function () {
      return CptValidateReportsComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var ngx_device_detector__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ngx-device-detector */
    "./node_modules/ngx-device-detector/fesm2015/ngx-device-detector.js");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../../../../../environments/environment */
    "./src/environments/environment.ts"); // import { DownloadDetailsComponent } from './download-details/download-details.component';


    var CptValidateReportsComponent = /*#__PURE__*/function () {
      // lib list end
      function CptValidateReportsComponent(router, cookieService, http, activatedRoute, dialog, deviceService, matSnackBar) {
        var _this41 = this;

        _classCallCheck(this, CptValidateReportsComponent);

        this.router = router;
        this.cookieService = cookieService;
        this.http = http;
        this.activatedRoute = activatedRoute;
        this.dialog = dialog;
        this.deviceService = deviceService;
        this.matSnackBar = matSnackBar;
        this.loginUserData = {};
        this.jwtToken = "";
        this.htmlText = {
          headerText: "Patient Reports",
          path: {}
        };
        this.allResolveData = {};
        this.shareDetails = {
          baseUrl: _environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].doctorSignUpBaseUrl,
          userId: ""
        }; // Lib list

        this.allBillerData = [];
        this.billerData_count = 0;
        this.allUserData_skip = ["_id", "report_file_type", "tech_id", "tech_email", "batch_name", "report_type", "status", "file_basepath", "file_bucketname", "file_name", "file_original_name", "file_type", "converted_image", "images", "patient_details", "patient_name_search", "report_life_circle", "note", "additional_potential_health_risks", "cpt_codes", "created_at", "doctor_name"];
        this.editUrl = "admin/biller-management/edit";
        this.libdata = {
          basecondition: "",
          updateendpoint: 'status-update',
          custombuttons: [{
            label: "View Details",
            route: "admin/reports-details",
            type: 'internallink',
            //cond:'status',
            //condval:0,
            param: ['parent_id']
          }],
          hideeditbutton: true,
          hidedeletebutton: true,
          hidedeletemany: true,
          hidestatustogglebutton: true,
          hideviewbutton: true,
          tableheaders: ["parent_name", // "tech_name",
          "parent_type", "total_approved_reports", "cpt_code_count", "total_cpt_amount"]
        };
        this.allUserData_modify_header = {
          "parent_name": "Name",
          // "tech_name": "Tech Name",
          "parent_type": "Parent",
          "total_cpt_amount": "Total Validate Amount($)",
          "cpt_code_count": "Total CPT Found",
          "total_approved_reports": "Total Approved Reports"
        };
        this.UpdateEndpoint = "addorupdatedata";
        this.deleteEndpoint = "deletesingledata";
        this.apiUrl = _environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].apiBaseUrl1;
        this.tableName = "data_pece";
        this.datacollection = 'getcptreports';
        this.sortdata = {
          "type": 'desc',
          "field": 'patient_name',
          "options": ['patient_name']
        };
        this.limitcond = {
          "limit": 10,
          "skip": 0,
          "pagecount": 1
        };
        this.previewModal_detail_skip = ['_id', 'user_type', 'status', 'password', 'created_at'];
        this.status = [{
          val: "Biller Admin Approved",
          'name': 'Biller Admin Approved'
        }, {
          val: "Biller Admin Not Approved",
          'name': 'Biller Admin Not Approved'
        }, {
          val: "Biller Admin Hold",
          'name': "Biller Admin Hold"
        }];
        this.parent_type = [{
          val: "MAJOR DOCTOR",
          'name': 'MAJOR DOCTOR'
        }, {
          val: "DIAGNOSTIC ADMIN",
          'name': 'DIAGNOSTIC ADMIN'
        }, {
          val: "DISTRIBUTOR",
          'name': 'DISTRIBUTOR'
        }, {
          val: "DOCTOR GROUP",
          'name': 'DOCTOR GROUP'
        }];
        this.sales_type = [{
          val: "ADMIN",
          'name': 'ADMIN'
        }, {
          val: "DIAGNOSTIC ADMIN",
          'name': 'DIAGNOSTIC ADMIN'
        }, {
          val: "DISTRIBUTOR",
          'name': 'DISTRIBUTOR'
        }];
        this.SearchingEndpoint = "datalist";
        this.authval = [];
        this.docofficeval = [];
        this.techval = [];
        this.parentnameval = [];
        this.doctorcity = [];
        this.doctorstate = [];
        this.patientcity = [];
        this.patientstate = [];
        this.SearchingSourceName = "data_biller_list";
        this.search_settings = {
          selectsearch: [{
            label: 'Search By Parent Type',
            field: 'parent_type',
            values: this.parent_type
          }],
          datesearch: [{
            startdatelabel: "Start Date",
            enddatelabel: "End Date",
            submit: "Search",
            field: "created_at_datetime"
          }],
          textsearch: [{
            label: "Search By Parent Name",
            field: 'parent_name_search',
            values: this.parentnameval
          }] // { label: "Search By E-Mail", field: 'email' }, { label: "Search By Parent Name", field: 'parent_search' }, { label: "Search By Company Name", field: 'company_search' }],
          // search:[,
          // ]

        };
        this.loginUserData["user_details"] = cookieService.getAll();
        this.loginUserData.user_details.user_details = JSON.parse(this.loginUserData.user_details.user_details);
        this.shareDetails.userId = this.loginUserData.user_details.user_details._id;
        this.shareDetails.user_type = this.loginUserData.user_details.user_details.user_type;
        this.loginUserData["jwtToken"] = cookieService.get('jwtToken');
        /* Get Auth Token */

        this.jwtToken = cookieService.get('jwtToken');
        /* Get resolve data */
        // this.activatedRoute.data.subscribe(resolveData => {
        // this.allResolveData = resolveData.dataCount.data.dashboardCount[0];
        //this.viewReportProcessData(this.htmlText.headerText);
        // });

        if (this.loginUserData.user_details.user_details.user_type == "admin_biller") {
          this.libdata.custombuttons[0].route = "admin-biller/reports-details";
        }

        if (this.activatedRoute.snapshot.routeConfig.path == "admin/sales-person/cpt-reports") {
          this.htmlText.path = {
            parent_user_type: "sales_person"
          };
          this.search_settings.selectsearch[0].values = this.sales_type;
          this.libdata.basecondition = {
            parent_user_type: "sales_person"
          };
          this.search_settings.textsearch[0].label = "Search By Sales Person Name";
        } // lib list


        var endpoint = 'getcptreports';
        var endpointc = 'getcptreports-count';
        var data = {
          "condition": {
            "limit": 10,
            "skip": 0
          },
          sort: {
            "type": 'desc',
            "field": 'patient_name'
          },
          data: this.htmlText.path
        };
        this.http.httpViaPostbyApi1(endpointc, data).subscribe(function (res) {
          _this41.billerData_count = res.count;
        }, function (error) {
          console.log('Oooops!');
        });
        this.http.httpViaPostbyApi1(endpoint, data).subscribe(function (res) {
          // console.log(res);
          _this41.allBillerData = res.results.res;
        }, function (error) {
          console.log('Oooops!');
        });
      }

      _createClass(CptValidateReportsComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this42 = this;

          var data = {
            "source": "patient_data_desc_patient_name",
            "condition": {},
            "token": this.jwtToken
          };
          this.http.httpViaPost("datalist", data).subscribe(function (response) {
            var start = false;
            var count = 0;

            for (var i in response.res) {
              if (response.res[i].doc_name_search != "") {
                for (var j in _this42.authval) {
                  if (response.res[i].doc_name == _this42.authval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this42.authval.push({
                    name: response.res[i].doc_name,
                    val: response.res[i].doc_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].tech_name_search != "") {
                for (var j in _this42.techval) {
                  if (response.res[i].tech_namesearch == _this42.techval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this42.techval.push({
                    name: response.res[i].tech_namesearch,
                    val: response.res[i].tech_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].parent_name_search != "") {
                for (var j in _this42.parentnameval) {
                  if (response.res[i].parent_namesearch == _this42.parentnameval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this42.parentnameval.push({
                    name: response.res[i].parent_namesearch,
                    val: response.res[i].parent_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].doctor_state_search != "") {
                for (var j in _this42.doctorstate) {
                  if (response.res[i].doctor_state == _this42.doctorstate[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this42.doctorstate.push({
                    name: response.res[i].doctor_state,
                    val: response.res[i].doctor_state_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].doctor_city_search != "") {
                for (var j in _this42.doctorcity) {
                  if (response.res[i].doctor_city == _this42.doctorcity[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this42.doctorcity.push({
                    name: response.res[i].doctor_city,
                    val: response.res[i].doctor_city_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].patient_city_search != "") {
                for (var j in _this42.patientcity) {
                  if (response.res[i].patient_city == _this42.patientcity[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this42.patientcity.push({
                    name: response.res[i].patient_city,
                    val: response.res[i].patient_city_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].patient_state_search != "") {
                for (var j in _this42.patientstate) {
                  if (response.res[i].patient_state == _this42.patientstate[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this42.patientstate.push({
                    name: response.res[i].patient_state,
                    val: response.res[i].patient_state_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].doctor_ofiice_name_search != "") {
                for (var j in _this42.docofficeval) {
                  if (response.res[i].doctor_ofiice_namesearch == _this42.docofficeval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this42.docofficeval.push({
                    name: response.res[i].doctor_ofiice_namesearch,
                    val: response.res[i].doctor_ofiice_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }
          }, function (error) {
            console.log('Oooops!');
          });
        }
      }, {
        key: "ngAfterViewInit",
        value: function ngAfterViewInit() {}
      }, {
        key: "viewReportProcessData",
        value: function viewReportProcessData(flag) {
          console.log(flag);
        }
      }]);

      return CptValidateReportsComponent;
    }();

    CptValidateReportsComponent.ctorParameters = function () {
      return [{
        type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__["HttpServiceService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatDialog"]
      }, {
        type: ngx_device_detector__WEBPACK_IMPORTED_MODULE_6__["DeviceDetectorService"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatSnackBar"]
      }];
    };

    CptValidateReportsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-cpt-validate-reports',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./cpt-validate-reports.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/cpt-validate-reports/cpt-validate-reports/cpt-validate-reports.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./cpt-validate-reports.component.css */
      "./src/app/components/admin/cpt-validate-reports/cpt-validate-reports/cpt-validate-reports.component.css"))["default"]]
    })], CptValidateReportsComponent);
    /***/
  },

  /***/
  "./src/app/components/admin/diagnostic-admin-management/add-edit-diagnostic-admin/add-edit-diagnostic-admin.component.css":
  /*!********************************************************************************************************************************!*\
    !*** ./src/app/components/admin/diagnostic-admin-management/add-edit-diagnostic-admin/add-edit-diagnostic-admin.component.css ***!
    \********************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminDiagnosticAdminManagementAddEditDiagnosticAdminAddEditDiagnosticAdminComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n.add_form{ margin: 20px auto; background: #f3f3f3; padding: 16px 10px; padding-bottom: 50px; border: 1px solid #91e7ff; }\n.add_form .form_wrapper .mat-form-field{ width: 49%; margin: 0.5%; }\n.add_form .form_wrapper textarea{ resize: none;}\n.add_form h2{ font-family: \"RobotoBlack\"; text-transform: uppercase; font-size: 24px; padding: 0 6px; color: #1dbce9; }\n.add_form .submit_form{\ndisplay: flex;\nwidth: 100%;\ntext-align: center;\nmargin-top: 30px;\njustify-content: center;\nmargin: auto; }\n.add_form .return_button { background: #1dbce9; color: #fff; margin-bottom: 12px;}\n\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9hZG1pbi9kaWFnbm9zdGljLWFkbWluLW1hbmFnZW1lbnQvYWRkLWVkaXQtZGlhZ25vc3RpYy1hZG1pbi9hZGQtZWRpdC1kaWFnbm9zdGljLWFkbWluLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLFdBQVcsaUJBQWlCLEVBQUUsbUJBQW1CLEVBQUUsa0JBQWtCLEVBQUUsb0JBQW9CLEVBQUUseUJBQXlCLEVBQUU7QUFDeEgseUNBQXlDLFVBQVUsRUFBRSxZQUFZLEVBQUU7QUFDbkUsa0NBQWtDLFlBQVksQ0FBQztBQUMvQyxjQUFjLDBCQUEwQixFQUFFLHlCQUF5QixFQUFFLGVBQWUsRUFBRSxjQUFjLEVBQUUsY0FBYyxFQUFFO0FBRXRIO0FBQ0EsYUFBYTtBQUNiLFdBQVc7QUFDWCxrQkFBa0I7QUFDbEIsZ0JBQWdCO0FBQ2hCLHVCQUF1QjtBQUN2QixZQUFZLEVBQUU7QUFFZCwyQkFBMkIsbUJBQW1CLEVBQUUsV0FBVyxFQUFFLG1CQUFtQixDQUFDIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9hZG1pbi9kaWFnbm9zdGljLWFkbWluLW1hbmFnZW1lbnQvYWRkLWVkaXQtZGlhZ25vc3RpYy1hZG1pbi9hZGQtZWRpdC1kaWFnbm9zdGljLWFkbWluLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcbi5hZGRfZm9ybXsgbWFyZ2luOiAyMHB4IGF1dG87IGJhY2tncm91bmQ6ICNmM2YzZjM7IHBhZGRpbmc6IDE2cHggMTBweDsgcGFkZGluZy1ib3R0b206IDUwcHg7IGJvcmRlcjogMXB4IHNvbGlkICM5MWU3ZmY7IH1cbi5hZGRfZm9ybSAuZm9ybV93cmFwcGVyIC5tYXQtZm9ybS1maWVsZHsgd2lkdGg6IDQ5JTsgbWFyZ2luOiAwLjUlOyB9XG4uYWRkX2Zvcm0gLmZvcm1fd3JhcHBlciB0ZXh0YXJlYXsgcmVzaXplOiBub25lO31cbi5hZGRfZm9ybSBoMnsgZm9udC1mYW1pbHk6IFwiUm9ib3RvQmxhY2tcIjsgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgZm9udC1zaXplOiAyNHB4OyBwYWRkaW5nOiAwIDZweDsgY29sb3I6ICMxZGJjZTk7IH1cblxuLmFkZF9mb3JtIC5zdWJtaXRfZm9ybXtcbmRpc3BsYXk6IGZsZXg7XG53aWR0aDogMTAwJTtcbnRleHQtYWxpZ246IGNlbnRlcjtcbm1hcmdpbi10b3A6IDMwcHg7XG5qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbm1hcmdpbjogYXV0bzsgfVxuXG4uYWRkX2Zvcm0gLnJldHVybl9idXR0b24geyBiYWNrZ3JvdW5kOiAjMWRiY2U5OyBjb2xvcjogI2ZmZjsgbWFyZ2luLWJvdHRvbTogMTJweDt9XG5cbiJdfQ== */";
    /***/
  },

  /***/
  "./src/app/components/admin/diagnostic-admin-management/add-edit-diagnostic-admin/add-edit-diagnostic-admin.component.ts":
  /*!*******************************************************************************************************************************!*\
    !*** ./src/app/components/admin/diagnostic-admin-management/add-edit-diagnostic-admin/add-edit-diagnostic-admin.component.ts ***!
    \*******************************************************************************************************************************/

  /*! exports provided: AddEditDiagnosticAdminComponent, DiagnosticAdminPasswordChange */

  /***/
  function srcAppComponentsAdminDiagnosticAdminManagementAddEditDiagnosticAdminAddEditDiagnosticAdminComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AddEditDiagnosticAdminComponent", function () {
      return AddEditDiagnosticAdminComponent;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DiagnosticAdminPasswordChange", function () {
      return DiagnosticAdminPasswordChange;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var _class_common_common_function__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../../../../class/common/common-function */
    "./src/app/class/common/common-function.ts");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ../../../../../environments/environment */
    "./src/environments/environment.ts");

    var AddEditDiagnosticAdminComponent = /*#__PURE__*/function () {
      function AddEditDiagnosticAdminComponent(fb, activeRoute, router, httpService, datePipe, cookie, snackBar, commonFunction, dialog) {
        _classCallCheck(this, AddEditDiagnosticAdminComponent);

        this.fb = fb;
        this.activeRoute = activeRoute;
        this.router = router;
        this.httpService = httpService;
        this.datePipe = datePipe;
        this.cookie = cookie;
        this.snackBar = snackBar;
        this.commonFunction = commonFunction;
        this.dialog = dialog;
        this.htmlText = {
          userData: "",
          header: 'Add Diagnostic Admin',
          nav: 'Add Diagnostic Admin',
          buttonText: 'Save',
          message: "Submitted Successfully",
          states: "",
          allCities: "",
          cities: ""
        };
        this.contactPerson = new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormArray"]([]);
        this.htmlText.userData = cookie.getAll();
        this.allStateCityData();

        if (this.activeRoute.snapshot.params._id) {
          this.generateAddEditForm('edit');
          this.htmlText.message = "Updated Successfully";
          this.htmlText.header = 'Edit Diagnostic Admin';
          this.htmlText.nav = 'Edit Diagnostic Admin';
          this.htmlText.buttonText = 'Update';
          this.params_id = this.activeRoute.snapshot.params._id;
        } else {
          this.generateAddEditForm('add');
        }
      }

      _createClass(AddEditDiagnosticAdminComponent, [{
        key: "generateAddEditForm",
        value: function generateAddEditForm() {
          var _this43 = this;

          var flag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
          var validateRule = {
            id: ['', []],
            center_name: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(50)]],
            email: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].email, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(100)]],
            phone: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(7), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(16)]],
            fax: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(7), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(16)]],
            address: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(200)]],
            zip: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(4), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(18)]],
            city: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
            state: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
            user_type: ['diagnostic_admin', []],
            status: ['', []],
            password: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(16), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(6)]],
            confirmpassword: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
            // Contact person
            contact_person_1_name: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(50)]],
            contact_person_1_email: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].email, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(100)]],
            contact_person_1_phone: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(7), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(16)]],
            contact_person_2_name: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(50)]],
            contact_person_2_email: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].email, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(100)]],
            contact_person_2_phone: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(7), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(16)]]
          };
          var passwordRule = {
            validators: this.matchpassword('password', 'confirmpassword')
          };

          switch (flag) {
            case 'edit':
              delete validateRule.password;
              delete validateRule.confirmpassword;
              this.DiagnosticAdminManagementAddEditForm = this.fb.group(validateRule);
              this.activeRoute.data.forEach(function (data) {
                console.log(data);
                var diagnosticAdmin = data.data.res[0];
                setTimeout(function () {
                  _this43.getCity(diagnosticAdmin.state);
                }, 1000);

                _this43.DiagnosticAdminManagementAddEditForm.controls['id'].patchValue(diagnosticAdmin._id);

                _this43.DiagnosticAdminManagementAddEditForm.controls['center_name'].patchValue(diagnosticAdmin.center_name);

                _this43.DiagnosticAdminManagementAddEditForm.controls['email'].patchValue(diagnosticAdmin.email);

                _this43.DiagnosticAdminManagementAddEditForm.controls['phone'].patchValue(diagnosticAdmin.phone);

                _this43.DiagnosticAdminManagementAddEditForm.controls['fax'].patchValue(diagnosticAdmin.phone);

                _this43.DiagnosticAdminManagementAddEditForm.controls['address'].patchValue(diagnosticAdmin.address);

                _this43.DiagnosticAdminManagementAddEditForm.controls['zip'].patchValue(diagnosticAdmin.zip);

                _this43.DiagnosticAdminManagementAddEditForm.controls['city'].patchValue(diagnosticAdmin.city);

                _this43.DiagnosticAdminManagementAddEditForm.controls['state'].patchValue(diagnosticAdmin.state);

                _this43.DiagnosticAdminManagementAddEditForm.controls['status'].patchValue(diagnosticAdmin.status);

                _this43.DiagnosticAdminManagementAddEditForm.controls['contact_person_1_name'].patchValue(diagnosticAdmin.contact_person[0].name);

                _this43.DiagnosticAdminManagementAddEditForm.controls['contact_person_1_email'].patchValue(diagnosticAdmin.contact_person[0].email);

                _this43.DiagnosticAdminManagementAddEditForm.controls['contact_person_1_phone'].patchValue(diagnosticAdmin.contact_person[0].phone);

                _this43.DiagnosticAdminManagementAddEditForm.controls['contact_person_2_name'].patchValue(diagnosticAdmin.contact_person[1].name);

                _this43.DiagnosticAdminManagementAddEditForm.controls['contact_person_2_email'].patchValue(diagnosticAdmin.contact_person[1].email);

                _this43.DiagnosticAdminManagementAddEditForm.controls['contact_person_2_phone'].patchValue(diagnosticAdmin.contact_person[1].phone);
              });
              break;

            case 'add':
              delete validateRule.id;
              this.DiagnosticAdminManagementAddEditForm = this.fb.group(validateRule);
              break;
          }
        }
      }, {
        key: "ngOnInit",
        value: function ngOnInit() {}
      }, {
        key: "matchpassword",
        value: function matchpassword(passwordkye, confirmpasswordkye) {
          return function (group) {
            var passwordInput = group.controls[passwordkye],
                confirmpasswordInput = group.controls[confirmpasswordkye];

            if (passwordInput.value !== confirmpasswordInput.value) {
              return confirmpasswordInput.setErrors({
                notEquivalent: true
              });
            } else {
              return confirmpasswordInput.setErrors(null);
            }
          };
        }
      }, {
        key: "openDialog",
        value: function openDialog(x) {
          this.dialogRef = this.dialog.open(DiagnosticAdminPasswordChange, {
            data: {
              message: x,
              'id': this.params_id
            }
          });
          this.dialogRef.afterClosed().subscribe(function (result) {});
        }
        /**for validation purpose**/

      }, {
        key: "inputUntouch",
        value: function inputUntouch(form, val) {
          form.controls[val].markAsUntouched();
        }
        /**for validation purpose**/

        /**for getting all states & cities function start here**/

      }, {
        key: "allStateCityData",
        value: function allStateCityData() {
          var _this44 = this;

          this.httpService.getSiteSettingData("./assets/data-set/state.json").subscribe(function (response) {
            _this44.htmlText.states = response; // this.getResolveData();
          });
          this.httpService.getSiteSettingData("./assets/data-set/city.json").subscribe(function (response) {
            _this44.htmlText.allCities = response;
          });
        }
        /**for getting all states & cities  function end here**/

      }, {
        key: "getCity",
        value: function getCity(event) {
          var val = event;
          this.htmlText.cities = this.htmlText.allCities[val];
        }
      }, {
        key: "getCityByName",
        value: function getCityByName(stateName) {
          this.htmlText.cities = this.htmlText.allCities[stateName];
        }
      }, {
        key: "TechManagementAddFormFormSubmit",
        value: function TechManagementAddFormFormSubmit() {
          var _this45 = this;

          for (var x in this.DiagnosticAdminManagementAddEditForm.controls) {
            this.DiagnosticAdminManagementAddEditForm.controls[x].markAsTouched();
          }

          if (this.DiagnosticAdminManagementAddEditForm.valid) {
            delete this.DiagnosticAdminManagementAddEditForm.value.confirmpassword;

            if (this.DiagnosticAdminManagementAddEditForm.value.status) {
              this.DiagnosticAdminManagementAddEditForm.value.status = parseInt("1");
            } else {
              this.DiagnosticAdminManagementAddEditForm.value.status = parseInt("0");
            } // data structure


            this.DiagnosticAdminManagementAddEditForm.value.contact_person = [{
              "name": this.DiagnosticAdminManagementAddEditForm.value.contact_person_1_name,
              "email": this.DiagnosticAdminManagementAddEditForm.value.contact_person_1_email,
              "phone": this.DiagnosticAdminManagementAddEditForm.value.contact_person_1_phone
            }, {
              "name": this.DiagnosticAdminManagementAddEditForm.value.contact_person_2_name,
              "email": this.DiagnosticAdminManagementAddEditForm.value.contact_person_2_email,
              "phone": this.DiagnosticAdminManagementAddEditForm.value.contact_person_2_phone
            }];
            delete this.DiagnosticAdminManagementAddEditForm.value.contact_person_1_name;
            delete this.DiagnosticAdminManagementAddEditForm.value.contact_person_1_email;
            delete this.DiagnosticAdminManagementAddEditForm.value.contact_person_1_phone;
            delete this.DiagnosticAdminManagementAddEditForm.value.contact_person_2_name;
            delete this.DiagnosticAdminManagementAddEditForm.value.contact_person_2_email;
            delete this.DiagnosticAdminManagementAddEditForm.value.contact_person_2_phone;
            var data = {
              "source": "data_pece",
              "data": this.DiagnosticAdminManagementAddEditForm.value,
              "token": this.htmlText.userData.jwtToken,
              "domainurl": _environments_environment__WEBPACK_IMPORTED_MODULE_9__["environment"].siteBaseUrl + 'reset-password'
            };
            this.httpService.httpViaPost("addorupdatedata", data).subscribe(function (response) {
              if (response.status == "success") {
                _this45.snackBar.open(_this45.htmlText.message, 'Ok', {
                  duration: 2000
                });

                _this45.formDirective.resetForm();

                setTimeout(function () {
                  _this45.router.navigateByUrl("admin/diagnostic-admin-management");
                }, 2000);
              } else {
                _this45.snackBar.open(response.msg, '', {
                  duration: 2000
                });
              }
            });
          }
        }
      }]);

      return AddEditDiagnosticAdminComponent;
    }();

    AddEditDiagnosticAdminComponent.ctorParameters = function () {
      return [{
        type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__["HttpServiceService"]
      }, {
        type: _angular_common__WEBPACK_IMPORTED_MODULE_5__["DatePipe"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_6__["CookieService"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatSnackBar"]
      }, {
        type: _class_common_common_function__WEBPACK_IMPORTED_MODULE_8__["CommonFunction"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatDialog"]
      }];
    };

    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroupDirective"], {
      "static": false
    })], AddEditDiagnosticAdminComponent.prototype, "formDirective", void 0);
    AddEditDiagnosticAdminComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-add-edit-diagnostic-admin',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./add-edit-diagnostic-admin.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/diagnostic-admin-management/add-edit-diagnostic-admin/add-edit-diagnostic-admin.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./add-edit-diagnostic-admin.component.css */
      "./src/app/components/admin/diagnostic-admin-management/add-edit-diagnostic-admin/add-edit-diagnostic-admin.component.css"))["default"]]
    })], AddEditDiagnosticAdminComponent);
    /**this is only for the Change Password modal in the edit page**/

    var DiagnosticAdminPasswordChange = /*#__PURE__*/function () {
      function DiagnosticAdminPasswordChange(dialogRef, fb, httpService, cookie, activeRoute, data) {
        _classCallCheck(this, DiagnosticAdminPasswordChange);

        this.dialogRef = dialogRef;
        this.fb = fb;
        this.httpService = httpService;
        this.cookie = cookie;
        this.activeRoute = activeRoute;
        this.data = data;
        this.changePwdForm = _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroup"];
        this.params_id = data.id;
        this.user_token = cookie.get('jwtToken');
        this.changePwdForm = this.fb.group({
          password: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(16), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(6)]],
          confirmpassword: []
        }, {
          validators: this.matchpassword('password', 'confirmpassword')
        });
      }

      _createClass(DiagnosticAdminPasswordChange, [{
        key: "matchpassword",
        value: function matchpassword(passwordkye, confirmpasswordkye) {
          return function (group) {
            var passwordInput = group.controls[passwordkye],
                confirmpasswordInput = group.controls[confirmpasswordkye];

            if (passwordInput.value !== confirmpasswordInput.value) {
              return confirmpasswordInput.setErrors({
                notEquivalent: true
              });
            } else {
              return confirmpasswordInput.setErrors(null);
            }
          };
        }
      }, {
        key: "changePasswordFormSubmit",
        value: function changePasswordFormSubmit() {
          var x;

          for (x in this.changePwdForm.controls) {
            this.changePwdForm.controls[x].markAsTouched();
          }

          if (this.changePwdForm.valid) {
            delete this.changePwdForm.value.confirmpassword;
            var data = {
              "_id": this.params_id,
              "adminflag": 1,
              "newPassword": this.changePwdForm.value.password
            };
            this.httpService.httpViaPost('changepassword', data).subscribe(function (response) {
              console.log("response", response);
            });
          }
        }
      }]);

      return DiagnosticAdminPasswordChange;
    }();

    DiagnosticAdminPasswordChange.ctorParameters = function () {
      return [{
        type: _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatDialogRef"]
      }, {
        type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__["HttpServiceService"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_6__["CookieService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"]
      }, {
        type: undefined,
        decorators: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
          args: [_angular_material__WEBPACK_IMPORTED_MODULE_7__["MAT_DIALOG_DATA"]]
        }]
      }];
    };

    DiagnosticAdminPasswordChange = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'diagnostic-admin-password-change',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./modal.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/diagnostic-admin-management/add-edit-diagnostic-admin/modal.html"))["default"]
    }), tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](5, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_7__["MAT_DIALOG_DATA"]))], DiagnosticAdminPasswordChange);
    /***/
  },

  /***/
  "./src/app/components/admin/diagnostic-admin-management/listing-diagnostic-admin/listing-diagnostic-admin.component.css":
  /*!******************************************************************************************************************************!*\
    !*** ./src/app/components/admin/diagnostic-admin-management/listing-diagnostic-admin/listing-diagnostic-admin.component.css ***!
    \******************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminDiagnosticAdminManagementListingDiagnosticAdminListingDiagnosticAdminComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW4vZGlhZ25vc3RpYy1hZG1pbi1tYW5hZ2VtZW50L2xpc3RpbmctZGlhZ25vc3RpYy1hZG1pbi9saXN0aW5nLWRpYWdub3N0aWMtYWRtaW4uY29tcG9uZW50LmNzcyJ9 */";
    /***/
  },

  /***/
  "./src/app/components/admin/diagnostic-admin-management/listing-diagnostic-admin/listing-diagnostic-admin.component.ts":
  /*!*****************************************************************************************************************************!*\
    !*** ./src/app/components/admin/diagnostic-admin-management/listing-diagnostic-admin/listing-diagnostic-admin.component.ts ***!
    \*****************************************************************************************************************************/

  /*! exports provided: ListingDiagnosticAdminComponent */

  /***/
  function srcAppComponentsAdminDiagnosticAdminManagementListingDiagnosticAdminListingDiagnosticAdminComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ListingDiagnosticAdminComponent", function () {
      return ListingDiagnosticAdminComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_common_http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/common/http */
    "./node_modules/@angular/common/fesm2015/http.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _class_common_common_function__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../../../../class/common/common-function */
    "./src/app/class/common/common-function.ts");
    /* harmony import */


    var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/material/dialog */
    "./node_modules/@angular/material/esm2015/dialog.js");
    /* harmony import */


    var _common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../../../common/dialog-box/dialog-box.component */
    "./src/app/components/common/dialog-box/dialog-box.component.ts");

    var ListingDiagnosticAdminComponent = /*#__PURE__*/function () {
      function ListingDiagnosticAdminComponent(cookie, http, httpService, activatedRoute, commonFunction, dialog, router) {
        _classCallCheck(this, ListingDiagnosticAdminComponent);

        this.cookie = cookie;
        this.http = http;
        this.httpService = httpService;
        this.activatedRoute = activatedRoute;
        this.commonFunction = commonFunction;
        this.dialog = dialog;
        this.router = router;
        this.allUserData = [];
        this.diagnosticadminData_count = 0;
        this.allUserData_skip = ["_id", "contact_person", "address", "zip", "city", "state", "user_type", "password", "created_at", "id", "updated_at", "name_search"];
        this.editUrl = "admin/diagnostic-admin-management/edit";
        this.allUserData_modify_header = {
          "center name": "Center Name",
          "email": "Email",
          "status": "Status",
          "phone": "Phone Number",
          "FAX": "fax"
        };
        this.previewModal_detail_skip = ["_id", "user_type", "password", "created_at", "id", "updated_at"];
        this.UpdateEndpoint = "addorupdatedata";
        this.deleteEndpoint = "deletesingledata";
        this.tableName = "data_pece";
        this.status = [{
          val: 1,
          'name': 'Active'
        }, {
          val: 0,
          'name': 'Inactive'
        }];
        this.SearchingEndpoint = "datalist";
        this.datacollection = 'getdiagnosticadminlistdata';
        this.SearchingSourceName = "data_diagnostic_admin_list";
        this.sortdata = {
          "type": 'desc',
          "field": 'centername',
          "options": ['center_name']
        };
        this.limitcond = {
          "limit": 10,
          "skip": 0,
          "pagecount": 1
        };
        this.libdata = {
          basecondition: "",
          updateendpoint: 'statusupdate',
          // tableheaders: ['firstname', 'lastname', 'email', 'phone', 'practice_name', 'npi', 'status', 'created_date',], //not required
          custombuttons: [{
            label: "Log Me",
            type: 'listner',
            id: 'i1'
          }]
        };
        this.search_settings = {
          selectsearch: [{
            label: 'Search By Status',
            field: 'status',
            values: this.status
          }],
          textsearch: [{
            label: "Search By Name",
            field: 'name_search'
          }, {
            label: "Search By E-Mail",
            field: 'email'
          }]
        };
        this.TechDashboardAllData = [];
        /* Set Meta Data */

        this.commonFunction.setTitleMetaTags();
        this.user_cookie = cookie.get('jwtToken');
        this.apiUrl = httpService.baseUrl;
        this.userData = JSON.parse(cookie.get('user_details'));
      }

      _createClass(ListingDiagnosticAdminComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this46 = this;

          this.datasource = '';
          var endpoint = 'getdiagnosticadminlistdata';
          var endpointc = 'getdiagnosticadminlistdata-count';
          var data = {
            "condition": {
              "limit": 10,
              "skip": 0
            },
            sort: {
              "type": 'desc',
              "field": 'centername'
            }
          };
          this.httpService.httpViaPost(endpointc, data).subscribe(function (res) {
            // console.log('in constructor');
            // console.log(result);
            _this46.diagnosticadminData_count = res.count; //console.warn('blogData c',res);
          }, function (error) {
            console.log('Oooops!');
          });
          this.httpService.httpViaPost(endpoint, data).subscribe(function (res) {
            _this46.TechDashboardAllData = res.results.res;
          }, function (error) {
            console.log('Oooops!');
          });
        }
      }, {
        key: "listenLiblistingChange",
        value: function listenLiblistingChange() {
          var _this47 = this;

          var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;

          if (data != null) {
            switch (data.custombuttonclick.btninfo.label) {
              case "Log Me":
                var modalData1 = {
                  panelClass: 'bulkupload-dialog',
                  data: {
                    header: "Alert",
                    message: "Do you want to login as Diagnostic Admin : " + data.custombuttonclick.data.center_name + "?",
                    button1: {
                      text: "Yes"
                    },
                    button2: {
                      text: "No"
                    }
                  }
                };
                var dialogRef1 = this.dialog.open(_common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_8__["DialogBoxComponent"], modalData1);
                dialogRef1.afterClosed().subscribe(function (result) {
                  switch (result) {
                    case "Yes":
                      // Delete Cookie
                      _this47.cookie["delete"]('user_details');

                      _this47.cookie["delete"]('main_user');

                      _this47.cookie["delete"]('jwtToken');

                      _this47.cookie.deleteAll('/');

                      setTimeout(function () {
                        // Reset again Cookie
                        _this47.cookie.set('jwtToken', _this47.user_cookie);

                        _this47.cookie.set('user_details', JSON.stringify(data.custombuttonclick.data));

                        _this47.cookie.set('main_user', JSON.stringify(_this47.userData)); // Redirect to page


                        _this47.router.navigateByUrl("diagnostic-admin/dashboard");
                      }, 500);
                      break;

                    case "No":
                      dialogRef1.close();
                      break;
                  }
                });
                break;
            }
          }
        }
      }]);

      return ListingDiagnosticAdminComponent;
    }();

    ListingDiagnosticAdminComponent.ctorParameters = function () {
      return [{
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__["HttpServiceService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"]
      }, {
        type: _class_common_common_function__WEBPACK_IMPORTED_MODULE_6__["CommonFunction"]
      }, {
        type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_7__["MatDialog"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"]
      }];
    };

    ListingDiagnosticAdminComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-listing-diagnostic-admin',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./listing-diagnostic-admin.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/diagnostic-admin-management/listing-diagnostic-admin/listing-diagnostic-admin.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./listing-diagnostic-admin.component.css */
      "./src/app/components/admin/diagnostic-admin-management/listing-diagnostic-admin/listing-diagnostic-admin.component.css"))["default"]]
    })], ListingDiagnosticAdminComponent);
    /***/
  },

  /***/
  "./src/app/components/admin/doctor-management/addedit-doctor/addedit-doctor.component.css":
  /*!************************************************************************************************!*\
    !*** ./src/app/components/admin/doctor-management/addedit-doctor/addedit-doctor.component.css ***!
    \************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminDoctorManagementAddeditDoctorAddeditDoctorComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n\n\n.add_form{  margin: 20px auto; background: #fff; padding: 16px 10px; padding-bottom: 50px; border: 1px solid #91e7ff; }\n.add_form .form_wrapper .mat-form-field{ width: 49%; margin: 0.5%; }\n.add_form .form_wrapper textarea{ resize: none;}\n.add_form h2{ font-family: \"RobotoBlack\"; text-transform: uppercase; font-size: 24px; padding: 0 6px; color: #1dbce9; }\n.add_form .submit_form { display: flex; width: 100%; justify-content: center; text-align: center; margin-top: 30px; }\n.add_form .return_button { background: #1dbce9; color: #fff; margin-bottom: 12px;}\n@media screen and (max-width: 1460px){\n  .techdashboard_header .mat-toolbar-row .quotation p { font-size: 24px; line-height: 26px;}\n  .add_form .submit_form button { margin: 0 8px; font-size: 20px; padding: 6px;  width: 250px; }\n}\n@media screen and (max-width: 1199px){\n  .add_form .submit_form button {  font-size: 16px; width: 200px; }\n\n}\n@media screen and (max-width: 991px){\n.techdashboard_header .mat-toolbar-row { flex-direction: column; padding: 20px;}\n.techdashboard_header .mat-toolbar-row .quotation p { margin-top: 16px; }\n.add_form .submit_form { display: flex; flex-wrap: wrap; } \n.add_form .submit_form button { width: auto; padding: 0 10px; min-width: 130px; }\n}\n@media screen and (max-width: 768px){\n  .add_form .form_wrapper .mat-form-field { width: 100%; margin: 0; }\n}\n@media screen and (max-width: 576px){\n.add_form .submit_form button { font-size: 22px; padding: 2px; }\n\n.add_form .submit_form button { width: 100%; margin: 0; margin-top: 20px; }\n.add_form .submit_form { display: flex; flex-direction: column-reverse; text-align: center; margin-top: 0px; }\n.add_form .submit_form button:nth-child(1) { margin-right: 0; margin-top: 20px; }\n}\n@media screen and (max-width: 360px){\n.techdashboard_header .mat-toolbar-row .quotation p { font-size: 16px; line-height: 22px; }\n.add_form h2 { font-size: 22px; line-height: 24px; text-align: center; }\n}\n.add_header button{ margin-left: auto;\n  background: linear-gradient(180deg, #fac855, #e47e2a)!important;\n  text-transform: uppercase;\n  font-family: \"RobotoBlack\"; padding-top: 4px;\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9hZG1pbi9kb2N0b3ItbWFuYWdlbWVudC9hZGRlZGl0LWRvY3Rvci9hZGRlZGl0LWRvY3Rvci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUdBLFlBQVksaUJBQWlCLEVBQUUsZ0JBQWdCLEVBQUUsa0JBQWtCLEVBQUUsb0JBQW9CLEVBQUUseUJBQXlCLEVBQUU7QUFDdEgseUNBQXlDLFVBQVUsRUFBRSxZQUFZLEVBQUU7QUFDbkUsa0NBQWtDLFlBQVksQ0FBQztBQUMvQyxjQUFjLDBCQUEwQixFQUFFLHlCQUF5QixFQUFFLGVBQWUsRUFBRSxjQUFjLEVBQUUsY0FBYyxFQUFFO0FBQ3RILHlCQUF5QixhQUFhLEVBQUUsV0FBVyxFQUFFLHVCQUF1QixFQUFFLGtCQUFrQixFQUFFLGdCQUFnQixFQUFFO0FBR3BILDJCQUEyQixtQkFBbUIsRUFBRSxXQUFXLEVBQUUsbUJBQW1CLENBQUM7QUFFakY7RUFDRSxzREFBc0QsZUFBZSxFQUFFLGlCQUFpQixDQUFDO0VBQ3pGLGdDQUFnQyxhQUFhLEVBQUUsZUFBZSxFQUFFLFlBQVksR0FBRyxZQUFZLEVBQUU7QUFDL0Y7QUFFQTtFQUNFLGlDQUFpQyxlQUFlLEVBQUUsWUFBWSxFQUFFOztBQUVsRTtBQUVBO0FBQ0EseUNBQXlDLHNCQUFzQixFQUFFLGFBQWEsQ0FBQztBQUMvRSxzREFBc0QsZ0JBQWdCLEVBQUU7QUFDeEUseUJBQXlCLGFBQWEsRUFBRSxlQUFlLEVBQUU7QUFDekQsZ0NBQWdDLFdBQVcsRUFBRSxlQUFlLEVBQUUsZ0JBQWdCLEVBQUU7QUFDaEY7QUFDQTtFQUNFLDBDQUEwQyxXQUFXLEVBQUUsU0FBUyxFQUFFO0FBQ3BFO0FBQ0E7QUFDQSxnQ0FBZ0MsZUFBZSxFQUFFLFlBQVksRUFBRTs7QUFFL0QsZ0NBQWdDLFdBQVcsRUFBRSxTQUFTLEVBQUUsZ0JBQWdCLEVBQUU7QUFDMUUseUJBQXlCLGFBQWEsRUFBRSw4QkFBOEIsRUFBRSxrQkFBa0IsRUFBRSxlQUFlLEVBQUU7QUFDN0csNkNBQTZDLGVBQWUsRUFBRSxnQkFBZ0IsRUFBRTtBQUNoRjtBQUVBO0FBQ0Esc0RBQXNELGVBQWUsRUFBRSxpQkFBaUIsRUFBRTtBQUMxRixlQUFlLGVBQWUsRUFBRSxpQkFBaUIsRUFBRSxrQkFBa0IsRUFBRTtBQUN2RTtBQUVBLG9CQUFvQixpQkFBaUI7RUFDbkMsK0RBQStEO0VBQy9ELHlCQUF5QjtFQUN6QiwwQkFBMEIsRUFBRSxnQkFBZ0I7QUFDOUMiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2FkbWluL2RvY3Rvci1tYW5hZ2VtZW50L2FkZGVkaXQtZG9jdG9yL2FkZGVkaXQtZG9jdG9yLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcblxuXG4uYWRkX2Zvcm17ICBtYXJnaW46IDIwcHggYXV0bzsgYmFja2dyb3VuZDogI2ZmZjsgcGFkZGluZzogMTZweCAxMHB4OyBwYWRkaW5nLWJvdHRvbTogNTBweDsgYm9yZGVyOiAxcHggc29saWQgIzkxZTdmZjsgfVxuLmFkZF9mb3JtIC5mb3JtX3dyYXBwZXIgLm1hdC1mb3JtLWZpZWxkeyB3aWR0aDogNDklOyBtYXJnaW46IDAuNSU7IH1cbi5hZGRfZm9ybSAuZm9ybV93cmFwcGVyIHRleHRhcmVheyByZXNpemU6IG5vbmU7fVxuLmFkZF9mb3JtIGgyeyBmb250LWZhbWlseTogXCJSb2JvdG9CbGFja1wiOyB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyBmb250LXNpemU6IDI0cHg7IHBhZGRpbmc6IDAgNnB4OyBjb2xvcjogIzFkYmNlOTsgfVxuLmFkZF9mb3JtIC5zdWJtaXRfZm9ybSB7IGRpc3BsYXk6IGZsZXg7IHdpZHRoOiAxMDAlOyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgdGV4dC1hbGlnbjogY2VudGVyOyBtYXJnaW4tdG9wOiAzMHB4OyB9XG5cblxuLmFkZF9mb3JtIC5yZXR1cm5fYnV0dG9uIHsgYmFja2dyb3VuZDogIzFkYmNlOTsgY29sb3I6ICNmZmY7IG1hcmdpbi1ib3R0b206IDEycHg7fSBcblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTQ2MHB4KXtcbiAgLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5tYXQtdG9vbGJhci1yb3cgLnF1b3RhdGlvbiBwIHsgZm9udC1zaXplOiAyNHB4OyBsaW5lLWhlaWdodDogMjZweDt9XG4gIC5hZGRfZm9ybSAuc3VibWl0X2Zvcm0gYnV0dG9uIHsgbWFyZ2luOiAwIDhweDsgZm9udC1zaXplOiAyMHB4OyBwYWRkaW5nOiA2cHg7ICB3aWR0aDogMjUwcHg7IH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTE5OXB4KXtcbiAgLmFkZF9mb3JtIC5zdWJtaXRfZm9ybSBidXR0b24geyAgZm9udC1zaXplOiAxNnB4OyB3aWR0aDogMjAwcHg7IH1cblxufVxuIFxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTkxcHgpe1xuLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5tYXQtdG9vbGJhci1yb3cgeyBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyBwYWRkaW5nOiAyMHB4O31cbi50ZWNoZGFzaGJvYXJkX2hlYWRlciAubWF0LXRvb2xiYXItcm93IC5xdW90YXRpb24gcCB7IG1hcmdpbi10b3A6IDE2cHg7IH1cbi5hZGRfZm9ybSAuc3VibWl0X2Zvcm0geyBkaXNwbGF5OiBmbGV4OyBmbGV4LXdyYXA6IHdyYXA7IH0gXG4uYWRkX2Zvcm0gLnN1Ym1pdF9mb3JtIGJ1dHRvbiB7IHdpZHRoOiBhdXRvOyBwYWRkaW5nOiAwIDEwcHg7IG1pbi13aWR0aDogMTMwcHg7IH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KXtcbiAgLmFkZF9mb3JtIC5mb3JtX3dyYXBwZXIgLm1hdC1mb3JtLWZpZWxkIHsgd2lkdGg6IDEwMCU7IG1hcmdpbjogMDsgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTc2cHgpe1xuLmFkZF9mb3JtIC5zdWJtaXRfZm9ybSBidXR0b24geyBmb250LXNpemU6IDIycHg7IHBhZGRpbmc6IDJweDsgfVxuXG4uYWRkX2Zvcm0gLnN1Ym1pdF9mb3JtIGJ1dHRvbiB7IHdpZHRoOiAxMDAlOyBtYXJnaW46IDA7IG1hcmdpbi10b3A6IDIwcHg7IH1cbi5hZGRfZm9ybSAuc3VibWl0X2Zvcm0geyBkaXNwbGF5OiBmbGV4OyBmbGV4LWRpcmVjdGlvbjogY29sdW1uLXJldmVyc2U7IHRleHQtYWxpZ246IGNlbnRlcjsgbWFyZ2luLXRvcDogMHB4OyB9XG4uYWRkX2Zvcm0gLnN1Ym1pdF9mb3JtIGJ1dHRvbjpudGgtY2hpbGQoMSkgeyBtYXJnaW4tcmlnaHQ6IDA7IG1hcmdpbi10b3A6IDIwcHg7IH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMzYwcHgpe1xuLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5tYXQtdG9vbGJhci1yb3cgLnF1b3RhdGlvbiBwIHsgZm9udC1zaXplOiAxNnB4OyBsaW5lLWhlaWdodDogMjJweDsgfVxuLmFkZF9mb3JtIGgyIHsgZm9udC1zaXplOiAyMnB4OyBsaW5lLWhlaWdodDogMjRweDsgdGV4dC1hbGlnbjogY2VudGVyOyB9XG59XG5cbi5hZGRfaGVhZGVyIGJ1dHRvbnsgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxODBkZWcsICNmYWM4NTUsICNlNDdlMmEpIWltcG9ydGFudDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvQmxhY2tcIjsgcGFkZGluZy10b3A6IDRweDtcbn1cbiJdfQ== */";
    /***/
  },

  /***/
  "./src/app/components/admin/doctor-management/addedit-doctor/addedit-doctor.component.ts":
  /*!***********************************************************************************************!*\
    !*** ./src/app/components/admin/doctor-management/addedit-doctor/addedit-doctor.component.ts ***!
    \***********************************************************************************************/

  /*! exports provided: AddeditDoctorComponent, ChangePasswordDoctorModal */

  /***/
  function srcAppComponentsAdminDoctorManagementAddeditDoctorAddeditDoctorComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AddeditDoctorComponent", function () {
      return AddeditDoctorComponent;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ChangePasswordDoctorModal", function () {
      return ChangePasswordDoctorModal;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/material/dialog */
    "./node_modules/@angular/material/esm2015/dialog.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");

    var AddeditDoctorComponent = /*#__PURE__*/function () {
      function AddeditDoctorComponent(formBuilder, http, cookieService, dialog, router, acivatedRoute, snackBar) {
        _classCallCheck(this, AddeditDoctorComponent);

        this.formBuilder = formBuilder;
        this.http = http;
        this.cookieService = cookieService;
        this.dialog = dialog;
        this.router = router;
        this.acivatedRoute = acivatedRoute;
        this.snackBar = snackBar;
        this.params_id = '';
        this.htmlText = {
          userData: "",
          header: 'Add New Doctor',
          nav: 'Add Doctor',
          buttonText: 'Save',
          message: "Submitted Successfully",
          doctorOfficeData: [],
          techData: [],
          parent_type: [{
            name: "Distributor",
            value: "distributor"
          }, {
            name: "DiagnosticAdmin",
            value: "diagnostic_admin"
          }, {
            name: "DoctorGroup",
            value: "doctor_group"
          }],
          parent_id: [],
          cpt_amount: [{
            value: 12
          }, {
            value: 13
          }, {
            value: 14
          }, {
            value: 15
          }],
          billerData: [],
          states: "",
          allCities: "",
          cities: "",
          taxonomies: "",
          user_details: ""
        };
        this.htmlText.userData = this.cookieService.getAll();
        this.htmlText.user_details = JSON.parse(this.htmlText.userData.user_details);
        this.allStateCityData(); // this.getAllData();
        // this.f();

        if (this.htmlText.user_details.user_type != 'admin' && typeof this.acivatedRoute.snapshot.params._id == 'undefined') {
          this.getalldata(this.htmlText.user_details);
        } else if (typeof this.acivatedRoute.snapshot.params._id == 'undefined') {
          this.getalldata();
        } // console.log('type',typeof(this.acivatedRoute.snapshot.params._id))


        if (this.acivatedRoute.snapshot.params._id) {
          this.generateAddEditForm('edit');
          this.htmlText.message = "Updated Successfully";
          this.htmlText.header = 'Edit Doctor Record';
          this.htmlText.nav = 'Edit Doctor';
          this.htmlText.buttonText = 'Update';
          this.params_id = this.acivatedRoute.snapshot.params._id;
        } else {
          this.generateAddEditForm('add');
        }
      }

      _createClass(AddeditDoctorComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }, {
        key: "generateAddEditForm",
        value: function generateAddEditForm() {
          var _this48 = this;

          var flag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
          var validateRule = {
            id: ['', []],
            firstname: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(50)]],
            lastname: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(50)]],
            email: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].email, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(100)]],
            phone: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(7), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(16)]],
            fax: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
            practice_name: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
            npi: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
            address: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(200)]],
            zip: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(4), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(18)]],
            city: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
            state: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
            user_type: ['doctor'],
            parent_type: ['admin'],
            parent_id: ['', []],
            cpt_validate_amount: [12, []],
            tech_id: [[]],
            biller_id: [[]],
            doctors_office_id: [[]],
            taxo_list: [[]],
            status: ['', []],
            password: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(16), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(6)]],
            confirmpassword: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]]
          };
          var passwordRule = {
            validators: this.matchpassword('password', 'confirmpassword')
          }; // if(typeof(validateRule.cpt_validate_amount) != 'undefined' || validateRule.cpt_validate_amount !=null || validateRule.cpt_validate_amount != "") {
          //   validateRule.cpt_validate_amount = ['',[Validators.minLength(12),Validators.maxLength(15)]]
          // }
          // diagnostic_admin

          if (this.htmlText.user_details.user_type == 'diagnostic_admin') {
            validateRule["tech_id"] = [[], []];
          }

          if (this.htmlText.user_details.user_type == 'doctor') {
            validateRule["tech_id"] = [[], []];
          }

          switch (flag) {
            case 'edit':
              delete validateRule.password;
              delete validateRule.confirmpassword;

              if (this.htmlText.user_details.user_type != 'admin') {
                delete validateRule.parent_id;
              }

              this.doctorManagementAddEditForm = this.formBuilder.group(validateRule);
              this.acivatedRoute.data.forEach(function (data) {
                var doctorDetails = data.data.res;
                console.log('=======', doctorDetails[0]);

                _this48.doctorManagementAddEditForm.controls['id'].patchValue(doctorDetails[0]._id);

                _this48.doctorManagementAddEditForm.controls['firstname'].patchValue(doctorDetails[0].firstname);

                _this48.doctorManagementAddEditForm.controls['lastname'].patchValue(doctorDetails[0].lastname);

                _this48.doctorManagementAddEditForm.controls['email'].patchValue(doctorDetails[0].email);

                _this48.doctorManagementAddEditForm.controls['phone'].patchValue(doctorDetails[0].phone);

                _this48.doctorManagementAddEditForm.controls['fax'].patchValue(doctorDetails[0].fax);

                _this48.doctorManagementAddEditForm.controls['practice_name'].patchValue(doctorDetails[0].practice_name);

                _this48.doctorManagementAddEditForm.controls['npi'].patchValue(doctorDetails[0].npi);

                _this48.doctorManagementAddEditForm.controls['address'].patchValue(doctorDetails[0].address);

                _this48.doctorManagementAddEditForm.controls['zip'].patchValue(doctorDetails[0].zip);

                _this48.doctorManagementAddEditForm.controls['city'].patchValue(doctorDetails[0].city);

                _this48.doctorManagementAddEditForm.controls['state'].patchValue(doctorDetails[0].state);

                _this48.doctorManagementAddEditForm.controls['city'].patchValue(doctorDetails[0].city); // this.getCity(doctorDetails[0].state);


                if (doctorDetails[0].parent_type == "admin") {
                  _this48.getalldataforedit();
                } else {
                  _this48.getalldataforedit(doctorDetails[0]);
                }

                _this48.getParentData(doctorDetails[0].parent_type); //  this.getCity(doctorDetails[0].state);
                // this.getCityByName(doctorDetails[0].state);


                setTimeout(function () {
                  // getCityByName
                  _this48.doctorManagementAddEditForm.controls['tech_id'].patchValue(doctorDetails[0].tech_id);

                  _this48.doctorManagementAddEditForm.controls['biller_id'].patchValue(doctorDetails[0].biller_id);

                  _this48.doctorManagementAddEditForm.controls['doctors_office_id'].patchValue(doctorDetails[0].doctors_office_id);

                  _this48.doctorManagementAddEditForm.controls['parent_type'].patchValue(doctorDetails[0].parent_type); // }
                  // if (doctorDetails[0].parent_type != "admin") {


                  if (_this48.htmlText.user_details.user_type == 'admin') {
                    _this48.doctorManagementAddEditForm.controls['parent_id'].patchValue(doctorDetails[0].parent_id);
                  }
                }, 1000); // if (doctorDetails[0].parent_type != "admin") {
                // }
                // this.doctorManagementAddEditForm.controls['state'].patchValue(doctorDetails[0].state);

                _this48.doctorManagementAddEditForm.controls['cpt_validate_amount'].patchValue(String(doctorDetails[0].cpt_validate_amount));

                _this48.doctorManagementAddEditForm.controls['taxo_list'].patchValue(doctorDetails[0].taxo_list);

                _this48.doctorManagementAddEditForm.controls['status'].patchValue(doctorDetails[0].status);
              });
              break;

            case 'add':
              delete validateRule.id;
              this.doctorManagementAddEditForm = this.formBuilder.group(validateRule, passwordRule);
              break;
          }
        }
      }, {
        key: "matchpassword",
        value: function matchpassword(passwordkye, confirmpasswordkye) {
          return function (group) {
            var passwordInput = group.controls[passwordkye],
                confirmpasswordInput = group.controls[confirmpasswordkye];

            if (passwordInput.value !== confirmpasswordInput.value) {
              return confirmpasswordInput.setErrors({
                notEquivalent: true
              });
            } else {
              return confirmpasswordInput.setErrors(null);
            }
          };
        }
        /**for validation purpose**/

      }, {
        key: "inputUntouch",
        value: function inputUntouch(form, val) {
          form.controls[val].markAsUntouched();
        }
        /**for validation purpose**/

      }, {
        key: "openDialog",
        value: function openDialog(x) {
          this.dialogRef = this.dialog.open(ChangePasswordDoctorModal, {
            data: {
              message: x,
              'id': this.params_id
            }
          });
          this.dialogRef.afterClosed().subscribe(function (result) {});
        }
        /**for getting all states & cities function start here**/

      }, {
        key: "allStateCityData",
        value: function allStateCityData() {
          var _this49 = this;

          this.http.getSiteSettingData("./assets/data-set/state.json").subscribe(function (response) {
            _this49.htmlText.states = response;
          });
          this.http.getSiteSettingData("./assets/data-set/city.json").subscribe(function (response) {
            _this49.htmlText.allCities = response;
          });
          this.http.getSiteSettingData("./assets/data-set/taxonomies.json").subscribe(function (response) {
            _this49.htmlText.taxonomies = response;
          });
        }
        /**for getting all states & cities  function end here**/

      }, {
        key: "getCity",
        value: function getCity(event) {
          var val = event;
          this.htmlText.cities = this.htmlText.allCities[val];
        }
      }, {
        key: "getCityByName",
        value: function getCityByName(stateName) {
          this.htmlText.cities = this.htmlText.allCities[stateName];
        }
        /**getting all the technician data**/

      }, {
        key: "getalldata",
        value: function getalldata() {
          var _this50 = this;

          var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
          // console.log('check',id);
          var data = {
            "token": this.htmlText.userData.jwtToken,
            "source": "data_pece",
            "condition": {}
          };
          var data1 = {
            "token": this.htmlText.userData.jwtToken,
            "source": "data_pece",
            "condition": {}
          };
          var data2 = {
            "token": this.htmlText.userData.jwtToken,
            "source": "data_pece",
            "condition": {}
          };

          if (id.user_type == 'diagnostic_admin') {
            data.condition['parent_id_object'] = id._id;
            data.condition['user_type'] = "tech";
            data1.condition['parent_id_object'] = id._id;
            data1.condition['user_type'] = "biller";
            data2.condition['parent_id_object'] = id._id;
            data2.condition['user_type'] = "doctor_office";
          }

          if (id.user_type == 'doctor_group') {
            data.condition['parent_id_object'] = id._id;
            data.condition['user_type'] = "tech";
            data1.condition['parent_id_object'] = id._id;
            data1.condition['user_type'] = "biller";
            data2.condition['parent_id_object'] = id._id;
            data2.condition['user_type'] = "doctor_office";
          }

          if (id.user_type == 'distributors') {
            data.condition['parent_id_object'] = id._id;
            data.condition['user_type'] = "tech";
            data1.condition['parent_id_object'] = id._id;
            data1.condition['user_type'] = "biller";
            data2.condition['parent_id_object'] = id._id;
            data2.condition['user_type'] = "doctor_office";
          }

          if (id == '') {
            data.condition['user_type'] = "tech";
            data.condition['parent_type'] = "admin";
            data1.condition['user_type'] = "biller";
            data1.condition['parent_type'] = "admin";
            data2.condition['parent_type'] = "admin";
            data2.condition['user_type'] = "doctor_office";
          }

          this.http.httpViaPost('datalist', data).subscribe(function (response) {
            _this50.htmlText.techData = response.res;
          });
          this.http.httpViaPost('datalist', data1).subscribe(function (response) {
            _this50.htmlText.billerData = response.res;
          });
          this.http.httpViaPost('datalist', data2).subscribe(function (response) {
            _this50.htmlText.doctorOfficeData = response.res;
          });
        }
      }, {
        key: "getalldataforedit",
        value: function getalldataforedit() {
          var _this51 = this;

          var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
          console.log('check', id);
          var data = {
            "token": this.htmlText.userData.jwtToken,
            "source": "data_pece",
            "condition": {}
          };
          var data1 = {
            "token": this.htmlText.userData.jwtToken,
            "source": "data_pece",
            "condition": {}
          };
          var data2 = {
            "token": this.htmlText.userData.jwtToken,
            "source": "data_pece",
            "condition": {}
          };

          if (id.parent_type == 'diagnostic_admin') {
            data.condition['parent_id_object'] = id.parent_id;
            data.condition['user_type'] = "tech";
            data1.condition['parent_id_object'] = id.parent_id;
            data1.condition['user_type'] = "biller";
            data2.condition['parent_id_object'] = id.parent_id;
            data2.condition['user_type'] = "doctor_office";
          }

          if (id.parent_type == 'doctor_group') {
            data.condition['parent_id_object'] = id.parent_id;
            data.condition['user_type'] = "tech";
            data1.condition['parent_id_object'] = id.parent_id;
            data1.condition['user_type'] = "biller";
            data2.condition['parent_id_object'] = id.parent_id;
            data2.condition['user_type'] = "doctor_office";
          }

          if (id.parent_type == 'distributor') {
            data.condition['parent_id_object'] = id.parent_id;
            data.condition['user_type'] = "tech";
            data1.condition['parent_id_object'] = id.parent_id;
            data1.condition['user_type'] = "biller";
            data2.condition['parent_id_object'] = id.parent_id;
            data2.condition['user_type'] = "doctor_office";
          }

          if (id == '') {
            data.condition['user_type'] = "tech";
            data.condition['parent_type'] = "admin";
            data1.condition['user_type'] = "biller";
            data1.condition['parent_type'] = "admin";
            data2.condition['parent_type'] = "admin";
            data2.condition['user_type'] = "doctor_office";
          }

          this.http.httpViaPost('datalist', data).subscribe(function (response) {
            _this51.htmlText.techData = response.res;
          });
          this.http.httpViaPost('datalist', data1).subscribe(function (response) {
            _this51.htmlText.billerData = response.res;
          });
          this.http.httpViaPost('datalist', data2).subscribe(function (response) {
            _this51.htmlText.doctorOfficeData = response.res;
          });
        }
        /**getting all the Parent data**/

      }, {
        key: "getParentData",
        value: function getParentData() {
          var _this52 = this;

          var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
          var billerData = id;
          this.selectionChangeValue = billerData;
          console.log('1111', billerData);

          if (billerData == 'DiagnosticAdmin' || billerData == "diagnostic_admin") {
            // data['diagnostic_admin_id_object'] = this.htmlText.userData.user_details._id;
            var data = {
              "source": "data_pece",
              "condition": {
                "user_type": "diagnostic_admin"
              },
              "token": this.htmlText.userData.jwtToken
            };
          }

          if (billerData == 'Distributor' || billerData == 'distributor') {
            // data['diagnostic_admin_id_object'] = this.htmlText.userData.user_details._id;
            var data = {
              "source": "data_pece",
              "condition": {
                "user_type": "distributors"
              },
              "token": this.htmlText.userData.jwtToken
            };
          }

          if (billerData == 'DoctorGroup' || billerData == "doctor_group") {
            // data['diagnostic_admin_id_object'] = this.htmlText.userData.user_details._id;
            var data = {
              "source": "data_pece",
              "condition": {
                "user_type": "doctor_group"
              },
              "token": this.htmlText.userData.jwtToken
            };
          } // if(this.htmlText.user_details.user_type == 'distributors') {
          //   data['distributor_id_object'] = this.htmlText.userData.user_details._id;
          // }


          this.http.httpViaPost('datalist', data).subscribe(function (response) {
            // console.log('+++++++++',response);
            _this52.htmlText.parent_id = response.res; // this.htmlText.parent_id = response;
            // this.htmlText.doctorOfficeData = response.data.doctor_office_data;
            // this.htmlText.billerData = response.data.biller_data;
          });
        }
      }, {
        key: "doctorManagementAddEditFormSubmit",
        value: function doctorManagementAddEditFormSubmit() {
          var _this53 = this;

          for (var x in this.doctorManagementAddEditForm.controls) {
            this.doctorManagementAddEditForm.controls[x].markAsTouched();
          }
          /* stop here if form is invalid */


          if (this.doctorManagementAddEditForm.valid) {
            delete this.doctorManagementAddEditForm.value.confirmpassword;

            if (this.doctorManagementAddEditForm.value.status) {
              this.doctorManagementAddEditForm.value.status = parseInt("1");
            } else {
              this.doctorManagementAddEditForm.value.status = parseInt("0");
              ;
            }

            if (this.doctorManagementAddEditForm.value.cpt_validate_amount) {
              this.doctorManagementAddEditForm.value.cpt_validate_amount = parseInt(this.doctorManagementAddEditForm.value.cpt_validate_amount);
            }
            /* start process to submited data */


            var postData = {
              "source": "data_pece",
              "data": this.doctorManagementAddEditForm.value,
              "sourceobjArray": ["tech_id", "biller_id", "doctors_office_id"],
              "sourceobj": ["parent_id"],
              "token": this.cookieService.get('jwtToken')
            };

            if (this.htmlText.user_details.user_type == 'diagnostic_admin') {
              postData.data["parent_id"] = this.htmlText.user_details._id;
              postData.data["parent_type"] = "diagnostic_admin";
              postData["sourceobj"] = ["parent_id"];
              postData["sourceobjArray"] = ["tech_id", "biller_id", "doctors_office_id"];
            }

            if (this.htmlText.user_details.user_type == 'doctor_group') {
              postData.data["parent_id"] = this.htmlText.user_details._id;
              postData.data["parent_type"] = "doctor_group";
              postData["sourceobj"] = ["parent_id"];
              postData["sourceobjArray"] = ["tech_id", "biller_id", "doctors_office_id"];
            }

            if (this.htmlText.user_details.user_type == 'distributors') {
              postData.data["parent_id"] = this.htmlText.user_details._id;
              postData.data["parent_type"] = "distributors";
              postData["sourceobj"] = ["parent_id"];
              postData["sourceobjArray"] = ["tech_id", "biller_id", "doctors_office_id"];
            }

            this.http.httpViaPost('addorupdatedata', postData).subscribe(function (response) {
              if (response.status == "success") {
                _this53.snackBar.open(_this53.htmlText.message, 'Ok', {
                  duration: 2000
                });

                setTimeout(function () {
                  switch (_this53.htmlText.user_details.user_type) {
                    case 'admin':
                      _this53.router.navigateByUrl("admin/doctor-management");

                      break;

                    case 'diagnostic_admin':
                      _this53.router.navigateByUrl("diagnostic-admin/doctor-management");

                      break;

                    case 'distributors':
                      _this53.router.navigateByUrl("distributors/doctor-management");

                      break;

                    case 'doctor_group':
                      _this53.router.navigateByUrl("doctor-group/doctor-management");

                      break;
                  }
                }, 1000);
              } else {
                _this53.snackBar.open(response.msg, '', {
                  duration: 2000
                });
              }
            }, function (error) {
              alert("Some error occurred. Please try again.");
            });
          }
        }
      }]);

      return AddeditDoctorComponent;
    }();

    AddeditDoctorComponent.ctorParameters = function () {
      return [{
        type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__["HttpServiceService"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_4__["CookieService"]
      }, {
        type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__["MatDialog"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_6__["Router"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_6__["ActivatedRoute"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatSnackBar"]
      }];
    };

    AddeditDoctorComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-addedit-doctor',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./addedit-doctor.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/doctor-management/addedit-doctor/addedit-doctor.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./addedit-doctor.component.css */
      "./src/app/components/admin/doctor-management/addedit-doctor/addedit-doctor.component.css"))["default"]]
    })], AddeditDoctorComponent);

    var ChangePasswordDoctorModal = /*#__PURE__*/function () {
      function ChangePasswordDoctorModal(dialogRef, fb, httpService, cookie, activeRoute, data) {
        _classCallCheck(this, ChangePasswordDoctorModal);

        this.dialogRef = dialogRef;
        this.fb = fb;
        this.httpService = httpService;
        this.cookie = cookie;
        this.activeRoute = activeRoute;
        this.data = data;
        this.changePwdForm = _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroup"];
        this.params_id = data.id;
        this.user_token = cookie.get('jwtToken');
        this.changePwdForm = this.fb.group({
          password: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
          confirmpassword: []
        }, {
          validators: this.matchpassword('password', 'confirmpassword')
        });
      }

      _createClass(ChangePasswordDoctorModal, [{
        key: "matchpassword",
        value: function matchpassword(passwordkye, confirmpasswordkye) {
          return function (group) {
            var passwordInput = group.controls[passwordkye],
                confirmpasswordInput = group.controls[confirmpasswordkye];

            if (passwordInput.value !== confirmpasswordInput.value) {
              return confirmpasswordInput.setErrors({
                notEquivalent: true
              });
            } else {
              return confirmpasswordInput.setErrors(null);
            }
          };
        }
      }, {
        key: "changePasswordFormSubmit",
        value: function changePasswordFormSubmit() {
          for (var x in this.changePwdForm.controls) {
            this.changePwdForm.controls[x].markAsTouched();
          }

          if (this.changePwdForm.valid) {
            delete this.changePwdForm.value.confirmpassword;
            var data = {
              "_id": this.params_id,
              "adminflag": 1,
              "newPassword": this.changePwdForm.value.password
            };
            this.httpService.httpViaPost('changepassword', data).subscribe(function (response) {});
          }
        }
      }]);

      return ChangePasswordDoctorModal;
    }();

    ChangePasswordDoctorModal.ctorParameters = function () {
      return [{
        type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__["MatDialogRef"]
      }, {
        type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__["HttpServiceService"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_4__["CookieService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_6__["ActivatedRoute"]
      }, {
        type: undefined,
        decorators: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
          args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__["MAT_DIALOG_DATA"]]
        }]
      }];
    };

    ChangePasswordDoctorModal = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'dialogtest',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./modal.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/doctor-management/addedit-doctor/modal.html"))["default"]
    }), tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](5, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__["MAT_DIALOG_DATA"]))], ChangePasswordDoctorModal);
    /***/
  },

  /***/
  "./src/app/components/admin/doctor-management/list-doctor/list-doctor.component.css":
  /*!******************************************************************************************!*\
    !*** ./src/app/components/admin/doctor-management/list-doctor/list-doctor.component.css ***!
    \******************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminDoctorManagementListDoctorListDoctorComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "/* .add_header { display: flex; margin: 0 16px; }\n.add_header button { margin-left: auto; background: linear-gradient(180deg, #fac855, #e47e2a)!important; text-transform: uppercase; font-family: \"RobotoBlack\"; padding-top: 4px; }\n\n@media screen and (max-width: 480px) {\n  .doctor_content_wrapper .mat-card-title { font-size: 24px; }\n  .patient_report_section .patient_top_search h1 { font-size: 24px; }\n  .add_header { display: flex; margin: 0 16px; flex-direction: column; justify-content: center; align-items: center; }\n  .add_header button { margin-left: 0; margin: 10px 0 0 0; }\n} */\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9hZG1pbi9kb2N0b3ItbWFuYWdlbWVudC9saXN0LWRvY3Rvci9saXN0LWRvY3Rvci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7OztHQVFHIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9hZG1pbi9kb2N0b3ItbWFuYWdlbWVudC9saXN0LWRvY3Rvci9saXN0LWRvY3Rvci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogLmFkZF9oZWFkZXIgeyBkaXNwbGF5OiBmbGV4OyBtYXJnaW46IDAgMTZweDsgfVxuLmFkZF9oZWFkZXIgYnV0dG9uIHsgbWFyZ2luLWxlZnQ6IGF1dG87IGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxODBkZWcsICNmYWM4NTUsICNlNDdlMmEpIWltcG9ydGFudDsgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgZm9udC1mYW1pbHk6IFwiUm9ib3RvQmxhY2tcIjsgcGFkZGluZy10b3A6IDRweDsgfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCkge1xuICAuZG9jdG9yX2NvbnRlbnRfd3JhcHBlciAubWF0LWNhcmQtdGl0bGUgeyBmb250LXNpemU6IDI0cHg7IH1cbiAgLnBhdGllbnRfcmVwb3J0X3NlY3Rpb24gLnBhdGllbnRfdG9wX3NlYXJjaCBoMSB7IGZvbnQtc2l6ZTogMjRweDsgfVxuICAuYWRkX2hlYWRlciB7IGRpc3BsYXk6IGZsZXg7IG1hcmdpbjogMCAxNnB4OyBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuICAuYWRkX2hlYWRlciBidXR0b24geyBtYXJnaW4tbGVmdDogMDsgbWFyZ2luOiAxMHB4IDAgMCAwOyB9XG59ICovXG4iXX0= */";
    /***/
  },

  /***/
  "./src/app/components/admin/doctor-management/list-doctor/list-doctor.component.ts":
  /*!*****************************************************************************************!*\
    !*** ./src/app/components/admin/doctor-management/list-doctor/list-doctor.component.ts ***!
    \*****************************************************************************************/

  /*! exports provided: ListDoctorComponent */

  /***/
  function srcAppComponentsAdminDoctorManagementListDoctorListDoctorComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ListDoctorComponent", function () {
      return ListDoctorComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/material/dialog */
    "./node_modules/@angular/material/esm2015/dialog.js");
    /* harmony import */


    var _common_approval_settings_update_approval_settings_update_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../../../common/approval-settings-update/approval-settings-update.component */
    "./src/app/components/common/approval-settings-update/approval-settings-update.component.ts");
    /* harmony import */


    var _common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../../../common/dialog-box/dialog-box.component */
    "./src/app/components/common/dialog-box/dialog-box.component.ts");

    var ListDoctorComponent = /*#__PURE__*/function () {
      // ====================================================================
      function ListDoctorComponent(dialog, http, cookieService, router, activatedRoute) {
        _classCallCheck(this, ListDoctorComponent);

        this.dialog = dialog;
        this.http = http;
        this.cookieService = cookieService;
        this.router = router;
        this.activatedRoute = activatedRoute; // ===============================Declarations=========================

        this.userData = {};
        this.docData_count = 0;
        this.docData = [];
        this.docData_skip = ["_id", "fax", "address", "zip", "city", "state", "user_type", "tech_id", "biller_id", "doctors_office_id", "diagnostic_admin_id", "taxo_list", "password", "created_at", "id", "name_search", "updated_at", "doctor_signature", "distributor_id", "diagnostic_admin_id", "doctorgroup_id"];
        this.docData_modify_header = {
          firstname: "First Name",
          lastname: "Last Name",
          practice_name: "Practice Name",
          parent_name: "Parent Name",
          parent_type: "Parent Type",
          npi: "NPI#",
          email: "Email",
          phone: "Phone Number",
          status: "Status",
          created_date: "Created Date"
        };
        this.previewModal_skip = ["_id", "user_type", "tech_id", "biller_id", "doctors_office_id", "taxo_list", "password", "created_at", "id", "name_search", "updated_at"];
        this.tableName = 'data_pece';
        this.UpdateEndpoint = "addorupdatedata";
        this.deleteEndpoint = "deletesingledata";
        this.searchingEndpoint = "datalist";
        this.searchSourceName = "data_doctor_list";
        this.editUrl = 'admin/doctor-management/edit';
        this.datacollection = 'getdoctorlistdata';
        this.libdata = {
          basecondition: "",
          updateendpoint: 'statusupdate',
          notes: {
            label: "Notes",
            addendpoint: "addnotedata",
            deleteendpoint: "deletenotedata",
            listendpoint: "listnotedata",
            user: "",
            currentuserfullname: " ",
            header: 'fullname'
          },
          tableheaders: ['firstname', 'lastname', 'email', 'phone', 'practice_name', 'npi', 'status', 'created_date'],
          custombuttons: [{
            label: "Approval Settings",
            type: 'listner',
            id: 'i1'
          }]
        };
        this.sortdata = {
          "type": 'desc',
          "field": 'firstname',
          "options": ['firstname', 'email', 'practice_name', 'npi', 'status', 'created_date']
        };
        this.limitcond = {
          "limit": 10,
          "skip": 0,
          "pagecount": 1
        };
        this.status = [{
          val: 1,
          'name': 'Active'
        }, {
          val: 0,
          'name': 'Inactive'
        }];
        this.parent_type = [{
          val: "admin",
          'name': 'Admin'
        }, {
          val: "diagnostic_admin",
          'name': 'Diagnostic Admin'
        }, {
          val: "distributors",
          'name': 'Distributors'
        }, {
          val: "doctor_group",
          'name': 'Doctors Group Admin'
        }];
        this.search_settings = {
          selectsearch: [{
            label: 'Search By Status',
            field: 'status',
            values: this.status
          }],
          textsearch: [{
            label: "Search By Name",
            field: 'name_search'
          }, {
            label: "Search By E-Mail",
            field: 'email'
          }, {
            label: "Search By NPI",
            field: 'npi'
          }]
        };
        this.user_cookie = cookieService.get('jwtToken');
        var allData = cookieService.getAll();
        this.userData = JSON.parse(allData.user_details);

        if (this.userData.user_type == 'diagnostic_admin') {
          this.editUrl = 'diagnostic-admin/doctor-management/edit';
          this.field = {
            'parent_id': this.userData._id
          };
          this.data = this.userData._id;
          this.libdata.notes.user = this.userData._id;
          this.libdata.notes.currentuserfullname = this.userData.center_name;
        }

        if (this.userData.user_type == 'admin') {
          this.libdata.custombuttons = {
            label: "Log Me",
            type: 'listner',
            id: 'i1'
          };

          if (this.activatedRoute.snapshot.routeConfig.path == "admin/sales-person/doctor-management") {
            this.field = {
              parent_user_type: "sales_person"
            };
            this.docData_modify_header.parent_name = "Sales Person Name";
            this.docData_modify_header.parent_type = "Parent";
            this.search_settings.textsearch.push({
              label: "Search By Sales Person Name",
              field: 'parent_name_search'
            });
          } else {
            this.search_settings.textsearch.push({
              label: "Search By Parent Name",
              field: 'parent_name_search'
            });
          }

          this.search_settings.selectsearch.push({
            label: 'Search By Parent Type',
            field: 'parent_user_type',
            values: this.parent_type
          });
          this.libdata.tableheaders.splice(3, 0, "parent_name");
          this.libdata.tableheaders.splice(4, 0, "parent_type");
          this.libdata.notes.user = this.userData._id;
          this.libdata.notes.currentuserfullname = this.userData.firstname + this.userData.lastname;
        }

        if (this.userData.user_type == 'doctor_group') {
          this.editUrl = 'doctor-group/doctor-management/edit';
          this.field = {
            'parent_id': this.userData._id
          };
          this.data = this.userData._id;
          this.libdata.notes.user = this.userData._id;
          this.libdata.notes.currentuserfullname = this.userData.groupname;
        }

        if (this.userData.user_type == 'distributors') {
          this.editUrl = 'distributors/doctor-management/edit';
          this.field = {
            'parent_id': this.userData._id
          };
          this.data = this.userData._id;
          this.libdata.notes.user = this.userData._id;
          this.libdata.notes.currentuserfullname = this.userData.distributorname;
        }

        this.libdata.basecondition = this.field;
        this.apiUrl = http.baseUrl;
      }

      _createClass(ListDoctorComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this54 = this;

          this.datasource = '';
          var endpoint = 'getdoctorlistdata';
          var endpointc = 'getdoctorlistdata-count';
          var data = {
            "condition": {
              "limit": 10,
              "skip": 0
            },
            sort: {
              "type": 'desc',
              "field": 'firstname'
            },
            data: this.fetch
          };

          if (this.userData.user_type == 'diagnostic_admin') {
            this.fetch = {
              'parent_id': this.data
            };
          }

          if (this.userData.user_type == 'doctor_group') {
            this.fetch = {
              'parent_id': this.data
            };
          }

          if (this.userData.user_type == 'distributors') {
            this.fetch = {
              'parent_id': this.data
            };
          }

          if (this.activatedRoute.snapshot.routeConfig.path == "admin/sales-person/doctor-management") {
            this.fetch = {
              flag: 1
            };
          }

          if (this.activatedRoute.snapshot.routeConfig.path == "admin/doctor-management") {
            this.fetch = {
              flag: 0
            };
          }

          data.data = this.fetch;
          this.http.httpViaPost(endpointc, data).subscribe(function (res) {
            _this54.docData_count = res.count;
          }, function (error) {
            console.log('Oooops!');
          });
          this.http.httpViaPost(endpoint, data).subscribe(function (res) {
            _this54.docData = res.results.res;
          }, function (error) {
            console.log('Oooops!');
          });
        }
      }, {
        key: "listenLiblistingChange",
        value: function listenLiblistingChange() {
          var _this55 = this;

          var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;

          if (data != null) {
            switch (data.custombuttonclick.btninfo.label) {
              case "Log Me":
                var modalData1 = {
                  panelClass: 'bulkupload-dialog',
                  data: {
                    header: "Alert",
                    message: "Do you want to login as doctor : " + data.custombuttonclick.data.firstname + " " + data.custombuttonclick.data.lastname + "?",
                    button1: {
                      text: "Yes"
                    },
                    button2: {
                      text: "No"
                    }
                  }
                };
                var dialogRef1 = this.dialog.open(_common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_7__["DialogBoxComponent"], modalData1);
                dialogRef1.afterClosed().subscribe(function (result) {
                  switch (result) {
                    case "Yes":
                      // Delete Cookie
                      _this55.cookieService["delete"]('user_details');

                      _this55.cookieService["delete"]('main_user');

                      _this55.cookieService["delete"]('jwtToken');

                      _this55.cookieService.deleteAll('/');

                      setTimeout(function () {
                        // Reset again Cookie
                        _this55.cookieService.set('jwtToken', _this55.user_cookie);

                        _this55.cookieService.set('user_details', JSON.stringify(data.custombuttonclick.data));

                        _this55.cookieService.set('main_user', JSON.stringify(_this55.userData)); // Redirect to page


                        _this55.router.navigateByUrl("doctor/dashboard");
                      }, 500);
                      break;

                    case "No":
                      dialogRef1.close();
                      break;
                  }
                });
                break;

              case "Approval Settings":
                console.log("Settings");
                var modalData = {
                  panelClass: 'bulkupload-dialog',
                  data: {
                    doctorData: data.custombuttonclick.data
                  },
                  width: '500px'
                };
                var dialogRef = this.dialog.open(_common_approval_settings_update_approval_settings_update_component__WEBPACK_IMPORTED_MODULE_6__["ApprovalSettingsUpdateComponent"], modalData);
                dialogRef.afterClosed().subscribe(function (result) {
                  switch (result.status) {
                    case 'success':
                      var _modalData = {
                        panelClass: 'bulkupload-dialog',
                        data: {
                          header: "Alert",
                          message: "Successfully Updated.",
                          button1: {
                            text: ""
                          },
                          button2: {
                            text: "OK"
                          }
                        }
                      };

                      var _dialogRef = _this55.dialog.open(_common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_7__["DialogBoxComponent"], _modalData);

                      _dialogRef.afterClosed().subscribe(function (result) {
                        _this55.docData = [];
                        _this55.docData_count = 0;

                        _this55.ngOnInit();
                      });

                      break;

                    case 'close':
                      break;

                    default:
                      break;
                  }
                });
                break;
            }
          }
        }
      }]);

      return ListDoctorComponent;
    }();

    ListDoctorComponent.ctorParameters = function () {
      return [{
        type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__["MatDialog"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_2__["HttpServiceService"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__["CookieService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"]
      }];
    };

    ListDoctorComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-list-doctor',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./list-doctor.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/doctor-management/list-doctor/list-doctor.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./list-doctor.component.css */
      "./src/app/components/admin/doctor-management/list-doctor/list-doctor.component.css"))["default"]]
    })], ListDoctorComponent);
    /***/
  },

  /***/
  "./src/app/components/admin/doctor-office-management/add-edit-doctor-ofc/add-edit-doctor-ofc.component.css":
  /*!*****************************************************************************************************************!*\
    !*** ./src/app/components/admin/doctor-office-management/add-edit-doctor-ofc/add-edit-doctor-ofc.component.css ***!
    \*****************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminDoctorOfficeManagementAddEditDoctorOfcAddEditDoctorOfcComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW4vZG9jdG9yLW9mZmljZS1tYW5hZ2VtZW50L2FkZC1lZGl0LWRvY3Rvci1vZmMvYWRkLWVkaXQtZG9jdG9yLW9mYy5jb21wb25lbnQuY3NzIn0= */";
    /***/
  },

  /***/
  "./src/app/components/admin/doctor-office-management/add-edit-doctor-ofc/add-edit-doctor-ofc.component.ts":
  /*!****************************************************************************************************************!*\
    !*** ./src/app/components/admin/doctor-office-management/add-edit-doctor-ofc/add-edit-doctor-ofc.component.ts ***!
    \****************************************************************************************************************/

  /*! exports provided: AddEditDoctorOfcComponent, ChangePasswordDoctorOfficeModal */

  /***/
  function srcAppComponentsAdminDoctorOfficeManagementAddEditDoctorOfcAddEditDoctorOfcComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AddEditDoctorOfcComponent", function () {
      return AddEditDoctorOfcComponent;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ChangePasswordDoctorOfficeModal", function () {
      return ChangePasswordDoctorOfficeModal;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../../../../../environments/environment */
    "./src/environments/environment.ts");

    ;

    var AddEditDoctorOfcComponent = /*#__PURE__*/function () {
      function AddEditDoctorOfcComponent(formBuilder, acivatedRoute, router, httpService, datePipe, cookieService, snackBar, dialog) {
        _classCallCheck(this, AddEditDoctorOfcComponent);

        this.formBuilder = formBuilder;
        this.acivatedRoute = acivatedRoute;
        this.router = router;
        this.httpService = httpService;
        this.datePipe = datePipe;
        this.cookieService = cookieService;
        this.snackBar = snackBar;
        this.dialog = dialog;
        this.params_id = '';
        this.htmlText = {
          userData: "",
          header: 'Add New Doctor Office',
          nav: 'Add Doctor Office',
          buttonText: 'Save',
          message: "Submitted Successfully",
          doctorOfficeData: "",
          techData: "",
          billerData: "",
          parent_type: [{
            name: "Distributor",
            value: "distributor"
          }, {
            name: "DiagnosticAdmin",
            value: "diagnostic_admin"
          }, {
            name: "DoctorGroup",
            value: "doctor_group"
          }],
          states: "",
          allCities: "",
          cities: "",
          taxonomies: "",
          user_details: ''
        };
        this.htmlText.userData = this.cookieService.getAll();
        this.htmlText.user_details = JSON.parse(this.htmlText.userData.user_details); // if(this.htmlText.user_details.user_type == 'admin') {
        // this.getAllTechData();
        // } else {
        //  this.getAllTechData(this.htmlText.user_details._id);
        // }

        this.allStateCityData();
        console.log('888888', this.acivatedRoute.snapshot);

        if (this.acivatedRoute.snapshot.params._id) {
          this.generateAddEditForm('edit');
          this.htmlText.message = "Updated Successfully";
          this.htmlText.header = 'Edit Doctor Office Record';
          this.htmlText.nav = 'Edit Doctor Office';
          this.htmlText.buttonText = 'Update';
          this.params_id = this.acivatedRoute.snapshot.params._id;
        } else {
          this.generateAddEditForm('add');
        }
      }

      _createClass(AddEditDoctorOfcComponent, [{
        key: "generateAddEditForm",
        value: function generateAddEditForm() {
          var _this56 = this;

          var flag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
          var validateRule = {
            id: ['', []],
            center_name: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(50)]],
            firstname: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(50)]],
            lastname: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(50)]],
            email: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].email, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(100)]],
            phone: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(7), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(16)]],
            address: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(200)]],
            zip: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(4), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(18)]],
            city: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
            parent_type: ['admin', []],
            parent_id: ['', []],
            state: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
            user_type: ['doctor_office', []],
            status: ['', []],
            password: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(16), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(6)]],
            confirmpassword: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]]
          };
          var passwordRule = {
            validators: this.matchpassword('password', 'confirmpassword')
          };

          switch (flag) {
            case 'edit':
              delete validateRule.password;
              delete validateRule.confirmpassword;

              if (this.htmlText.user_details.user_type != 'admin') {
                delete validateRule.parent_id;
              }

              this.doctorOfficeAddEditForm = this.formBuilder.group(validateRule);
              this.acivatedRoute.data.forEach(function (data) {
                var doctorDetails = data.data.res;
                setTimeout(function () {
                  _this56.getCity(doctorDetails[0].state);
                }, 1000);

                _this56.doctorOfficeAddEditForm.controls['id'].patchValue(doctorDetails[0]._id);

                _this56.doctorOfficeAddEditForm.controls['center_name'].patchValue(doctorDetails[0].center_name);

                _this56.doctorOfficeAddEditForm.controls['firstname'].patchValue(doctorDetails[0].firstname);

                _this56.doctorOfficeAddEditForm.controls['lastname'].patchValue(doctorDetails[0].lastname);

                _this56.doctorOfficeAddEditForm.controls['email'].patchValue(doctorDetails[0].email);

                _this56.doctorOfficeAddEditForm.controls['phone'].patchValue(doctorDetails[0].phone);

                _this56.doctorOfficeAddEditForm.controls['address'].patchValue(doctorDetails[0].address);

                _this56.doctorOfficeAddEditForm.controls['zip'].patchValue(doctorDetails[0].zip);

                _this56.doctorOfficeAddEditForm.controls['city'].patchValue(doctorDetails[0].city); // this.doctorOfficeAddEditForm.controls['tech_id'].patchValue(doctorDetails[0].tech_id);// this.getCity(doctorDetails[0].state);


                _this56.getParentData(doctorDetails[0].parent_type); //  this.getCity(doctorDetails[0].state);
                // this.getCityByName(doctorDetails[0].state);


                setTimeout(function () {
                  // getCityByName
                  _this56.doctorOfficeAddEditForm.controls['parent_type'].patchValue(doctorDetails[0].parent_type);

                  if (_this56.htmlText.user_details.user_type == 'admin') {
                    _this56.doctorOfficeAddEditForm.controls['parent_id'].patchValue(doctorDetails[0].parent_id);
                  }
                }, 2000);

                _this56.doctorOfficeAddEditForm.controls['state'].patchValue(doctorDetails[0].state);

                _this56.doctorOfficeAddEditForm.controls['status'].patchValue(doctorDetails[0].status);
              });
              break;

            case 'add':
              delete validateRule.id;
              this.doctorOfficeAddEditForm = this.formBuilder.group(validateRule, passwordRule);
              break;
          }
        }
      }, {
        key: "ngOnInit",
        value: function ngOnInit() {}
      }, {
        key: "matchpassword",
        value: function matchpassword(passwordkye, confirmpasswordkye) {
          return function (group) {
            var passwordInput = group.controls[passwordkye],
                confirmpasswordInput = group.controls[confirmpasswordkye];

            if (passwordInput.value !== confirmpasswordInput.value) {
              return confirmpasswordInput.setErrors({
                notEquivalent: true
              });
            } else {
              return confirmpasswordInput.setErrors(null);
            }
          };
        }
      }, {
        key: "openDialog",
        value: function openDialog(x) {
          this.dialogRef = this.dialog.open(ChangePasswordDoctorOfficeModal, {
            data: {
              message: x,
              'id': this.params_id
            }
          });
          this.dialogRef.afterClosed().subscribe(function (result) {});
        }
        /**for validation purpose**/

      }, {
        key: "inputUntouch",
        value: function inputUntouch(form, val) {
          form.controls[val].markAsUntouched();
        }
        /**for validation purpose**/

        /**for getting all states & cities function start here**/

      }, {
        key: "allStateCityData",
        value: function allStateCityData() {
          var _this57 = this;

          this.httpService.getSiteSettingData("./assets/data-set/state.json").subscribe(function (response) {
            _this57.htmlText.states = response;
          });
          this.httpService.getSiteSettingData("./assets/data-set/city.json").subscribe(function (response) {
            _this57.htmlText.allCities = response;
          });
        }
        /**for getting all states & cities  function end here**/

      }, {
        key: "getCity",
        value: function getCity(event) {
          var val = event;
          this.htmlText.cities = this.htmlText.allCities[val];
        }
        /**getting all the technician data**/
        // getAllTechData(id:any='') {
        //   console.log(">>>>>", this.htmlText.user_details);
        //   var data = {
        //     "source": "data_pece",
        //     "condition": {
        //       "user_type": "tech",
        //       "tech_id": this.htmlText.user_details.tech_id
        //     },
        //     "token": this.htmlText.userData.jwtToken
        //   };
        //   if(this.htmlText.user_details.user_type !='admin') {
        //     data.condition["parent_id"] = id;
        //   }
        //   this.httpService.httpViaPost('datalist', data).subscribe(response => {
        //     this.htmlText.techData = response.res;
        //   });
        // }

        /**getting all the Parent data**/

      }, {
        key: "getParentData",
        value: function getParentData() {
          var _this58 = this;

          var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
          var billerData = id;
          this.selectionChangeValue = billerData;
          console.log('1111', billerData);

          if (billerData == 'DiagnosticAdmin' || billerData == "diagnostic_admin") {
            // data['diagnostic_admin_id_object'] = this.htmlText.userData.user_details._id;
            var data = {
              "source": "data_pece",
              "condition": {
                "user_type": "diagnostic_admin"
              },
              "token": this.htmlText.userData.jwtToken
            };
          }

          if (billerData == 'Distributor' || billerData == 'distributor') {
            // data['diagnostic_admin_id_object'] = this.htmlText.userData.user_details._id;
            var data = {
              "source": "data_pece",
              "condition": {
                "user_type": "distributors"
              },
              "token": this.htmlText.userData.jwtToken
            };
          }

          if (billerData == 'DoctorGroup' || billerData == "doctor_group") {
            // data['diagnostic_admin_id_object'] = this.htmlText.userData.user_details._id;
            var data = {
              "source": "data_pece",
              "condition": {
                "user_type": "doctor_group"
              },
              "token": this.htmlText.userData.jwtToken
            };
          } // if(this.htmlText.user_details.user_type == 'distributors') {
          //   data['distributor_id_object'] = this.htmlText.userData.user_details._id;
          // }


          this.httpService.httpViaPost('datalist', data).subscribe(function (response) {
            // console.log('+++++++++',response);
            _this58.htmlText.parent_id = response.res; // this.htmlText.parent_id = response;
            // this.htmlText.doctorOfficeData = response.data.doctor_office_data;
            // this.htmlText.billerData = response.data.biller_data;
          });
        }
      }, {
        key: "getCityByName",
        value: function getCityByName(stateName) {
          this.htmlText.cities = this.htmlText.allCities[stateName];
        }
      }, {
        key: "doctorOfficeAddEditFormFormSubmit",
        value: function doctorOfficeAddEditFormFormSubmit() {
          var _this59 = this;

          for (var x in this.doctorOfficeAddEditForm.controls) {
            this.doctorOfficeAddEditForm.controls[x].markAsTouched();
          }
          /* stop here if form is invalid */


          if (this.doctorOfficeAddEditForm.valid) {
            delete this.doctorOfficeAddEditForm.value.confirmpassword;

            if (this.doctorOfficeAddEditForm.value.status) {
              this.doctorOfficeAddEditForm.value.status = parseInt("1");
            } else {
              this.doctorOfficeAddEditForm.value.status = parseInt("0");
              ;
            }
            /* start process to submited data */


            var postData = {
              "source": "data_pece",
              "data": this.doctorOfficeAddEditForm.value,
              "domainurl": _environments_environment__WEBPACK_IMPORTED_MODULE_8__["environment"].siteBaseUrl + 'reset-password',
              "sourceobj": ["parent_id"],
              "token": this.cookieService.get('jwtToken')
            };

            if (this.htmlText.user_details.user_type == 'doctor') {
              postData.data["doctor_id"] = this.htmlText.user_details._id;
              postData["sourceobj"] = ["doctor_id"];
            }

            if (this.htmlText.user_details.user_type == 'diagnostic_admin') {
              postData.data["parent_id"] = this.htmlText.user_details._id;
              postData["sourceobj"] = ["parent_id"];
              postData.data["parent_type"] = "diagnostic_admin";
            }

            if (this.htmlText.user_details.user_type == 'doctor_group') {
              postData.data["parent_id"] = this.htmlText.user_details._id;
              postData["sourceobj"] = ["parent_id"];
              postData.data["parent_type"] = "doctor_group";
            }

            if (this.htmlText.user_details.user_type == 'distributors') {
              postData.data["parent_id"] = this.htmlText.user_details._id;
              postData["sourceobj"] = ["parent_id"];
              postData.data["parent_type"] = "distributors";
            }

            if (this.htmlText.user_details.user_type != 'doctor') {
              this.httpService.httpViaPost('addorupdatedata', postData).subscribe(function (response) {
                if (response.status == "success") {
                  _this59.formDirective.resetForm();

                  _this59.snackBar.open(_this59.htmlText.message, 'Ok', {
                    duration: 2000
                  });

                  setTimeout(function () {
                    switch (_this59.htmlText.user_details.user_type) {
                      case 'doctor':
                        _this59.router.navigateByUrl("doctor/doctor-office-management");

                        break;

                      case 'admin':
                        _this59.router.navigateByUrl("admin/doctor-office-management");

                        break;
                    }
                  }, 2000);
                } else {
                  _this59.snackBar.open(response.msg, '', {
                    duration: 2000
                  });
                }
              }, function (error) {
                alert("Some error occurred. Please try again.");
              });
            } else {
              postData.data["parent_id"] = this.htmlText.userData.user_details._id;
              postData.data["parent_type"] = "doctor";
              postData["sourceobj"] = ["parent_id"];
              postData["doctorid"] = this.htmlText.userData.user_details._id;
              this.httpService.httpViaPost('add-doctor-office-data', postData).subscribe(function (response) {
                if (response.status == "success") {
                  _this59.formDirective.resetForm();

                  _this59.snackBar.open(_this59.htmlText.message, 'Ok', {
                    duration: 2000
                  });

                  setTimeout(function () {
                    switch (_this59.htmlText.user_details.user_type) {
                      case 'doctor':
                        _this59.router.navigateByUrl("doctor/doctor-office-management");

                        break;

                      case 'diagnostic_admin':
                        _this59.router.navigateByUrl("diagnostic-admin/doctor-office-management");

                        break;

                      case 'doctor_group':
                        _this59.router.navigateByUrl("doctor-group/doctor-office-management");

                        break;

                      case 'distributors':
                        _this59.router.navigateByUrl("distributors/doctor-office-management");

                        break;
                    }
                  }, 2000);
                } else {
                  _this59.snackBar.open(response.msg, '', {
                    duration: 2000
                  });
                }
              }, function (error) {
                alert("Some error occurred. Please try again.");
              });
            }
          }
        }
      }]);

      return AddEditDoctorOfcComponent;
    }();

    AddEditDoctorOfcComponent.ctorParameters = function () {
      return [{
        type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__["HttpServiceService"]
      }, {
        type: _angular_common__WEBPACK_IMPORTED_MODULE_5__["DatePipe"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_6__["CookieService"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatSnackBar"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatDialog"]
      }];
    };

    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroupDirective"], {
      "static": false
    })], AddEditDoctorOfcComponent.prototype, "formDirective", void 0);
    AddEditDoctorOfcComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-add-edit-doctor-ofc',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./add-edit-doctor-ofc.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/doctor-office-management/add-edit-doctor-ofc/add-edit-doctor-ofc.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./add-edit-doctor-ofc.component.css */
      "./src/app/components/admin/doctor-office-management/add-edit-doctor-ofc/add-edit-doctor-ofc.component.css"))["default"]]
    })], AddEditDoctorOfcComponent);

    var ChangePasswordDoctorOfficeModal = /*#__PURE__*/function () {
      function ChangePasswordDoctorOfficeModal(dialogRef, fb, httpService, cookie, activeRoute, data) {
        _classCallCheck(this, ChangePasswordDoctorOfficeModal);

        this.dialogRef = dialogRef;
        this.fb = fb;
        this.httpService = httpService;
        this.cookie = cookie;
        this.activeRoute = activeRoute;
        this.data = data;
        this.changePwdForm = _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroup"];
        this.params_id = data.id;
        this.user_token = cookie.get('jwtToken');
        this.changePwdForm = this.fb.group({
          password: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(16), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(6)]],
          confirmpassword: ['', []]
        }, {
          validators: this.matchpassword('password', 'confirmpassword')
        });
      }

      _createClass(ChangePasswordDoctorOfficeModal, [{
        key: "matchpassword",
        value: function matchpassword(passwordkye, confirmpasswordkye) {
          return function (group) {
            var passwordInput = group.controls[passwordkye],
                confirmpasswordInput = group.controls[confirmpasswordkye];

            if (passwordInput.value !== confirmpasswordInput.value) {
              return confirmpasswordInput.setErrors({
                notEquivalent: true
              });
            } else {
              return confirmpasswordInput.setErrors(null);
            }
          };
        }
      }, {
        key: "changePasswordFormSubmit",
        value: function changePasswordFormSubmit() {
          var x;

          for (x in this.changePwdForm.controls) {
            this.changePwdForm.controls[x].markAsTouched();
          }

          if (this.changePwdForm.valid) {
            delete this.changePwdForm.value.confirmpassword;
            var data = {
              "_id": this.params_id,
              "adminflag": 1,
              "newPassword": this.changePwdForm.value.password
            };
            this.httpService.httpViaPost('changepassword', data).subscribe(function (response) {
              console.log("response", response);
            });
          }
        }
      }]);

      return ChangePasswordDoctorOfficeModal;
    }();

    ChangePasswordDoctorOfficeModal.ctorParameters = function () {
      return [{
        type: _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatDialogRef"]
      }, {
        type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__["HttpServiceService"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_6__["CookieService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"]
      }, {
        type: undefined,
        decorators: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
          args: [_angular_material__WEBPACK_IMPORTED_MODULE_7__["MAT_DIALOG_DATA"]]
        }]
      }];
    };

    ChangePasswordDoctorOfficeModal = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'dialogtest',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./modal.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/doctor-office-management/add-edit-doctor-ofc/modal.html"))["default"]
    }), tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](5, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_7__["MAT_DIALOG_DATA"]))], ChangePasswordDoctorOfficeModal);
    /***/
  },

  /***/
  "./src/app/components/admin/doctor-office-management/doctor-office-management.component.css":
  /*!**************************************************************************************************!*\
    !*** ./src/app/components/admin/doctor-office-management/doctor-office-management.component.css ***!
    \**************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminDoctorOfficeManagementDoctorOfficeManagementComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW4vZG9jdG9yLW9mZmljZS1tYW5hZ2VtZW50L2RvY3Rvci1vZmZpY2UtbWFuYWdlbWVudC5jb21wb25lbnQuY3NzIn0= */";
    /***/
  },

  /***/
  "./src/app/components/admin/doctor-office-management/doctor-office-management.component.ts":
  /*!*************************************************************************************************!*\
    !*** ./src/app/components/admin/doctor-office-management/doctor-office-management.component.ts ***!
    \*************************************************************************************************/

  /*! exports provided: DoctorOfficeManagementComponent */

  /***/
  function srcAppComponentsAdminDoctorOfficeManagementDoctorOfficeManagementComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DoctorOfficeManagementComponent", function () {
      return DoctorOfficeManagementComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_common_http__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/common/http */
    "./node_modules/@angular/common/fesm2015/http.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/material/dialog */
    "./node_modules/@angular/material/esm2015/dialog.js");
    /* harmony import */


    var _common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../../common/dialog-box/dialog-box.component */
    "./src/app/components/common/dialog-box/dialog-box.component.ts");

    var DoctorOfficeManagementComponent = /*#__PURE__*/function () {
      function DoctorOfficeManagementComponent(dialog, activatedRoute, cookie, http, httpService, router) {
        _classCallCheck(this, DoctorOfficeManagementComponent);

        this.dialog = dialog;
        this.activatedRoute = activatedRoute;
        this.cookie = cookie;
        this.http = http;
        this.httpService = httpService;
        this.router = router;
        this.doctorOfficeAllData = [];
        this.doctorOfficeData_count = 0;
        this.doctorOfficeAllData_skip = ["_id", "address", "zip", "city", "tech_id", "doctor_id", "state", "user_type", "password", "id", "created_at", "updated_at", "refresh_token", "lastGoogleCalendarUpdateOn", "name_search"];
        this.editUrl = "admin/doctor-office-management/edit";
        this.doctorOfficeAllData_modify_header = {
          "center_name": "Center Name",
          "firstname": "First Name",
          "lastname": "Last Name",
          "email": "Email",
          "phone": "Phone Number",
          "parent_name": "Parent Name",
          "parent_type": "Parent Type",
          "status": "Status",
          "created_date": "Created Date"
        };
        this.previewModal_skip = ["_id", "tech_id", "state", "user_type"];
        this.UpdateEndpoint = "addorupdatedata";
        this.deleteEndpoint = "deletesingledata";
        this.tableName = "data_pece";
        this.userData = {};
        this.status = [{
          val: 1,
          'name': 'Active'
        }, {
          val: 0,
          'name': 'Inactive'
        }];
        this.parent_type = [{
          val: "admin",
          'name': 'Admin'
        }, {
          val: "diagnostic_admin",
          'name': 'Diagnostic Admin'
        }, {
          val: "distributor",
          'name': 'Distributors'
        }, {
          val: "doctor_group",
          'name': 'Doctors Group Admin'
        }];
        this.SearchingEndpoint = "datalist";
        this.SearchingSourceName = "data_doctor_office_list";
        this.datacollection = 'getdoctorofficelistdata';
        this.sortdata = {
          "type": 'desc',
          "field": 'firstname',
          "options": ['firstname']
        };
        this.limitcond = {
          "limit": 10,
          "skip": 0,
          "pagecount": 1
        };
        this.search_settings = {
          selectsearch: [{
            label: 'Search By Status',
            field: 'status',
            values: this.status
          }],
          textsearch: [{
            label: "Search By Name",
            field: 'name_search'
          }, {
            label: "Search By Center Name",
            field: 'center_search'
          }, {
            label: "Search By E-Mail",
            field: 'email'
          }]
        };
        this.libdata = {
          basecondition: {
            "parent_id": this.userData._id
          },
          updateendpoint: 'statusupdate',
          notes: {
            label: "Notes",
            addendpoint: "addnotedata",
            deleteendpoint: "deletenotedata",
            listendpoint: "listnotedata",
            user: "",
            currentuserfullname: " ",
            header: 'fullname'
          },
          // hideeditbutton:true,// all these button options are optional not mandatory
          //hidedeletebutton:true,
          //hideviewbutton:false,
          //hidestatustogglebutton:true,
          // hideaction:true,
          tableheaders: ['center_name', 'firstname', 'lastname', 'email', 'phone', 'status', 'created_date'],
          custombuttons: []
        };
        this.user_cookie = cookie.get('jwtToken');
        var allData = cookie.getAll();

        if (this.activatedRoute.snapshot.routeConfig.path == "admin/doctor/tech-management") {
          this.userData = {
            user_type: "doctor",
            _id: JSON.parse(this.cookie.get('id'))
          };
        } else {
          this.userData = JSON.parse(this.cookie.get('user_details'));
        }

        this.userData = JSON.parse(allData.user_details);
        this.libdata.notes.user = this.userData._id;
        this.libdata.notes.currentuserfullname = this.userData.firstname + this.userData.lastname;
        this.apiUrl = httpService.baseUrl;

        if (this.userData.user_type == 'doctor') {
          this.editUrl = 'doctor/doctor-office-management/edit';
          this.libdata.basecondition = {
            doctor_id: this.userData._id,
            type: "doctor"
          };
          this.libdata.notes.user = this.userData._id;
          this.libdata.notes.currentuserfullname = this.userData.firstname + this.userData.lastname;
        }

        if (this.userData.user_type == 'diagnostic_admin') {
          this.editUrl = 'diagnostic-admin/doctor-office-management/edit';
          this.libdata.basecondition = {
            'parent_id': this.userData._id
          };
          this.libdata.notes.user = this.userData._id;
          this.libdata.notes.currentuserfullname = this.userData.center_name;
        }

        if (this.userData.user_type == 'distributors') {
          this.editUrl = 'distributors/doctor-office-management/edit';
          this.libdata.basecondition = {
            'parent_id': this.userData._id
          };
          this.libdata.notes.user = this.userData._id;
          this.libdata.notes.currentuserfullname = this.userData.distributorname;
        }

        if (this.userData.user_type == 'doctor_group') {
          this.editUrl = 'doctor-group/doctor-office-management/edit';
          this.libdata.basecondition = {
            'parent_id': this.userData._id
          };
          this.libdata.notes.user = this.userData._id;
          this.libdata.notes.currentuserfullname = this.userData.groupname;
        }

        if (this.userData.user_type == 'admin') {
          this.libdata.custombuttons = {
            label: "Log Me",
            type: 'listner',
            id: 'i1'
          };
          this.search_settings.textsearch.push({
            label: "Search By Parent Name",
            field: 'parent_name_search'
          });
          this.search_settings.selectsearch.push({
            label: 'Search By Parent Type',
            field: 'parent_type_search',
            values: this.parent_type
          });
          this.libdata.tableheaders.splice(3, 0, "parent_name");
          this.libdata.tableheaders.splice(4, 0, "parent_type");
          this.libdata.notes.user = this.userData._id;
          this.libdata.notes.currentuserfullname = this.userData.firstname + this.userData.lastname;
        }
      }

      _createClass(DoctorOfficeManagementComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this60 = this;

          this.datasource = '';

          if (this.userData.user_type != "doctor") {
            var endpoint = 'getdoctorofficelistdata';
            var endpointc = 'getdoctorofficelistdata-count';
            var userdata = {};

            if (this.userData.user_type != "admin") {
              userdata = {
                parent_id: this.userData._id
              };
            }

            var data = {
              "condition": {
                "limit": 10,
                "skip": 0
              },
              sort: {
                "type": 'desc',
                "field": 'firstname'
              },
              data: userdata
            };
            this.httpService.httpViaPost(endpointc, data).subscribe(function (res) {
              // console.log('in constructor');
              // console.log(result);
              _this60.doctorOfficeData_count = res.count; //console.warn('blogData c',res);
            }, function (error) {
              console.log('Oooops!');
            });
            this.httpService.httpViaPost(endpoint, data).subscribe(function (res) {
              _this60.doctorOfficeAllData = res.results.res;
            }, function (error) {
              console.log('Oooops!');
            });
          } else {
            var _endpoint2 = 'getdoctorofficelistdata';
            var _endpointc2 = 'getdoctorofficelistdata-count';
            var _data6 = {
              "condition": {
                "limit": 10,
                "skip": 0
              },
              sort: {
                "type": 'desc',
                "field": 'firstname'
              },
              type: "doctor",
              docofficeid: this.userData._id
            };
            this.httpService.httpViaPost(_endpointc2, _data6).subscribe(function (res) {
              // console.log('in constructor');
              // console.log(result);
              _this60.doctorOfficeData_count = res.count; //console.warn('blogData c',res);
            }, function (error) {
              console.log('Oooops!');
            });
            this.httpService.httpViaPost(_endpoint2, _data6).subscribe(function (res) {
              _this60.doctorOfficeAllData = res.results.res;
            }, function (error) {
              console.log('Oooops!');
            });
          }
        }
      }, {
        key: "listenLiblistingChange",
        value: function listenLiblistingChange() {
          var _this61 = this;

          var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;

          if (data != null) {
            switch (data.custombuttonclick.btninfo.label) {
              case "Log Me":
                var modalData1 = {
                  panelClass: 'bulkupload-dialog',
                  data: {
                    header: "Alert",
                    message: "Do you want to login as doctor Office : " + data.custombuttonclick.data.firstname + " " + data.custombuttonclick.data.lastname + "?",
                    button1: {
                      text: "Yes"
                    },
                    button2: {
                      text: "No"
                    }
                  }
                };
                var dialogRef1 = this.dialog.open(_common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_7__["DialogBoxComponent"], modalData1);
                dialogRef1.afterClosed().subscribe(function (result) {
                  switch (result) {
                    case "Yes":
                      // Delete Cookie
                      _this61.cookie["delete"]('user_details');

                      _this61.cookie["delete"]('main_user');

                      _this61.cookie["delete"]('jwtToken');

                      _this61.cookie.deleteAll('/');

                      setTimeout(function () {
                        // Reset again Cookie
                        _this61.cookie.set('jwtToken', _this61.user_cookie);

                        _this61.cookie.set('user_details', JSON.stringify(data.custombuttonclick.data));

                        _this61.cookie.set('main_user', JSON.stringify(_this61.userData)); // Redirect to page


                        _this61.router.navigateByUrl("doctor/dashboard");
                      }, 500);
                      break;

                    case "No":
                      dialogRef1.close();
                      break;
                  }
                });
                break;
            }
          }
        }
      }]);

      return DoctorOfficeManagementComponent;
    }();

    DoctorOfficeManagementComponent.ctorParameters = function () {
      return [{
        type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__["MatDialog"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__["CookieService"]
      }, {
        type: _angular_common_http__WEBPACK_IMPORTED_MODULE_4__["HttpClient"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_5__["HttpServiceService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"]
      }];
    };

    DoctorOfficeManagementComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-doctor-office-management',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./doctor-office-management.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/doctor-office-management/doctor-office-management.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./doctor-office-management.component.css */
      "./src/app/components/admin/doctor-office-management/doctor-office-management.component.css"))["default"]]
    })], DoctorOfficeManagementComponent);
    /***/
  },

  /***/
  "./src/app/components/admin/faq-management/add-edit-faq/add-edit-faq.component.css":
  /*!*****************************************************************************************!*\
    !*** ./src/app/components/admin/faq-management/add-edit-faq/add-edit-faq.component.css ***!
    \*****************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminFaqManagementAddEditFaqAddEditFaqComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = ".full_width{ box-sizing: border-box; display: block; margin: 0 0.5%; }\n.full_width mat-label{ margin-bottom: 6px; display: inline-block;}\n.wrppr{ background: #e9e9e9; display: inline-block; width: 49%; box-sizing: border-box; padding: 20px 14px 6px;\nmargin: 2px 0 8px 5px; border-bottom: 1px solid;}\n@media screen and (max-width: 576px){\n .wrppr{ width: 100%; margin: 0; }\n}  \n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9hZG1pbi9mYXEtbWFuYWdlbWVudC9hZGQtZWRpdC1mYXEvYWRkLWVkaXQtZmFxLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsYUFBYSxzQkFBc0IsRUFBRSxjQUFjLEVBQUUsY0FBYyxFQUFFO0FBQ3JFLHVCQUF1QixrQkFBa0IsRUFBRSxxQkFBcUIsQ0FBQztBQUNqRSxRQUFRLG1CQUFtQixFQUFFLHFCQUFxQixFQUFFLFVBQVUsRUFBRSxzQkFBc0IsRUFBRSxzQkFBc0I7QUFDOUcscUJBQXFCLEVBQUUsd0JBQXdCLENBQUM7QUFFaEQ7Q0FDQyxRQUFRLFdBQVcsRUFBRSxTQUFTLEVBQUU7QUFDakMiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2FkbWluL2ZhcS1tYW5hZ2VtZW50L2FkZC1lZGl0LWZhcS9hZGQtZWRpdC1mYXEuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mdWxsX3dpZHRoeyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBkaXNwbGF5OiBibG9jazsgbWFyZ2luOiAwIDAuNSU7IH1cbi5mdWxsX3dpZHRoIG1hdC1sYWJlbHsgbWFyZ2luLWJvdHRvbTogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7fVxuLndycHByeyBiYWNrZ3JvdW5kOiAjZTllOWU5OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IHdpZHRoOiA0OSU7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IHBhZGRpbmc6IDIwcHggMTRweCA2cHg7XG5tYXJnaW46IDJweCAwIDhweCA1cHg7IGJvcmRlci1ib3R0b206IDFweCBzb2xpZDt9IFxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NzZweCl7XG4gLndycHByeyB3aWR0aDogMTAwJTsgbWFyZ2luOiAwOyB9XG59ICAiXX0= */";
    /***/
  },

  /***/
  "./src/app/components/admin/faq-management/add-edit-faq/add-edit-faq.component.ts":
  /*!****************************************************************************************!*\
    !*** ./src/app/components/admin/faq-management/add-edit-faq/add-edit-faq.component.ts ***!
    \****************************************************************************************/

  /*! exports provided: AddEditFaqComponent */

  /***/
  function srcAppComponentsAdminFaqManagementAddEditFaqAddEditFaqComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AddEditFaqComponent", function () {
      return AddEditFaqComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var _class_common_common_function__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../../../../class/common/common-function */
    "./src/app/class/common/common-function.ts");
    /* harmony import */


    var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! @angular/platform-browser */
    "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");

    var AddEditFaqComponent = /*#__PURE__*/function () {
      function AddEditFaqComponent(fb, activeRoute, router, httpService, datePipe, cookie, snackBar, commonFunction, dialog, sanitizer) {
        _classCallCheck(this, AddEditFaqComponent);

        this.fb = fb;
        this.activeRoute = activeRoute;
        this.router = router;
        this.httpService = httpService;
        this.datePipe = datePipe;
        this.cookie = cookie;
        this.snackBar = snackBar;
        this.commonFunction = commonFunction;
        this.dialog = dialog;
        this.sanitizer = sanitizer;
        this.htmlText = {
          userData: "",
          header: 'Add New FAQ',
          nav: 'Add FAQ',
          buttonText: 'Save',
          message: "Submitted Successfully",
          states: "",
          allCities: "",
          cities: "",
          ckEditorValue: "",
          youtubeLinkError: false,
          youtubeViewLink: {
            status: false,
            url: ''
          }
        };
        this.htmlText.userData = cookie.getAll();
        this.htmlText.userData.user_details = JSON.parse(this.htmlText.userData.user_details);

        if (this.activeRoute.snapshot.params._id) {
          this.generateAddEditForm('edit');
          this.htmlText.message = "Updated Successfully";
          this.htmlText.header = 'Edit FAQ Record';
          this.htmlText.nav = 'Edit FAQ';
          this.htmlText.buttonText = 'Update';
          this.params_id = this.activeRoute.snapshot.params._id;
        } else {
          this.generateAddEditForm('add');
        }
      }

      _createClass(AddEditFaqComponent, [{
        key: "generateAddEditForm",
        value: function generateAddEditForm() {
          var _this62 = this;

          var flag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
          var validateRule = {
            id: ['', []],
            users: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(50)]],
            question: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(1000)]],
            answer: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(100000)]],
            youtube_link: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(60)]],
            priority: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(7), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(16)]],
            status: ['', []]
          };

          switch (flag) {
            case 'edit':
              this.FaqManagementAddEditForm = this.fb.group(validateRule);
              this.activeRoute.data.forEach(function (data) {
                var billerDetails = data.techData.res;

                _this62.FaqManagementAddEditForm.controls['id'].patchValue(billerDetails[0]._id);

                _this62.FaqManagementAddEditForm.controls['users'].patchValue(billerDetails[0].users);

                _this62.FaqManagementAddEditForm.controls['question'].patchValue(billerDetails[0].question);

                _this62.htmlText.ckEditorValue = billerDetails[0].answer;

                _this62.FaqManagementAddEditForm.controls['youtube_link'].patchValue(billerDetails[0].youtube_link);

                _this62.FaqManagementAddEditForm.controls['priority'].patchValue(billerDetails[0].priority);

                _this62.FaqManagementAddEditForm.controls['status'].patchValue(billerDetails[0].status);

                _this62.getVideo();
              });
              break;

            case 'add':
              delete validateRule.id;
              this.FaqManagementAddEditForm = this.fb.group(validateRule);
              break;
          }
        }
      }, {
        key: "ngOnInit",
        value: function ngOnInit() {}
        /**for validation purpose**/

      }, {
        key: "inputUntouch",
        value: function inputUntouch(form, val) {
          form.controls[val].markAsUntouched();
        }
        /**for validation purpose**/

      }, {
        key: "TechManagementAddFormFormSubmit",
        value: function TechManagementAddFormFormSubmit() {
          var _this63 = this;

          this.FaqManagementAddEditForm.controls['answer'].patchValue(this.htmlText.ckEditorValue);

          for (var x in this.FaqManagementAddEditForm.controls) {
            this.FaqManagementAddEditForm.controls[x].markAsTouched();
          }

          if (this.FaqManagementAddEditForm.valid) {
            if (this.FaqManagementAddEditForm.value.status) {
              this.FaqManagementAddEditForm.value.status = parseInt("1");
            } else {
              this.FaqManagementAddEditForm.value.status = parseInt("0");
            }

            var data = {
              "source": "data_faq",
              "data": this.FaqManagementAddEditForm.value,
              "token": this.htmlText.userData.jwtToken
            }; // create youtube enbad link

            var videoLink = this.commonFunction.getYoutubeEmbedUrl(this.FaqManagementAddEditForm.value.youtube_link);

            if (videoLink.status == false && this.FaqManagementAddEditForm.value.youtube_link != '') {
              this.snackBar.open("Youtube link is invalid.", 'Ok', {
                duration: 4000
              });
              data.data.youtube_link = '';
              this.htmlText.youtubeLinkError = true;
              return;
            } else {
              data.data.youtube_link = videoLink.url;
            }

            this.httpService.httpViaPost("addorupdatedata", data).subscribe(function (response) {
              if (response.status == "success") {
                _this63.snackBar.open(_this63.htmlText.message, 'Ok', {
                  duration: 2000
                });

                _this63.formDirective.resetForm();

                setTimeout(function () {
                  _this63.router.navigateByUrl("admin/faq-management");
                }, 1000);
              } else {
                _this63.snackBar.open(response.msg, '', {
                  duration: 2000
                });
              }
            });
          }
        }
      }, {
        key: "getVideo",
        value: function getVideo() {
          this.htmlText.youtubeViewLink = this.commonFunction.getYoutubeEmbedUrl(this.FaqManagementAddEditForm.value.youtube_link);

          if (this.htmlText.youtubeViewLink.status == true) {
            this.htmlText.youtubeViewLink.url = this.sanitizer.bypassSecurityTrustResourceUrl(this.htmlText.youtubeViewLink.url);
          } else {
            this.htmlText.youtubeViewLink.status = false;
            this.htmlText.youtubeViewLink.url = '';
          }
        }
      }]);

      return AddEditFaqComponent;
    }();

    AddEditFaqComponent.ctorParameters = function () {
      return [{
        type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__["HttpServiceService"]
      }, {
        type: _angular_common__WEBPACK_IMPORTED_MODULE_5__["DatePipe"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_6__["CookieService"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatSnackBar"]
      }, {
        type: _class_common_common_function__WEBPACK_IMPORTED_MODULE_8__["CommonFunction"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatDialog"]
      }, {
        type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_9__["DomSanitizer"]
      }];
    };

    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroupDirective"], {
      "static": false
    })], AddEditFaqComponent.prototype, "formDirective", void 0);
    AddEditFaqComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-add-edit-faq',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./add-edit-faq.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/faq-management/add-edit-faq/add-edit-faq.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./add-edit-faq.component.css */
      "./src/app/components/admin/faq-management/add-edit-faq/add-edit-faq.component.css"))["default"]]
    })], AddEditFaqComponent);
    /***/
  },

  /***/
  "./src/app/components/admin/faq-management/list-faq/list-faq.component.css":
  /*!*********************************************************************************!*\
    !*** ./src/app/components/admin/faq-management/list-faq/list-faq.component.css ***!
    \*********************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminFaqManagementListFaqListFaqComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW4vZmFxLW1hbmFnZW1lbnQvbGlzdC1mYXEvbGlzdC1mYXEuY29tcG9uZW50LmNzcyJ9 */";
    /***/
  },

  /***/
  "./src/app/components/admin/faq-management/list-faq/list-faq.component.ts":
  /*!********************************************************************************!*\
    !*** ./src/app/components/admin/faq-management/list-faq/list-faq.component.ts ***!
    \********************************************************************************/

  /*! exports provided: ListFaqComponent */

  /***/
  function srcAppComponentsAdminFaqManagementListFaqListFaqComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ListFaqComponent", function () {
      return ListFaqComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_common_http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/common/http */
    "./node_modules/@angular/common/fesm2015/http.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _class_common_common_function__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../../../../class/common/common-function */
    "./src/app/class/common/common-function.ts");

    var ListFaqComponent = /*#__PURE__*/function () {
      function ListFaqComponent(cookie, http, httpService, activatedRoute, commonFunction) {
        _classCallCheck(this, ListFaqComponent);

        this.cookie = cookie;
        this.http = http;
        this.httpService = httpService;
        this.activatedRoute = activatedRoute;
        this.commonFunction = commonFunction;
        this.allUserData = [];
        this.datasource = '';
        this.faqData_count = 0;
        this.allUserData_skip = ["_id", "answer", "created_at", "youtube_link"];
        this.editUrl = "admin/faq-management/edit";
        this.allUserData_modify_header = {
          "users": "Users",
          "question": "Question",
          "priority": "Priority",
          "status": "Status"
        };
        this.previewModal_detail_skip = ["_id", "user_type", "password", "created_at", "id", "updated_at", "diagnostic_admin_id"];
        this.libdata = {
          // basecondition: {report_type:"file"},
          updateendpoint: 'statusupdate',
          // hideeditbutton:true,// all these button options are optional not mandatory
          // hidedeletebutton:true,
          // hideviewbutton:true,
          //hidestatustogglebutton:true,
          // hideaction:true,
          tableheaders: ['users', 'question', 'priority', 'status'] //not required

        };
        this.datacollection = 'getfaqlistdata';
        this.sortdata = {
          "type": 'desc',
          "field": 'question',
          "options": ['question']
        };
        this.limitcond = {
          "limit": 10,
          "skip": 0,
          "pagecount": 1
        };
        this.UpdateEndpoint = "addorupdatedata";
        this.deleteEndpoint = "deletesingledata";
        this.tableName = "data_faq";
        this.status = [{
          val: 1,
          'name': 'Active'
        }, {
          val: 0,
          'name': 'Inactive'
        }];
        this.SearchingEndpoint = "datalist";
        this.SearchingSourceName = "data_sales_person_list";
        this.search_settings = {
          selectsearch: [{
            label: 'Search By Status',
            field: 'status',
            values: this.status
          }],
          textsearch: [{
            label: "Search By Question",
            field: 'question_search'
          }]
        };
        this.FaqManagementAddEditForm = [];
        /* Set Meta Data */

        this.commonFunction.setTitleMetaTags();
        this.user_cookie = cookie.get('jwtToken');
        var allData = cookie.getAll();
        this.userData = JSON.parse(allData.user_details);
        this.apiUrl = httpService.baseUrl;
      }

      _createClass(ListFaqComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this64 = this;

          this.datasource = '';
          var endpoint = 'getfaqlistdata';
          var endpointc = 'getfaqlistdata-count';
          var data = {
            "condition": {
              "limit": 10,
              "skip": 0
            },
            sort: {
              "type": 'desc',
              "field": 'question'
            }
          };
          this.httpService.httpViaPost(endpointc, data).subscribe(function (res) {
            // console.log('in constructor');
            // console.log(result);
            _this64.faqData_count = res.count; //console.warn('blogData c',res);
          }, function (error) {
            console.log('Oooops!');
          });
          this.httpService.httpViaPost(endpoint, data).subscribe(function (res) {
            _this64.FaqManagementAddEditForm = res.results.res;
          }, function (error) {
            console.log('Oooops!');
          });
        }
      }]);

      return ListFaqComponent;
    }();

    ListFaqComponent.ctorParameters = function () {
      return [{
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__["HttpServiceService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"]
      }, {
        type: _class_common_common_function__WEBPACK_IMPORTED_MODULE_6__["CommonFunction"]
      }];
    };

    ListFaqComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-list-faq',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./list-faq.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/faq-management/list-faq/list-faq.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./list-faq.component.css */
      "./src/app/components/admin/faq-management/list-faq/list-faq.component.css"))["default"]]
    })], ListFaqComponent);
    /***/
  },

  /***/
  "./src/app/components/admin/login-as-doctor/login-dotor-by-admin/login-dotor-by-admin.component.css":
  /*!**********************************************************************************************************!*\
    !*** ./src/app/components/admin/login-as-doctor/login-dotor-by-admin/login-dotor-by-admin.component.css ***!
    \**********************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminLoginAsDoctorLoginDotorByAdminLoginDotorByAdminComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW4vbG9naW4tYXMtZG9jdG9yL2xvZ2luLWRvdG9yLWJ5LWFkbWluL2xvZ2luLWRvdG9yLWJ5LWFkbWluLmNvbXBvbmVudC5jc3MifQ== */";
    /***/
  },

  /***/
  "./src/app/components/admin/login-as-doctor/login-dotor-by-admin/login-dotor-by-admin.component.ts":
  /*!*********************************************************************************************************!*\
    !*** ./src/app/components/admin/login-as-doctor/login-dotor-by-admin/login-dotor-by-admin.component.ts ***!
    \*********************************************************************************************************/

  /*! exports provided: LoginDotorByAdminComponent */

  /***/
  function srcAppComponentsAdminLoginAsDoctorLoginDotorByAdminLoginDotorByAdminComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "LoginDotorByAdminComponent", function () {
      return LoginDotorByAdminComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");

    var LoginDotorByAdminComponent = /*#__PURE__*/function () {
      function LoginDotorByAdminComponent() {
        _classCallCheck(this, LoginDotorByAdminComponent);
      }

      _createClass(LoginDotorByAdminComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }]);

      return LoginDotorByAdminComponent;
    }();

    LoginDotorByAdminComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-login-dotor-by-admin',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./login-dotor-by-admin.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/login-as-doctor/login-dotor-by-admin/login-dotor-by-admin.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./login-dotor-by-admin.component.css */
      "./src/app/components/admin/login-as-doctor/login-dotor-by-admin/login-dotor-by-admin.component.css"))["default"]]
    })], LoginDotorByAdminComponent);
    /***/
  },

  /***/
  "./src/app/components/admin/manage-adminbiller/add-edit-adminbiller/add-edit-adminbiller.component.css":
  /*!*************************************************************************************************************!*\
    !*** ./src/app/components/admin/manage-adminbiller/add-edit-adminbiller/add-edit-adminbiller.component.css ***!
    \*************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminManageAdminbillerAddEditAdminbillerAddEditAdminbillerComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW4vbWFuYWdlLWFkbWluYmlsbGVyL2FkZC1lZGl0LWFkbWluYmlsbGVyL2FkZC1lZGl0LWFkbWluYmlsbGVyLmNvbXBvbmVudC5jc3MifQ== */";
    /***/
  },

  /***/
  "./src/app/components/admin/manage-adminbiller/add-edit-adminbiller/add-edit-adminbiller.component.ts":
  /*!************************************************************************************************************!*\
    !*** ./src/app/components/admin/manage-adminbiller/add-edit-adminbiller/add-edit-adminbiller.component.ts ***!
    \************************************************************************************************************/

  /*! exports provided: AddEditAdminbillerComponent */

  /***/
  function srcAppComponentsAdminManageAdminbillerAddEditAdminbillerAddEditAdminbillerComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AddEditAdminbillerComponent", function () {
      return AddEditAdminbillerComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/material/dialog */
    "./node_modules/@angular/material/esm2015/dialog.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../../../../../environments/environment */
    "./src/environments/environment.ts");

    var AddEditAdminbillerComponent = /*#__PURE__*/function () {
      function AddEditAdminbillerComponent(formBuilder, http, cookieService, dialog, router, acivatedRoute, snackBar) {
        _classCallCheck(this, AddEditAdminbillerComponent);

        this.formBuilder = formBuilder;
        this.http = http;
        this.cookieService = cookieService;
        this.dialog = dialog;
        this.router = router;
        this.acivatedRoute = acivatedRoute;
        this.snackBar = snackBar;
        this.htmlText = {
          userData: "",
          header: 'Add New AdminBiller',
          nav: 'Add AdminBiller',
          buttonText: 'Save',
          message: "Submitted Successfully",
          doctorOfficeData: [],
          techData: [],
          billerData: [],
          states: "",
          allCities: "",
          cities: "",
          taxonomies: ""
        };
        this.htmlText.userData = this.cookieService.getAll();
        this.htmlText.userData.user_details = JSON.parse(this.htmlText.userData.user_details);
        this.allStateCityData();

        if (this.acivatedRoute.snapshot.params._id) {
          this.generateAddEditForm('edit');
          this.htmlText.message = "Updated Successfully";
          this.htmlText.header = 'Edit AdminBiller Record';
          this.htmlText.nav = 'Edit AdminBiller';
          this.htmlText.buttonText = 'Update';
          this.params_id = this.acivatedRoute.snapshot.params._id;
        } else {
          this.generateAddEditForm('add');
        }
      }

      _createClass(AddEditAdminbillerComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }, {
        key: "generateAddEditForm",
        value: function generateAddEditForm() {
          var _this65 = this;

          var flag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
          var validateRule = {
            id: ['', []],
            firstname: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(50)]],
            lastname: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(50)]],
            email: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].email, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(100)]],
            phone: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(7), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(16)]],
            address: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(200)]],
            zip: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(4), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(18)]],
            city: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
            state: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
            user_type: ['admin_biller', []],
            //tech_id:                ['', []],
            //biller_id:              ['', []],
            //doctors_office_id:      ['', []],
            status: ['', []],
            password: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(16), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(6)]],
            confirmpassword: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]]
          };
          var passwordRule = {
            validators: this.matchpassword('password', 'confirmpassword')
          }; // diagnostic_admin

          if (this.htmlText.userData.user_details.user_type == 'diagnostic_admin') {
            validateRule["tech_id"] = ['', []];
          }

          switch (flag) {
            case 'edit':
              delete validateRule.password;
              delete validateRule.confirmpassword;
              this.adminbillerManagementAddEditForm = this.formBuilder.group(validateRule);
              this.acivatedRoute.data.forEach(function (data) {
                var adminbillerDetails = data.data.res;
                setTimeout(function () {
                  _this65.getCity(adminbillerDetails[0].state);
                }, 1000);

                _this65.adminbillerManagementAddEditForm.controls['id'].patchValue(adminbillerDetails[0]._id);

                _this65.adminbillerManagementAddEditForm.controls['firstname'].patchValue(adminbillerDetails[0].firstname);

                _this65.adminbillerManagementAddEditForm.controls['lastname'].patchValue(adminbillerDetails[0].lastname);

                _this65.adminbillerManagementAddEditForm.controls['email'].patchValue(adminbillerDetails[0].email);

                _this65.adminbillerManagementAddEditForm.controls['phone'].patchValue(adminbillerDetails[0].phone);

                _this65.adminbillerManagementAddEditForm.controls['address'].patchValue(adminbillerDetails[0].address);

                _this65.adminbillerManagementAddEditForm.controls['zip'].patchValue(adminbillerDetails[0].zip);

                _this65.adminbillerManagementAddEditForm.controls['city'].patchValue(adminbillerDetails[0].city);

                _this65.adminbillerManagementAddEditForm.controls['state'].patchValue(adminbillerDetails[0].state); // diagnostic_admin


                if (_this65.htmlText.userData.user_details.user_type == 'diagnostic_admin') {
                  _this65.adminbillerManagementAddEditForm.controls['tech_id'].patchValue(adminbillerDetails[0].tech_id);
                } //this.adminbillerManagementAddEditForm.controls['biller_id'].patchValue(adminbillerDetails[0].biller_details);
                //this.adminbillerManagementAddEditForm.controls['doctors_office_id'].patchValue(adminbillerDetails[0].doctors_office_details);


                _this65.adminbillerManagementAddEditForm.controls['state'].patchValue(adminbillerDetails[0].state); // this.adminbillerManagementAddEditForm.controls['taxo_list'].patchValue(adminbillerDetails[0].taxo_list);


                _this65.adminbillerManagementAddEditForm.controls['status'].patchValue(adminbillerDetails[0].status);
              });
              break;

            case 'add':
              delete validateRule.id;
              this.adminbillerManagementAddEditForm = this.formBuilder.group(validateRule, passwordRule);
              break;
          }
        }
      }, {
        key: "matchpassword",
        value: function matchpassword(passwordkye, confirmpasswordkye) {
          return function (group) {
            var passwordInput = group.controls[passwordkye],
                confirmpasswordInput = group.controls[confirmpasswordkye];

            if (passwordInput.value !== confirmpasswordInput.value) {
              return confirmpasswordInput.setErrors({
                notEquivalent: true
              });
            } else {
              return confirmpasswordInput.setErrors(null);
            }
          };
        }
        /**for validation purpose**/

      }, {
        key: "inputUntouch",
        value: function inputUntouch(form, val) {
          form.controls[val].markAsUntouched();
        }
        /**for validation purpose**/

        /**for getting all states & cities function start here**/

      }, {
        key: "allStateCityData",
        value: function allStateCityData() {
          var _this66 = this;

          this.http.getSiteSettingData("./assets/data-set/state.json").subscribe(function (response) {
            _this66.htmlText.states = response;
          });
          this.http.getSiteSettingData("./assets/data-set/city.json").subscribe(function (response) {
            _this66.htmlText.allCities = response;
          });
          this.http.getSiteSettingData("./assets/data-set/taxonomies.json").subscribe(function (response) {
            _this66.htmlText.taxonomies = response;
          });
        }
        /**for getting all states & cities  function end here**/

      }, {
        key: "getCity",
        value: function getCity(event) {
          var val = event;
          this.htmlText.cities = this.htmlText.allCities[val];
        }
      }, {
        key: "getCityByName",
        value: function getCityByName(stateName) {
          this.htmlText.cities = this.htmlText.allCities[stateName];
        }
      }, {
        key: "adminbillerManagementAddEditFormSubmit",
        value: function adminbillerManagementAddEditFormSubmit() {
          var _this67 = this;

          for (var x in this.adminbillerManagementAddEditForm.controls) {
            this.adminbillerManagementAddEditForm.controls[x].markAsTouched();
          }
          /* stop here if form is invalid */


          if (this.adminbillerManagementAddEditForm.valid) {
            delete this.adminbillerManagementAddEditForm.value.confirmpassword;

            if (this.adminbillerManagementAddEditForm.value.status) {
              this.adminbillerManagementAddEditForm.value.status = parseInt("1");
            } else {
              this.adminbillerManagementAddEditForm.value.status = parseInt("0");
              ;
            }
            /* start process to submited data */


            var postData = {
              "source": "data_pece",
              "data": this.adminbillerManagementAddEditForm.value,
              "domainurl": _environments_environment__WEBPACK_IMPORTED_MODULE_8__["environment"].siteBaseUrl + 'reset-password',
              //"sourceobjArray": ["tech_id", "biller_id"],
              "token": this.cookieService.get('jwtToken')
            };

            if (this.htmlText.userData.user_details.user_type == 'diagnostic_admin') {
              postData.data["diagnostic_admin_id"] = this.htmlText.userData.user_details._id;
              postData["sourceobj"] = ["diagnostic_admin_id"];
              postData["sourceobjArray"] = ["tech_id"];
            }

            this.http.httpViaPost('addorupdatedata', postData).subscribe(function (response) {
              if (response.status == "success") {
                _this67.snackBar.open(_this67.htmlText.message, 'Ok', {
                  duration: 2000
                });

                setTimeout(function () {
                  switch (_this67.htmlText.userData.user_details.user_type) {
                    case 'diagnostic_admin':
                      _this67.router.navigateByUrl("admin/adminbiller-management");

                      break;

                    case 'admin':
                      _this67.router.navigateByUrl("admin/adminbiller-management");

                      break;
                  }
                }, 1000);
              } else {
                _this67.snackBar.open(response.msg, '', {
                  duration: 2000
                });
              }
            }, function (error) {
              alert("Some error occurred. Please try again.");
            });
          }
        }
      }]);

      return AddEditAdminbillerComponent;
    }();

    AddEditAdminbillerComponent.ctorParameters = function () {
      return [{
        type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__["HttpServiceService"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_4__["CookieService"]
      }, {
        type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__["MatDialog"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_6__["Router"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_6__["ActivatedRoute"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatSnackBar"]
      }];
    };

    AddEditAdminbillerComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-add-edit-adminbiller',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./add-edit-adminbiller.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/manage-adminbiller/add-edit-adminbiller/add-edit-adminbiller.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./add-edit-adminbiller.component.css */
      "./src/app/components/admin/manage-adminbiller/add-edit-adminbiller/add-edit-adminbiller.component.css"))["default"]]
    })], AddEditAdminbillerComponent);
    /***/
  },

  /***/
  "./src/app/components/admin/manage-adminbiller/listing-adminbiller/listing-adminbiller.component.css":
  /*!***********************************************************************************************************!*\
    !*** ./src/app/components/admin/manage-adminbiller/listing-adminbiller/listing-adminbiller.component.css ***!
    \***********************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminManageAdminbillerListingAdminbillerListingAdminbillerComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW4vbWFuYWdlLWFkbWluYmlsbGVyL2xpc3RpbmctYWRtaW5iaWxsZXIvbGlzdGluZy1hZG1pbmJpbGxlci5jb21wb25lbnQuY3NzIn0= */";
    /***/
  },

  /***/
  "./src/app/components/admin/manage-adminbiller/listing-adminbiller/listing-adminbiller.component.ts":
  /*!**********************************************************************************************************!*\
    !*** ./src/app/components/admin/manage-adminbiller/listing-adminbiller/listing-adminbiller.component.ts ***!
    \**********************************************************************************************************/

  /*! exports provided: ListingAdminbillerComponent */

  /***/
  function srcAppComponentsAdminManageAdminbillerListingAdminbillerListingAdminbillerComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ListingAdminbillerComponent", function () {
      return ListingAdminbillerComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");

    var ListingAdminbillerComponent = /*#__PURE__*/function () {
      // ====================================================================
      function ListingAdminbillerComponent(http, cookieService, router, activatedRoute) {
        _classCallCheck(this, ListingAdminbillerComponent);

        this.http = http;
        this.cookieService = cookieService;
        this.router = router;
        this.activatedRoute = activatedRoute;
        this.userData = {};
        this.docData_count = 0;
        this.docData = [];
        this.docData_skip = ["_id", "fax", "address", "zip", "city", "state", "user_type", "tech_id", "biller_id", "doctors_office_id", "diagnostic_admin_id", "taxo_list", "password", "created_at", "id", "name_search", "updated_at", "doctor_signature", "name_search"];
        this.docData_modify_header = {
          firstname: "First Name",
          lastname: "Last Name",
          email: "Email",
          phone: "Phone Number",
          status: "Status",
          "logincounts": "No Of Login",
          "last_login_datetime": "Last Login",
          "last login datetime": "Last Login"
        };
        this.previewModal_skip = ["_id", "user_type", "tech_id", "biller_id", "doctors_office_id", "taxo_list", "created_date"];
        this.libdata = {
          // basecondition: {report_type:"file"},
          updateendpoint: 'statusupdate',
          notes: {
            label: "Notes",
            addendpoint: "addnotedata",
            deleteendpoint: "deletenotedata",
            listendpoint: "listnotedata",
            user: "",
            currentuserfullname: " ",
            header: 'User'
          },
          // hideeditbutton:true,// all these button options are optional not mandatory
          // hidedeletebutton:true,
          // hideviewbutton:true,
          //hidestatustogglebutton:true,
          // hideaction:true,
          tableheaders: ['firstname', 'lastname', 'email', 'phone', 'status', 'logincounts', 'last_login_datetime'] //not required

        };
        this.tableName = 'data_pece';
        this.UpdateEndpoint = "addorupdatedata";
        this.deleteEndpoint = "deletesingledata";
        this.searchingEndpoint = "datalist";
        this.searchSourceName = "data_doctor_list";
        this.editUrl = 'admin/adminbiller-management/edit';
        this.datacollection = 'getbilleradminlistdata';
        this.sortdata = {
          "type": 'desc',
          "field": 'firstname',
          "options": ['firstname']
        };
        this.limitcond = {
          "limit": 10,
          "skip": 0,
          "pagecount": 1
        };
        this.status = [{
          val: 1,
          'name': 'Active'
        }, {
          val: 0,
          'name': 'Inactive'
        }];
        this.search_settings = {
          selectsearch: [{
            label: 'Search By Status',
            field: 'status',
            values: this.status
          }],
          textsearch: [{
            label: "Search By Name",
            field: 'name_search'
          }, // {label:"Search by Taxonomy",field:'taxo_list'},
          {
            label: "Search By E-Mail",
            field: 'email'
          }]
        };
        this.user_cookie = cookieService.get('jwtToken');
        var allData = cookieService.getAll();
        this.userData = JSON.parse(allData.user_details);
        this.libdata.notes.user = this.userData._id;
        this.libdata.notes.currentuserfullname = this.userData.firstname + this.userData.lastname;

        if (this.userData.user_type == 'diagnostic_admin') {
          this.editUrl = 'diagnostic-admin/doctor-management/edit';
        }

        this.apiUrl = http.baseUrl;
        this.http.getclientip().subscribe(function (res) {
          console.log(res);
        });
      }

      _createClass(ListingAdminbillerComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this68 = this;

          this.datasource = '';
          var endpoint = 'getbilleradminlistdata';
          var endpointc = 'getbilleradminlistdata-count';
          var data = {
            "condition": {
              "limit": 10,
              "skip": 0
            },
            sort: {
              "type": 'desc',
              "field": 'firstname'
            }
          };
          this.http.httpViaPost(endpointc, data).subscribe(function (res) {
            // console.log('in constructor');
            // console.log(result);
            _this68.docData_count = res.count; //console.warn('blogData c',res);
          }, function (error) {
            console.log('Oooops!');
          });
          this.http.httpViaPost(endpoint, data).subscribe(function (res) {
            _this68.docData = res.results.res;
          }, function (error) {
            console.log('Oooops!');
          });
        }
      }]);

      return ListingAdminbillerComponent;
    }();

    ListingAdminbillerComponent.ctorParameters = function () {
      return [{
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_2__["HttpServiceService"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__["CookieService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"]
      }];
    };

    ListingAdminbillerComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-listing-adminbiller',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./listing-adminbiller.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/manage-adminbiller/listing-adminbiller/listing-adminbiller.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./listing-adminbiller.component.css */
      "./src/app/components/admin/manage-adminbiller/listing-adminbiller/listing-adminbiller.component.css"))["default"]]
    })], ListingAdminbillerComponent);
    /***/
  },

  /***/
  "./src/app/components/admin/manage-distributors/add-edit-distributors/add-edit-distributors.component.css":
  /*!****************************************************************************************************************!*\
    !*** ./src/app/components/admin/manage-distributors/add-edit-distributors/add-edit-distributors.component.css ***!
    \****************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminManageDistributorsAddEditDistributorsAddEditDistributorsComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW4vbWFuYWdlLWRpc3RyaWJ1dG9ycy9hZGQtZWRpdC1kaXN0cmlidXRvcnMvYWRkLWVkaXQtZGlzdHJpYnV0b3JzLmNvbXBvbmVudC5jc3MifQ== */";
    /***/
  },

  /***/
  "./src/app/components/admin/manage-distributors/add-edit-distributors/add-edit-distributors.component.ts":
  /*!***************************************************************************************************************!*\
    !*** ./src/app/components/admin/manage-distributors/add-edit-distributors/add-edit-distributors.component.ts ***!
    \***************************************************************************************************************/

  /*! exports provided: AddEditDistributorsComponent */

  /***/
  function srcAppComponentsAdminManageDistributorsAddEditDistributorsAddEditDistributorsComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AddEditDistributorsComponent", function () {
      return AddEditDistributorsComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var _class_common_common_function__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../../../../class/common/common-function */
    "./src/app/class/common/common-function.ts");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ../../../../../environments/environment */
    "./src/environments/environment.ts");

    var AddEditDistributorsComponent = /*#__PURE__*/function () {
      function AddEditDistributorsComponent(fb, activeRoute, router, httpService, datePipe, cookie, snackBar, commonFunction, dialog) {
        _classCallCheck(this, AddEditDistributorsComponent);

        this.fb = fb;
        this.activeRoute = activeRoute;
        this.router = router;
        this.httpService = httpService;
        this.datePipe = datePipe;
        this.cookie = cookie;
        this.snackBar = snackBar;
        this.commonFunction = commonFunction;
        this.dialog = dialog;
        this.htmlText = {
          userData: "",
          header: 'Add New Distributors',
          nav: 'Add Distributors',
          buttonText: 'Save',
          message: "Submitted Successfully",
          states: "",
          allCities: "",
          cities: ""
        };
        this.htmlText.userData = cookie.getAll();
        this.htmlText.userData.user_details = JSON.parse(this.htmlText.userData.user_details);
        this.allStateCityData();

        if (this.activeRoute.snapshot.params._id) {
          this.generateAddEditForm('edit');
          this.htmlText.message = "Updated Successfully";
          this.htmlText.header = 'Edit Distributors Record';
          this.htmlText.nav = 'Edit Distributors';
          this.htmlText.buttonText = 'Update';
          this.params_id = this.activeRoute.snapshot.params._id;
        } else {
          this.generateAddEditForm('add');
        }
      }

      _createClass(AddEditDistributorsComponent, [{
        key: "generateAddEditForm",
        value: function generateAddEditForm() {
          var _this69 = this;

          var flag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
          var validateRule = {
            id: ['', []],
            distributorname: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(50)]],
            contactperson: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(50)]],
            email: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].email, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(100)]],
            phone: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(7), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(16)]],
            address: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(200)]],
            zip: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(4), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(18)]],
            city: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
            state: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
            user_type: ['distributors', []],
            status: ['', []],
            password: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(16), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(6)]],
            confirmpassword: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]]
          };
          var passwordRule = {
            validators: this.matchpassword('password', 'confirmpassword')
          };

          switch (flag) {
            case 'edit':
              delete validateRule.password;
              delete validateRule.confirmpassword;
              this.DistributorsManagementAddEditForm = this.fb.group(validateRule);
              this.activeRoute.data.forEach(function (data) {
                var distributorsDetails = data.distributorsData.res;
                setTimeout(function () {
                  _this69.getCity(distributorsDetails[0].state);
                }, 1000);

                _this69.DistributorsManagementAddEditForm.controls['id'].patchValue(distributorsDetails[0]._id);

                _this69.DistributorsManagementAddEditForm.controls['distributorname'].patchValue(distributorsDetails[0].distributorname);

                _this69.DistributorsManagementAddEditForm.controls['contactperson'].patchValue(distributorsDetails[0].contactperson);

                _this69.DistributorsManagementAddEditForm.controls['email'].patchValue(distributorsDetails[0].email);

                _this69.DistributorsManagementAddEditForm.controls['phone'].patchValue(distributorsDetails[0].phone);

                _this69.DistributorsManagementAddEditForm.controls['address'].patchValue(distributorsDetails[0].address);

                _this69.DistributorsManagementAddEditForm.controls['zip'].patchValue(distributorsDetails[0].zip);

                _this69.DistributorsManagementAddEditForm.controls['city'].patchValue(distributorsDetails[0].city);

                _this69.DistributorsManagementAddEditForm.controls['state'].patchValue(distributorsDetails[0].state);

                _this69.DistributorsManagementAddEditForm.controls['status'].patchValue(distributorsDetails[0].status);
              });
              break;

            case 'add':
              delete validateRule.id;
              this.DistributorsManagementAddEditForm = this.fb.group(validateRule);
              break;
          }
        }
      }, {
        key: "ngOnInit",
        value: function ngOnInit() {}
      }, {
        key: "matchpassword",
        value: function matchpassword(passwordkye, confirmpasswordkye) {
          return function (group) {
            var passwordInput = group.controls[passwordkye],
                confirmpasswordInput = group.controls[confirmpasswordkye];

            if (passwordInput.value !== confirmpasswordInput.value) {
              return confirmpasswordInput.setErrors({
                notEquivalent: true
              });
            } else {
              return confirmpasswordInput.setErrors(null);
            }
          };
        }
        /**for validation purpose**/

      }, {
        key: "inputUntouch",
        value: function inputUntouch(form, val) {
          form.controls[val].markAsUntouched();
        }
        /**for validation purpose**/

        /**for getting all states & cities function start here**/

      }, {
        key: "allStateCityData",
        value: function allStateCityData() {
          var _this70 = this;

          this.httpService.getSiteSettingData("./assets/data-set/state.json").subscribe(function (response) {
            _this70.htmlText.states = response; // this.getResolveData();
          });
          this.httpService.getSiteSettingData("./assets/data-set/city.json").subscribe(function (response) {
            _this70.htmlText.allCities = response;
          });
        }
        /**for getting all states & cities  function end here**/

      }, {
        key: "getCity",
        value: function getCity(event) {
          var val = event;
          this.htmlText.cities = this.htmlText.allCities[val];
        }
      }, {
        key: "getCityByName",
        value: function getCityByName(stateName) {
          this.htmlText.cities = this.htmlText.allCities[stateName];
        }
      }, {
        key: "DistributorsManagementAddEditFormSubmit",
        value: function DistributorsManagementAddEditFormSubmit() {
          var _this71 = this;

          for (var x in this.DistributorsManagementAddEditForm.controls) {
            this.DistributorsManagementAddEditForm.controls[x].markAsTouched();
          }

          if (this.DistributorsManagementAddEditForm.valid) {
            delete this.DistributorsManagementAddEditForm.value.confirmpassword;

            if (this.DistributorsManagementAddEditForm.value.status) {
              this.DistributorsManagementAddEditForm.value.status = parseInt("1");
            } else {
              this.DistributorsManagementAddEditForm.value.status = parseInt("0");
            }

            var data = {
              "source": "data_pece",
              "data": this.DistributorsManagementAddEditForm.value,
              "token": this.htmlText.userData.jwtToken,
              "domainurl": _environments_environment__WEBPACK_IMPORTED_MODULE_9__["environment"].siteBaseUrl + 'reset-password'
            };

            if (this.htmlText.userData.user_details.user_type == 'diagnostic_admin') {
              data.data["diagnostic_admin_id"] = this.htmlText.userData.user_details._id;
              data["sourceobj"] = ["diagnostic_admin_id"];
            }

            if (this.htmlText.userData.user_details.user_type == 'doctor') {
              data.data["doctor_id"] = this.htmlText.userData.user_details._id;
              data["sourceobj"] = ["doctor_id"];
            }

            this.httpService.httpViaPost("addorupdatedata", data).subscribe(function (response) {
              if (response.status == "success") {
                _this71.snackBar.open(_this71.htmlText.message, 'Ok', {
                  duration: 2000
                });

                _this71.formDirective.resetForm();

                setTimeout(function () {
                  switch (_this71.htmlText.userData.user_details.user_type) {
                    case 'diagnostic_admin':
                      _this71.router.navigateByUrl("admin/distributors-management");

                      break;

                    case 'admin':
                      _this71.router.navigateByUrl("admin/distributors-management");

                      break;
                  }
                }, 1000);
              } else {
                _this71.snackBar.open(response.msg, '', {
                  duration: 2000
                });
              }
            });
          }
        }
      }]);

      return AddEditDistributorsComponent;
    }();

    AddEditDistributorsComponent.ctorParameters = function () {
      return [{
        type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__["HttpServiceService"]
      }, {
        type: _angular_common__WEBPACK_IMPORTED_MODULE_5__["DatePipe"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_6__["CookieService"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatSnackBar"]
      }, {
        type: _class_common_common_function__WEBPACK_IMPORTED_MODULE_8__["CommonFunction"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatDialog"]
      }];
    };

    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroupDirective"], {
      "static": false
    })], AddEditDistributorsComponent.prototype, "formDirective", void 0);
    AddEditDistributorsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-add-edit-distributors',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./add-edit-distributors.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/manage-distributors/add-edit-distributors/add-edit-distributors.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./add-edit-distributors.component.css */
      "./src/app/components/admin/manage-distributors/add-edit-distributors/add-edit-distributors.component.css"))["default"]]
    })], AddEditDistributorsComponent);
    /***/
  },

  /***/
  "./src/app/components/admin/manage-distributors/listing-distributors/listing-distributors.component.css":
  /*!**************************************************************************************************************!*\
    !*** ./src/app/components/admin/manage-distributors/listing-distributors/listing-distributors.component.css ***!
    \**************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminManageDistributorsListingDistributorsListingDistributorsComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW4vbWFuYWdlLWRpc3RyaWJ1dG9ycy9saXN0aW5nLWRpc3RyaWJ1dG9ycy9saXN0aW5nLWRpc3RyaWJ1dG9ycy5jb21wb25lbnQuY3NzIn0= */";
    /***/
  },

  /***/
  "./src/app/components/admin/manage-distributors/listing-distributors/listing-distributors.component.ts":
  /*!*************************************************************************************************************!*\
    !*** ./src/app/components/admin/manage-distributors/listing-distributors/listing-distributors.component.ts ***!
    \*************************************************************************************************************/

  /*! exports provided: ListingDistributorsComponent */

  /***/
  function srcAppComponentsAdminManageDistributorsListingDistributorsListingDistributorsComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ListingDistributorsComponent", function () {
      return ListingDistributorsComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_common_http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/common/http */
    "./node_modules/@angular/common/fesm2015/http.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _class_common_common_function__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../../../../class/common/common-function */
    "./src/app/class/common/common-function.ts");
    /* harmony import */


    var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/material/dialog */
    "./node_modules/@angular/material/esm2015/dialog.js");
    /* harmony import */


    var _common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../../../common/dialog-box/dialog-box.component */
    "./src/app/components/common/dialog-box/dialog-box.component.ts");

    var ListingDistributorsComponent = /*#__PURE__*/function () {
      function ListingDistributorsComponent(cookie, http, httpService, activatedRoute, commonFunction, dialog, router) {
        _classCallCheck(this, ListingDistributorsComponent);

        this.cookie = cookie;
        this.http = http;
        this.httpService = httpService;
        this.activatedRoute = activatedRoute;
        this.commonFunction = commonFunction;
        this.dialog = dialog;
        this.router = router;
        this.allUserData = [];
        this.techData_count = 0;
        this.allUserData_skip = ["_id", "address", "zip", "city", "state", "user_type", "password", "created_at", "id", "updated_at", "diagnostic_admin_id", "name_search"];
        this.editUrl = "admin/distributors-management/edit";
        this.allUserData_modify_header = {
          "distributorname": "Distributor Name",
          "contactperson": "Contact Person",
          "email": "Email",
          "status": "Status",
          "phone": "Phone Number"
        };
        this.previewModal_detail_skip = ["_id", "user_type", "password", "created_at", "id", "updated_at", "diagnostic_admin_id"];
        this.UpdateEndpoint = "addorupdatedata";
        this.deleteEndpoint = "deletesingledata";
        this.tableName = "data_pece";
        this.status = [{
          val: 1,
          'name': 'Active'
        }, {
          val: 0,
          'name': 'Inactive'
        }];
        this.SearchingEndpoint = "datalist";
        this.SearchingSourceName = "data_tech_list";
        this.datacollection = 'getdistributorslistdata';
        this.sortdata = {
          "type": 'desc',
          "field": 'distributorname',
          "options": ['distributorname']
        };
        this.limitcond = {
          "limit": 10,
          "skip": 0,
          "pagecount": 1
        };
        this.libdata = {
          basecondition: "",
          updateendpoint: 'statusupdate',
          // tableheaders: ['firstname', 'lastname', 'email', 'phone', 'practice_name', 'npi', 'status', 'created_date',], //not required
          custombuttons: [{
            label: "Log Me",
            type: 'listner',
            id: 'i1'
          }]
        };
        this.search_settings = {
          selectsearch: [{
            label: 'Search By Status',
            field: 'status',
            values: this.status
          }],
          textsearch: [{
            label: "Search By Distributor Name",
            field: 'distributorname_search'
          }, {
            label: "Search By E-Mail",
            field: 'email'
          }, {
            label: "Search By Contact Person",
            field: 'contactperson_search'
          }]
        };
        this.TechDashboardAllData = [];
        /* Set Meta Data */

        this.commonFunction.setTitleMetaTags();
        this.user_cookie = cookie.get('jwtToken');
        this.userData = JSON.parse(this.cookie.get('user_details'));

        if (this.userData.user_type == 'diagnostic_admin') {
          this.editUrl = 'diagnostic-admin/tech-management/edit';
        }

        if (this.userData.user_type == 'doctor') {
          this.editUrl = 'doctor/distributors-management/edit';
        }

        this.apiUrl = httpService.baseUrl;
      }

      _createClass(ListingDistributorsComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this72 = this;

          this.datasource = '';
          var endpoint = 'getdistributorslistdata';
          var endpointc = 'getdistributorslistdata-count';
          var data = {
            "condition": {
              "limit": 10,
              "skip": 0
            },
            sort: {
              "type": 'desc',
              "field": 'distributorname'
            }
          };
          this.httpService.httpViaPost(endpointc, data).subscribe(function (res) {
            // console.log('in constructor');
            // console.log(result);
            _this72.techData_count = res.count; //console.warn('blogData c',res);
          }, function (error) {
            console.log('Oooops!');
          });
          this.httpService.httpViaPost(endpoint, data).subscribe(function (res) {
            _this72.TechDashboardAllData = res.results.res;
          }, function (error) {
            console.log('Oooops!');
          });
        }
      }, {
        key: "listenLiblistingChange",
        value: function listenLiblistingChange() {
          var _this73 = this;

          var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;

          if (data != null) {
            switch (data.custombuttonclick.btninfo.label) {
              case "Log Me":
                var modalData1 = {
                  panelClass: 'bulkupload-dialog',
                  data: {
                    header: "Alert",
                    message: "Do you want to login as Distributor : " + data.custombuttonclick.data.distributorname + "?",
                    button1: {
                      text: "Yes"
                    },
                    button2: {
                      text: "No"
                    }
                  }
                };
                var dialogRef1 = this.dialog.open(_common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_8__["DialogBoxComponent"], modalData1);
                dialogRef1.afterClosed().subscribe(function (result) {
                  switch (result) {
                    case "Yes":
                      // Delete Cookie
                      _this73.cookie["delete"]('user_details');

                      _this73.cookie["delete"]('main_user');

                      _this73.cookie["delete"]('jwtToken');

                      _this73.cookie.deleteAll('/');

                      setTimeout(function () {
                        // Reset again Cookie
                        _this73.cookie.set('jwtToken', _this73.user_cookie);

                        _this73.cookie.set('user_details', JSON.stringify(data.custombuttonclick.data));

                        _this73.cookie.set('main_user', JSON.stringify(_this73.userData)); // Redirect to page


                        _this73.router.navigateByUrl("distributors/dashboard");
                      }, 500);
                      break;

                    case "No":
                      dialogRef1.close();
                      break;
                  }
                });
                break;
            }
          }
        }
      }]);

      return ListingDistributorsComponent;
    }();

    ListingDistributorsComponent.ctorParameters = function () {
      return [{
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__["HttpServiceService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"]
      }, {
        type: _class_common_common_function__WEBPACK_IMPORTED_MODULE_6__["CommonFunction"]
      }, {
        type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_7__["MatDialog"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"]
      }];
    };

    ListingDistributorsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-listing-distributors',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./listing-distributors.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/manage-distributors/listing-distributors/listing-distributors.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./listing-distributors.component.css */
      "./src/app/components/admin/manage-distributors/listing-distributors/listing-distributors.component.css"))["default"]]
    })], ListingDistributorsComponent);
    /***/
  },

  /***/
  "./src/app/components/admin/manage-doctorgroup/add-edit-doctorgroup/add-edit-doctorgroup.component.css":
  /*!*************************************************************************************************************!*\
    !*** ./src/app/components/admin/manage-doctorgroup/add-edit-doctorgroup/add-edit-doctorgroup.component.css ***!
    \*************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminManageDoctorgroupAddEditDoctorgroupAddEditDoctorgroupComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW4vbWFuYWdlLWRvY3Rvcmdyb3VwL2FkZC1lZGl0LWRvY3Rvcmdyb3VwL2FkZC1lZGl0LWRvY3Rvcmdyb3VwLmNvbXBvbmVudC5jc3MifQ== */";
    /***/
  },

  /***/
  "./src/app/components/admin/manage-doctorgroup/add-edit-doctorgroup/add-edit-doctorgroup.component.ts":
  /*!************************************************************************************************************!*\
    !*** ./src/app/components/admin/manage-doctorgroup/add-edit-doctorgroup/add-edit-doctorgroup.component.ts ***!
    \************************************************************************************************************/

  /*! exports provided: AddEditDoctorgroupComponent */

  /***/
  function srcAppComponentsAdminManageDoctorgroupAddEditDoctorgroupAddEditDoctorgroupComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AddEditDoctorgroupComponent", function () {
      return AddEditDoctorgroupComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/material/dialog */
    "./node_modules/@angular/material/esm2015/dialog.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../../../../../environments/environment */
    "./src/environments/environment.ts");

    var AddEditDoctorgroupComponent = /*#__PURE__*/function () {
      function AddEditDoctorgroupComponent(formBuilder, http, cookieService, dialog, router, acivatedRoute, snackBar) {
        _classCallCheck(this, AddEditDoctorgroupComponent);

        this.formBuilder = formBuilder;
        this.http = http;
        this.cookieService = cookieService;
        this.dialog = dialog;
        this.router = router;
        this.acivatedRoute = acivatedRoute;
        this.snackBar = snackBar;
        this.htmlText = {
          userData: "",
          header: 'Add New Doctor Group',
          nav: 'Add Doctor Group',
          buttonText: 'Save',
          message: "Submitted Successfully",
          doctorOfficeData: [],
          techData: [],
          billerData: [],
          states: "",
          allCities: "",
          cities: "",
          taxonomies: ""
        };
        this.htmlText.userData = this.cookieService.getAll();
        this.htmlText.userData.user_details = JSON.parse(this.htmlText.userData.user_details);
        this.allStateCityData();

        if (this.acivatedRoute.snapshot.params._id) {
          this.generateAddEditForm('edit'); // this.getAllData();

          this.htmlText.message = "";
          this.htmlText.header = 'Edit Doctor Group Record';
          this.htmlText.nav = 'Edit Group Doctor';
          this.htmlText.buttonText = 'Update';
          this.params_id = this.acivatedRoute.snapshot.params._id;
        } else {
          this.generateAddEditForm('add');
        }
      }

      _createClass(AddEditDoctorgroupComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }, {
        key: "generateAddEditForm",
        value: function generateAddEditForm() {
          var _this74 = this;

          var flag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
          var validateRule = {
            id: ['', []],
            groupname: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(50)]],
            contactperson: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(50)]],
            email: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].email, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(100)]],
            phone: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(7), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(16)]],
            address: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(200)]],
            zip: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(4), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(18)]],
            city: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
            state: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
            user_type: ['doctor_group', []],
            status: ['', []],
            password: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(16), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(6)]],
            confirmpassword: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]]
          };
          var passwordRule = {
            validators: this.matchpassword('password', 'confirmpassword')
          }; // diagnostic_admin

          if (this.htmlText.userData.user_details.user_type == 'diagnostic_admin') {
            validateRule["tech_id"] = ['', []];
          }

          switch (flag) {
            case 'edit':
              delete validateRule.password;
              delete validateRule.confirmpassword;
              this.doctorgroupManagementAddEditForm = this.formBuilder.group(validateRule);
              this.acivatedRoute.data.forEach(function (data) {
                setTimeout(function () {
                  _this74.getCity(doctorgrouoDetails[0].state);
                }, 1000);
                var doctorgrouoDetails = data.data.res;

                _this74.doctorgroupManagementAddEditForm.controls['id'].patchValue(doctorgrouoDetails[0]._id);

                _this74.doctorgroupManagementAddEditForm.controls['groupname'].patchValue(doctorgrouoDetails[0].groupname);

                _this74.doctorgroupManagementAddEditForm.controls['email'].patchValue(doctorgrouoDetails[0].email);

                _this74.doctorgroupManagementAddEditForm.controls['phone'].patchValue(doctorgrouoDetails[0].phone);

                _this74.doctorgroupManagementAddEditForm.controls['address'].patchValue(doctorgrouoDetails[0].address);

                _this74.doctorgroupManagementAddEditForm.controls['zip'].patchValue(doctorgrouoDetails[0].zip);

                _this74.doctorgroupManagementAddEditForm.controls['city'].patchValue(doctorgrouoDetails[0].city);

                _this74.doctorgroupManagementAddEditForm.controls['state'].patchValue(doctorgrouoDetails[0].state); // diagnostic_admin


                if (_this74.htmlText.userData.user_details.user_type == 'diagnostic_admin') {
                  _this74.doctorgroupManagementAddEditForm.controls['tech_id'].patchValue(doctorgrouoDetails[0].tech_id);
                } //this.doctorgroupManagementAddEditForm.controls['biller_id'].patchValue(doctorgrouoDetails[0].biller_details);
                //this.doctorgroupManagementAddEditForm.controls['doctors_office_id'].patchValue(doctorgrouoDetails[0].doctors_office_details);


                _this74.doctorgroupManagementAddEditForm.controls['status'].patchValue(doctorgrouoDetails[0].status);
              });
              break;

            case 'add':
              delete validateRule.id;
              this.doctorgroupManagementAddEditForm = this.formBuilder.group(validateRule, passwordRule);
              break;
          }
        }
      }, {
        key: "matchpassword",
        value: function matchpassword(passwordkye, confirmpasswordkye) {
          return function (group) {
            var passwordInput = group.controls[passwordkye],
                confirmpasswordInput = group.controls[confirmpasswordkye];

            if (passwordInput.value !== confirmpasswordInput.value) {
              return confirmpasswordInput.setErrors({
                notEquivalent: true
              });
            } else {
              return confirmpasswordInput.setErrors(null);
            }
          };
        }
        /**for validation purpose**/

      }, {
        key: "inputUntouch",
        value: function inputUntouch(form, val) {
          form.controls[val].markAsUntouched();
        }
        /**for getting all states & cities function start here**/

      }, {
        key: "allStateCityData",
        value: function allStateCityData() {
          var _this75 = this;

          this.http.getSiteSettingData("./assets/data-set/state.json").subscribe(function (response) {
            _this75.htmlText.states = response;
          });
          this.http.getSiteSettingData("./assets/data-set/city.json").subscribe(function (response) {
            _this75.htmlText.allCities = response;
          });
        }
        /**for getting all states & cities  function end here**/

      }, {
        key: "getCity",
        value: function getCity(event) {
          var val = event;
          this.htmlText.cities = this.htmlText.allCities[val];
        }
      }, {
        key: "getCityByName",
        value: function getCityByName(stateName) {
          this.htmlText.cities = this.htmlText.allCities[stateName];
        }
      }, {
        key: "doctorgroupManagementAddEditFormSubmit",
        value: function doctorgroupManagementAddEditFormSubmit() {
          var _this76 = this;

          for (var x in this.doctorgroupManagementAddEditForm.controls) {
            this.doctorgroupManagementAddEditForm.controls[x].markAsTouched();
          }
          /* stop here if form is invalid */


          if (this.doctorgroupManagementAddEditForm.valid) {
            delete this.doctorgroupManagementAddEditForm.value.confirmpassword;

            if (this.doctorgroupManagementAddEditForm.value.status) {
              this.doctorgroupManagementAddEditForm.value.status = parseInt("1");
            } else {
              this.doctorgroupManagementAddEditForm.value.status = parseInt("0");
              ;
            }
            /* start process to submited data */


            var postData = {
              "source": "data_pece",
              "data": this.doctorgroupManagementAddEditForm.value,
              "domainurl": _environments_environment__WEBPACK_IMPORTED_MODULE_8__["environment"].siteBaseUrl + 'reset-password',
              //"sourceobjArray": ["tech_id", "biller_id"],
              "token": this.cookieService.get('jwtToken')
            };

            if (this.htmlText.userData.user_details.user_type == 'diagnostic_admin') {
              postData.data["diagnostic_admin_id"] = this.htmlText.userData.user_details._id;
              postData["sourceobj"] = ["diagnostic_admin_id"];
              postData["sourceobjArray"] = ["tech_id"];
            }

            this.http.httpViaPost('addorupdatedata', postData).subscribe(function (response) {
              if (response.status == "success") {
                _this76.snackBar.open(_this76.htmlText.message, 'Ok', {
                  duration: 2000
                });

                setTimeout(function () {
                  switch (_this76.htmlText.userData.user_details.user_type) {
                    case 'diagnostic_admin':
                      _this76.router.navigateByUrl("admin/doctor-management/group");

                      break;

                    case 'admin':
                      _this76.router.navigateByUrl("admin/doctor-management/group");

                      break;
                  }
                }, 1000);
              } else {
                _this76.snackBar.open(response.msg, '', {
                  duration: 2000
                });
              }
            }, function (error) {
              alert("Some error occurred. Please try again.");
            });
          }
        }
      }]);

      return AddEditDoctorgroupComponent;
    }();

    AddEditDoctorgroupComponent.ctorParameters = function () {
      return [{
        type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__["HttpServiceService"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_4__["CookieService"]
      }, {
        type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__["MatDialog"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_6__["Router"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_6__["ActivatedRoute"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatSnackBar"]
      }];
    };

    AddEditDoctorgroupComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-add-edit-doctorgroup',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./add-edit-doctorgroup.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/manage-doctorgroup/add-edit-doctorgroup/add-edit-doctorgroup.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./add-edit-doctorgroup.component.css */
      "./src/app/components/admin/manage-doctorgroup/add-edit-doctorgroup/add-edit-doctorgroup.component.css"))["default"]]
    })], AddEditDoctorgroupComponent);
    /***/
  },

  /***/
  "./src/app/components/admin/manage-doctorgroup/listing-doctorgroup/listing-doctorgroup.component.css":
  /*!***********************************************************************************************************!*\
    !*** ./src/app/components/admin/manage-doctorgroup/listing-doctorgroup/listing-doctorgroup.component.css ***!
    \***********************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminManageDoctorgroupListingDoctorgroupListingDoctorgroupComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW4vbWFuYWdlLWRvY3Rvcmdyb3VwL2xpc3RpbmctZG9jdG9yZ3JvdXAvbGlzdGluZy1kb2N0b3Jncm91cC5jb21wb25lbnQuY3NzIn0= */";
    /***/
  },

  /***/
  "./src/app/components/admin/manage-doctorgroup/listing-doctorgroup/listing-doctorgroup.component.ts":
  /*!**********************************************************************************************************!*\
    !*** ./src/app/components/admin/manage-doctorgroup/listing-doctorgroup/listing-doctorgroup.component.ts ***!
    \**********************************************************************************************************/

  /*! exports provided: ListingDoctorgroupComponent */

  /***/
  function srcAppComponentsAdminManageDoctorgroupListingDoctorgroupListingDoctorgroupComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ListingDoctorgroupComponent", function () {
      return ListingDoctorgroupComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/material/dialog */
    "./node_modules/@angular/material/esm2015/dialog.js");
    /* harmony import */


    var _common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../../../common/dialog-box/dialog-box.component */
    "./src/app/components/common/dialog-box/dialog-box.component.ts");

    var ListingDoctorgroupComponent = /*#__PURE__*/function () {
      // ====================================================================
      function ListingDoctorgroupComponent(http, cookieService, router, activatedRoute, dialog) {
        _classCallCheck(this, ListingDoctorgroupComponent);

        this.http = http;
        this.cookieService = cookieService;
        this.router = router;
        this.activatedRoute = activatedRoute;
        this.dialog = dialog;
        this.docData_count = 0;
        this.docData = [];
        this.docData_skip = ["_id", "fax", "address", "zip", "city", "state", "user_type", "tech_id", "biller_id", "doctors_office_id", "diagnostic_admin_id", "taxo_list", "password", "created_at", "id", "name_search", "updated_at", "doctor_signature", "groupname_search"];
        this.docData_modify_header = {
          groupname: "Group Name",
          email: "Email",
          phone: "Phone Number",
          address: "Address",
          status: "Status"
        };
        this.previewModal_skip = ["_id", "user_type", "tech_id", "biller_id", "doctors_office_id", "taxo_list", "password", "created_at", "id", "name_search", "groupname_search", "updated_at"];
        this.tableName = 'users';
        this.UpdateEndpoint = "addorupdatedata";
        this.deleteEndpoint = "deletesingledata";
        this.searchingEndpoint = "datalist";
        this.searchSourceName = "data_doctor_list";
        this.editUrl = 'admin/doctor-management/group/edit';
        this.datacollection = 'getdoctorgrouplistdata';
        this.sortdata = {
          "type": 'desc',
          "field": 'groupname',
          "options": ['groupname']
        };
        this.limitcond = {
          "limit": 10,
          "skip": 0,
          "pagecount": 1
        };
        this.libdata = {
          basecondition: "",
          updateendpoint: 'statusupdate',
          // tableheaders: ['firstname', 'lastname', 'email', 'phone', 'practice_name', 'npi', 'status', 'created_date',], //not required
          custombuttons: [{
            label: "Log Me",
            type: 'listner',
            id: 'i1'
          }]
        };
        this.status = [{
          val: 1,
          'name': 'Active'
        }, {
          val: 0,
          'name': 'Inactive'
        }];
        this.search_settings = {
          selectsearch: [{
            label: 'Search By Status',
            field: 'status',
            values: this.status
          }],
          textsearch: [{
            label: "Search By Group Name",
            field: 'groupname_search'
          }, // {label:"Search by Taxonomy",field:'taxo_list'},
          {
            label: "Search By E-Mail",
            field: 'email'
          }]
        };
        this.user_cookie = cookieService.get('jwtToken');
        this.userData = JSON.parse(this.cookieService.get('user_details'));

        if (this.userData.user_type == 'diagnostic_admin') {
          this.editUrl = 'diagnostic-admin/doctor-management/edit';
        }

        this.apiUrl = http.baseUrl;
      }

      _createClass(ListingDoctorgroupComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this77 = this;

          this.datasource = '';
          var endpoint = 'getdoctorgrouplistdata';
          var endpointc = 'getdoctorgrouplistdata-count';
          var data = {
            "condition": {
              "limit": 10,
              "skip": 0
            },
            sort: {
              "type": 'desc',
              "field": 'groupname'
            }
          };
          this.http.httpViaPost(endpointc, data).subscribe(function (res) {
            // console.log('in constructor');
            // console.log(result);
            _this77.docData_count = res.count; //console.warn('blogData c',res);
          }, function (error) {
            console.log('Oooops!');
          });
          this.http.httpViaPost(endpoint, data).subscribe(function (res) {
            _this77.docData = res.results.res;
          }, function (error) {
            console.log('Oooops!');
          });
        }
      }, {
        key: "listenLiblistingChange",
        value: function listenLiblistingChange() {
          var _this78 = this;

          var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;

          if (data != null) {
            switch (data.custombuttonclick.btninfo.label) {
              case "Log Me":
                var modalData1 = {
                  panelClass: 'bulkupload-dialog',
                  data: {
                    header: "Alert",
                    message: "Do you want to login as Doctor Group Admin : " + data.custombuttonclick.data.groupname + "?",
                    button1: {
                      text: "Yes"
                    },
                    button2: {
                      text: "No"
                    }
                  }
                };
                var dialogRef1 = this.dialog.open(_common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_6__["DialogBoxComponent"], modalData1);
                dialogRef1.afterClosed().subscribe(function (result) {
                  switch (result) {
                    case "Yes":
                      // Delete Cookie
                      _this78.cookieService["delete"]('user_details');

                      _this78.cookieService["delete"]('main_user');

                      _this78.cookieService["delete"]('jwtToken');

                      _this78.cookieService.deleteAll('/');

                      setTimeout(function () {
                        // Reset again Cookie
                        _this78.cookieService.set('jwtToken', _this78.user_cookie);

                        _this78.cookieService.set('user_details', JSON.stringify(data.custombuttonclick.data));

                        _this78.cookieService.set('main_user', JSON.stringify(_this78.userData)); // Redirect to page


                        _this78.router.navigateByUrl("doctor-group/dashboard");
                      }, 500);
                      break;

                    case "No":
                      dialogRef1.close();
                      break;
                  }
                });
                break;
            }
          }
        }
      }]);

      return ListingDoctorgroupComponent;
    }();

    ListingDoctorgroupComponent.ctorParameters = function () {
      return [{
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_2__["HttpServiceService"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__["CookieService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"]
      }, {
        type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__["MatDialog"]
      }];
    };

    ListingDoctorgroupComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-listing-doctorgroup',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./listing-doctorgroup.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/manage-doctorgroup/listing-doctorgroup/listing-doctorgroup.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./listing-doctorgroup.component.css */
      "./src/app/components/admin/manage-doctorgroup/listing-doctorgroup/listing-doctorgroup.component.css"))["default"]]
    })], ListingDoctorgroupComponent);
    /***/
  },

  /***/
  "./src/app/components/admin/manage-insurance/add-edit-insurance/add-edit-insurance.component.css":
  /*!*******************************************************************************************************!*\
    !*** ./src/app/components/admin/manage-insurance/add-edit-insurance/add-edit-insurance.component.css ***!
    \*******************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminManageInsuranceAddEditInsuranceAddEditInsuranceComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW4vbWFuYWdlLWluc3VyYW5jZS9hZGQtZWRpdC1pbnN1cmFuY2UvYWRkLWVkaXQtaW5zdXJhbmNlLmNvbXBvbmVudC5jc3MifQ== */";
    /***/
  },

  /***/
  "./src/app/components/admin/manage-insurance/add-edit-insurance/add-edit-insurance.component.ts":
  /*!******************************************************************************************************!*\
    !*** ./src/app/components/admin/manage-insurance/add-edit-insurance/add-edit-insurance.component.ts ***!
    \******************************************************************************************************/

  /*! exports provided: AddEditInsuranceComponent */

  /***/
  function srcAppComponentsAdminManageInsuranceAddEditInsuranceAddEditInsuranceComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AddEditInsuranceComponent", function () {
      return AddEditInsuranceComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var _class_common_common_function__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../../../../class/common/common-function */
    "./src/app/class/common/common-function.ts");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ../../../../../environments/environment */
    "./src/environments/environment.ts");

    var AddEditInsuranceComponent = /*#__PURE__*/function () {
      function AddEditInsuranceComponent(fb, activeRoute, router, httpService, datePipe, cookie, snackBar, commonFunction, dialog) {
        _classCallCheck(this, AddEditInsuranceComponent);

        this.fb = fb;
        this.activeRoute = activeRoute;
        this.router = router;
        this.httpService = httpService;
        this.datePipe = datePipe;
        this.cookie = cookie;
        this.snackBar = snackBar;
        this.commonFunction = commonFunction;
        this.dialog = dialog;
        this.htmlText = {
          userData: "",
          header: 'Add New Insurance',
          nav: 'Add Insurance',
          buttonText: 'Save',
          message: "Submitted Successfully"
        };
        this.htmlText.userData = cookie.getAll();
        this.htmlText.userData.user_details = JSON.parse(this.htmlText.userData.user_details);

        if (this.activeRoute.snapshot.params._id) {
          this.generateAddEditForm('edit');
          this.htmlText.message = "Updated Successfully";
          this.htmlText.header = 'Edit Insurance Record';
          this.htmlText.nav = 'Edit Insurance';
          this.htmlText.buttonText = 'Update';
          this.params_id = this.activeRoute.snapshot.params._id;
        } else {
          this.generateAddEditForm('add');
        }
      }

      _createClass(AddEditInsuranceComponent, [{
        key: "generateAddEditForm",
        value: function generateAddEditForm() {
          var _this79 = this;

          var flag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
          var validateRule = {
            id: ['', []],
            insurancename: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(50)]],
            description: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(5000)]],
            priority: ['', []],
            user_type: ['insurance', []],
            status: ['', []]
          };

          switch (flag) {
            case 'edit':
              this.InsuranceAddEditForm = this.fb.group(validateRule);
              this.activeRoute.data.forEach(function (data) {
                var insuranceDetails = data.insuranceData.res;

                _this79.InsuranceAddEditForm.controls['id'].patchValue(insuranceDetails[0]._id);

                _this79.InsuranceAddEditForm.controls['insurancename'].patchValue(insuranceDetails[0].insurancename);

                _this79.InsuranceAddEditForm.controls['description'].patchValue(insuranceDetails[0].description);

                _this79.InsuranceAddEditForm.controls['priority'].patchValue(insuranceDetails[0].priority);

                _this79.InsuranceAddEditForm.controls['status'].patchValue(insuranceDetails[0].status);
              });
              break;

            case 'add':
              delete validateRule.id;
              this.InsuranceAddEditForm = this.fb.group(validateRule);
              break;
          }
        }
      }, {
        key: "ngOnInit",
        value: function ngOnInit() {}
        /**for validation purpose**/

      }, {
        key: "inputUntouch",
        value: function inputUntouch(form, val) {
          form.controls[val].markAsUntouched();
        }
      }, {
        key: "InsuranceManagementAddFormFormSubmit",
        value: function InsuranceManagementAddFormFormSubmit() {
          var _this80 = this;

          for (var x in this.InsuranceAddEditForm.controls) {
            this.InsuranceAddEditForm.controls[x].markAsTouched();
          }

          if (this.InsuranceAddEditForm.valid) {
            delete this.InsuranceAddEditForm.value.confirmpassword;

            if (this.InsuranceAddEditForm.value.status) {
              this.InsuranceAddEditForm.value.status = parseInt("1");
            } else {
              this.InsuranceAddEditForm.value.status = parseInt("0");
            }

            var data = {
              "source": "data_pece",
              "data": this.InsuranceAddEditForm.value,
              "token": this.htmlText.userData.jwtToken,
              "domainurl": _environments_environment__WEBPACK_IMPORTED_MODULE_9__["environment"].siteBaseUrl + 'reset-password'
            };

            if (this.htmlText.userData.user_details.user_type == 'diagnostic_admin') {
              data.data["diagnostic_admin_id"] = this.htmlText.userData.user_details._id;
              data["sourceobj"] = ["diagnostic_admin_id"];
            }

            if (this.htmlText.userData.user_details.user_type == 'doctor') {
              data.data["doctor_id"] = this.htmlText.userData.user_details._id;
              data["sourceobj"] = ["doctor_id"];
            }

            this.httpService.httpViaPost("addorupdatedata", data).subscribe(function (response) {
              if (response.status == "success") {
                _this80.snackBar.open(_this80.htmlText.message, 'Ok', {
                  duration: 2000
                });

                _this80.formDirective.resetForm();

                setTimeout(function () {
                  switch (_this80.htmlText.userData.user_details.user_type) {
                    case 'diagnostic_admin':
                      _this80.router.navigateByUrl("admin/insurance-management");

                      break;

                    case 'admin':
                      _this80.router.navigateByUrl("admin/insurance-management");

                      break;
                  }
                }, 1000);
              } else {
                _this80.snackBar.open(response.msg, '', {
                  duration: 2000
                });
              }
            });
          }
        }
      }]);

      return AddEditInsuranceComponent;
    }();

    AddEditInsuranceComponent.ctorParameters = function () {
      return [{
        type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__["HttpServiceService"]
      }, {
        type: _angular_common__WEBPACK_IMPORTED_MODULE_5__["DatePipe"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_6__["CookieService"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatSnackBar"]
      }, {
        type: _class_common_common_function__WEBPACK_IMPORTED_MODULE_8__["CommonFunction"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatDialog"]
      }];
    };

    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroupDirective"], {
      "static": false
    })], AddEditInsuranceComponent.prototype, "formDirective", void 0);
    AddEditInsuranceComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-add-edit-insurance',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./add-edit-insurance.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/manage-insurance/add-edit-insurance/add-edit-insurance.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./add-edit-insurance.component.css */
      "./src/app/components/admin/manage-insurance/add-edit-insurance/add-edit-insurance.component.css"))["default"]]
    })], AddEditInsuranceComponent);
    /***/
  },

  /***/
  "./src/app/components/admin/manage-insurance/listing-insurance/listing-insurance.component.css":
  /*!*****************************************************************************************************!*\
    !*** ./src/app/components/admin/manage-insurance/listing-insurance/listing-insurance.component.css ***!
    \*****************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminManageInsuranceListingInsuranceListingInsuranceComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW4vbWFuYWdlLWluc3VyYW5jZS9saXN0aW5nLWluc3VyYW5jZS9saXN0aW5nLWluc3VyYW5jZS5jb21wb25lbnQuY3NzIn0= */";
    /***/
  },

  /***/
  "./src/app/components/admin/manage-insurance/listing-insurance/listing-insurance.component.ts":
  /*!****************************************************************************************************!*\
    !*** ./src/app/components/admin/manage-insurance/listing-insurance/listing-insurance.component.ts ***!
    \****************************************************************************************************/

  /*! exports provided: ListingInsuranceComponent */

  /***/
  function srcAppComponentsAdminManageInsuranceListingInsuranceListingInsuranceComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ListingInsuranceComponent", function () {
      return ListingInsuranceComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_common_http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/common/http */
    "./node_modules/@angular/common/fesm2015/http.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _class_common_common_function__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../../../../class/common/common-function */
    "./src/app/class/common/common-function.ts");

    var ListingInsuranceComponent = /*#__PURE__*/function () {
      function ListingInsuranceComponent(cookie, http, httpService, activatedRoute, commonFunction) {
        _classCallCheck(this, ListingInsuranceComponent);

        this.cookie = cookie;
        this.http = http;
        this.httpService = httpService;
        this.activatedRoute = activatedRoute;
        this.commonFunction = commonFunction;
        this.allUserData = [];
        this.insuranceData_count = 0;
        this.allUserData_skip = ["_id", "address", "zip", "city", "state", "user_type", "password", "created_at", "id", "updated_at", "diagnostic_admin_id", "name_search"];
        this.editUrl = "admin/insurance-management/edit";
        this.allUserData_modify_header = {
          "insurancetype": "Insurance Name",
          "description": "Description",
          "priority": "Priority",
          "status": "Status"
        };
        this.previewModal_detail_skip = ["_id", "user_type", "password", "created_at", "id", "updated_at", "diagnostic_admin_id"];
        this.UpdateEndpoint = "addorupdatedata";
        this.deleteEndpoint = "deletesingledata";
        this.tableName = "data_pece";
        this.status = [{
          val: 1,
          'name': 'Active'
        }, {
          val: 0,
          'name': 'Inactive'
        }];
        this.SearchingEndpoint = "datalist";
        this.SearchingSourceName = "data_tech_list";
        this.datacollection = 'getinsurancelistdata';
        this.sortdata = {
          "type": 'desc',
          "field": 'insurancename',
          "options": ['insurancename']
        };
        this.limitcond = {
          "limit": 10,
          "skip": 0,
          "pagecount": 1
        };
        this.search_settings = {
          selectsearch: [{
            label: 'Search By Status',
            field: 'status',
            values: this.status
          }],
          textsearch: [{
            label: "Search By insuranceName",
            field: 'name_search'
          }]
        };
        this.InsuranceAllData = [];
        /* Set Meta Data */

        this.commonFunction.setTitleMetaTags();
        this.user_cookie = cookie.get('jwtToken');
        this.userData = JSON.parse(this.cookie.get('user_details'));

        if (this.userData.user_type == 'diagnostic_admin') {
          this.editUrl = 'diagnostic-admin/tech-management/edit';
        }

        if (this.userData.user_type == 'doctor') {
          this.editUrl = 'doctor/tech-management/edit';
        }

        this.apiUrl = httpService.baseUrl;
      }

      _createClass(ListingInsuranceComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this81 = this;

          this.datasource = '';
          var endpoint = 'getinsurancelistdata';
          var endpointc = 'getinsurancelistdata-count';
          var data = {
            "condition": {
              "limit": 10,
              "skip": 0
            },
            sort: {
              "type": 'desc',
              "field": 'insurancename'
            }
          };
          this.httpService.httpViaPost(endpointc, data).subscribe(function (res) {
            // console.log('in constructor');
            // console.log(result);
            _this81.insuranceData_count = res.count; //console.warn('blogData c',res);
          }, function (error) {
            console.log('Oooops!');
          });
          this.httpService.httpViaPost(endpoint, data).subscribe(function (res) {
            _this81.InsuranceAllData = res.results.res;
          }, function (error) {
            console.log('Oooops!');
          });
        }
      }]);

      return ListingInsuranceComponent;
    }();

    ListingInsuranceComponent.ctorParameters = function () {
      return [{
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__["HttpServiceService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"]
      }, {
        type: _class_common_common_function__WEBPACK_IMPORTED_MODULE_6__["CommonFunction"]
      }];
    };

    ListingInsuranceComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-listing-insurance',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./listing-insurance.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/manage-insurance/listing-insurance/listing-insurance.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./listing-insurance.component.css */
      "./src/app/components/admin/manage-insurance/listing-insurance/listing-insurance.component.css"))["default"]]
    })], ListingInsuranceComponent);
    /***/
  },

  /***/
  "./src/app/components/admin/manage-insurancetype/add-edit-insurancetype/add-edit-insurancetype.component.css":
  /*!*******************************************************************************************************************!*\
    !*** ./src/app/components/admin/manage-insurancetype/add-edit-insurancetype/add-edit-insurancetype.component.css ***!
    \*******************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminManageInsurancetypeAddEditInsurancetypeAddEditInsurancetypeComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW4vbWFuYWdlLWluc3VyYW5jZXR5cGUvYWRkLWVkaXQtaW5zdXJhbmNldHlwZS9hZGQtZWRpdC1pbnN1cmFuY2V0eXBlLmNvbXBvbmVudC5jc3MifQ== */";
    /***/
  },

  /***/
  "./src/app/components/admin/manage-insurancetype/add-edit-insurancetype/add-edit-insurancetype.component.ts":
  /*!******************************************************************************************************************!*\
    !*** ./src/app/components/admin/manage-insurancetype/add-edit-insurancetype/add-edit-insurancetype.component.ts ***!
    \******************************************************************************************************************/

  /*! exports provided: AddEditInsurancetypeComponent */

  /***/
  function srcAppComponentsAdminManageInsurancetypeAddEditInsurancetypeAddEditInsurancetypeComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AddEditInsurancetypeComponent", function () {
      return AddEditInsurancetypeComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../../../../../environments/environment */
    "./src/environments/environment.ts");

    var AddEditInsurancetypeComponent = /*#__PURE__*/function () {
      function AddEditInsurancetypeComponent(formBuilder, acivatedRoute, router, httpService, datePipe, cookieService, snackBar, dialog) {
        _classCallCheck(this, AddEditInsurancetypeComponent);

        this.formBuilder = formBuilder;
        this.acivatedRoute = acivatedRoute;
        this.router = router;
        this.httpService = httpService;
        this.datePipe = datePipe;
        this.cookieService = cookieService;
        this.snackBar = snackBar;
        this.dialog = dialog;
        this.htmlText = {
          userData: "",
          header: 'Add New Insurancetype Office',
          nav: 'Add Insurancetype Office',
          buttonText: 'Save',
          message: "Submitted Successfully",
          doctorOfficeData: "",
          insuranceData: ""
        };
        this.htmlText.userData = this.cookieService.getAll();
        this.htmlText.userData.user_details = JSON.parse(this.htmlText.userData.user_details);
        this.getAllinsuranceData();

        if (this.acivatedRoute.snapshot.params._id) {
          this.generateAddEditForm('edit');
          this.htmlText.message = "Updated Successfully";
          this.htmlText.header = 'Edit Insurancetype Record';
          this.htmlText.nav = 'Edit Insurancetype Office';
          this.htmlText.buttonText = 'Update';
          this.params_id = this.acivatedRoute.snapshot.params._id;
        } else {
          this.generateAddEditForm('add');
        }
      }

      _createClass(AddEditInsurancetypeComponent, [{
        key: "generateAddEditForm",
        value: function generateAddEditForm() {
          var _this82 = this;

          var flag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
          var validateRule = {
            id: ['', []],
            insurancetype_name: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(50)]],
            description: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(500)]],
            priority: ['', []],
            insurance_id: [null, [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
            user_type: ['insurance_type', []],
            status: ['', []]
          };

          switch (flag) {
            case 'edit':
              this.insuranceTypeAddEditForm = this.formBuilder.group(validateRule);
              this.acivatedRoute.data.forEach(function (data) {
                var doctorDetails = data.data.res;

                _this82.insuranceTypeAddEditForm.controls['id'].patchValue(doctorDetails[0]._id);

                _this82.insuranceTypeAddEditForm.controls['insurancetype_name'].patchValue(doctorDetails[0].insurancetype_name);

                _this82.insuranceTypeAddEditForm.controls['description'].patchValue(doctorDetails[0].description);

                _this82.insuranceTypeAddEditForm.controls['priority'].patchValue(doctorDetails[0].priority);

                _this82.insuranceTypeAddEditForm.controls['insurance_id'].patchValue(doctorDetails[0].insurance_id);

                _this82.insuranceTypeAddEditForm.controls['status'].patchValue(doctorDetails[0].status);
              });
              break;

            case 'add':
              delete validateRule.id;
              this.insuranceTypeAddEditForm = this.formBuilder.group(validateRule);
              break;
          }
        }
      }, {
        key: "ngOnInit",
        value: function ngOnInit() {}
        /**for validation purpose**/

      }, {
        key: "inputUntouch",
        value: function inputUntouch(form, val) {
          form.controls[val].markAsUntouched();
        }
        /**for validation purpose**/

        /**getting all the technician data**/

      }, {
        key: "getAllinsuranceData",
        value: function getAllinsuranceData() {
          var _this83 = this;

          var data = {
            "source": "data_pece",
            "condition": {
              "user_type": "insurance"
            },
            "token": this.htmlText.userData.jwtToken
          };
          this.httpService.httpViaPost('datalist', data).subscribe(function (response) {
            _this83.htmlText.insuranceData = response.res;
          });
        }
      }, {
        key: "insuranceTypeAddEditFormFormSubmit",
        value: function insuranceTypeAddEditFormFormSubmit() {
          var _this84 = this;

          for (var x in this.insuranceTypeAddEditForm.controls) {
            this.insuranceTypeAddEditForm.controls[x].markAsTouched();
          }
          /* stop here if form is invalid */


          if (this.insuranceTypeAddEditForm.valid) {
            delete this.insuranceTypeAddEditForm.value.confirmpassword;

            if (this.insuranceTypeAddEditForm.value.status) {
              this.insuranceTypeAddEditForm.value.status = parseInt("1");
            } else {
              this.insuranceTypeAddEditForm.value.status = parseInt("0");
              ;
            }
            /* start process to submited data */


            var postData = {
              "source": "data_pece",
              "data": this.insuranceTypeAddEditForm.value,
              "domainurl": _environments_environment__WEBPACK_IMPORTED_MODULE_8__["environment"].siteBaseUrl + 'reset-password',
              "sourceobj": ["insurance_id"],
              "token": this.cookieService.get('jwtToken')
            };

            if (this.htmlText.userData.user_details.user_type == 'doctor') {
              postData.data["doctor_id"] = this.htmlText.userData.user_details._id;
              postData["sourceobj"] = ["doctor_id"];
            }

            this.httpService.httpViaPost('addorupdatedata', postData).subscribe(function (response) {
              if (response.status == "success") {
                _this84.formDirective.resetForm();

                _this84.snackBar.open(_this84.htmlText.message, 'Ok', {
                  duration: 2000
                });

                setTimeout(function () {
                  switch (_this84.htmlText.userData.user_details.user_type) {
                    case 'doctor':
                      _this84.router.navigateByUrl("doctor/doctor-office-management");

                      break;

                    case 'admin':
                      _this84.router.navigateByUrl("admin/insurance-type-management");

                      break;
                  }
                }, 2000);
              } else {
                _this84.snackBar.open(response.msg, '', {
                  duration: 2000
                });
              }
            }, function (error) {
              alert("Some error occurred. Please try again.");
            });
          }
        }
      }]);

      return AddEditInsurancetypeComponent;
    }();

    AddEditInsurancetypeComponent.ctorParameters = function () {
      return [{
        type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__["HttpServiceService"]
      }, {
        type: _angular_common__WEBPACK_IMPORTED_MODULE_5__["DatePipe"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_6__["CookieService"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatSnackBar"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatDialog"]
      }];
    };

    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroupDirective"], {
      "static": false
    })], AddEditInsurancetypeComponent.prototype, "formDirective", void 0);
    AddEditInsurancetypeComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-add-edit-insurancetype',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./add-edit-insurancetype.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/manage-insurancetype/add-edit-insurancetype/add-edit-insurancetype.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./add-edit-insurancetype.component.css */
      "./src/app/components/admin/manage-insurancetype/add-edit-insurancetype/add-edit-insurancetype.component.css"))["default"]]
    })], AddEditInsurancetypeComponent);
    /***/
  },

  /***/
  "./src/app/components/admin/manage-insurancetype/listing-insurancetype/listing-insurancetype.component.css":
  /*!*****************************************************************************************************************!*\
    !*** ./src/app/components/admin/manage-insurancetype/listing-insurancetype/listing-insurancetype.component.css ***!
    \*****************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminManageInsurancetypeListingInsurancetypeListingInsurancetypeComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW4vbWFuYWdlLWluc3VyYW5jZXR5cGUvbGlzdGluZy1pbnN1cmFuY2V0eXBlL2xpc3RpbmctaW5zdXJhbmNldHlwZS5jb21wb25lbnQuY3NzIn0= */";
    /***/
  },

  /***/
  "./src/app/components/admin/manage-insurancetype/listing-insurancetype/listing-insurancetype.component.ts":
  /*!****************************************************************************************************************!*\
    !*** ./src/app/components/admin/manage-insurancetype/listing-insurancetype/listing-insurancetype.component.ts ***!
    \****************************************************************************************************************/

  /*! exports provided: ListingInsurancetypeComponent */

  /***/
  function srcAppComponentsAdminManageInsurancetypeListingInsurancetypeListingInsurancetypeComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ListingInsurancetypeComponent", function () {
      return ListingInsurancetypeComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_common_http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/common/http */
    "./node_modules/@angular/common/fesm2015/http.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _class_common_common_function__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../../../../class/common/common-function */
    "./src/app/class/common/common-function.ts");

    var ListingInsurancetypeComponent = /*#__PURE__*/function () {
      function ListingInsurancetypeComponent(cookie, http, httpService, activatedRoute, commonFunction) {
        _classCallCheck(this, ListingInsurancetypeComponent);

        this.cookie = cookie;
        this.http = http;
        this.httpService = httpService;
        this.activatedRoute = activatedRoute;
        this.commonFunction = commonFunction;
        this.allUserData = [];
        this.insuranceData_count = 0;
        this.allUserData_skip = ["_id", "address", "zip", "city", "state", "user_type", "password", "created_at", "id", "updated_at", "diagnostic_admin_id", "name_search"];
        this.editUrl = "admin/insurance-type-management/edit";
        this.allUserData_modify_header = {
          "insurancetype_name": "InsuranceType Name",
          "description": "Description",
          "priority": "Priority",
          "status": "Status",
          "insurance": "Insurance"
        };
        this.previewModal_detail_skip = ["_id", "user_type", "password", "created_at", "id", "updated_at", "diagnostic_admin_id"];
        this.UpdateEndpoint = "addorupdatedata";
        this.deleteEndpoint = "deletesingledata";
        this.tableName = "data_pece";
        this.status = [{
          val: 1,
          'name': 'Active'
        }, {
          val: 0,
          'name': 'Inactive'
        }];
        this.SearchingEndpoint = "datalist";
        this.SearchingSourceName = "data_tech_list";
        this.datacollection = 'getinsurancetypelistdata';
        this.sortdata = {
          "type": 'desc',
          "field": 'insurancetypename',
          "options": ['insurancetype_name']
        };
        this.limitcond = {
          "limit": 10,
          "skip": 0,
          "pagecount": 1
        };
        this.search_settings = {
          selectsearch: [{
            label: 'Search By Status',
            field: 'status',
            values: this.status
          }],
          textsearch: [{
            label: "Search By insurancetypeName",
            field: 'name_search'
          }]
        };
        this.InsuranceAllData = [];
        /* Set Meta Data */

        this.commonFunction.setTitleMetaTags();
        this.user_cookie = cookie.get('jwtToken');
        this.userData = JSON.parse(this.cookie.get('user_details'));

        if (this.userData.user_type == 'diagnostic_admin') {
          this.editUrl = 'diagnostic-admin/tech-management/edit';
        }

        if (this.userData.user_type == 'doctor') {
          this.editUrl = 'doctor/tech-management/edit';
        }

        this.apiUrl = httpService.baseUrl;
      }

      _createClass(ListingInsurancetypeComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this85 = this;

          this.datasource = '';
          var endpoint = 'getinsurancetypelistdata';
          var endpointc = 'getinsurancetypelistdata-count';
          var data = {
            "condition": {
              "limit": 10,
              "skip": 0
            },
            sort: {
              "type": 'desc',
              "field": 'insurancetypename'
            }
          };
          this.httpService.httpViaPost(endpointc, data).subscribe(function (res) {
            // console.log('in constructor');
            // console.log(result);
            _this85.insuranceData_count = res.count; //console.warn('blogData c',res);
          }, function (error) {
            console.log('Oooops!');
          });
          this.httpService.httpViaPost(endpoint, data).subscribe(function (res) {
            _this85.InsuranceAllData = res.results.res;
          }, function (error) {
            console.log('Oooops!');
          });
        }
      }]);

      return ListingInsurancetypeComponent;
    }();

    ListingInsurancetypeComponent.ctorParameters = function () {
      return [{
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__["HttpServiceService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"]
      }, {
        type: _class_common_common_function__WEBPACK_IMPORTED_MODULE_6__["CommonFunction"]
      }];
    };

    ListingInsurancetypeComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-listing-insurancetype',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./listing-insurancetype.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/manage-insurancetype/listing-insurancetype/listing-insurancetype.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./listing-insurancetype.component.css */
      "./src/app/components/admin/manage-insurancetype/listing-insurancetype/listing-insurancetype.component.css"))["default"]]
    })], ListingInsurancetypeComponent);
    /***/
  },

  /***/
  "./src/app/components/admin/manage-patientinformation/add-edit-patientinformation/add-edit-patientinformation.component.css":
  /*!**********************************************************************************************************************************!*\
    !*** ./src/app/components/admin/manage-patientinformation/add-edit-patientinformation/add-edit-patientinformation.component.css ***!
    \**********************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminManagePatientinformationAddEditPatientinformationAddEditPatientinformationComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW4vbWFuYWdlLXBhdGllbnRpbmZvcm1hdGlvbi9hZGQtZWRpdC1wYXRpZW50aW5mb3JtYXRpb24vYWRkLWVkaXQtcGF0aWVudGluZm9ybWF0aW9uLmNvbXBvbmVudC5jc3MifQ== */";
    /***/
  },

  /***/
  "./src/app/components/admin/manage-patientinformation/add-edit-patientinformation/add-edit-patientinformation.component.ts":
  /*!*********************************************************************************************************************************!*\
    !*** ./src/app/components/admin/manage-patientinformation/add-edit-patientinformation/add-edit-patientinformation.component.ts ***!
    \*********************************************************************************************************************************/

  /*! exports provided: AddEditPatientinformationComponent */

  /***/
  function srcAppComponentsAdminManagePatientinformationAddEditPatientinformationAddEditPatientinformationComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AddEditPatientinformationComponent", function () {
      return AddEditPatientinformationComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var _class_common_common_function__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../../../../class/common/common-function */
    "./src/app/class/common/common-function.ts");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ../../../../../environments/environment */
    "./src/environments/environment.ts");
    /* harmony import */


    var _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! @angular/cdk/keycodes */
    "./node_modules/@angular/cdk/esm2015/keycodes.js");

    var AddEditPatientinformationComponent = /*#__PURE__*/function () {
      function AddEditPatientinformationComponent(fb, activeRoute, router, httpService, datePipe, cookie, snackBar, commonFunction, dialog) {
        _classCallCheck(this, AddEditPatientinformationComponent);

        this.fb = fb;
        this.activeRoute = activeRoute;
        this.router = router;
        this.httpService = httpService;
        this.datePipe = datePipe;
        this.cookie = cookie;
        this.snackBar = snackBar;
        this.commonFunction = commonFunction;
        this.dialog = dialog;
        this.separatorKeysCodes = [_angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_10__["ENTER"], _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_10__["COMMA"]];
        this.selectable = true;
        this.removable = true;
        this.addOnBlur = true;
        this.addfieldFlage = false;
        this.addfieldArray = [];
        this.htmlText = {
          userData: "",
          header: 'Add New PatientInformation',
          nav: 'Add PatientInformation',
          buttonText: 'Save',
          message: "Submitted Successfully"
        };
        this.htmlText.userData = cookie.getAll();
        this.htmlText.userData.user_details = JSON.parse(this.htmlText.userData.user_details);

        if (this.activeRoute.snapshot.params._id) {
          this.generateAddEditForm('edit');
          this.htmlText.message = "Updated Successfully";
          this.htmlText.header = 'Edit Patient Information Record';
          this.htmlText.nav = 'Edit Patient Information';
          this.htmlText.buttonText = 'Update';
          this.params_id = this.activeRoute.snapshot.params._id;
        } else {
          this.generateAddEditForm('add');
        }
      }

      _createClass(AddEditPatientinformationComponent, [{
        key: "generateAddEditForm",
        value: function generateAddEditForm() {
          var _this86 = this;

          var flag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
          var validateRule = {
            id: ['', []],
            type: ['', []],
            addfield: ['', []],
            label: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(50)]],
            description: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(5000)]],
            user_type: ['patient_information', []],
            status: ['', []]
          };

          switch (flag) {
            case 'edit':
              this.patientinformationAddEditForm = this.fb.group(validateRule);
              this.activeRoute.data.forEach(function (data) {
                var patientinformationDetails = data.patientinformationData.res;

                _this86.patientinformationAddEditForm.controls['id'].patchValue(patientinformationDetails[0]._id);

                _this86.patientinformationAddEditForm.controls['type'].patchValue(patientinformationDetails[0].type);

                _this86.patientinformationAddEditForm.controls['addfield'].patchValue(patientinformationDetails[0].addfield);

                _this86.patientinformationAddEditForm.controls['label'].patchValue(patientinformationDetails[0].label);

                _this86.patientinformationAddEditForm.controls['description'].patchValue(patientinformationDetails[0].description);

                _this86.patientinformationAddEditForm.controls['status'].patchValue(patientinformationDetails[0].status);
              });
              break;

            case 'add':
              delete validateRule.id;
              this.patientinformationAddEditForm = this.fb.group(validateRule);
              break;
          }
        }
      }, {
        key: "ngOnInit",
        value: function ngOnInit() {}
      }, {
        key: "openType",
        value: function openType() {
          // console.warn( this.patientinformationAddEditForm.controls['type'].value);
          if (this.patientinformationAddEditForm.controls['type'].value == 'dropdown') {
            this.addfieldFlage = true;
          } else {
            this.addfieldFlage = false;
          }
        } //keyUp event for email

      }, {
        key: "collect_field",
        value: function collect_field(event) {
          var input = event.input;
          var value = event.value;
          this.addfieldArray.push(value);

          if (input) {
            input.value = '';
          }
        } //delete mass email

      }, {
        key: "clearField",
        value: function clearField(index) {
          this.addfieldArray.splice(index, 1);
        }
        /**for validation purpose**/

      }, {
        key: "inputUntouch",
        value: function inputUntouch(form, val) {
          form.controls[val].markAsUntouched();
        }
      }, {
        key: "patientinformationAddEditFormSubmit",
        value: function patientinformationAddEditFormSubmit() {
          var _this87 = this;

          for (var x in this.patientinformationAddEditForm.controls) {
            this.patientinformationAddEditForm.controls[x].markAsTouched();
          }

          if (this.patientinformationAddEditForm.valid) {
            delete this.patientinformationAddEditForm.value.confirmpassword;

            if (this.patientinformationAddEditForm.value.status) {
              this.patientinformationAddEditForm.value.status = parseInt("1");
            } else {
              this.patientinformationAddEditForm.value.status = parseInt("0");
            }

            this.patientinformationAddEditForm.value.addfield = this.addfieldArray;
            var data = {
              "source": "data_pece",
              "data": this.patientinformationAddEditForm.value,
              "token": this.htmlText.userData.jwtToken,
              "domainurl": _environments_environment__WEBPACK_IMPORTED_MODULE_9__["environment"].siteBaseUrl + 'reset-password'
            };

            if (this.htmlText.userData.user_details.user_type == 'diagnostic_admin') {
              data.data["diagnostic_admin_id"] = this.htmlText.userData.user_details._id;
              data["sourceobj"] = ["diagnostic_admin_id"];
            }

            if (this.htmlText.userData.user_details.user_type == 'doctor') {
              data.data["doctor_id"] = this.htmlText.userData.user_details._id;
              data["sourceobj"] = ["doctor_id"];
            }

            this.httpService.httpViaPost("addorupdatedata", data).subscribe(function (response) {
              if (response.status == "success") {
                _this87.snackBar.open(_this87.htmlText.message, 'Ok', {
                  duration: 2000
                });

                _this87.formDirective.resetForm();

                setTimeout(function () {
                  switch (_this87.htmlText.userData.user_details.user_type) {
                    case 'diagnostic_admin':
                      _this87.router.navigateByUrl("admin/patientinformation-management");

                      break;

                    case 'admin':
                      _this87.router.navigateByUrl("admin/patientinformation-management");

                      break;
                  }
                }, 1000);
              } else {
                _this87.snackBar.open(response.msg, '', {
                  duration: 2000
                });
              }
            });
          }
        }
      }]);

      return AddEditPatientinformationComponent;
    }();

    AddEditPatientinformationComponent.ctorParameters = function () {
      return [{
        type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__["HttpServiceService"]
      }, {
        type: _angular_common__WEBPACK_IMPORTED_MODULE_5__["DatePipe"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_6__["CookieService"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatSnackBar"]
      }, {
        type: _class_common_common_function__WEBPACK_IMPORTED_MODULE_8__["CommonFunction"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatDialog"]
      }];
    };

    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroupDirective"], {
      "static": false
    })], AddEditPatientinformationComponent.prototype, "formDirective", void 0);
    AddEditPatientinformationComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-add-edit-patientinformation',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./add-edit-patientinformation.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/manage-patientinformation/add-edit-patientinformation/add-edit-patientinformation.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./add-edit-patientinformation.component.css */
      "./src/app/components/admin/manage-patientinformation/add-edit-patientinformation/add-edit-patientinformation.component.css"))["default"]]
    })], AddEditPatientinformationComponent);
    /***/
  },

  /***/
  "./src/app/components/admin/manage-patientinformation/listing-patientinformation/listing-patientinformation.component.css":
  /*!********************************************************************************************************************************!*\
    !*** ./src/app/components/admin/manage-patientinformation/listing-patientinformation/listing-patientinformation.component.css ***!
    \********************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminManagePatientinformationListingPatientinformationListingPatientinformationComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW4vbWFuYWdlLXBhdGllbnRpbmZvcm1hdGlvbi9saXN0aW5nLXBhdGllbnRpbmZvcm1hdGlvbi9saXN0aW5nLXBhdGllbnRpbmZvcm1hdGlvbi5jb21wb25lbnQuY3NzIn0= */";
    /***/
  },

  /***/
  "./src/app/components/admin/manage-patientinformation/listing-patientinformation/listing-patientinformation.component.ts":
  /*!*******************************************************************************************************************************!*\
    !*** ./src/app/components/admin/manage-patientinformation/listing-patientinformation/listing-patientinformation.component.ts ***!
    \*******************************************************************************************************************************/

  /*! exports provided: ListingPatientinformationComponent */

  /***/
  function srcAppComponentsAdminManagePatientinformationListingPatientinformationListingPatientinformationComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ListingPatientinformationComponent", function () {
      return ListingPatientinformationComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_common_http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/common/http */
    "./node_modules/@angular/common/fesm2015/http.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _class_common_common_function__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../../../../class/common/common-function */
    "./src/app/class/common/common-function.ts");

    var ListingPatientinformationComponent = /*#__PURE__*/function () {
      function ListingPatientinformationComponent(cookie, http, httpService, activatedRoute, commonFunction) {
        _classCallCheck(this, ListingPatientinformationComponent);

        this.cookie = cookie;
        this.http = http;
        this.httpService = httpService;
        this.activatedRoute = activatedRoute;
        this.commonFunction = commonFunction;
        this.allUserData = [];
        this.insuranceData_count = 0;
        this.allUserData_skip = ["_id", "address", "zip", "city", "state", "user_type", "password", "created_at", "id", "updated_at", "diagnostic_admin_id", "name_search", "label_search", "addfield"];
        this.editUrl = "admin/patientinformation-management/edit";
        this.allUserData_modify_header = {
          "type": "Type",
          "label": "Label",
          "description": "Description",
          "status": "Status"
        };
        this.previewModal_detail_skip = ["_id", "user_type", "password", "created_at", "id", "updated_at", "diagnostic_admin_id", "label_search"];
        this.UpdateEndpoint = "addorupdatedata";
        this.deleteEndpoint = "deletesingledata";
        this.tableName = "users";
        this.status = [{
          val: 1,
          'name': 'Active'
        }, {
          val: 0,
          'name': 'Inactive'
        }];
        this.type = [{
          val: "checkbox",
          'name': 'Checkbox'
        }, {
          val: "numberfield",
          'name': 'Number Field'
        }, {
          val: "textfield",
          'name': ' Text Field'
        }, {
          val: "dropdown",
          'name': ' Dropdown'
        }];
        this.SearchingEndpoint = "datalist";
        this.SearchingSourceName = "data_tech_list";
        this.datacollection = 'getpatientinformationlistdata';
        this.sortdata = {
          "type": 'desc',
          "field": 'label',
          "options": ['label']
        };
        this.limitcond = {
          "limit": 10,
          "skip": 0,
          "pagecount": 1
        };
        this.search_settings = {
          selectsearch: [{
            label: 'Search By Status',
            field: 'status',
            values: this.status
          }, {
            label: 'Search By Type',
            field: 'type',
            values: this.type
          }],
          textsearch: [{
            label: "Search By Label",
            field: 'label_search'
          }]
        };
        this.InsuranceAllData = [];
        /* Set Meta Data */

        this.commonFunction.setTitleMetaTags();
        this.user_cookie = cookie.get('jwtToken');
        this.userData = JSON.parse(this.cookie.get('user_details'));

        if (this.userData.user_type == 'diagnostic_admin') {
          this.editUrl = 'diagnostic-admin/tech-management/edit';
        }

        if (this.userData.user_type == 'doctor') {
          this.editUrl = 'doctor/tech-management/edit';
        }

        this.apiUrl = httpService.baseUrl;
      }

      _createClass(ListingPatientinformationComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this88 = this;

          this.datasource = '';
          var endpoint = 'getpatientinformationlistdata';
          var endpointc = 'getpatientinformationlistdata-count';
          var data = {
            "condition": {
              "limit": 10,
              "skip": 0
            },
            sort: {
              "type": 'desc',
              "field": 'label'
            }
          };
          this.httpService.httpViaPost(endpointc, data).subscribe(function (res) {
            // console.log('in constructor');
            // console.log(result);
            _this88.insuranceData_count = res.count; //console.warn('blogData c',res);
          }, function (error) {
            console.log('Oooops!');
          });
          this.httpService.httpViaPost(endpoint, data).subscribe(function (res) {
            _this88.InsuranceAllData = res.results.res;
          }, function (error) {
            console.log('Oooops!');
          });
        }
      }]);

      return ListingPatientinformationComponent;
    }();

    ListingPatientinformationComponent.ctorParameters = function () {
      return [{
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__["HttpServiceService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"]
      }, {
        type: _class_common_common_function__WEBPACK_IMPORTED_MODULE_6__["CommonFunction"]
      }];
    };

    ListingPatientinformationComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-listing-patientinformation',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./listing-patientinformation.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/manage-patientinformation/listing-patientinformation/listing-patientinformation.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./listing-patientinformation.component.css */
      "./src/app/components/admin/manage-patientinformation/listing-patientinformation/listing-patientinformation.component.css"))["default"]]
    })], ListingPatientinformationComponent);
    /***/
  },

  /***/
  "./src/app/components/admin/report-not-process/report-not-process.component.css":
  /*!**************************************************************************************!*\
    !*** ./src/app/components/admin/report-not-process/report-not-process.component.css ***!
    \**************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminReportNotProcessReportNotProcessComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "/* table {\n    border: 1px solid gray;\n}\n\nth {\n    border: 1px solid gray;\n}\n\ntd {\n    border: 1px solid gray;\n} */\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9hZG1pbi9yZXBvcnQtbm90LXByb2Nlc3MvcmVwb3J0LW5vdC1wcm9jZXNzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7R0FVRyIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW4vcmVwb3J0LW5vdC1wcm9jZXNzL3JlcG9ydC1ub3QtcHJvY2Vzcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogdGFibGUge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIGdyYXk7XG59XG5cbnRoIHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCBncmF5O1xufVxuXG50ZCB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgZ3JheTtcbn0gKi8iXX0= */";
    /***/
  },

  /***/
  "./src/app/components/admin/report-not-process/report-not-process.component.ts":
  /*!*************************************************************************************!*\
    !*** ./src/app/components/admin/report-not-process/report-not-process.component.ts ***!
    \*************************************************************************************/

  /*! exports provided: ReportNotProcessComponent */

  /***/
  function srcAppComponentsAdminReportNotProcessReportNotProcessComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ReportNotProcessComponent", function () {
      return ReportNotProcessComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/cdk/collections */
    "./node_modules/@angular/cdk/esm2015/collections.js");

    ;
    var MEMBER_DATA = [];
    /* Table End */

    var ReportNotProcessComponent = /*#__PURE__*/function () {
      /****** ******************** ******/
      function ReportNotProcessComponent(activatedRoute, cookie, httpService, snackBar) {
        _classCallCheck(this, ReportNotProcessComponent);

        this.activatedRoute = activatedRoute;
        this.cookie = cookie;
        this.httpService = httpService;
        this.snackBar = snackBar;
        this.allResloveData = [];
        this.allUserData_skip = ["doctor_id", "tech_id", "report_type", "status", "patientName", "_id", "patientName_search", "record", "billGenerationDate", "billSentDate", "superBill", "status_text", "note", "file_upload_server_id"];
        this.editUrl = "admin/admin-management/edit";
        this.allUserData_modify_header = {
          "firstname": "First Name",
          "lastname": "Last Name",
          "email": "E-Mail",
          "phone": "Phone Number",
          "date": "Date",
          "status": "Status",
          "address": "Address",
          "fullNamecopy": "Name"
        };
        this.UpdateEndpoint = "addorupdatedata";
        this.deleteEndpoint = "deletesingledata";
        this.previewModal_skip = ['_id', 'fullNamecopy'];
        this.tableName = "users";
        this.status = [{
          val: 1,
          'name': 'Active'
        }, {
          val: 0,
          'name': 'Inactive'
        }];
        this.SearchingEndpoint = "datalist";
        this.SearchingSourceName = "users_view_admin";
        this.search_settings = {
          selectsearch: [{
            label: 'Search By Status',
            field: 'status',
            values: this.status
          }],
          textsearch: [{
            label: "Search By Name",
            field: 'fullName'
          }, {
            label: "Search By E-Mail",
            field: 'email'
          }]
        };
        /****** New table allocation ******/

        this.displayedColumns = ['select', 'file_original_name', 'tech_name', 'doctor_name', 'upload_time', 'action'];
        this.dataSource = new _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatTableDataSource"](MEMBER_DATA);
        this.selection = new _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_6__["SelectionModel"](true, []);
        this.user_cookie = cookie.get('jwtToken');
        this.apiUrl = httpService.baseUrl;
      }

      _createClass(ReportNotProcessComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this89 = this;

          this.activatedRoute.data.forEach(function (resolveData) {
            //console.log("Data: ", resolveData.data);
            _this89.allResloveData = resolveData.data.res;
            console.log(">>", _this89.allResloveData);
          });
          this.onPopulate();
        }
      }, {
        key: "onPopulate",
        value: function onPopulate() {
          var _this90 = this;

          this.activatedRoute.data.forEach(function (resolveData) {
            console.log("Data on populate: ", resolveData);
            _this90.reportData = resolveData.data.res;
            _this90.dataSource = new _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatTableDataSource"](_this90.reportData);
          });
        }
      }, {
        key: "action",
        value: function action(_action, id, index) {
          var _this91 = this;

          switch (_action) {
            case 'delete':
              this.httpService.ResolveViaPost({
                source: "patient_management",
                id: id
              }, "deletesingledata").subscribe(function (response) {
                if (response.status == 'success') {
                  _this91.openSnackBar("Successfully delete.", "");

                  _this91.allResloveData.splice(index, 1);

                  _this91.dataSource = new _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatTableDataSource"](_this91.allResloveData);
                } else {
                  _this91.openSnackBar("An error occord.", "");
                }
              });
              break;

            case 'retry':
              this.httpService.httpViaPost("getPdfToImages", {
                id: id
              }).subscribe(function (response) {
                if (response.status == 'success') {
                  _this91.openSnackBar("Successfully reprocess.", "");
                } else {
                  _this91.openSnackBar("An error occord.", "");
                }
              });
              break;
          }
        }
        /** Whether the number of selected elements matches the total number of rows. */

      }, {
        key: "isAllSelected",
        value: function isAllSelected() {
          var numSelected = this.selection.selected.length;
          var numRows = this.dataSource.data.length;
          return numSelected === numRows;
        }
        /** Selects all rows if they are not all selected; otherwise clear selection. */

      }, {
        key: "masterToggle",
        value: function masterToggle() {
          var _this92 = this;

          this.isAllSelected() ? this.selection.clear() : this.dataSource.data.forEach(function (row) {
            return _this92.selection.select(row);
          });
        }
        /** The label for the checkbox on the passed row */

      }, {
        key: "checkboxLabel",
        value: function checkboxLabel(row) {
          if (!row) {
            return "".concat(this.isAllSelected() ? 'select' : 'deselect', " all");
          } // return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.id + 1}`;

        }
        /****** Show snack bar ******/

      }, {
        key: "openSnackBar",
        value: function openSnackBar(message, action) {
          this.snackBar.open(message, action, {
            duration: 2000
          });
        }
      }]);

      return ReportNotProcessComponent;
    }();

    ReportNotProcessComponent.ctorParameters = function () {
      return [{
        type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__["CookieService"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__["HttpServiceService"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatSnackBar"]
      }];
    };

    ReportNotProcessComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-report-not-process',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./report-not-process.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/report-not-process/report-not-process.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./report-not-process.component.css */
      "./src/app/components/admin/report-not-process/report-not-process.component.css"))["default"]]
    })], ReportNotProcessComponent);
    /***/
  },

  /***/
  "./src/app/components/admin/report-process-time/report-process-time/report-process-time.component.css":
  /*!************************************************************************************************************!*\
    !*** ./src/app/components/admin/report-process-time/report-process-time/report-process-time.component.css ***!
    \************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminReportProcessTimeReportProcessTimeReportProcessTimeComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW4vcmVwb3J0LXByb2Nlc3MtdGltZS9yZXBvcnQtcHJvY2Vzcy10aW1lL3JlcG9ydC1wcm9jZXNzLXRpbWUuY29tcG9uZW50LmNzcyJ9 */";
    /***/
  },

  /***/
  "./src/app/components/admin/report-process-time/report-process-time/report-process-time.component.ts":
  /*!***********************************************************************************************************!*\
    !*** ./src/app/components/admin/report-process-time/report-process-time/report-process-time.component.ts ***!
    \***********************************************************************************************************/

  /*! exports provided: ReportProcessTimeComponent */

  /***/
  function srcAppComponentsAdminReportProcessTimeReportProcessTimeReportProcessTimeComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ReportProcessTimeComponent", function () {
      return ReportProcessTimeComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var ngx_device_detector__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ngx-device-detector */
    "./node_modules/ngx-device-detector/fesm2015/ngx-device-detector.js");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../../../../../environments/environment */
    "./src/environments/environment.ts"); // import { DownloadDetailsComponent } from './download-details/download-details.component';


    var ReportProcessTimeComponent = /*#__PURE__*/function () {
      // lib list end
      function ReportProcessTimeComponent(router, cookieService, http, activatedRoute, dialog, deviceService, matSnackBar) {
        var _this93 = this;

        _classCallCheck(this, ReportProcessTimeComponent);

        this.router = router;
        this.cookieService = cookieService;
        this.http = http;
        this.activatedRoute = activatedRoute;
        this.dialog = dialog;
        this.deviceService = deviceService;
        this.matSnackBar = matSnackBar;
        this.loginUserData = {};
        this.jwtToken = "";
        this.htmlText = {
          headerText: "Patient Reports",
          path: {}
        };
        this.allResolveData = {};
        this.shareDetails = {
          baseUrl: _environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].doctorSignUpBaseUrl,
          userId: ""
        };
        this.status = []; // Lib list

        this.allBillerData = [];
        this.billerData_count = 0;
        this.allUserData_skip = ["_id", "report_file_type", "tech_id", "tech_email", "batch_name", "report_type", "status", "file_basepath", "file_bucketname", "file_name", "file_original_name", "file_type", "converted_image", "images", "patient_details", "patient_name_search", "report_life_circle", "note", "additional_potential_health_risks", "cpt_codes", "created_at", "doctor_name"];
        this.editUrl = "admin/biller-management/edit";
        this.libdata = {
          basecondition: "",
          updateendpoint: '',
          hideeditbutton: true,
          hidedeletebutton: true,
          hidemultipleselectbutton: true,
          hidedeletemany: true,
          hideaction: true,
          hidestatustogglebutton: true,
          hideviewbutton: true,
          tableheaders: ["patient_name", "batch_name", "processed_by", "report_uploaded_datetime", "report_process_datetime", "processing_time"]
        };
        this.allUserData_modify_header = {
          "patient_name": "Report Name",
          "batch_name": "Batch Name",
          "processed_by": "Processed By",
          "report_uploaded_datetime": "Report Uploaded",
          "report_process_datetime": "Report Process",
          "processing_time": "Reports Processing Time(Minutes)"
        };
        this.UpdateEndpoint = "addorupdatedata";
        this.deleteEndpoint = "deletesingledata";
        this.apiUrl = _environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].apiBaseUrl1;
        this.tableName = "data_pece";
        this.datacollection = 'getreportprocessdata';
        this.sortdata = {
          "type": 'desc',
          "field": 'patient_name',
          "options": ['patient_name']
        };
        this.limitcond = {
          "limit": 10,
          "skip": 0,
          "pagecount": 1
        };
        this.previewModal_detail_skip = ['_id', 'user_type', 'status', 'password', 'created_at'];
        this.SearchingEndpoint = "datalist";
        this.authval = [];
        this.batch = [];
        this.docofficeval = [];
        this.techval = [];
        this.parentnameval = [];
        this.doctorcity = [];
        this.doctorstate = [];
        this.patientcity = [];
        this.patientstate = [];
        this.SearchingSourceName = "data_biller_list";
        this.search_settings = {
          textsearch: [{
            label: "Search By Report Name",
            field: 'patient_name_search'
          }],
          datesearch: [{
            startdatelabel: "Start Date",
            enddatelabel: "End Date",
            submit: "Search",
            field: "report_uploaded_datetime"
          }],
          // { label: "Search By E-Mail", field: 'email' }, { label: "Search By Parent Name", field: 'parent_search' }, { label: "Search By Company Name", field: 'company_search' }],
          search: [{
            label: "Search By Batch Name",
            field: 'batch_search',
            values: this.batch,
            serversearchdata: {
              endpoint: 'batch-search'
            }
          }]
        };
        this.loginUserData["user_details"] = cookieService.getAll();
        this.loginUserData.user_details.user_details = JSON.parse(this.loginUserData.user_details.user_details);
        this.shareDetails.userId = this.loginUserData.user_details.user_details._id;
        this.shareDetails.user_type = this.loginUserData.user_details.user_details.user_type;
        this.loginUserData["jwtToken"] = cookieService.get('jwtToken');
        /* Get Auth Token */

        this.jwtToken = cookieService.get('jwtToken');
        /* Get resolve data */
        // this.activatedRoute.data.subscribe(resolveData => {
        // this.allResolveData = resolveData.dataCount.data.dashboardCount[0];
        //this.viewReportProcessData(this.htmlText.headerText);
        // });
        // lib list

        var endpoint = 'getreportprocessdata';
        var endpointc = 'getreportprocessdata-count';
        var data = {
          "condition": {
            "limit": 10,
            "skip": 0
          },
          sort: {
            "type": 'desc',
            "field": 'patient_name'
          },
          data: this.htmlText.path
        };
        this.http.httpViaPostbyApi1(endpointc, data).subscribe(function (res) {
          _this93.billerData_count = res.count;
        }, function (error) {
          console.log('Oooops!');
        });
        this.http.httpViaPostbyApi1(endpoint, data).subscribe(function (res) {
          // console.log(res);
          _this93.allBillerData = res.results.res;
        }, function (error) {
          console.log('Oooops!');
        });
      }

      _createClass(ReportProcessTimeComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }, {
        key: "ngAfterViewInit",
        value: function ngAfterViewInit() {}
      }, {
        key: "viewReportProcessData",
        value: function viewReportProcessData(flag) {
          console.log(flag);
        }
      }]);

      return ReportProcessTimeComponent;
    }();

    ReportProcessTimeComponent.ctorParameters = function () {
      return [{
        type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__["HttpServiceService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatDialog"]
      }, {
        type: ngx_device_detector__WEBPACK_IMPORTED_MODULE_6__["DeviceDetectorService"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatSnackBar"]
      }];
    };

    ReportProcessTimeComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-report-process-time',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./report-process-time.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/report-process-time/report-process-time/report-process-time.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./report-process-time.component.css */
      "./src/app/components/admin/report-process-time/report-process-time/report-process-time.component.css"))["default"]]
    })], ReportProcessTimeComponent);
    /***/
  },

  /***/
  "./src/app/components/admin/report-time-setting/add-setting-time/add-setting-time.component.css":
  /*!******************************************************************************************************!*\
    !*** ./src/app/components/admin/report-time-setting/add-setting-time/add-setting-time.component.css ***!
    \******************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminReportTimeSettingAddSettingTimeAddSettingTimeComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW4vcmVwb3J0LXRpbWUtc2V0dGluZy9hZGQtc2V0dGluZy10aW1lL2FkZC1zZXR0aW5nLXRpbWUuY29tcG9uZW50LmNzcyJ9 */";
    /***/
  },

  /***/
  "./src/app/components/admin/report-time-setting/add-setting-time/add-setting-time.component.ts":
  /*!*****************************************************************************************************!*\
    !*** ./src/app/components/admin/report-time-setting/add-setting-time/add-setting-time.component.ts ***!
    \*****************************************************************************************************/

  /*! exports provided: AddSettingTimeComponent */

  /***/
  function srcAppComponentsAdminReportTimeSettingAddSettingTimeAddSettingTimeComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AddSettingTimeComponent", function () {
      return AddSettingTimeComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var _class_common_common_function__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../../../../class/common/common-function */
    "./src/app/class/common/common-function.ts");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ../../../../../environments/environment */
    "./src/environments/environment.ts");

    var AddSettingTimeComponent = /*#__PURE__*/function () {
      function AddSettingTimeComponent(fb, activeRoute, router, httpService, datePipe, cookie, snackBar, commonFunction, dialog) {
        _classCallCheck(this, AddSettingTimeComponent);

        this.fb = fb;
        this.activeRoute = activeRoute;
        this.router = router;
        this.httpService = httpService;
        this.datePipe = datePipe;
        this.cookie = cookie;
        this.snackBar = snackBar;
        this.commonFunction = commonFunction;
        this.dialog = dialog;
        this.params_id = '';
        this.htmlText = {
          userData: "",
          header: 'Add New Time',
          nav: 'Add Time Setting',
          buttonText: 'Save',
          message: "Submitted Successfully",
          states: "",
          allCities: "",
          cities: "",
          parent_type: [{
            name: "Distributor",
            value: "distributor"
          }, {
            name: "DiagnosticAdmin",
            value: "diagnostic_admin"
          }]
        };
        this.htmlText.userData = cookie.getAll();
        this.htmlText.userData.user_details = JSON.parse(this.htmlText.userData.user_details);

        if (this.activeRoute.snapshot.params._id) {
          this.generateAddEditForm('edit');
          this.htmlText.message = "Updated Successfully";
          this.htmlText.header = 'Configure Approval Settings';
          this.htmlText.nav = 'Configure Approval Settings';
          this.htmlText.buttonText = 'Update';
          this.params_id = this.activeRoute.snapshot.params._id;
        } else {
          this.generateAddEditForm('add');
        }
      }

      _createClass(AddSettingTimeComponent, [{
        key: "generateAddEditForm",
        value: function generateAddEditForm() {
          var _this94 = this;

          var flag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
          var validateRule = {
            id: ['', []],
            time_setting_percentage: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(100), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(0)]]
          };

          switch (flag) {
            case 'edit':
              this.SalesPersonManagementAddEditForm = this.fb.group(validateRule);
              this.activeRoute.data.forEach(function (data) {
                var billerDetails = data.techData.res;

                _this94.SalesPersonManagementAddEditForm.controls['id'].patchValue(billerDetails[0]._id);

                _this94.SalesPersonManagementAddEditForm.controls['time_setting_percentage'].patchValue(billerDetails[0].time_setting_percentage);
              });
              break;

            case 'add':
              delete validateRule.id;
              this.SalesPersonManagementAddEditForm = this.fb.group(validateRule);
              break;
          }
        }
      }, {
        key: "ngOnInit",
        value: function ngOnInit() {}
        /**for validation purpose**/

      }, {
        key: "inputUntouch",
        value: function inputUntouch(form, val) {
          form.controls[val].markAsUntouched();
        }
        /**for validation purpose**/

      }, {
        key: "TechManagementAddFormFormSubmit",
        value: function TechManagementAddFormFormSubmit() {
          var _this95 = this;

          for (var x in this.SalesPersonManagementAddEditForm.controls) {
            this.SalesPersonManagementAddEditForm.controls[x].markAsTouched();
          }

          if (this.SalesPersonManagementAddEditForm.valid) {
            delete this.SalesPersonManagementAddEditForm.value.confirmpassword;
            this.SalesPersonManagementAddEditForm.value.time_setting_percentage = parseInt(this.SalesPersonManagementAddEditForm.value.time_setting_percentage);
            var data = {
              "source": "data_pece",
              "data": this.SalesPersonManagementAddEditForm.value,
              "token": this.htmlText.userData.jwtToken,
              "domainurl": _environments_environment__WEBPACK_IMPORTED_MODULE_9__["environment"].siteBaseUrl + 'reset-password'
            };
            this.httpService.httpViaPost("addorupdatedata", data).subscribe(function (response) {
              if (response.status == "success") {
                _this95.snackBar.open(_this95.htmlText.message, 'Ok', {
                  duration: 2000
                });

                _this95.formDirective.resetForm();

                setTimeout(function () {
                  switch (_this95.htmlText.userData.user_details.user_type) {
                    case 'admin':
                      _this95.router.navigateByUrl("admin/dashboard");

                      break;

                    case 'diagnostic_admin':
                      _this95.router.navigateByUrl("diagnostic-admin/sales-person-management");

                      break;

                    case 'distributors':
                      _this95.router.navigateByUrl("distributors/sales-person-management");

                      break;
                  }
                }, 1000);
              } else {
                _this95.snackBar.open(response.msg, '', {
                  duration: 2000
                });
              }
            });
          }
        }
      }]);

      return AddSettingTimeComponent;
    }();

    AddSettingTimeComponent.ctorParameters = function () {
      return [{
        type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__["HttpServiceService"]
      }, {
        type: _angular_common__WEBPACK_IMPORTED_MODULE_5__["DatePipe"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_6__["CookieService"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatSnackBar"]
      }, {
        type: _class_common_common_function__WEBPACK_IMPORTED_MODULE_8__["CommonFunction"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatDialog"]
      }];
    };

    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroupDirective"], {
      "static": false
    })], AddSettingTimeComponent.prototype, "formDirective", void 0);
    AddSettingTimeComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-add-setting-time',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./add-setting-time.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/report-time-setting/add-setting-time/add-setting-time.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./add-setting-time.component.css */
      "./src/app/components/admin/report-time-setting/add-setting-time/add-setting-time.component.css"))["default"]]
    })], AddSettingTimeComponent);
    /***/
  },

  /***/
  "./src/app/components/admin/report-time-setting/report-time-setting/report-time-setting.component.css":
  /*!************************************************************************************************************!*\
    !*** ./src/app/components/admin/report-time-setting/report-time-setting/report-time-setting.component.css ***!
    \************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminReportTimeSettingReportTimeSettingReportTimeSettingComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW4vcmVwb3J0LXRpbWUtc2V0dGluZy9yZXBvcnQtdGltZS1zZXR0aW5nL3JlcG9ydC10aW1lLXNldHRpbmcuY29tcG9uZW50LmNzcyJ9 */";
    /***/
  },

  /***/
  "./src/app/components/admin/report-time-setting/report-time-setting/report-time-setting.component.ts":
  /*!***********************************************************************************************************!*\
    !*** ./src/app/components/admin/report-time-setting/report-time-setting/report-time-setting.component.ts ***!
    \***********************************************************************************************************/

  /*! exports provided: ReportTimeSettingComponent */

  /***/
  function srcAppComponentsAdminReportTimeSettingReportTimeSettingReportTimeSettingComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ReportTimeSettingComponent", function () {
      return ReportTimeSettingComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_common_http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/common/http */
    "./node_modules/@angular/common/fesm2015/http.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _class_common_common_function__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../../../../class/common/common-function */
    "./src/app/class/common/common-function.ts");

    var ReportTimeSettingComponent = /*#__PURE__*/function () {
      function ReportTimeSettingComponent(cookie, http, httpService, activatedRoute, commonFunction) {
        _classCallCheck(this, ReportTimeSettingComponent);

        this.cookie = cookie;
        this.http = http;
        this.httpService = httpService;
        this.activatedRoute = activatedRoute;
        this.commonFunction = commonFunction;
        this.allUserData = [];
        this.salesData_count = 0;
        this.allUserData_skip = ["_id", "address", "zip", "city", "state", "user_type", "password", "created_at", "id", "updated_at", "diagnostic_admin_id", "admin_id", "distributor_id", "doctorgroup_id"];
        this.editUrl = "admin/setting-management/edit";
        this.allUserData_modify_header = {
          "time_setting_percentage": "Report Setting(%)"
        };
        this.previewModal_detail_skip = ["_id", "user_type", "password", "created_at", "id", "updated_at", "diagnostic_admin_id"];
        this.libdata = {
          basecondition: "",
          updateendpoint: 'statusupdate',
          hidemultipleselectbutton: true,
          // hideeditbutton:true,// all these button options are optional not mandatory
          hidedeletebutton: true,
          hideviewbutton: true,
          hidestatustogglebutton: true,
          // hideaction:true,
          tableheaders: ['time_setting_percentage']
        };
        this.UpdateEndpoint = "addorupdatedata";
        this.deleteEndpoint = "deletesingledata";
        this.tableName = "data_pece";
        this.status = [{
          val: 1,
          'name': 'Active'
        }, {
          val: 0,
          'name': 'Inactive'
        }];
        this.parent_type = [{
          val: "admin",
          'name': 'Admin'
        }, {
          val: "diagnostic_admin",
          'name': 'Diagnostic Admin'
        }, {
          val: "distributors",
          'name': 'Distributor'
        }];
        this.SearchingEndpoint = "datalist";
        this.SearchingSourceName = "data_sales_person_list";
        this.datacollection = 'getreportsettinglistdata';
        this.sortdata = {
          "type": 'desc',
          "field": 'time_setting_percentage',
          "options": ['time_setting_percentage']
        };
        this.limitcond = {
          "limit": 10,
          "skip": 0,
          "pagecount": 1
        };
        this.search_settings = {// selectsearch: [{ label: 'Search By Status', field: 'status', values: this.status },],
          // textsearch: [{ label: "Search By Name", field: 'name_search' },
          // { label: "Search By E-Mail", field: 'email' }],
        };
        this.salesPersonDashboardAllData = [];
        /* Set Meta Data */

        this.commonFunction.setTitleMetaTags();
        this.user_cookie = cookie.get('jwtToken');
        this.userData = JSON.parse(this.cookie.get('user_details'));
        this.apiUrl = httpService.baseUrl;
      }

      _createClass(ReportTimeSettingComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this96 = this;

          this.datasource = '';
          var endpoint = 'getreportsettinglistdata';
          var endpointc = 'getreportsettinglistdata-count';
          var data = {
            "condition": {
              "limit": 10,
              "skip": 0
            },
            sort: {
              "type": 'desc',
              "field": 'time_setting_percentage'
            }
          };
          this.httpService.httpViaPost(endpointc, data).subscribe(function (res) {
            // console.log('in constructor');
            // console.log(result);
            _this96.salesData_count = res.count; //console.warn('blogData c',res);
          }, function (error) {
            console.log('Oooops!');
          });
          this.httpService.httpViaPost(endpoint, data).subscribe(function (res) {
            _this96.salesPersonDashboardAllData = res.results.res;
          }, function (error) {
            console.log('Oooops!');
          });
        }
      }]);

      return ReportTimeSettingComponent;
    }();

    ReportTimeSettingComponent.ctorParameters = function () {
      return [{
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__["HttpServiceService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"]
      }, {
        type: _class_common_common_function__WEBPACK_IMPORTED_MODULE_6__["CommonFunction"]
      }];
    };

    ReportTimeSettingComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-report-time-setting',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./report-time-setting.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/report-time-setting/report-time-setting/report-time-setting.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./report-time-setting.component.css */
      "./src/app/components/admin/report-time-setting/report-time-setting/report-time-setting.component.css"))["default"]]
    })], ReportTimeSettingComponent);
    /***/
  },

  /***/
  "./src/app/components/admin/reports-details/reports-details/reports-details.component.css":
  /*!************************************************************************************************!*\
    !*** ./src/app/components/admin/reports-details/reports-details/reports-details.component.css ***!
    \************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminReportsDetailsReportsDetailsReportsDetailsComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW4vcmVwb3J0cy1kZXRhaWxzL3JlcG9ydHMtZGV0YWlscy9yZXBvcnRzLWRldGFpbHMuY29tcG9uZW50LmNzcyJ9 */";
    /***/
  },

  /***/
  "./src/app/components/admin/reports-details/reports-details/reports-details.component.ts":
  /*!***********************************************************************************************!*\
    !*** ./src/app/components/admin/reports-details/reports-details/reports-details.component.ts ***!
    \***********************************************************************************************/

  /*! exports provided: ReportsDetailsComponent */

  /***/
  function srcAppComponentsAdminReportsDetailsReportsDetailsReportsDetailsComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ReportsDetailsComponent", function () {
      return ReportsDetailsComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var ngx_device_detector__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ngx-device-detector */
    "./node_modules/ngx-device-detector/fesm2015/ngx-device-detector.js");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../../../../../environments/environment */
    "./src/environments/environment.ts"); // import { DownloadDetailsComponent } from './download-details/download-details.component';


    var ReportsDetailsComponent = /*#__PURE__*/function () {
      // lib list end
      function ReportsDetailsComponent(router, cookieService, http, activatedRoute, dialog, deviceService, matSnackBar) {
        var _this97 = this;

        _classCallCheck(this, ReportsDetailsComponent);

        this.router = router;
        this.cookieService = cookieService;
        this.http = http;
        this.activatedRoute = activatedRoute;
        this.dialog = dialog;
        this.deviceService = deviceService;
        this.matSnackBar = matSnackBar;
        this.loginUserData = {};
        this.jwtToken = "";
        this.user = {};
        this.htmlText = {
          headerText: "Patient Reports"
        };
        this.allResolveData = {};
        this.shareDetails = {
          baseUrl: _environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].doctorSignUpBaseUrl,
          userId: ""
        }; // Lib list

        this.allBillerData = [];
        this.billerData_count = 0;
        this.allUserData_skip = ["_id", "report_file_type", "tech_id", "tech_email", "batch_name", "report_type", "status", "file_basepath", "file_bucketname", "file_name", "file_original_name", "file_type", "converted_image", "images", "patient_details", "patient_name_search", "report_life_circle", "note", "additional_potential_health_risks", "cpt_codes", "created_at", "doctor_name"];
        this.editUrl = "admin/biller-management/edit";
        this.libdata = {
          footersettings: [{
            key: 'f0',
            data: '',
            colspan: 1
          }, {
            key: 'f1',
            data: '',
            colspan: 4
          }, {
            key: 'f2',
            data: 'Total:',
            colspan: 1
          }, {
            key: 'f4',
            data: '',
            colspan: 2
          }, {
            key: 'f3',
            data: 'Total:',
            colspan: 2
          }],
          basecondition: "",
          updateendpoint: 'status-update',
          hideeditbutton: true,
          hidedeletebutton: true,
          hidedeletemany: true,
          hidestatustogglebutton: true,
          hideviewbutton: true,
          custombuttons: [{
            label: "View Report",
            route: "admin/view-patient-record/",
            type: 'internallink',
            param: ['_id']
          }, {
            label: "Download Report",
            link: _environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].s3bucket + "reports",
            type: 'externallink',
            paramtype: 'angular',
            param: ['download_file_name']
          }, {
            label: "Tech Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-tech-details',
            // otherparam:["patient_name"],
            //cond:'status',
            //condval:0,
            datafields: ['first name', 'last name', 'email', 'phone', 'address', 'city', 'state', 'zip'],
            param: 'id',
            headermessage: 'Tech Information'
          }, {
            label: "View Codes",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-codes-details',
            datafields: ['Additional Potential Health Risks', 'CPT Codes', 'ICD Codes'],
            // otherparam:["patient_name"],
            //cond:'status',
            //condval:0,
            param: 'id',
            headermessage: 'Associated Codes'
          }, {
            label: "Doctor Office Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-doctor-office-details',
            datafields: ['center name', 'first name', 'last name', 'email', 'phone', 'address', 'city', 'state', 'zip'],
            // otherparam:["patient_name"],
            //cond:'status',
            //condval:0,
            param: 'id',
            headermessage: 'Doctor Office Info'
          }, {
            label: "Parent Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-parent-details',
            datafields: ['Parent Name', 'Contact Person', 'email', 'phone', 'address', 'city', 'state', 'zip'],
            // otherparam:["patient_name"],
            cond: 'parent_check_flag',
            condval: 1,
            param: 'id',
            headermessage: 'Parent Information'
          }],
          tableheaders: ["patient_name", // "tech_name",
          "status_text", "created_at_datetime", "cpt_addl", "general_details", "cpt_amount", "total_cpt_amount" // "parent_type",`
          // "parent_id",
          // "doctors_office_id",
          ]
        };
        this.allUserData_modify_header = {
          "general_details": "Related Info",
          // "tech_name": "Tech Name",
          "patient_name": "Patient Name",
          "status_text": "Status",
          "created_at_datetime": "Report Added",
          "cpt_addl": "CPT/ Addl Hrisk C",
          "cpt_amount": "Per CPT Validate Amount($)",
          "total_cpt_amount": "Total Validate Amount($)" // "addl_hlth_risk": "Addl Hlth Risk"

        };
        this.UpdateEndpoint = "addorupdatedata";
        this.deleteEndpoint = "deletesingledata";
        this.apiUrl = _environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].apiBaseUrl1;
        this.tableName = "data_pece";
        this.datacollection = 'getPatientreport';
        this.sortdata = {
          "type": 'desc',
          "field": 'patient_name',
          "options": ['patient_name']
        };
        this.limitcond = {
          "limit": 10,
          "skip": 0,
          "pagecount": 1
        };
        this.previewModal_detail_skip = ['_id', 'user_type', 'status', 'password', 'created_at'];
        this.status = [{
          val: "Biller Admin Approved",
          'name': 'Biller Admin Approved'
        }, {
          val: "Biller Admin Not Approved",
          'name': 'Biller Admin Not Approved'
        }, {
          val: "Biller Admin Hold",
          'name': "Biller Admin Hold"
        }];
        this.cptcodes = [{
          val: "95923",
          'name': '95923'
        }, {
          val: "95943",
          'name': '95943'
        }, {
          val: "95921",
          'name': "95921"
        }, {
          val: "93923",
          'name': "93923"
        }, {
          val: "93922",
          'name': "93922"
        }];
        this.parent_type = [{
          val: "admin",
          'name': 'Admin'
        }, {
          val: "diagnostic_admin",
          'name': 'Diagnostic Admin'
        }, {
          val: "distributors",
          'name': 'Distributor'
        }, {
          val: "doctor_group",
          'name': 'Doctor Group'
        }];
        this.report_type = [{
          val: "RM-3A",
          'name': 'RM-3A'
        }, {
          val: "TM FLOW V3",
          'name': 'TM FLOW V3'
        }, {
          val: "TM FLOW V4",
          'name': 'TM FLOW V4'
        }, {
          val: "CMAT with BP Cuffs",
          'name': 'CMAT with BP Cuffs'
        }];
        this.SearchingEndpoint = "datalist";
        this.authval = [];
        this.docofficeval = [];
        this.techval = [];
        this.parentnameval = [];
        this.doctorcity = [];
        this.doctorstate = [];
        this.patientcity = [];
        this.patientstate = [];
        this.SearchingSourceName = "data_biller_list";
        this.search_settings = {
          selectsearch: [{
            label: 'Search By Report Type',
            field: 'report_file_type',
            values: this.report_type
          }, {
            label: "Search By Patient City",
            field: 'patient_state_search',
            values: this.patientcity
          }, {
            label: "Search By Doctor",
            field: 'doc_name_search',
            values: this.authval
          }, {
            label: "Search By Tech",
            field: 'tech_name_search',
            values: this.techval
          }, {
            label: "Search By Doctor Office",
            field: 'doctor_ofiice_name_search',
            values: this.docofficeval
          }, {
            label: "Search By Parent Name",
            field: 'parent_name_search',
            values: this.parentnameval
          }, {
            label: "Search By Doctor City",
            field: 'doctor_city_search',
            values: this.doctorcity
          }, {
            label: "Search By Doctor State",
            field: 'doctor_state_search',
            values: this.doctorstate
          }, {
            label: "Search By Patient State",
            field: 'patient_city_search',
            values: this.patientstate
          }],
          datesearch: [{
            startdatelabel: "Start Date",
            enddatelabel: "End Date",
            submit: "Search",
            field: "created_at_datetime"
          }],
          textsearch: [{
            label: "Search By Patient Name",
            field: 'patient_name_search'
          }],
          // { label: "Search By E-Mail", field: 'email' }, { label: "Search By Parent Name", field: 'parent_search' }, { label: "Search By Company Name", field: 'company_search' }],
          search: [{
            label: 'Search By CPT Codes',
            field: 'cpt_codes_search',
            values: this.cptcodes
          }]
        };
        this.loginUserData["user_details"] = cookieService.getAll();
        this.loginUserData.user_details.user_details = JSON.parse(this.loginUserData.user_details.user_details);
        this.shareDetails.userId = this.loginUserData.user_details.user_details._id;
        this.shareDetails.user_type = this.loginUserData.user_details.user_details.user_type;
        this.loginUserData["jwtToken"] = cookieService.get('jwtToken');
        /* Get Auth Token */

        this.jwtToken = cookieService.get('jwtToken');

        if (this.loginUserData.user_details.user_details.user_type == "doctor") {
          this.user = {
            doctor_id: this.loginUserData.user_details.user_details._id,
            status: 11
          };
          this.libdata.custombuttons[0].route = "doctor/patient-record/";
          this.search_settings.selectsearch.splice(2, 1);
          this.search_settings.selectsearch.splice(6, 1);
          this.search_settings.selectsearch.splice(7, 1);
        } else if (this.loginUserData.user_details.user_details.user_type == "diagnostic_admin") {
          this.search_settings.selectsearch.splice(5, 1);
          this.libdata.custombuttons[0].route = "diagnostic-admin/patient-record/";
          this.user = {
            parent_id: this.loginUserData.user_details.user_details._id,
            status: {
              "$in": [11, 14, 15]
            }
          };
        } else if (this.loginUserData.user_details.user_details.user_type == "doctor_group") {
          this.search_settings.selectsearch.splice(5, 1);
          this.libdata.custombuttons[0].route = "doctor-group/view-patient-record/";
          this.user = {
            parent_id: this.loginUserData.user_details.user_details._id,
            status: {
              "$in": [11, 14, 15]
            }
          };
        } else if (this.loginUserData.user_details.user_details.user_type == "distributors") {
          this.search_settings.selectsearch.splice(5, 1);
          this.libdata.custombuttons[0].route = "distributors/view-patient-record/";
          this.user = {
            parent_id: this.loginUserData.user_details.user_details._id,
            status: {
              "$in": [11, 14, 15]
            }
          };
        } else {
          this.user = {
            parent_id: this.activatedRoute.snapshot.params._id
          };
        }
        /* Get resolve data */
        // this.activatedRoute.data.subscribe(resolveData => {
        // this.allResolveData = resolveData.dataCount.data.dashboardCount[0];
        //this.viewReportProcessData(this.htmlText.headerText);
        // });


        this.libdata.basecondition = this.user; // lib list

        console.log("+++", this.user);
        var endpoint = 'getPatientreport';
        var endpointc = 'getPatientreport-count';
        var data = {
          "condition": {
            "limit": 10,
            "skip": 0
          },
          sort: {
            "type": 'desc',
            "field": 'patient_name'
          },
          data: this.user
        };
        this.http.httpViaPostbyApi1(endpointc, data).subscribe(function (res) {
          _this97.billerData_count = res.count;
        }, function (error) {
          console.log('Oooops!');
        });
        this.http.httpViaPostbyApi1(endpoint, data).subscribe(function (res) {
          // console.log(res.amount);
          _this97.allBillerData = res.results.res; // this.libdata.footersettings[2].data = 'Total:'+res.amount+'';
          // this.libdata.footersettings[4].data = 'Total:'+res.total+'';
        }, function (error) {
          console.log('Oooops!');
        });
      }

      _createClass(ReportsDetailsComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this98 = this;

          var data = {
            "data": this.user
          }; // data.condition = this.user;

          this.http.httpViaPostbyApi1("datalist-report", data).subscribe(function (response) {
            var start = false;
            var count = 0;
            _this98.libdata.footersettings[2].data = 'Total:' + response.amount + '';
            _this98.libdata.footersettings[4].data = 'Total:' + response.total + '';

            for (var i in response.res) {
              if (response.res[i].doc_name_search != "") {
                for (var j in _this98.authval) {
                  if (response.res[i].doc_name == _this98.authval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this98.authval.push({
                    name: response.res[i].doc_name,
                    val: response.res[i].doc_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].tech_name_search != "") {
                for (var j in _this98.techval) {
                  if (response.res[i].tech_namesearch == _this98.techval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this98.techval.push({
                    name: response.res[i].tech_namesearch,
                    val: response.res[i].tech_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].parent_name_search != "") {
                for (var j in _this98.parentnameval) {
                  if (response.res[i].parent_namesearch == _this98.parentnameval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this98.parentnameval.push({
                    name: response.res[i].parent_namesearch,
                    val: response.res[i].parent_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].doctor_state_search != "") {
                for (var j in _this98.doctorstate) {
                  if (response.res[i].doctor_state == _this98.doctorstate[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this98.doctorstate.push({
                    name: response.res[i].doctor_state,
                    val: response.res[i].doctor_state_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].doctor_city_search != "") {
                for (var j in _this98.doctorcity) {
                  if (response.res[i].doctor_city == _this98.doctorcity[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this98.doctorcity.push({
                    name: response.res[i].doctor_city,
                    val: response.res[i].doctor_city_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].patient_city_search != "") {
                for (var j in _this98.patientcity) {
                  if (response.res[i].patient_city == _this98.patientcity[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this98.patientcity.push({
                    name: response.res[i].patient_city,
                    val: response.res[i].patient_city_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].patient_state_search != "") {
                for (var j in _this98.patientstate) {
                  if (response.res[i].patient_state == _this98.patientstate[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this98.patientstate.push({
                    name: response.res[i].patient_state,
                    val: response.res[i].patient_state_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].doctor_ofiice_name_search != "") {
                for (var j in _this98.docofficeval) {
                  if (response.res[i].doctor_ofiice_namesearch == _this98.docofficeval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this98.docofficeval.push({
                    name: response.res[i].doctor_ofiice_namesearch,
                    val: response.res[i].doctor_ofiice_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }
          }, function (error) {
            console.log('Oooops!');
          });
        }
      }, {
        key: "ngAfterViewInit",
        value: function ngAfterViewInit() {}
      }, {
        key: "viewReportProcessData",
        value: function viewReportProcessData(flag) {
          console.log(flag);
        }
      }]);

      return ReportsDetailsComponent;
    }();

    ReportsDetailsComponent.ctorParameters = function () {
      return [{
        type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__["HttpServiceService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatDialog"]
      }, {
        type: ngx_device_detector__WEBPACK_IMPORTED_MODULE_6__["DeviceDetectorService"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatSnackBar"]
      }];
    };

    ReportsDetailsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-reports-details',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./reports-details.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/reports-details/reports-details/reports-details.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./reports-details.component.css */
      "./src/app/components/admin/reports-details/reports-details/reports-details.component.css"))["default"]]
    })], ReportsDetailsComponent);
    /***/
  },

  /***/
  "./src/app/components/admin/sales-person-management/add-edit-sales-person/add-edit-sales-person.component.css":
  /*!********************************************************************************************************************!*\
    !*** ./src/app/components/admin/sales-person-management/add-edit-sales-person/add-edit-sales-person.component.css ***!
    \********************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminSalesPersonManagementAddEditSalesPersonAddEditSalesPersonComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW4vc2FsZXMtcGVyc29uLW1hbmFnZW1lbnQvYWRkLWVkaXQtc2FsZXMtcGVyc29uL2FkZC1lZGl0LXNhbGVzLXBlcnNvbi5jb21wb25lbnQuY3NzIn0= */";
    /***/
  },

  /***/
  "./src/app/components/admin/sales-person-management/add-edit-sales-person/add-edit-sales-person.component.ts":
  /*!*******************************************************************************************************************!*\
    !*** ./src/app/components/admin/sales-person-management/add-edit-sales-person/add-edit-sales-person.component.ts ***!
    \*******************************************************************************************************************/

  /*! exports provided: AddEditSalesPersonComponent, SRDialogtest */

  /***/
  function srcAppComponentsAdminSalesPersonManagementAddEditSalesPersonAddEditSalesPersonComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AddEditSalesPersonComponent", function () {
      return AddEditSalesPersonComponent;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "SRDialogtest", function () {
      return SRDialogtest;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var _class_common_common_function__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../../../../class/common/common-function */
    "./src/app/class/common/common-function.ts");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ../../../../../environments/environment */
    "./src/environments/environment.ts");

    var AddEditSalesPersonComponent = /*#__PURE__*/function () {
      function AddEditSalesPersonComponent(fb, activeRoute, router, httpService, datePipe, cookie, snackBar, commonFunction, dialog) {
        _classCallCheck(this, AddEditSalesPersonComponent);

        this.fb = fb;
        this.activeRoute = activeRoute;
        this.router = router;
        this.httpService = httpService;
        this.datePipe = datePipe;
        this.cookie = cookie;
        this.snackBar = snackBar;
        this.commonFunction = commonFunction;
        this.dialog = dialog;
        this.params_id = '';
        this.htmlText = {
          userData: "",
          header: 'Add New Sales Person',
          nav: 'Add Sales Person',
          buttonText: 'Save',
          message: "Submitted Successfully",
          states: "",
          allCities: "",
          cities: "",
          parent_type: [{
            name: "Distributor",
            value: "distributor"
          }, {
            name: "DiagnosticAdmin",
            value: "diagnostic_admin"
          }]
        };
        this.htmlText.userData = cookie.getAll();
        this.htmlText.userData.user_details = JSON.parse(this.htmlText.userData.user_details);
        this.allStateCityData();

        if (this.activeRoute.snapshot.params._id) {
          this.generateAddEditForm('edit');
          this.htmlText.message = "Updated Successfully";
          this.htmlText.header = 'Edit Sales Person Record';
          this.htmlText.nav = 'Edit Sales Person';
          this.htmlText.buttonText = 'Update';
          this.params_id = this.activeRoute.snapshot.params._id;
        } else {
          this.generateAddEditForm('add');
        }
      }

      _createClass(AddEditSalesPersonComponent, [{
        key: "generateAddEditForm",
        value: function generateAddEditForm() {
          var _this99 = this;

          var flag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
          var validateRule = {
            id: ['', []],
            firstname: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(50)]],
            lastname: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(50)]],
            email: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].email, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(100)]],
            parent_type: ['admin', []],
            parent_id: ['', []],
            phone: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(7), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(16)]],
            address: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(200)]],
            zip: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(4), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(18)]],
            city: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
            state: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
            user_type: ['sales_person', []],
            status: ['', []],
            password: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(16), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(6)]],
            confirmpassword: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]]
          };
          var passwordRule = {
            validators: this.matchpassword('password', 'confirmpassword')
          };

          switch (flag) {
            case 'edit':
              delete validateRule.password;
              delete validateRule.confirmpassword;
              this.SalesPersonManagementAddEditForm = this.fb.group(validateRule);
              this.activeRoute.data.forEach(function (data) {
                var billerDetails = data.techData.res;
                setTimeout(function () {
                  _this99.getCity(billerDetails[0].state);
                }, 1000);

                _this99.SalesPersonManagementAddEditForm.controls['id'].patchValue(billerDetails[0]._id);

                _this99.SalesPersonManagementAddEditForm.controls['firstname'].patchValue(billerDetails[0].firstname);

                _this99.SalesPersonManagementAddEditForm.controls['lastname'].patchValue(billerDetails[0].lastname);

                _this99.SalesPersonManagementAddEditForm.controls['email'].patchValue(billerDetails[0].email);

                _this99.getParentData(billerDetails[0].parent_type); //  this.getCity(doctorDetails[0].state);
                // this.getCityByName(doctorDetails[0].state);


                setTimeout(function () {
                  // getCityByName
                  _this99.SalesPersonManagementAddEditForm.controls['parent_type'].patchValue(billerDetails[0].parent_type);

                  if (_this99.htmlText.userData.user_details.user_type == 'admin') {
                    _this99.SalesPersonManagementAddEditForm.controls['parent_id'].patchValue(billerDetails[0].parent_id);
                  }
                }, 2000);

                _this99.SalesPersonManagementAddEditForm.controls['phone'].patchValue(billerDetails[0].phone);

                _this99.SalesPersonManagementAddEditForm.controls['address'].patchValue(billerDetails[0].address);

                _this99.SalesPersonManagementAddEditForm.controls['zip'].patchValue(billerDetails[0].zip);

                _this99.SalesPersonManagementAddEditForm.controls['city'].patchValue(billerDetails[0].city);

                _this99.SalesPersonManagementAddEditForm.controls['state'].patchValue(billerDetails[0].state);

                _this99.SalesPersonManagementAddEditForm.controls['status'].patchValue(billerDetails[0].status);
              });
              break;

            case 'add':
              delete validateRule.id;
              this.SalesPersonManagementAddEditForm = this.fb.group(validateRule);
              break;
          }
        }
      }, {
        key: "ngOnInit",
        value: function ngOnInit() {}
      }, {
        key: "matchpassword",
        value: function matchpassword(passwordkye, confirmpasswordkye) {
          return function (group) {
            var passwordInput = group.controls[passwordkye],
                confirmpasswordInput = group.controls[confirmpasswordkye];

            if (passwordInput.value !== confirmpasswordInput.value) {
              return confirmpasswordInput.setErrors({
                notEquivalent: true
              });
            } else {
              return confirmpasswordInput.setErrors(null);
            }
          };
        }
      }, {
        key: "openDialog",
        value: function openDialog(x) {
          this.dialogRef = this.dialog.open(SRDialogtest, {
            data: {
              message: x,
              'id': this.params_id
            }
          });
          this.dialogRef.afterClosed().subscribe(function (result) {});
        }
        /**for validation purpose**/

      }, {
        key: "inputUntouch",
        value: function inputUntouch(form, val) {
          form.controls[val].markAsUntouched();
        }
        /**for validation purpose**/

        /**for getting all states & cities function start here**/

      }, {
        key: "allStateCityData",
        value: function allStateCityData() {
          var _this100 = this;

          this.httpService.getSiteSettingData("./assets/data-set/state.json").subscribe(function (response) {
            _this100.htmlText.states = response; // this.getResolveData();
          });
          this.httpService.getSiteSettingData("./assets/data-set/city.json").subscribe(function (response) {
            _this100.htmlText.allCities = response;
          });
        }
        /**for getting all states & cities  function end here**/

      }, {
        key: "getCity",
        value: function getCity(event) {
          var val = event;
          this.htmlText.cities = this.htmlText.allCities[val];
        }
      }, {
        key: "getCityByName",
        value: function getCityByName(stateName) {
          this.htmlText.cities = this.htmlText.allCities[stateName];
        }
      }, {
        key: "getParentData",
        value: function getParentData() {
          var _this101 = this;

          var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
          console.log('222222222222', id);
          var billerData = id;
          this.selectionChangeValue = billerData;
          console.log('1111', billerData);

          if (billerData == 'DiagnosticAdmin' || billerData == "diagnostic_admin") {
            // data['diagnostic_admin_id_object'] = this.htmlText.userData.user_details._id;
            var data = {
              "source": "data_pece",
              "condition": {
                "user_type": "diagnostic_admin"
              },
              "token": this.htmlText.userData.jwtToken
            };
          }

          if (billerData == 'Distributor' || billerData == 'distributor') {
            // data['diagnostic_admin_id_object'] = this.htmlText.userData.user_details._id;
            var data = {
              "source": "data_pece",
              "condition": {
                "user_type": "distributors"
              },
              "token": this.htmlText.userData.jwtToken
            };
          }

          if (billerData == 'DoctorGroup' || billerData == "doctor_group") {
            // data['diagnostic_admin_id_object'] = this.htmlText.userData.user_details._id;
            var data = {
              "source": "data_pece",
              "condition": {
                "user_type": "doctor_group"
              },
              "token": this.htmlText.userData.jwtToken
            };
          } // if(this.htmlText.user_details.user_type == 'distributors') {
          //   data['distributor_id_object'] = this.htmlText.userData.user_details._id;
          // }


          this.httpService.httpViaPost('datalist', data).subscribe(function (response) {
            // console.log('+++++++++',response);
            _this101.htmlText.parent_id = response.res; // this.htmlText.parent_id = response;
            // this.htmlText.doctorOfficeData = response.data.doctor_office_data;
            // this.htmlText.billerData = response.data.biller_data;
          });
        }
      }, {
        key: "TechManagementAddFormFormSubmit",
        value: function TechManagementAddFormFormSubmit() {
          var _this102 = this;

          for (var x in this.SalesPersonManagementAddEditForm.controls) {
            this.SalesPersonManagementAddEditForm.controls[x].markAsTouched();
          }

          if (this.SalesPersonManagementAddEditForm.valid) {
            delete this.SalesPersonManagementAddEditForm.value.confirmpassword;

            if (this.SalesPersonManagementAddEditForm.value.status) {
              this.SalesPersonManagementAddEditForm.value.status = parseInt("1");
            } else {
              this.SalesPersonManagementAddEditForm.value.status = parseInt("0");
            }

            var data = {
              "source": "data_pece",
              "data": this.SalesPersonManagementAddEditForm.value,
              "token": this.htmlText.userData.jwtToken,
              "sourceobj": ["parent_id"],
              "domainurl": _environments_environment__WEBPACK_IMPORTED_MODULE_9__["environment"].siteBaseUrl + 'reset-password'
            };

            if (this.htmlText.userData.user_details.user_type == 'diagnostic_admin') {
              data.data["parent_id"] = this.htmlText.userData.user_details._id;
              data.data["parent_type"] = "diagnostic_admin";
              data["sourceobj"] = ["parent_id"];
            }

            if (this.htmlText.userData.user_details.user_type == 'distributors') {
              data.data["parent_id"] = this.htmlText.userData.user_details._id;
              data.data["parent_type"] = "distributor";
              data["sourceobj"] = ["parent_id"];
            }

            this.httpService.httpViaPost("addorupdatedata", data).subscribe(function (response) {
              if (response.status == "success") {
                _this102.snackBar.open(_this102.htmlText.message, 'Ok', {
                  duration: 2000
                });

                _this102.formDirective.resetForm();

                setTimeout(function () {
                  switch (_this102.htmlText.userData.user_details.user_type) {
                    case 'admin':
                      _this102.router.navigateByUrl("admin/sales-person-management");

                      break;

                    case 'diagnostic_admin':
                      _this102.router.navigateByUrl("diagnostic-admin/sales-person-management");

                      break;

                    case 'distributors':
                      _this102.router.navigateByUrl("distributors/sales-person-management");

                      break;
                  }
                }, 1000);
              } else {
                _this102.snackBar.open(response.msg, '', {
                  duration: 2000
                });
              }
            });
          }
        }
      }]);

      return AddEditSalesPersonComponent;
    }();

    AddEditSalesPersonComponent.ctorParameters = function () {
      return [{
        type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__["HttpServiceService"]
      }, {
        type: _angular_common__WEBPACK_IMPORTED_MODULE_5__["DatePipe"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_6__["CookieService"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatSnackBar"]
      }, {
        type: _class_common_common_function__WEBPACK_IMPORTED_MODULE_8__["CommonFunction"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatDialog"]
      }];
    };

    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroupDirective"], {
      "static": false
    })], AddEditSalesPersonComponent.prototype, "formDirective", void 0);
    AddEditSalesPersonComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-add-edit-sales-person',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./add-edit-sales-person.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/sales-person-management/add-edit-sales-person/add-edit-sales-person.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./add-edit-sales-person.component.css */
      "./src/app/components/admin/sales-person-management/add-edit-sales-person/add-edit-sales-person.component.css"))["default"]]
    })], AddEditSalesPersonComponent);
    /**this is only for the Change Password modal in the edit page**/

    var SRDialogtest = /*#__PURE__*/function () {
      function SRDialogtest(dialogRef, fb, httpService, cookie, activeRoute, data) {
        _classCallCheck(this, SRDialogtest);

        this.dialogRef = dialogRef;
        this.fb = fb;
        this.httpService = httpService;
        this.cookie = cookie;
        this.activeRoute = activeRoute;
        this.data = data;
        this.changePwdForm = _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroup"];
        this.params_id = data.id;
        this.user_token = cookie.get('jwtToken');
        this.changePwdForm = this.fb.group({
          password: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(16), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(6)]],
          confirmpassword: []
        }, {
          validators: this.matchpassword('password', 'confirmpassword')
        });
      }

      _createClass(SRDialogtest, [{
        key: "matchpassword",
        value: function matchpassword(passwordkye, confirmpasswordkye) {
          return function (group) {
            var passwordInput = group.controls[passwordkye],
                confirmpasswordInput = group.controls[confirmpasswordkye];

            if (passwordInput.value !== confirmpasswordInput.value) {
              return confirmpasswordInput.setErrors({
                notEquivalent: true
              });
            } else {
              return confirmpasswordInput.setErrors(null);
            }
          };
        }
      }, {
        key: "changePasswordFormSubmit",
        value: function changePasswordFormSubmit() {
          var x;

          for (x in this.changePwdForm.controls) {
            this.changePwdForm.controls[x].markAsTouched();
          }

          if (this.changePwdForm.valid) {
            delete this.changePwdForm.value.confirmpassword;
            var data = {
              "_id": this.params_id,
              "adminflag": 1,
              "newPassword": this.changePwdForm.value.password
            };
            this.httpService.httpViaPost('changepassword', data).subscribe(function (response) {
              console.log("response", response);
            });
          }
        }
      }]);

      return SRDialogtest;
    }();

    SRDialogtest.ctorParameters = function () {
      return [{
        type: _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatDialogRef"]
      }, {
        type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__["HttpServiceService"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_6__["CookieService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"]
      }, {
        type: undefined,
        decorators: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
          args: [_angular_material__WEBPACK_IMPORTED_MODULE_7__["MAT_DIALOG_DATA"]]
        }]
      }];
    };

    SRDialogtest = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'SRDialogtest',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./modal.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/sales-person-management/add-edit-sales-person/modal.html"))["default"]
    }), tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](5, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_7__["MAT_DIALOG_DATA"]))], SRDialogtest);
    /***/
  },

  /***/
  "./src/app/components/admin/sales-person-management/list-sales-person/list-sales-person.component.css":
  /*!************************************************************************************************************!*\
    !*** ./src/app/components/admin/sales-person-management/list-sales-person/list-sales-person.component.css ***!
    \************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminSalesPersonManagementListSalesPersonListSalesPersonComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW4vc2FsZXMtcGVyc29uLW1hbmFnZW1lbnQvbGlzdC1zYWxlcy1wZXJzb24vbGlzdC1zYWxlcy1wZXJzb24uY29tcG9uZW50LmNzcyJ9 */";
    /***/
  },

  /***/
  "./src/app/components/admin/sales-person-management/list-sales-person/list-sales-person.component.ts":
  /*!***********************************************************************************************************!*\
    !*** ./src/app/components/admin/sales-person-management/list-sales-person/list-sales-person.component.ts ***!
    \***********************************************************************************************************/

  /*! exports provided: ListSalesPersonComponent */

  /***/
  function srcAppComponentsAdminSalesPersonManagementListSalesPersonListSalesPersonComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ListSalesPersonComponent", function () {
      return ListSalesPersonComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_common_http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/common/http */
    "./node_modules/@angular/common/fesm2015/http.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _class_common_common_function__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../../../../class/common/common-function */
    "./src/app/class/common/common-function.ts");

    var ListSalesPersonComponent = /*#__PURE__*/function () {
      function ListSalesPersonComponent(cookie, http, httpService, activatedRoute, commonFunction) {
        _classCallCheck(this, ListSalesPersonComponent);

        this.cookie = cookie;
        this.http = http;
        this.httpService = httpService;
        this.activatedRoute = activatedRoute;
        this.commonFunction = commonFunction;
        this.allUserData = [];
        this.salesData_count = 0;
        this.allUserData_skip = ["_id", "address", "zip", "city", "state", "user_type", "password", "created_at", "id", "updated_at", "diagnostic_admin_id", "admin_id", "distributor_id", "doctorgroup_id"];
        this.editUrl = "admin/sales-person-management/edit";
        this.allUserData_modify_header = {
          "firstname": "First Name",
          "lastname": "Last Name",
          "email": "Email",
          "status": "Status",
          "phone": "Phone Number"
        };
        this.previewModal_detail_skip = ["_id", "user_type", "password", "created_at", "id", "updated_at", "diagnostic_admin_id"];
        this.libdata = {
          basecondition: "",
          updateendpoint: 'statusupdate',
          notes: {
            label: "Notes",
            addendpoint: "addnotedata",
            deleteendpoint: "deletenotedata",
            listendpoint: "listnotedata",
            user: "",
            currentuserfullname: " ",
            header: 'fullname'
          },
          // hideeditbutton:true,// all these button options are optional not mandatory
          //hidedeletebutton:true,
          //hideviewbutton:false,
          //hidestatustogglebutton:true,
          // hideaction:true,
          tableheaders: ['firstname', 'lastname', 'email', 'phone', 'status', 'created_date']
        };
        this.UpdateEndpoint = "addorupdatedata";
        this.deleteEndpoint = "deletesingledata";
        this.tableName = "data_pece";
        this.status = [{
          val: 1,
          'name': 'Active'
        }, {
          val: 0,
          'name': 'Inactive'
        }];
        this.parent_type = [{
          val: "admin",
          'name': 'Admin'
        }, {
          val: "diagnostic_admin",
          'name': 'Diagnostic Admin'
        }, {
          val: "distributors",
          'name': 'Distributor'
        }];
        this.SearchingEndpoint = "datalist";
        this.SearchingSourceName = "data_sales_person_list";
        this.datacollection = 'getsaleslistdata';
        this.sortdata = {
          "type": 'desc',
          "field": 'firstname',
          "options": ['firstname']
        };
        this.limitcond = {
          "limit": 10,
          "skip": 0,
          "pagecount": 1
        };
        this.search_settings = {
          selectsearch: [{
            label: 'Search By Status',
            field: 'status',
            values: this.status
          }],
          textsearch: [{
            label: "Search By Name",
            field: 'name_search'
          }, {
            label: "Search By E-Mail",
            field: 'email'
          }]
        };
        this.salesPersonDashboardAllData = [];
        /* Set Meta Data */

        this.commonFunction.setTitleMetaTags();
        this.user_cookie = cookie.get('jwtToken');
        this.userData = JSON.parse(this.cookie.get('user_details'));
        this.libdata.notes.user = this.userData._id;
        this.libdata.notes.currentuserfullname = this.userData.firstname + this.userData.lastname;

        if (this.userData.user_type == 'diagnostic_admin') {
          this.editUrl = 'diagnostic-admin/sales-person-management/edit';
          this.field = {
            'parent_id': this.userData._id
          };
          this.data = this.userData._id;
        }

        if (this.userData.user_type == 'distributors') {
          this.editUrl = 'distributors/sales-person-management/edit';
          this.field = {
            'parent_id': this.userData._id
          };
          this.data = this.userData._id;
        }

        if (this.userData.user_type == 'admin') {
          this.search_settings.textsearch.push({
            label: "Search By Parent Name",
            field: 'parent_name_search'
          });
          this.search_settings.selectsearch.push({
            label: 'Search By Parent Type',
            field: 'parent_type_search',
            values: this.parent_type
          });
          this.libdata.tableheaders.splice(3, 0, "parent_name");
          this.libdata.tableheaders.splice(4, 0, "parent_type");
        }

        this.libdata.basecondition = this.field;
        this.apiUrl = httpService.baseUrl;
      }

      _createClass(ListSalesPersonComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this103 = this;

          this.datasource = '';
          var endpoint = 'getsaleslistdata';
          var endpointc = 'getsaleslistdata-count';
          var data = {
            "condition": {
              "limit": 10,
              "skip": 0
            },
            sort: {
              "type": 'desc',
              "field": 'firstname'
            },
            data: this.fetch
          };

          if (this.userData.user_type == 'diagnostic_admin') {
            this.fetch = {
              'parent_id': this.data
            };
          }

          if (this.userData.user_type == 'distributors') {
            this.fetch = {
              'parent_id': this.data
            };
          }

          data.data = this.fetch;
          this.httpService.httpViaPost(endpointc, data).subscribe(function (res) {
            // console.log('in constructor');
            // console.log(result);
            _this103.salesData_count = res.count; //console.warn('blogData c',res);
          }, function (error) {
            console.log('Oooops!');
          });
          this.httpService.httpViaPost(endpoint, data).subscribe(function (res) {
            _this103.salesPersonDashboardAllData = res.results.res;
          }, function (error) {
            console.log('Oooops!');
          });
        }
      }]);

      return ListSalesPersonComponent;
    }();

    ListSalesPersonComponent.ctorParameters = function () {
      return [{
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__["HttpServiceService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"]
      }, {
        type: _class_common_common_function__WEBPACK_IMPORTED_MODULE_6__["CommonFunction"]
      }];
    };

    ListSalesPersonComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-list-sales-person',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./list-sales-person.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/sales-person-management/list-sales-person/list-sales-person.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./list-sales-person.component.css */
      "./src/app/components/admin/sales-person-management/list-sales-person/list-sales-person.component.css"))["default"]]
    })], ListSalesPersonComponent);
    /***/
  },

  /***/
  "./src/app/components/admin/tech-management/add-edit-tech/add-edit-tech.component.css":
  /*!********************************************************************************************!*\
    !*** ./src/app/components/admin/tech-management/add-edit-tech/add-edit-tech.component.css ***!
    \********************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminTechManagementAddEditTechAddEditTechComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n\n\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW4vdGVjaC1tYW5hZ2VtZW50L2FkZC1lZGl0LXRlY2gvYWRkLWVkaXQtdGVjaC5jb21wb25lbnQuY3NzIn0= */";
    /***/
  },

  /***/
  "./src/app/components/admin/tech-management/add-edit-tech/add-edit-tech.component.ts":
  /*!*******************************************************************************************!*\
    !*** ./src/app/components/admin/tech-management/add-edit-tech/add-edit-tech.component.ts ***!
    \*******************************************************************************************/

  /*! exports provided: AddEditTechComponent, Dialogtest */

  /***/
  function srcAppComponentsAdminTechManagementAddEditTechAddEditTechComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AddEditTechComponent", function () {
      return AddEditTechComponent;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Dialogtest", function () {
      return Dialogtest;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var _class_common_common_function__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../../../../class/common/common-function */
    "./src/app/class/common/common-function.ts");

    var AddEditTechComponent = /*#__PURE__*/function () {
      function AddEditTechComponent(fb, activeRoute, router, httpService, datePipe, cookie, snackBar, commonFunction, dialog) {
        _classCallCheck(this, AddEditTechComponent);

        this.fb = fb;
        this.activeRoute = activeRoute;
        this.router = router;
        this.httpService = httpService;
        this.datePipe = datePipe;
        this.cookie = cookie;
        this.snackBar = snackBar;
        this.commonFunction = commonFunction;
        this.dialog = dialog;
        this.params_id = '';
        this.htmlText = {
          userData: "",
          header: 'Add New Tech',
          nav: 'Add Tech',
          buttonText: 'Save',
          message: "Submitted Successfully",
          states: "",
          allCities: "",
          cities: "",
          parent_type: [{
            name: "Distributor",
            value: "distributor"
          }, {
            name: "DiagnosticAdmin",
            value: "diagnostic_admin"
          }, {
            name: "DoctorGroup",
            value: "doctor_group"
          }]
        };
        this.htmlText.userData = cookie.getAll();
        this.htmlText.userData.user_details = JSON.parse(this.htmlText.userData.user_details);
        this.allStateCityData();

        if (this.activeRoute.snapshot.params._id) {
          this.generateAddEditForm('edit');
          this.htmlText.message = "Updated Successfully";
          this.htmlText.header = 'Edit Tech Record';
          this.htmlText.nav = 'Edit Tech';
          this.htmlText.buttonText = 'Update';
          this.params_id = this.activeRoute.snapshot.params._id;
        } else {
          this.generateAddEditForm('add');
        }
      }

      _createClass(AddEditTechComponent, [{
        key: "generateAddEditForm",
        value: function generateAddEditForm() {
          var _this104 = this;

          var flag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
          var validateRule = {
            id: ['', []],
            firstname: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(50)]],
            lastname: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(50)]],
            email: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].email, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(100)]],
            phone: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(7), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(16)]],
            address: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(200)]],
            zip: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(4), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(18)]],
            city: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
            state: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
            user_type: ['tech', []],
            parent_type: ['admin', []],
            parent_id: ['', []],
            status: ['', []],
            password: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(16), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(6)]],
            confirmpassword: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]]
          };
          var passwordRule = {
            validators: this.matchpassword('password', 'confirmpassword')
          };

          switch (flag) {
            case 'edit':
              delete validateRule.password;
              delete validateRule.confirmpassword;

              if (this.htmlText.userData.user_details.user_type == 'admin') {
                delete validateRule.parent_id;
              }

              this.TechManagementAddEditForm = this.fb.group(validateRule);
              this.activeRoute.data.forEach(function (data) {
                var billerDetails = data.techData.res;
                setTimeout(function () {
                  _this104.getCity(billerDetails[0].state);
                }, 1000);

                _this104.TechManagementAddEditForm.controls['id'].patchValue(billerDetails[0]._id);

                _this104.TechManagementAddEditForm.controls['firstname'].patchValue(billerDetails[0].firstname);

                _this104.TechManagementAddEditForm.controls['lastname'].patchValue(billerDetails[0].lastname);

                _this104.TechManagementAddEditForm.controls['email'].patchValue(billerDetails[0].email);

                _this104.TechManagementAddEditForm.controls['phone'].patchValue(billerDetails[0].phone);

                _this104.TechManagementAddEditForm.controls['address'].patchValue(billerDetails[0].address); // this.getCity(doctorDetails[0].state);


                _this104.getParentData(billerDetails[0].parent_type); //  this.getCity(doctorDetails[0].state);
                // this.getCityByName(doctorDetails[0].state);


                setTimeout(function () {
                  // getCityByName
                  _this104.TechManagementAddEditForm.controls['parent_type'].patchValue(billerDetails[0].parent_type);

                  if (_this104.htmlText.userData.user_details.user_type == 'admin') {
                    _this104.TechManagementAddEditForm.controls['parent_id'].patchValue(billerDetails[0].parent_id);
                  }
                }, 2000);

                _this104.TechManagementAddEditForm.controls['zip'].patchValue(billerDetails[0].zip);

                _this104.TechManagementAddEditForm.controls['city'].patchValue(billerDetails[0].city);

                _this104.TechManagementAddEditForm.controls['state'].patchValue(billerDetails[0].state);

                _this104.TechManagementAddEditForm.controls['status'].patchValue(billerDetails[0].status);
              });
              break;

            case 'add':
              delete validateRule.id;
              this.TechManagementAddEditForm = this.fb.group(validateRule);
              break;
          }
        }
      }, {
        key: "ngOnInit",
        value: function ngOnInit() {}
      }, {
        key: "matchpassword",
        value: function matchpassword(passwordkye, confirmpasswordkye) {
          return function (group) {
            var passwordInput = group.controls[passwordkye],
                confirmpasswordInput = group.controls[confirmpasswordkye];

            if (passwordInput.value !== confirmpasswordInput.value) {
              return confirmpasswordInput.setErrors({
                notEquivalent: true
              });
            } else {
              return confirmpasswordInput.setErrors(null);
            }
          };
        }
      }, {
        key: "openDialog",
        value: function openDialog(x) {
          this.dialogRef = this.dialog.open(Dialogtest, {
            data: {
              message: x,
              'id': this.params_id
            }
          });
          this.dialogRef.afterClosed().subscribe(function (result) {});
        }
        /**for validation purpose**/

      }, {
        key: "inputUntouch",
        value: function inputUntouch(form, val) {
          form.controls[val].markAsUntouched();
        }
        /**for validation purpose**/

        /**for getting all states & cities function start here**/

      }, {
        key: "allStateCityData",
        value: function allStateCityData() {
          var _this105 = this;

          this.httpService.getSiteSettingData("./assets/data-set/state.json").subscribe(function (response) {
            _this105.htmlText.states = response; // this.getResolveData();
          });
          this.httpService.getSiteSettingData("./assets/data-set/city.json").subscribe(function (response) {
            _this105.htmlText.allCities = response;
          });
        }
        /**for getting all states & cities  function end here**/

      }, {
        key: "getCity",
        value: function getCity(event) {
          var val = event;
          this.htmlText.cities = this.htmlText.allCities[val];
        }
      }, {
        key: "getCityByName",
        value: function getCityByName(stateName) {
          this.htmlText.cities = this.htmlText.allCities[stateName];
        }
      }, {
        key: "getParentData",
        value: function getParentData() {
          var _this106 = this;

          var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
          console.log('222222222222', id);
          var billerData = id;
          this.selectionChangeValue = billerData;
          console.log('1111', billerData);

          if (billerData == 'DiagnosticAdmin' || billerData == "diagnostic_admin") {
            // data['diagnostic_admin_id_object'] = this.htmlText.userData.user_details._id;
            var data = {
              "source": "data_pece",
              "condition": {
                "user_type": "diagnostic_admin"
              },
              "token": this.htmlText.userData.jwtToken
            };
          }

          if (billerData == 'Distributor' || billerData == 'distributor') {
            // data['diagnostic_admin_id_object'] = this.htmlText.userData.user_details._id;
            var data = {
              "source": "data_pece",
              "condition": {
                "user_type": "distributors"
              },
              "token": this.htmlText.userData.jwtToken
            };
          }

          if (billerData == 'DoctorGroup' || billerData == "doctor_group") {
            // data['diagnostic_admin_id_object'] = this.htmlText.userData.user_details._id;
            var data = {
              "source": "data_pece",
              "condition": {
                "user_type": "doctor_group"
              },
              "token": this.htmlText.userData.jwtToken
            };
          } // if(this.htmlText.user_details.user_type == 'distributors') {
          //   data['distributor_id_object'] = this.htmlText.userData.user_details._id;
          // }


          this.httpService.httpViaPost('datalist', data).subscribe(function (response) {
            // console.log('+++++++++',response);
            _this106.htmlText.parent_id = response.res; // this.htmlText.parent_id = response;
            // this.htmlText.doctorOfficeData = response.data.doctor_office_data;
            // this.htmlText.billerData = response.data.biller_data;
          });
        }
      }, {
        key: "TechManagementAddFormFormSubmit",
        value: function TechManagementAddFormFormSubmit() {
          var _this107 = this;

          for (var x in this.TechManagementAddEditForm.controls) {
            this.TechManagementAddEditForm.controls[x].markAsTouched();
          }

          if (this.TechManagementAddEditForm.valid) {
            delete this.TechManagementAddEditForm.value.confirmpassword;

            if (this.TechManagementAddEditForm.value.status) {
              this.TechManagementAddEditForm.value.status = parseInt("1");
            } else {
              this.TechManagementAddEditForm.value.status = parseInt("0");
            }

            var data = {
              "source": "data_pece",
              "data": this.TechManagementAddEditForm.value,
              "token": this.htmlText.userData.jwtToken,
              "sourceobj": ["parent_id"]
            };

            if (this.htmlText.userData.user_details.user_type == 'diagnostic_admin') {
              data.data["parent_id"] = this.htmlText.userData.user_details._id;
              data.data["parent_type"] = "diagnostic_admin";
              data["sourceobj"] = ["parent_id"];
            }

            if (this.htmlText.userData.user_details.user_type == 'doctor') {
              data.data["doctor_id"] = this.htmlText.userData.user_details._id;
              data["sourceobj"] = ["doctor_id"];
            }

            if (this.htmlText.userData.user_details.user_type == 'doctor_group') {
              data.data["parent_id"] = this.htmlText.userData.user_details._id;
              data.data["parent_type"] = "doctor_group";
              data["sourceobj"] = ["parent_id"];
            }

            if (this.htmlText.userData.user_details.user_type == 'distributors') {
              data.data["parent_id"] = this.htmlText.userData.user_details._id;
              data.data["parent_type"] = "distributor";
              data["sourceobj"] = ["parent_id"];
            }

            if (this.htmlText.userData.user_details.user_type != 'doctor') {
              this.httpService.httpViaPost("addorupdatedata", data).subscribe(function (response) {
                if (response.status == "success") {
                  _this107.snackBar.open(_this107.htmlText.message, 'Ok', {
                    duration: 2000
                  });

                  _this107.formDirective.resetForm();

                  setTimeout(function () {
                    switch (_this107.htmlText.userData.user_details.user_type) {
                      case 'admin':
                        _this107.router.navigateByUrl("admin/tech-management");

                        break;

                      case 'diagnostic_admin':
                        _this107.router.navigateByUrl("diagnostic-admin/tech-management");

                        break;

                      case 'doctor_group':
                        _this107.router.navigateByUrl("doctor-group/tech-management");

                        break;

                      case 'distributors':
                        _this107.router.navigateByUrl("distributors/tech-management");

                        break;
                    }
                  }, 1000);
                } else {
                  _this107.snackBar.open(response.msg, '', {
                    duration: 2000
                  });
                }
              });
            } else {
              data.data["parent_id"] = this.htmlText.userData.user_details._id;
              data.data["parent_type"] = "doctor";
              data["sourceobj"] = ["parent_id"];
              data["doctorid"] = this.htmlText.userData.user_details._id;
              this.httpService.httpViaPost("add-tech-data", data).subscribe(function (response) {
                if (response.status == "success") {
                  _this107.snackBar.open(_this107.htmlText.message, 'Ok', {
                    duration: 2000
                  });

                  _this107.formDirective.resetForm();

                  setTimeout(function () {
                    switch (_this107.htmlText.userData.user_details.user_type) {
                      case 'admin':
                        _this107.router.navigateByUrl("admin/tech-management");

                        break;

                      case 'diagnostic_admin':
                        _this107.router.navigateByUrl("diagnostic-admin/tech-management");

                        break;

                      case 'doctor_group':
                        _this107.router.navigateByUrl("doctor-group/tech-management");

                        break;

                      case 'distributors':
                        _this107.router.navigateByUrl("distributors/tech-management");

                        break;

                      case 'doctor':
                        _this107.router.navigateByUrl("doctor/tech-management");

                        break;
                    }
                  }, 1000);
                } else {
                  _this107.snackBar.open(response.msg, '', {
                    duration: 2000
                  });
                }
              });
            }
          }
        }
      }]);

      return AddEditTechComponent;
    }();

    AddEditTechComponent.ctorParameters = function () {
      return [{
        type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__["HttpServiceService"]
      }, {
        type: _angular_common__WEBPACK_IMPORTED_MODULE_5__["DatePipe"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_6__["CookieService"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatSnackBar"]
      }, {
        type: _class_common_common_function__WEBPACK_IMPORTED_MODULE_8__["CommonFunction"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatDialog"]
      }];
    };

    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroupDirective"], {
      "static": false
    })], AddEditTechComponent.prototype, "formDirective", void 0);
    AddEditTechComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-add-edit-tech',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./add-edit-tech.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/tech-management/add-edit-tech/add-edit-tech.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./add-edit-tech.component.css */
      "./src/app/components/admin/tech-management/add-edit-tech/add-edit-tech.component.css"))["default"]]
    })], AddEditTechComponent);
    /**this is only for the Change Password modal in the edit page**/

    var Dialogtest = /*#__PURE__*/function () {
      function Dialogtest(dialogRef, fb, httpService, cookie, activeRoute, data) {
        _classCallCheck(this, Dialogtest);

        this.dialogRef = dialogRef;
        this.fb = fb;
        this.httpService = httpService;
        this.cookie = cookie;
        this.activeRoute = activeRoute;
        this.data = data;
        this.changePwdForm = _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroup"];
        this.params_id = data.id;
        this.user_token = cookie.get('jwtToken');
        this.changePwdForm = this.fb.group({
          password: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(16), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(6)]],
          confirmpassword: []
        }, {
          validators: this.matchpassword('password', 'confirmpassword')
        });
      }

      _createClass(Dialogtest, [{
        key: "matchpassword",
        value: function matchpassword(passwordkye, confirmpasswordkye) {
          return function (group) {
            var passwordInput = group.controls[passwordkye],
                confirmpasswordInput = group.controls[confirmpasswordkye];

            if (passwordInput.value !== confirmpasswordInput.value) {
              return confirmpasswordInput.setErrors({
                notEquivalent: true
              });
            } else {
              return confirmpasswordInput.setErrors(null);
            }
          };
        }
      }, {
        key: "changePasswordFormSubmit",
        value: function changePasswordFormSubmit() {
          var x;

          for (x in this.changePwdForm.controls) {
            this.changePwdForm.controls[x].markAsTouched();
          }

          if (this.changePwdForm.valid) {
            delete this.changePwdForm.value.confirmpassword;
            var data = {
              "_id": this.params_id,
              "adminflag": 1,
              "newPassword": this.changePwdForm.value.password
            };
            this.httpService.httpViaPost('changepassword', data).subscribe(function (response) {
              console.log("response", response);
            });
          }
        }
      }]);

      return Dialogtest;
    }();

    Dialogtest.ctorParameters = function () {
      return [{
        type: _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatDialogRef"]
      }, {
        type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__["HttpServiceService"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_6__["CookieService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"]
      }, {
        type: undefined,
        decorators: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
          args: [_angular_material__WEBPACK_IMPORTED_MODULE_7__["MAT_DIALOG_DATA"]]
        }]
      }];
    };

    Dialogtest = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'dialogtest',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./modal.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/tech-management/add-edit-tech/modal.html"))["default"]
    }), tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](5, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_7__["MAT_DIALOG_DATA"]))], Dialogtest);
    /***/
  },

  /***/
  "./src/app/components/admin/tech-management/listing-tech/listing-tech.component.css":
  /*!******************************************************************************************!*\
    !*** ./src/app/components/admin/tech-management/listing-tech/listing-tech.component.css ***!
    \******************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminTechManagementListingTechListingTechComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW4vdGVjaC1tYW5hZ2VtZW50L2xpc3RpbmctdGVjaC9saXN0aW5nLXRlY2guY29tcG9uZW50LmNzcyJ9 */";
    /***/
  },

  /***/
  "./src/app/components/admin/tech-management/listing-tech/listing-tech.component.ts":
  /*!*****************************************************************************************!*\
    !*** ./src/app/components/admin/tech-management/listing-tech/listing-tech.component.ts ***!
    \*****************************************************************************************/

  /*! exports provided: ListingTechComponent */

  /***/
  function srcAppComponentsAdminTechManagementListingTechListingTechComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ListingTechComponent", function () {
      return ListingTechComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_common_http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/common/http */
    "./node_modules/@angular/common/fesm2015/http.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/material/dialog */
    "./node_modules/@angular/material/esm2015/dialog.js");
    /* harmony import */


    var _common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../../../common/dialog-box/dialog-box.component */
    "./src/app/components/common/dialog-box/dialog-box.component.ts");
    /* harmony import */


    var _class_common_common_function__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../../../../class/common/common-function */
    "./src/app/class/common/common-function.ts");

    var ListingTechComponent = /*#__PURE__*/function () {
      function ListingTechComponent(cookie, http, httpService, activatedRoute, commonFunction, dialog, router) {
        _classCallCheck(this, ListingTechComponent);

        this.cookie = cookie;
        this.http = http;
        this.httpService = httpService;
        this.activatedRoute = activatedRoute;
        this.commonFunction = commonFunction;
        this.dialog = dialog;
        this.router = router;
        this.allUserData = [];
        this.techData_count = 0;
        this.allUserData_skip = ["_id", "address", "zip", "city", "state", "user_type", "password", "created_at", "id", "updated_at", "diagnostic_admin_id", "name_search", "diagnostic_admin_id", "distributor_id", "doctorgroup_id"];
        this.editUrl = "admin/tech-management/edit";
        this.libdata = {
          basecondition: "",
          updateendpoint: 'statusupdate',
          notes: {
            label: "Notes",
            addendpoint: "addnotedata",
            deleteendpoint: "deletenotedata",
            listendpoint: "listnotedata",
            user: "",
            currentuserfullname: " ",
            header: 'fullname'
          },
          // hideeditbutton:true,// all these button options are optional not mandatory
          //hidedeletebutton:true,
          //hideviewbutton:false,
          //hidestatustogglebutton:true,
          // hideaction:true,
          tableheaders: ['firstname', 'lastname', 'email', 'phone', 'status', 'created_date'],
          custombuttons: []
        };
        this.allUserData_modify_header = {
          "firstname": "First Name",
          "lastname": "Last Name",
          "email": "Email",
          "status": "Status",
          "phone": "Phone Number",
          "parent_name": "Parent Name",
          "parent_type": "Parent Type"
        };
        this.previewModal_detail_skip = ["_id", "user_type", "password", "created_at", "id", "updated_at", "diagnostic_admin_id"];
        this.UpdateEndpoint = "addorupdatedata";
        this.deleteEndpoint = "deletesingledata";
        this.tableName = "data_pece";
        this.status = [{
          val: 1,
          'name': 'Active'
        }, {
          val: 0,
          'name': 'Inactive'
        }];
        this.parent_type = [{
          val: "admin",
          'name': 'Admin'
        }, {
          val: "diagnostic_admin",
          'name': 'Diagnostic Admin'
        }, {
          val: "distributor",
          'name': 'Distributors'
        }, {
          val: "doctor_group",
          'name': 'Doctors Group Admin'
        }];
        this.SearchingEndpoint = "datalist";
        this.SearchingSourceName = "data_tech_list";
        this.datacollection = 'gettechlistdata';
        this.sortdata = {
          "type": 'desc',
          "field": 'firstname',
          "options": ['firstname']
        };
        this.limitcond = {
          "limit": 10,
          "skip": 0,
          "pagecount": 1
        };
        this.search_settings = {
          selectsearch: [{
            label: 'Search By Status',
            field: 'status',
            values: this.status
          }],
          textsearch: [{
            label: "Search By Name",
            field: 'name_search'
          }, {
            label: "Search By E-Mail",
            field: 'email'
          }]
        };
        this.TechDashboardAllData = [];
        /* Set Meta Data */

        this.commonFunction.setTitleMetaTags();
        this.user_cookie = cookie.get('jwtToken');

        if (this.activatedRoute.snapshot.routeConfig.path == "admin/doctor/tech-management") {
          this.userData = {
            user_type: "doctor",
            _id: JSON.parse(this.cookie.get('id'))
          };
        } else {
          this.userData = JSON.parse(this.cookie.get('user_details'));
        }

        this.libdata.notes.user = this.userData._id;
        this.libdata.notes.currentuserfullname = this.userData.firstname + this.userData.lastname;

        if (this.userData.user_type == 'diagnostic_admin') {
          this.editUrl = 'diagnostic-admin/tech-management/edit';
          this.field = {
            'parent_id': this.userData._id
          };
          this.data = this.userData._id;
          this.libdata.notes.user = this.userData._id;
          this.libdata.notes.currentuserfullname = this.userData.center_name;
        }

        if (this.userData.user_type == 'doctor') {
          this.editUrl = 'doctor/tech-management/edit';
          this.libdata.basecondition = {
            doctor_id: this.userData._id,
            type: "doctor"
          };
          this.libdata.notes.user = this.userData._id;
          this.libdata.notes.currentuserfullname = this.userData.firstname + this.userData.lastname;
        }

        if (this.userData.user_type == 'doctor_group') {
          this.editUrl = 'doctor-group/tech-management/edit';
          this.field = {
            'parent_id': this.userData._id
          };
          this.data = this.userData._id;
          this.libdata.notes.user = this.userData._id;
          this.libdata.notes.currentuserfullname = this.userData.groupname;
        }

        if (this.userData.user_type == 'distributors') {
          this.editUrl = 'distributors/tech-management/edit';
          this.field = {
            'parent_id': this.userData._id
          };
          this.data = this.userData._id;
          this.libdata.notes.user = this.userData._id;
          this.libdata.notes.currentuserfullname = this.userData.distributorname;
        }

        if (this.userData.user_type == 'admin') {
          this.libdata.custombuttons = {
            label: "Log Me",
            type: 'listner',
            id: 'i1'
          };
          this.search_settings.textsearch.push({
            label: "Search By Parent Name",
            field: 'parent_name_search'
          });
          this.search_settings.selectsearch.push({
            label: 'Search By Parent Type',
            field: 'parent_type_search',
            values: this.parent_type
          });
          this.libdata.tableheaders.splice(3, 0, "parent_name");
          this.libdata.tableheaders.splice(4, 0, "parent_type");
          this.libdata.notes.user = this.userData._id;
          this.libdata.notes.currentuserfullname = this.userData.firstname + this.userData.lastname;
        }

        this.libdata.basecondition = this.field;
        console.log('libdata', this.libdata);
        this.apiUrl = httpService.baseUrl;
      }

      _createClass(ListingTechComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this108 = this;

          this.datasource = '';

          if (this.userData.user_type != "doctor") {
            console.log("if");
            var endpoint = 'gettechlistdata';
            var endpointc = 'gettechlistdata-count';
            var data = {
              "condition": {
                "limit": 10,
                "skip": 0
              },
              sort: {
                "type": 'desc',
                "field": 'firstname'
              },
              data: this.fetch
            };

            if (this.userData.user_type == 'diagnostic_admin') {
              this.fetch = {
                'parent_id': this.data
              };
            }

            if (this.userData.user_type == 'doctor_group') {
              this.fetch = {
                'parent_id': this.data
              };
            }

            if (this.userData.user_type == 'distributors') {
              this.fetch = {
                'parent_id': this.data
              };
            }

            data.data = this.fetch;
            this.httpService.httpViaPost(endpointc, data).subscribe(function (res) {
              // console.log('in constructor');
              // console.log(result);
              _this108.techData_count = res.count; //console.warn('blogData c',res);
            }, function (error) {
              console.log('Oooops!');
            });
            this.httpService.httpViaPost(endpoint, data).subscribe(function (res) {
              _this108.TechDashboardAllData = res.results.res;
            }, function (error) {
              console.log('Oooops!');
            });
          } else {
            console.log("else");
            var _endpoint3 = 'gettechlistdata';
            var _endpointc3 = 'gettechlistdata-count';
            var _data7 = {
              "condition": {
                "limit": 10,
                "skip": 0
              },
              sort: {
                "type": 'desc',
                "field": 'firstname'
              },
              type: "doctor",
              _id: this.userData._id
            };

            if (this.userData.user_type == 'diagnostic_admin') {
              this.fetch = {
                'parent_id': this.data
              };
            }

            if (this.userData.user_type == 'doctor_group') {
              this.fetch = {
                'parent_id': this.data
              };
            }

            if (this.userData.user_type == 'distributors') {
              this.fetch = {
                'parent_id': this.data
              };
            }

            _data7.data = this.fetch;
            this.httpService.httpViaPost(_endpointc3, _data7).subscribe(function (res) {
              // console.log('in constructor');
              // console.log(result);
              _this108.techData_count = res.count; //console.warn('blogData c',res);
            }, function (error) {
              console.log('Oooops!');
            });
            this.httpService.httpViaPost(_endpoint3, _data7).subscribe(function (res) {
              _this108.TechDashboardAllData = res.results.res;
            }, function (error) {
              console.log('Oooops!');
            });
          }
        }
      }, {
        key: "listenLiblistingChange",
        value: function listenLiblistingChange() {
          var _this109 = this;

          var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;

          if (data != null) {
            switch (data.custombuttonclick.btninfo.label) {
              case "Log Me":
                var modalData1 = {
                  panelClass: 'bulkupload-dialog',
                  data: {
                    header: "Alert",
                    message: "Do you want to login as tech : " + data.custombuttonclick.data.firstname + " " + data.custombuttonclick.data.lastname + "?",
                    button1: {
                      text: "Yes"
                    },
                    button2: {
                      text: "No"
                    }
                  }
                };
                var dialogRef1 = this.dialog.open(_common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_7__["DialogBoxComponent"], modalData1);
                dialogRef1.afterClosed().subscribe(function (result) {
                  switch (result) {
                    case "Yes":
                      // Delete Cookie
                      _this109.cookie["delete"]('user_details');

                      _this109.cookie["delete"]('main_user');

                      _this109.cookie["delete"]('jwtToken');

                      _this109.cookie.deleteAll('/');

                      setTimeout(function () {
                        // Reset again Cookie
                        _this109.cookie.set('jwtToken', _this109.user_cookie);

                        _this109.cookie.set('user_details', JSON.stringify(data.custombuttonclick.data));

                        _this109.cookie.set('main_user', JSON.stringify(_this109.userData)); // Redirect to page


                        _this109.router.navigateByUrl("tech/dashboard");
                      }, 500);
                      break;

                    case "No":
                      dialogRef1.close();
                      break;
                  }
                });
                break;
            }
          }
        }
      }]);

      return ListingTechComponent;
    }();

    ListingTechComponent.ctorParameters = function () {
      return [{
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__["HttpServiceService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"]
      }, {
        type: _class_common_common_function__WEBPACK_IMPORTED_MODULE_8__["CommonFunction"]
      }, {
        type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__["MatDialog"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"]
      }];
    };

    ListingTechComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-listing-tech',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./listing-tech.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/tech-management/listing-tech/listing-tech.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./listing-tech.component.css */
      "./src/app/components/admin/tech-management/listing-tech/listing-tech.component.css"))["default"]]
    })], ListingTechComponent);
    /***/
  },

  /***/
  "./src/app/components/admin/user-management/user-add-edit/user-add-edit.component.css":
  /*!********************************************************************************************!*\
    !*** ./src/app/components/admin/user-management/user-add-edit/user-add-edit.component.css ***!
    \********************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminUserManagementUserAddEditUserAddEditComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "/* header css */\n.techdashboard_header .mat-toolbar-row{ height: auto; }\n.techdashboard_header .mat-toolbar-row .logo_wrapper{ max-width: 200px; display: block; }\n.techdashboard_header .mat-toolbar-row .logo_wrapper img{ max-width: 100%; vertical-align: middle; }\n.techdashboard_header .mat-toolbar-row{ justify-content: space-evenly; padding: 0 40px;}\n.techdashboard_header .mat-toolbar-row .quotation { margin-bottom: 0px;}\n.techdashboard_header .mat-toolbar-row .quotation p{ font-family: \"RobotoMedium\"; font-size: 30px; color: #002035; text-transform: uppercase; margin: 0; white-space: normal;\n  text-align: center;}\n.techdashboard_header .mat-toolbar-row .profile_section { display: flex; border-left: 1px solid #e2dede; padding-left: 20px; }\n.techdashboard_header .mat-toolbar-row .profile_section .username{ padding-right: 20px; display: block; }\n/*End header css */\n.add_form{ width: 80%; margin: 20px auto; background: #f3f3f3; padding: 16px 10px; padding-bottom: 25px; border: 1px solid #91e7ff;}\n.add_form .form_wrapper .mat-form-field{ width: 49%; margin: 0.5%; }\n.add_form .form_wrapper textarea{ resize: none;}\n.add_form h2{ font-family: \"RobotoBlack\"; text-transform: uppercase; font-size: 24px; padding: 0 6px; color: #1dbce9; }\n.add_form .submit_form { display: block; width: 100%; text-align: center; margin-top: 30px; }\n.add_form .submit_form button{ border-radius: 5px; background: linear-gradient(180deg, #f9dc19, #daa505); color: #5e3619; text-transform: uppercase; font-family: \"RobotoBlack\"; font-size: 25px; padding: 8px;\nwidth: 390px; border: 3px solid #d59d01; }\n.add_form .submit_form button:nth-child(1){ background: linear-gradient(180deg, #f2be00, #a52a08); color: #f3f3f3; border: 2px solid #bb3c0d; margin-right: 16px; }\n.add_form .return_button { background: #1dbce9; color: #fff; margin-bottom: 12px;}\n@media screen and (max-width: 1460px){\n  .techdashboard_header .mat-toolbar-row .quotation p { font-size: 24px; line-height: 26px;}\n}\n@media screen and (max-width: 1000px){\n  .add_form .submit_form button { width: 48%; }\n}\n@media screen and (max-width: 991px){\n.techdashboard_header .mat-toolbar-row { flex-direction: column; padding: 20px;}\n.techdashboard_header .mat-toolbar-row .quotation p { margin-top: 16px; }\n}\n@media screen and (max-width: 768px){\n  .add_form .form_wrapper .mat-form-field { width: 100%; margin: 0; }\n}\n@media screen and (max-width: 576px){\n.add_form .submit_form button { font-size: 22px; padding: 2px; }\n\n.add_form .submit_form button { width: 100%; margin: 0; margin-top: 20px; }\n.add_form .submit_form { display: flex; flex-direction: column-reverse; text-align: center; margin-top: 0px; }\n.add_form .submit_form button:nth-child(1) { margin-right: 0; margin-top: 20px; }\n}\n@media screen and (max-width: 360px){\n.techdashboard_header .mat-toolbar-row .quotation p { font-size: 16px; line-height: 22px; }\n.add_form h2 { font-size: 22px; line-height: 24px; text-align: center; }\n}\n/* .add_form .test_date_wrapper{ display: inline-block; } */\n.add_form .test_date_wrapper .mat-card-actions, .add_form .test_date_wrapper .mat-card-content, .add_form .test_date_wrapper .mat-card-subtitle {\n  display: inline-flex;\n  margin-bottom: 16px;\n  vertical-align: middle;\n  justify-content: center;\n  align-items: center;\n}\n.add_form .mat-card-content label , .add_form .patient_diagnotes label{ font-family: \"RobotoMedium\"; color: #01090c; font-size: 16px; margin: 0 5px}\n.add_form .mat-card-content label , \n.add_form .patient_diagnotes label{ font-family: \"RobotoMedium\"; color: #01090c; font-size: 15px; margin:10px;line-height: 20px;}\n.add_form .mat-card-content .mat-checkbox { margin: 0 5px; font-family: \"RobotoRegular\";}\n.add_form .mat-card-content ,\n.add_form .patient_diagnotes .mat-form-field { position: relative; text-align: left; margin: 0 10px; }\n.add_form .patient_diagnotes{ width: auto; flex-direction: column; display: flex; margin: 0 8px; border: 2px solid #43cef5; background: #fff; box-sizing: border-box;}\n.add_form .patient_diagnotes{ width: auto; flex-direction: column; display: flex; margin: 0 20px;}\n.add_form .patient_diagnotes .example-full-width textarea{ resize: none; }\n@media screen and (max-width: 1024px){\n  .add_form .submit_form button { width: 46%; }\n}\n@media screen and (max-width: 668px){\n.add_form .test_date_wrapper  .mat-card-actions , .add_form  .test_date_wrapper  .mat-card-content , .add_form .test_date_wrapper\n .mat-card-subtitle { display: block; }\n .add_form  .mat-form-field {  width: 100%; }\n .add_form .mat-card-content, .add_form .patient_diagnotes .mat-form-field { width: auto; }\n\n}\n@media screen and (max-width: 576px){\n  .add_form .submit_form button { width: 100%; }\n  .add_form .patient_diagnotes { margin: 0; }\n}\n/*# sourceMappingURL=data:application/json;base64, */";
    /***/
  },

  /***/
  "./src/app/components/admin/user-management/user-add-edit/user-add-edit.component.ts":
  /*!*******************************************************************************************!*\
    !*** ./src/app/components/admin/user-management/user-add-edit/user-add-edit.component.ts ***!
    \*******************************************************************************************/

  /*! exports provided: UserAddEditComponent */

  /***/
  function srcAppComponentsAdminUserManagementUserAddEditUserAddEditComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "UserAddEditComponent", function () {
      return UserAddEditComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");

    var UserAddEditComponent = /*#__PURE__*/function () {
      function UserAddEditComponent(fb, activeRoute, router, httpService, datePipe, cookie) {
        _classCallCheck(this, UserAddEditComponent);

        this.fb = fb;
        this.activeRoute = activeRoute;
        this.router = router;
        this.httpService = httpService;
        this.datePipe = datePipe;
        this.cookie = cookie;
        this.date = new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"](new Date());
        this.serializedDate = new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"](new Date().toISOString());
        this.usersData = [];
        this.buttonText = "Submit";
        this.datePipe.transform(this.date.value, 'MM-dd-yyyy');
        var dateformat = this.datePipe.transform(new Date(), "MM-dd-yyyy");
        this.allStateCityData();
        this.user_token = cookie.get('jwtToken');
        this.params_id = this.activeRoute.snapshot.params._id;
        this.UserManagementAddEditForm = this.fb.group({
          firstname: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
          lastname: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
          email: [null, [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].email, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(100)]],
          phoneno: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
          address: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
          city: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
          state: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
          zip: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
          date: [dateformat],
          status: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]
        });
      }

      _createClass(UserAddEditComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          if (this.params_id) {
            this.buttonText = "Update";
            this.getResolveData();
          }
        }
        /* Get resolve data */

      }, {
        key: "getResolveData",
        value: function getResolveData() {
          var _this110 = this;

          this.activeRoute.data.forEach(function (data) {
            _this110.usersData = data.UserData.res;
            var userDetails;
            userDetails = data.UserData.res;

            _this110.UserManagementAddEditForm.controls['firstname'].patchValue(userDetails[0].firstname);

            _this110.UserManagementAddEditForm.controls['lastname'].patchValue(userDetails[0].lastname);

            _this110.UserManagementAddEditForm.controls['email'].patchValue(userDetails[0].email);

            _this110.UserManagementAddEditForm.controls['phoneno'].patchValue(userDetails[0].phoneno);

            _this110.UserManagementAddEditForm.controls['address'].patchValue(userDetails[0].address);

            _this110.UserManagementAddEditForm.controls['city'].patchValue(userDetails[0].city);

            _this110.UserManagementAddEditForm.controls['state'].patchValue(userDetails[0].state);

            _this110.UserManagementAddEditForm.controls['zip'].patchValue(userDetails[0].zip);

            _this110.UserManagementAddEditForm.controls['status'].patchValue(userDetails[0].status);
          });
        }
        /**for validation purpose**/

      }, {
        key: "inputUntouch",
        value: function inputUntouch(form, val) {
          form.controls[val].markAsUntouched();
        }
        /**for validation purpose**/

        /**resetting the form start here **/

      }, {
        key: "ResetAddForm",
        value: function ResetAddForm() {
          this.UserManagementAddEditForm.reset();
        }
        /**resetting the form start here **/

        /**for getting all states & cities function start here**/

      }, {
        key: "allStateCityData",
        value: function allStateCityData() {
          var _this111 = this;

          this.httpService.getSiteSettingData("./assets/data-set/state.json").subscribe(function (response) {
            _this111.states = response;

            _this111.getResolveData();
          });
          this.httpService.getSiteSettingData("./assets/data-set/city.json").subscribe(function (response) {
            _this111.allCities = response;

            _this111.getResolveData();
          });
        }
        /**for getting all states & cities  function end here**/

      }, {
        key: "getCity",
        value: function getCity(event) {
          var val = event;
          this.cities = this.allCities[val];
        }
      }, {
        key: "UserManagementAddFormFormSubmit",
        value: function UserManagementAddFormFormSubmit() {
          var _this112 = this;

          var x;

          for (x in this.UserManagementAddEditForm.controls) {
            this.UserManagementAddEditForm.controls[x].markAsTouched();
          }

          if (this.UserManagementAddEditForm.valid) {
            if (this.UserManagementAddEditForm.value.status) this.UserManagementAddEditForm.value.status = parseInt("1");else this.UserManagementAddEditForm.value.status = parseInt("0");
            var data;

            if (this.params_id) {
              data = {
                "source": "user_management",
                "data": {
                  id: this.params_id,
                  firstname: this.UserManagementAddEditForm.value.firstname,
                  lastname: this.UserManagementAddEditForm.value.lastname,
                  phoneno: this.UserManagementAddEditForm.value.phoneno,
                  email: this.UserManagementAddEditForm.value.email,
                  address: this.UserManagementAddEditForm.value.address,
                  city: this.UserManagementAddEditForm.value.city,
                  state: this.UserManagementAddEditForm.value.state,
                  zip: this.UserManagementAddEditForm.value.zip,
                  status: this.UserManagementAddEditForm.value.status
                },
                "token": this.user_token
              };
            } else {
              data = {
                "source": "user_management",
                "data": this.UserManagementAddEditForm.value,
                "token": this.user_token
              };
            }
          }

          this.httpService.httpViaPost("addorupdatedata", data).subscribe(function (res) {
            _this112.ResetAddForm();

            setTimeout(function () {
              _this112.router.navigateByUrl('/dashboard/tech');
            }, 100);
          });
        }
      }]);

      return UserAddEditComponent;
    }();

    UserAddEditComponent.ctorParameters = function () {
      return [{
        type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__["HttpServiceService"]
      }, {
        type: _angular_common__WEBPACK_IMPORTED_MODULE_5__["DatePipe"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_6__["CookieService"]
      }];
    };

    UserAddEditComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-user-add-edit',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./user-add-edit.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/admin/user-management/user-add-edit/user-add-edit.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./user-add-edit.component.css */
      "./src/app/components/admin/user-management/user-add-edit/user-add-edit.component.css"))["default"]]
    })], UserAddEditComponent);
    /***/
  },

  /***/
  "./src/app/components/adminbiller/adminbiller-dashboard/adminbiller-dashboard.component.css":
  /*!**************************************************************************************************!*\
    !*** ./src/app/components/adminbiller/adminbiller-dashboard/adminbiller-dashboard.component.css ***!
    \**************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminbillerAdminbillerDashboardAdminbillerDashboardComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/* .content_wrapper{ display: flex; justify-content: space-between;  align-items: center; width: 100%; margin: auto; text-align: center; }\n.content_wrapper .itemsection{width: 33%; margin: 0px 7px; box-sizing: border-box; display: flex; justify-content: center; position: relative; border-radius: 10px; border: 1px solid #e8e9ef;  overflow: hidden;  }\n.content_wrapper .itemsection .icon{  display: flex; align-items: center; justify-content: center; width: 20%; box-sizing: border-box;}\n.content_wrapper .itemsection .icon img{ max-width: 100%; }\n.content_wrapper .itemsection .button_wrapper{ background: #4d545a; width: 25%; display: flex; align-items: center; justify-content: center; }\n.content_wrapper .itemsection .button_wrapper button{ width: auto; background: transparent; color: #fff; padding: 0; font-family: \"AvenirMedium\"; font-size: 15px; }\n.content_wrapper .itemsection .counteer { box-sizing: border-box; width: 55%; padding: 5px; text-align: left; }\n.content_wrapper .itemsection .counteer .dataCount{ font-size: 48px; font-family: \"AvenirBlack\";  color: #4d545a; margin: 0;}\n.content_wrapper .itemsection .counteer .doctorNumber{ font-size: 18px; font-family: \"AvenirMedium\";  color: #4d545a; margin:0;}\n.content_wrapper .itemsection:nth-child(3n+1){ margin-left: 0;}\n.content_wrapper .itemsection:nth-child(3n+3){ margin-right: 0;} */\n\n\n/* Subha CSS */\n\n\n.tooltip {\n    position: relative;\n    display: inline-block;\n  }\n\n\n.tooltip .tooltiptext {\n    visibility: hidden;\n    min-width: 100px;\n    background-color: #555;\n    color: #fff;\n    text-align: center;\n    border-radius: 6px;\n    padding:6px 10px;\n    position: absolute;\n    z-index: 1;\n    bottom: 125%;\n    left: 50%;\n    margin-left: -60px;\n    opacity: 0;\n    transition: opacity 0.3s;\n  }\n\n\n.tooltip .tooltiptext::after {\n    content: \"\";\n    position: absolute;\n    top: 100%;\n    left: 50%;\n    margin-left: -5px;\n    border-width: 5px;\n    border-style: solid;\n    border-color: #555 transparent transparent transparent;\n  }\n\n\n.tooltip:hover .tooltiptext {\n    visibility: visible;\n    opacity: 1;\n  }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9hZG1pbmJpbGxlci9hZG1pbmJpbGxlci1kYXNoYm9hcmQvYWRtaW5iaWxsZXItZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBOzs7Ozs7Ozs7O2tFQVVrRTs7O0FBR2xFLGNBQWM7OztBQUNkO0lBQ0ksa0JBQWtCO0lBQ2xCLHFCQUFxQjtFQUN2Qjs7O0FBRUE7SUFDRSxrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCLHNCQUFzQjtJQUN0QixXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFDaEIsa0JBQWtCO0lBQ2xCLFVBQVU7SUFDVixZQUFZO0lBQ1osU0FBUztJQUNULGtCQUFrQjtJQUNsQixVQUFVO0lBQ1Ysd0JBQXdCO0VBQzFCOzs7QUFFQTtJQUNFLFdBQVc7SUFDWCxrQkFBa0I7SUFDbEIsU0FBUztJQUNULFNBQVM7SUFDVCxpQkFBaUI7SUFDakIsaUJBQWlCO0lBQ2pCLG1CQUFtQjtJQUNuQixzREFBc0Q7RUFDeEQ7OztBQUVBO0lBQ0UsbUJBQW1CO0lBQ25CLFVBQVU7RUFDWiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW5iaWxsZXIvYWRtaW5iaWxsZXItZGFzaGJvYXJkL2FkbWluYmlsbGVyLWRhc2hib2FyZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG4vKiAuY29udGVudF93cmFwcGVyeyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47ICBhbGlnbi1pdGVtczogY2VudGVyOyB3aWR0aDogMTAwJTsgbWFyZ2luOiBhdXRvOyB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbi5jb250ZW50X3dyYXBwZXIgLml0ZW1zZWN0aW9ue3dpZHRoOiAzMyU7IG1hcmdpbjogMHB4IDdweDsgYm94LXNpemluZzogYm9yZGVyLWJveDsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IHBvc2l0aW9uOiByZWxhdGl2ZTsgYm9yZGVyLXJhZGl1czogMTBweDsgYm9yZGVyOiAxcHggc29saWQgI2U4ZTllZjsgIG92ZXJmbG93OiBoaWRkZW47ICB9XG4uY29udGVudF93cmFwcGVyIC5pdGVtc2VjdGlvbiAuaWNvbnsgIGRpc3BsYXk6IGZsZXg7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IGp1c3RpZnktY29udGVudDogY2VudGVyOyB3aWR0aDogMjAlOyBib3gtc2l6aW5nOiBib3JkZXItYm94O31cbi5jb250ZW50X3dyYXBwZXIgLml0ZW1zZWN0aW9uIC5pY29uIGltZ3sgbWF4LXdpZHRoOiAxMDAlOyB9XG4uY29udGVudF93cmFwcGVyIC5pdGVtc2VjdGlvbiAuYnV0dG9uX3dyYXBwZXJ7IGJhY2tncm91bmQ6ICM0ZDU0NWE7IHdpZHRoOiAyNSU7IGRpc3BsYXk6IGZsZXg7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IGp1c3RpZnktY29udGVudDogY2VudGVyOyB9XG4uY29udGVudF93cmFwcGVyIC5pdGVtc2VjdGlvbiAuYnV0dG9uX3dyYXBwZXIgYnV0dG9ueyB3aWR0aDogYXV0bzsgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7IGNvbG9yOiAjZmZmOyBwYWRkaW5nOiAwOyBmb250LWZhbWlseTogXCJBdmVuaXJNZWRpdW1cIjsgZm9udC1zaXplOiAxNXB4OyB9XG4uY29udGVudF93cmFwcGVyIC5pdGVtc2VjdGlvbiAuY291bnRlZXIgeyBib3gtc2l6aW5nOiBib3JkZXItYm94OyB3aWR0aDogNTUlOyBwYWRkaW5nOiA1cHg7IHRleHQtYWxpZ246IGxlZnQ7IH1cbi5jb250ZW50X3dyYXBwZXIgLml0ZW1zZWN0aW9uIC5jb3VudGVlciAuZGF0YUNvdW50eyBmb250LXNpemU6IDQ4cHg7IGZvbnQtZmFtaWx5OiBcIkF2ZW5pckJsYWNrXCI7ICBjb2xvcjogIzRkNTQ1YTsgbWFyZ2luOiAwO31cbi5jb250ZW50X3dyYXBwZXIgLml0ZW1zZWN0aW9uIC5jb3VudGVlciAuZG9jdG9yTnVtYmVyeyBmb250LXNpemU6IDE4cHg7IGZvbnQtZmFtaWx5OiBcIkF2ZW5pck1lZGl1bVwiOyAgY29sb3I6ICM0ZDU0NWE7IG1hcmdpbjowO31cbi5jb250ZW50X3dyYXBwZXIgLml0ZW1zZWN0aW9uOm50aC1jaGlsZCgzbisxKXsgbWFyZ2luLWxlZnQ6IDA7fVxuLmNvbnRlbnRfd3JhcHBlciAuaXRlbXNlY3Rpb246bnRoLWNoaWxkKDNuKzMpeyBtYXJnaW4tcmlnaHQ6IDA7fSAqL1xuXG5cbi8qIFN1YmhhIENTUyAqL1xuLnRvb2x0aXAge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIH1cblxuICAudG9vbHRpcCAudG9vbHRpcHRleHQge1xuICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgICBtaW4td2lkdGg6IDEwMHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM1NTU7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgICBwYWRkaW5nOjZweCAxMHB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB6LWluZGV4OiAxO1xuICAgIGJvdHRvbTogMTI1JTtcbiAgICBsZWZ0OiA1MCU7XG4gICAgbWFyZ2luLWxlZnQ6IC02MHB4O1xuICAgIG9wYWNpdHk6IDA7XG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzO1xuICB9XG5cbiAgLnRvb2x0aXAgLnRvb2x0aXB0ZXh0OjphZnRlciB7XG4gICAgY29udGVudDogXCJcIjtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAxMDAlO1xuICAgIGxlZnQ6IDUwJTtcbiAgICBtYXJnaW4tbGVmdDogLTVweDtcbiAgICBib3JkZXItd2lkdGg6IDVweDtcbiAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICAgIGJvcmRlci1jb2xvcjogIzU1NSB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCB0cmFuc3BhcmVudDtcbiAgfVxuXG4gIC50b29sdGlwOmhvdmVyIC50b29sdGlwdGV4dCB7XG4gICAgdmlzaWJpbGl0eTogdmlzaWJsZTtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG4iXX0= */";
    /***/
  },

  /***/
  "./src/app/components/adminbiller/adminbiller-dashboard/adminbiller-dashboard.component.ts":
  /*!*************************************************************************************************!*\
    !*** ./src/app/components/adminbiller/adminbiller-dashboard/adminbiller-dashboard.component.ts ***!
    \*************************************************************************************************/

  /*! exports provided: AdminbillerDashboardComponent */

  /***/
  function srcAppComponentsAdminbillerAdminbillerDashboardAdminbillerDashboardComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AdminbillerDashboardComponent", function () {
      return AdminbillerDashboardComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var ngx_device_detector__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ngx-device-detector */
    "./node_modules/ngx-device-detector/fesm2015/ngx-device-detector.js");
    /* harmony import */


    var moment__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! moment */
    "./node_modules/moment/moment.js");
    /* harmony import */


    var moment__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_7__);
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../../../../environments/environment */
    "./src/environments/environment.ts");

    var moment = moment__WEBPACK_IMPORTED_MODULE_7__;

    var AdminbillerDashboardComponent = /*#__PURE__*/function () {
      // lib list end
      function AdminbillerDashboardComponent(router, cookieService, http, activatedRoute, dialog, deviceService, matSnackBar) {
        var _this113 = this;

        _classCallCheck(this, AdminbillerDashboardComponent);

        this.router = router;
        this.cookieService = cookieService;
        this.http = http;
        this.activatedRoute = activatedRoute;
        this.dialog = dialog;
        this.deviceService = deviceService;
        this.matSnackBar = matSnackBar;
        this.loginUserData = {};
        this.jwtToken = "";
        this.htmlText = {
          viewAllButtonTable: {
            viewTable: false,
            headerText: ""
          }
        };
        this.allResolveData = {};
        this.shareDetails = {
          baseUrl: _environments_environment__WEBPACK_IMPORTED_MODULE_8__["environment"].doctorSignUpBaseUrl,
          userId: ""
        }; // Lib list

        this.allBillerData = [];
        this.billerData_count = 0;
        this.allUserData_skip = ["_id", "report_file_type", "tech_id", "tech_email", "batch_name", "report_type", "status", "file_basepath", "file_bucketname", "file_name", "file_original_name", "file_type", "converted_image", "images", "patient_details", "patient_name_search", "report_life_circle", "note", "additional_potential_health_risks", "cpt_codes", "created_at", "doctor_name"];
        this.editUrl = "admin/biller-management/edit";
        this.libdata = {
          basecondition: {},
          updateendpoint: 'status-update',
          // updateendpointmany:'status-update',
          custombuttons: [{
            label: "View Report",
            route: "admin/view-patient-record/",
            type: 'internallink',
            param: ['_id']
          }, {
            label: "Tech Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-tech-details',
            datafields: ['first name', 'last name', 'email', 'phone', 'address', 'city', 'state', 'zip'],
            param: 'id',
            headermessage: 'Tech Information'
          }, {
            label: "View Codes",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-codes-details',
            datafields: ['Additional Potential Health Risks', 'CPT Codes', 'ICD Codes'],
            param: 'id',
            headermessage: 'Associated Codes'
          }, {
            label: "Doctor Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-doctor-details',
            datafields: ['firstname', 'lastname', 'email', 'fax', 'Practice Name', 'NPI', 'phone', 'address', 'city', 'state', 'zip'],
            param: 'id',
            headermessage: 'Doctor Information'
          }, {
            label: "Doctor Office Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-doctor-office-details',
            datafields: ['center name', 'first name', 'last name', 'email', 'phone', 'address', 'city', 'state', 'zip'],
            param: 'id',
            headermessage: 'Doctor Office Info'
          }, {
            label: "Parent Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-parent-details',
            datafields: ['Parent Name', 'Contact Person', 'email', 'phone', 'address', 'city', 'state', 'zip'],
            cond: "parent_check_flag",
            condval: 1,
            param: 'id',
            headermessage: 'Parent Information'
          }, {
            label: "View Jobticket",
            route: "admin/report-jobtickets/",
            type: 'internallink',
            param: ['_id'],
            cond: 'status',
            condval: 13
          }],
          hideeditbutton: true,
          hidedeletebutton: true,
          hidedeletemany: true,
          // hidestatustogglebutton: true,
          hideviewbutton: true,
          tableheaders: ["patient_name", "status_text", "created_at_datetime", "cpt_addl", "general_details"]
        };
        this.allUserData_modify_header = {
          "general_details": "Related Info",
          "patient_name": "Patient Name",
          "status_text": "Status",
          "created_at_datetime": "Report Added",
          "cpt_addl": "CPT/ Addl Hrisk C"
        };
        this.UpdateEndpoint = "addorupdatedata";
        this.deleteEndpoint = "deletesingledata";
        this.apiUrl = _environments_environment__WEBPACK_IMPORTED_MODULE_8__["environment"].apiBaseUrl;
        this.tableName = "data_pece";
        this.datacollection = 'dashboard-report-data-list';
        this.sortdata = {
          "type": 'desc',
          "field": 'patient_name',
          "options": ['patient_name', 'created_at_datetime']
        };
        this.limitcond = {
          "limit": 10,
          "skip": 0,
          "pagecount": 1
        };
        this.previewModal_detail_skip = ['_id', 'user_type', 'status', 'password', 'created_at'];
        this.status = [{
          val: 11,
          'name': 'Biller Admin Approved'
        }, {
          val: 12,
          'name': 'Biller Admin Not Approved'
        }, {
          val: 13,
          'name': "Biller Admin Hold"
        }, {
          val: 14,
          'name': "Doctor Signed"
        }, {
          val: 15,
          'name': "Sent to Biller"
        }, {
          val: 16,
          "name": "Report Downloaded"
        }];
        this.cptcodes = [{
          val: "95923",
          'name': '95923'
        }, {
          val: "95943",
          'name': '95943'
        }, {
          val: "95921",
          'name': "95921"
        }, {
          val: "93923",
          'name': "93923"
        }, {
          val: "93922",
          'name': "93922"
        }];
        this.parent_type = [{
          val: "admin",
          'name': 'Admin'
        }, {
          val: "diagnostic_admin",
          'name': 'Diagnostic Admin'
        }, {
          val: "distributor",
          'name': 'Distributor'
        }, {
          val: "doctor_group",
          'name': 'Doctor Group'
        }];
        this.report_type = [{
          val: "RM-3A",
          'name': 'RM-3A'
        }, {
          val: "TM FLOW V3",
          'name': 'TM FLOW V3'
        }, {
          val: "TM FLOW V4",
          'name': 'TM FLOW V4'
        }, {
          val: "CMAT with BP Cuffs",
          'name': 'CMAT with BP Cuffs'
        }];
        this.report = [{
          val: 11,
          'name': 'Biller Admin Approved'
        }, {
          val: 12,
          'name': 'Biller Admin Not Approved'
        }, {
          val: 13,
          'name': "Biller Admin Hold"
        }];
        this.SearchingEndpoint = "datalist";
        this.authval = [];
        this.docofficeval = [];
        this.techval = [];
        this.parentnameval = [];
        this.doctorcity = [];
        this.doctorstate = [];
        this.patientcity = [];
        this.patientstate = [];
        this.SearchingSourceName = "data_biller_list";
        this.search_settings = {
          selectsearch: [{
            label: 'Search By Report Type',
            field: 'report_file_type',
            values: this.report_type
          }, {
            label: 'Search By CPT Codes',
            field: 'cpt_codes_search',
            values: this.cptcodes
          }, {
            label: 'Search By Parent Type',
            field: 'parent_type',
            values: this.parent_type
          }, {
            label: "Search By Doctor",
            field: 'doc_name_search',
            values: this.authval
          }, {
            label: "Search By Tech",
            field: 'tech_name_search',
            values: this.techval
          }, {
            label: "Search By Doctor Office",
            field: 'doctor_ofiice_name_search',
            values: this.docofficeval
          }, {
            label: "Search By Parent Name",
            field: 'parent_name_search',
            values: this.parentnameval
          }, {
            label: "Search By Doctor City",
            field: 'doctor_city_search',
            values: this.doctorcity
          }, {
            label: "Search By Doctor State",
            field: 'doctor_state_search',
            values: this.doctorstate
          }, {
            label: "Search By Patient City",
            field: 'patient_city_search',
            values: this.patientcity
          }, {
            label: "Search By Patient State",
            field: 'patient_state_search',
            values: this.patientstate
          }],
          datesearch: [{
            startdatelabel: "Start Date",
            enddatelabel: "End Date",
            submit: "Search",
            field: "created_at_datetime"
          }],
          textsearch: [{
            label: "Search By Patient Name",
            field: 'patient_name_search'
          }]
        };
        this.loginUserData["user_details"] = cookieService.getAll();
        this.loginUserData.user_details.user_details = JSON.parse(this.loginUserData.user_details.user_details);
        this.shareDetails.userId = this.loginUserData.user_details.user_details._id;
        this.shareDetails.user_type = this.loginUserData.user_details.user_details.user_type;
        this.loginUserData["jwtToken"] = cookieService.get('jwtToken');
        /* Get Auth Token */

        this.jwtToken = cookieService.get('jwtToken');
        /* Get resolve data */

        this.activatedRoute.data.subscribe(function (resolveData) {
          _this113.allResolveData = resolveData.dataCount.data;
        });
      }

      _createClass(AdminbillerDashboardComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          this.getSearchData();
        }
      }, {
        key: "ngAfterViewInit",
        value: function ngAfterViewInit() {}
      }, {
        key: "viewAllButton",
        value: function viewAllButton() {
          var _this114 = this;

          var flag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
          var period = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";
          this.billerData_count = 0;
          this.allBillerData = [];
          document.getElementById("viewAllButtonList").scrollIntoView();
          this.htmlText.viewAllButtonTable.headerText = flag;

          if (period != '') {
            this.htmlText.viewAllButtonTable.headerText += ' (' + period + ')';
          } // lib list


          var data = {
            "condition": {
              "limit": 10,
              "skip": 0
            },
            "sort": {
              "field": "patient_name",
              "type": "desc"
            },
            "searchcondition": {
              "parent_id": this.loginUserData.user_details._id
            },
            "secretkey": "na"
          };

          switch (flag) {
            case 'Total Number of Reports Processed':
              data.searchcondition.report_type = {
                $exists: true
              };
              data.searchcondition.status = {
                "$gte": 8
              };
              this.libdata.basecondition.status = {
                "$gte": 8
              };
              break;

            case 'Total Number of Reports Approved':
              data.searchcondition.report_type = {
                $exists: true
              };
              data.searchcondition.status = {
                "$eq": 11
              };
              this.libdata.basecondition.status = {
                "$eq": 11
              };
              break;

            case 'Total Number of Reports Not Approved':
              data.searchcondition.report_type = {
                $exists: true
              };
              data.searchcondition.status = {
                "$eq": 12
              };
              this.libdata.basecondition.status = {
                "$eq": 12
              };
              break;

            case 'Total Number of Reports in Hold':
              data.searchcondition.report_type = {
                $exists: true
              };
              data.searchcondition.status = {
                "$eq": 10
              };
              this.libdata.basecondition.status = {
                "$eq": 10
              };
              break;

            default:
              document.getElementById("viewAllButtonList").scrollIntoView();
              break;
          }

          switch (period) {
            case "Last Month":
              data.searchcondition.period = "Last Month";
              break;

            case "This Month":
              data.searchcondition.period = "This Month";
              break;

            case "Last Week":
              data.searchcondition.period = "Last Week";
              break;

            case "This Week":
              data.searchcondition.period = "This Week";
              break;
          } // API Hit


          this.http.httpViaPost('dashboard-report-data-list', data).subscribe(function (res) {
            _this114.allBillerData = res.results.res;
            _this114.billerData_count = res.results.data_count;
          }, function (error) {
            console.log('Oooops!');
          });
        }
      }, {
        key: "getSearchData",
        value: function getSearchData() {
          var _this115 = this;

          var data = {
            "source": "patient_data_desc_patient_name",
            "condition": {},
            "token": this.jwtToken
          };
          this.http.httpViaPost("datalist", data).subscribe(function (response) {
            var start = false;
            var count = 0;

            for (var i in response.res) {
              if (response.res[i].doc_name_search != "") {
                for (var j in _this115.authval) {
                  if (response.res[i].doc_name == _this115.authval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this115.authval.push({
                    name: response.res[i].doc_name,
                    val: response.res[i].doc_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].tech_name_search != "") {
                for (var j in _this115.techval) {
                  if (response.res[i].tech_namesearch == _this115.techval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this115.techval.push({
                    name: response.res[i].tech_namesearch,
                    val: response.res[i].tech_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].parent_name_search != "") {
                for (var j in _this115.parentnameval) {
                  if (response.res[i].parent_namesearch == _this115.parentnameval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this115.parentnameval.push({
                    name: response.res[i].parent_namesearch,
                    val: response.res[i].parent_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].doctor_state_search != "") {
                for (var j in _this115.doctorstate) {
                  if (response.res[i].doctor_state == _this115.doctorstate[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this115.doctorstate.push({
                    name: response.res[i].doctor_state,
                    val: response.res[i].doctor_state_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].doctor_city_search != "") {
                for (var j in _this115.doctorcity) {
                  if (response.res[i].doctor_city == _this115.doctorcity[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this115.doctorcity.push({
                    name: response.res[i].doctor_city,
                    val: response.res[i].doctor_city_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].patient_city_search != "") {
                for (var j in _this115.patientcity) {
                  if (response.res[i].patient_city == _this115.patientcity[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this115.patientcity.push({
                    name: response.res[i].patient_city,
                    val: response.res[i].patient_city_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].patient_state_search != "") {
                for (var j in _this115.patientstate) {
                  if (response.res[i].patient_state == _this115.patientstate[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this115.patientstate.push({
                    name: response.res[i].patient_state,
                    val: response.res[i].patient_state_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].doctor_ofiice_name_search != "") {
                for (var j in _this115.docofficeval) {
                  if (response.res[i].doctor_ofiice_namesearch == _this115.docofficeval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this115.docofficeval.push({
                    name: response.res[i].doctor_ofiice_namesearch,
                    val: response.res[i].doctor_ofiice_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }
          }, function (error) {
            console.log('Oooops!');
          });
        }
      }]);

      return AdminbillerDashboardComponent;
    }();

    AdminbillerDashboardComponent.ctorParameters = function () {
      return [{
        type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__["HttpServiceService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatDialog"]
      }, {
        type: ngx_device_detector__WEBPACK_IMPORTED_MODULE_6__["DeviceDetectorService"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatSnackBar"]
      }];
    };

    AdminbillerDashboardComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-adminbiller-dashboard',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./adminbiller-dashboard.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/adminbiller/adminbiller-dashboard/adminbiller-dashboard.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./adminbiller-dashboard.component.css */
      "./src/app/components/adminbiller/adminbiller-dashboard/adminbiller-dashboard.component.css"))["default"]]
    })], AdminbillerDashboardComponent);
    /***/
  },

  /***/
  "./src/app/components/adminbiller/adminbiller-footer/adminbiller-footer.component.css":
  /*!********************************************************************************************!*\
    !*** ./src/app/components/adminbiller/adminbiller-footer/adminbiller-footer.component.css ***!
    \********************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminbillerAdminbillerFooterAdminbillerFooterComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW5iaWxsZXIvYWRtaW5iaWxsZXItZm9vdGVyL2FkbWluYmlsbGVyLWZvb3Rlci5jb21wb25lbnQuY3NzIn0= */";
    /***/
  },

  /***/
  "./src/app/components/adminbiller/adminbiller-footer/adminbiller-footer.component.ts":
  /*!*******************************************************************************************!*\
    !*** ./src/app/components/adminbiller/adminbiller-footer/adminbiller-footer.component.ts ***!
    \*******************************************************************************************/

  /*! exports provided: AdminbillerFooterComponent */

  /***/
  function srcAppComponentsAdminbillerAdminbillerFooterAdminbillerFooterComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AdminbillerFooterComponent", function () {
      return AdminbillerFooterComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");

    var AdminbillerFooterComponent = /*#__PURE__*/function () {
      function AdminbillerFooterComponent() {
        _classCallCheck(this, AdminbillerFooterComponent);
      }

      _createClass(AdminbillerFooterComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }]);

      return AdminbillerFooterComponent;
    }();

    AdminbillerFooterComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-adminbiller-footer',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./adminbiller-footer.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/adminbiller/adminbiller-footer/adminbiller-footer.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./adminbiller-footer.component.css */
      "./src/app/components/adminbiller/adminbiller-footer/adminbiller-footer.component.css"))["default"]]
    })], AdminbillerFooterComponent);
    /***/
  },

  /***/
  "./src/app/components/adminbiller/adminbiller-header/adminbiller-header.component.css":
  /*!********************************************************************************************!*\
    !*** ./src/app/components/adminbiller/adminbiller-header/adminbiller-header.component.css ***!
    \********************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminbillerAdminbillerHeaderAdminbillerHeaderComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "/* header css */\n\n.techdashboard_header { height: auto; padding: 0; background: #fff; box-shadow: 0px 2px 7px 2px #b7b7b7; margin: 20px 0; }\n\n.techdashboard_header .header_wrapper{ width: 1400px; margin: 0 auto; display: flex; align-items: center; justify-content: space-between;}\n\n.techdashboard_header .logo_wrapper { max-width: 160px; display: block; cursor: pointer; flex: none; }\n\n.techdashboard_header .logo_wrapper:focus { outline: none; border: none; }\n\n.techdashboard_header .logo_wrapper img { max-width: 100%; vertical-align: middle; }\n\n.techdashboard_header .quotation { margin-bottom: 0px; }\n\n.techdashboard_header .quotation p { font-family: \"RobotoMedium\"; font-size: 30px; color: #002035; text-transform: uppercase; margin: 0; }\n\n.techdashboard_header .profile_section button { padding-top: 8px; }\n\n.techdashboard_header .profile_section {  display: flex; padding-left: 5px;  margin-bottom: 0;  justify-content: center; position: relative;  align-items: center; }\n\n.techdashboard_header .profile_section::before{ content: ''; position: absolute; width: 1.5px; height: 20px; background: #908d8d;\nleft: -1px;}\n\n.techdashboard_header .profile_section .username { padding-right: 10px; display: block; font-family: \"AvenirRoman\";\nfont-size: 16px; color: #1f1f1f;}\n\n.techdashboard_header .quotation .mat-list-base { display: flex; padding-top: 0; }\n\n/* .techdashboard_header .quotation .mat-list-base .mat-list-item:before {\n  content: \"\";\n  left: -15px;\n  width: 2px;\n  height: 15px;\n  background: #1c1c1c;\n  display: inline-block;\n  position: absolute;\n  top: 35%;\n} */\n\n.techdashboard_header .quotation .mat-nav-list .mat-list-item { margin: 0; position: relative; font-family: \"AvenirMedium\"; font-size: 16px; color: #767676;}\n\n.active { color: #000000!important;  /* border-bottom: 3px solid #fecb00; position: relative; */}\n\n.active::before{ content: ''; width: 100%; height: 4px; background: #fecb00; position: absolute; bottom: -25px; }\n\n/*End header css */\n\n.togle_menu { display: none;}\n\n.sticky { position: fixed; top: 0; margin: 0; z-index: 1; }\n\n@media screen and (max-width: 1540px) {\n  .techdashboard_header .header_wrapper { width: 90%; }\n\n}\n\n@media screen and (max-width: 1500px) {\n  .techdashboard_header .quotation .mat-nav-list .mat-list-item {\n    margin: 0px;\n    position: relative;\n  }\n  .techdashboard_header .quotation p {\n    font-size: 22px;\n  }\n  .content_wrapper .itemsection {\n    padding-bottom: 36px;\n  }\n  .techdashboard_header .logo_wrapper { max-width: 120px; }\n  .active::before { bottom: -13px; }\n}\n\n@media screen and (max-width: 1440px) {\n  .content_wrapper .itemsection p {\n    line-height: 26px;\n    font-size: 24px;\n  }\n}\n\n@media screen and (max-width: 1400px) {\n  .techdashboard_header .header_wrapper {width: 95%; }\n}\n\n@media screen and (max-width: 1366px) {\n  .techdashboard_header .quotation .mat-nav-list .mat-list-item { margin: 0; font-size: 14px; }\n  .techdashboard_header .quotation .mat-nav-list .mat-list-item{ margin: 0; }\n  .techdashboard_header .profile_section .username { font-size: 14px; } \n}\n\n@media screen and (max-width: 1280px) {\n  .techdashboard_header .profile_section { padding-left: 8px; }\n  .techdashboard_header .quotation .mat-nav-list .mat-list-item .mat-list-base .mat-list-item .mat-list-item-content {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    box-sizing: border-box;\n    padding: 0 10px;\n    position: relative;\n    height: inherit;\n  }\n}\n\n@media screen and (max-width: 1240px) {\n  .doctor_content_wrapper { background: #012035; }\n  .techdashboard_header .quotation .mat-nav-list .mat-list-item { font-size: 14px; }\n}\n\n@media screen and (max-width: 1199px) {\n  .doctor_content_wrapper .table_structure { width: 100%; }\n  .patient_report_section .button_action { width: 970px; }\n    .patient_report_section .button_action button { width: 475px; font-size: 20px;  padding: 8px; }\n  .content_wrapper {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n    flex-wrap: wrap;\n  }\n  .content_wrapper .itemsection {\n    width: 31%;\n    margin: 15px 12px;\n  }\n  .doctor_content_wrapper {\n    padding: 40px 30px;\n  }\n  .doctor_content_wrapper .mat-card-title { font-size: 36px; margin-bottom: 20px; }\n  .table_structure .mat-list-item .title_n { font-size: 26px; }\n  .table_structure .mat-list-item .title_a { font-size: 22px; }\n  .content_wrapper .itemsection p { width: 100%; font-size: 22px; }\n  .techdashboard_header { height: auto; flex-direction: column; }\n  .techdashboard_header .header_wrapper { flex-direction: column; }\n   \n}\n\n@media screen and (max-width: 1100px) {\n  .techdashboard_header .header_wrapper { width: 100%; flex-direction: column;   box-sizing: border-box; }\n  .techdashboard_header .logo_wrapper { max-width: 160px; } \n  .techdashboard_header .profile_section { padding-left: 0; border: none; }\n  .techdashboard_header .profile_section .username { font-size: 16px; }\n  .active { color: #000000!important; border-bottom: 3px solid #fecb00; position: relative; }\n  .active::before{ content: ''; display: none;}\n}\n\n@media screen and (max-width: 1080px) { \n  .doctor_content_wrapper { padding: 40px 20px; }\n  .doctor_content_wrapper .mat-card-title { font-size: 32px; margin-bottom: 20px; }\n  .table_structure .mat-list-item .title_n { font-size: 22px; }\n  .table_structure .mat-list-item .title_a { font-size: 20px; }\n}\n\n@media screen and (max-width: 1038px) {\n  .content_wrapper .itemsection { width: 30.9%; }\n}\n\n@media screen and (max-width: 991px) {\n  .doctor_content_wrapper { text-align: center; }\n  .patient_report_section .patient_top_search { display: flex; align-items: center; flex-direction: column; }\n  .patient_report_section .patient_top_search .search_bar { margin-bottom: 20px; }\n  .patient_report_section .button_action button { padding: 8px 30px; margin: 0 10px; width: 100%; }\n  .patient_report_section .button_action { width: auto; margin: 0 5px; display: flex; justify-content: center;\n  }\n  .content_wrapper .itemsection { width: 30.8%; }\n  .table_structure .mat-list-item .title_a { font-size: 16px; }\n  .togle_menu { display: block; margin-top: 10px; background: #f8c655; color: #fff; position: absolute;\n  right: 20px; min-width: auto; padding: 0 6px; line-height: inherit; border-radius: 3px;}\n  .techdashboard_header .quotation { display: none; width: 100%; background: #ffd06f;}\n  .techdashboard_header .quotation .mat-list-base { display: block; }\n  .techdashboard_header .quotation .mat-nav-list .mat-list-item { margin: 0;\n  align-items: center; justify-content: center; display: flex; background: #fff3da; margin: 1px 0; }\n  .techdashboard_header .quotation .mat-nav-list .mat-list-item:nth-child(1) { margin-top: 0; }\n  .techdashboard_header .quotation .mat-list-base .mat-list-item:before {\n   content: \"\"; left: -15px; width: 2px; height: 15px; background: #1c1c1c; display: inline-block;\n   position: absolute; top: 35%; display: none; }\n  .techdashboard_header .quotation .mat-nav-list .mat-list-item { font-size: 16px; }\n}\n\n@media screen and (max-width: 970px) {\n  .patient_report_section .button_action button {\n    width: auto;\n  }\n  .table_structure .mat-list-item .title_n {\n    font-size: 18px;\n  }\n  .one {\n    background: linear-gradient(100deg, #f9c856, #dd671d);\n  }\n  .two {\n    background: linear-gradient(100deg, #0973d1, #05335a);\n  }\n  .three {\n    background: linear-gradient(100deg, #44cf80, #26a555);\n  }\n}\n\n@media screen and (max-width: 950px) {\n  .content_wrapper .itemsection {\n    width: 30.8%;\n  }\n  .content_wrapper .itemsection p {\n    font-size: 20px;\n  }\n  .table_structure .mat-list-base .mat-list-item, .mat-list-base .mat-list-option {\n    margin-bottom: 16px;\n  }\n}\n\n@media screen and (max-width: 850px) {\n  .content_wrapper .itemsection {\n    width: 30.2%;\n  }\n  /* hiding searchbar */\n  .patient_report_section .patient_top_search .search_bar {\n    margin-bottom: 20px;\n    display: none;\n  }\n  .techdashboard_header {\n    padding: 0 16px;\n    flex-direction: column;\n  }\n}\n\n@media screen and (max-width: 768px) {\n  .content_wrapper .itemsection {\n    width: 100%;\n    margin: 16px;\n    margin-bottom: 0;\n  }\n  .content_wrapper .itemsection:nth-last-child(1) {\n    margin-bottom: 16px;\n  }\n  .patient_report_section .button_action {\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n  }\n  .patient_report_section .button_action button {\n    margin-bottom: 16px;\n    word-break: break-word;\n    white-space: normal;\n    line-height: 22px;\n  }\n  .techdashboard_header {\n    padding: 0 16px;\n  }\n  .techdashboard_header .quotation p {\n    margin: 16px 0;\n  }\n  .doctor_content_wrapper {\n    padding: 20px 0px;\n  }\n  .table_structure .mat-list-item .title_a {\n    font-size: 14px;\n  }\n  .doctor_content_wrapper .mat-card-title {\n    font-size: 28px;\n    margin-bottom: 5px;\n    text-align: left;\n    padding: 0 16px;\n  }\n  .table_structure .mat-list-base .mat-list-item, .mat-list-base .mat-list-option {\n    margin-bottom: 16px;\n  }\n  .footer_section .footer_content {\n    width: auto;\n  }\n  .table_structure .mat-list-base .mat-list-item, .mat-list-base .mat-list-option {\n    display: flex;\n    text-align: left;\n  }\n}\n\n@media screen and (max-width: 480px) {\n  .doctor_content_wrapper .mat-card-title {\n    font-size: 24px;\n  }\n  .patient_report_section .patient_top_search h1 {\n    font-size: 24px;\n  }\n}\n\n.danger {\n  display: block!important;\n  margin-top: 20px;\n  transition: 5px ease-out;\n}\n\n/*# sourceMappingURL=data:application/json;base64, */";
    /***/
  },

  /***/
  "./src/app/components/adminbiller/adminbiller-header/adminbiller-header.component.ts":
  /*!*******************************************************************************************!*\
    !*** ./src/app/components/adminbiller/adminbiller-header/adminbiller-header.component.ts ***!
    \*******************************************************************************************/

  /*! exports provided: AdminbillerHeaderComponent */

  /***/
  function srcAppComponentsAdminbillerAdminbillerHeaderAdminbillerHeaderComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AdminbillerHeaderComponent", function () {
      return AdminbillerHeaderComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _class_common_common_function__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../class/common/common-function */
    "./src/app/class/common/common-function.ts");

    var AdminbillerHeaderComponent = /*#__PURE__*/function () {
      function AdminbillerHeaderComponent(cookies, router, commonFunction) {
        _classCallCheck(this, AdminbillerHeaderComponent);

        this.cookies = cookies;
        this.router = router;
        this.commonFunction = commonFunction;
        this.status = true;
        this.user_data = {};
        this.loader = true; // sticky section

        this.isSticky = false;
        window.scroll(0, 0);
        var user_details = {};
        var allData = this.cookies.getAll();
        this.user_details = JSON.parse(allData.user_details);
        this.user_cookie = cookies.get('jwtToken');
      }

      _createClass(AdminbillerHeaderComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          /* Set Meta Data */
          this.commonFunction.setTitleMetaTags();
        }
        /**logout function start here**/

      }, {
        key: "logout",
        value: function logout() {
          var _this116 = this;

          this.cookies["delete"]('jwtToken');
          this.cookies["delete"]('user_details');
          this.cookies.deleteAll();
          setTimeout(function () {
            _this116.router.navigateByUrl('logout');
          }, 1000);
        }
        /**logout function end here**/
        // don't remove it's for menu toggleing

      }, {
        key: "menuFunction",
        value: function menuFunction() {
          this.status = !this.status;
        }
      }]);

      return AdminbillerHeaderComponent;
    }();

    AdminbillerHeaderComponent.ctorParameters = function () {
      return [{
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"]
      }, {
        type: _class_common_common_function__WEBPACK_IMPORTED_MODULE_4__["CommonFunction"]
      }];
    };

    AdminbillerHeaderComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-adminbiller-header',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./adminbiller-header.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/adminbiller/adminbiller-header/adminbiller-header.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./adminbiller-header.component.css */
      "./src/app/components/adminbiller/adminbiller-header/adminbiller-header.component.css"))["default"]]
    })], AdminbillerHeaderComponent);
    /***/
  },

  /***/
  "./src/app/components/adminbiller/approved-patient-reports/approved-patient-reports-billeradmin/approved-patient-reports-billeradmin.component.css":
  /*!*********************************************************************************************************************************************************!*\
    !*** ./src/app/components/adminbiller/approved-patient-reports/approved-patient-reports-billeradmin/approved-patient-reports-billeradmin.component.css ***!
    \*********************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAdminbillerApprovedPatientReportsApprovedPatientReportsBilleradminApprovedPatientReportsBilleradminComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW5iaWxsZXIvYXBwcm92ZWQtcGF0aWVudC1yZXBvcnRzL2FwcHJvdmVkLXBhdGllbnQtcmVwb3J0cy1iaWxsZXJhZG1pbi9hcHByb3ZlZC1wYXRpZW50LXJlcG9ydHMtYmlsbGVyYWRtaW4uY29tcG9uZW50LmNzcyJ9 */";
    /***/
  },

  /***/
  "./src/app/components/adminbiller/approved-patient-reports/approved-patient-reports-billeradmin/approved-patient-reports-billeradmin.component.ts":
  /*!********************************************************************************************************************************************************!*\
    !*** ./src/app/components/adminbiller/approved-patient-reports/approved-patient-reports-billeradmin/approved-patient-reports-billeradmin.component.ts ***!
    \********************************************************************************************************************************************************/

  /*! exports provided: ApprovedPatientReportsBilleradminComponent */

  /***/
  function srcAppComponentsAdminbillerApprovedPatientReportsApprovedPatientReportsBilleradminApprovedPatientReportsBilleradminComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ApprovedPatientReportsBilleradminComponent", function () {
      return ApprovedPatientReportsBilleradminComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var ngx_device_detector__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ngx-device-detector */
    "./node_modules/ngx-device-detector/fesm2015/ngx-device-detector.js");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../../../../../environments/environment */
    "./src/environments/environment.ts"); // import { DownloadDetailsComponent } from '../download-details/download-details.component';


    var ApprovedPatientReportsBilleradminComponent = /*#__PURE__*/function () {
      // lib list end
      function ApprovedPatientReportsBilleradminComponent(router, cookieService, http, activatedRoute, dialog, deviceService, matSnackBar) {
        var _this117 = this;

        _classCallCheck(this, ApprovedPatientReportsBilleradminComponent);

        this.router = router;
        this.cookieService = cookieService;
        this.http = http;
        this.activatedRoute = activatedRoute;
        this.dialog = dialog;
        this.deviceService = deviceService;
        this.matSnackBar = matSnackBar;
        this.loginUserData = {};
        this.jwtToken = "";
        this.htmlText = {
          headerText: "Patient Reports"
        };
        this.allResolveData = {}; // Lib list

        this.allBillerData = [];
        this.billerData_count = 0;
        this.allUserData_skip = ["_id", "report_file_type", "tech_id", "tech_email", "batch_name", "report_type", "status", "file_basepath", "file_bucketname", "file_name", "file_original_name", "file_type", "converted_image", "images", "patient_details", "patient_name_search", "report_life_circle", "note", "additional_potential_health_risks", "cpt_codes", "created_at", "doctor_name"];
        this.editUrl = "admin/biller-management/edit";
        this.libdata = {
          basecondition: {
            status: {
              $gt: 10,
              $lt: 14
            }
          },
          updateendpoint: '',
          custombuttons: [{
            label: "View Report",
            route: "admin/patient-record/",
            type: 'internallink',
            param: ['_id']
          }, {
            label: "Download Report",
            link: _environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].s3bucket + "reports",
            type: 'externallink',
            paramtype: 'angular',
            param: ['download_file_name']
          }, {
            label: "Tech Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-tech-details',
            datafields: ['firstname', 'lastname', 'email', 'phone', 'address', 'city', 'state', 'zip'],
            param: 'id',
            headermessage: 'Tech Info'
          }, {
            label: "View Codes",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-codes-details',
            datafields: ['additional_potential_health_risks', 'cpt_codes', 'icd_codes'],
            param: 'id',
            headermessage: 'Codes Info'
          }, {
            label: "Doctor Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-doctor-details',
            datafields: ['firstname', 'lastname', 'email', 'fax', 'practice_name', 'npi', 'phone', 'address', 'city', 'state', 'zip'],
            param: 'id',
            headermessage: 'Doctor Info'
          }, {
            label: "Doctor Office Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-doctor-office-details',
            datafields: ['center name', 'first name', 'last name', 'email', 'phone', 'address', 'city', 'state', 'zip'],
            param: 'id',
            headermessage: 'Doctor Office Info'
          }, {
            label: "Parent Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-parent-details',
            cond: 'parent_details_check',
            condval: 1,
            param: 'id',
            headermessage: 'Parent Info'
          }, {
            label: "View Jobticket",
            route: "admin-biller/report-jobtickets/",
            type: 'internallink',
            param: ['_id'],
            cond: 'status',
            condval: 13
          }],
          hideeditbutton: true,
          hidedeletebutton: true,
          hidestatustogglebutton: true,
          hideviewbutton: true,
          tableheaders: ["patient_name", "status_text", "created_at_datetime", "status_datetime", "cpt_addl", "general_details"]
        };
        this.allUserData_modify_header = {
          "general_details": "Related Info",
          "patient_name": "Patient Name",
          "status_text": "Status",
          "created_at_datetime": "Report Added",
          "status_datetime": "Last Status Time",
          "cpt_addl": "CPT/ Addl Hrisk C"
        };
        this.UpdateEndpoint = "addorupdatedata";
        this.deleteEndpoint = "deletesingledata";
        this.apiUrl = _environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].apiBaseUrl1;
        this.tableName = "data_pece";
        this.datacollection = 'getPatientlistdata-approved';
        this.sortdata = {
          "type": 'desc',
          "field": 'patient_name',
          "options": ['patient_name', 'created_at_datetime']
        };
        this.limitcond = {
          "limit": 10,
          "skip": 0,
          "pagecount": 1
        };
        this.previewModal_detail_skip = ['_id', 'user_type', 'status', 'password', 'created_at'];
        this.status = [{
          val: 1,
          'name': 'Active'
        }, {
          val: 0,
          'name': 'Inactive'
        }];
        this.parent_type = [{
          val: "admin",
          'name': 'Admin'
        }, {
          val: "diagnostic_admin",
          'name': 'Diagnostic Admin'
        }, {
          val: "distributors",
          'name': 'Distributor'
        }, {
          val: "doctor_group",
          'name': 'Doctor Group'
        }];
        this.report_type = [{
          val: "RM-3A",
          'name': 'RM-3A'
        }, {
          val: "TM FLOW V3",
          'name': 'TM FLOW V3'
        }, {
          val: "TM FLOW V4",
          'name': 'TM FLOW V4'
        }];
        this.report = [{
          val: "Biller Admin Approved",
          'name': 'Biller Admin Approved'
        }, {
          val: "Biller Admin Not Approved",
          'name': 'Biller Admin Not Approved'
        }, {
          val: "Biller Admin Hold",
          'name': "Biller Admin Hold"
        }];
        this.cptcodes = [{
          val: "95923",
          'name': '95923'
        }, {
          val: "95943",
          'name': '95943'
        }, {
          val: "95921",
          'name': "95921"
        }, {
          val: "93923",
          'name': "93923"
        }, {
          val: "93922",
          'name': "93922"
        }];
        this.status_search = [{
          val: 10,
          'name': 'Biller Admin Approved'
        }, {
          val: 11,
          'name': 'Biller Admin Not Approved'
        }, {
          val: 12,
          'name': "Biller Admin Hold"
        }];
        this.SearchingEndpoint = "datalist";
        this.authval = [];
        this.docofficeval = [];
        this.techval = [];
        this.parentnameval = [];
        this.doctorcity = [];
        this.doctorstate = [];
        this.patientcity = [];
        this.patientstate = [];
        this.SearchingSourceName = "data_biller_list";
        this.search_settings = {
          selectsearch: [{
            label: 'Search By Report Type',
            field: 'report_file_type',
            values: this.report_type
          }, {
            label: 'Search By Parent Type',
            field: 'parent_type',
            values: this.parent_type
          }, {
            label: "Search By Reports",
            field: 'status_text',
            values: this.report
          }, {
            label: 'Search By Status',
            field: 'status_search',
            values: this.status_search
          }, {
            label: 'Search By CPT Codes',
            field: 'cpt_codes_search',
            values: this.cptcodes
          }, {
            label: "Search By Doctor",
            field: 'doc_name_search',
            values: this.authval
          }, {
            label: "Search By Tech",
            field: 'tech_name_search',
            values: this.techval
          }, {
            label: "Search By Doctor Office",
            field: 'author_search',
            values: this.docofficeval
          }, {
            label: "Search By Parent Name",
            field: 'patient_name',
            values: this.parentnameval
          }, {
            label: "Search By Doctor City",
            field: 'author_search',
            values: this.doctorcity
          }, {
            label: "Search By Doctor State",
            field: 'author_search',
            values: this.doctorstate
          }, {
            label: "Search By Parent City",
            field: 'author_search',
            values: this.patientcity
          }, {
            label: "Search By Parent State",
            field: 'author_search',
            values: this.patientstate
          }],
          textsearch: [{
            label: "Search By Patient Name",
            field: 'patient_name_search'
          }]
        };
        this.loginUserData["user_details"] = cookieService.getAll();
        this.loginUserData["jwtToken"] = cookieService.get('jwtToken');
        /* Get Auth Token */

        this.jwtToken = cookieService.get('jwtToken'); // lib list

        var endpoint = 'getPatientlistdata-approved';
        var endpointc = 'getPatientlistdata-approved-count';
        var data = {
          "condition": {
            "limit": 10,
            "skip": 0
          },
          sort: {
            "type": 'desc',
            "field": 'patient_name'
          }
        };
        this.http.httpViaPostbyApi1(endpointc, data).subscribe(function (res) {
          _this117.billerData_count = res.count;
        }, function (error) {
          console.log('Oooops!');
        });
        this.http.httpViaPostbyApi1(endpoint, data).subscribe(function (res) {
          // console.log(res);
          _this117.allBillerData = res.results.res;
        }, function (error) {
          console.log('Oooops!');
        });
      }

      _createClass(ApprovedPatientReportsBilleradminComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this118 = this;

          var data = {
            "source": "patient_data_desc_patient_name",
            "condition": {},
            "token": this.jwtToken
          };
          this.http.httpViaPost("datalist", data).subscribe(function (response) {
            var start = false;
            var count = 0;

            for (var i in response.res) {
              if (response.res[i].doc_name_search != "") {
                for (var j in _this118.authval) {
                  if (response.res[i].doc_name == _this118.authval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this118.authval.push({
                    name: response.res[i].doc_name,
                    val: response.res[i].doc_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].tech_name_search != "") {
                for (var j in _this118.techval) {
                  if (response.res[i].tech_namesearch == _this118.techval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this118.techval.push({
                    name: response.res[i].tech_namesearch,
                    val: response.res[i].tech_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].parent_name_search != "") {
                for (var j in _this118.parentnameval) {
                  if (response.res[i].parent_namesearch == _this118.parentnameval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this118.parentnameval.push({
                    name: response.res[i].parent_namesearch,
                    val: response.res[i].parent_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].doctor_state_search != "") {
                for (var j in _this118.doctorstate) {
                  if (response.res[i].doctor_state == _this118.doctorstate[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this118.doctorstate.push({
                    name: response.res[i].doctor_state,
                    val: response.res[i].doctor_state_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].doctor_city_search != "") {
                for (var j in _this118.doctorcity) {
                  if (response.res[i].doctor_city == _this118.doctorcity[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this118.doctorcity.push({
                    name: response.res[i].doctor_city,
                    val: response.res[i].doctor_city_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].patient_city_search != "") {
                for (var j in _this118.patientcity) {
                  if (response.res[i].patient_city == _this118.patientcity[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this118.patientcity.push({
                    name: response.res[i].patient_city,
                    val: response.res[i].patient_city_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].patient_state_search != "") {
                for (var j in _this118.patientstate) {
                  if (response.res[i].patient_state == _this118.patientstate[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this118.patientstate.push({
                    name: response.res[i].patient_state,
                    val: response.res[i].patient_state_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].doctor_ofiice_name_search != "") {
                for (var j in _this118.docofficeval) {
                  if (response.res[i].doctor_ofiice_namesearch == _this118.docofficeval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this118.docofficeval.push({
                    name: response.res[i].doctor_ofiice_namesearch,
                    val: response.res[i].doctor_ofiice_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }
          }, function (error) {
            console.log('Oooops!');
          });
        }
      }, {
        key: "ngAfterViewInit",
        value: function ngAfterViewInit() {}
      }, {
        key: "viewReportProcessData",
        value: function viewReportProcessData(flag) {
          console.log(flag);
        }
      }]);

      return ApprovedPatientReportsBilleradminComponent;
    }();

    ApprovedPatientReportsBilleradminComponent.ctorParameters = function () {
      return [{
        type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__["HttpServiceService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatDialog"]
      }, {
        type: ngx_device_detector__WEBPACK_IMPORTED_MODULE_6__["DeviceDetectorService"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatSnackBar"]
      }];
    };

    ApprovedPatientReportsBilleradminComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-approved-patient-reports-billeradmin',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./approved-patient-reports-billeradmin.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/adminbiller/approved-patient-reports/approved-patient-reports-billeradmin/approved-patient-reports-billeradmin.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./approved-patient-reports-billeradmin.component.css */
      "./src/app/components/adminbiller/approved-patient-reports/approved-patient-reports-billeradmin/approved-patient-reports-billeradmin.component.css"))["default"]]
    })], ApprovedPatientReportsBilleradminComponent);
    /***/
  },

  /***/
  "./src/app/components/auth/forgetpassword/forgetpassword.component.css":
  /*!*****************************************************************************!*\
    !*** ./src/app/components/auth/forgetpassword/forgetpassword.component.css ***!
    \*****************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAuthForgetpasswordForgetpasswordComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYXV0aC9mb3JnZXRwYXNzd29yZC9mb3JnZXRwYXNzd29yZC5jb21wb25lbnQuY3NzIn0= */";
    /***/
  },

  /***/
  "./src/app/components/auth/forgetpassword/forgetpassword.component.ts":
  /*!****************************************************************************!*\
    !*** ./src/app/components/auth/forgetpassword/forgetpassword.component.ts ***!
    \****************************************************************************/

  /*! exports provided: ForgetpasswordComponent */

  /***/
  function srcAppComponentsAuthForgetpasswordForgetpasswordComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ForgetpasswordComponent", function () {
      return ForgetpasswordComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _class_common_common_function__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../../class/common/common-function */
    "./src/app/class/common/common-function.ts");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../../../environments/environment */
    "./src/environments/environment.ts");

    var ForgetpasswordComponent = /*#__PURE__*/function () {
      function ForgetpasswordComponent(commonFunction) {
        _classCallCheck(this, ForgetpasswordComponent);

        this.commonFunction = commonFunction; // public formTitle : "resetttt forrmm";

        this.logo = '../../assets/favicon.ico'; // public signUpRouteingUrl: any = 'sign-up';

        this.serverUrl = _environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiBaseUrl;
        this.addEndpoint = {
          endpoint: 'forgetpassword'
        };
        this.loginRouteingUrl = {
          // "path":"login",
          "path": "",
          "buttonName": "login",
          "customLink": "/login",
          "customURl": ""
        };
        this.signUpRouteingUrl = {
          "path": "",
          "customLink": ""
        };
        this.buttonName = 'Reset Password';
        this.domainUrl = _environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].siteBaseUrl + '/reset-password';
        /* Set Meta Data */

        this.commonFunction.setTitleMetaTags();
      }

      _createClass(ForgetpasswordComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }]);

      return ForgetpasswordComponent;
    }();

    ForgetpasswordComponent.ctorParameters = function () {
      return [{
        type: _class_common_common_function__WEBPACK_IMPORTED_MODULE_2__["CommonFunction"]
      }];
    };

    ForgetpasswordComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-forgetpassword',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./forgetpassword.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/auth/forgetpassword/forgetpassword.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./forgetpassword.component.css */
      "./src/app/components/auth/forgetpassword/forgetpassword.component.css"))["default"]]
    })], ForgetpasswordComponent);
    /***/
  },

  /***/
  "./src/app/components/auth/login/login.component.css":
  /*!***********************************************************!*\
    !*** ./src/app/components/auth/login/login.component.css ***!
    \***********************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAuthLoginLoginComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIn0= */";
    /***/
  },

  /***/
  "./src/app/components/auth/login/login.component.ts":
  /*!**********************************************************!*\
    !*** ./src/app/components/auth/login/login.component.ts ***!
    \**********************************************************/

  /*! exports provided: LoginComponent */

  /***/
  function srcAppComponentsAuthLoginLoginComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "LoginComponent", function () {
      return LoginComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _class_common_common_function__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../../class/common/common-function */
    "./src/app/class/common/common-function.ts");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../../environments/environment */
    "./src/environments/environment.ts");

    var LoginComponent = /*#__PURE__*/function () {
      function LoginComponent(cookies, commonFunction) {
        _classCallCheck(this, LoginComponent);

        this.cookies = cookies;
        this.commonFunction = commonFunction;
        this.logo = './assets/images/logo.png';
        this.ipinfoid = '9797c42b93078a';
        this.fromTitle = "Login Here"; // This is a From Title

        this.fullUrl = _environments_environment__WEBPACK_IMPORTED_MODULE_4__["environment"].apiBaseUrl; // server url

        this.endpoint = "login";
        this.buttonName = 'Login Button';
        this.defaultLoginUrl = '/login';
        this.signUpRouteingUrl = {
          "path": "",
          // "buttonName": "",
          "customLink": ""
        };
        this.forgetRouteingUrl = {
          "path": "",
          "buttonName": "Forget Password",
          "customLink": "/forget-password"
        };
        /* Set Meta Data */

        this.commonFunction.setTitleMetaTags();
        this.routerStatus = {
          "data": [{
            "user_type": "admin",
            "routerNav": "admin/dashboard",
            cookies: {
              _id: '_id',
              user_type: "user_type",
              useremail: 'email',
              jwtToken: 'jwttoken',
              firstname: 'firstname',
              lastname: 'lastname',
              user_details: 'user_details'
            }
          }, {
            "user_type": "doctor",
            "routerNav": "doctor/dashboard",
            cookies: {
              _id: '_id',
              user_type: "user_type",
              useremail: 'email',
              jwtToken: 'jwttoken',
              tech_id: "tech_id",
              parent_type: "parent_type",
              firstname: 'firstname',
              lastname: 'lastname',
              user_details: "user_details"
            }
          }, {
            "user_type": "tech",
            "routerNav": "tech/dashboard",
            cookies: {
              _id: '_id',
              user_type: "user_type",
              useremail: 'email',
              jwtToken: 'jwttoken',
              user_details: "user_details"
            }
          }, {
            "user_type": "biller",
            "routerNav": "biller/dashboard",
            cookies: {
              _id: '_id',
              user_type: "user_type",
              useremail: 'email',
              jwtToken: 'jwttoken',
              user_details: "user_details"
            }
          }, {
            "user_type": "doctor_office",
            "routerNav": "doctor-office/dashboard",
            cookies: {
              _id: '_id',
              user_type: "user_type",
              useremail: 'email',
              jwtToken: 'jwttoken',
              user_details: "user_details"
            }
          }, {
            "user_type": "diagnostic_admin",
            "routerNav": "diagnostic-admin/dashboard",
            cookies: {
              _id: '_id',
              user_type: "user_type",
              useremail: 'email',
              jwtToken: 'jwttoken',
              user_details: "user_details"
            }
          }, {
            "user_type": "doctor_group",
            "routerNav": "doctor-group/dashboard",
            cookies: {
              _id: '_id',
              user_type: "user_type",
              useremail: 'email',
              jwttoken: 'jwttoken',
              user_details: "user_details"
            }
          }, {
            "user_type": "sales_person",
            "routerNav": "sales-person/dashboard",
            cookies: {
              _id: '_id',
              user_type: "user_type",
              useremail: 'email',
              jwtToken: 'jwttoken',
              user_details: "user_details"
            }
          }, {
            "user_type": "doctor_group",
            "routerNav": "doctor-group/dashboard",
            cookies: {
              _id: '_id',
              user_type: "user_type",
              useremail: 'email',
              jwtToken: 'jwttoken',
              user_details: "user_details"
            }
          }, {
            "user_type": "distributors",
            "routerNav": "distributors/dashboard",
            cookies: {
              _id: '_id',
              user_type: "user_type",
              useremail: 'email',
              jwtToken: 'jwttoken',
              user_details: "user_details"
            }
          }, {
            "user_type": "admin_biller",
            "routerNav": "admin-biller/dashboard",
            cookies: {
              _id: '_id',
              user_type: "user_type",
              useremail: 'email',
              jwtToken: 'jwttoken',
              user_details: "user_details"
            }
          }]
        };
      }

      _createClass(LoginComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }]);

      return LoginComponent;
    }();

    LoginComponent.ctorParameters = function () {
      return [{
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__["CookieService"]
      }, {
        type: _class_common_common_function__WEBPACK_IMPORTED_MODULE_2__["CommonFunction"]
      }];
    };

    LoginComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-login',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./login.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/auth/login/login.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./login.component.css */
      "./src/app/components/auth/login/login.component.css"))["default"]]
    })], LoginComponent);
    /***/
  },

  /***/
  "./src/app/components/auth/logout/logout.component.css":
  /*!*************************************************************!*\
    !*** ./src/app/components/auth/logout/logout.component.css ***!
    \*************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAuthLogoutLogoutComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = ".bodytextcenter {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9hdXRoL2xvZ291dC9sb2dvdXQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLFlBQVk7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2F1dGgvbG9nb3V0L2xvZ291dC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJvZHl0ZXh0Y2VudGVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgaGVpZ2h0OiAxMDAlO1xufSJdfQ== */";
    /***/
  },

  /***/
  "./src/app/components/auth/logout/logout.component.ts":
  /*!************************************************************!*\
    !*** ./src/app/components/auth/logout/logout.component.ts ***!
    \************************************************************/

  /*! exports provided: LogoutComponent */

  /***/
  function srcAppComponentsAuthLogoutLogoutComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "LogoutComponent", function () {
      return LogoutComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _class_common_common_function__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../class/common/common-function */
    "./src/app/class/common/common-function.ts");

    var LogoutComponent = /*#__PURE__*/function () {
      function LogoutComponent(cookies, router, commonFunction) {
        _classCallCheck(this, LogoutComponent);

        this.cookies = cookies;
        this.router = router;
        this.commonFunction = commonFunction;
        this.status = true;
        this.user_data = {};
        this.loader = true;
        this.cookies["delete"]('jwtToken');
        this.cookies["delete"]('user_details');
        this.cookies.deleteAll();
        this.cookies.deleteAll('/');
      }

      _createClass(LogoutComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this119 = this;

          this.cookies["delete"]('jwtToken');
          this.cookies["delete"]('user_details');
          this.cookies.deleteAll();
          this.cookies.deleteAll('/');
          setTimeout(function () {
            _this119.router.navigateByUrl('login');

            window.location.href = '/';
          }, 1500);
        }
      }]);

      return LogoutComponent;
    }();

    LogoutComponent.ctorParameters = function () {
      return [{
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"]
      }, {
        type: _class_common_common_function__WEBPACK_IMPORTED_MODULE_4__["CommonFunction"]
      }];
    };

    LogoutComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-logout',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./logout.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/auth/logout/logout.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./logout.component.css */
      "./src/app/components/auth/logout/logout.component.css"))["default"]]
    })], LogoutComponent);
    /***/
  },

  /***/
  "./src/app/components/auth/resetpassword/resetpassword.component.css":
  /*!***************************************************************************!*\
    !*** ./src/app/components/auth/resetpassword/resetpassword.component.css ***!
    \***************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsAuthResetpasswordResetpasswordComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYXV0aC9yZXNldHBhc3N3b3JkL3Jlc2V0cGFzc3dvcmQuY29tcG9uZW50LmNzcyJ9 */";
    /***/
  },

  /***/
  "./src/app/components/auth/resetpassword/resetpassword.component.ts":
  /*!**************************************************************************!*\
    !*** ./src/app/components/auth/resetpassword/resetpassword.component.ts ***!
    \**************************************************************************/

  /*! exports provided: ResetpasswordComponent */

  /***/
  function srcAppComponentsAuthResetpasswordResetpasswordComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ResetpasswordComponent", function () {
      return ResetpasswordComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _class_common_common_function__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../../class/common/common-function */
    "./src/app/class/common/common-function.ts");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../../../environments/environment */
    "./src/environments/environment.ts");

    var ResetpasswordComponent = /*#__PURE__*/function () {
      function ResetpasswordComponent(commonFunction) {
        _classCallCheck(this, ResetpasswordComponent);

        this.commonFunction = commonFunction;
        this.fromTitleName = 'Change Your Password Here';
        this.logo = './assets/images/logo.png';
        this.serverUrl = _environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiBaseUrl;
        this.addEndpoint = {
          endpoint: 'resetpassword',
          source: 'users'
        };
        /* Set Meta Data */

        this.commonFunction.setTitleMetaTags();
      }

      _createClass(ResetpasswordComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }]);

      return ResetpasswordComponent;
    }();

    ResetpasswordComponent.ctorParameters = function () {
      return [{
        type: _class_common_common_function__WEBPACK_IMPORTED_MODULE_2__["CommonFunction"]
      }];
    };

    ResetpasswordComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-resetpassword',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./resetpassword.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/auth/resetpassword/resetpassword.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./resetpassword.component.css */
      "./src/app/components/auth/resetpassword/resetpassword.component.css"))["default"]]
    })], ResetpasswordComponent);
    /***/
  },

  /***/
  "./src/app/components/biller/biller-dashboard/biller-dashboard.component.css":
  /*!***********************************************************************************!*\
    !*** ./src/app/components/biller/biller-dashboard/biller-dashboard.component.css ***!
    \***********************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsBillerBillerDashboardBillerDashboardComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "@media screen and (max-width: 991px) {\n.patient_report_section .patient_top_search { display: flex; flex-direction: column; }\n.biller_Dashboard .patient_report_section .patient_top_search h1 { margin-bottom: 10px; }\n.patient_report_section .patient_top_search .search_bar { display: flex; flex-wrap: wrap; align-items: center; justify-content: center; }\n.patient_report_section .form_wrapper { display: flex; margin-bottom: 16px; }\n.patient_report_section .patient_top_search .search_bar { justify-content: flex-start;}\n}\n\n@media screen and (max-width: 600px){\n.admin_superbillsection .biller_wrapper .super_bill_item { margin: 0; margin-bottom: 16px; }\n.admin_superbillsection .biller_wrapper .super_bill_item:last-child { margin: 0; }\n.patient_report_section .form_wrapper { display: flex; margin-bottom: 16px; width: 100%; }\n.patient_report_section .form_wrapper .mat-form-field{ width: 100%; }\n.admin_superbillsection .biller_wrapper { display: flex; justify-content: center; flex-wrap: wrap; }\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9iaWxsZXIvYmlsbGVyLWRhc2hib2FyZC9iaWxsZXItZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSw4Q0FBOEMsYUFBYSxFQUFFLHNCQUFzQixFQUFFO0FBQ3JGLG1FQUFtRSxtQkFBbUIsRUFBRTtBQUN4RiwwREFBMEQsYUFBYSxFQUFFLGVBQWUsRUFBRSxtQkFBbUIsRUFBRSx1QkFBdUIsRUFBRTtBQUN4SSx3Q0FBd0MsYUFBYSxFQUFFLG1CQUFtQixFQUFFO0FBQzVFLDBEQUEwRCwyQkFBMkIsQ0FBQztBQUN0Rjs7QUFFQTtBQUNBLDJEQUEyRCxTQUFTLEVBQUUsbUJBQW1CLEVBQUU7QUFDM0Ysc0VBQXNFLFNBQVMsRUFBRTtBQUNqRix3Q0FBd0MsYUFBYSxFQUFFLG1CQUFtQixFQUFFLFdBQVcsRUFBRTtBQUN6Rix1REFBdUQsV0FBVyxFQUFFO0FBQ3BFLDBDQUEwQyxhQUFhLEVBQUUsdUJBQXVCLEVBQUUsZUFBZSxFQUFFO0FBQ25HIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9iaWxsZXIvYmlsbGVyLWRhc2hib2FyZC9iaWxsZXItZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5OTFweCkge1xuLnBhdGllbnRfcmVwb3J0X3NlY3Rpb24gLnBhdGllbnRfdG9wX3NlYXJjaCB7IGRpc3BsYXk6IGZsZXg7IGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IH1cbi5iaWxsZXJfRGFzaGJvYXJkIC5wYXRpZW50X3JlcG9ydF9zZWN0aW9uIC5wYXRpZW50X3RvcF9zZWFyY2ggaDEgeyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9XG4ucGF0aWVudF9yZXBvcnRfc2VjdGlvbiAucGF0aWVudF90b3Bfc2VhcmNoIC5zZWFyY2hfYmFyIHsgZGlzcGxheTogZmxleDsgZmxleC13cmFwOiB3cmFwOyBhbGlnbi1pdGVtczogY2VudGVyOyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgfVxuLnBhdGllbnRfcmVwb3J0X3NlY3Rpb24gLmZvcm1fd3JhcHBlciB7IGRpc3BsYXk6IGZsZXg7IG1hcmdpbi1ib3R0b206IDE2cHg7IH1cbi5wYXRpZW50X3JlcG9ydF9zZWN0aW9uIC5wYXRpZW50X3RvcF9zZWFyY2ggLnNlYXJjaF9iYXIgeyBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7fVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA2MDBweCl7XG4uYWRtaW5fc3VwZXJiaWxsc2VjdGlvbiAuYmlsbGVyX3dyYXBwZXIgLnN1cGVyX2JpbGxfaXRlbSB7IG1hcmdpbjogMDsgbWFyZ2luLWJvdHRvbTogMTZweDsgfVxuLmFkbWluX3N1cGVyYmlsbHNlY3Rpb24gLmJpbGxlcl93cmFwcGVyIC5zdXBlcl9iaWxsX2l0ZW06bGFzdC1jaGlsZCB7IG1hcmdpbjogMDsgfVxuLnBhdGllbnRfcmVwb3J0X3NlY3Rpb24gLmZvcm1fd3JhcHBlciB7IGRpc3BsYXk6IGZsZXg7IG1hcmdpbi1ib3R0b206IDE2cHg7IHdpZHRoOiAxMDAlOyB9XG4ucGF0aWVudF9yZXBvcnRfc2VjdGlvbiAuZm9ybV93cmFwcGVyIC5tYXQtZm9ybS1maWVsZHsgd2lkdGg6IDEwMCU7IH1cbi5hZG1pbl9zdXBlcmJpbGxzZWN0aW9uIC5iaWxsZXJfd3JhcHBlciB7IGRpc3BsYXk6IGZsZXg7IGp1c3RpZnktY29udGVudDogY2VudGVyOyBmbGV4LXdyYXA6IHdyYXA7IH1cbn0iXX0= */";
    /***/
  },

  /***/
  "./src/app/components/biller/biller-dashboard/biller-dashboard.component.ts":
  /*!**********************************************************************************!*\
    !*** ./src/app/components/biller/biller-dashboard/biller-dashboard.component.ts ***!
    \**********************************************************************************/

  /*! exports provided: BillerDashboardComponent */

  /***/
  function srcAppComponentsBillerBillerDashboardBillerDashboardComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BillerDashboardComponent", function () {
      return BillerDashboardComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/common/http */
    "./node_modules/@angular/common/fesm2015/http.js");
    /* harmony import */


    var _class_common_common_function__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../../class/common/common-function */
    "./src/app/class/common/common-function.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/material/paginator */
    "./node_modules/@angular/material/esm2015/paginator.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var ngx_device_detector__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ngx-device-detector */
    "./node_modules/ngx-device-detector/fesm2015/ngx-device-detector.js");
    /* harmony import */


    var moment__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! moment */
    "./node_modules/moment/moment.js");
    /* harmony import */


    var moment__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_10__);
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
    /*! ../../../../environments/environment */
    "./src/environments/environment.ts");

    var moment = moment__WEBPACK_IMPORTED_MODULE_10__;

    var BillerDashboardComponent = /*#__PURE__*/function () {
      // lib list end
      function BillerDashboardComponent(http, commonFunction, activatedRoute, cookieService, httpService, deviceService, matSnackBar) {
        var _this120 = this;

        _classCallCheck(this, BillerDashboardComponent);

        this.http = http;
        this.commonFunction = commonFunction;
        this.activatedRoute = activatedRoute;
        this.cookieService = cookieService;
        this.httpService = httpService;
        this.deviceService = deviceService;
        this.matSnackBar = matSnackBar;
        this.htmlText = {
          tableHeaderText: "Patient Reports"
        };
        this.searchJson = {
          doctorName: "",
          patientName: "",
          status: "",
          dateRange: ""
        };
        this.loginUserData = {};
        this.jwtToken = "";
        this.displayedColumns = ['no', 'Patient Name', 'Doctor Name', 'Tech Name', 'Bill Sent Date', 'Bill Generation Date', 'Status', 'report_type', 'Action'];
        /* Initializing the datasource to null */

        this.dataSource = null;
        this.allBillerData = [];
        this.billerData_count = 0;
        this.allUserData_skip = ["_id", "report_file_type", "tech_id", "tech_email", "batch_name", "report_type", "status", "file_basepath", "file_bucketname", "file_name", "file_original_name", "file_type", "converted_image", "images", "patient_details", "patient_name_search", "report_life_circle", "note", "additional_potential_health_risks", "cpt_codes", "created_at"];
        this.editUrl = "admin/biller-management/edit";
        this.libdata = {
          basecondition: "",
          updateendpoint: 'status-update-doctor',
          custombuttons: [{
            label: "Download Report",
            route: "direct-Download-Reports/super-bill",
            type: 'internallink',
            param: ['_id']
          }],
          hideeditbutton: true,
          hidedeletebutton: true,
          hidestatustogglebutton: true,
          hidemultipleselectbutton: true,
          hidedeletemany: true,
          hideupdatemany: true,
          hideviewbutton: true,
          tableheaders: ["patient_name", "status_text", "created_at_datetime", "cpt_addl", "general_details"]
        };
        this.allUserData_modify_header = {
          "general_details": "Related Info",
          "patient_name": "Patient Name",
          "status_text": "Status",
          "created_at_datetime": "Report Added",
          "cpt_addl": "CPT/ Addl Hrisk C"
        };
        this.UpdateEndpoint = "addorupdatedata";
        this.deleteEndpoint = "deletesingledata";
        this.apiUrl = _environments_environment__WEBPACK_IMPORTED_MODULE_11__["environment"].apiBaseUrl1;
        this.tableName = "data_pece";
        this.datacollection = 'getPatientlistdata';
        this.sortdata = {
          "type": 'desc',
          "field": 'patient_name',
          "options": ['patient_name', 'created_at_datetime']
        };
        this.limitcond = {
          "limit": 10,
          "skip": 0,
          "pagecount": 1
        };
        this.previewModal_detail_skip = ['_id', 'user_type', 'status', 'password', 'created_at'];
        this.status = [{
          val: "Send to Biller",
          'name': 'Send to Biller'
        }];
        this.parent_type = [{
          val: "admin",
          'name': 'Admin'
        }, {
          val: "diagnostic_admin",
          'name': 'Diagnostic Admin'
        }, {
          val: "distributors",
          'name': 'Distributor'
        }, {
          val: "doctor_group",
          'name': 'Doctor Group'
        }];
        this.report_type = [{
          val: "RM-3A",
          'name': 'RM-3A'
        }, {
          val: "TM FLOW V3",
          'name': 'TM FLOW V3'
        }, {
          val: "TM FLOW V4",
          'name': 'TM FLOW V4'
        }, {
          val: "CMAT with BP Cuffs",
          'name': "CMAT with BP Cuffs"
        }];
        this.statussearch = [{
          val: 15,
          'name': 'Send to Biller'
        }, {
          val: 16,
          'name': 'Report Downloded'
        }];
        this.SearchingEndpoint = "datalist";
        this.authval = [];
        this.docofficeval = [];
        this.techval = [];
        this.parentnameval = [];
        this.doctorcity = [];
        this.doctorstate = [];
        this.patientcity = [];
        this.patientstate = [];
        this.SearchingSourceName = "data_biller_list";
        this.search_settings = {
          selectsearch: [{
            label: 'Search By Report Type',
            field: 'report_file_type',
            values: this.report_type
          }, {
            label: 'Search By Status',
            field: 'status_search',
            values: this.statussearch
          }, {
            label: "Search By Doctor",
            field: 'doc_name_search',
            values: this.authval
          }, {
            label: "Search By Tech",
            field: 'tech_name_search',
            values: this.techval
          }, {
            label: "Search By Doctor Office",
            field: 'doctor_ofiice_name_search',
            values: this.docofficeval
          }, {
            label: "Search By Doctor City",
            field: 'doctor_city_search',
            values: this.doctorcity
          }, {
            label: "Search By Doctor State",
            field: 'doctor_state_search',
            values: this.doctorstate
          }, {
            label: "Search By Patient City",
            field: 'patient_state_search',
            values: this.patientcity
          }, {
            label: "Search By Patient State",
            field: 'patient_city_search',
            values: this.patientstate
          }],
          datesearch: [{
            startdatelabel: "Start Date",
            enddatelabel: "End Date",
            submit: "Search",
            field: "created_at_datetime"
          }],
          textsearch: [{
            label: "Search By Patient Name",
            field: 'patient_name_search'
          }]
        };
        /* Get and set login User Data */
        // this.loginUserData["user_details"] = JSON.parse(this.cookieService.get('user_details'));

        if (this.activatedRoute.snapshot.params._id) {
          this.loginUserData["user_details"] = {
            _id: this.activatedRoute.snapshot.params._id
          }; // this.authData["parent_type"] = this.activatedRoute.snapshot.params.parent_type;
        } else {
          console.log('************************');
          this.loginUserData["user_details"] = JSON.parse(this.cookieService.get('user_details'));
        }

        this.loginUserData["jwtToken"] = this.cookieService.get('jwtToken');
        /* Get Auth Token */

        this.jwtToken = cookieService.get('jwtToken');
        /* Get IP Address */

        this.httpService.httpViaGetExt("http://api.ipify.org/?format=json", {}).subscribe(function (response) {
          _this120.htmlText.ip = response.ip;
        });
        this.libdata.basecondition = {
          biller_id: this.loginUserData.user_details._id,
          status: {
            "$in": [15, 16]
          }
        };
        var endpoint = 'getPatientlistdata';
        var endpointc = 'getPatientlistdata-count';
        var data = {
          "condition": {
            "limit": 10,
            "skip": 0
          },
          sort: {
            "type": 'desc',
            "field": 'patient_name'
          },
          status: {
            "$gt": 10
          },
          biller_id: this.loginUserData.user_details._id
        };
        this.httpService.httpViaPost(endpointc, data).subscribe(function (res) {
          _this120.billerData_count = res.count;
        }, function (error) {
          console.log('Oooops!');
        });
        this.httpService.httpViaPost(endpoint, data).subscribe(function (res) {
          _this120.allBillerData = res.results.res;
        }, function (error) {
          console.log('Oooops!');
        });
      }

      _createClass(BillerDashboardComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this121 = this;

          this.activatedRoute.data.subscribe(function (resolveData) {
            _this121.allResolveData = resolveData.billerData.data;

            _this121.viewReportData();
          });
          var data = {
            "source": "patient_data_desc_patient_name",
            "condition": {
              status: {
                "$gt": 10
              },
              biller_id_object: this.loginUserData.user_details._id
            },
            "token": this.jwtToken
          };
          this.httpService.httpViaPost("datalist", data).subscribe(function (response) {
            var start = false;
            var count = 0;

            for (var i in response.res) {
              if (response.res[i].doc_name_search != "") {
                for (var j in _this121.authval) {
                  if (response.res[i].doc_name == _this121.authval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this121.authval.push({
                    name: response.res[i].doc_name,
                    val: response.res[i].doc_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].tech_name_search != "") {
                for (var j in _this121.techval) {
                  if (response.res[i].tech_namesearch == _this121.techval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this121.techval.push({
                    name: response.res[i].tech_namesearch,
                    val: response.res[i].tech_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].parent_name_search != "") {
                for (var j in _this121.parentnameval) {
                  if (response.res[i].parent_namesearch == _this121.parentnameval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this121.parentnameval.push({
                    name: response.res[i].parent_namesearch,
                    val: response.res[i].parent_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].doctor_state_search != "") {
                for (var j in _this121.doctorstate) {
                  if (response.res[i].doctor_state == _this121.doctorstate[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this121.doctorstate.push({
                    name: response.res[i].doctor_state,
                    val: response.res[i].doctor_state_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].doctor_city_search != "") {
                for (var j in _this121.doctorcity) {
                  if (response.res[i].doctor_city == _this121.doctorcity[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this121.doctorcity.push({
                    name: response.res[i].doctor_city,
                    val: response.res[i].doctor_city_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].patient_city_search != "") {
                for (var j in _this121.patientcity) {
                  if (response.res[i].patient_city == _this121.patientcity[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this121.patientcity.push({
                    name: response.res[i].patient_city,
                    val: response.res[i].patient_city_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].patient_state_search != "") {
                for (var j in _this121.patientstate) {
                  if (response.res[i].patient_state == _this121.patientstate[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this121.patientstate.push({
                    name: response.res[i].patient_state,
                    val: response.res[i].patient_state_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].doctor_ofiice_name_search != "") {
                for (var j in _this121.docofficeval) {
                  if (response.res[i].doctor_ofiice_namesearch == _this121.docofficeval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this121.docofficeval.push({
                    name: response.res[i].doctor_ofiice_namesearch,
                    val: response.res[i].doctor_ofiice_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }
          }, function (error) {
            console.log('Oooops!');
          });
        }
      }, {
        key: "viewReportData",
        value: function viewReportData() {
          var _this122 = this;

          var flug = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "Patient Reports";
          var paginationOption = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
          this.htmlText.tableHeaderText = flug;

          if (this.searchJson.dateRange != '') {
            this.searchJson.dateRange.end = moment(this.searchJson.dateRange.end, "DD-MM-YYYY").add(1, 'days');
          } // Request Condition


          var repostSignCond = {
            "source": "data_pece",
            "token": this.loginUserData.jwtToken,
            "search": this.searchJson,
            "condition": {
              "report_type": {
                $exists: true
              },
              "biller_id": this.loginUserData.user_details._id
            },
            "pagination": {
              "skip": 0,
              "limit": 50
            }
          };

          switch (flug) {
            case 'Total Downloaded':
              repostSignCond.condition.download_count = {
                $exists: true
              };
              break;

            case 'Not Downloaded':
              repostSignCond.condition.download_count = {
                $exists: false
              };
              break;

            default:
              break;
          }

          this.httpService.httpViaPost('dashboard-datalist', repostSignCond).subscribe(function (response) {
            /* Fetching the data into table */
            _this122.dataSource = new _angular_material__WEBPACK_IMPORTED_MODULE_6__["MatTableDataSource"](response.data);
            /* Adding the paginator options */

            _this122.dataSource.paginator = _this122.paginator;
            _this122.dataSource.sort = _this122.sort;
          });
        }
      }, {
        key: "downloadReport",
        value: function downloadReport(report) {
          var _this123 = this;

          if (typeof report.download_count == "undefined") {
            report.download_count = 1;
          } else {
            report.download_count = report.download_count + 1;
          }
          /* Collect User Information for Download record */


          var deviceInfo = this.deviceService.getDeviceInfo();
          deviceInfo["isMobile"] = this.deviceService.isMobile();
          deviceInfo["isTablet"] = this.deviceService.isTablet();
          deviceInfo["isDesktop"] = this.deviceService.isDesktop();
          /* Set downloader information */

          var userDetails = {
            id: this.loginUserData.user_details._id,
            type: this.loginUserData.user_details.type
          };
          var postData = {
            "source": "report_download",
            "data": {
              "report_id": report._id,
              "biller_id": this.loginUserData.user_details._id,
              "tech_id": report.tech_id,
              "doctor_id": report.doctor_id,
              "ip": this.htmlText.ip,
              "download_attempt": 1,
              "downloader_information": userDetails,
              "device_information": deviceInfo
            },
            "sourceobj": ["report_id", "biller_id", "tech_id", "doctor_id"],
            "download_count": report.download_count,
            "token": this.loginUserData.jwtToken
          };
          this.httpService.httpViaPost("addorupdatedata", postData).subscribe(function (response) {
            if (response.status == 'success') {
              _this123.matSnackBar.open("Start downloading.", "Ok", {
                duration: 3000
              });

              window.open(report.file_basepath + report.file_name, "_blank");
              var _postData = {
                "source": "data_pece",
                "data": {
                  "id": report._id,
                  "download_count": report.download_count
                },
                "token": _this123.loginUserData.jwtToken
              };

              _this123.httpService.httpViaPost("addorupdatedata", _postData).subscribe(function (response) {// code here
              });
            } else {
              _this123.matSnackBar.open("Some error occord. Please try again.", "Ok", {
                duration: 3000
              });
            }
          });
        }
      }]);

      return BillerDashboardComponent;
    }();

    BillerDashboardComponent.ctorParameters = function () {
      return [{
        type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"]
      }, {
        type: _class_common_common_function__WEBPACK_IMPORTED_MODULE_3__["CommonFunction"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_7__["CookieService"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_8__["HttpServiceService"]
      }, {
        type: ngx_device_detector__WEBPACK_IMPORTED_MODULE_9__["DeviceDetectorService"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_6__["MatSnackBar"]
      }];
    };

    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_paginator__WEBPACK_IMPORTED_MODULE_5__["MatPaginator"], {
      "static": true
    })], BillerDashboardComponent.prototype, "paginator", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material__WEBPACK_IMPORTED_MODULE_6__["MatSort"], {
      "static": true
    })], BillerDashboardComponent.prototype, "sort", void 0);
    BillerDashboardComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-biller-dashboard',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./biller-dashboard.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/biller/biller-dashboard/biller-dashboard.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./biller-dashboard.component.css */
      "./src/app/components/biller/biller-dashboard/biller-dashboard.component.css"))["default"]]
    })], BillerDashboardComponent);
    /***/
  },

  /***/
  "./src/app/components/biller/biller-footer/biller-footer.component.css":
  /*!*****************************************************************************!*\
    !*** ./src/app/components/biller/biller-footer/biller-footer.component.css ***!
    \*****************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsBillerBillerFooterBillerFooterComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYmlsbGVyL2JpbGxlci1mb290ZXIvYmlsbGVyLWZvb3Rlci5jb21wb25lbnQuY3NzIn0= */";
    /***/
  },

  /***/
  "./src/app/components/biller/biller-footer/biller-footer.component.ts":
  /*!****************************************************************************!*\
    !*** ./src/app/components/biller/biller-footer/biller-footer.component.ts ***!
    \****************************************************************************/

  /*! exports provided: BillerFooterComponent */

  /***/
  function srcAppComponentsBillerBillerFooterBillerFooterComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BillerFooterComponent", function () {
      return BillerFooterComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");

    var BillerFooterComponent = /*#__PURE__*/function () {
      function BillerFooterComponent() {
        _classCallCheck(this, BillerFooterComponent);

        this.htmlData = {};
        this.htmlData["year"] = new Date().getFullYear();
      }

      _createClass(BillerFooterComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }]);

      return BillerFooterComponent;
    }();

    BillerFooterComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-biller-footer',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./biller-footer.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/biller/biller-footer/biller-footer.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./biller-footer.component.css */
      "./src/app/components/biller/biller-footer/biller-footer.component.css"))["default"]]
    })], BillerFooterComponent);
    /***/
  },

  /***/
  "./src/app/components/biller/biller-header/biller-header.component.css":
  /*!*****************************************************************************!*\
    !*** ./src/app/components/biller/biller-header/biller-header.component.css ***!
    \*****************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsBillerBillerHeaderBillerHeaderComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/* header css */\n\n.techdashboard_header { height: auto; padding: 0; background: #fff; box-shadow: 0px 2px 7px 2px #b7b7b7; margin: 20px 0; }\n\n.techdashboard_header .header_wrapper{ width: 1400px; margin: 0 auto; display: flex; align-items: center; justify-content: space-between; position: relative;}\n\n.techdashboard_header .logo_wrapper { max-width: 160px; display: block; cursor: pointer; flex: none; }\n\n.techdashboard_header .logo_wrapper:focus { outline: none; border: none; }\n\n.techdashboard_header .logo_wrapper img { max-width: 100%; vertical-align: middle; }\n\n.techdashboard_header .quotation { margin-bottom: 0px; }\n\n.techdashboard_header .quotation p { font-family: \"AvenirMedium\"; font-size: 22px; color: #002035; text-transform: uppercase; margin: 0; word-break: break-word; white-space: normal;\n  text-align: center; line-height: 22px;}\n\n.techdashboard_header .profile_section button { padding-top: 8px; }\n\n.techdashboard_header .profile_section {  display: flex;  border-left: 1px solid #ada9a9;  padding-left: 5px;  margin-bottom: 0;  justify-content: center;  align-items: center; }\n\n.techdashboard_header .profile_section .username { padding-right: 10px;\n  display: block;\n  font-family: \"AvenirRoman\";\n  font-size: 16px;\n  color: #1f1f1f;}\n\n.techdashboard_header .quotation .mat-list-base { display: flex; padding-top: 0; }\n\n/* .techdashboard_header .quotation .mat-list-base .mat-list-item:before {\n  content: \"\";\n  left: -15px;\n  width: 2px;\n  height: 15px;\n  background: #1c1c1c;\n  display: inline-block;\n  position: absolute;\n  top: 35%;\n} */\n\n.techdashboard_header .quotation .mat-nav-list .mat-list-item { margin: 0; position: relative; font-family: \"AvenirMedium\"; font-size: 16px; color: #767676;}\n\n.active { color: #000000!important;  /* border-bottom: 3px solid #fecb00; position: relative; */}\n\n.active::before{ content: ''; width: 100%; height: 4px; background: #fecb00; position: absolute; bottom: -25px; }\n\n.togle_menu { display: none;}\n\n@media screen and (max-width: 1500px){\n  .techdashboard_header .header_wrapper { width: 90%; }\n}\n\n@media screen and (max-width: 1199px){\n.techdashboard_header .quotation p { font-size: 18px;}\n}\n\n@media screen and (max-width: 991px){\n.techdashboard_header .header_wrapper { display: flex; flex-direction: column; }\n.techdashboard_header .quotation p { margin: 10px 5px; }\n.techdashboard_header .profile_section{ border-left: 0;}\n.togle_menu { display: block; margin-top: 0; background: #f8c655;\n  color: #fff; min-width: auto; margin-left: auto; position: absolute; right: 10px; top: 40px;}\n.success{ display: block;}\n.danger{ display: none;}\n.techdashboard_header .quotation .mat-list-base { display: flex; flex-direction: column; }\n.techdashboard_header .quotation { width: 100%;}\n.active::before{ bottom: 0; height: 2px;}\n.techdashboard_header .quotation .mat-nav-list .mat-list-item { display: flex; justify-content: center; }\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9iaWxsZXIvYmlsbGVyLWhlYWRlci9iaWxsZXItaGVhZGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLGVBQWU7O0FBRWYsd0JBQXdCLFlBQVksRUFBRSxVQUFVLEVBQUUsZ0JBQWdCLEVBQUUsbUNBQW1DLEVBQUUsY0FBYyxFQUFFOztBQUN6SCx1Q0FBdUMsYUFBYSxFQUFFLGNBQWMsRUFBRSxhQUFhLEVBQUUsbUJBQW1CLEVBQUUsOEJBQThCLEVBQUUsa0JBQWtCLENBQUM7O0FBQzdKLHNDQUFzQyxnQkFBZ0IsRUFBRSxjQUFjLEVBQUUsZUFBZSxFQUFFLFVBQVUsRUFBRTs7QUFDckcsNENBQTRDLGFBQWEsRUFBRSxZQUFZLEVBQUU7O0FBQ3pFLDBDQUEwQyxlQUFlLEVBQUUsc0JBQXNCLEVBQUU7O0FBQ25GLG1DQUFtQyxrQkFBa0IsRUFBRTs7QUFDdkQscUNBQXFDLDJCQUEyQixFQUFFLGVBQWUsRUFBRSxjQUFjLEVBQUUseUJBQXlCLEVBQUUsU0FBUyxFQUFFLHNCQUFzQixFQUFFLG1CQUFtQjtFQUNsTCxrQkFBa0IsRUFBRSxpQkFBaUIsQ0FBQzs7QUFDeEMsZ0RBQWdELGdCQUFnQixFQUFFOztBQUNsRSwwQ0FBdUYsYUFBYSxHQUFHLDhCQUE4QixHQUFHLGlCQUFpQixHQUFHLGdCQUFnQixHQUN2SCx1QkFBdUIsR0FBd0QsbUJBQW1CLEVBQUU7O0FBQ3pKLG1EQUFtRCxtQkFBbUI7RUFDcEUsY0FBYztFQUNkLDBCQUEwQjtFQUMxQixlQUFlO0VBQ2YsY0FBYyxDQUFDOztBQUVqQixrREFBOEYsYUFBYSxFQUFFLGNBQWMsRUFBRTs7QUFFN0g7Ozs7Ozs7OztHQVNHOztBQUNILGdFQUFnRSxTQUFTLEVBQUUsa0JBQWtCLEVBQUUsMkJBQTJCLEVBQUUsZUFBZSxFQUFFLGNBQWMsQ0FBQzs7QUFFNUosVUFBVSx3QkFBd0IsR0FBRywwREFBMEQsQ0FBQzs7QUFDaEcsaUJBQWlCLFdBQVcsRUFBRSxXQUFXLEVBQUUsV0FBVyxFQUFFLG1CQUFtQixFQUFFLGtCQUFrQixFQUFFLGFBQWEsRUFBRTs7QUFFaEgsY0FBYyxhQUFhLENBQUM7O0FBRTVCO0VBQ0Usd0NBQXdDLFVBQVUsRUFBRTtBQUN0RDs7QUFDQTtBQUNBLHFDQUFxQyxlQUFlLENBQUM7QUFDckQ7O0FBRUE7QUFDQSx3Q0FBd0MsYUFBYSxFQUFFLHNCQUFzQixFQUFFO0FBQy9FLHFDQUFxQyxnQkFBZ0IsRUFBRTtBQUN2RCx3Q0FBd0MsY0FBYyxDQUFDO0FBQ3ZELGNBQWMsY0FBYyxFQUFFLGFBQWEsRUFBRSxtQkFBbUI7RUFDOUQsV0FBVyxFQUFFLGVBQWUsRUFBRSxpQkFBaUIsRUFBRSxrQkFBa0IsRUFBRSxXQUFXLEVBQUUsU0FBUyxDQUFDO0FBQzlGLFVBQVUsY0FBYyxDQUFDO0FBQ3pCLFNBQVMsYUFBYSxDQUFDO0FBQ3ZCLGtEQUFrRCxhQUFhLEVBQUUsc0JBQXNCLEVBQUU7QUFDekYsbUNBQW1DLFdBQVcsQ0FBQztBQUMvQyxpQkFBaUIsU0FBUyxFQUFFLFdBQVcsQ0FBQztBQUN4QyxnRUFBZ0UsYUFBYSxFQUFFLHVCQUF1QixFQUFFO0FBQ3hHIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9iaWxsZXIvYmlsbGVyLWhlYWRlci9iaWxsZXItaGVhZGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qIGhlYWRlciBjc3MgKi9cblxuLnRlY2hkYXNoYm9hcmRfaGVhZGVyIHsgaGVpZ2h0OiBhdXRvOyBwYWRkaW5nOiAwOyBiYWNrZ3JvdW5kOiAjZmZmOyBib3gtc2hhZG93OiAwcHggMnB4IDdweCAycHggI2I3YjdiNzsgbWFyZ2luOiAyMHB4IDA7IH1cbi50ZWNoZGFzaGJvYXJkX2hlYWRlciAuaGVhZGVyX3dyYXBwZXJ7IHdpZHRoOiAxNDAwcHg7IG1hcmdpbjogMCBhdXRvOyBkaXNwbGF5OiBmbGV4OyBhbGlnbi1pdGVtczogY2VudGVyOyBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47IHBvc2l0aW9uOiByZWxhdGl2ZTt9XG4udGVjaGRhc2hib2FyZF9oZWFkZXIgLmxvZ29fd3JhcHBlciB7IG1heC13aWR0aDogMTYwcHg7IGRpc3BsYXk6IGJsb2NrOyBjdXJzb3I6IHBvaW50ZXI7IGZsZXg6IG5vbmU7IH1cbi50ZWNoZGFzaGJvYXJkX2hlYWRlciAubG9nb193cmFwcGVyOmZvY3VzIHsgb3V0bGluZTogbm9uZTsgYm9yZGVyOiBub25lOyB9XG4udGVjaGRhc2hib2FyZF9oZWFkZXIgLmxvZ29fd3JhcHBlciBpbWcgeyBtYXgtd2lkdGg6IDEwMCU7IHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IH1cbi50ZWNoZGFzaGJvYXJkX2hlYWRlciAucXVvdGF0aW9uIHsgbWFyZ2luLWJvdHRvbTogMHB4OyB9XG4udGVjaGRhc2hib2FyZF9oZWFkZXIgLnF1b3RhdGlvbiBwIHsgZm9udC1mYW1pbHk6IFwiQXZlbmlyTWVkaXVtXCI7IGZvbnQtc2l6ZTogMjJweDsgY29sb3I6ICMwMDIwMzU7IHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IG1hcmdpbjogMDsgd29yZC1icmVhazogYnJlYWstd29yZDsgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbiAgdGV4dC1hbGlnbjogY2VudGVyOyBsaW5lLWhlaWdodDogMjJweDt9XG4udGVjaGRhc2hib2FyZF9oZWFkZXIgLnByb2ZpbGVfc2VjdGlvbiBidXR0b24geyBwYWRkaW5nLXRvcDogOHB4OyB9XG4udGVjaGRhc2hib2FyZF9oZWFkZXIgLnByb2ZpbGVfc2VjdGlvbiB7IGRpc3BsYXk6IC13ZWJraXQtYm94OyAgZGlzcGxheTogLW1zLWZsZXhib3g7ICBkaXNwbGF5OiBmbGV4OyAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjYWRhOWE5OyAgcGFkZGluZy1sZWZ0OiA1cHg7ICBtYXJnaW4tYm90dG9tOiAwO1xuICAtd2Via2l0LWJveC1wYWNrOiBjZW50ZXI7ICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7ICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7ICAtbXMtZmxleC1hbGlnbjogY2VudGVyOyAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5wcm9maWxlX3NlY3Rpb24gLnVzZXJuYW1lIHsgcGFkZGluZy1yaWdodDogMTBweDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtZmFtaWx5OiBcIkF2ZW5pclJvbWFuXCI7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgY29sb3I6ICMxZjFmMWY7fVxuXG4udGVjaGRhc2hib2FyZF9oZWFkZXIgLnF1b3RhdGlvbiAubWF0LWxpc3QtYmFzZSB7IGRpc3BsYXk6IC13ZWJraXQtYm94OyBkaXNwbGF5OiAtbXMtZmxleGJveDsgZGlzcGxheTogZmxleDsgcGFkZGluZy10b3A6IDA7IH1cblxuLyogLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5xdW90YXRpb24gLm1hdC1saXN0LWJhc2UgLm1hdC1saXN0LWl0ZW06YmVmb3JlIHtcbiAgY29udGVudDogXCJcIjtcbiAgbGVmdDogLTE1cHg7XG4gIHdpZHRoOiAycHg7XG4gIGhlaWdodDogMTVweDtcbiAgYmFja2dyb3VuZDogIzFjMWMxYztcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMzUlO1xufSAqL1xuLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5xdW90YXRpb24gLm1hdC1uYXYtbGlzdCAubWF0LWxpc3QtaXRlbSB7IG1hcmdpbjogMDsgcG9zaXRpb246IHJlbGF0aXZlOyBmb250LWZhbWlseTogXCJBdmVuaXJNZWRpdW1cIjsgZm9udC1zaXplOiAxNnB4OyBjb2xvcjogIzc2NzY3Njt9XG5cbi5hY3RpdmUgeyBjb2xvcjogIzAwMDAwMCFpbXBvcnRhbnQ7ICAvKiBib3JkZXItYm90dG9tOiAzcHggc29saWQgI2ZlY2IwMDsgcG9zaXRpb246IHJlbGF0aXZlOyAqL31cbi5hY3RpdmU6OmJlZm9yZXsgY29udGVudDogJyc7IHdpZHRoOiAxMDAlOyBoZWlnaHQ6IDRweDsgYmFja2dyb3VuZDogI2ZlY2IwMDsgcG9zaXRpb246IGFic29sdXRlOyBib3R0b206IC0yNXB4OyB9XG5cbi50b2dsZV9tZW51IHsgZGlzcGxheTogbm9uZTt9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDE1MDBweCl7XG4gIC50ZWNoZGFzaGJvYXJkX2hlYWRlciAuaGVhZGVyX3dyYXBwZXIgeyB3aWR0aDogOTAlOyB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMTk5cHgpe1xuLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5xdW90YXRpb24gcCB7IGZvbnQtc2l6ZTogMThweDt9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDk5MXB4KXtcbi50ZWNoZGFzaGJvYXJkX2hlYWRlciAuaGVhZGVyX3dyYXBwZXIgeyBkaXNwbGF5OiBmbGV4OyBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyB9XG4udGVjaGRhc2hib2FyZF9oZWFkZXIgLnF1b3RhdGlvbiBwIHsgbWFyZ2luOiAxMHB4IDVweDsgfVxuLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5wcm9maWxlX3NlY3Rpb257IGJvcmRlci1sZWZ0OiAwO31cbi50b2dsZV9tZW51IHsgZGlzcGxheTogYmxvY2s7IG1hcmdpbi10b3A6IDA7IGJhY2tncm91bmQ6ICNmOGM2NTU7XG4gIGNvbG9yOiAjZmZmOyBtaW4td2lkdGg6IGF1dG87IG1hcmdpbi1sZWZ0OiBhdXRvOyBwb3NpdGlvbjogYWJzb2x1dGU7IHJpZ2h0OiAxMHB4OyB0b3A6IDQwcHg7fVxuLnN1Y2Nlc3N7IGRpc3BsYXk6IGJsb2NrO31cbi5kYW5nZXJ7IGRpc3BsYXk6IG5vbmU7fVxuLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5xdW90YXRpb24gLm1hdC1saXN0LWJhc2UgeyBkaXNwbGF5OiBmbGV4OyBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyB9XG4udGVjaGRhc2hib2FyZF9oZWFkZXIgLnF1b3RhdGlvbiB7IHdpZHRoOiAxMDAlO31cbi5hY3RpdmU6OmJlZm9yZXsgYm90dG9tOiAwOyBoZWlnaHQ6IDJweDt9XG4udGVjaGRhc2hib2FyZF9oZWFkZXIgLnF1b3RhdGlvbiAubWF0LW5hdi1saXN0IC5tYXQtbGlzdC1pdGVtIHsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cbn1cbiJdfQ== */";
    /***/
  },

  /***/
  "./src/app/components/biller/biller-header/biller-header.component.ts":
  /*!****************************************************************************!*\
    !*** ./src/app/components/biller/biller-header/biller-header.component.ts ***!
    \****************************************************************************/

  /*! exports provided: BillerHeaderComponent */

  /***/
  function srcAppComponentsBillerBillerHeaderBillerHeaderComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BillerHeaderComponent", function () {
      return BillerHeaderComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../common/dialog-box/dialog-box.component */
    "./src/app/components/common/dialog-box/dialog-box.component.ts");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");

    var BillerHeaderComponent = /*#__PURE__*/function () {
      function BillerHeaderComponent(cookies, router, activate, dialog) {
        _classCallCheck(this, BillerHeaderComponent);

        this.cookies = cookies;
        this.router = router;
        this.activate = activate;
        this.dialog = dialog;
        this.toggleStatus = false;
        this.user_data = {};
        this.flag = 0;
        this.loader = true;
        this.status = true;
        this.isSticky = false;
        this.main_user = {
          flag: false,
          data: {},
          buttonText: "Rerurn to Admin"
        };
        var allData = cookies.getAll();
        this.user_data = JSON.parse(allData.user_details);

        if (typeof allData.main_user != 'undefined') {
          this.main_user.data = allData.main_user;
          this.main_user.flag = true;
        }

        this.user_cookie = cookies.get('jwtToken');
        this.user_data["headerFlag"] = typeof this.user_data.diagnostic_admin_id;

        if (this.activate.snapshot.routeConfig.path == "admin/biller-dashboard/:_id") {
          this.flag = 1;
        }
      }

      _createClass(BillerHeaderComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
        /**logout function start here**/

      }, {
        key: "logout",
        value: function logout() {
          this.cookies["delete"]('jwtToken');
          this.cookies["delete"]('user_details');
          this.cookies.deleteAll();
          this.router.navigateByUrl('logout');
        }
        /**logout function end here**/

      }, {
        key: "menuFunction",
        value: function menuFunction() {
          this.toggleStatus = !this.toggleStatus;
        }
      }, {
        key: "returnToAdmin",
        value: function returnToAdmin() {
          var _this124 = this;

          var modalData = {
            panelClass: 'bulkupload-dialog',
            data: {
              header: "Alert",
              message: "Do you want to return to admin?",
              button1: {
                text: "Yes"
              },
              button2: {
                text: "No"
              }
            }
          };
          this.openModal(modalData);
          this.dialogRef.afterClosed().subscribe(function (result) {
            switch (result) {
              case "Yes":
                var jwtToken = _this124.cookies.get('jwtToken');

                var allData = _this124.cookies.getAll();

                var main_user = JSON.parse(allData.main_user);

                var secret = _this124.cookies.get('secret'); // Delete Cookie


                _this124.cookies["delete"]('user_details');

                _this124.cookies["delete"]('main_user');

                _this124.cookies["delete"]('doctor_signature');

                _this124.cookies["delete"]('secret');

                _this124.cookies["delete"]('jwtToken');

                _this124.cookies.deleteAll('/biller');

                setTimeout(function () {
                  // Reset again Cookie
                  _this124.cookies.set('jwtToken', jwtToken);

                  _this124.cookies.set('user_details', JSON.stringify(main_user));

                  _this124.cookies.set('secret', JSON.stringify(secret)); // Redirect to page


                  _this124.router.navigateByUrl("admin/dashboard");
                }, 500);
                break;

              case "No":
                _this124.dialogRef.close();

                break;
            }
          });
        }
      }, {
        key: "openModal",
        value: function openModal(data) {
          this.dialogRef = this.dialog.open(_common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_4__["DialogBoxComponent"], data);
        }
      }]);

      return BillerHeaderComponent;
    }();

    BillerHeaderComponent.ctorParameters = function () {
      return [{
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatDialog"]
      }];
    };

    BillerHeaderComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-biller-header',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./biller-header.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/biller/biller-header/biller-header.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./biller-header.component.css */
      "./src/app/components/biller/biller-header/biller-header.component.css"))["default"]]
    })], BillerHeaderComponent);
    /***/
  },

  /***/
  "./src/app/components/biller/direct-download-reports/direct-download-reports.component.css":
  /*!*************************************************************************************************!*\
    !*** ./src/app/components/biller/direct-download-reports/direct-download-reports.component.css ***!
    \*************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsBillerDirectDownloadReportsDirectDownloadReportsComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYmlsbGVyL2RpcmVjdC1kb3dubG9hZC1yZXBvcnRzL2RpcmVjdC1kb3dubG9hZC1yZXBvcnRzLmNvbXBvbmVudC5jc3MifQ== */";
    /***/
  },

  /***/
  "./src/app/components/biller/direct-download-reports/direct-download-reports.component.ts":
  /*!************************************************************************************************!*\
    !*** ./src/app/components/biller/direct-download-reports/direct-download-reports.component.ts ***!
    \************************************************************************************************/

  /*! exports provided: DirectDownloadReportsComponent */

  /***/
  function srcAppComponentsBillerDirectDownloadReportsDirectDownloadReportsComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DirectDownloadReportsComponent", function () {
      return DirectDownloadReportsComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var ngx_device_detector__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ngx-device-detector */
    "./node_modules/ngx-device-detector/fesm2015/ngx-device-detector.js");
    /* harmony import */


    var _class_common_common_function__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../../../class/common/common-function */
    "./src/app/class/common/common-function.ts");

    var DirectDownloadReportsComponent = /*#__PURE__*/function () {
      function DirectDownloadReportsComponent(router, cookieService, http, activatedRoute, dialog, commonFunction, deviceService, matSnackBar) {
        var _this125 = this;

        _classCallCheck(this, DirectDownloadReportsComponent);

        this.router = router;
        this.cookieService = cookieService;
        this.http = http;
        this.activatedRoute = activatedRoute;
        this.dialog = dialog;
        this.commonFunction = commonFunction;
        this.deviceService = deviceService;
        this.matSnackBar = matSnackBar;
        this.htmlText = {
          hraderText: 'Enter Password to Download the Report',
          notBotText: '',
          notBotInput: '',
          password: '',
          passwordAttemptsCount: 0,
          ip: '',
          tempToken: '',
          downloadFlug: false
        };
        this.reportData = [];
        var loginCheck = this.cookieService.getAll();

        if (typeof loginCheck.user_details != 'undefined') {
          var userDetails = JSON.parse(loginCheck.user_details);
        }

        this.htmlText.tempToken = loginCheck.jwtToken;
        /* Check Route ID */

        if (typeof this.activatedRoute.snapshot.params._id != "undefined") {
          this.getData(this.activatedRoute.snapshot.params._id);
        } else {
          this.router.navigateByUrl('/login');
        }
        /* Get IP Address */


        this.http.httpViaGetExt("http://api.ipify.org/?format=json", {}).subscribe(function (response) {
          _this125.htmlText.ip = response.ip;
        });
      }

      _createClass(DirectDownloadReportsComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }, {
        key: "downloadPDF",
        value: function downloadPDF() {
          var _this126 = this;

          /* Collect User Information for Download record */
          var deviceInfo = this.deviceService.getDeviceInfo();
          deviceInfo["isMobile"] = this.deviceService.isMobile();
          deviceInfo["isTablet"] = this.deviceService.isTablet();
          deviceInfo["isDesktop"] = this.deviceService.isDesktop();
          /* Set downloader information */

          var userDetails = {};
          var loginCheck = this.cookieService.getAll();

          if (typeof loginCheck.user_details != 'undefined') {
            var user_details = JSON.parse(loginCheck.user_details);
            userDetails["id"] = user_details._id;
            userDetails["type"] = user_details.type;
          } else {
            userDetails["id"] = this.reportData.biller_id;
            userDetails["type"] = "biller";
          }

          if (typeof this.reportData.download_count == "undefined") {
            this.reportData.download_count = 1;
          } else {
            this.reportData.download_count = this.reportData.download_count + 1;
          }

          var postData = {
            "source": "data_report_download_details",
            "data": {
              "report_id": this.activatedRoute.snapshot.params._id,
              "biller_id": this.reportData.biller_id,
              "tech_id": this.reportData.tech_id,
              "doctor_id": this.reportData.doctor_id,
              "ip": this.htmlText.ip,
              "download_attempt": this.htmlText.passwordAttemptsCount,
              "downloader_information": userDetails,
              "device_information": deviceInfo
            },
            "download_count": this.reportData.download_count,
            "sourceobj": ["report_id", "biller_id", "tech_id", "doctor_id"],
            "token": this.htmlText.tempToken
          };
          this.http.httpViaPost("addorupdatedata", postData).subscribe(function (response) {
            if (response.status == 'success') {
              // Update Status
              var _postData2 = {
                "source": "data_pece",
                "report_id": _this126.activatedRoute.snapshot.params._id,
                "token": _this126.htmlText.tempToken
              };

              _this126.http.httpViaPost("direct-download-report", _postData2).subscribe(function (response) {
                if (response.status == true) {
                  _this126.matSnackBar.open("Downloading...", "", {
                    duration: 2000
                  });

                  console.log("Link: ", _this126.reportData.report_download_link); // Open download link into the new tab

                  window.open(_this126.reportData.report_download_link);
                  setTimeout(function () {
                    _this126.router.navigateByUrl('/biller/dashboard');
                  }, 100);
                }
              });
            } else {
              _this126.matSnackBar.open("Some error occord. Please try again.", "Ok", {
                duration: 3000
              });
            }
          });
        }
        /* Get Report Data */

      }, {
        key: "getData",
        value: function getData(reportID) {
          var _this127 = this;

          var data = {
            "source": "data_pece",
            "condition": {
              "_id": reportID
            }
          };
          this.http.httpViaPost("datalistwithouttoken", data).subscribe(function (response) {
            if (response.res.length > 0) {
              _this127.reportData = response.res[0]; // Process Download

              _this127.downloadPDF();
            } else {
              _this127.router.navigateByUrl('/login');
            }
          });
        }
      }]);

      return DirectDownloadReportsComponent;
    }();

    DirectDownloadReportsComponent.ctorParameters = function () {
      return [{
        type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__["HttpServiceService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatDialog"]
      }, {
        type: _class_common_common_function__WEBPACK_IMPORTED_MODULE_7__["CommonFunction"]
      }, {
        type: ngx_device_detector__WEBPACK_IMPORTED_MODULE_6__["DeviceDetectorService"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatSnackBar"]
      }];
    };

    DirectDownloadReportsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-direct-download-reports',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./direct-download-reports.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/biller/direct-download-reports/direct-download-reports.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./direct-download-reports.component.css */
      "./src/app/components/biller/direct-download-reports/direct-download-reports.component.css"))["default"]]
    })], DirectDownloadReportsComponent);
    /***/
  },

  /***/
  "./src/app/components/biller/download-superbiller/download-superbiller.component.css":
  /*!*******************************************************************************************!*\
    !*** ./src/app/components/biller/download-superbiller/download-superbiller.component.css ***!
    \*******************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsBillerDownloadSuperbillerDownloadSuperbillerComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "/* header css */\n.techdashboard_header .mat-toolbar-row{ height: auto; }\n.techdashboard_header .mat-toolbar-row .logo_wrapper{ max-width: 200px; display: block; }\n.techdashboard_header .mat-toolbar-row .logo_wrapper img{ max-width: 100%; vertical-align: middle; }\n.techdashboard_header .mat-toolbar-row{ justify-content: space-between; padding: 0; width: 1400px; margin: auto;}\n.techdashboard_header .mat-toolbar-row .quotation p{ font-family: \"Avenirmedium\"; font-size: 24px; color: #002035; text-transform: uppercase; margin: 0; }\n.techdashboard_header .mat-toolbar-row .profile_section { display: flex; border-left: 1px solid #e2dede; padding-left: 20px; }\n.techdashboard_header .mat-toolbar-row .profile_section .username{ padding-right: 20px; display: block; }\n/*End header css */\n.reset_wrapper{ background: #f1f8fb; width: 1400px; margin: 30px auto; display: flex; justify-content: center; align-items: center; }\n.reset_wrapper .card_wrapper{ width: 50%; margin: 20px auto; background: #fff; box-shadow: 0px 2px 5px 0px #6f6f6f; padding: 16px; box-sizing: border-box;\n  flex-direction: column; display: flex; align-items: center;}\n.reset_wrapper .card_wrapper .mat-card-title{ font-family: 'AvenirBlack';  margin-bottom: 16px; font-size: 22px; text-transform: uppercase; text-align: center;}\n.reset_wrapper .card_wrapper .mat-form-field{ width: 100%;}\n.reset_wrapper .card_wrapper .download_button{ background-color: #048006; min-width: 120px; border-radius: 0; font-family: 'AvenirMedium'; font-size: 20px; color: #fff; }\n.reset_wrapper .icon{ width: 110px; height: 110px; color: #03893b; border-radius: 50%; display: flex; justify-content: center; align-items: flex-start; }\n.reset_wrapper .icon .material-icons{ font-size: 96px;}\n.botText { font-family: \"AvenirMedium\"; font-size: 40px; padding: 25px 5px; box-sizing: border-box; color: #000; min-width: 185px; background-size: cover; text-align: center;\n  display: block; background: url('captcha.png') no-repeat; margin-bottom: 20px;}\n.reset_wrapper .error_message{  font-size: 22px; font-family: 'AvenirBlack'; color: #f50404; margin: 0;}\n.reset_wrapper .success_message{ font-size: 22px; font-family: 'AvenirBlack'; color: #03a003; margin: 0; }\n.reset_wrapper .captcha_wrapper{ display: block; position: relative;}\n.reset_wrapper .captcha_wrapper .refreshButton{ position: absolute; bottom: 14px; right: -30px; padding: 0; min-width: inherit; }\n@media screen and (max-width: 1500px){\n  .reset_wrapper{  width: 90%; }\n  .techdashboard_header .mat-toolbar-row{ width: 90%; }\n}\n@media screen and (max-width: 1500px){\n.techdashboard_header .mat-toolbar-row .quotation p { font-size: 18px; }\n}\n@media screen and (max-width:1100px){\n  .techdashboard_header .mat-toolbar-row .quotation p { font-size: 18px; }\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9iaWxsZXIvZG93bmxvYWQtc3VwZXJiaWxsZXIvZG93bmxvYWQtc3VwZXJiaWxsZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxlQUFlO0FBQ2Ysd0NBQXdDLFlBQVksRUFBRTtBQUN0RCxzREFBc0QsZ0JBQWdCLEVBQUUsY0FBYyxFQUFFO0FBQ3hGLDBEQUEwRCxlQUFlLEVBQUUsc0JBQXNCLEVBQUU7QUFDbkcsd0NBQXdDLDhCQUE4QixFQUFFLFVBQVUsRUFBRSxhQUFhLEVBQUUsWUFBWSxDQUFDO0FBQ2hILHFEQUFxRCwyQkFBMkIsRUFBRSxlQUFlLEVBQUUsY0FBYyxFQUFFLHlCQUF5QixFQUFFLFNBQVMsRUFBRTtBQUN6SiwwREFBMEQsYUFBYSxFQUFFLDhCQUE4QixFQUFFLGtCQUFrQixFQUFFO0FBQzdILG1FQUFtRSxtQkFBbUIsRUFBRSxjQUFjLEVBQUU7QUFDeEcsa0JBQWtCO0FBRWxCLGdCQUFnQixtQkFBbUIsRUFBRSxhQUFhLEVBQUUsaUJBQWlCLEVBQUUsYUFBYSxFQUFFLHVCQUF1QixFQUFFLG1CQUFtQixFQUFFO0FBQ3BJLDhCQUE4QixVQUFVLEVBQUUsaUJBQWlCLEVBQUUsZ0JBQWdCLEVBQUUsbUNBQW1DLEVBQUUsYUFBYSxFQUFFLHNCQUFzQjtFQUN2SixzQkFBc0IsRUFBRSxhQUFhLEVBQUUsbUJBQW1CLENBQUM7QUFDN0QsOENBQThDLDBCQUEwQixHQUFHLG1CQUFtQixFQUFFLGVBQWUsRUFBRSx5QkFBeUIsRUFBRSxrQkFBa0IsQ0FBQztBQUMvSiw4Q0FBOEMsV0FBVyxDQUFDO0FBQzFELCtDQUErQyx5QkFBeUIsRUFBRSxnQkFBZ0IsRUFBRSxnQkFBZ0IsRUFBRSwyQkFBMkIsRUFBRSxlQUFlLEVBQUUsV0FBVyxFQUFFO0FBQ3pLLHNCQUFzQixZQUFZLEVBQUUsYUFBYSxFQUFFLGNBQWMsRUFBRSxrQkFBa0IsRUFBRSxhQUFhLEVBQUUsdUJBQXVCLEVBQUUsdUJBQXVCLEVBQUU7QUFDeEosc0NBQXNDLGVBQWUsQ0FBQztBQUN0RCxXQUFXLDJCQUEyQixFQUFFLGVBQWUsRUFBRSxpQkFBaUIsRUFBRSxzQkFBc0IsRUFBRSxXQUFXLEVBQUUsZ0JBQWdCLEVBQUUsc0JBQXNCLEVBQUUsa0JBQWtCO0VBQzNLLGNBQWMsRUFBRSx3Q0FBa0UsRUFBRSxtQkFBbUIsQ0FBQztBQUMxRyxnQ0FBZ0MsZUFBZSxFQUFFLDBCQUEwQixFQUFFLGNBQWMsRUFBRSxTQUFTLENBQUM7QUFDdkcsaUNBQWlDLGVBQWUsRUFBRSwwQkFBMEIsRUFBRSxjQUFjLEVBQUUsU0FBUyxFQUFFO0FBQ3pHLGlDQUFpQyxjQUFjLEVBQUUsa0JBQWtCLENBQUM7QUFDcEUsZ0RBQWdELGtCQUFrQixFQUFFLFlBQVksRUFBRSxZQUFZLEVBQUUsVUFBVSxFQUFFLGtCQUFrQixFQUFFO0FBRWhJO0VBQ0UsaUJBQWlCLFVBQVUsRUFBRTtFQUM3Qix3Q0FBd0MsVUFBVSxFQUFFO0FBQ3REO0FBQ0E7QUFDQSxzREFBc0QsZUFBZSxFQUFFO0FBQ3ZFO0FBQ0E7RUFDRSxzREFBc0QsZUFBZSxFQUFFO0FBQ3pFIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9iaWxsZXIvZG93bmxvYWQtc3VwZXJiaWxsZXIvZG93bmxvYWQtc3VwZXJiaWxsZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGhlYWRlciBjc3MgKi9cbi50ZWNoZGFzaGJvYXJkX2hlYWRlciAubWF0LXRvb2xiYXItcm93eyBoZWlnaHQ6IGF1dG87IH1cbi50ZWNoZGFzaGJvYXJkX2hlYWRlciAubWF0LXRvb2xiYXItcm93IC5sb2dvX3dyYXBwZXJ7IG1heC13aWR0aDogMjAwcHg7IGRpc3BsYXk6IGJsb2NrOyB9XG4udGVjaGRhc2hib2FyZF9oZWFkZXIgLm1hdC10b29sYmFyLXJvdyAubG9nb193cmFwcGVyIGltZ3sgbWF4LXdpZHRoOiAxMDAlOyB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyB9XG4udGVjaGRhc2hib2FyZF9oZWFkZXIgLm1hdC10b29sYmFyLXJvd3sganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOyBwYWRkaW5nOiAwOyB3aWR0aDogMTQwMHB4OyBtYXJnaW46IGF1dG87fVxuLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5tYXQtdG9vbGJhci1yb3cgLnF1b3RhdGlvbiBweyBmb250LWZhbWlseTogXCJBdmVuaXJtZWRpdW1cIjsgZm9udC1zaXplOiAyNHB4OyBjb2xvcjogIzAwMjAzNTsgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgbWFyZ2luOiAwOyB9XG4udGVjaGRhc2hib2FyZF9oZWFkZXIgLm1hdC10b29sYmFyLXJvdyAucHJvZmlsZV9zZWN0aW9uIHsgZGlzcGxheTogZmxleDsgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjZTJkZWRlOyBwYWRkaW5nLWxlZnQ6IDIwcHg7IH1cbi50ZWNoZGFzaGJvYXJkX2hlYWRlciAubWF0LXRvb2xiYXItcm93IC5wcm9maWxlX3NlY3Rpb24gLnVzZXJuYW1leyBwYWRkaW5nLXJpZ2h0OiAyMHB4OyBkaXNwbGF5OiBibG9jazsgfVxuLypFbmQgaGVhZGVyIGNzcyAqL1xuXG4ucmVzZXRfd3JhcHBlcnsgYmFja2dyb3VuZDogI2YxZjhmYjsgd2lkdGg6IDE0MDBweDsgbWFyZ2luOiAzMHB4IGF1dG87IGRpc3BsYXk6IGZsZXg7IGp1c3RpZnktY29udGVudDogY2VudGVyOyBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4ucmVzZXRfd3JhcHBlciAuY2FyZF93cmFwcGVyeyB3aWR0aDogNTAlOyBtYXJnaW46IDIwcHggYXV0bzsgYmFja2dyb3VuZDogI2ZmZjsgYm94LXNoYWRvdzogMHB4IDJweCA1cHggMHB4ICM2ZjZmNmY7IHBhZGRpbmc6IDE2cHg7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IGRpc3BsYXk6IGZsZXg7IGFsaWduLWl0ZW1zOiBjZW50ZXI7fVxuLnJlc2V0X3dyYXBwZXIgLmNhcmRfd3JhcHBlciAubWF0LWNhcmQtdGl0bGV7IGZvbnQtZmFtaWx5OiAnQXZlbmlyQmxhY2snOyAgbWFyZ2luLWJvdHRvbTogMTZweDsgZm9udC1zaXplOiAyMnB4OyB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyB0ZXh0LWFsaWduOiBjZW50ZXI7fVxuLnJlc2V0X3dyYXBwZXIgLmNhcmRfd3JhcHBlciAubWF0LWZvcm0tZmllbGR7IHdpZHRoOiAxMDAlO31cbi5yZXNldF93cmFwcGVyIC5jYXJkX3dyYXBwZXIgLmRvd25sb2FkX2J1dHRvbnsgYmFja2dyb3VuZC1jb2xvcjogIzA0ODAwNjsgbWluLXdpZHRoOiAxMjBweDsgYm9yZGVyLXJhZGl1czogMDsgZm9udC1mYW1pbHk6ICdBdmVuaXJNZWRpdW0nOyBmb250LXNpemU6IDIwcHg7IGNvbG9yOiAjZmZmOyB9XG4ucmVzZXRfd3JhcHBlciAuaWNvbnsgd2lkdGg6IDExMHB4OyBoZWlnaHQ6IDExMHB4OyBjb2xvcjogIzAzODkzYjsgYm9yZGVyLXJhZGl1czogNTAlOyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7IH1cbi5yZXNldF93cmFwcGVyIC5pY29uIC5tYXRlcmlhbC1pY29uc3sgZm9udC1zaXplOiA5NnB4O31cbi5ib3RUZXh0IHsgZm9udC1mYW1pbHk6IFwiQXZlbmlyTWVkaXVtXCI7IGZvbnQtc2l6ZTogNDBweDsgcGFkZGluZzogMjVweCA1cHg7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjMDAwOyBtaW4td2lkdGg6IDE4NXB4OyBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyOyB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGRpc3BsYXk6IGJsb2NrOyBiYWNrZ3JvdW5kOiB1cmwoXCIuLi8uLi8uLi8uLi9hc3NldHMvaW1hZ2VzL2NhcHRjaGEucG5nXCIpIG5vLXJlcGVhdDsgbWFyZ2luLWJvdHRvbTogMjBweDt9XG4ucmVzZXRfd3JhcHBlciAuZXJyb3JfbWVzc2FnZXsgIGZvbnQtc2l6ZTogMjJweDsgZm9udC1mYW1pbHk6ICdBdmVuaXJCbGFjayc7IGNvbG9yOiAjZjUwNDA0OyBtYXJnaW46IDA7fVxuLnJlc2V0X3dyYXBwZXIgLnN1Y2Nlc3NfbWVzc2FnZXsgZm9udC1zaXplOiAyMnB4OyBmb250LWZhbWlseTogJ0F2ZW5pckJsYWNrJzsgY29sb3I6ICMwM2EwMDM7IG1hcmdpbjogMDsgfVxuLnJlc2V0X3dyYXBwZXIgLmNhcHRjaGFfd3JhcHBlcnsgZGlzcGxheTogYmxvY2s7IHBvc2l0aW9uOiByZWxhdGl2ZTt9XG4ucmVzZXRfd3JhcHBlciAuY2FwdGNoYV93cmFwcGVyIC5yZWZyZXNoQnV0dG9ueyBwb3NpdGlvbjogYWJzb2x1dGU7IGJvdHRvbTogMTRweDsgcmlnaHQ6IC0zMHB4OyBwYWRkaW5nOiAwOyBtaW4td2lkdGg6IGluaGVyaXQ7IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTUwMHB4KXtcbiAgLnJlc2V0X3dyYXBwZXJ7ICB3aWR0aDogOTAlOyB9XG4gIC50ZWNoZGFzaGJvYXJkX2hlYWRlciAubWF0LXRvb2xiYXItcm93eyB3aWR0aDogOTAlOyB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxNTAwcHgpe1xuLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5tYXQtdG9vbGJhci1yb3cgLnF1b3RhdGlvbiBwIHsgZm9udC1zaXplOiAxOHB4OyB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOjExMDBweCl7XG4gIC50ZWNoZGFzaGJvYXJkX2hlYWRlciAubWF0LXRvb2xiYXItcm93IC5xdW90YXRpb24gcCB7IGZvbnQtc2l6ZTogMThweDsgfVxufVxuIl19 */";
    /***/
  },

  /***/
  "./src/app/components/biller/download-superbiller/download-superbiller.component.ts":
  /*!******************************************************************************************!*\
    !*** ./src/app/components/biller/download-superbiller/download-superbiller.component.ts ***!
    \******************************************************************************************/

  /*! exports provided: DownloadSuperbillerComponent */

  /***/
  function srcAppComponentsBillerDownloadSuperbillerDownloadSuperbillerComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DownloadSuperbillerComponent", function () {
      return DownloadSuperbillerComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var ngx_device_detector__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ngx-device-detector */
    "./node_modules/ngx-device-detector/fesm2015/ngx-device-detector.js");
    /* harmony import */


    var _class_common_common_function__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../../../class/common/common-function */
    "./src/app/class/common/common-function.ts");

    var DownloadSuperbillerComponent = /*#__PURE__*/function () {
      function DownloadSuperbillerComponent(router, cookieService, http, activatedRoute, dialog, commonFunction, deviceService, matSnackBar) {
        var _this128 = this;

        _classCallCheck(this, DownloadSuperbillerComponent);

        this.router = router;
        this.cookieService = cookieService;
        this.http = http;
        this.activatedRoute = activatedRoute;
        this.dialog = dialog;
        this.commonFunction = commonFunction;
        this.deviceService = deviceService;
        this.matSnackBar = matSnackBar;
        this.htmlText = {
          hraderText: 'Enter Password to Download the Report',
          notBotText: '',
          notBotInput: '',
          password: '',
          passwordAttemptsCount: 0,
          ip: '',
          tempToken: '',
          downloadFlug: false
        };
        this.reportData = [];
        var loginCheck = this.cookieService.getAll();

        if (typeof loginCheck.user_details != 'undefined') {
          var userDetails = JSON.parse(loginCheck.user_details);
        }
        /* Check Route ID */


        if (typeof this.activatedRoute.snapshot.params._id != "undefined") {
          this.getData(this.activatedRoute.snapshot.params._id);
        } else {
          this.router.navigateByUrl('/login');
        }
        /* Check Password Attempts Count */


        var check = cookieService.check('passwordAttemptsCount');

        if (check == true) {
          this.htmlText.notBotText = this.commonFunction.randomNumber(6);
          this.htmlText.passwordAttemptsCount = this.cookieService.get('passwordAttemptsCount');
        }
        /* Get IP Address */


        this.http.httpViaGetExt("http://api.ipify.org/?format=json", {}).subscribe(function (response) {
          _this128.htmlText.ip = response.ip;
        });
        /* Get Temp Token */

        this.http.httpViaGet("gettemptoken", {}).subscribe(function (response) {
          _this128.htmlText.tempToken = response.token;
        });
      }

      _createClass(DownloadSuperbillerComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }, {
        key: "downloadPDF",
        value: function downloadPDF() {
          var _this129 = this;

          if (this.htmlText.password != '' && this.htmlText.password == this.reportData.download_password && this.reportData.passwordAttemptsCount <= 3 || this.htmlText.password == this.reportData.download_password && this.htmlText.notBotText == this.htmlText.notBotInput) {
            this.htmlText.passwordAttemptsCount++;
            /* Right password */

            this.cookieService["delete"]('passwordAttemptsCount');
            this.htmlText.password = "";
            this.htmlText.notBotText = "";
            this.htmlText.notBotInput = "";
            /* Collect User Information for Download record */

            var deviceInfo = this.deviceService.getDeviceInfo();
            deviceInfo["isMobile"] = this.deviceService.isMobile();
            deviceInfo["isTablet"] = this.deviceService.isTablet();
            deviceInfo["isDesktop"] = this.deviceService.isDesktop();
            /* Set downloader information */

            var userDetails = {};
            var loginCheck = this.cookieService.getAll();

            if (typeof loginCheck.user_details != 'undefined') {
              var user_details = JSON.parse(loginCheck.user_details);
              userDetails["id"] = user_details._id;
              userDetails["type"] = user_details.type;
            } else {
              userDetails["id"] = this.reportData.biller_id;
              userDetails["type"] = "biller";
            }

            if (typeof this.reportData.download_count == "undefined") {
              this.reportData.download_count = 1;
            } else {
              this.reportData.download_count = this.reportData.download_count + 1;
            }

            var postData = {
              "source": "data_report_download_details",
              "data": {
                "report_id": this.activatedRoute.snapshot.params._id,
                "biller_id": this.reportData.biller_id,
                "tech_id": this.reportData.tech_id,
                "doctor_id": this.reportData.doctor_id,
                "ip": this.htmlText.ip,
                "download_attempt": this.htmlText.passwordAttemptsCount,
                "downloader_information": userDetails,
                "device_information": deviceInfo
              },
              "download_count": this.reportData.download_count,
              "sourceobj": ["report_id", "biller_id", "tech_id", "doctor_id"],
              "token": this.htmlText.tempToken
            };
            this.http.httpViaPost("addorupdatedata", postData).subscribe(function (response) {
              if (response.status == 'success') {
                _this129.htmlText.downloadFlug = true;
                _this129.htmlText.hraderText = "Thank you for downloading."; // Open download link into the new tab

                window.open(_this129.reportData.report_download_link); // Update Status

                var _postData3 = {
                  "source": "data_pece",
                  "data": {
                    "id": _this129.activatedRoute.snapshot.params._id,
                    "status": "Downloaded",
                    "download_count": _this129.reportData.download_count
                  },
                  "token": _this129.htmlText.tempToken
                };

                _this129.http.httpViaPost("addorupdatedata", _postData3).subscribe(function (response) {});
              } else {
                _this129.matSnackBar.open("Some error occord. Please try again.", "Ok", {
                  duration: 3000
                });
              }
            });
          } else {
            /* Wrong Password */
            if (this.htmlText.password == '' || this.htmlText.password != this.reportData.download_password) {
              this.matSnackBar.open("Password is not valid.", "Ok", {
                duration: 3000
              });
            } else {
              if ((this.htmlText.notBotInput == '' || this.htmlText.notBotText != this.htmlText.notBotInput) && this.htmlText.passwordAttemptsCount >= 3) {
                this.matSnackBar.open("Chapcha is not valid.", "Ok", {
                  duration: 3000
                });
              }
            }
            /* Make field numm */


            this.htmlText.password = "";
            this.htmlText.notBotInput = "";
            this.htmlText.passwordAttemptsCount++;
            this.cookieService.set('passwordAttemptsCount', this.htmlText.passwordAttemptsCount);
            /* Create New Chapcha */

            if (this.htmlText.passwordAttemptsCount >= 3) {
              this.htmlText.notBotText = this.commonFunction.randomNumber(6);
            }

            return false;
          }
        }
        /* Get Report Data */

      }, {
        key: "getData",
        value: function getData(reportID) {
          var _this130 = this;

          var data = {
            "source": "data_pece",
            "condition": {
              "_id": reportID
            }
          };
          this.http.httpViaPost("datalistwithouttoken", data).subscribe(function (response) {
            if (response.res.length > 0) {
              _this130.reportData = response.res[0];
            } else {
              _this130.router.navigateByUrl('/login');
            }
          });
        }
      }, {
        key: "changeChapcha",
        value: function changeChapcha(length) {
          this.htmlText.notBotText = this.commonFunction.randomNumber(length);
          this.htmlText.notBotInput = "";
        }
      }]);

      return DownloadSuperbillerComponent;
    }();

    DownloadSuperbillerComponent.ctorParameters = function () {
      return [{
        type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__["HttpServiceService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatDialog"]
      }, {
        type: _class_common_common_function__WEBPACK_IMPORTED_MODULE_7__["CommonFunction"]
      }, {
        type: ngx_device_detector__WEBPACK_IMPORTED_MODULE_6__["DeviceDetectorService"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatSnackBar"]
      }];
    };

    DownloadSuperbillerComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-download-superbiller',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./download-superbiller.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/biller/download-superbiller/download-superbiller.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./download-superbiller.component.css */
      "./src/app/components/biller/download-superbiller/download-superbiller.component.css"))["default"]]
    })], DownloadSuperbillerComponent);
    /***/
  },

  /***/
  "./src/app/components/booked-events-listing/past-appoinments/past-appoinments.component.css":
  /*!**************************************************************************************************!*\
    !*** ./src/app/components/booked-events-listing/past-appoinments/past-appoinments.component.css ***!
    \**************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsBookedEventsListingPastAppoinmentsPastAppoinmentsComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYm9va2VkLWV2ZW50cy1saXN0aW5nL3Bhc3QtYXBwb2lubWVudHMvcGFzdC1hcHBvaW5tZW50cy5jb21wb25lbnQuY3NzIn0= */";
    /***/
  },

  /***/
  "./src/app/components/booked-events-listing/past-appoinments/past-appoinments.component.ts":
  /*!*************************************************************************************************!*\
    !*** ./src/app/components/booked-events-listing/past-appoinments/past-appoinments.component.ts ***!
    \*************************************************************************************************/

  /*! exports provided: PastAppoinmentsComponent */

  /***/
  function srcAppComponentsBookedEventsListingPastAppoinmentsPastAppoinmentsComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PastAppoinmentsComponent", function () {
      return PastAppoinmentsComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../../../environments/environment */
    "./src/environments/environment.ts");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_material_snack_bar__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/material/snack-bar */
    "./node_modules/@angular/material/esm2015/snack-bar.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");

    var PastAppoinmentsComponent = /*#__PURE__*/function () {
      function PastAppoinmentsComponent(cookie, snackBar, httpService) {
        _classCallCheck(this, PastAppoinmentsComponent);

        this.cookie = cookie;
        this.snackBar = snackBar;
        this.httpService = httpService; // public searchByDoctor: any = {label: "Search By Doctor", field: 'doctor_id', values: []};

        this.configData = {
          appName: 'Calendar Management',
          jwtToken: this.cookie.get('jwtToken'),
          baseUrl: _environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].calendarApi,
          endPoint: {
            add: 'add-or-update-event-data',
            datalist: 'datalist',
            deleteEvent: 'delete-single-event',
            viewEventSlots: 'view-event-eventdayarr',
            search: 'search',
            countSlot: 'count-slot',
            listBookedEvents: 'list-booked-events',
            listBookedEventsCount: 'list-booked-events-count',
            // listUpcomingBookedEvents: 'list-upcoming-booked-events',
            // listUpcomingBookedEventsCount: 'list-upcoming-booked-events-count',
            deleteBookedEvent: 'delete-booked-event',
            rescheduleBookedEvent: 'reschedule',
            getTokenInfo: 'getauthorization-pece-getuserdata'
          },
          urls: [],
          timeZone: [{
            text: 'Alaska Standard Time',
            value: '-08:00|America/Anchorage'
          }, {
            text: 'Pacific Standard Time',
            value: '-07:00|America/Los_Angeles'
          }, {
            text: 'Mountain Standard Time(GMT-06:00)',
            value: '-06:00|America/Denver'
          }, {
            text: 'Mountain Standard Time(GMT-07:00) (no DST)',
            value: '-07:00|America/Phoenix'
          }, {
            text: 'Central Standard Time',
            value: '-05:00|America/Chicago'
          }, {
            text: 'Eastern Standard Time',
            value: '-04:00|America/New_York'
          }, {
            text: 'Hawaii Standard Time',
            value: '-10:00|Pacific/Honolulu'
          }],
          eventType: [{
            text: "Admin Meetings",
            value: 1
          }, {
            text: "Type 2",
            value: 2
          }, {
            text: "Type 3",
            value: 3
          }, {
            text: "Type 3",
            value: 4
          }],
          responseData: [],
          // primaryCondition: {$or: [{event_type: 1}, {event_type: 2}]},
          primaryCondition: {},
          // lib-listing inputs
          skipFields: [],
          modify_header_array: {
            patient_name: 'Patient Name',
            doctor_name: 'Doctor Name',
            doctors_office_name: 'Doctor Office Name',
            booking_date: 'Booked On',
            startdate: 'Event Date',
            slot: "Start Time",
            slot_end_time: 'End Time',
            timezoneName: 'Timezone',
            status: 'Status',
            tech_name: 'Tech name'
          },
          source: 'google-events',
          date_search_source_count: 0,
          libdata: {
            basecondition: {},
            detailview_override: [{
              key: 'event_title',
              val: 'Event Title'
            }, {
              key: 'startdate',
              val: 'Start Date'
            }, {
              key: 'practice_name',
              val: 'Practice Name'
            }, {
              key: 'patient_name',
              val: 'Patient Name'
            }, {
              key: 'patient_email',
              val: 'Patient Email'
            }, {
              key: 'has_pvt',
              val: 'Has PVT'
            }, {
              key: 'has_diabetics',
              val: 'Has Diabetics'
            }, {
              key: 'Had_PVD',
              val: 'Had PVD'
            }, {
              key: 'booking_date',
              val: 'Booking Date'
            }, {
              key: 'additional_notes',
              val: 'Additional Notes'
            }, {
              key: 'insurance_name',
              val: 'Insurance Name'
            }, {
              key: 'insurance_type_name',
              val: 'Insurance Type'
            }, {
              key: 'angina_six_months',
              val: 'Angina(6 Months)'
            }, {
              key: 'angina_today',
              val: 'Angina(Today)'
            }, {
              key: 'bv_six_months',
              val: 'Blurred Vision(6 Months)'
            }, {
              key: 'bv_today',
              val: 'Blurred Vision(Today)'
            }, {
              key: 'ebs_six_months',
              val: 'Elevated Blood Sugar(6 Months)'
            }, {
              key: 'ebs_today',
              val: 'Elevated Blood Sugar(Today)'
            }, {
              key: 'et_six_months',
              val: 'Extreme Thirst(6 Months)'
            }, {
              key: 'et_today',
              val: 'Extreme Thirst(Today)'
            }, {
              key: 'fu_six_months',
              val: 'Frequent Urination(6 Months)'
            }, {
              key: 'fu_today',
              val: 'Frequent Urination(Today)'
            }, {
              key: 'ft_six_months',
              val: 'Fatigue (Tiredness)(6 Months)'
            }, {
              key: 'ft_today',
              val: 'Fatigue (Tiredness)(Today)'
            }, {
              key: 'hb_six_months',
              val: 'Heartburn(6 Months)'
            }, {
              key: 'hb_today',
              val: 'Heartburn(Today)'
            }, {
              key: 'ih_six_months',
              val: 'Increased Hunger(6 Months)'
            }, {
              key: 'ih_today',
              val: 'Increased Hunger(Today)'
            }, {
              key: 'nau_six_months',
              val: 'Nausea(6 Months)'
            }, {
              key: 'nau_today',
              val: 'Nausea(Today)'
            }, {
              key: 'nthf_six_months',
              val: 'Numbness & Tingling in Hands or Feet(6 Months)'
            }, {
              key: 'nthf_today',
              val: 'Numbness & Tingling in Hands or Feet(Today)'
            }, {
              key: 'vomiting_six_months',
              val: 'Vomiting(6 Months)'
            }, {
              key: 'vomiting_today',
              val: 'Vomiting(Today)'
            }, {
              key: 'bs_six_months',
              val: 'Burning Sensations(6 Months)'
            }, {
              key: 'bs_today',
              val: 'Burning Sensations(Today)'
            }, {
              key: 'ddf_six_months',
              val: 'Difficulty Digesting Food(6 Months)'
            }, {
              key: 'ddf_today',
              val: 'Difficulty Digesting Food(Today)'
            }, {
              key: 'dof_six_months',
              val: 'Dizziness or Fainting(6 Months)'
            }, {
              key: 'dof_today',
              val: 'Dizziness or Fainting(Today)'
            }, {
              key: 'ei_six_months',
              val: 'Exercise Intolerance(6 Months)'
            }, {
              key: 'ei_today',
              val: 'Exercise Intolerance(Today)'
            }, {
              key: 'sd_six_months',
              val: 'Sexual Difficulties(6 Months)'
            }, {
              key: 'sd_today',
              val: 'Sexual Difficulties(Today)'
            }, {
              key: 'sa_six_months',
              val: 'Sweat Abnormalities(6 Months)'
            }, {
              key: 'sa_today',
              val: 'Sweat Abnormalities(Today)'
            }, {
              key: 'thf_six_months',
              val: 'Tingling Hands & Feet(6 Months)'
            }, {
              key: 'thf_today',
              val: 'Tingling Hands & Feet(Today)'
            }, {
              key: 'up_six_months',
              val: 'Urinary Problems(6 Months)'
            }, {
              key: 'up_today',
              val: 'Urinary Problems(Today)'
            }, {
              key: 'angina_six_months',
              val: 'Angina (severe chest pain, often spreading to shoulder, arm, back, neck, or jaw)(6 Months)'
            }, {
              key: 'angina_today',
              val: 'Angina (severe chest pain, often spreading to shoulder, arm, back, neck, or jaw)(Today)'
            }, {
              key: 'cptgawr_six_months',
              val: 'Chest Pain that goes away with rest(6 Months)'
            }, {
              key: 'cptgawr_today',
              val: 'Chest Pain that goes away with rest(Today)'
            }, {
              key: 'hrtbn_six_months',
              val: 'Heartburn(6 Months)'
            }, {
              key: 'hrtbn_today',
              val: 'Heartburn(Today)'
            }, {
              key: 'pic_six_months',
              val: 'Pain In Calves(6 Months)'
            }, {
              key: 'pic_today',
              val: 'Pain In Calves(Today)'
            }, {
              key: 'sob_six_months',
              val: 'Shortness of Breath(6 Months)'
            }, {
              key: 'sob_today',
              val: 'Shortness of Breath(Today)'
            }, {
              key: 'stroke_six_months',
              val: 'Stroke(6 Months)'
            }, {
              key: 'stroke_today',
              val: 'Stroke(Today)'
            }, {
              key: 'tia_six_months',
              val: 'TIA (mini stroke)(6 Months)'
            }, {
              key: 'tia_today',
              val: 'TIA (mini stroke)(Today)'
            }, {
              key: 'headaches_six_months',
              val: 'Headaches(6 Months)'
            }, {
              key: 'headaches_today',
              val: 'Headaches(Today)'
            }, {
              key: 'dizziness_six_months',
              val: 'Dizziness(6 Months)'
            }, {
              key: 'dizziness_today',
              val: 'Dizziness(Today)'
            }, {
              key: 'soa_six_months',
              val: 'Swelling of Ankles(6 Months)'
            }, {
              key: 'soa_today',
              val: 'Swelling of Ankles(Today)'
            }, {
              key: 'blv_six_months',
              val: 'INSULIN RESISTANCE (IR)(6 Months)'
            }, {
              key: 'blv_today',
              val: 'INSULIN RESISTANCE (IR)(Today)'
            }, {
              key: 'ebsr_six_months',
              val: 'Elevated Blood Sugar(6 Months)'
            }, {
              key: 'ebsr_today',
              val: 'Elevated Blood Sugar(Today)'
            }, {
              key: 'ext_six_months',
              val: 'Extreme Thirst(6 Months)'
            }, {
              key: 'ext_today',
              val: 'Extreme Thirst(Today)'
            }, {
              key: 'ftd_six_months',
              val: 'Fatigue (Tiredness)(6 Months)'
            }, {
              key: 'ftd_today',
              val: 'Fatigue (Tiredness)(Today)'
            }, {
              key: 'ihr_six_months',
              val: 'Increased Hunger(6 Months)'
            }, {
              key: 'ihr_today',
              val: 'Increased Hunger(Today)'
            }, {
              key: 'burns_six_months',
              val: 'SMALL FIBER SENSORY NEUROPATHY (SFN)(6 Months)'
            }, {
              key: 'burns_today',
              val: 'SMALL FIBER SENSORY NEUROPATHY (SFN)(Today)'
            }, {
              key: 'pcwsbs_six_months',
              val: 'Painful Contact With Socks or Bed Sheets(6 Months)'
            }, {
              key: 'pcwsbs_today',
              val: 'Painful Contact With Socks or Bed Sheets(Today)'
            }, {
              key: 'sess_six_months',
              val: 'Stabbing or Electrical Shock Sensation(6 Months)'
            }, {
              key: 'sess_today',
              val: 'Stabbing or Electrical Shock Sensation(Today)'
            }, {
              key: 'pnsf_six_months',
              val: 'Pins And Needles Sensation In Feet(6 Months)'
            }, {
              key: 'pnsf_today',
              val: 'Pins And Needles Sensation In Feet(Today)'
            }, {
              key: 'bldv_six_months',
              val: 'Blurred Vision(6 Months)'
            }, {
              key: 'bldv_today',
              val: 'Blurred Vision(Today)'
            }, {
              key: 'ccps_six_months',
              val: 'Cold, Clammy, Pale Skin(6 Months)'
            }, {
              key: 'ccps_today',
              val: 'Cold, Clammy, Pale Skin(Today)'
            }, {
              key: 'depression_six_months',
              val: 'Depression(6 Months)'
            }, {
              key: 'depression_today',
              val: 'Depression(Today)'
            }, {
              key: 'dol_six_months',
              val: 'Dizziness or Lightheadedness(6 Months)'
            }, {
              key: 'dol_today',
              val: 'Dizziness or Lightheadedness(Today)'
            }, {
              key: 'thirst_six_months',
              val: 'Thirst(6 Months)'
            }, {
              key: 'thirst_today',
              val: 'Thirst(Today)'
            }, {
              key: 'fainting_six_months',
              val: 'Fainting(6 Months)'
            }, {
              key: 'fainting_today',
              val: 'Fainting(Today)'
            }, {
              key: 'fatt_six_months',
              val: 'Fatigue (Tiredness)(6 Months)'
            }, {
              key: 'fatt_today',
              val: 'Fatigue (Tiredness)(Today)'
            }, {
              key: 'loc_six_months',
              val: 'Lack of Concentration(6 Months)'
            }, {
              key: 'loc_today',
              val: 'Lack of Concentration(Today)'
            }, {
              key: 'loe_six_months',
              val: 'Lack of Energy(6 Months)'
            }, {
              key: 'loe_today',
              val: 'Lack of Energy(Today)'
            }, {
              key: 'nausea_six_months',
              val: 'INSULIN RESISTANCE (IR)(6 Months)'
            }, {
              key: 'nausea_today',
              val: 'INSULIN RESISTANCE (IR)(Today)'
            }, {
              key: 'rsb_six_months',
              val: 'Rapid, Shallow Breathing(6 Months)'
            }, {
              key: 'rsb_today',
              val: 'Rapid, Shallow Breathing(Today)'
            }, {
              key: 'bciv_six_months',
              val: 'Blood clot in a vein (Venous Thrombosis)(6 Months)'
            }, {
              key: 'bciv_today',
              val: 'Blood clot in a vein (Venous Thrombosis)(Today)'
            }, {
              key: 'hattk_six_months',
              val: 'Heart Attack(6 Months)'
            }, {
              key: 'hattk_six_months',
              val: 'Heart Attack(Today)'
            }, {
              key: 'ihtfs_six_months',
              val: 'Irregular heartbeat, too fast/slow (Atrial Fibrillation)(6 Months)'
            }, {
              key: 'iftfs_today',
              val: 'Irregular heartbeat, too fast/slow (Atrial Fibrillation)(Today)'
            }, {
              key: 'strk_six_months',
              val: 'Stroke(6 Months)'
            }, {
              key: 'strk_today',
              val: 'Stroke(Today)'
            }],
            updateendpoint: 'statusupdate',
            hidestatustogglebutton: true,
            hidedeletebutton: true,
            hideviewbutton: true,
            hideeditbutton: true,
            tableheaders: ['patient_name', 'doctor_name', 'doctors_office_name', 'tech_name', 'booking_date', 'startdate', 'slot', 'slot_end_time', 'timezoneName', 'status'],
            custombuttons: []
          },
          updatetable: false,
          limitcond: {
            "limit": 10,
            "skip": 0,
            "pagecount": 1
          },
          sortdata: {
            "type": 'desc',
            "field": 'booking_date',
            "options": ['patient_name', 'booking_date', 'startdate', 'slot', 'slot_end_time']
          },
          custom_link: [],
          search_settings: {
            // this is use for  date search
            datesearch: [{
              startdatelabel: "Events After",
              enddatelabel: "Events Before",
              submit: "Search",
              field: "startdate_unix"
            }],
            // this is use for  select search
            selectsearch: [{
              label: 'Search By Status',
              field: 'status',
              values: [{
                val: 0,
                'name': 'Pending'
              }, {
                val: 1,
                'name': 'Completed'
              }, {
                val: 2,
                'name': 'Canceled'
              }]
            }, {
              label: 'Search By Booking Type',
              field: 'is_google_event',
              values: [{
                val: 'No',
                name: 'Manual'
              }, {
                val: 'Yes',
                name: 'Calendar'
              }]
            }],
            // this is use for  text search
            textsearch: [{
              label: "Search By Patient Name",
              field: 'patient_name_search'
            }],
            // this is use for  Autocomplete search
            search: []
          },
          statusarray: [{
            val: 0,
            'name': 'Pending'
          }, {
            val: 1,
            'name': 'Completed'
          }, {
            val: 2,
            'name': 'Canceled'
          }],
          detail_skip_array: ['_id', 'username', 'useremail', 'startdate_unix', 'can_reschedule', 'is_google_event', 'doctor_id', 'doctors_office_id', 'doctor_name', 'doctors_office_name', 'tech_id', 'tech_name', 'timezoneName', 'parent_id', 'parent_type', 'userid', 'username', 'start_datetime_unix', 'insurance_id', 'insurance_type', 'status', 'patient_name_search']
        };
      }

      _createClass(PastAppoinmentsComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this131 = this;

          // set tech and doctors office search for admin
          if (JSON.parse(this.cookie.get('user_details')).user_type === 'admin') {
            this.configData.search_settings.search.push({
              label: "Search By Tech",
              field: 'tech_id',
              values: [],
              serversearchdata: {
                endpoint: 'get-tech-for-autocomplete-search'
              }
            }, {
              label: "Search By Doctor Office",
              field: 'doctors_office_id',
              values: [],
              serversearchdata: {
                endpoint: 'get-doctor-office-for-autocomplete-search'
              }
            });
            this.configData.search_settings.selectsearch.push({
              label: 'Search By Parent Type',
              field: 'parent_type',
              values: [{
                val: 'admin',
                name: 'Admin'
              }, {
                val: 'distributor',
                name: 'Distributor'
              }, {
                val: 'diagnostic_admin',
                name: 'Diagnostic Admin'
              }, {
                val: 'doctor_group',
                name: 'Doctor Group Admin'
              }]
            });
          } // load doctor search dynamically
          // let user_details = JSON.parse(this.cookie.get('user_details'));


          if (JSON.parse(this.cookie.get('user_details')).user_type === 'admin') {
            this.configData.search_settings.search.push({
              label: "Search By Doctor ",
              field: 'doctor_id',
              values: [],
              serversearchdata: {
                endpoint: 'get-doctor-for-autocomplete-search'
              }
            });
          } else {
            this.configData.search_settings.search.push({
              label: "Search By Doctor ",
              field: 'doctor_id',
              values: this.doctors
            });
          }
          /* ********************* Set custom button ********************* */


          var datafields = this.configData.libdata.detailview_override.map(function (item) {
            return item.key;
          });
          this.configData.libdata.custombuttons.push({
            label: 'View Details',
            type: 'action',
            datatype: 'local',
            datafields: datafields,
            headermessage: 'View Details'
          });
          /* *************************************************************** */

          if (this.cookie.check('jwtToken')) {
            this.configData.jwtToken = this.cookie.get('jwtToken');
            var data = {
              token: this.configData.jwtToken,
              condition: {},
              sort: {
                type: 'desc',
                field: 'booking_date'
              }
            };
            /* Create condition with respect to the user_type */

            if (this.cookie.check('user_details')) {
              switch (JSON.parse(this.cookie.get('user_details')).user_type) {
                case 'admin':
                  // do nothing. all records will be loaded...
                  break;

                case 'doctor_office':
                  data.condition = Object.assign(data.condition, {
                    doctors_office_id: JSON.parse(this.cookie.get('user_details'))._id
                  }); // store the basecondition for the lib-listing

                  this.configData.libdata.basecondition = {
                    doctors_office_id: JSON.parse(this.cookie.get('user_details'))._id
                  };
                  break;

                case 'doctor':
                  data.condition = Object.assign(data.condition, {
                    doctor_id: JSON.parse(this.cookie.get('user_details'))._id
                  }); // store the basecondition for the lib-listing

                  this.configData.libdata.basecondition = {
                    doctor_id: JSON.parse(this.cookie.get('user_details'))._id
                  };
                  break;

                default:
                  // for tech
                  data.condition = Object.assign(data.condition, {
                    $or: [{
                      userid: {
                        $in: [JSON.parse(this.cookie.get('user_details'))._id]
                      }
                    }, {
                      tech_id: {
                        $in: [JSON.parse(this.cookie.get('user_details'))._id]
                      }
                    }]
                  }); // store the basecondition for the lib-listing

                  this.configData.libdata.basecondition = {
                    $or: [{
                      userid: {
                        $in: [JSON.parse(this.cookie.get('user_details'))._id]
                      }
                    }, {
                      tech_id: {
                        $in: [JSON.parse(this.cookie.get('user_details'))._id]
                      }
                    }]
                  };
                  break;
              }
            }

            setTimeout(function () {
              _this131.httpService.postRequest(_this131.configData.endPoint.listBookedEvents, data).subscribe(function (response) {
                // Set dataset in responseData
                _this131.configData.responseData = response.results.res; // Create skipFields array(first save all the keys from the dataset)

                if (response.results.res > 0) _this131.configData.skipFields = Object.keys(response.results.res[0]);
                var requiredFields = ['patient_name', 'doctor_name', 'doctors_office_name', 'tech_name', 'booking_date', 'startdate', 'slot', 'slot_end_time', 'timezoneName', 'status']; // Check user_type === 'doctor_office'

                if (JSON.parse(_this131.cookie.get('user_details')).user_type === 'doctor_office') {
                  requiredFields.splice(requiredFields.indexOf('doctors_office_name'), 1);

                  _this131.configData.libdata.tableheaders.splice(_this131.configData.libdata.tableheaders.indexOf('doctors_office_name'), 1);
                } // Modify the skipFields array(splicing the keys which is in the requiredFields)


                for (var i = 0; i < requiredFields.length; i++) {
                  _this131.configData.skipFields.splice(_this131.configData.skipFields.indexOf(requiredFields[i]), 1);
                }
              });
            }, 1000); // Merge logged in user details with the config data
            // let userDetails: any = JSON.parse(this.cookie.get('user_details'));
            // this.configData = Object.assign(this.configData, userDetails);

            /* ****************** Get total booked events count ****************** */

            setTimeout(function () {
              _this131.httpService.postRequest(_this131.configData.endPoint.listBookedEventsCount, data).subscribe(function (response) {
                _this131.configData.date_search_source_count = response.count;
              });
            }, 1500);
            /* ******************************************************************* */
          } else {
            this.openSnackBar('Token not found', null);
          }
        }
      }, {
        key: "openSnackBar",
        value: function openSnackBar(message, action) {
          this.snackBar.open(message, action, {
            duration: 3000
          });
        }
      }, {
        key: "searchByDoctorValues",
        set: function set(searchByDoctorValues) {
          this.doctors = searchByDoctorValues;
          console.log('this.doctors', this.doctors);
        }
      }]);

      return PastAppoinmentsComponent;
    }();

    PastAppoinmentsComponent.ctorParameters = function () {
      return [{
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__["CookieService"]
      }, {
        type: _angular_material_snack_bar__WEBPACK_IMPORTED_MODULE_4__["MatSnackBar"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_5__["HttpServiceService"]
      }];
    };

    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], PastAppoinmentsComponent.prototype, "searchByDoctorValues", null);
    PastAppoinmentsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-past-appoinments',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./past-appoinments.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/booked-events-listing/past-appoinments/past-appoinments.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./past-appoinments.component.css */
      "./src/app/components/booked-events-listing/past-appoinments/past-appoinments.component.css"))["default"]]
    })], PastAppoinmentsComponent);
    /***/
  },

  /***/
  "./src/app/components/booked-events-listing/reschedule-appointment/reschedule-appointment.component.css":
  /*!**************************************************************************************************************!*\
    !*** ./src/app/components/booked-events-listing/reschedule-appointment/reschedule-appointment.component.css ***!
    \**************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsBookedEventsListingRescheduleAppointmentRescheduleAppointmentComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = ".example-card {\n  max-width: 400px;\n}\n\n.example-header-image {\n  background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\n  background-size: cover;\n  border: 2px solid rgb(224, 218, 218);\n}\n\n.headerSpan {\n  text-align: center;\n  display: block;\n  margin: auto;\n}\n\n.darkToolbar {\n  background-color: black;\n}\n\n.gridListWrapper {\n  padding: 30px;\n}\n\n.buttonsetToolbar {\n  background-color: #f4f3f8;\n  text-align: center;\n  display: block;\n  padding-top: 10px;\n}\n\n.singleButton {\n  margin: 5px;\n  display: inline-block;\n}\n\n.example-container {\n  display: flex;\n  flex-direction: column;\n}\n\n.example-container > * {\n  width: 100%;\n}\n\n.headerSpan {\n  text-align: center;\n  display: block;\n  margin: auto;\n}\n\n.darkToolbar {\n  background-color: black;\n}\n\n.gridListWrapper {\n  padding: 30px;\n}\n\n.buttonsetToolbar {\n  background-color: #f4f3f8;\n  text-align: center;\n  display: block;\n  padding-top: 10px;\n}\n\n.singleButton {\n  margin: 5px;\n  display: inline-block;\n}\n\n.calender_first {\n  margin-bottom: 16px;\n  width: 100%;\n}\n\n.title {\n  text-align: center;\n  background: #57abdc;\n  color: #fff;\n  padding: 16px;\n  margin: 0 16px;\n  margin-bottom: 20px;\n}\n\n.calendar_wrapper {\n  width: 60%;\n  margin: auto;\n  border: 1px solid #00ffb8;\n}\n\n.calendar_wrapper .event_wrapper {\n  display: flex;\n  flex-direction: column;\n}\n\n.calendar_wrapper .event_wrapper .mat-form-field {\n  width: 100%;\n}\n\n.time_picker, .button_wrapper {\n  display: flex;\n  justify-content: space-between;\n}\n\n.time_picker .timer, .button_wrapper button {\n  width: 49%;\n}\n\n.button_wrapper {\n  margin-top: 20px;\n}\n\n.button_wrapper button {\n  padding: 5px;\n  border-radius: 0;\n}\n\n.example-card {\n  max-width: 400px;\n}\n\n.example-header-image {\n  background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\n  background-size: cover;\n}\n\n.slotview {\n  background-color: #f4f3f8;\n  padding: 2% 5%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n}\n\nmat-card {\n  margin: 5px;\n  width: 30%;\n}\n\nb {\n  font-weight: 500;\n}\n\nmat-card-content {\n  font-size: 15px;\n}\n\n.filter {\n  align-content: center;\n  margin-left: 3%;\n  margin-right: 3%;\n}\n\n.filter-box {\n  width: 200px;\n  margin-bottom: auto;\n  margin-right: 15px;\n  font-size: 14px;\n}\n\n.filter-box :disabled {\n  color: #000;\n  border-color: lightgray;\n}\n\n.m-r {\n  margin-right: 6px;\n}\n\n.m-l {\n  margin-left: 6px;\n}\n\n.pagination {\n  border: 1px solid lightgray;\n  border-radius: 5px;\n  width: -webkit-fit-content;\n  width: -moz-fit-content;\n  width: fit-content;\n  display: inline-block;\n  float: right;\n  font-size: 15px;\n  padding: 5px;\n}\n\n.selectPageCount {\n  width: 45px;\n}\n\n.sample_label {\n  margin-left: 12px;\n}\n\n/* test wrapper */\n\n.lib_wrpr{ display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n}\n\n.lb_item{\n  width: 49%;\n  border: 1px solid #dadada;\n  margin: 0.5%;\n  box-sizing: border-box;\n  padding: 10px;\n\n}\n\n.lb_item .header{ margin: 0; margin-bottom: 16px;}\n\n.symptoms_type {\n  display:flex; justify-content: space-between;\n}\n\n.symptoms_type .label_name{ margin: 0;}\n\n.checbox_wrapper{ display: flex;\n  justify-content: space-between;}\n\n.checbox_wrapper label{ margin:0 5px;}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9ib29rZWQtZXZlbnRzLWxpc3RpbmcvcmVzY2hlZHVsZS1hcHBvaW50bWVudC9yZXNjaGVkdWxlLWFwcG9pbnRtZW50LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxtRkFBbUY7RUFDbkYsc0JBQXNCO0VBQ3RCLG9DQUFvQztBQUN0Qzs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixjQUFjO0VBQ2QsWUFBWTtBQUNkOztBQUVBO0VBQ0UsdUJBQXVCO0FBQ3pCOztBQUVBO0VBQ0UsYUFBYTtBQUNmOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLGtCQUFrQjtFQUNsQixjQUFjO0VBQ2QsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsV0FBVztFQUNYLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsY0FBYztFQUNkLFlBQVk7QUFDZDs7QUFFQTtFQUNFLHVCQUF1QjtBQUN6Qjs7QUFFQTtFQUNFLGFBQWE7QUFDZjs7QUFFQTtFQUNFLHlCQUF5QjtFQUN6QixrQkFBa0I7RUFDbEIsY0FBYztFQUNkLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxxQkFBcUI7QUFDdkI7O0FBRUE7RUFDRSxtQkFBbUI7RUFDbkIsV0FBVztBQUNiOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLG1CQUFtQjtFQUNuQixXQUFXO0VBQ1gsYUFBYTtFQUNiLGNBQWM7RUFDZCxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxVQUFVO0VBQ1YsWUFBWTtFQUNaLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsOEJBQThCO0FBQ2hDOztBQUVBO0VBQ0UsVUFBVTtBQUNaOztBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsWUFBWTtFQUNaLGdCQUFnQjtBQUNsQjs7QUFJQTtFQUNFLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLG1GQUFtRjtFQUNuRixzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsY0FBYztFQUNkLGFBQWE7RUFDYixlQUFlO0VBQ2YsdUJBQXVCO0FBQ3pCOztBQUVBO0VBQ0UsV0FBVztFQUNYLFVBQVU7QUFDWjs7QUFFQTtFQUNFLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxxQkFBcUI7RUFDckIsZUFBZTtFQUNmLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLFlBQVk7RUFDWixtQkFBbUI7RUFDbkIsa0JBQWtCO0VBQ2xCLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsdUJBQXVCO0FBQ3pCOztBQUVBO0VBQ0UsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsMkJBQTJCO0VBQzNCLGtCQUFrQjtFQUNsQiwwQkFBa0I7RUFBbEIsdUJBQWtCO0VBQWxCLGtCQUFrQjtFQUNsQixxQkFBcUI7RUFDckIsWUFBWTtFQUNaLGVBQWU7RUFDZixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUEsaUJBQWlCOztBQUNqQixXQUFXLGFBQWE7RUFDdEIsOEJBQThCO0VBQzlCLGVBQWU7QUFDakI7O0FBQ0E7RUFDRSxVQUFVO0VBQ1YseUJBQXlCO0VBQ3pCLFlBQVk7RUFDWixzQkFBc0I7RUFDdEIsYUFBYTs7QUFFZjs7QUFDQSxrQkFBa0IsU0FBUyxFQUFFLG1CQUFtQixDQUFDOztBQUNqRDtFQUNFLFlBQVksRUFBRSw4QkFBOEI7QUFDOUM7O0FBQ0EsNEJBQTRCLFNBQVMsQ0FBQzs7QUFDdEMsa0JBQWtCLGFBQWE7RUFDN0IsOEJBQThCLENBQUM7O0FBQ2pDLHdCQUF3QixZQUFZLENBQUMiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2Jvb2tlZC1ldmVudHMtbGlzdGluZy9yZXNjaGVkdWxlLWFwcG9pbnRtZW50L3Jlc2NoZWR1bGUtYXBwb2ludG1lbnQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLWNhcmQge1xuICBtYXgtd2lkdGg6IDQwMHB4O1xufVxuXG4uZXhhbXBsZS1oZWFkZXItaW1hZ2Uge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2h0dHBzOi8vbWF0ZXJpYWwuYW5ndWxhci5pby9hc3NldHMvaW1nL2V4YW1wbGVzL3NoaWJhMS5qcGcnKTtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgYm9yZGVyOiAycHggc29saWQgcmdiKDIyNCwgMjE4LCAyMTgpO1xufVxuXG4uaGVhZGVyU3BhbiB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbjogYXV0bztcbn1cblxuLmRhcmtUb29sYmFyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XG59XG5cbi5ncmlkTGlzdFdyYXBwZXIge1xuICBwYWRkaW5nOiAzMHB4O1xufVxuXG4uYnV0dG9uc2V0VG9vbGJhciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNGYzZjg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBhZGRpbmctdG9wOiAxMHB4O1xufVxuXG4uc2luZ2xlQnV0dG9uIHtcbiAgbWFyZ2luOiA1cHg7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLmV4YW1wbGUtY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cblxuLmV4YW1wbGUtY29udGFpbmVyID4gKiB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uaGVhZGVyU3BhbiB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbjogYXV0bztcbn1cblxuLmRhcmtUb29sYmFyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XG59XG5cbi5ncmlkTGlzdFdyYXBwZXIge1xuICBwYWRkaW5nOiAzMHB4O1xufVxuXG4uYnV0dG9uc2V0VG9vbGJhciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNGYzZjg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBhZGRpbmctdG9wOiAxMHB4O1xufVxuXG4uc2luZ2xlQnV0dG9uIHtcbiAgbWFyZ2luOiA1cHg7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLmNhbGVuZGVyX2ZpcnN0IHtcbiAgbWFyZ2luLWJvdHRvbTogMTZweDtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi50aXRsZSB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgYmFja2dyb3VuZDogIzU3YWJkYztcbiAgY29sb3I6ICNmZmY7XG4gIHBhZGRpbmc6IDE2cHg7XG4gIG1hcmdpbjogMCAxNnB4O1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xufVxuXG4uY2FsZW5kYXJfd3JhcHBlciB7XG4gIHdpZHRoOiA2MCU7XG4gIG1hcmdpbjogYXV0bztcbiAgYm9yZGVyOiAxcHggc29saWQgIzAwZmZiODtcbn1cblxuLmNhbGVuZGFyX3dyYXBwZXIgLmV2ZW50X3dyYXBwZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuXG4uY2FsZW5kYXJfd3JhcHBlciAuZXZlbnRfd3JhcHBlciAubWF0LWZvcm0tZmllbGQge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLnRpbWVfcGlja2VyLCAuYnV0dG9uX3dyYXBwZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG5cbi50aW1lX3BpY2tlciAudGltZXIsIC5idXR0b25fd3JhcHBlciBidXR0b24ge1xuICB3aWR0aDogNDklO1xufVxuXG4uYnV0dG9uX3dyYXBwZXIge1xuICBtYXJnaW4tdG9wOiAyMHB4O1xufVxuXG4uYnV0dG9uX3dyYXBwZXIgYnV0dG9uIHtcbiAgcGFkZGluZzogNXB4O1xuICBib3JkZXItcmFkaXVzOiAwO1xufVxuXG5cblxuLmV4YW1wbGUtY2FyZCB7XG4gIG1heC13aWR0aDogNDAwcHg7XG59XG5cbi5leGFtcGxlLWhlYWRlci1pbWFnZSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnaHR0cHM6Ly9tYXRlcmlhbC5hbmd1bGFyLmlvL2Fzc2V0cy9pbWcvZXhhbXBsZXMvc2hpYmExLmpwZycpO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xufVxuXG4uc2xvdHZpZXcge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjRmM2Y4O1xuICBwYWRkaW5nOiAyJSA1JTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxubWF0LWNhcmQge1xuICBtYXJnaW46IDVweDtcbiAgd2lkdGg6IDMwJTtcbn1cblxuYiB7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG59XG5cbm1hdC1jYXJkLWNvbnRlbnQge1xuICBmb250LXNpemU6IDE1cHg7XG59XG5cbi5maWx0ZXIge1xuICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XG4gIG1hcmdpbi1sZWZ0OiAzJTtcbiAgbWFyZ2luLXJpZ2h0OiAzJTtcbn1cblxuLmZpbHRlci1ib3gge1xuICB3aWR0aDogMjAwcHg7XG4gIG1hcmdpbi1ib3R0b206IGF1dG87XG4gIG1hcmdpbi1yaWdodDogMTVweDtcbiAgZm9udC1zaXplOiAxNHB4O1xufVxuXG4uZmlsdGVyLWJveCA6ZGlzYWJsZWQge1xuICBjb2xvcjogIzAwMDtcbiAgYm9yZGVyLWNvbG9yOiBsaWdodGdyYXk7XG59XG5cbi5tLXIge1xuICBtYXJnaW4tcmlnaHQ6IDZweDtcbn1cblxuLm0tbCB7XG4gIG1hcmdpbi1sZWZ0OiA2cHg7XG59XG5cbi5wYWdpbmF0aW9uIHtcbiAgYm9yZGVyOiAxcHggc29saWQgbGlnaHRncmF5O1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIHdpZHRoOiBmaXQtY29udGVudDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBmbG9hdDogcmlnaHQ7XG4gIGZvbnQtc2l6ZTogMTVweDtcbiAgcGFkZGluZzogNXB4O1xufVxuXG4uc2VsZWN0UGFnZUNvdW50IHtcbiAgd2lkdGg6IDQ1cHg7XG59XG5cbi5zYW1wbGVfbGFiZWwge1xuICBtYXJnaW4tbGVmdDogMTJweDtcbn1cblxuLyogdGVzdCB3cmFwcGVyICovXG4ubGliX3dycHJ7IGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgZmxleC13cmFwOiB3cmFwO1xufVxuLmxiX2l0ZW17XG4gIHdpZHRoOiA0OSU7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNkYWRhZGE7XG4gIG1hcmdpbjogMC41JTtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgcGFkZGluZzogMTBweDtcblxufVxuLmxiX2l0ZW0gLmhlYWRlcnsgbWFyZ2luOiAwOyBtYXJnaW4tYm90dG9tOiAxNnB4O31cbi5zeW1wdG9tc190eXBlIHtcbiAgZGlzcGxheTpmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG4uc3ltcHRvbXNfdHlwZSAubGFiZWxfbmFtZXsgbWFyZ2luOiAwO31cbi5jaGVjYm94X3dyYXBwZXJ7IGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2Vlbjt9XG4uY2hlY2JveF93cmFwcGVyIGxhYmVseyBtYXJnaW46MCA1cHg7fVxuIl19 */";
    /***/
  },

  /***/
  "./src/app/components/booked-events-listing/reschedule-appointment/reschedule-appointment.component.ts":
  /*!*************************************************************************************************************!*\
    !*** ./src/app/components/booked-events-listing/reschedule-appointment/reschedule-appointment.component.ts ***!
    \*************************************************************************************************************/

  /*! exports provided: RescheduleAppointmentComponent */

  /***/
  function srcAppComponentsBookedEventsListingRescheduleAppointmentRescheduleAppointmentComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "RescheduleAppointmentComponent", function () {
      return RescheduleAppointmentComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var moment_es6__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! moment-es6 */
    "./node_modules/moment-es6/index.js");
    /* harmony import */


    var moment_es6__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(moment_es6__WEBPACK_IMPORTED_MODULE_2__);
    /* harmony import */


    var _angular_material_snack_bar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/material/snack-bar */
    "./node_modules/@angular/material/esm2015/snack-bar.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../../../../environments/environment */
    "./src/environments/environment.ts");

    var RescheduleAppointmentComponent = /*#__PURE__*/function () {
      function RescheduleAppointmentComponent(snackBar, activatedRoute, httpRequest, cookieService, router) {
        _classCallCheck(this, RescheduleAppointmentComponent);

        this.snackBar = snackBar;
        this.activatedRoute = activatedRoute;
        this.httpRequest = httpRequest;
        this.cookieService = cookieService;
        this.router = router;
        this.configData = {
          appName: 'Calendar Management',
          jwtToken: "",
          baseUrl: _environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].calendarApi,
          endPoint: {
            add: 'add-or-update-event-data',
            datalist: 'datalist',
            deleteEvent: 'delete-single-event',
            viewEventSlots: 'view-event-eventdayarr',
            search: 'search',
            countSlot: 'count-slot',
            // listBookedEvents: 'list-booked-events',
            // listBookedEventsCount: 'list-booked-events-count',
            listUpcomingBookedEvents: 'list-upcoming-booked-events',
            listUpcomingBookedEventsCount: 'list-upcoming-booked-events-count',
            deleteBookedEvent: 'delete-booked-event',
            rescheduleBookedEvent: 'reschedule',
            getTokenInfo: 'getauthorization-pece-getuserdata'
          },
          urls: [],
          timeZone: [{
            text: 'Alaska Standard Time',
            value: '-08:00|America/Anchorage'
          }, {
            text: 'Pacific Standard Time',
            value: '-07:00|America/Los_Angeles'
          }, {
            text: 'Mountain Standard Time(GMT-06:00)',
            value: '-06:00|America/Denver'
          }, {
            text: 'Mountain Standard Time(GMT-07:00) (no DST)',
            value: '-07:00|America/Phoenix'
          }, {
            text: 'Central Standard Time',
            value: '-05:00|America/Chicago'
          }, {
            text: 'Eastern Standard Time',
            value: '-04:00|America/New_York'
          }, {
            text: 'Hawaii Standard Time',
            value: '-10:00|Pacific/Honolulu'
          }],
          eventType: [{
            text: "Admin Meetings",
            value: 1
          }],
          responseData: [],
          // primaryCondition: {$or: [{event_type: 1}, {event_type: 2}]},
          primaryCondition: {}
        };
        this.availableSlots = [];
        this.progressSpinner = {
          mode: 'indeterminate',
          loading: true,
          bookingStatus: 'Finding available slots'
        };
        /* Search fields */

        this.filterOptions = {
          availableDates: '',
          eventType: '',
          timezone: ''
        };
        this.today = new Date();
        /* Variable for pagination */

        this.page = {
          start: 1,
          end: 20,
          page_count: 20,
          page_no: 1,
          total_record: 0
        };
        this.itemCount = 20;
        this.arrPage = [];
        this.jumpToPageNumber = 0;
      }

      _createClass(RescheduleAppointmentComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this132 = this;

          if (this.cookieService.check('jwtToken')) {
            if (this.cookieService.check('timezone')) {
              this.filterOptions.timezone = this.cookieService.get('timezone');
            } else {
              this.filterOptions.timezone = '-05:00|America/Chicago';
            }

            var booking_id = this.activatedRoute.snapshot.params._id;
            var doctor_id = this.activatedRoute.snapshot.params.doctor_id;
            this.configData.jwtToken = this.cookieService.get('jwtToken');
            var data = {
              token: this.configData.jwtToken,
              condition: {
                _id: booking_id
              },
              source: 'google_events'
            };
            this.httpRequest.postRequest('get-data', data).subscribe(function (response) {
              _this132.bookingDetails = response.res[0];
            });
            var data2 = {
              token: this.configData.jwtToken,
              condition: {
                _id: doctor_id
              }
            };
            this.httpRequest.postRequest('get-tech-info', data2).subscribe(function (response) {
              var arrTech = response.data.map(function (tech) {
                return tech._id;
              });
              _this132.configData.primaryCondition = {
                userid: {
                  $in: arrTech
                }
              };

              _this132.loadAvailableSlots();

              _this132.getPageCount();
            });
          } else {
            this.openSnackBar('Token not found', 'Ok');
          }
        }
        /*
         * getPageCount() count total number of records found in the collection
         */

      }, {
        key: "getPageCount",
        value: function getPageCount() {
          var _this133 = this;

          var data;

          if (this.searchData == null) {
            data = {
              token: this.configData.jwtToken,
              condition: this.configData.primaryCondition //{$and:[{event_type: 1}]}

            };
          } else {
            data = this.searchData;
          }
          /* If the user is not an admin then load events that created by him/her only */
          // if (this.data.libConfigData.user_type != 'admin') {
          //   data.condition = Object.assign(data.condition, {userid: this.data.libConfigData._id});
          // }


          this.httpRequest.postRequest(this.configData.endPoint.countSlot, data).subscribe(function (response) {
            if (response.status == 'success') {
              /* Update value of this.page */
              _this133.page.total_record = response.data;

              if (_this133.page.total_record < _this133.page.page_count) {
                _this133.page.end = _this133.page.total_record;
              } else {
                _this133.page.end = _this133.page.page_count;
              }
              /* Create page array */


              _this133.arrPage = [];

              for (var i = 0; i < _this133.page.total_record / _this133.page.page_count; i++) {
                _this133.arrPage.push(i + 1);
              }
            } else {// console.log(response);
            }
          });
        }
        /*
         * pageStep is the function to step forward and backward the page
         * Load next or previous n(page.page_count) items
         */

      }, {
        key: "pageStep",
        value: function pageStep() {
          var _this134 = this;

          var flag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
          var data;

          if (flag == 'prev' && this.page.page_no > 1) {
            this.loading = true;
            data = {
              token: this.configData.jwtToken,
              skip: this.page.start - this.page.page_count - 1,
              limit: this.page.page_count,
              timezone: this.filterOptions.timezone,
              condition: this.configData.primaryCondition
            };
          }

          if (flag == 'next' && this.page.end < this.page.total_record) {
            this.loading = true;
            data = {
              token: this.configData.jwtToken,
              skip: this.page.end,
              limit: this.page.page_count,
              timezone: this.filterOptions.timezone,
              condition: this.configData.primaryCondition
            };
          }
          /*
           * If the data variable is uninitialized there is no need to execute the httpRequest
           */


          if (data != null) {
            /* If there has a search value then it must be include the search condition with data */
            if (this.searchData != null) {
              data.condition = this.searchData.condition;
            }
            /* If the user is not an admin then load events that created by him/her only */
            // if (this.configData.user_type != 'admin') {
            //   data.condition = Object.assign(data.condition, {userid: this.configData._id});
            // }


            this.httpRequest.postRequest(this.configData.endPoint.viewEventSlots, data).subscribe(function (response) {
              if (response.status == 'success') {
                _this134.availableSlots = response.data;

                _this134.changePage(flag);
              } else {// console.log('response', response);
              }

              _this134.loading = false;
            });
          }
        }
        /*
         * Function for changing page variables along with the pageStep
         */

      }, {
        key: "changePage",
        value: function changePage(cflag) {
          switch (cflag) {
            /* case 'next' will execute when pageStep('next') execute or on click of forward button */
            case 'next':
              this.page.page_no++;
              this.jumpToPageNumber++;
              this.page.start = this.page.start + this.page.page_count;

              if (this.page.end + this.page.page_count <= this.page.total_record) {
                this.page.end = this.page.end + this.page.page_count;
              } else {
                this.page.end = this.page.total_record;
              }

              break;

            /* case 'prev' will execute when pageStep('prev') execute or on click of backward button */

            case 'prev':
              this.page.page_no--;
              this.jumpToPageNumber--;
              this.page.end = this.page.start - 1;
              this.page.start = this.page.start - this.page.page_count;
              break;
          }
        }
        /*
         * Change the page count value and reload items with the changed value
         */

      }, {
        key: "onChangePageCount",
        value: function onChangePageCount() {
          var _this135 = this;

          this.loading = true;
          var data = {
            token: this.configData.jwtToken,
            skip: 0,
            limit: parseInt(this.itemCount),
            timezone: this.filterOptions.timezone,
            condition: {}
          };
          /* If there has a search value then it must be include the search condition with data */

          if (this.searchData != null) {
            data.condition = this.searchData.condition;
          } else {
            data.condition.$and = this.configData.primaryCondition.$and;
          }
          /* If the user is not an admin then load events that created by him/her only */
          // if (this.configData.user_type != 'admin') {
          //   data.condition = Object.assign(data.condition, {userid: this.data.libConfigData._id});
          // }


          this.httpRequest.postRequest(this.configData.endPoint.viewEventSlots, data).subscribe(function (response) {
            if (response.status == 'success') {
              // this.ngOnInit();
              _this135.availableSlots = response.data;
              _this135.page.start = 1;

              if (parseInt(_this135.itemCount) < _this135.page.total_record) {
                _this135.page.end = parseInt(_this135.itemCount);
              } else {
                _this135.page.end = _this135.page.total_record;
              }

              _this135.page.page_count = parseInt(_this135.itemCount);
              _this135.page.page_no = 1;
              _this135.jumpToPageNumber = 0;
              /* Create page array */

              _this135.arrPage = [];

              for (var i = 0; i <= _this135.page.total_record / _this135.page.page_count; i++) {
                _this135.arrPage.push(i + 1);
              }
            } else {
              console.log('response', response);
            }

            _this135.loading = false;
          });
        }
        /*
         * jumpToPage() directly take into the page that calculates for the current page_count
         */

      }, {
        key: "jumpToPage",
        value: function jumpToPage() {
          var _this136 = this;

          this.loading = true;
          var data = {
            token: this.configData.jwtToken,
            skip: this.page.page_count * this.jumpToPageNumber,
            limit: this.page.page_count,
            timezone: this.filterOptions.timezone,
            condition: {}
          };
          /* If there has a search value then it must be include the search condition with data */

          if (this.searchData != null) {
            data.condition = this.searchData.condition;
          }

          data.condition.$and = this.configData.primaryCondition.$and;
          /* If the user is not an admin then load events that created by him/her only */
          // if (this.configData.user_type != 'admin') {
          //   data.condition = Object.assign(data.condition, {userid: this.data.libConfigData._id});
          // }

          this.httpRequest.postRequest(this.configData.endPoint.viewEventSlots, data).subscribe(function (response) {
            if (response.status == 'success') {
              _this136.availableSlots = response.data;
              _this136.page.page_no = _this136.jumpToPageNumber + 1;
              _this136.page.start = _this136.page.page_count * _this136.jumpToPageNumber + 1;

              if (_this136.page.page_count * _this136.jumpToPageNumber + _this136.page.page_count < _this136.page.total_record) {
                _this136.page.end = _this136.page.page_count * _this136.jumpToPageNumber + _this136.page.page_count;
              } else {
                _this136.page.end = _this136.page.total_record;
              }
            } else {// console.log('response', response);
            }

            _this136.loading = false;
          });
        }
      }, {
        key: "search",
        value: function search() {
          var _this137 = this;

          // const primaryCondition = this.data.libConfigData.primaryCondition;
          //let searchd:any=this.data.libConfigData.primaryCondition;
          this.searchData = {
            condition: {},
            token: this.configData.jwtToken,
            timezone: this.filterOptions.timezone
          };

          if (this.searchData.condition.$and == null) {
            this.searchData.condition.$and = [];
          }

          if (this.filterOptions.availableDates != '') {
            this.searchData.condition.$and.push({
              start_datetime_unix: {
                $gte: moment_es6__WEBPACK_IMPORTED_MODULE_2___default()(this.filterOptions.availableDates.begin).subtract(12, 'hours').valueOf()
              }
            });
            this.searchData.condition.$and.push({
              start_datetime_unix: {
                $lte: moment_es6__WEBPACK_IMPORTED_MODULE_2___default()(this.filterOptions.availableDates.end).add(12, 'hours').valueOf()
              }
            }); // data.condition.end_date = {
            //   $lte: moment(this.availableDates.end).format('L')
            // };
          }

          this.searchData.condition.$and = this.searchData.condition.$and.concat(this.configData.primaryCondition);
          /* if (this.filterOptions.eventType != '') {
            this.searchData.condition.event_type = this.filterOptions.eventType;
          } */

          /* If the user is not an admin then load events that created by him/her only */
          // if (this.data.libConfigData.user_type != 'admin') {
          //   this.searchData.condition = Object.assign(this.searchData.condition, {userid: this.data.libConfigData._id});
          // }

          this.loading = true;
          this.httpRequest.postRequest(this.configData.endPoint.viewEventSlots, this.searchData).subscribe(function (response) {
            if (response.data.length == 0) {
              _this137.openSnackBar('No event found', null);
            }

            if (response.status == 'success') {
              _this137.page.start = 1;

              if (response.data.length > _this137.page.page_count) {
                _this137.page.end = _this137.page.page_count;
              } else {
                _this137.page.end = response.data.length;
              }

              _this137.page.page_no = 1;
              _this137.jumpToPageNumber = 0;
            }

            _this137.availableSlots = response.data;
            _this137.loading = false;
          });
          this.getPageCount();
        }
        /*
         * resetFilter() reset the search fields and reloads data without any condition
         */

      }, {
        key: "resetFilter",
        value: function resetFilter() {
          var _this138 = this;

          this.loading = true;
          /* Reset searchData value to 'null' and filterOptions value to blank('')*/

          this.searchData = null;
          this.filterOptions.availableDates = '';
          this.filterOptions.eventType = '';
          /* Create data object */

          var data = {
            token: this.configData.jwtToken,
            skip: 0,
            limit: this.page.page_count,
            timezone: this.filterOptions.timezone,
            condition: this.configData.primaryCondition
          };
          /* If the user is not an admin then load events that created by him/her only */
          // if (this.data.libConfigData.user_type != 'admin') {
          //   data.condition = Object.assign(data.condition, {userid: this.data.libConfigData._id});
          // }

          this.httpRequest.postRequest(this.configData.endPoint.viewEventSlots, data).subscribe(function (response) {
            if (response.status == 'success') {
              _this138.page.start = 1;

              if (response.data.length > _this138.page.page_count) {
                _this138.page.end = _this138.page.page_count;
              } else {
                _this138.page.end = response.data.length;
              }

              _this138.page.page_no = 1;
              _this138.jumpToPageNumber = 0;
              _this138.availableSlots = response.data;
              _this138.loading = false;
            } else {
              _this138.openSnackBar('Something went wrong. Please try again.', null);
            }
          });
          this.getPageCount();
        }
      }, {
        key: "onChangeTimezone",
        value: function onChangeTimezone(event) {
          var _this139 = this;

          this.loading = true;
          this.cookieService.set('timezone', this.filterOptions.timezone);
          /* Create data object */

          var data = {
            token: this.configData.jwtToken,
            skip: this.page.start - 1,
            limit: this.page.page_count,
            timezone: this.filterOptions.timezone,
            condition: this.configData.primaryCondition
          };
          /* If there has a search value then it must be include the search condition with data */

          if (this.searchData != null) {
            data.condition = this.searchData.condition;
          }
          /* If the user is not an admin then load events that created by him/her only */
          // if (this.data.libConfigData.user_type != 'admin') {
          //   data.condition = Object.assign(data.condition, {userid: this.data.libConfigData._id});
          // }


          this.httpRequest.postRequest(this.configData.endPoint.viewEventSlots, data).subscribe(function (response) {
            if (response.status == 'success') {
              _this139.availableSlots = response.data;
              _this139.loading = false;
            } else {
              _this139.openSnackBar('Something went wrong. Please try again.', null);
            }
          });
        }
      }, {
        key: "loadAvailableSlots",
        value: function loadAvailableSlots() {
          var _this140 = this;

          /* ********************* Loader ****************** */
          this.progressSpinner.loading = true;
          var dot = ['.', '. .', '. . .'];

          var _loop = function _loop(i) {
            setTimeout(function () {
              if (_this140.progressSpinner.loading) {
                _this140.progressSpinner.bookingStatus = 'Finding available slots ' + dot[i % 3];
              }
            }, 500 * (i + 1));
          };

          for (var i = 0; i < 6; i++) {
            _loop(i);
          }
          /* *********************************************** */

          /* Create data object */


          var data = {
            token: this.configData.jwtToken,
            timezone: this.filterOptions.timezone,
            condition: this.configData.primaryCondition
          };
          /* If the user is not an admin then load events that created by him/her only */
          // if (this.data.libConfigData.user_type != 'admin') {
          //   data.condition = Object.assign(data.condition, {useremail: this.data.libConfigData.email});
          // }

          this.httpRequest.postRequest(this.configData.endPoint.viewEventSlots, data).subscribe(function (response) {
            if (response.status == 'success') {
              // console.log('response', response);
              _this140.availableSlots = response.data;
              _this140.progressSpinner.loading = false;
            } else {
              _this140.openSnackBar('Something went wrong. Please try again.', null);
            }
          });
        }
      }, {
        key: "rebook",
        value: function rebook(item) {
          var _this141 = this;

          var data = {
            booked_slot_data: this.bookingDetails,
            reschedule_slot_data: item
          };
          /* ****************** Reschedule in google calendar ****************** */

          if (this.bookingDetails.googleevent != undefined) {
            var url = 'https://gapi.betoparedes.com/updateevent.php?event=' + this.bookingDetails.googleevent + '&refresh_token=' + this.bookingDetails.refresh_token + '&summary=' + item.event_title + '&start=' + item.startDateTime + '&end=' + item.endDateTime;
            this.httpRequest.get(url).subscribe(function (response) {
              console.log('response from google', response);
            });
          }
          /* ****************** Reschedule in database ****************** */


          this.httpRequest.postRequest(this.configData.endPoint.rescheduleBookedEvent, data).subscribe(function (response) {
            if (response.status == 'success') {
              console.log('response', response);
              _this141.progressSpinner.loading = false; // this.dialogRef.close(true);

              _this141.openSnackBar('Rescheduled successfully', 'Ok');

              _this141.router.navigateByUrl('doctor-office/dashboard');
            } else {
              _this141.openSnackBar('Something went wrong. Please try again.', null);
            }
          });
        }
      }, {
        key: "openSnackBar",
        value: function openSnackBar(message, action) {
          this.snackBar.open(message, action, {
            duration: 5000
          });
        }
      }]);

      return RescheduleAppointmentComponent;
    }();

    RescheduleAppointmentComponent.ctorParameters = function () {
      return [{
        type: _angular_material_snack_bar__WEBPACK_IMPORTED_MODULE_3__["MatSnackBar"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_6__["ActivatedRoute"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__["HttpServiceService"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_5__["CookieService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_6__["Router"]
      }];
    };

    RescheduleAppointmentComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-reschedule-appointment',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./reschedule-appointment.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/booked-events-listing/reschedule-appointment/reschedule-appointment.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./reschedule-appointment.component.css */
      "./src/app/components/booked-events-listing/reschedule-appointment/reschedule-appointment.component.css"))["default"]]
    })], RescheduleAppointmentComponent);
    /***/
  },

  /***/
  "./src/app/components/booked-events-listing/upcoming-appoinments/upcoming-appoinments.component.css":
  /*!**********************************************************************************************************!*\
    !*** ./src/app/components/booked-events-listing/upcoming-appoinments/upcoming-appoinments.component.css ***!
    \**********************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsBookedEventsListingUpcomingAppoinmentsUpcomingAppoinmentsComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYm9va2VkLWV2ZW50cy1saXN0aW5nL3VwY29taW5nLWFwcG9pbm1lbnRzL3VwY29taW5nLWFwcG9pbm1lbnRzLmNvbXBvbmVudC5jc3MifQ== */";
    /***/
  },

  /***/
  "./src/app/components/booked-events-listing/upcoming-appoinments/upcoming-appoinments.component.ts":
  /*!*********************************************************************************************************!*\
    !*** ./src/app/components/booked-events-listing/upcoming-appoinments/upcoming-appoinments.component.ts ***!
    \*********************************************************************************************************/

  /*! exports provided: UpcomingAppoinmentsComponent, DialogCancelAlert */

  /***/
  function srcAppComponentsBookedEventsListingUpcomingAppoinmentsUpcomingAppoinmentsComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "UpcomingAppoinmentsComponent", function () {
      return UpcomingAppoinmentsComponent;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DialogCancelAlert", function () {
      return DialogCancelAlert;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../../../environments/environment */
    "./src/environments/environment.ts");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_material_snack_bar__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/material/snack-bar */
    "./node_modules/@angular/material/esm2015/snack-bar.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/material/dialog */
    "./node_modules/@angular/material/esm2015/dialog.js");

    var UpcomingAppoinmentsComponent = /*#__PURE__*/function () {
      function UpcomingAppoinmentsComponent(cookie, snackBar, httpService, dialog) {
        _classCallCheck(this, UpcomingAppoinmentsComponent);

        this.cookie = cookie;
        this.snackBar = snackBar;
        this.httpService = httpService;
        this.dialog = dialog; // public searchByDoctor: any = {label: "Search By Doctor", field: 'doctor_id', values: []};

        this.configData = {
          appName: 'Calendar Management',
          jwtToken: this.cookie.get('jwtToken'),
          baseUrl: _environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].calendarApi,
          endPoint: {
            add: 'add-or-update-event-data',
            datalist: 'datalist',
            deleteEvent: 'delete-single-event',
            viewEventSlots: 'view-event-eventdayarr',
            search: 'search',
            countSlot: 'count-slot',
            // listBookedEvents: 'list-booked-events',
            // listBookedEventsCount: 'list-booked-events-count',
            listUpcomingBookedEvents: 'list-upcoming-booked-events',
            listUpcomingBookedEventsCount: 'list-upcoming-booked-events-count',
            deleteBookedEvent: 'delete-booked-event',
            rescheduleBookedEvent: 'reschedule',
            getTokenInfo: 'getauthorization-pece-getuserdata'
          },
          urls: [],
          timeZone: [{
            text: 'Alaska Standard Time',
            value: '-08:00|America/Anchorage'
          }, {
            text: 'Pacific Standard Time',
            value: '-07:00|America/Los_Angeles'
          }, {
            text: 'Mountain Standard Time(GMT-06:00)',
            value: '-06:00|America/Denver'
          }, {
            text: 'Mountain Standard Time(GMT-07:00) (no DST)',
            value: '-07:00|America/Phoenix'
          }, {
            text: 'Central Standard Time',
            value: '-05:00|America/Chicago'
          }, {
            text: 'Eastern Standard Time',
            value: '-04:00|America/New_York'
          }, {
            text: 'Hawaii Standard Time',
            value: '-10:00|Pacific/Honolulu'
          }],
          eventType: [{
            text: "Admin Meetings",
            value: 1
          }],
          responseData: [],
          // primaryCondition: {$or: [{event_type: 1}, {event_type: 2}]},
          primaryCondition: {
            userid: {
              $in: JSON.parse(this.cookie.get('user_details')).tech_id
            }
          },
          // lib-listing inputs
          skipFields: [],
          modify_header_array: {
            patient_name: 'Patient Name',
            doctor_name: 'Doctor Name',
            booking_date: 'Booked On',
            startdate: 'Event Date',
            slot: "Start Time",
            slot_end_time: 'End Time',
            timezoneName: 'Timezone',
            status: 'Status',
            doctors_office_name: 'Doctors office name',
            tech_name: 'Tech Name',
            is_google_event: 'Calendar Event'
          },
          source: 'google_events',
          date_search_source_count: 0,
          libdata: {
            basecondition: {},
            detailview_override: [{
              key: 'event_title',
              val: 'Event Title'
            }, {
              key: 'startdate',
              val: 'Start Date'
            }, {
              key: 'practice_name',
              val: 'Practice Name'
            }, {
              key: 'patient_name',
              val: 'Patient Name'
            }, {
              key: 'patient_email',
              val: 'Patient Email'
            }, {
              key: 'has_pvt',
              val: 'Has PVT'
            }, {
              key: 'has_diabetics',
              val: 'Has Diabetics'
            }, {
              key: 'Had_PVD',
              val: 'Had PVD'
            }, {
              key: 'booking_date',
              val: 'Booking Date'
            }, {
              key: 'additional_notes',
              val: 'Additional Notes'
            }, {
              key: 'insurance_name',
              val: 'Insurance Name'
            }, {
              key: 'insurance_type_name',
              val: 'Insurance Type'
            }, {
              key: 'angina_six_months',
              val: 'Angina(6 Months)'
            }, {
              key: 'angina_today',
              val: 'Angina(Today)'
            }, {
              key: 'bv_six_months',
              val: 'Blurred Vision(6 Months)'
            }, {
              key: 'bv_today',
              val: 'Blurred Vision(Today)'
            }, {
              key: 'ebs_six_months',
              val: 'Elevated Blood Sugar(6 Months)'
            }, {
              key: 'ebs_today',
              val: 'Elevated Blood Sugar(Today)'
            }, {
              key: 'et_six_months',
              val: 'Extreme Thirst(6 Months)'
            }, {
              key: 'et_today',
              val: 'Extreme Thirst(Today)'
            }, {
              key: 'fu_six_months',
              val: 'Frequent Urination(6 Months)'
            }, {
              key: 'fu_today',
              val: 'Frequent Urination(Today)'
            }, {
              key: 'ft_six_months',
              val: 'Fatigue (Tiredness)(6 Months)'
            }, {
              key: 'ft_today',
              val: 'Fatigue (Tiredness)(Today)'
            }, {
              key: 'hb_six_months',
              val: 'Heartburn(6 Months)'
            }, {
              key: 'hb_today',
              val: 'Heartburn(Today)'
            }, {
              key: 'ih_six_months',
              val: 'Increased Hunger(6 Months)'
            }, {
              key: 'ih_today',
              val: 'Increased Hunger(Today)'
            }, {
              key: 'nau_six_months',
              val: 'Nausea(6 Months)'
            }, {
              key: 'nau_today',
              val: 'Nausea(Today)'
            }, {
              key: 'nthf_six_months',
              val: 'Numbness & Tingling in Hands or Feet(6 Months)'
            }, {
              key: 'nthf_today',
              val: 'Numbness & Tingling in Hands or Feet(Today)'
            }, {
              key: 'vomiting_six_months',
              val: 'Vomiting(6 Months)'
            }, {
              key: 'vomiting_today',
              val: 'Vomiting(Today)'
            }, {
              key: 'bs_six_months',
              val: 'Burning Sensations(6 Months)'
            }, {
              key: 'bs_today',
              val: 'Burning Sensations(Today)'
            }, {
              key: 'ddf_six_months',
              val: 'Difficulty Digesting Food(6 Months)'
            }, {
              key: 'ddf_today',
              val: 'Difficulty Digesting Food(Today)'
            }, {
              key: 'dof_six_months',
              val: 'Dizziness or Fainting(6 Months)'
            }, {
              key: 'dof_today',
              val: 'Dizziness or Fainting(Today)'
            }, {
              key: 'ei_six_months',
              val: 'Exercise Intolerance(6 Months)'
            }, {
              key: 'ei_today',
              val: 'Exercise Intolerance(Today)'
            }, {
              key: 'sd_six_months',
              val: 'Sexual Difficulties(6 Months)'
            }, {
              key: 'sd_today',
              val: 'Sexual Difficulties(Today)'
            }, {
              key: 'sa_six_months',
              val: 'Sweat Abnormalities(6 Months)'
            }, {
              key: 'sa_today',
              val: 'Sweat Abnormalities(Today)'
            }, {
              key: 'thf_six_months',
              val: 'Tingling Hands & Feet(6 Months)'
            }, {
              key: 'thf_today',
              val: 'Tingling Hands & Feet(Today)'
            }, {
              key: 'up_six_months',
              val: 'Urinary Problems(6 Months)'
            }, {
              key: 'up_today',
              val: 'Urinary Problems(Today)'
            }, {
              key: 'angina_six_months',
              val: 'Angina (severe chest pain, often spreading to shoulder, arm, back, neck, or jaw)(6 Months)'
            }, {
              key: 'angina_today',
              val: 'Angina (severe chest pain, often spreading to shoulder, arm, back, neck, or jaw)(Today)'
            }, {
              key: 'cptgawr_six_months',
              val: 'Chest Pain that goes away with rest(6 Months)'
            }, {
              key: 'cptgawr_today',
              val: 'Chest Pain that goes away with rest(Today)'
            }, {
              key: 'hrtbn_six_months',
              val: 'Heartburn(6 Months)'
            }, {
              key: 'hrtbn_today',
              val: 'Heartburn(Today)'
            }, {
              key: 'pic_six_months',
              val: 'Pain In Calves(6 Months)'
            }, {
              key: 'pic_today',
              val: 'Pain In Calves(Today)'
            }, {
              key: 'sob_six_months',
              val: 'Shortness of Breath(6 Months)'
            }, {
              key: 'sob_today',
              val: 'Shortness of Breath(Today)'
            }, {
              key: 'stroke_six_months',
              val: 'Stroke(6 Months)'
            }, {
              key: 'stroke_today',
              val: 'Stroke(Today)'
            }, {
              key: 'tia_six_months',
              val: 'TIA (mini stroke)(6 Months)'
            }, {
              key: 'tia_today',
              val: 'TIA (mini stroke)(Today)'
            }, {
              key: 'headaches_six_months',
              val: 'Headaches(6 Months)'
            }, {
              key: 'headaches_today',
              val: 'Headaches(Today)'
            }, {
              key: 'dizziness_six_months',
              val: 'Dizziness(6 Months)'
            }, {
              key: 'dizziness_today',
              val: 'Dizziness(Today)'
            }, {
              key: 'soa_six_months',
              val: 'Swelling of Ankles(6 Months)'
            }, {
              key: 'soa_today',
              val: 'Swelling of Ankles(Today)'
            }, {
              key: 'blv_six_months',
              val: 'INSULIN RESISTANCE (IR)(6 Months)'
            }, {
              key: 'blv_today',
              val: 'INSULIN RESISTANCE (IR)(Today)'
            }, {
              key: 'ebsr_six_months',
              val: 'Elevated Blood Sugar(6 Months)'
            }, {
              key: 'ebsr_today',
              val: 'Elevated Blood Sugar(Today)'
            }, {
              key: 'ext_six_months',
              val: 'Extreme Thirst(6 Months)'
            }, {
              key: 'ext_today',
              val: 'Extreme Thirst(Today)'
            }, {
              key: 'ftd_six_months',
              val: 'Fatigue (Tiredness)(6 Months)'
            }, {
              key: 'ftd_today',
              val: 'Fatigue (Tiredness)(Today)'
            }, {
              key: 'ihr_six_months',
              val: 'Increased Hunger(6 Months)'
            }, {
              key: 'ihr_today',
              val: 'Increased Hunger(Today)'
            }, {
              key: 'burns_six_months',
              val: 'SMALL FIBER SENSORY NEUROPATHY (SFN)(6 Months)'
            }, {
              key: 'burns_today',
              val: 'SMALL FIBER SENSORY NEUROPATHY (SFN)(Today)'
            }, {
              key: 'pcwsbs_six_months',
              val: 'Painful Contact With Socks or Bed Sheets(6 Months)'
            }, {
              key: 'pcwsbs_today',
              val: 'Painful Contact With Socks or Bed Sheets(Today)'
            }, {
              key: 'sess_six_months',
              val: 'Stabbing or Electrical Shock Sensation(6 Months)'
            }, {
              key: 'sess_today',
              val: 'Stabbing or Electrical Shock Sensation(Today)'
            }, {
              key: 'pnsf_six_months',
              val: 'Pins And Needles Sensation In Feet(6 Months)'
            }, {
              key: 'pnsf_today',
              val: 'Pins And Needles Sensation In Feet(Today)'
            }, {
              key: 'bldv_six_months',
              val: 'Blurred Vision(6 Months)'
            }, {
              key: 'bldv_today',
              val: 'Blurred Vision(Today)'
            }, {
              key: 'ccps_six_months',
              val: 'Cold, Clammy, Pale Skin(6 Months)'
            }, {
              key: 'ccps_today',
              val: 'Cold, Clammy, Pale Skin(Today)'
            }, {
              key: 'depression_six_months',
              val: 'Depression(6 Months)'
            }, {
              key: 'depression_today',
              val: 'Depression(Today)'
            }, {
              key: 'dol_six_months',
              val: 'Dizziness or Lightheadedness(6 Months)'
            }, {
              key: 'dol_today',
              val: 'Dizziness or Lightheadedness(Today)'
            }, {
              key: 'thirst_six_months',
              val: 'Thirst(6 Months)'
            }, {
              key: 'thirst_today',
              val: 'Thirst(Today)'
            }, {
              key: 'fainting_six_months',
              val: 'Fainting(6 Months)'
            }, {
              key: 'fainting_today',
              val: 'Fainting(Today)'
            }, {
              key: 'fatt_six_months',
              val: 'Fatigue (Tiredness)(6 Months)'
            }, {
              key: 'fatt_today',
              val: 'Fatigue (Tiredness)(Today)'
            }, {
              key: 'loc_six_months',
              val: 'Lack of Concentration(6 Months)'
            }, {
              key: 'loc_today',
              val: 'Lack of Concentration(Today)'
            }, {
              key: 'loe_six_months',
              val: 'Lack of Energy(6 Months)'
            }, {
              key: 'loe_today',
              val: 'Lack of Energy(Today)'
            }, {
              key: 'nausea_six_months',
              val: 'INSULIN RESISTANCE (IR)(6 Months)'
            }, {
              key: 'nausea_today',
              val: 'INSULIN RESISTANCE (IR)(Today)'
            }, {
              key: 'rsb_six_months',
              val: 'Rapid, Shallow Breathing(6 Months)'
            }, {
              key: 'rsb_today',
              val: 'Rapid, Shallow Breathing(Today)'
            }, {
              key: 'bciv_six_months',
              val: 'Blood clot in a vein (Venous Thrombosis)(6 Months)'
            }, {
              key: 'bciv_today',
              val: 'Blood clot in a vein (Venous Thrombosis)(Today)'
            }, {
              key: 'hattk_six_months',
              val: 'Heart Attack(6 Months)'
            }, {
              key: 'hattk_six_months',
              val: 'Heart Attack(Today)'
            }, {
              key: 'ihtfs_six_months',
              val: 'Irregular heartbeat, too fast/slow (Atrial Fibrillation)(6 Months)'
            }, {
              key: 'iftfs_today',
              val: 'Irregular heartbeat, too fast/slow (Atrial Fibrillation)(Today)'
            }, {
              key: 'strk_six_months',
              val: 'Stroke(6 Months)'
            }, {
              key: 'strk_today',
              val: 'Stroke(Today)'
            }],
            updateendpoint: 'statusupdate',
            hidestatustogglebutton: true,
            hidedeletebutton: true,
            hideviewbutton: true,
            hideeditbutton: true,
            tableheaders: ['patient_name', 'doctor_name', 'doctors_office_name', 'tech_name', 'booking_date', 'startdate', 'slot', 'slot_end_time', 'timezoneName', 'is_google_event', 'status'],
            custombuttons: [// {
            //   label: "Cancel", type: 'action', datatype: 'api',
            //   endpoint: 'delete-booked-event', otherparam: [],
            //   cond: 'status', condval: 0,
            //   param: '_id', refreshdata: true,
            // },
            {
              label: "Cancel",
              type: 'listner',
              id: 'btn_cancel',
              cond: 'status',
              condval: 0,
              refreshdata: true
            }, {
              label: "Reschedule",
              route: "doctor-office/reschedule-appointment",
              type: 'internallink',
              cond: 'can_reschedule',
              condval: true,
              param: ['_id', 'doctor_id']
            }]
          },
          updatetable: false,
          limitcond: {
            "limit": 10,
            "skip": 0,
            "pagecount": 1
          },
          sortdata: {
            "type": 'desc',
            "field": 'booking_date',
            "options": ['patient_name', 'booking_date', 'startdate', 'slot', 'slot_end_time']
          },
          custom_link: [],
          search_settings: {
            // this is use for  date search
            datesearch: [{
              startdatelabel: "Events After",
              enddatelabel: "Events Before",
              submit: "Search",
              field: "startdate_unix"
            }],
            // this is use for  select search
            selectsearch: [{
              label: 'Search By Status',
              field: 'status',
              values: [{
                val: 0,
                'name': 'Pending'
              }, {
                val: 1,
                'name': 'Completed'
              }, {
                val: 2,
                'name': 'Canceled'
              }]
            }, {
              label: 'Search By Booking Type',
              field: 'is_google_event',
              values: [{
                val: 'No',
                name: 'Manual'
              }, {
                val: 'Yes',
                name: 'Calendar'
              }]
            }],
            // this is use for  text search
            textsearch: [{
              label: "Search By Patient Name",
              field: 'patient_name_search'
            }],
            // this is use for  Autocomplete search
            search: [// {
              //   label: "Search By Doctor", field: 'doctor_id', values: [
              //     {val: 'example_doctor_id', name: 'YmattZ A'},
              //     {val: 'YmattZ', name: 'YmattZ A'},
              //     {val: 'Ymatt', name: 'YmattZ AB'},
              //     {val: 'Jessica', name: 'A Jessica'}
              //   ]
              // },
              // this.searchByDoctor
            ]
          },
          statusarray: [{
            val: 0,
            'name': 'Pending'
          }, {
            val: 1,
            'name': 'Completed'
          }, {
            val: 2,
            'name': 'Canceled'
          }],
          detail_skip_array: ['_id', 'username', 'useremail', 'startdate_unix', 'can_reschedule', 'is_google_event', 'doctor_id', 'doctors_office_id', 'doctor_name', 'doctors_office_name', 'tech_id', 'tech_name', 'timezoneName', 'parent_id', 'parent_type', 'userid', 'username', 'start_datetime_unix', 'insurance_id', 'insurance_type', 'status', 'patient_name_search']
        };
      }

      _createClass(UpcomingAppoinmentsComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this142 = this;

          // set tech and doctors office search for admin
          if (JSON.parse(this.cookie.get('user_details')).user_type === 'admin') {
            this.configData.search_settings.search.push({
              label: "Search By Tech",
              field: 'tech_id',
              values: [],
              serversearchdata: {
                endpoint: 'get-tech-for-autocomplete-search'
              }
            }, {
              label: "Search By Doctor Office",
              field: 'doctors_office_id',
              values: [],
              serversearchdata: {
                endpoint: 'get-doctor-office-for-autocomplete-search'
              }
            });
            this.configData.search_settings.selectsearch.push({
              label: 'Search By Parent Type',
              field: 'parent_type',
              values: [{
                val: 'admin',
                name: 'Admin'
              }, {
                val: 'distributor',
                name: 'Distributor'
              }, {
                val: 'diagnostic_admin',
                name: 'Diagnostic Admin'
              }, {
                val: 'doctor_group',
                name: 'Doctor Group Admin'
              }]
            });
          } // load doctor search dynamically
          // let user_details = JSON.parse(this.cookie.get('user_details'));


          if (JSON.parse(this.cookie.get('user_details')).user_type === 'admin') {
            this.configData.search_settings.search.push({
              label: "Search By Doctor ",
              field: 'doctor_id',
              values: [],
              serversearchdata: {
                endpoint: 'get-doctor-for-autocomplete-search'
              }
            });
          } else {
            this.configData.search_settings.search.push({
              label: "Search By Doctor ",
              field: 'doctor_id',
              values: this.doctors
            });
          }
          /* ********************* Set custom button ********************* */


          var datafields = this.configData.libdata.detailview_override.map(function (item) {
            return item.key;
          });
          this.configData.libdata.custombuttons.push({
            label: 'View Details',
            type: 'action',
            datatype: 'local',
            datafields: datafields,
            headermessage: 'View Details'
          });
          /* *************************************************************** */
          // console.log('this.searchByDoctor', this.searchByDoctor);

          if (this.cookie.check('jwtToken')) {
            this.configData.jwtToken = this.cookie.get('jwtToken');
            var data = {
              token: this.configData.jwtToken,
              condition: {},
              sort: {
                type: 'desc',
                field: 'booking_date'
              }
            };
            /* Create condition with respect to the user_type */

            if (this.cookie.check('user_details')) {
              switch (JSON.parse(this.cookie.get('user_details')).user_type) {
                case 'admin':
                  // do nothing. all records will be loaded...
                  break;

                case 'doctor_office':
                  data.condition = Object.assign(data.condition, {
                    doctors_office_id: JSON.parse(this.cookie.get('user_details'))._id
                  }); // store the basecondition for the lib-listing

                  this.configData.libdata.basecondition = {
                    doctors_office_id: JSON.parse(this.cookie.get('user_details'))._id
                  };
                  break;

                case 'doctor':
                  data.condition = Object.assign(data.condition, {
                    doctor_id: JSON.parse(this.cookie.get('user_details'))._id
                  }); // store the basecondition for the lib-listing

                  this.configData.libdata.basecondition = {
                    doctor_id: JSON.parse(this.cookie.get('user_details'))._id
                  };
                  break;

                default:
                  // for tech
                  data.condition = Object.assign(data.condition, {
                    $or: [{
                      userid: {
                        $in: [JSON.parse(this.cookie.get('user_details'))._id]
                      }
                    }, {
                      tech_id: {
                        $in: [JSON.parse(this.cookie.get('user_details'))._id]
                      }
                    }]
                  }); // store the basecondition for the lib-listing

                  this.configData.libdata.basecondition = {
                    $or: [{
                      userid: {
                        $in: [JSON.parse(this.cookie.get('user_details'))._id]
                      }
                    }, {
                      tech_id: {
                        $in: [JSON.parse(this.cookie.get('user_details'))._id]
                      }
                    }]
                  };
                  break;
              }
            }

            this.httpService.postRequest(this.configData.endPoint.listUpcomingBookedEvents, data).subscribe(function (response) {
              // Set dataset in responseData
              _this142.configData.responseData = response.results.res; // Create skipFields array(first save all the keys from the dataset)

              if (response.results.res > 0) _this142.configData.skipFields = Object.keys(response.results.res[0]);
              var requiredFields = ['patient_name', 'doctor_name', 'doctors_office_name', 'tech_name', 'booking_date', 'startdate', 'slot', 'slot_end_time', 'timezoneName', 'is_google_event', 'status']; // Check user_type === 'doctor_office'

              if (JSON.parse(_this142.cookie.get('user_details')).user_type === 'doctor_office') {
                requiredFields.splice(requiredFields.indexOf('doctors_office_name'), 1);

                _this142.configData.libdata.tableheaders.splice(_this142.configData.libdata.tableheaders.indexOf('doctors_office_name'), 1);
              } // Modify the skipFields array(splicing the keys which is in the requiredFields)


              for (var i = 0; i < requiredFields.length; i++) {
                _this142.configData.skipFields.splice(_this142.configData.skipFields.indexOf(requiredFields[i]), 1);
              }
            }); // Merge logged in user details with the config data
            // let userDetails: any = JSON.parse(this.cookie.get('user_details'));
            // this.configData = Object.assign(this.configData, userDetails);

            /* ****************** Get total booked events count ****************** */

            setTimeout(function () {
              _this142.httpService.postRequest(_this142.configData.endPoint.listUpcomingBookedEventsCount, data).subscribe(function (response) {
                _this142.configData.date_search_source_count = response.count;
              });
            }, 500);
            /* ******************************************************************* */
          } else {
            this.openSnackBar('Token not found', null);
          }
        }
      }, {
        key: "openSnackBar",
        value: function openSnackBar(message, action) {
          this.snackBar.open(message, action, {
            duration: 3000
          });
        }
      }, {
        key: "listenLiblistingChange",
        value: function listenLiblistingChange(event) {
          var _this143 = this;

          console.log('event', event); // endpoint: 'delete-booked-event'

          if (event.custombuttonclick != undefined) {
            if (event.custombuttonclick.btninfo.id === 'btn_cancel') {
              var dialogRef = this.dialog.open(DialogCancelAlert);
              dialogRef.afterClosed().subscribe(function (result) {
                console.log("Dialog result: ".concat(result));
                var data = {
                  token: _this143.configData.jwtToken,
                  _id: event.custombuttonclick.data._id
                };

                if (result == 'true') {
                  _this143.httpService.postRequest('delete-booked-event', data).subscribe(function (response) {
                    console.log('response', response);
                    _this143.configData.updatetable = !_this143.configData.updatetable;
                  });
                }
              });
            }
          }
        }
      }, {
        key: "searchByDoctorValues",
        set: function set(searchByDoctorValues) {
          this.doctors = searchByDoctorValues;
          console.log('this.doctors', this.doctors);
        }
      }]);

      return UpcomingAppoinmentsComponent;
    }();

    UpcomingAppoinmentsComponent.ctorParameters = function () {
      return [{
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__["CookieService"]
      }, {
        type: _angular_material_snack_bar__WEBPACK_IMPORTED_MODULE_4__["MatSnackBar"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_5__["HttpServiceService"]
      }, {
        type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__["MatDialog"]
      }];
    };

    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], UpcomingAppoinmentsComponent.prototype, "searchByDoctorValues", null);
    UpcomingAppoinmentsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-upcoming-appoinments',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./upcoming-appoinments.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/booked-events-listing/upcoming-appoinments/upcoming-appoinments.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./upcoming-appoinments.component.css */
      "./src/app/components/booked-events-listing/upcoming-appoinments/upcoming-appoinments.component.css"))["default"]]
    })], UpcomingAppoinmentsComponent);

    var DialogCancelAlert = function DialogCancelAlert() {
      _classCallCheck(this, DialogCancelAlert);
    };

    DialogCancelAlert = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'cancel-alert-dialog',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./cancel-alert.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/booked-events-listing/upcoming-appoinments/cancel-alert.html"))["default"]
    })], DialogCancelAlert);
    /***/
  },

  /***/
  "./src/app/components/common/account-settings/account-settings.component.css":
  /*!***********************************************************************************!*\
    !*** ./src/app/components/common/account-settings/account-settings.component.css ***!
    \***********************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsCommonAccountSettingsAccountSettingsComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "/* header css */\n.techdashboard_header .mat-toolbar-row{ height: auto; }\n.techdashboard_header .mat-toolbar-row .logo_wrapper{ max-width: 200px; display: block; }\n.techdashboard_header .mat-toolbar-row .logo_wrapper img{ max-width: 100%; vertical-align: middle; }\n.techdashboard_header .mat-toolbar-row{ justify-content: space-between; padding: 0 40px;}\n.techdashboard_header .mat-toolbar-row .quotation { margin-bottom: 0px;}\n.techdashboard_header .mat-toolbar-row .quotation p{ font-family: \"AvenirMedium\"; font-size: 30px; color: #002035; text-transform: uppercase; margin: 0; }\n.techdashboard_header .mat-toolbar-row .profile_section { display: flex; border-left: 1px solid #e2dede; padding-left: 20px; }\n.techdashboard_header .mat-toolbar-row .profile_section .username{ padding-right: 20px; display: block; }\n.techdashboard_header .mat-toolbar-row .quotation .mat-list-base{ display: flex;}\n.techdashboard_header .mat-toolbar-row .quotation .mat-list-base .mat-list-item:after{ content:\"\"; width:2px; height: 80px; background: red;}\n.active{ color: #c18500!important; }\n.techdashboard_header .mat-toolbar-row .quotation .mat-nav-list .mat-list-item { margin: 0 16px; }\n.add_form{ margin: 20px auto; background: #f3f3f3; padding: 16px 10px; padding-bottom: 50px; border: 1px solid #91e7ff; }\n.add_form .form_wrapper .mat-form-field{ width: 49%; margin: 0.5%; }\n.add_form .form_wrapper textarea{ resize: none;}\n.add_form h2{ font-family: \"AvenirBlack\"; text-transform: uppercase; font-size: 24px; padding: 0 6px; color: #1dbce9; }\n.add_form .submit_form { display: block; width: 100%; text-align: center; margin-top: 30px; }\n.add_form .return_button { background: #1dbce9; color: #fff; margin-bottom: 12px;}\n.add_form .t_head{ font-family: 'AvenirMedium'; font-size: 18px; background: #4a4a4a; padding: 10px; color: #fff; }\n@media screen and (max-width: 1460px){\n  .techdashboard_header .mat-toolbar-row .quotation p { font-size: 24px; line-height: 26px;}\n}\n@media screen and (max-width: 1000px){\n  .add_form .submit_form button { width: 48%; }\n}\n@media screen and (max-width: 991px){\n.techdashboard_header .mat-toolbar-row { flex-direction: column; padding: 20px;}\n.techdashboard_header .mat-toolbar-row .quotation p { margin-top: 16px; }\n}\n@media screen and (max-width: 768px){\n  .add_form .form_wrapper .mat-form-field { width: 100%; margin: 0; }\n}\n@media screen and (max-width: 576px){\n.add_form .submit_form button { font-size: 22px; padding: 2px; }\n\n.add_form .submit_form button { width: 100%; margin: 0; margin-top: 20px; }\n.add_form .submit_form { display: flex; flex-direction: column-reverse; text-align: center; margin-top: 0px; }\n.add_form .submit_form button:nth-child(1) { margin-right: 0; margin-top: 20px; }\n}\n@media screen and (max-width: 360px){\n.techdashboard_header .mat-toolbar-row .quotation p { font-size: 16px; line-height: 22px; }\n.add_form h2 { font-size: 22px; line-height: 24px; text-align: center; }\n}\n#menu_button{ display: none;}\n.add_header{ display: flex; margin: 0 16px;}\n.add_header button{ margin-left: auto;\n  background: linear-gradient(180deg, #fac855, #e47e2a)!important;\n  text-transform: uppercase;\n  font-family: \"AvenirBlack\"; padding-top: 4px;\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jb21tb24vYWNjb3VudC1zZXR0aW5ncy9hY2NvdW50LXNldHRpbmdzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZUFBZTtBQUNmLHdDQUF3QyxZQUFZLEVBQUU7QUFDdEQsc0RBQXNELGdCQUFnQixFQUFFLGNBQWMsRUFBRTtBQUN4RiwwREFBMEQsZUFBZSxFQUFFLHNCQUFzQixFQUFFO0FBQ25HLHdDQUF3Qyw4QkFBOEIsRUFBRSxlQUFlLENBQUM7QUFDeEYsb0RBQW9ELGtCQUFrQixDQUFDO0FBQ3ZFLHFEQUFxRCwyQkFBMkIsRUFBRSxlQUFlLEVBQUUsY0FBYyxFQUFFLHlCQUF5QixFQUFFLFNBQVMsRUFBRTtBQUN6SiwwREFBMEQsYUFBYSxFQUFFLDhCQUE4QixFQUFFLGtCQUFrQixFQUFFO0FBQzdILG1FQUFtRSxtQkFBbUIsRUFBRSxjQUFjLEVBQUU7QUFHeEcsa0VBQWtFLGFBQWEsQ0FBQztBQUNoRix1RkFBdUYsVUFBVSxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsZUFBZSxDQUFDO0FBQzVJLFNBQVMsd0JBQXdCLEVBQUU7QUFDbkMsaUZBQWlGLGNBQWMsRUFBRTtBQUdqRyxXQUFXLGlCQUFpQixFQUFFLG1CQUFtQixFQUFFLGtCQUFrQixFQUFFLG9CQUFvQixFQUFFLHlCQUF5QixFQUFFO0FBQ3hILHlDQUF5QyxVQUFVLEVBQUUsWUFBWSxFQUFFO0FBQ25FLGtDQUFrQyxZQUFZLENBQUM7QUFDL0MsY0FBYywwQkFBMEIsRUFBRSx5QkFBeUIsRUFBRSxlQUFlLEVBQUUsY0FBYyxFQUFFLGNBQWMsRUFBRTtBQUN0SCx5QkFBeUIsY0FBYyxFQUFFLFdBQVcsRUFBRSxrQkFBa0IsRUFBRSxnQkFBZ0IsRUFBRTtBQUM1RiwyQkFBMkIsbUJBQW1CLEVBQUUsV0FBVyxFQUFFLG1CQUFtQixDQUFDO0FBRWpGLG1CQUFtQiwyQkFBMkIsRUFBRSxlQUFlLEVBQUUsbUJBQW1CLEVBQUUsYUFBYSxFQUFFLFdBQVcsRUFBRTtBQUdsSDtFQUNFLHNEQUFzRCxlQUFlLEVBQUUsaUJBQWlCLENBQUM7QUFDM0Y7QUFFQTtFQUNFLGdDQUFnQyxVQUFVLEVBQUU7QUFDOUM7QUFDQTtBQUNBLHlDQUF5QyxzQkFBc0IsRUFBRSxhQUFhLENBQUM7QUFDL0Usc0RBQXNELGdCQUFnQixFQUFFO0FBQ3hFO0FBQ0E7RUFDRSwwQ0FBMEMsV0FBVyxFQUFFLFNBQVMsRUFBRTtBQUNwRTtBQUNBO0FBQ0EsZ0NBQWdDLGVBQWUsRUFBRSxZQUFZLEVBQUU7O0FBRS9ELGdDQUFnQyxXQUFXLEVBQUUsU0FBUyxFQUFFLGdCQUFnQixFQUFFO0FBQzFFLHlCQUF5QixhQUFhLEVBQUUsOEJBQThCLEVBQUUsa0JBQWtCLEVBQUUsZUFBZSxFQUFFO0FBQzdHLDZDQUE2QyxlQUFlLEVBQUUsZ0JBQWdCLEVBQUU7QUFDaEY7QUFFQTtBQUNBLHNEQUFzRCxlQUFlLEVBQUUsaUJBQWlCLEVBQUU7QUFDMUYsZUFBZSxlQUFlLEVBQUUsaUJBQWlCLEVBQUUsa0JBQWtCLEVBQUU7QUFDdkU7QUFJQSxjQUFjLGFBQWEsQ0FBQztBQUU1QixhQUFhLGFBQWEsRUFBRSxjQUFjLENBQUM7QUFDM0Msb0JBQW9CLGlCQUFpQjtFQUNuQywrREFBK0Q7RUFDL0QseUJBQXlCO0VBQ3pCLDBCQUEwQixFQUFFLGdCQUFnQjtBQUM5QyIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY29tbW9uL2FjY291bnQtc2V0dGluZ3MvYWNjb3VudC1zZXR0aW5ncy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogaGVhZGVyIGNzcyAqL1xuLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5tYXQtdG9vbGJhci1yb3d7IGhlaWdodDogYXV0bzsgfVxuLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5tYXQtdG9vbGJhci1yb3cgLmxvZ29fd3JhcHBlcnsgbWF4LXdpZHRoOiAyMDBweDsgZGlzcGxheTogYmxvY2s7IH1cbi50ZWNoZGFzaGJvYXJkX2hlYWRlciAubWF0LXRvb2xiYXItcm93IC5sb2dvX3dyYXBwZXIgaW1neyBtYXgtd2lkdGg6IDEwMCU7IHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IH1cbi50ZWNoZGFzaGJvYXJkX2hlYWRlciAubWF0LXRvb2xiYXItcm93eyBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47IHBhZGRpbmc6IDAgNDBweDt9XG4udGVjaGRhc2hib2FyZF9oZWFkZXIgLm1hdC10b29sYmFyLXJvdyAucXVvdGF0aW9uIHsgbWFyZ2luLWJvdHRvbTogMHB4O31cbi50ZWNoZGFzaGJvYXJkX2hlYWRlciAubWF0LXRvb2xiYXItcm93IC5xdW90YXRpb24gcHsgZm9udC1mYW1pbHk6IFwiQXZlbmlyTWVkaXVtXCI7IGZvbnQtc2l6ZTogMzBweDsgY29sb3I6ICMwMDIwMzU7IHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IG1hcmdpbjogMDsgfVxuLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5tYXQtdG9vbGJhci1yb3cgLnByb2ZpbGVfc2VjdGlvbiB7IGRpc3BsYXk6IGZsZXg7IGJvcmRlci1sZWZ0OiAxcHggc29saWQgI2UyZGVkZTsgcGFkZGluZy1sZWZ0OiAyMHB4OyB9XG4udGVjaGRhc2hib2FyZF9oZWFkZXIgLm1hdC10b29sYmFyLXJvdyAucHJvZmlsZV9zZWN0aW9uIC51c2VybmFtZXsgcGFkZGluZy1yaWdodDogMjBweDsgZGlzcGxheTogYmxvY2s7IH1cblxuXG4udGVjaGRhc2hib2FyZF9oZWFkZXIgLm1hdC10b29sYmFyLXJvdyAucXVvdGF0aW9uIC5tYXQtbGlzdC1iYXNleyBkaXNwbGF5OiBmbGV4O31cbi50ZWNoZGFzaGJvYXJkX2hlYWRlciAubWF0LXRvb2xiYXItcm93IC5xdW90YXRpb24gLm1hdC1saXN0LWJhc2UgLm1hdC1saXN0LWl0ZW06YWZ0ZXJ7IGNvbnRlbnQ6XCJcIjsgd2lkdGg6MnB4OyBoZWlnaHQ6IDgwcHg7IGJhY2tncm91bmQ6IHJlZDt9XG4uYWN0aXZleyBjb2xvcjogI2MxODUwMCFpbXBvcnRhbnQ7IH1cbi50ZWNoZGFzaGJvYXJkX2hlYWRlciAubWF0LXRvb2xiYXItcm93IC5xdW90YXRpb24gLm1hdC1uYXYtbGlzdCAubWF0LWxpc3QtaXRlbSB7IG1hcmdpbjogMCAxNnB4OyB9XG5cblxuLmFkZF9mb3JteyBtYXJnaW46IDIwcHggYXV0bzsgYmFja2dyb3VuZDogI2YzZjNmMzsgcGFkZGluZzogMTZweCAxMHB4OyBwYWRkaW5nLWJvdHRvbTogNTBweDsgYm9yZGVyOiAxcHggc29saWQgIzkxZTdmZjsgfVxuLmFkZF9mb3JtIC5mb3JtX3dyYXBwZXIgLm1hdC1mb3JtLWZpZWxkeyB3aWR0aDogNDklOyBtYXJnaW46IDAuNSU7IH1cbi5hZGRfZm9ybSAuZm9ybV93cmFwcGVyIHRleHRhcmVheyByZXNpemU6IG5vbmU7fVxuLmFkZF9mb3JtIGgyeyBmb250LWZhbWlseTogXCJBdmVuaXJCbGFja1wiOyB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyBmb250LXNpemU6IDI0cHg7IHBhZGRpbmc6IDAgNnB4OyBjb2xvcjogIzFkYmNlOTsgfVxuLmFkZF9mb3JtIC5zdWJtaXRfZm9ybSB7IGRpc3BsYXk6IGJsb2NrOyB3aWR0aDogMTAwJTsgdGV4dC1hbGlnbjogY2VudGVyOyBtYXJnaW4tdG9wOiAzMHB4OyB9XG4uYWRkX2Zvcm0gLnJldHVybl9idXR0b24geyBiYWNrZ3JvdW5kOiAjMWRiY2U5OyBjb2xvcjogI2ZmZjsgbWFyZ2luLWJvdHRvbTogMTJweDt9XG5cbi5hZGRfZm9ybSAudF9oZWFkeyBmb250LWZhbWlseTogJ0F2ZW5pck1lZGl1bSc7IGZvbnQtc2l6ZTogMThweDsgYmFja2dyb3VuZDogIzRhNGE0YTsgcGFkZGluZzogMTBweDsgY29sb3I6ICNmZmY7IH1cblxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxNDYwcHgpe1xuICAudGVjaGRhc2hib2FyZF9oZWFkZXIgLm1hdC10b29sYmFyLXJvdyAucXVvdGF0aW9uIHAgeyBmb250LXNpemU6IDI0cHg7IGxpbmUtaGVpZ2h0OiAyNnB4O31cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAwMHB4KXtcbiAgLmFkZF9mb3JtIC5zdWJtaXRfZm9ybSBidXR0b24geyB3aWR0aDogNDglOyB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5OTFweCl7XG4udGVjaGRhc2hib2FyZF9oZWFkZXIgLm1hdC10b29sYmFyLXJvdyB7IGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IHBhZGRpbmc6IDIwcHg7fVxuLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5tYXQtdG9vbGJhci1yb3cgLnF1b3RhdGlvbiBwIHsgbWFyZ2luLXRvcDogMTZweDsgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpe1xuICAuYWRkX2Zvcm0gLmZvcm1fd3JhcHBlciAubWF0LWZvcm0tZmllbGQgeyB3aWR0aDogMTAwJTsgbWFyZ2luOiAwOyB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NzZweCl7XG4uYWRkX2Zvcm0gLnN1Ym1pdF9mb3JtIGJ1dHRvbiB7IGZvbnQtc2l6ZTogMjJweDsgcGFkZGluZzogMnB4OyB9XG5cbi5hZGRfZm9ybSAuc3VibWl0X2Zvcm0gYnV0dG9uIHsgd2lkdGg6IDEwMCU7IG1hcmdpbjogMDsgbWFyZ2luLXRvcDogMjBweDsgfVxuLmFkZF9mb3JtIC5zdWJtaXRfZm9ybSB7IGRpc3BsYXk6IGZsZXg7IGZsZXgtZGlyZWN0aW9uOiBjb2x1bW4tcmV2ZXJzZTsgdGV4dC1hbGlnbjogY2VudGVyOyBtYXJnaW4tdG9wOiAwcHg7IH1cbi5hZGRfZm9ybSAuc3VibWl0X2Zvcm0gYnV0dG9uOm50aC1jaGlsZCgxKSB7IG1hcmdpbi1yaWdodDogMDsgbWFyZ2luLXRvcDogMjBweDsgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAzNjBweCl7XG4udGVjaGRhc2hib2FyZF9oZWFkZXIgLm1hdC10b29sYmFyLXJvdyAucXVvdGF0aW9uIHAgeyBmb250LXNpemU6IDE2cHg7IGxpbmUtaGVpZ2h0OiAyMnB4OyB9XG4uYWRkX2Zvcm0gaDIgeyBmb250LXNpemU6IDIycHg7IGxpbmUtaGVpZ2h0OiAyNHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbn1cblxuXG5cbiNtZW51X2J1dHRvbnsgZGlzcGxheTogbm9uZTt9XG5cbi5hZGRfaGVhZGVyeyBkaXNwbGF5OiBmbGV4OyBtYXJnaW46IDAgMTZweDt9XG4uYWRkX2hlYWRlciBidXR0b257IG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTgwZGVnLCAjZmFjODU1LCAjZTQ3ZTJhKSFpbXBvcnRhbnQ7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGZvbnQtZmFtaWx5OiBcIkF2ZW5pckJsYWNrXCI7IHBhZGRpbmctdG9wOiA0cHg7XG59XG4iXX0= */";
    /***/
  },

  /***/
  "./src/app/components/common/account-settings/account-settings.component.ts":
  /*!**********************************************************************************!*\
    !*** ./src/app/components/common/account-settings/account-settings.component.ts ***!
    \**********************************************************************************/

  /*! exports provided: AccountSettingsComponent */

  /***/
  function srcAppComponentsCommonAccountSettingsAccountSettingsComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AccountSettingsComponent", function () {
      return AccountSettingsComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var _class_common_common_function__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../../../class/common/common-function */
    "./src/app/class/common/common-function.ts");

    var AccountSettingsComponent = /*#__PURE__*/function () {
      function AccountSettingsComponent(fb, datePipe, httpService, cookie, router, snackBar, activeRoute, commonFunction) {
        _classCallCheck(this, AccountSettingsComponent);

        this.fb = fb;
        this.datePipe = datePipe;
        this.httpService = httpService;
        this.cookie = cookie;
        this.router = router;
        this.snackBar = snackBar;
        this.activeRoute = activeRoute;
        this.commonFunction = commonFunction;
        this.date = new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"](new Date());
        this.serializedDate = new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"](new Date().toISOString());
        this.message = "Updated Successfully";
        this.loader = false;
        this.headerFlag = null;
        /* Set header */

        this.headerFlag = this.activeRoute.snapshot.url[0].path;
        this.user_token = cookie.get('jwtToken');
        var allcookies;
        allcookies = cookie.getAll();
        this.cookiesData = JSON.parse(allcookies.user_details);
        this.cookies_id = this.cookiesData._id;
        /* Set Meta Data */

        this.commonFunction.setTitleMetaTags();
        this.allStateCityData();
        this.datePipe.transform(this.date.value, 'MM-dd-yyyy');
        var dateformat = this.datePipe.transform(new Date(), "MM-dd-yyyy");
        this.AccountSettingsForm = fb.group({
          firstname: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
          lastname: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
          phoneno: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
          address: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
          zip: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
          city: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
          state: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]
        });
      }

      _createClass(AccountSettingsComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          this.SetValueForm();
        }
        /**for validation purpose**/

      }, {
        key: "inputUntouch",
        value: function inputUntouch(form, val) {
          form.controls[val].markAsUntouched();
        }
        /**for validation purpose**/

      }, {
        key: "SetValueForm",
        value: function SetValueForm() {
          var _this144 = this;

          setTimeout(function () {
            _this144.getCityByName(_this144.cookiesData.state);
          }, 400);
          this.AccountSettingsForm.controls['firstname'].patchValue(this.cookiesData.firstname);
          this.AccountSettingsForm.controls['lastname'].patchValue(this.cookiesData.lastname);
          this.AccountSettingsForm.controls['phoneno'].patchValue(this.cookiesData.phone);
          this.AccountSettingsForm.controls['zip'].patchValue(this.cookiesData.zip);
          this.AccountSettingsForm.controls['address'].patchValue(this.cookiesData.address);
          this.AccountSettingsForm.controls['state'].patchValue(this.cookiesData.state);
          this.AccountSettingsForm.controls['city'].patchValue(this.cookiesData.city);
        }
        /**for getting all states & cities function start here**/

      }, {
        key: "allStateCityData",
        value: function allStateCityData() {
          var _this145 = this;

          this.httpService.getSiteSettingData("./assets/data-set/state.json").subscribe(function (response) {
            _this145.states = response;

            _this145.SetValueForm();
          });
          this.httpService.getSiteSettingData("./assets/data-set/city.json").subscribe(function (response) {
            _this145.allCities = response;

            _this145.SetValueForm();
          });
        }
        /**for getting all states & cities  function end here**/

      }, {
        key: "getCity",
        value: function getCity(event) {
          var val = event;
          this.cities = this.allCities[val];
        }
      }, {
        key: "getCityByName",
        value: function getCityByName(stateName) {
          this.cities = this.allCities[stateName];
        }
      }, {
        key: "CancelRedirectToDashboard",
        value: function CancelRedirectToDashboard() {
          this.router.navigateByUrl('/admin/dashboard');
        }
      }, {
        key: "AccountSettingsFormSubmit",
        value: function AccountSettingsFormSubmit() {
          var _this146 = this;

          this.loader = true;
          var x;

          for (x in this.AccountSettingsForm.controls) {
            this.AccountSettingsForm.controls[x].markAsTouched();
          }

          if (this.AccountSettingsForm.valid) {
            var data;
            data = {
              "source": "data_pece",
              "data": {
                id: this.cookies_id,
                firstname: this.AccountSettingsForm.value.firstname,
                lastname: this.AccountSettingsForm.value.lastname,
                phoneno: this.AccountSettingsForm.value.phoneno,
                date: this.AccountSettingsForm.value.data,
                zip: this.AccountSettingsForm.value.zip,
                address: this.AccountSettingsForm.value.address,
                city: this.AccountSettingsForm.value.city,
                state: this.AccountSettingsForm.value.state
              },
              "token": this.user_token
            };
            this.httpService.httpViaPost('addorupdatedata', data).subscribe(function (response) {
              var userDetailsCookie = JSON.parse(_this146.cookie.get('user_details'));
              var type = userDetailsCookie.type;

              _this146.cookie["delete"]('user_details');

              userDetailsCookie.firstname = _this146.AccountSettingsForm.value.firstname;
              userDetailsCookie.lastname = _this146.AccountSettingsForm.value.lastname;
              userDetailsCookie = JSON.stringify(userDetailsCookie);
              _this146.loader = false;
              var action = "Ok";

              _this146.snackBar.open(_this146.message, action, {
                duration: 1000
              });

              setTimeout(function () {
                _this146.cookie.set('user_details', userDetailsCookie);
              }, 1000);
              setTimeout(function () {
                _this146.router.navigateByUrl(type + '/dashboard');
              }, 3000);
            });
          }
        }
      }]);

      return AccountSettingsComponent;
    }();

    AccountSettingsComponent.ctorParameters = function () {
      return [{
        type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]
      }, {
        type: _angular_common__WEBPACK_IMPORTED_MODULE_3__["DatePipe"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__["HttpServiceService"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_5__["CookieService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_6__["Router"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatSnackBar"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_6__["ActivatedRoute"]
      }, {
        type: _class_common_common_function__WEBPACK_IMPORTED_MODULE_8__["CommonFunction"]
      }];
    };

    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroupDirective"], {
      "static": false
    })], AccountSettingsComponent.prototype, "formDirective", void 0);
    AccountSettingsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-account-settings',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./account-settings.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/common/account-settings/account-settings.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./account-settings.component.css */
      "./src/app/components/common/account-settings/account-settings.component.css"))["default"]]
    })], AccountSettingsComponent);
    /***/
  },

  /***/
  "./src/app/components/common/account-settings/change-password/change-password.component.css":
  /*!**************************************************************************************************!*\
    !*** ./src/app/components/common/account-settings/change-password/change-password.component.css ***!
    \**************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsCommonAccountSettingsChangePasswordChangePasswordComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = ".add_form{ width: 70%; margin: 20px auto; background: #fdfdfd; padding: 16px 10px; padding-bottom: 30px; border: 1px solid #91e7ff; }\n.add_form .form_wrapper .mat-form-field{ width: 100%;  }\n.add_form .form_wrapper textarea{ resize: none;}\n.add_form h2{ font-family: \"AvenirBlack\"; text-transform: uppercase; font-size: 24px; padding: 0 6px; color: #1dbce9; }\n.add_form .submit_form { display: block; width: 100%; text-align: center; margin-top: 30px; }\n.add_form .return_button { background: #1dbce9; color: #fff; margin-bottom: 12px;}\n.add_header{ display: flex; margin: 016px;}\n.add_header button{ margin-left: auto;\n  background: linear-gradient(180deg, #fac855, #e47e2a)!important;\n  text-transform: uppercase;\n  font-family: \"AvenirBlack\"; padding-top: 4px;\n}\n@media screen and (max-width: 840px){\n  .add_form { width: 80%; }\n}\n@media screen and (max-width: 560px){\n.add_form .submit_form button:nth-child(1) { margin-right: 0px; margin-bottom: 16px; }\n.add_form .submit_form button { width: 100%; }\n}\n@media screen and (max-width: 480px){\n.add_form  { width: 100%; }\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jb21tb24vYWNjb3VudC1zZXR0aW5ncy9jaGFuZ2UtcGFzc3dvcmQvY2hhbmdlLXBhc3N3b3JkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsV0FBVyxVQUFVLEVBQUUsaUJBQWlCLEVBQUUsbUJBQW1CLEVBQUUsa0JBQWtCLEVBQUUsb0JBQW9CLEVBQUUseUJBQXlCLEVBQUU7QUFDcEkseUNBQXlDLFdBQVcsR0FBRztBQUN2RCxrQ0FBa0MsWUFBWSxDQUFDO0FBQy9DLGNBQWMsMEJBQTBCLEVBQUUseUJBQXlCLEVBQUUsZUFBZSxFQUFFLGNBQWMsRUFBRSxjQUFjLEVBQUU7QUFDdEgseUJBQXlCLGNBQWMsRUFBRSxXQUFXLEVBQUUsa0JBQWtCLEVBQUUsZ0JBQWdCLEVBQUU7QUFFNUYsMkJBQTJCLG1CQUFtQixFQUFFLFdBQVcsRUFBRSxtQkFBbUIsQ0FBQztBQUNqRixhQUFhLGFBQWEsRUFBRSxhQUFhLENBQUM7QUFDMUMsb0JBQW9CLGlCQUFpQjtFQUNuQywrREFBK0Q7RUFDL0QseUJBQXlCO0VBQ3pCLDBCQUEwQixFQUFFLGdCQUFnQjtBQUM5QztBQUVBO0VBQ0UsWUFBWSxVQUFVLEVBQUU7QUFDMUI7QUFDQTtBQUNBLDZDQUE2QyxpQkFBaUIsRUFBRSxtQkFBbUIsRUFBRTtBQUNyRixnQ0FBZ0MsV0FBVyxFQUFFO0FBQzdDO0FBRUE7QUFDQSxhQUFhLFdBQVcsRUFBRTtBQUMxQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY29tbW9uL2FjY291bnQtc2V0dGluZ3MvY2hhbmdlLXBhc3N3b3JkL2NoYW5nZS1wYXNzd29yZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmFkZF9mb3JteyB3aWR0aDogNzAlOyBtYXJnaW46IDIwcHggYXV0bzsgYmFja2dyb3VuZDogI2ZkZmRmZDsgcGFkZGluZzogMTZweCAxMHB4OyBwYWRkaW5nLWJvdHRvbTogMzBweDsgYm9yZGVyOiAxcHggc29saWQgIzkxZTdmZjsgfVxuLmFkZF9mb3JtIC5mb3JtX3dyYXBwZXIgLm1hdC1mb3JtLWZpZWxkeyB3aWR0aDogMTAwJTsgIH1cbi5hZGRfZm9ybSAuZm9ybV93cmFwcGVyIHRleHRhcmVheyByZXNpemU6IG5vbmU7fVxuLmFkZF9mb3JtIGgyeyBmb250LWZhbWlseTogXCJBdmVuaXJCbGFja1wiOyB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyBmb250LXNpemU6IDI0cHg7IHBhZGRpbmc6IDAgNnB4OyBjb2xvcjogIzFkYmNlOTsgfVxuLmFkZF9mb3JtIC5zdWJtaXRfZm9ybSB7IGRpc3BsYXk6IGJsb2NrOyB3aWR0aDogMTAwJTsgdGV4dC1hbGlnbjogY2VudGVyOyBtYXJnaW4tdG9wOiAzMHB4OyB9XG5cbi5hZGRfZm9ybSAucmV0dXJuX2J1dHRvbiB7IGJhY2tncm91bmQ6ICMxZGJjZTk7IGNvbG9yOiAjZmZmOyBtYXJnaW4tYm90dG9tOiAxMnB4O31cbi5hZGRfaGVhZGVyeyBkaXNwbGF5OiBmbGV4OyBtYXJnaW46IDAxNnB4O31cbi5hZGRfaGVhZGVyIGJ1dHRvbnsgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxODBkZWcsICNmYWM4NTUsICNlNDdlMmEpIWltcG9ydGFudDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC1mYW1pbHk6IFwiQXZlbmlyQmxhY2tcIjsgcGFkZGluZy10b3A6IDRweDtcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogODQwcHgpe1xuICAuYWRkX2Zvcm0geyB3aWR0aDogODAlOyB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NjBweCl7XG4uYWRkX2Zvcm0gLnN1Ym1pdF9mb3JtIGJ1dHRvbjpudGgtY2hpbGQoMSkgeyBtYXJnaW4tcmlnaHQ6IDBweDsgbWFyZ2luLWJvdHRvbTogMTZweDsgfVxuLmFkZF9mb3JtIC5zdWJtaXRfZm9ybSBidXR0b24geyB3aWR0aDogMTAwJTsgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCl7XG4uYWRkX2Zvcm0gIHsgd2lkdGg6IDEwMCU7IH1cbn0iXX0= */";
    /***/
  },

  /***/
  "./src/app/components/common/account-settings/change-password/change-password.component.ts":
  /*!*************************************************************************************************!*\
    !*** ./src/app/components/common/account-settings/change-password/change-password.component.ts ***!
    \*************************************************************************************************/

  /*! exports provided: ChangePasswordComponent */

  /***/
  function srcAppComponentsCommonAccountSettingsChangePasswordChangePasswordComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ChangePasswordComponent", function () {
      return ChangePasswordComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var _class_common_common_function__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../../../../class/common/common-function */
    "./src/app/class/common/common-function.ts");

    var ChangePasswordComponent = /*#__PURE__*/function () {
      function ChangePasswordComponent(fb, cookie, router, snackBar, activeRoute, httpService, commonFunction) {
        _classCallCheck(this, ChangePasswordComponent);

        this.fb = fb;
        this.cookie = cookie;
        this.router = router;
        this.snackBar = snackBar;
        this.activeRoute = activeRoute;
        this.httpService = httpService;
        this.commonFunction = commonFunction;
        this.loader = false;
        this.headerFlag = null;
        /* Set Meta Data */

        this.commonFunction.setTitleMetaTags();
        this.headerFlag = this.activeRoute.snapshot.url[0].path;
        this.user_token = cookie.get('jwtToken');
        var allcookies;
        allcookies = cookie.getAll();
        this.cookiesData = JSON.parse(allcookies.user_details);
        this.cookies_id = this.cookiesData._id;
        this.ChangePasswordForm = fb.group({
          oldPassword: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(16), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(6)]],
          newPassword: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(16), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(6)]],
          confirmPassword: []
        }, {
          validator: this.machpassword('newPassword', 'confirmPassword')
        });
      }

      _createClass(ChangePasswordComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
        /**for validation purpose**/

      }, {
        key: "inputUntouch",
        value: function inputUntouch(form, val) {
          form.controls[val].markAsUntouched();
        }
        /**for validation purpose**/

      }, {
        key: "machpassword",
        value: function machpassword(newPasswordkye, confirmPasswordkye) {
          return function (group) {
            var passwordInput = group.controls[newPasswordkye],
                confirmpasswordInput = group.controls[confirmPasswordkye];

            if (passwordInput.value !== confirmpasswordInput.value) {
              return confirmpasswordInput.setErrors({
                notEquivalent: true
              });
            } else {
              return confirmpasswordInput.setErrors(null);
            }
          };
        }
      }, {
        key: "CancelRedirectToDashboard",
        value: function CancelRedirectToDashboard() {
          this.router.navigateByUrl('/admin/dashboard');
        }
      }, {
        key: "ChangePasswordFormSubmit",
        value: function ChangePasswordFormSubmit() {
          var _this147 = this;

          this.loader = true;
          var x;

          for (x in this.ChangePasswordForm.controls) {
            this.ChangePasswordForm.controls[x].markAsTouched();
          }

          if (this.ChangePasswordForm.valid) {
            delete this.ChangePasswordForm.value.confirmPassword;
            var data = {
              _id: this.cookies_id,
              adminflag: 0,
              oldPassword: this.ChangePasswordForm.value.oldPassword,
              newPassword: this.ChangePasswordForm.value.newPassword
            };
            this.httpService.httpViaPost('changepassword', data).subscribe(function (response) {
              _this147.formDirective.resetForm();

              _this147.loader = false;

              if (response.status == true) {
                _this147.snackBar.open(response.message, "OK", {
                  duration: 1500
                });

                setTimeout(function () {
                  _this147.router.navigateByUrl('/admin/dashboard');
                }, 1550);
              } else {
                _this147.snackBar.open(response.message, "OK", {
                  duration: 1500
                });
              }
            }, function (error) {
              _this147.loader = false;
              alert("Some error occord. Please try later.");
            });
          }
        }
      }]);

      return ChangePasswordComponent;
    }();

    ChangePasswordComponent.ctorParameters = function () {
      return [{
        type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_4__["CookieService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_6__["MatSnackBar"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__["HttpServiceService"]
      }, {
        type: _class_common_common_function__WEBPACK_IMPORTED_MODULE_7__["CommonFunction"]
      }];
    };

    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroupDirective"], {
      "static": false
    })], ChangePasswordComponent.prototype, "formDirective", void 0);
    ChangePasswordComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-change-password',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./change-password.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/common/account-settings/change-password/change-password.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./change-password.component.css */
      "./src/app/components/common/account-settings/change-password/change-password.component.css"))["default"]]
    })], ChangePasswordComponent);
    /***/
  },

  /***/
  "./src/app/components/common/approval-settings-update/approval-settings-update.component.css":
  /*!***************************************************************************************************!*\
    !*** ./src/app/components/common/approval-settings-update/approval-settings-update.component.css ***!
    \***************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsCommonApprovalSettingsUpdateApprovalSettingsUpdateComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY29tbW9uL2FwcHJvdmFsLXNldHRpbmdzLXVwZGF0ZS9hcHByb3ZhbC1zZXR0aW5ncy11cGRhdGUuY29tcG9uZW50LmNzcyJ9 */";
    /***/
  },

  /***/
  "./src/app/components/common/approval-settings-update/approval-settings-update.component.ts":
  /*!**************************************************************************************************!*\
    !*** ./src/app/components/common/approval-settings-update/approval-settings-update.component.ts ***!
    \**************************************************************************************************/

  /*! exports provided: ApprovalSettingsUpdateComponent */

  /***/
  function srcAppComponentsCommonApprovalSettingsUpdateApprovalSettingsUpdateComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ApprovalSettingsUpdateComponent", function () {
      return ApprovalSettingsUpdateComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");

    var ApprovalSettingsUpdateComponent = /*#__PURE__*/function () {
      function ApprovalSettingsUpdateComponent(httpService, cookie, formBuilder, dialogRef, dialogData, router) {
        _classCallCheck(this, ApprovalSettingsUpdateComponent);

        this.httpService = httpService;
        this.cookie = cookie;
        this.formBuilder = formBuilder;
        this.dialogRef = dialogRef;
        this.dialogData = dialogData;
        this.router = router;
        this.htmlText = {
          userData: "",
          message: "Submitted Successfully",
          defaultButtonText: "Change to Default"
        };
        this.allReceivedData = dialogData;
        this.htmlText.userData = cookie.getAll();
        this.htmlText.userData.user_details = JSON.parse(this.htmlText.userData.user_details);
      }

      _createClass(ApprovalSettingsUpdateComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          this.generateAddEditForm();
        }
      }, {
        key: "generateAddEditForm",
        value: function generateAddEditForm() {
          var flag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
          var validateRule = {
            id: [this.allReceivedData.doctorData._id, []],
            default_value: [0, []],
            default_value_percentage: [this.allReceivedData.doctorData.default_value_percentage, [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].min(0), _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].max(100)]]
          };
          this.ApprovalSettingsUpdateForm = this.formBuilder.group(validateRule);
        }
        /**for validation purpose**/

      }, {
        key: "inputUntouch",
        value: function inputUntouch(form, val) {
          form.controls[val].markAsUntouched();
        }
        /**for validation purpose**/

      }, {
        key: "TechManagementAddFormFormSubmit",
        value: function TechManagementAddFormFormSubmit() {
          var _this148 = this;

          for (var x in this.ApprovalSettingsUpdateForm.controls) {
            this.ApprovalSettingsUpdateForm.controls[x].markAsTouched();
          }

          if (this.ApprovalSettingsUpdateForm.valid) {
            var data = {
              "source": "data_pece",
              "data": this.ApprovalSettingsUpdateForm.value,
              "token": this.htmlText.userData.jwtToken
            };
            data.data.default_value_percentage = parseInt(data.data.default_value_percentage);
            this.httpService.httpViaPost("addorupdatedata", data).subscribe(function (response) {
              if (response.status == "success") {
                _this148.dialogRef.close(response);
              }
            });
          }
        }
      }, {
        key: "chnageToDefault",
        value: function chnageToDefault() {
          var _this149 = this;

          this.htmlText.defaultButtonText = "Please Wait";
          var intervalId = setInterval(function () {
            _this149.htmlText.defaultButtonText += '.';
          }, 400);
          this.httpService.httpViaPost("get-default-approval-settings", {}).subscribe(function (response) {
            if (response.status == "success") {
              _this149.ApprovalSettingsUpdateForm.patchValue({
                default_value_percentage: response.data[0].default_value_percentage
              });

              _this149.ApprovalSettingsUpdateForm.patchValue({
                default_value: 1
              });

              clearInterval(intervalId);
              _this149.htmlText.defaultButtonText = "Change to Default";
            }
          });
        }
      }, {
        key: "changeDefaultValuePercentage",
        value: function changeDefaultValuePercentage() {
          this.ApprovalSettingsUpdateForm.patchValue({
            default_value: 0
          });
        }
      }, {
        key: "closeModal",
        value: function closeModal() {
          this.dialogRef.close({
            status: "close"
          });
        }
      }]);

      return ApprovalSettingsUpdateComponent;
    }();

    ApprovalSettingsUpdateComponent.ctorParameters = function () {
      return [{
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_6__["HttpServiceService"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_5__["CookieService"]
      }, {
        type: _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"]
      }, {
        type: undefined,
        decorators: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
          args: [_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"]]
        }]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"]
      }];
    };

    ApprovalSettingsUpdateComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-approval-settings-update',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./approval-settings-update.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/common/approval-settings-update/approval-settings-update.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./approval-settings-update.component.css */
      "./src/app/components/common/approval-settings-update/approval-settings-update.component.css"))["default"]]
    }), tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](4, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"]))], ApprovalSettingsUpdateComponent);
    /***/
  },

  /***/
  "./src/app/components/common/dialog-box/dialog-box.component.css":
  /*!***********************************************************************!*\
    !*** ./src/app/components/common/dialog-box/dialog-box.component.css ***!
    \***********************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsCommonDialogBoxDialogBoxComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY29tbW9uL2RpYWxvZy1ib3gvZGlhbG9nLWJveC5jb21wb25lbnQuY3NzIn0= */";
    /***/
  },

  /***/
  "./src/app/components/common/dialog-box/dialog-box.component.ts":
  /*!**********************************************************************!*\
    !*** ./src/app/components/common/dialog-box/dialog-box.component.ts ***!
    \**********************************************************************/

  /*! exports provided: DialogBoxComponent */

  /***/
  function srcAppComponentsCommonDialogBoxDialogBoxComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DialogBoxComponent", function () {
      return DialogBoxComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");

    var DialogBoxComponent = /*#__PURE__*/function () {
      function DialogBoxComponent(dialogRef, dialogData, router) {
        _classCallCheck(this, DialogBoxComponent);

        this.dialogRef = dialogRef;
        this.dialogData = dialogData;
        this.router = router;
        this.data = dialogData;
      }

      _createClass(DialogBoxComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }, {
        key: "button1",
        value: function button1() {
          this.dialogRef.close(this.data.button1.text);
        }
      }, {
        key: "button2",
        value: function button2() {
          this.dialogRef.close(this.data.button2.text);
        }
      }]);

      return DialogBoxComponent;
    }();

    DialogBoxComponent.ctorParameters = function () {
      return [{
        type: _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"]
      }, {
        type: undefined,
        decorators: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
          args: [_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"]]
        }]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"]
      }];
    };

    DialogBoxComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-dialog-box',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./dialog-box.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/common/dialog-box/dialog-box.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./dialog-box.component.css */
      "./src/app/components/common/dialog-box/dialog-box.component.css"))["default"]]
    }), tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"]))], DialogBoxComponent);
    /***/
  },

  /***/
  "./src/app/components/common/doctor-signup-share/doctor-signup-share.component.css":
  /*!*****************************************************************************************!*\
    !*** ./src/app/components/common/doctor-signup-share/doctor-signup-share.component.css ***!
    \*****************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsCommonDoctorSignupShareDoctorSignupShareComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY29tbW9uL2RvY3Rvci1zaWdudXAtc2hhcmUvZG9jdG9yLXNpZ251cC1zaGFyZS5jb21wb25lbnQuY3NzIn0= */";
    /***/
  },

  /***/
  "./src/app/components/common/doctor-signup-share/doctor-signup-share.component.ts":
  /*!****************************************************************************************!*\
    !*** ./src/app/components/common/doctor-signup-share/doctor-signup-share.component.ts ***!
    \****************************************************************************************/

  /*! exports provided: DoctorSignupShareComponent */

  /***/
  function srcAppComponentsCommonDoctorSignupShareDoctorSignupShareComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DoctorSignupShareComponent", function () {
      return DoctorSignupShareComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");

    var DoctorSignupShareComponent = /*#__PURE__*/function () {
      function DoctorSignupShareComponent(matSnackBar) {
        _classCallCheck(this, DoctorSignupShareComponent);

        this.matSnackBar = matSnackBar;
      }

      _createClass(DoctorSignupShareComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          if (this.shareDetailsData.user_type == 'admin') {
            this.shareDetailsData.link = this.shareDetailsData.baseUrl + '/home';
          } else {
            this.shareDetailsData.link = this.shareDetailsData.baseUrl + '/home/' + this.shareDetailsData.userId;
          } //share link


          var url = "http://www.tumblr.com/share?v=3&u=https%3A%2F%2Fpece-doctor-signup.influxiq.com%2Fhome&t=AWS";
          this.shareDetailsData.facebookShareLink = "https://www.facebook.com/sharer/sharer.php?u=" + encodeURIComponent(this.shareDetailsData.link);
          this.shareDetailsData.twitterShareLink = "https://twitter.com/intent/tweet?url=" + encodeURIComponent(this.shareDetailsData.link) + "&text=AWS";
          this.shareDetailsData.linkedinShareLink = "https://www.linkedin.com/shareArticle?mini=true&url=" + encodeURIComponent(this.shareDetailsData.link) + "&title=&summary=&source=";
          this.shareDetailsData.tumblrShareLink = "http://www.tumblr.com/share?v=3&u=" + encodeURIComponent(this.shareDetailsData.link) + "&t=AWS";
        }
      }, {
        key: "copyShareLink",
        value: function copyShareLink(inputElement) {
          inputElement.select();
          document.execCommand('copy');
          inputElement.setSelectionRange(0, 0);
          this.matSnackBar.open("Link copied.", "X", {
            duration: 3000,
            verticalPosition: 'top',
            horizontalPosition: 'end',
            panelClass: ['success-snackbar']
          });
        }
      }, {
        key: "shareDetails",
        set: function set(shareDetailsData) {
          this.shareDetailsData = shareDetailsData;
        }
      }]);

      return DoctorSignupShareComponent;
    }();

    DoctorSignupShareComponent.ctorParameters = function () {
      return [{
        type: _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatSnackBar"]
      }];
    };

    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], DoctorSignupShareComponent.prototype, "shareDetails", null);
    DoctorSignupShareComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-doctor-signup-share',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./doctor-signup-share.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/common/doctor-signup-share/doctor-signup-share.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./doctor-signup-share.component.css */
      "./src/app/components/common/doctor-signup-share/doctor-signup-share.component.css"))["default"]]
    })], DoctorSignupShareComponent);
    /***/
  },

  /***/
  "./src/app/components/common/encounter-form-rules/encounter-form-rules.component.css":
  /*!*******************************************************************************************!*\
    !*** ./src/app/components/common/encounter-form-rules/encounter-form-rules.component.css ***!
    \*******************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsCommonEncounterFormRulesEncounterFormRulesComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY29tbW9uL2VuY291bnRlci1mb3JtLXJ1bGVzL2VuY291bnRlci1mb3JtLXJ1bGVzLmNvbXBvbmVudC5jc3MifQ== */";
    /***/
  },

  /***/
  "./src/app/components/common/encounter-form-rules/encounter-form-rules.component.ts":
  /*!******************************************************************************************!*\
    !*** ./src/app/components/common/encounter-form-rules/encounter-form-rules.component.ts ***!
    \******************************************************************************************/

  /*! exports provided: EncounterFormRulesComponent */

  /***/
  function srcAppComponentsCommonEncounterFormRulesEncounterFormRulesComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "EncounterFormRulesComponent", function () {
      return EncounterFormRulesComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");

    var ICD10 = [{
      SL: 1,
      Rules: 'PTG Type is 3 or above and Patient insurance is non Medicare',
      Remarks: 'Check I73.9'
    }, {
      SL: 2,
      Rules: 'PTG Type is 3 or above and Patient insurance is Medicare',
      Remarks: 'Check I73.89'
    }, {
      SL: 3,
      Rules: 'RI is (A) or above and Patient insurance is non Medicare',
      Remarks: 'Check I70.209'
    }, {
      SL: 4,
      Rules: 'Prediabetes Patients with non Medicare',
      Remarks: 'Uncheck R73.03'
    }];
    var CPTCode = [{
      SL: 1,
      Rules: 'PVD is non Medicare',
      Remarks: 'Uncheck 93923'
    }, {
      SL: 2,
      Rules: 'Pre-Diabetes in Non Medicare',
      Remarks: 'Uncheck 95923, 95921'
    }, {
      SL: 3,
      Rules: 'PVD and State is Texas',
      Remarks: 'Check 93923'
    }, {
      SL: 4,
      Rules: 'Pre-Diabetes and State is Arizona',
      Remarks: 'Uncheck 95923, 95921'
    }];

    var EncounterFormRulesComponent = /*#__PURE__*/function () {
      function EncounterFormRulesComponent() {
        _classCallCheck(this, EncounterFormRulesComponent);

        this.icdColumns = ['SL', 'Rules', 'Remarks'];
        this.dataSource = ICD10;
        this.dataSourceCPT = CPTCode;
      }

      _createClass(EncounterFormRulesComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }]);

      return EncounterFormRulesComponent;
    }();

    EncounterFormRulesComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-encounter-form-rules',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./encounter-form-rules.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/common/encounter-form-rules/encounter-form-rules.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./encounter-form-rules.component.css */
      "./src/app/components/common/encounter-form-rules/encounter-form-rules.component.css"))["default"]]
    })], EncounterFormRulesComponent);
    /***/
  },

  /***/
  "./src/app/components/common/faq-view/faq-view.component.css":
  /*!*******************************************************************!*\
    !*** ./src/app/components/common/faq-view/faq-view.component.css ***!
    \*******************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsCommonFaqViewFaqViewComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = ".faq_wrapper{ width: 1440px; margin: 50px auto;}\n\n.faq_wrapper .header{ font-size: 24px; font-family: 'AvenirMedium'; color: #767676; background: #f2f4f5; padding: 8px;}\n\n.faq_wrapper .mat-expansion-panel-header.mat-expanded:focus{ background: #00baff;}\n\n/* .mat-expansion-panel-header-title{color: #f2f4f5;} */\n\n.faq_wrapper .mat-expansion-panel-header.mat-expanded:focus .mat-expansion-panel-header-title {\n    color: rgba(255, 255, 255, 0.87);\n}\n\n.active{ background: #00baff!important; }\n\n.active .mat-expansion-panel-header-title { color: rgba(255, 255, 255, 0.87); }\n\n.body_wrapper{ background:#f2f4f5 ; display: flex; justify-content: space-between; padding: 10px 20px;}\n\n.body_wrapper .content_wr p,\n.body_wrapper .content_wr p ol li{ color: #000; font-size: 16px; font-family: 'AvenirRoman'; margin: 6px 0; line-height: 24px;}\n\n.body_wrapper .content_wr p strong{ font-size: 16px; font-family: 'AvenirBlack'; }\n\n.body_wrapper .content_wr{ width: 100%;}\n\n.body_wrapper .video_wr{ width: 36%; margin-left: 14px; }\n\n.body_wrapper .video_wr .video-wrapper {\n    position: relative;\n    padding-bottom: 56.25%; /* 16:9 */\n    padding-top: 25px;\n    height: 0;\n  }\n\n.body_wrapper .video_wr .video-wrapper iframe{\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n  }\n\n.faq_wrapper .mat-expansion-panel:not(.mat-expansion-panel-spacing) { margin-bottom: 10px;}\n\n@media screen and (max-width: 1560px){\n    .faq_wrapper{ width: 90%;}\n  }\n\n/* hello youtube today i will disscuss about the of a popular javascript framework. it is angular. angular is javascript famewok\ncrete and matained by google the tech giant. It's uses typescript language.   */\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jb21tb24vZmFxLXZpZXcvZmFxLXZpZXcuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxjQUFjLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQzs7QUFFL0Msc0JBQXNCLGVBQWUsRUFBRSwyQkFBMkIsRUFBRSxjQUFjLEVBQUUsbUJBQW1CLEVBQUUsWUFBWSxDQUFDOztBQUd0SCw2REFBNkQsbUJBQW1CLENBQUM7O0FBQ2hGLHVEQUF1RDs7QUFDeEQ7SUFDSSxnQ0FBZ0M7QUFDcEM7O0FBQ0EsU0FBUyw2QkFBNkIsRUFBRTs7QUFDeEMsNENBQTRDLGdDQUFnQyxFQUFFOztBQUM5RSxlQUFlLG1CQUFtQixFQUFFLGFBQWEsRUFBRSw4QkFBOEIsRUFBRSxrQkFBa0IsQ0FBQzs7QUFDdEc7bUNBQ21DLFdBQVcsRUFBRSxlQUFlLEVBQUUsMEJBQTBCLEVBQUUsYUFBYSxFQUFFLGlCQUFpQixDQUFDOztBQUM5SCxvQ0FBb0MsZUFBZSxFQUFFLDBCQUEwQixFQUFFOztBQUNqRiwyQkFBMkIsV0FBVyxDQUFDOztBQUN2Qyx5QkFBeUIsVUFBVSxFQUFFLGlCQUFpQixFQUFFOztBQUV4RDtJQUNJLGtCQUFrQjtJQUNsQixzQkFBc0IsRUFBRSxTQUFTO0lBQ2pDLGlCQUFpQjtJQUNqQixTQUFTO0VBQ1g7O0FBQ0E7SUFDRSxrQkFBa0I7SUFDbEIsTUFBTTtJQUNOLE9BQU87SUFDUCxXQUFXO0lBQ1gsWUFBWTtFQUNkOztBQUNBLHNFQUFzRSxtQkFBbUIsQ0FBQzs7QUFFMUY7SUFDRSxjQUFjLFVBQVUsQ0FBQztFQUMzQjs7QUFDRjsrRUFDK0UiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2NvbW1vbi9mYXEtdmlldy9mYXEtdmlldy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZhcV93cmFwcGVyeyB3aWR0aDogMTQ0MHB4OyBtYXJnaW46IDUwcHggYXV0bzt9XG5cbi5mYXFfd3JhcHBlciAuaGVhZGVyeyBmb250LXNpemU6IDI0cHg7IGZvbnQtZmFtaWx5OiAnQXZlbmlyTWVkaXVtJzsgY29sb3I6ICM3Njc2NzY7IGJhY2tncm91bmQ6ICNmMmY0ZjU7IHBhZGRpbmc6IDhweDt9XG5cblxuLmZhcV93cmFwcGVyIC5tYXQtZXhwYW5zaW9uLXBhbmVsLWhlYWRlci5tYXQtZXhwYW5kZWQ6Zm9jdXN7IGJhY2tncm91bmQ6ICMwMGJhZmY7fVxuIC8qIC5tYXQtZXhwYW5zaW9uLXBhbmVsLWhlYWRlci10aXRsZXtjb2xvcjogI2YyZjRmNTt9ICovXG4uZmFxX3dyYXBwZXIgLm1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyLm1hdC1leHBhbmRlZDpmb2N1cyAubWF0LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXItdGl0bGUge1xuICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuODcpO1xufVxuLmFjdGl2ZXsgYmFja2dyb3VuZDogIzAwYmFmZiFpbXBvcnRhbnQ7IH1cbi5hY3RpdmUgLm1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyLXRpdGxlIHsgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC44Nyk7IH1cbi5ib2R5X3dyYXBwZXJ7IGJhY2tncm91bmQ6I2YyZjRmNSA7IGRpc3BsYXk6IGZsZXg7IGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsgcGFkZGluZzogMTBweCAyMHB4O31cbi5ib2R5X3dyYXBwZXIgLmNvbnRlbnRfd3IgcCxcbi5ib2R5X3dyYXBwZXIgLmNvbnRlbnRfd3IgcCBvbCBsaXsgY29sb3I6ICMwMDA7IGZvbnQtc2l6ZTogMTZweDsgZm9udC1mYW1pbHk6ICdBdmVuaXJSb21hbic7IG1hcmdpbjogNnB4IDA7IGxpbmUtaGVpZ2h0OiAyNHB4O31cbi5ib2R5X3dyYXBwZXIgLmNvbnRlbnRfd3IgcCBzdHJvbmd7IGZvbnQtc2l6ZTogMTZweDsgZm9udC1mYW1pbHk6ICdBdmVuaXJCbGFjayc7IH1cbi5ib2R5X3dyYXBwZXIgLmNvbnRlbnRfd3J7IHdpZHRoOiAxMDAlO31cbi5ib2R5X3dyYXBwZXIgLnZpZGVvX3dyeyB3aWR0aDogMzYlOyBtYXJnaW4tbGVmdDogMTRweDsgfVxuXG4uYm9keV93cmFwcGVyIC52aWRlb193ciAudmlkZW8td3JhcHBlciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHBhZGRpbmctYm90dG9tOiA1Ni4yNSU7IC8qIDE2OjkgKi9cbiAgICBwYWRkaW5nLXRvcDogMjVweDtcbiAgICBoZWlnaHQ6IDA7XG4gIH1cbiAgLmJvZHlfd3JhcHBlciAudmlkZW9fd3IgLnZpZGVvLXdyYXBwZXIgaWZyYW1le1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gIH1cbiAgLmZhcV93cmFwcGVyIC5tYXQtZXhwYW5zaW9uLXBhbmVsOm5vdCgubWF0LWV4cGFuc2lvbi1wYW5lbC1zcGFjaW5nKSB7IG1hcmdpbi1ib3R0b206IDEwcHg7fVxuXG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDE1NjBweCl7XG4gICAgLmZhcV93cmFwcGVyeyB3aWR0aDogOTAlO31cbiAgfVxuLyogaGVsbG8geW91dHViZSB0b2RheSBpIHdpbGwgZGlzc2N1c3MgYWJvdXQgdGhlIG9mIGEgcG9wdWxhciBqYXZhc2NyaXB0IGZyYW1ld29yay4gaXQgaXMgYW5ndWxhci4gYW5ndWxhciBpcyBqYXZhc2NyaXB0IGZhbWV3b2tcbmNyZXRlIGFuZCBtYXRhaW5lZCBieSBnb29nbGUgdGhlIHRlY2ggZ2lhbnQuIEl0J3MgdXNlcyB0eXBlc2NyaXB0IGxhbmd1YWdlLiAgICovIl19 */";
    /***/
  },

  /***/
  "./src/app/components/common/faq-view/faq-view.component.ts":
  /*!******************************************************************!*\
    !*** ./src/app/components/common/faq-view/faq-view.component.ts ***!
    \******************************************************************/

  /*! exports provided: FaqViewComponent */

  /***/
  function srcAppComponentsCommonFaqViewFaqViewComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "FaqViewComponent", function () {
      return FaqViewComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/common/http */
    "./node_modules/@angular/common/fesm2015/http.js");
    /* harmony import */


    var _class_common_common_function__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../../class/common/common-function */
    "./src/app/class/common/common-function.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var ngx_device_detector__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ngx-device-detector */
    "./node_modules/ngx-device-detector/fesm2015/ngx-device-detector.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! @angular/platform-browser */
    "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");

    var FaqViewComponent = /*#__PURE__*/function () {
      function FaqViewComponent(http, commonFunction, activatedRoute, cookieService, httpService, deviceService, matSnackBar, sanitizer) {
        _classCallCheck(this, FaqViewComponent);

        this.http = http;
        this.commonFunction = commonFunction;
        this.activatedRoute = activatedRoute;
        this.cookieService = cookieService;
        this.httpService = httpService;
        this.deviceService = deviceService;
        this.matSnackBar = matSnackBar;
        this.sanitizer = sanitizer;
        this.loginUserData = {};
        /* Get and set login User Data */

        this.loginUserData["user_details"] = JSON.parse(this.cookieService.get('user_details'));
        this.loginUserData["jwtToken"] = this.cookieService.get('jwtToken');
      }

      _createClass(FaqViewComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this150 = this;

          this.activatedRoute.data.subscribe(function (resolveData) {
            _this150.allResolveData = resolveData.faqData.res;

            for (var loop = 0; loop < _this150.allResolveData.length; loop++) {
              _this150.allResolveData[loop].youtube_link_save = _this150.sanitizer.bypassSecurityTrustResourceUrl(_this150.allResolveData[loop].youtube_link);
            }
          });
        }
      }]);

      return FaqViewComponent;
    }();

    FaqViewComponent.ctorParameters = function () {
      return [{
        type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"]
      }, {
        type: _class_common_common_function__WEBPACK_IMPORTED_MODULE_3__["CommonFunction"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_5__["CookieService"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_6__["HttpServiceService"]
      }, {
        type: ngx_device_detector__WEBPACK_IMPORTED_MODULE_7__["DeviceDetectorService"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_8__["MatSnackBar"]
      }, {
        type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_9__["DomSanitizer"]
      }];
    };

    FaqViewComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-faq-view',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./faq-view.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/common/faq-view/faq-view.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./faq-view.component.css */
      "./src/app/components/common/faq-view/faq-view.component.css"))["default"]]
    })], FaqViewComponent);
    /***/
  },

  /***/
  "./src/app/components/common/http-loader/http-loader.component.css":
  /*!*************************************************************************!*\
    !*** ./src/app/components/common/http-loader/http-loader.component.css ***!
    \*************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsCommonHttpLoaderHttpLoaderComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = ".mainOverlayLoader {\n    position: fixed;\n    display: flex;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: rgba(0,0,0,0.8);\n    z-index: 2;  \n    cursor: pointer;\n    justify-content: center;\n    align-items: center;\n  }\n  .mat_card_content{ width: 200px; align-items: center;  flex-direction: column;display: flex;\n    justify-content: center;}\n \n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jb21tb24vaHR0cC1sb2FkZXIvaHR0cC1sb2FkZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGVBQWU7SUFDZixhQUFhO0lBQ2IsV0FBVztJQUNYLFlBQVk7SUFDWixNQUFNO0lBQ04sT0FBTztJQUNQLFFBQVE7SUFDUixTQUFTO0lBQ1QsaUNBQWlDO0lBQ2pDLFVBQVU7SUFDVixlQUFlO0lBQ2YsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtFQUNyQjtFQUNBLG1CQUFtQixZQUFZLEVBQUUsbUJBQW1CLEdBQUcsc0JBQXNCLENBQUMsYUFBYTtJQUN6Rix1QkFBdUIsQ0FBQyIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY29tbW9uL2h0dHAtbG9hZGVyL2h0dHAtbG9hZGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWFpbk92ZXJsYXlMb2FkZXIge1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICByaWdodDogMDtcbiAgICBib3R0b206IDA7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLDAsMCwwLjgpO1xuICAgIHotaW5kZXg6IDI7ICBcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgfVxuICAubWF0X2NhcmRfY29udGVudHsgd2lkdGg6IDIwMHB4OyBhbGlnbi1pdGVtczogY2VudGVyOyAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO31cbiBcbiJdfQ== */";
    /***/
  },

  /***/
  "./src/app/components/common/http-loader/http-loader.component.ts":
  /*!************************************************************************!*\
    !*** ./src/app/components/common/http-loader/http-loader.component.ts ***!
    \************************************************************************/

  /*! exports provided: HttpLoaderComponent */

  /***/
  function srcAppComponentsCommonHttpLoaderHttpLoaderComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "HttpLoaderComponent", function () {
      return HttpLoaderComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _services_http_loader_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../../services/http-loader.service */
    "./src/app/services/http-loader.service.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");

    var HttpLoaderComponent = /*#__PURE__*/function () {
      function HttpLoaderComponent(loaderService, activatedRoute, router) {
        var _this151 = this;

        _classCallCheck(this, HttpLoaderComponent);

        this.loaderService = loaderService;
        this.activatedRoute = activatedRoute;
        this.router = router;
        var urlArr = this.router.url.split("/"); // if(urlArr[3] == 'bulk-upload') {

        this.loaderService.isLoading.subscribe(function (v) {
          _this151.httpLoading = v;
        }); // }
      }

      _createClass(HttpLoaderComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }]);

      return HttpLoaderComponent;
    }();

    HttpLoaderComponent.ctorParameters = function () {
      return [{
        type: _services_http_loader_service__WEBPACK_IMPORTED_MODULE_2__["HttpLoaderService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"]
      }];
    };

    HttpLoaderComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-http-loader',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./http-loader.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/common/http-loader/http-loader.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./http-loader.component.css */
      "./src/app/components/common/http-loader/http-loader.component.css"))["default"]]
    })], HttpLoaderComponent);
    /***/
  },

  /***/
  "./src/app/components/common/not-found-error/not-found-error.component.css":
  /*!*********************************************************************************!*\
    !*** ./src/app/components/common/not-found-error/not-found-error.component.css ***!
    \*********************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsCommonNotFoundErrorNotFoundErrorComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "/* header css */\n.techdashboard_header .mat-toolbar-row{ height: auto; }\n.techdashboard_header .mat-toolbar-row .logo_wrapper{ max-width: 200px; display: block; }\n.techdashboard_header .mat-toolbar-row .logo_wrapper img{ max-width: 100%; vertical-align: middle; }\n.techdashboard_header .mat-toolbar-row{ justify-content: space-between; padding: 0 40px;}\n.techdashboard_header .mat-toolbar-row .quotation { margin-bottom: 0px;}\n.techdashboard_header .mat-toolbar-row .quotation p{ font-family: \"RobotoMedium\"; font-size: 30px; color: #002035; text-transform: uppercase; margin: 0; }\n.techdashboard_header .mat-toolbar-row .profile_section { display: flex; border-left: 1px solid #e2dede; padding-left: 20px; }\n.techdashboard_header .mat-toolbar-row .profile_section .username{ padding-right: 20px; display: block; }\n.techdashboard_header .mat-toolbar-row .quotation .mat-list-base{ display: flex;}\n.techdashboard_header .mat-toolbar-row .quotation .mat-list-base .mat-list-item:after{ content:\"\"; width:2px; height: 80px; background: red;}\n.active{ color: #c18500!important; }\n.techdashboard_header .mat-toolbar-row .quotation .mat-nav-list .mat-list-item { margin: 0 16px; }\n/*End header css */\n.footer_section{display: block; border-top: 1px solid #c7c7c7; margin-top: 30px; }\n.footer_section .footer_content{ width: 600px; padding: 0 16px; margin: 0 auto; display: block; text-align: center; }\n.footer_section .footer_content .link{ margin-top: 10px; display: block;  }\n.footer_section .footer_content .link a:nth-of-type(1){ border-right: 1px solid #2b2b2b; padding-right: 5px; }\n.footer_section .footer_content .link a, .footer_section .footer_content .link p{ font-size: 16px; font-family: \"RobotoRegular\"; color: #2b2b2b; text-decoration: none;}\n.error_banner{\n  background: #ffeaaa;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column; \n  padding: 70px 0;\n }\n.error_banner .error_page_content {width:100%; text-align: center; }\n.error_banner .error_page_content h1{ font-size: 80px; margin-top: 10px; color: #563d3d; margin-bottom: 0;}\n.error_banner .error_page_content h3{\n    color: #ff6a00;\n    font-size: 30px;\n    margin: 10px;\n    text-transform: capitalize;\n  }\n.error_banner .imagesss{ width: 100px; display: block; }\n.error_banner img{ max-width: 100%; }\n.error_banner .error_page_content .goto_home{background: #ffcd35;\n    width: 290px;\n    text-transform: capitalize;\n    font-size: 24px;\n    padding: 5px;\n    border-radius: 0;\n    margin-top: 30px;}\n@media screen and (max-width: 1700px){\n  .content_wrapper .itemsection p { font-size: 26px; }\n  .one, .two, .three { background-position: 100% center; }\n}\n@media screen and (max-width: 1680px){\n  .techdashboard_header .mat-toolbar-row .quotation p { font-size: 24px; }\n}\n@media screen and (max-width: 1500px){\n  .techdashboard_header .mat-toolbar-row .quotation p { font-size: 22px; }\n  .content_wrapper .itemsection { padding-bottom: 36px; }\n}\n@media screen and (max-width: 1440px){\n  .content_wrapper .itemsection p { line-height: 26px; font-size: 24px;}\n\n}\n@media screen and (max-width: 1400px){\n.techdashboard_header .mat-toolbar-row .quotation p { font-size: 20px; text-align: center; line-height: 22px; white-space: normal; }\n.techdashboard_header .mat-toolbar-row { padding: 0 20px; }\n}\n@media screen and (max-width: 1240px){\n  .doctor_content_wrapper{ background: #012035; }\n}\n@media screen and (max-width: 1199px){\n.doctor_content_wrapper .table_structure { width: 100%;  }\n.patient_report_section .button_action { width: 970px; }\n.patient_report_section .button_action button { width: 475px; font-size: 20px; padding: 8px; }\n.content_wrapper { display: flex; justify-content: center; align-items: center; text-align: center; flex-wrap: wrap; }\n.content_wrapper .itemsection { width: 31%; margin: 15px 12px; }\n.doctor_content_wrapper { padding: 40px 30px; }\n.doctor_content_wrapper .mat-card-title { font-size: 36px; margin-bottom: 20px; }\n\n.table_structure .mat-list-item .title_n { font-size: 26px; }\n.table_structure .mat-list-item .title_a { font-size: 22px; }\n.content_wrapper .itemsection p{ width: 100%; font-size: 22px; }\n.techdashboard_header .mat-toolbar-row { height: auto; flex-direction: column; }\n.admin_superbillsection .biller_wrapper{ display: flex; justify-content: center; flex-wrap: wrap; }\n.admin_superbillsection  .biller_wrapper .super_bill_item  { width: 49%; }\n}\n@media screen and (max-width: 1080px){\n.doctor_content_wrapper {\n    padding: 40px 20px;\n}\n.doctor_content_wrapper .mat-card-title {\n  font-size: 32px;\n  margin-bottom: 20px;\n}\n.table_structure .mat-list-item .title_n {\n  font-size: 22px;\n}\n.table_structure .mat-list-item .title_a {\n  font-size: 20px;\n}\n}\n@media screen and (max-width: 1038px){\n.content_wrapper .itemsection { width: 30.9%;  }\n}\n@media screen and (max-width: 991px){\n.doctor_content_wrapper { text-align: center; }\n.patient_report_section .patient_top_search { display: flex; align-items: center; flex-direction: column; }\n.patient_report_section .patient_top_search .search_bar { margin-bottom: 20px; }\n.patient_report_section .button_action button { padding: 8px 30px; margin: 0 10px; width: 100%;}\n.patient_report_section .button_action { width: auto; margin: 0 5px; display: flex; justify-content: center; }\n.content_wrapper .itemsection { width: 30.8%; }\n.table_structure .mat-list-item .title_a { font-size: 16px; }\n#menu_button{ display: block;}\n.techdashboard_header .mat-toolbar-row .quotation { display: none; }\n\n.techdashboard_header .mat-toolbar-row .quotation .mat-list-base {\n  display: block;\n}\n}\n@media screen and (max-width: 970px){\n.patient_report_section .button_action button { width: auto; }\n.table_structure .mat-list-item .title_n { font-size: 18px; }\n\n.one { background: linear-gradient(100deg, #f9c856, #dd671d); }\n.two { background: linear-gradient(100deg, #0973d1, #05335a); }\n.three { background: linear-gradient(100deg, #44cf80, #26a555); }\n}\n@media screen and (max-width: 950px){\n  .content_wrapper .itemsection {\n    width: 30.8%;\n}\n  .content_wrapper .itemsection p { font-size: 20px; }\n  .table_structure .mat-list-base .mat-list-item, .mat-list-base .mat-list-option {  margin-bottom: 16px; }\n}\n@media screen and (max-width: 850px){\n.content_wrapper .itemsection { width: 30.2%; }\n/* hiding searchbar */\n.patient_report_section .patient_top_search .search_bar {\n  margin-bottom: 20px;\n  display: none;\n}\n\n.techdashboard_header .mat-toolbar-row {\n  padding: 0 16px;\n  flex-direction: column;\n}\n\n\n}\n@media screen and (max-width: 768px){\n.content_wrapper .itemsection { width: 100%; margin: 16px; margin-bottom: 0; }\n.content_wrapper .itemsection:nth-last-child(1) {margin-bottom: 16px; }\n.patient_report_section .button_action { display: flex; justify-content: center; flex-direction: column; }\n.patient_report_section .button_action button { margin-bottom: 16px; word-break: break-word; white-space: normal; line-height: 22px; }\n.techdashboard_header .mat-toolbar-row { padding: 0 16px; }\n.techdashboard_header .mat-toolbar-row .quotation p { margin: 16px 0; }\n.doctor_content_wrapper { padding: 20px 0px; }\n.table_structure .mat-list-item .title_a { font-size: 14px; }\n.doctor_content_wrapper .mat-card-title { font-size: 28px; margin-bottom: 5px; text-align: left; padding: 0 16px; }\n\n.table_structure .mat-list-base .mat-list-item, .mat-list-base .mat-list-option { margin-bottom: 16px; }\n.footer_section .footer_content { width: auto; }\n\n.table_structure .mat-list-base .mat-list-item, .mat-list-base .mat-list-option { display: flex; text-align: left; }\n\n  .admin_superbillsection  .biller_wrapper .super_bill_item  { width: 100%; }\n}\n@media screen and (max-width: 480px){\n.doctor_content_wrapper .mat-card-title { font-size: 24px; }\n.patient_report_section .patient_top_search h1 { font-size: 24px; }\n}\n\n/*# sourceMappingURL=data:application/json;base64, */";
    /***/
  },

  /***/
  "./src/app/components/common/not-found-error/not-found-error.component.ts":
  /*!********************************************************************************!*\
    !*** ./src/app/components/common/not-found-error/not-found-error.component.ts ***!
    \********************************************************************************/

  /*! exports provided: NotFoundErrorComponent */

  /***/
  function srcAppComponentsCommonNotFoundErrorNotFoundErrorComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "NotFoundErrorComponent", function () {
      return NotFoundErrorComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");

    var NotFoundErrorComponent = /*#__PURE__*/function () {
      function NotFoundErrorComponent(cookie, activatedRoute, router) {
        _classCallCheck(this, NotFoundErrorComponent);

        this.cookie = cookie;
        this.activatedRoute = activatedRoute;
        this.router = router;
        this.userToken = cookie.get('jwtToken');
        var allcookies;
        allcookies = cookie.getAll();
        allcookies['user_details'] = JSON.stringify(allcookies);
        this.cookiesData = JSON.parse(allcookies.user_details);
        console.log("token data", this.cookiesData.type);
      }

      _createClass(NotFoundErrorComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }, {
        key: "gotoHome",
        value: function gotoHome() {
          this.router.navigateByUrl('/' + JSON.parse(this.cookiesData.user_type) + '/dashboard');
        }
      }]);

      return NotFoundErrorComponent;
    }();

    NotFoundErrorComponent.ctorParameters = function () {
      return [{
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"]
      }];
    };

    NotFoundErrorComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-not-found-error',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./not-found-error.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/common/not-found-error/not-found-error.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./not-found-error.component.css */
      "./src/app/components/common/not-found-error/not-found-error.component.css"))["default"]]
    })], NotFoundErrorComponent);
    /***/
  },

  /***/
  "./src/app/components/common/password-dialog-box/password-dialog-box.component.css":
  /*!*****************************************************************************************!*\
    !*** ./src/app/components/common/password-dialog-box/password-dialog-box.component.css ***!
    \*****************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsCommonPasswordDialogBoxPasswordDialogBoxComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY29tbW9uL3Bhc3N3b3JkLWRpYWxvZy1ib3gvcGFzc3dvcmQtZGlhbG9nLWJveC5jb21wb25lbnQuY3NzIn0= */";
    /***/
  },

  /***/
  "./src/app/components/common/password-dialog-box/password-dialog-box.component.ts":
  /*!****************************************************************************************!*\
    !*** ./src/app/components/common/password-dialog-box/password-dialog-box.component.ts ***!
    \****************************************************************************************/

  /*! exports provided: PasswordDialogBoxComponent */

  /***/
  function srcAppComponentsCommonPasswordDialogBoxPasswordDialogBoxComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PasswordDialogBoxComponent", function () {
      return PasswordDialogBoxComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");

    var PasswordDialogBoxComponent = /*#__PURE__*/function () {
      function PasswordDialogBoxComponent() {
        _classCallCheck(this, PasswordDialogBoxComponent);
      }

      _createClass(PasswordDialogBoxComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }]);

      return PasswordDialogBoxComponent;
    }();

    PasswordDialogBoxComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-password-dialog-box',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./password-dialog-box.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/common/password-dialog-box/password-dialog-box.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./password-dialog-box.component.css */
      "./src/app/components/common/password-dialog-box/password-dialog-box.component.css"))["default"]]
    })], PasswordDialogBoxComponent);
    /***/
  },

  /***/
  "./src/app/components/common/upload-dialog-box/upload-dialog-box.component.css":
  /*!*************************************************************************************!*\
    !*** ./src/app/components/common/upload-dialog-box/upload-dialog-box.component.css ***!
    \*************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsCommonUploadDialogBoxUploadDialogBoxComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "/* header css */\n.techdashboard_header .mat-toolbar-row{ height: auto; }\n.techdashboard_header .mat-toolbar-row .logo_wrapper{ max-width: 200px; display: block; }\n.techdashboard_header .mat-toolbar-row .logo_wrapper img{ max-width: 100%; vertical-align: middle; }\n.techdashboard_header .mat-toolbar-row{ justify-content: space-between; padding: 0 40px;}\n.techdashboard_header .mat-toolbar-row .quotation { margin-bottom: 0px;}\n.techdashboard_header .mat-toolbar-row .quotation p{ font-family: \"RobotoMedium\"; font-size: 30px; color: #002035; text-transform: uppercase; margin: 0; }\n.techdashboard_header .mat-toolbar-row .profile_section { display: flex; border-left: 1px solid #e2dede; padding-left: 20px; }\n.techdashboard_header .mat-toolbar-row .profile_section .username{ padding-right: 20px; display: block; }\n.techdashboard_header .mat-toolbar-row .quotation .mat-list-base{ display: flex;}\n.techdashboard_header .mat-toolbar-row .quotation .mat-list-base .mat-list-item:after{ content:\"\"; width:2px; height: 80px; background: red;}\n.active{ color: #c18500!important; }\n.techdashboard_header .mat-toolbar-row .quotation .mat-nav-list .mat-list-item { margin: 0 16px; }\n.add_form{ width: 40%; margin: 20px auto; background: #f3f3f3; padding: 16px 10px; padding-bottom: 50px; border: 1px solid #91e7ff; }\n.add_form .form_wrapper .mat-form-field{ width: 100%;  }\n.add_form .form_wrapper textarea{ resize: none;}\n.add_form h2{ font-family: \"RobotoBlack\"; text-transform: uppercase; font-size: 24px; padding: 0 6px; color: #1dbce9; }\n.add_form .submit_form { display: block; width: 100%; text-align: center; margin-top: 30px; }\n.add_form .submit_form button{ border-radius: 5px; background: linear-gradient(180deg, #f9dc19, #daa505); color: #5e3619; text-transform: uppercase; font-family: \"RobotoBlack\"; font-size: 25px; padding: 2px;\nwidth: 240px; border: 3px solid #d59d01; }\n.add_form .submit_form button:nth-child(1){ background: linear-gradient(180deg, #f2be00, #a52a08); color: #f3f3f3; border: 2px solid #bb3c0d; margin-right: 16px; }\n.add_form .return_button { background: #1dbce9; color: #fff; margin-bottom: 12px;}\n@media screen and (max-width: 1460px){\n  .techdashboard_header .mat-toolbar-row .quotation p { font-size: 24px; line-height: 26px;}\n}\n@media screen and (max-width: 1000px){\n  .add_form .submit_form button { width: 48%; }\n}\n@media screen and (max-width: 991px){\n.techdashboard_header .mat-toolbar-row { flex-direction: column; padding: 20px;}\n.techdashboard_header .mat-toolbar-row .quotation p { margin-top: 16px; }\n}\n@media screen and (max-width: 768px){\n  .add_form .form_wrapper .mat-form-field { width: 100%; margin: 0; }\n}\n@media screen and (max-width: 576px){\n.add_form .submit_form button { font-size: 22px; padding: 2px; }\n\n.add_form .submit_form button { width: 100%; margin: 0; margin-top: 20px; }\n.add_form .submit_form { display: flex; flex-direction: column-reverse; text-align: center; margin-top: 0px; }\n.add_form .submit_form button:nth-child(1) { margin-right: 0; margin-top: 20px; }\n}\n@media screen and (max-width: 360px){\n.techdashboard_header .mat-toolbar-row .quotation p { font-size: 16px; line-height: 22px; }\n.add_form h2 { font-size: 22px; line-height: 24px; text-align: center; }\n}\n/* header css */\n.techdashboard_header .mat-toolbar-row{ height: auto; }\n.techdashboard_header .mat-toolbar-row .logo_wrapper{ max-width: 200px; display: block; }\n.techdashboard_header .mat-toolbar-row .logo_wrapper img{ max-width: 100%; vertical-align: middle; }\n.techdashboard_header .mat-toolbar-row{ justify-content: space-between; padding: 0 40px;}\n.techdashboard_header .mat-toolbar-row .quotation { margin-bottom: 0px;}\n.techdashboard_header .mat-toolbar-row .quotation p{ font-family: \"RobotoMedium\"; font-size: 30px; color: #002035; text-transform: uppercase; margin: 0; }\n.techdashboard_header .mat-toolbar-row .profile_section { display: flex; border-left: 1px solid #e2dede; padding-left: 20px; }\n.techdashboard_header .mat-toolbar-row .profile_section .username{ padding-right: 20px; display: block; }\n.techdashboard_header .mat-toolbar-row .quotation .mat-list-base{ display: flex;}\n.techdashboard_header .mat-toolbar-row .quotation .mat-list-base .mat-list-item:after{ content:\"\"; width:2px; height: 80px; background: red;}\n.active{ color: #c18500!important; }\n.techdashboard_header .mat-toolbar-row .quotation .mat-nav-list .mat-list-item { margin: 0 16px; }\n/*End header css */\n.footer_section{display: block; border-top: 1px solid #c7c7c7; margin-top: 30px; }\n.footer_section .footer_content{ width: 600px; padding: 0 16px; margin: 0 auto; display: block; text-align: center; }\n.footer_section .footer_content .link{ margin-top: 10px; display: block;  }\n.footer_section .footer_content .link a:nth-of-type(1){ border-right: 1px solid #2b2b2b; padding-right: 5px; }\n.footer_section .footer_content .link a, .footer_section .footer_content .link p{ font-size: 16px; font-family: \"RobotoRegular\"; color: #2b2b2b; text-decoration: none;}\n#menu_button{ display: none;}\n.add_header{ display: flex; margin: 016px;}\n.add_header button{ margin-left: auto;\n  background: linear-gradient(180deg, #fac855, #e47e2a)!important;\n  text-transform: uppercase;\n  font-family: \"RobotoBlack\"; padding-top: 4px;\n}\n@media screen and (max-width: 1700px){\n  .content_wrapper .itemsection p { font-size: 26px; }\n  .one, .two, .three { background-position: 100% center; }\n}\n@media screen and (max-width: 1680px){\n  .techdashboard_header .mat-toolbar-row .quotation p { font-size: 24px; }\n}\n@media screen and (max-width: 1500px){\n  .techdashboard_header .mat-toolbar-row .quotation p { font-size: 22px; }\n  .content_wrapper .itemsection { padding-bottom: 36px; }\n}\n@media screen and (max-width: 1440px){\n  .content_wrapper .itemsection p { line-height: 26px; font-size: 24px;}\n\n}\n@media screen and (max-width: 1400px){\n.techdashboard_header .mat-toolbar-row .quotation p { font-size: 20px; text-align: center; line-height: 22px; white-space: normal; }\n.techdashboard_header .mat-toolbar-row { padding: 0 20px; }\n}\n@media screen and (max-width: 1240px){\n  .doctor_content_wrapper{ background: #012035; }\n}\n@media screen and (max-width: 1199px){\n.doctor_content_wrapper .table_structure { width: 100%;  }\n.patient_report_section .button_action { width: 970px; }\n.patient_report_section .button_action button { width: 475px; font-size: 20px; padding: 8px; }\n.content_wrapper { display: flex; justify-content: center; align-items: center; text-align: center; flex-wrap: wrap; }\n.content_wrapper .itemsection { width: 31%; margin: 15px 12px; }\n.doctor_content_wrapper { padding: 40px 30px; }\n.doctor_content_wrapper .mat-card-title { font-size: 36px; margin-bottom: 20px; }\n\n.table_structure .mat-list-item .title_n { font-size: 26px; }\n.table_structure .mat-list-item .title_a { font-size: 22px; }\n.content_wrapper .itemsection p{ width: 100%; font-size: 22px; }\n.techdashboard_header .mat-toolbar-row { height: auto; flex-direction: column; }\n}\n@media screen and (max-width: 1080px){\n.doctor_content_wrapper {\n    padding: 40px 20px;\n}\n.doctor_content_wrapper .mat-card-title {\n  font-size: 32px;\n  margin-bottom: 20px;\n}\n.table_structure .mat-list-item .title_n {\n  font-size: 22px;\n}\n.table_structure .mat-list-item .title_a {\n  font-size: 20px;\n}\n}\n@media screen and (max-width: 1038px){\n.content_wrapper .itemsection { width: 30.9%;  }\n}\n@media screen and (max-width: 991px){\n.doctor_content_wrapper { text-align: center; }\n.patient_report_section .patient_top_search { display: flex; align-items: center; flex-direction: column; }\n.patient_report_section .patient_top_search .search_bar { margin-bottom: 20px; }\n.patient_report_section .button_action button { padding: 8px 30px; margin: 0 10px; width: 100%;}\n.patient_report_section .button_action { width: auto; margin: 0 5px; display: flex; justify-content: center; }\n.content_wrapper .itemsection { width: 30.8%; }\n.table_structure .mat-list-item .title_a { font-size: 16px; }\n#menu_button{ display: block;}\n.techdashboard_header .mat-toolbar-row .quotation { display: none; }\n\n.techdashboard_header .mat-toolbar-row .quotation .mat-list-base {\n  display: block;\n}\n}\n@media screen and (max-width: 970px){\n.patient_report_section .button_action button { width: auto; }\n.table_structure .mat-list-item .title_n { font-size: 18px; }\n\n.one { background: linear-gradient(100deg, #f9c856, #dd671d); }\n.two { background: linear-gradient(100deg, #0973d1, #05335a); }\n.three { background: linear-gradient(100deg, #44cf80, #26a555); }\n}\n@media screen and (max-width: 950px){\n  .content_wrapper .itemsection {\n    width: 30.8%;\n}\n  .content_wrapper .itemsection p { font-size: 20px; }\n  .table_structure .mat-list-base .mat-list-item, .mat-list-base .mat-list-option {  margin-bottom: 16px; }\n}\n@media screen and (max-width: 850px){\n.content_wrapper .itemsection { width: 30.2%; }\n/* hiding searchbar */\n.patient_report_section .patient_top_search .search_bar {\n  margin-bottom: 20px;\n  display: none;\n}\n\n.techdashboard_header .mat-toolbar-row {\n  padding: 0 16px;\n  flex-direction: column;\n}\n\n\n}\n@media screen and (max-width: 768px){\n.content_wrapper .itemsection { width: 100%; margin: 16px; margin-bottom: 0; }\n.content_wrapper .itemsection:nth-last-child(1) {margin-bottom: 16px; }\n.patient_report_section .button_action { display: flex; justify-content: center; flex-direction: column; }\n.patient_report_section .button_action button { margin-bottom: 16px; word-break: break-word; white-space: normal; line-height: 22px; }\n.techdashboard_header .mat-toolbar-row { padding: 0 16px; }\n.techdashboard_header .mat-toolbar-row .quotation p { margin: 16px 0; }\n.doctor_content_wrapper { padding: 20px 0px; }\n.table_structure .mat-list-item .title_a { font-size: 14px; }\n.doctor_content_wrapper .mat-card-title { font-size: 28px; margin-bottom: 5px; text-align: left; padding: 0 16px; }\n\n.table_structure .mat-list-base .mat-list-item, .mat-list-base .mat-list-option { margin-bottom: 16px; }\n.footer_section .footer_content { width: auto; }\n\n.table_structure .mat-list-base .mat-list-item, .mat-list-base .mat-list-option { display: flex; text-align: left; }\n}\n@media screen and (max-width: 480px){\n.doctor_content_wrapper .mat-card-title { font-size: 24px; }\n.patient_report_section .patient_top_search h1 { font-size: 24px; }\n}\n/* header css */\n.techdashboard_header .mat-toolbar-row{ height: auto; }\n.techdashboard_header .mat-toolbar-row .logo_wrapper{ max-width: 200px; display: block; }\n.techdashboard_header .mat-toolbar-row .logo_wrapper img{ max-width: 100%; vertical-align: middle; }\n.techdashboard_header .mat-toolbar-row{ justify-content: space-evenly; padding: 0 40px;}\n.techdashboard_header .mat-toolbar-row .quotation { margin-bottom: 0px;}\n.techdashboard_header .mat-toolbar-row .quotation p{ font-family: \"RobotoMedium\"; font-size: 30px; color: #002035; text-transform: uppercase; margin: 0; white-space: normal;\n  text-align: center;}\n.techdashboard_header .mat-toolbar-row .profile_section { display: flex; border-left: 1px solid #e2dede; padding-left: 20px; }\n.techdashboard_header .mat-toolbar-row .profile_section .username{ padding-right: 20px; display: block; }\n/*End header css */\n.add_form{ width: 80%; margin: 20px auto; background: #f3f3f3; padding: 16px 10px; padding-bottom: 25px; border: 1px solid #91e7ff;}\n.add_form .form_wrapper .mat-form-field{ width: 49%; margin: 0.5%; }\n.add_form .form_wrapper textarea{ resize: none;}\n.add_form h2{ font-family: \"RobotoBlack\"; text-transform: uppercase; font-size: 24px; padding: 0 6px; color: #1dbce9; }\n.add_form .submit_form { display: block; width: 100%; text-align: center; margin-top: 30px; }\n.add_form .submit_form button{ border-radius: 5px; background: linear-gradient(180deg, #f9dc19, #daa505); color: #5e3619; text-transform: uppercase; font-family: \"RobotoBlack\"; font-size: 25px; padding: 8px;\nwidth: 48%; border: 3px solid #d59d01; }\n.add_form .submit_form button:nth-child(1){ background: linear-gradient(180deg, #f2be00, #a52a08); color: #f3f3f3; border: 2px solid #bb3c0d; margin-right: 16px; }\n.add_form .return_button { background: #1dbce9; color: #fff; margin-bottom: 12px;}\n.add_form .signaturefont{\n    font-family: \"AmandaSignature\";\n    font-size: 40px;\n    line-height: 58px;\n    padding: 10px 25px;\n    box-sizing: border-box;\n    background: #fff;\n    border-bottom: 1px solid #000;\n}\n@media screen and (max-width: 1460px){\n  .techdashboard_header .mat-toolbar-row .quotation p { font-size: 24px; line-height: 26px;}\n}\n@media screen and (max-width: 1000px){\n  .add_form .submit_form button { width: 48%; }\n}\n@media screen and (max-width: 991px){\n.techdashboard_header .mat-toolbar-row { flex-direction: column; padding: 20px;}\n.techdashboard_header .mat-toolbar-row .quotation p { margin-top: 16px; }\n}\n@media screen and (max-width: 768px){\n  .add_form .form_wrapper .mat-form-field { width: 100%; margin: 0; }\n}\n@media screen and (max-width: 576px){\n.add_form .submit_form button { font-size: 22px; padding: 2px; }\n\n.add_form .submit_form button { width: 100%; margin: 0; margin-top: 20px; }\n.add_form .submit_form { display: flex; flex-direction: column-reverse; text-align: center; margin-top: 0px; }\n.add_form .submit_form button:nth-child(1) { margin-right: 0; margin-top: 20px; }\n}\n@media screen and (max-width: 360px){\n.techdashboard_header .mat-toolbar-row .quotation p { font-size: 16px; line-height: 22px; }\n.add_form h2 { font-size: 22px; line-height: 24px; text-align: center; }\n}\n/* .add_form .test_date_wrapper{ display: inline-block; } */\n.add_form .test_date_wrapper .mat-card-actions, .add_form .test_date_wrapper .mat-card-content, .add_form .test_date_wrapper .mat-card-subtitle {\n  display: inline-flex;\n  margin-bottom: 16px;\n  vertical-align: middle;\n  justify-content: center;\n  align-items: center;\n}\n.add_form .mat-card-content label , .add_form .patient_diagnotes label{ font-family: \"RobotoMedium\"; color: #01090c; font-size: 16px; margin: 0 5px}\n.add_form .mat-card-content label , \n.add_form .patient_diagnotes label{ font-family: \"RobotoMedium\"; color: #01090c; font-size: 16px; margin:10px;line-height: 20px;}\n.add_form .mat-card-content .mat-checkbox { margin: 0 5px; }\n.add_form .mat-card-content ,\n.add_form .patient_diagnotes .mat-form-field {\n   \n  position: relative;\n  text-align: left;\n  margin: 0 10px;\n}\n.add_form .patient_diagnotes{ width: auto; flex-direction: column; display: flex; margin: 0 8px; border: 2px solid #43cef5; background: #fff;\n  box-sizing: border-box;}\n.add_form .patient_diagnotes{ width: auto; flex-direction: column; display: flex; margin: 0 20px;}\n.add_form .patient_diagnotes .example-full-width textarea{ resize: none; }\n\n\n/*# sourceMappingURL=data:application/json;base64, */";
    /***/
  },

  /***/
  "./src/app/components/common/upload-dialog-box/upload-dialog-box.component.ts":
  /*!************************************************************************************!*\
    !*** ./src/app/components/common/upload-dialog-box/upload-dialog-box.component.ts ***!
    \************************************************************************************/

  /*! exports provided: UploadDialogBoxComponent */

  /***/
  function srcAppComponentsCommonUploadDialogBoxUploadDialogBoxComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "UploadDialogBoxComponent", function () {
      return UploadDialogBoxComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/material/dialog */
    "./node_modules/@angular/material/esm2015/dialog.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");

    var UploadDialogBoxComponent = /*#__PURE__*/function () {
      function UploadDialogBoxComponent(dialog, fb, cookie, http, snackBar, router) {
        _classCallCheck(this, UploadDialogBoxComponent);

        this.dialog = dialog;
        this.fb = fb;
        this.cookie = cookie;
        this.http = http;
        this.snackBar = snackBar;
        this.router = router;
        this.sign = '';
        this.signatureArray = [];
        this.configData = {
          baseUrl: "http://3.15.236.141:5005/",
          endpoint: "uploads",
          size: "51200",
          format: ["jpg", "jpeg", "png", "bmp", "zip", 'html'],
          type: "signature-file",
          path: "signature-file",
          prefix: "signature-file"
        };
        var allcookies;
        allcookies = cookie.getAll();
        this.cookiesData = JSON.parse(allcookies.user_details);
        this.cookies_id = this.cookiesData._id;
        console.log(this.cookiesData);
        console.log(this.cookies_id);
        this.user_token = cookie.get('jwtToken');
        this.getSignatureData();
        this.techUploadForm = this.fb.group({
          sign: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
          user_id: ['']
        });
      }

      _createClass(UploadDialogBoxComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }, {
        key: "inputUntouch",
        value: function inputUntouch(form, val) {
          form.controls[val].markAsUntouched();
        }
      }, {
        key: "cancelButtonFunction",
        value: function cancelButtonFunction() {
          this.router.navigateByUrl('/doctor/dashboard');
        }
      }, {
        key: "getSignatureData",
        value: function getSignatureData() {
          var _this152 = this;

          var data = {
            "source": "doctor_signature",
            "condition": {
              "user_id_object": this.cookies_id
            },
            "token": this.user_token
          };
          this.http.httpViaPost('datalist', data).subscribe(function (response) {
            _this152.result = response.res[0]._id;

            _this152.techUploadForm.controls['sign'].patchValue(response.res[0].sign);
          });
        }
      }, {
        key: "techUploadFormSubmit",
        value: function techUploadFormSubmit() {
          var x;

          for (x in this.techUploadForm.controls) {
            this.techUploadForm.controls[x].markAsTouched();
          }

          this.techUploadForm.controls['user_id'].patchValue(this.cookies_id);

          if (this.techUploadForm.valid) {
            var data;

            if (this.result) {
              data = {
                "source": "users",
                "sourceobj": ["user_id"],
                "data": {
                  id: this.result,
                  sign: this.techUploadForm.value.sign,
                  user_id: this.techUploadForm.value.user_id
                },
                "token": this.user_token
              };
            } else {
              data = {
                "source": "users",
                "data": this.techUploadForm.value,
                "sourceobj": ["user_id"],
                "token": this.user_token
              };
            }

            this.http.httpViaPost("addorupdatedata", data).subscribe(function (response) {
              if (response.status = "success") {
                setTimeout(function () {}, 1000);
              } else {
                alert("Error Occured");
              }
            });
          }
        }
      }]);

      return UploadDialogBoxComponent;
    }();

    UploadDialogBoxComponent.ctorParameters = function () {
      return [{
        type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MatDialog"]
      }, {
        type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_5__["CookieService"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_6__["HttpServiceService"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatSnackBar"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"]
      }];
    };

    UploadDialogBoxComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-upload-dialog-box',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./upload-dialog-box.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/common/upload-dialog-box/upload-dialog-box.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./upload-dialog-box.component.css */
      "./src/app/components/common/upload-dialog-box/upload-dialog-box.component.css"))["default"]]
    })], UploadDialogBoxComponent);
    /***/
  },

  /***/
  "./src/app/components/diagnostic-admin/diagnostic-admin-dashboard/diagnostic-admin-dashboard.component.css":
  /*!*****************************************************************************************************************!*\
    !*** ./src/app/components/diagnostic-admin/diagnostic-admin-dashboard/diagnostic-admin-dashboard.component.css ***!
    \*****************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsDiagnosticAdminDiagnosticAdminDashboardDiagnosticAdminDashboardComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/* .content_wrapper{ display: flex; justify-content: space-between;  align-items: center; width: 100%; margin: auto; text-align: center; }\n.content_wrapper .itemsection{width: 33%; margin: 0px 7px; box-sizing: border-box; display: flex; justify-content: center; position: relative; border-radius: 10px; border: 1px solid #e8e9ef;  overflow: hidden;  }\n.content_wrapper .itemsection .icon{  display: flex; align-items: center; justify-content: center; width: 20%; box-sizing: border-box;}\n.content_wrapper .itemsection .icon img{ max-width: 100%; }\n.content_wrapper .itemsection .button_wrapper{ background: #4d545a; width: 25%; display: flex; align-items: center; justify-content: center; }\n.content_wrapper .itemsection .button_wrapper button{ width: auto; background: transparent; color: #fff; padding: 0; font-family: \"AvenirMedium\"; font-size: 15px; }\n.content_wrapper .itemsection .counteer { box-sizing: border-box; width: 55%; padding: 5px; text-align: left; }\n.content_wrapper .itemsection .counteer .dataCount{ font-size: 48px; font-family: \"AvenirBlack\";  color: #4d545a; margin: 0;}\n.content_wrapper .itemsection .counteer .doctorNumber{ font-size: 18px; font-family: \"AvenirMedium\";  color: #4d545a; margin:0;}\n.content_wrapper .itemsection:nth-child(3n+1){ margin-left: 0;}\n.content_wrapper .itemsection:nth-child(3n+3){ margin-right: 0;} */\n\n\n/* Subha CSS */\n\n\n.tooltip {\n    position: relative;\n    display: inline-block;\n  }\n\n\n.tooltip .tooltiptext {\n    visibility: hidden;\n    min-width: 100px;\n    background-color: #555;\n    color: #fff;\n    text-align: center;\n    border-radius: 6px;\n    padding:6px 10px;\n    position: absolute;\n    z-index: 1;\n    bottom: 125%;\n    left: 50%;\n    margin-left: -60px;\n    opacity: 0;\n    transition: opacity 0.3s;\n  }\n\n\n.tooltip .tooltiptext::after {\n    content: \"\";\n    position: absolute;\n    top: 100%;\n    left: 50%;\n    margin-left: -5px;\n    border-width: 5px;\n    border-style: solid;\n    border-color: #555 transparent transparent transparent;\n  }\n\n\n.tooltip:hover .tooltiptext {\n    visibility: visible;\n    opacity: 1;\n  }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kaWFnbm9zdGljLWFkbWluL2RpYWdub3N0aWMtYWRtaW4tZGFzaGJvYXJkL2RpYWdub3N0aWMtYWRtaW4tZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBOzs7Ozs7Ozs7O2tFQVVrRTs7O0FBR2xFLGNBQWM7OztBQUNkO0lBQ0ksa0JBQWtCO0lBQ2xCLHFCQUFxQjtFQUN2Qjs7O0FBRUE7SUFDRSxrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCLHNCQUFzQjtJQUN0QixXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFDaEIsa0JBQWtCO0lBQ2xCLFVBQVU7SUFDVixZQUFZO0lBQ1osU0FBUztJQUNULGtCQUFrQjtJQUNsQixVQUFVO0lBQ1Ysd0JBQXdCO0VBQzFCOzs7QUFFQTtJQUNFLFdBQVc7SUFDWCxrQkFBa0I7SUFDbEIsU0FBUztJQUNULFNBQVM7SUFDVCxpQkFBaUI7SUFDakIsaUJBQWlCO0lBQ2pCLG1CQUFtQjtJQUNuQixzREFBc0Q7RUFDeEQ7OztBQUVBO0lBQ0UsbUJBQW1CO0lBQ25CLFVBQVU7RUFDWiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGlhZ25vc3RpYy1hZG1pbi9kaWFnbm9zdGljLWFkbWluLWRhc2hib2FyZC9kaWFnbm9zdGljLWFkbWluLWRhc2hib2FyZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG4vKiAuY29udGVudF93cmFwcGVyeyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47ICBhbGlnbi1pdGVtczogY2VudGVyOyB3aWR0aDogMTAwJTsgbWFyZ2luOiBhdXRvOyB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbi5jb250ZW50X3dyYXBwZXIgLml0ZW1zZWN0aW9ue3dpZHRoOiAzMyU7IG1hcmdpbjogMHB4IDdweDsgYm94LXNpemluZzogYm9yZGVyLWJveDsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IHBvc2l0aW9uOiByZWxhdGl2ZTsgYm9yZGVyLXJhZGl1czogMTBweDsgYm9yZGVyOiAxcHggc29saWQgI2U4ZTllZjsgIG92ZXJmbG93OiBoaWRkZW47ICB9XG4uY29udGVudF93cmFwcGVyIC5pdGVtc2VjdGlvbiAuaWNvbnsgIGRpc3BsYXk6IGZsZXg7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IGp1c3RpZnktY29udGVudDogY2VudGVyOyB3aWR0aDogMjAlOyBib3gtc2l6aW5nOiBib3JkZXItYm94O31cbi5jb250ZW50X3dyYXBwZXIgLml0ZW1zZWN0aW9uIC5pY29uIGltZ3sgbWF4LXdpZHRoOiAxMDAlOyB9XG4uY29udGVudF93cmFwcGVyIC5pdGVtc2VjdGlvbiAuYnV0dG9uX3dyYXBwZXJ7IGJhY2tncm91bmQ6ICM0ZDU0NWE7IHdpZHRoOiAyNSU7IGRpc3BsYXk6IGZsZXg7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IGp1c3RpZnktY29udGVudDogY2VudGVyOyB9XG4uY29udGVudF93cmFwcGVyIC5pdGVtc2VjdGlvbiAuYnV0dG9uX3dyYXBwZXIgYnV0dG9ueyB3aWR0aDogYXV0bzsgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7IGNvbG9yOiAjZmZmOyBwYWRkaW5nOiAwOyBmb250LWZhbWlseTogXCJBdmVuaXJNZWRpdW1cIjsgZm9udC1zaXplOiAxNXB4OyB9XG4uY29udGVudF93cmFwcGVyIC5pdGVtc2VjdGlvbiAuY291bnRlZXIgeyBib3gtc2l6aW5nOiBib3JkZXItYm94OyB3aWR0aDogNTUlOyBwYWRkaW5nOiA1cHg7IHRleHQtYWxpZ246IGxlZnQ7IH1cbi5jb250ZW50X3dyYXBwZXIgLml0ZW1zZWN0aW9uIC5jb3VudGVlciAuZGF0YUNvdW50eyBmb250LXNpemU6IDQ4cHg7IGZvbnQtZmFtaWx5OiBcIkF2ZW5pckJsYWNrXCI7ICBjb2xvcjogIzRkNTQ1YTsgbWFyZ2luOiAwO31cbi5jb250ZW50X3dyYXBwZXIgLml0ZW1zZWN0aW9uIC5jb3VudGVlciAuZG9jdG9yTnVtYmVyeyBmb250LXNpemU6IDE4cHg7IGZvbnQtZmFtaWx5OiBcIkF2ZW5pck1lZGl1bVwiOyAgY29sb3I6ICM0ZDU0NWE7IG1hcmdpbjowO31cbi5jb250ZW50X3dyYXBwZXIgLml0ZW1zZWN0aW9uOm50aC1jaGlsZCgzbisxKXsgbWFyZ2luLWxlZnQ6IDA7fVxuLmNvbnRlbnRfd3JhcHBlciAuaXRlbXNlY3Rpb246bnRoLWNoaWxkKDNuKzMpeyBtYXJnaW4tcmlnaHQ6IDA7fSAqL1xuXG5cbi8qIFN1YmhhIENTUyAqL1xuLnRvb2x0aXAge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIH1cblxuICAudG9vbHRpcCAudG9vbHRpcHRleHQge1xuICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgICBtaW4td2lkdGg6IDEwMHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM1NTU7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgICBwYWRkaW5nOjZweCAxMHB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB6LWluZGV4OiAxO1xuICAgIGJvdHRvbTogMTI1JTtcbiAgICBsZWZ0OiA1MCU7XG4gICAgbWFyZ2luLWxlZnQ6IC02MHB4O1xuICAgIG9wYWNpdHk6IDA7XG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzO1xuICB9XG5cbiAgLnRvb2x0aXAgLnRvb2x0aXB0ZXh0OjphZnRlciB7XG4gICAgY29udGVudDogXCJcIjtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAxMDAlO1xuICAgIGxlZnQ6IDUwJTtcbiAgICBtYXJnaW4tbGVmdDogLTVweDtcbiAgICBib3JkZXItd2lkdGg6IDVweDtcbiAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICAgIGJvcmRlci1jb2xvcjogIzU1NSB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCB0cmFuc3BhcmVudDtcbiAgfVxuXG4gIC50b29sdGlwOmhvdmVyIC50b29sdGlwdGV4dCB7XG4gICAgdmlzaWJpbGl0eTogdmlzaWJsZTtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG4iXX0= */";
    /***/
  },

  /***/
  "./src/app/components/diagnostic-admin/diagnostic-admin-dashboard/diagnostic-admin-dashboard.component.ts":
  /*!****************************************************************************************************************!*\
    !*** ./src/app/components/diagnostic-admin/diagnostic-admin-dashboard/diagnostic-admin-dashboard.component.ts ***!
    \****************************************************************************************************************/

  /*! exports provided: DiagnosticAdminDashboardComponent */

  /***/
  function srcAppComponentsDiagnosticAdminDiagnosticAdminDashboardDiagnosticAdminDashboardComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DiagnosticAdminDashboardComponent", function () {
      return DiagnosticAdminDashboardComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/material/paginator */
    "./node_modules/@angular/material/esm2015/paginator.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var ngx_device_detector__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ngx-device-detector */
    "./node_modules/ngx-device-detector/fesm2015/ngx-device-detector.js");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../../../../environments/environment */
    "./src/environments/environment.ts");
    /* harmony import */


    var moment__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! moment */
    "./node_modules/moment/moment.js");
    /* harmony import */


    var moment__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_9__);

    var moment = moment__WEBPACK_IMPORTED_MODULE_9__;

    var DiagnosticAdminDashboardComponent = /*#__PURE__*/function () {
      // lib list end
      function DiagnosticAdminDashboardComponent(router, cookieService, http, activatedRoute, dialog, deviceService, matSnackBar) {
        var _this153 = this;

        _classCallCheck(this, DiagnosticAdminDashboardComponent);

        this.router = router;
        this.cookieService = cookieService;
        this.http = http;
        this.activatedRoute = activatedRoute;
        this.dialog = dialog;
        this.deviceService = deviceService;
        this.matSnackBar = matSnackBar;
        this.loginUserData = {};
        this.jwtToken = "";
        this.htmlText = {
          headerText: "Total No of Report Processed"
        };
        this.shareDetails = {
          baseUrl: _environments_environment__WEBPACK_IMPORTED_MODULE_8__["environment"].doctorSignUpBaseUrl,
          userId: ""
        };
        this.allResolveData = {
          "tableDataFlag": false
        };
        this.tableDataFlag = false;
        this.uploadedStatusArray = [];
        this.processedStatusArray = [];
        this.signedStatusArray = [];
        this.billerStatusArray = [];
        this.searchJson = {
          doctorName: "",
          patientName: "",
          status: "",
          dateRange: ""
        };
        this.allDataList = []; // Lib list

        this.allBillerData = [];
        this.billerData_count = 0;
        this.allUserData_skip = ["_id", "report_file_type", "tech_id", "tech_email", "batch_name", "report_type", "status", "file_basepath", "file_bucketname", "file_name", "file_original_name", "file_type", "converted_image", "images", "patient_details", "patient_name_search", "report_life_circle", "note", "additional_potential_health_risks", "cpt_codes", "created_at"];
        this.editUrl = "admin/biller-management/edit";
        this.libdata = {
          basecondition: {},
          updateendpoint: '',
          custombuttons: [{
            label: "View Report",
            route: "diagnostic-admin/view-patient-record/",
            type: 'internallink',
            param: ['_id']
          }, {
            label: "Download Report",
            link: _environments_environment__WEBPACK_IMPORTED_MODULE_8__["environment"].s3bucket + "reports",
            type: 'externallink',
            paramtype: 'angular',
            param: ['download_file_name']
          }, {
            label: "Tech Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-tech-details',
            datafields: ['first name', 'last name', 'email', 'phone', 'address', 'city', 'state', 'zip'],
            param: 'id',
            headermessage: 'Tech Information'
          }, {
            label: "View Codes",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-codes-details',
            datafields: ['Additional Potential Health Risks', 'CPT Codes', 'ICD Codes'],
            param: 'id',
            headermessage: 'Associated Codes'
          }, {
            label: "Doctor Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-doctor-details',
            datafields: ['firstname', 'lastname', 'email', 'fax', 'Practice Name', 'NPI', 'phone', 'address', 'city', 'state', 'zip'],
            param: 'id',
            headermessage: 'Doctor Information'
          }, {
            label: "Doctor Office Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-doctor-office-details',
            datafields: ['center name', 'first name', 'last name', 'email', 'phone', 'address', 'city', 'state', 'zip'],
            param: 'id',
            headermessage: 'Doctor Office Info'
          }],
          hideeditbutton: true,
          hidedeletebutton: true,
          hidestatustogglebutton: true,
          hideviewbutton: true,
          hidedeletemany: true,
          tableheaders: ["patient_name", "status_text", "created_at_datetime", "cpt_addl", "general_details"]
        };
        this.allUserData_modify_header = {
          "general_details": "Related Info",
          "patient_name": "Patient Name",
          "status_text": "Status",
          "created_at_datetime": "Report Added",
          "cpt_addl": "CPT/ Addl Hrisk C"
        };
        this.UpdateEndpoint = "addorupdatedata";
        this.deleteEndpoint = "deletesingledata";
        this.apiUrl = _environments_environment__WEBPACK_IMPORTED_MODULE_8__["environment"].apiBaseUrl;
        this.tableName = "data_pece";
        this.datacollection = 'dashboard-report-data-list';
        this.sortdata = {
          "type": 'desc',
          "field": 'patient_name',
          "options": ['patient_name', 'created_at_datetime']
        };
        this.limitcond = {
          "limit": 10,
          "skip": 0,
          "pagecount": 1
        };
        this.previewModal_detail_skip = ['_id', 'user_type', 'status', 'password', 'created_at']; // Status filter array

        this.status = [{
          val: 11,
          'name': 'Biller Admin Approved'
        }, {
          val: 12,
          'name': 'Biller Admin Not Approved'
        }, {
          val: 13,
          'name': "Biller Admin Hold"
        }, {
          val: 16,
          "name": "Report Downloaded"
        }]; // CPT code filter array

        this.cptcodes = [{
          val: "95923",
          'name': '95923'
        }, {
          val: "95943",
          'name': '95943'
        }, {
          val: "95921",
          'name': "95921"
        }, {
          val: "93923",
          'name': "93923"
        }, {
          val: "93922",
          'name': "93922"
        }]; // Parent type filter array

        this.parent_type = [{
          val: "admin",
          'name': 'Admin'
        }, {
          val: "diagnostic_admin",
          'name': 'Diagnostic Admin'
        }, {
          val: "distributors",
          'name': 'Distributor'
        }, {
          val: "doctor_group",
          'name': 'Doctor Group'
        }]; // Report type filter array

        this.report_type = [{
          val: "RM-3A",
          'name': 'RM-3A'
        }, {
          val: "TM FLOW V3",
          'name': 'TM FLOW V3'
        }, {
          val: "TM FLOW V4",
          'name': 'TM FLOW V4'
        }, {
          val: "CMAT with BP Cuffs",
          'name': "CMAT with BP Cuffs"
        }];
        this.SearchingEndpoint = "datalist";
        this.authval = [];
        this.docofficeval = [];
        this.techval = [];
        this.parentnameval = [];
        this.doctorcity = [];
        this.doctorstate = [];
        this.patientcity = [];
        this.patientstate = [];
        this.SearchingSourceName = "data_biller_list";
        this.search_settings = {
          selectsearch: [{
            label: 'Search By Report Type',
            field: 'report_file_type',
            values: this.report_type
          }, // { label: 'Search By Status', field: 'status', values: this.status },
          {
            label: "Search By Doctor",
            field: 'doc_name_search',
            values: this.authval
          }, {
            label: "Search By Tech",
            field: 'tech_name_search',
            values: this.techval
          }, {
            label: "Search By Doctor Office",
            field: 'doctor_ofiice_name_search',
            values: this.docofficeval
          }, {
            label: "Search By Doctor City",
            field: 'doctor_city_search',
            values: this.doctorcity
          }, {
            label: "Search By Doctor State",
            field: 'doctor_state_search',
            values: this.doctorstate
          }, {
            label: "Search By Patient City",
            field: 'patient_city_search',
            values: this.patientcity
          }, {
            label: "Search By Patient State",
            field: 'patient_state_search',
            values: this.patientstate
          }],
          datesearch: [{
            startdatelabel: "Start Date",
            enddatelabel: "End Date",
            submit: "Search",
            field: "created_at_datetime"
          }],
          textsearch: [{
            label: "Search By Patient Name",
            field: 'patient_name_search'
          }],
          search: [{
            label: 'Search By CPT Codes',
            field: 'cpt_codes_search',
            values: this.cptcodes
          }]
        };
        this.loginUserData["user_details"] = JSON.parse(cookieService.get('user_details'));
        this.loginUserData["jwtToken"] = cookieService.get('jwtToken');
        this.libdata.basecondition.parent_id = this.loginUserData.user_details._id;
        this.shareDetails.userId = this.loginUserData.user_details._id;
        /* Get Auth Token */

        this.jwtToken = cookieService.get('jwtToken');
        /* Get resolve data */

        this.activatedRoute.data.subscribe(function (resolveData) {
          _this153.allResolveData = resolveData.dataCount.data;
        });
        this.viewReportProcessData(this.htmlText.headerText);
      }

      _createClass(DiagnosticAdminDashboardComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          this.getSearchData();
        }
      }, {
        key: "ngAfterViewInit",
        value: function ngAfterViewInit() {}
        /*Doctor's List*/

      }, {
        key: "toDocList",
        value: function toDocList() {
          this.router.navigateByUrl('admin/doctor-management/list');
        }
      }, {
        key: "downloadReport",
        value: function downloadReport(report) {
          var _this154 = this;

          if (typeof report.download_count == "undefined") {
            report.download_count = 1;
          } else {
            report.download_count = report.download_count + 1;
          }
          /* Collect User Information for Download record */


          var deviceInfo = this.deviceService.getDeviceInfo();
          deviceInfo["isMobile"] = this.deviceService.isMobile();
          deviceInfo["isTablet"] = this.deviceService.isTablet();
          deviceInfo["isDesktop"] = this.deviceService.isDesktop();
          /* Set downloader information */

          var userDetails = {
            id: this.loginUserData.user_details._id,
            user_type: this.loginUserData.user_details.user_type
          };
          var postData = {
            "source": "report_download",
            "data": {
              "report_id": report._id,
              "biller_id": this.loginUserData.user_details._id,
              "tech_id": report.tech_id,
              "doctor_id": report.doctor_id,
              "ip": this.htmlText.ip,
              "download_attempt": 1,
              "downloader_information": userDetails,
              "device_information": deviceInfo
            },
            "sourceobj": ["report_id", "biller_id", "tech_id", "doctor_id"],
            "download_count": report.download_count,
            // this.libdata.basecondition.status = { $eq: 11 };
            "token": this.loginUserData.jwtToken
          };
          this.http.httpViaPost("addorupdatedata", postData).subscribe(function (response) {
            if (response.status == 'success') {
              _this154.matSnackBar.open("Start downloading.", "Ok", {
                duration: 3000
              });

              window.open(report.file_path, "_blank");

              _this154.viewReportProcessData(_this154.htmlText.headerText);
            } else {
              _this154.matSnackBar.open("Some error occord. Please try again.", "Ok", {
                duration: 3000
              });
            }
          });
        }
      }, {
        key: "viewReportProcessData",
        value: function viewReportProcessData() {
          var _this155 = this;

          var flag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
          this.htmlText.headerText = flag;
          this.allBillerData = [];
          this.billerData_count = 0;
          /* Config Data */

          var data = {
            "condition": {
              "limit": 10,
              "skip": 0
            },
            "sort": {
              "field": "patient_name",
              "type": "desc"
            },
            searchcondition: {
              "parent_id": this.loginUserData.user_details._id
            },
            "secretkey": "na"
          };

          switch (flag) {
            case 'Total No of Reports Added':
              data.searchcondition.report_type = {
                $exists: true
              };
              data.searchcondition.status = {
                $gte: 3
              };
              this.libdata.basecondition.status = {
                $gte: 3
              }; // Add status search filed

              this.deleteStatusSearchField();
              var searchData = this.search_settings.selectsearch;
              searchData.push({
                label: 'Search By Status',
                field: 'status',
                values: this.status
              });
              this.search_settings.selectsearch = [];
              this.search_settings.selectsearch = searchData;
              break;

            case 'Total No of Report Processed':
              data.searchcondition.report_type = {
                $exists: true
              };
              data.searchcondition.status = {
                $gte: 11
              }; // this.libdata.basecondition.status = { $gte: 11 };
              // Add status search filed

              this.deleteStatusSearchField();
              var searchData = this.search_settings.selectsearch;
              searchData.push({
                label: 'Search By Status',
                field: 'status',
                values: this.status
              });
              this.search_settings.selectsearch = [];
              this.search_settings.selectsearch = searchData;
              break;

            case 'Total No of Report Signed':
              data.searchcondition.report_type = {
                $exists: true
              };
              data.searchcondition.status = {
                $eq: 14
              };
              this.libdata.basecondition.status = {
                $eq: 14
              }; // delete status filter

              this.deleteStatusSearchField();
              break;

            case 'Sent to Biller':
              data.searchcondition.report_type = {
                $exists: true
              };
              data.searchcondition.status = {
                $eq: 15
              };
              this.libdata.basecondition.status = {
                $eq: 15
              }; // delete status filter

              this.deleteStatusSearchField();
              break;

            case 'Reports Downloaded':
              data.searchcondition.report_type = {
                $exists: true
              };
              data.searchcondition.status = {
                $eq: 16
              };
              this.libdata.basecondition.status = {
                $eq: 16
              }; // delete status filter

              this.deleteStatusSearchField();
              break;

            case 'Reports Pending Sing':
              data.searchcondition.report_type = {
                $exists: true
              };
              data.searchcondition.status = {
                $eq: 11
              };
              this.libdata.basecondition.status = {
                $eq: 11
              }; // delete status filter

              this.deleteStatusSearchField();
              break;
          }
          /* Endpoint call */


          this.http.httpViaPost('dashboard-report-data-list', data).subscribe(function (res) {
            _this155.allBillerData = res.results.res;
            _this155.billerData_count = res.results.data_count;
          }, function (error) {
            console.log('An error occord.');
          });
        }
      }, {
        key: "deleteStatusSearchField",
        value: function deleteStatusSearchField() {
          // Delete Status Filter Field
          var searchData = this.search_settings.selectsearch;

          for (var loop in searchData) {
            if (searchData[loop].label == 'Search By Status') {
              searchData.splice(loop, 1);
            }
          }

          this.search_settings.selectsearch = [];
          this.search_settings.selectsearch = searchData;
        }
      }, {
        key: "getSearchData",
        value: function getSearchData() {
          var _this156 = this;

          var data = {
            "source": "patient_data_desc_patient_name",
            "condition": {
              status: {
                "$gt": 10
              },
              parent_id_object: this.loginUserData.user_details._id
            },
            "token": this.jwtToken
          };
          this.http.httpViaPost("datalist", data).subscribe(function (response) {
            var start = false;
            var count = 0;

            for (var i in response.res) {
              if (response.res[i].doc_name_search != "") {
                for (var j in _this156.authval) {
                  if (response.res[i].doc_name == _this156.authval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this156.authval.push({
                    name: response.res[i].doc_name,
                    val: response.res[i].doc_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].tech_name_search != "") {
                for (var j in _this156.techval) {
                  if (response.res[i].tech_namesearch == _this156.techval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this156.techval.push({
                    name: response.res[i].tech_namesearch,
                    val: response.res[i].tech_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].parent_name_search != "") {
                for (var j in _this156.parentnameval) {
                  if (response.res[i].parent_namesearch == _this156.parentnameval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this156.parentnameval.push({
                    name: response.res[i].parent_namesearch,
                    val: response.res[i].parent_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].doctor_state_search != "") {
                for (var j in _this156.doctorstate) {
                  if (response.res[i].doctor_state == _this156.doctorstate[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this156.doctorstate.push({
                    name: response.res[i].doctor_state,
                    val: response.res[i].doctor_state_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].doctor_city_search != "") {
                for (var j in _this156.doctorcity) {
                  if (response.res[i].doctor_city == _this156.doctorcity[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this156.doctorcity.push({
                    name: response.res[i].doctor_city,
                    val: response.res[i].doctor_city_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].patient_city_search != "") {
                for (var j in _this156.patientcity) {
                  if (response.res[i].patient_city == _this156.patientcity[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this156.patientcity.push({
                    name: response.res[i].patient_city,
                    val: response.res[i].patient_city_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].patient_state_search != "") {
                for (var j in _this156.patientstate) {
                  if (response.res[i].patient_state == _this156.patientstate[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this156.patientstate.push({
                    name: response.res[i].patient_state,
                    val: response.res[i].patient_state_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].doctor_ofiice_name_search != "") {
                for (var j in _this156.docofficeval) {
                  if (response.res[i].doctor_ofiice_namesearch == _this156.docofficeval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this156.docofficeval.push({
                    name: response.res[i].doctor_ofiice_namesearch,
                    val: response.res[i].doctor_ofiice_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }
          }, function (error) {
            console.log('Oooops!');
          });
        }
      }]);

      return DiagnosticAdminDashboardComponent;
    }();

    DiagnosticAdminDashboardComponent.ctorParameters = function () {
      return [{
        type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__["HttpServiceService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_6__["MatDialog"]
      }, {
        type: ngx_device_detector__WEBPACK_IMPORTED_MODULE_7__["DeviceDetectorService"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_6__["MatSnackBar"]
      }];
    };

    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_paginator__WEBPACK_IMPORTED_MODULE_5__["MatPaginator"], {
      "static": false
    })], DiagnosticAdminDashboardComponent.prototype, "paginatorAll", void 0);
    DiagnosticAdminDashboardComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-diagnostic-admin-dashboard',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./diagnostic-admin-dashboard.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/diagnostic-admin/diagnostic-admin-dashboard/diagnostic-admin-dashboard.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./diagnostic-admin-dashboard.component.css */
      "./src/app/components/diagnostic-admin/diagnostic-admin-dashboard/diagnostic-admin-dashboard.component.css"))["default"]]
    })], DiagnosticAdminDashboardComponent);
    /***/
  },

  /***/
  "./src/app/components/diagnostic-admin/diagnostic-admin-footer/diagnostic-admin-footer.component.css":
  /*!***********************************************************************************************************!*\
    !*** ./src/app/components/diagnostic-admin/diagnostic-admin-footer/diagnostic-admin-footer.component.css ***!
    \***********************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsDiagnosticAdminDiagnosticAdminFooterDiagnosticAdminFooterComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = ".footer_section{ display: block; border-top: 1px solid #c7c7c7; margin-top: 30px; background: #e0e5eb; padding: 10px; }\n.footer_section .footer_content{ width: 600px; padding: 0 16px; margin: 0 auto; display: block; text-align: center; }\n.footer_section .footer_content .link{ margin-top: 10px; display: block;  }\n.footer_section .footer_content .link a:nth-of-type(1){ border-right: 1px solid #797979; padding-right: 5px; }\n.footer_section .footer_content .link a, .footer_section .footer_content p{ font-size: 16px; font-family: \"AvenirLight\"; color: #797979; text-decoration: none;}\n.footer_content p{ margin: 0; margin-bottom: 5px; }\n@media screen and (max-width: 668px){\n  .footer_section .footer_content { width: auto; }\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kaWFnbm9zdGljLWFkbWluL2RpYWdub3N0aWMtYWRtaW4tZm9vdGVyL2RpYWdub3N0aWMtYWRtaW4tZm9vdGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCLGNBQWMsRUFBRSw2QkFBNkIsRUFBRSxnQkFBZ0IsRUFBRSxtQkFBbUIsRUFBRSxhQUFhLEVBQUU7QUFDdEgsaUNBQWlDLFlBQVksRUFBRSxlQUFlLEVBQUUsY0FBYyxFQUFFLGNBQWMsRUFBRSxrQkFBa0IsRUFBRTtBQUNwSCx1Q0FBdUMsZ0JBQWdCLEVBQUUsY0FBYyxHQUFHO0FBQzFFLHdEQUF3RCwrQkFBK0IsRUFBRSxrQkFBa0IsRUFBRTtBQUM3Ryw0RUFBNEUsZUFBZSxFQUFFLDBCQUEwQixFQUFFLGNBQWMsRUFBRSxxQkFBcUIsQ0FBQztBQUM3SixtQkFBbUIsU0FBUyxFQUFFLGtCQUFrQixFQUFFO0FBR3BEO0VBQ0Usa0NBQWtDLFdBQVcsRUFBRTtBQUNqRCIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGlhZ25vc3RpYy1hZG1pbi9kaWFnbm9zdGljLWFkbWluLWZvb3Rlci9kaWFnbm9zdGljLWFkbWluLWZvb3Rlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvb3Rlcl9zZWN0aW9ueyBkaXNwbGF5OiBibG9jazsgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNjN2M3Yzc7IG1hcmdpbi10b3A6IDMwcHg7IGJhY2tncm91bmQ6ICNlMGU1ZWI7IHBhZGRpbmc6IDEwcHg7IH1cbi5mb290ZXJfc2VjdGlvbiAuZm9vdGVyX2NvbnRlbnR7IHdpZHRoOiA2MDBweDsgcGFkZGluZzogMCAxNnB4OyBtYXJnaW46IDAgYXV0bzsgZGlzcGxheTogYmxvY2s7IHRleHQtYWxpZ246IGNlbnRlcjsgfVxuLmZvb3Rlcl9zZWN0aW9uIC5mb290ZXJfY29udGVudCAubGlua3sgbWFyZ2luLXRvcDogMTBweDsgZGlzcGxheTogYmxvY2s7ICB9XG4uZm9vdGVyX3NlY3Rpb24gLmZvb3Rlcl9jb250ZW50IC5saW5rIGE6bnRoLW9mLXR5cGUoMSl7IGJvcmRlci1yaWdodDogMXB4IHNvbGlkICM3OTc5Nzk7IHBhZGRpbmctcmlnaHQ6IDVweDsgfVxuLmZvb3Rlcl9zZWN0aW9uIC5mb290ZXJfY29udGVudCAubGluayBhLCAuZm9vdGVyX3NlY3Rpb24gLmZvb3Rlcl9jb250ZW50IHB7IGZvbnQtc2l6ZTogMTZweDsgZm9udC1mYW1pbHk6IFwiQXZlbmlyTGlnaHRcIjsgY29sb3I6ICM3OTc5Nzk7IHRleHQtZGVjb3JhdGlvbjogbm9uZTt9XG4gIC5mb290ZXJfY29udGVudCBweyBtYXJnaW46IDA7IG1hcmdpbi1ib3R0b206IDVweDsgfVxuXG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDY2OHB4KXtcbiAgLmZvb3Rlcl9zZWN0aW9uIC5mb290ZXJfY29udGVudCB7IHdpZHRoOiBhdXRvOyB9XG59XG4iXX0= */";
    /***/
  },

  /***/
  "./src/app/components/diagnostic-admin/diagnostic-admin-footer/diagnostic-admin-footer.component.ts":
  /*!**********************************************************************************************************!*\
    !*** ./src/app/components/diagnostic-admin/diagnostic-admin-footer/diagnostic-admin-footer.component.ts ***!
    \**********************************************************************************************************/

  /*! exports provided: DiagnosticAdminFooterComponent */

  /***/
  function srcAppComponentsDiagnosticAdminDiagnosticAdminFooterDiagnosticAdminFooterComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DiagnosticAdminFooterComponent", function () {
      return DiagnosticAdminFooterComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");

    var DiagnosticAdminFooterComponent = /*#__PURE__*/function () {
      function DiagnosticAdminFooterComponent() {
        _classCallCheck(this, DiagnosticAdminFooterComponent);

        this.htmlData = {};
        this.htmlData["year"] = new Date().getFullYear();
      }

      _createClass(DiagnosticAdminFooterComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }]);

      return DiagnosticAdminFooterComponent;
    }();

    DiagnosticAdminFooterComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-diagnostic-admin-footer',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./diagnostic-admin-footer.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/diagnostic-admin/diagnostic-admin-footer/diagnostic-admin-footer.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./diagnostic-admin-footer.component.css */
      "./src/app/components/diagnostic-admin/diagnostic-admin-footer/diagnostic-admin-footer.component.css"))["default"]]
    })], DiagnosticAdminFooterComponent);
    /***/
  },

  /***/
  "./src/app/components/diagnostic-admin/diagnostic-admin-header/diagnostic-admin-header.component.css":
  /*!***********************************************************************************************************!*\
    !*** ./src/app/components/diagnostic-admin/diagnostic-admin-header/diagnostic-admin-header.component.css ***!
    \***********************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsDiagnosticAdminDiagnosticAdminHeaderDiagnosticAdminHeaderComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "/* header css */\n\n.techdashboard_header { height: auto; padding: 0; background: #fff; box-shadow: 0px 2px 7px 2px #b7b7b7; margin: 20px 0; }\n\n.techdashboard_header .header_wrapper{ width: 1400px; margin: 0 auto; display: flex; align-items: center; justify-content: space-between;}\n\n.techdashboard_header .logo_wrapper { max-width: 160px; display: block; cursor: pointer; flex: none; }\n\n.techdashboard_header .logo_wrapper:focus { outline: none; border: none; }\n\n.techdashboard_header .logo_wrapper img { max-width: 100%; vertical-align: middle; }\n\n.techdashboard_header .quotation { margin-bottom: 0px; }\n\n.techdashboard_header .quotation p { font-family: \"RobotoMedium\"; font-size: 30px; color: #002035; text-transform: uppercase; margin: 0; }\n\n.techdashboard_header .profile_section button { padding-top: 8px; }\n\n.techdashboard_header .profile_section {  display: flex;  border-left: 1px solid #ada9a9;  padding-left: 5px;  margin-bottom: 0;  justify-content: center;  align-items: center; }\n\n.techdashboard_header .profile_section .username { padding-right: 10px;\n  display: block;\n  font-family: \"AvenirRoman\";\n  font-size: 16px;\n  color: #1f1f1f;}\n\n.techdashboard_header .quotation .mat-list-base { display: flex; padding-top: 0; }\n\n/* .techdashboard_header .quotation .mat-list-base .mat-list-item:before {\n  content: \"\";\n  left: -15px;\n  width: 2px;\n  height: 15px;\n  background: #1c1c1c;\n  display: inline-block;\n  position: absolute;\n  top: 35%;\n} */\n\n.techdashboard_header .quotation .mat-nav-list .mat-list-item { margin: 0; position: relative; font-family: \"AvenirMedium\"; font-size: 16px; color: #767676;}\n\n.active { color: #000000!important;  /* border-bottom: 3px solid #fecb00; position: relative; */}\n\n.active::before{ content: ''; width: 100%; height: 4px; background: #fecb00; position: absolute; bottom: -25px; }\n\n/*End header css */\n\n.togle_menu { display: none;}\n\n.sticky { position: fixed; top: 0; margin: 0; z-index: 1; }\n\n@media screen and (max-width: 1540px) {\n  .techdashboard_header .header_wrapper { width: 90%; }\n\n}\n\n@media screen and (max-width: 1500px) {\n  .techdashboard_header .quotation .mat-nav-list .mat-list-item {\n    margin: 0px;\n    position: relative;\n  }\n  .techdashboard_header .quotation p {\n    font-size: 22px;\n  }\n  .content_wrapper .itemsection {\n    padding-bottom: 36px;\n  }\n  .techdashboard_header .logo_wrapper { max-width: 120px; }\n  .active::before { bottom: -13px; }\n}\n\n@media screen and (max-width: 1440px) {\n  .content_wrapper .itemsection p {\n    line-height: 26px;\n    font-size: 24px;\n  }\n}\n\n@media screen and (max-width: 1400px) {\n  .techdashboard_header .header_wrapper {width: 95%; }\n}\n\n@media screen and (max-width: 1366px) {\n  .techdashboard_header .quotation .mat-nav-list .mat-list-item { margin: 0; }\n  .techdashboard_header .quotation .mat-nav-list .mat-list-item{ margin: 0; }\n  .techdashboard_header .profile_section .username { font-size: 14px; }\n  .techdashboard_header .quotation .mat-nav-list .mat-list-item { font-size: 14px; }\n}\n\n@media screen and (max-width: 1280px) {\n  .techdashboard_header .profile_section { padding-left: 8px; }\n  .techdashboard_header .quotation .mat-nav-list .mat-list-item .mat-list-base .mat-list-item .mat-list-item-content {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    box-sizing: border-box;\n    padding: 0 10px;\n    position: relative;\n    height: inherit;\n  }\n}\n\n@media screen and (max-width: 1240px) {\n  .doctor_content_wrapper { background: #012035; }\n  .techdashboard_header .quotation .mat-nav-list .mat-list-item { font-size: 14px; }\n}\n\n@media screen and (max-width: 1199px) {\n  .doctor_content_wrapper .table_structure { width: 100%; }\n  .patient_report_section .button_action { width: 970px; }\n    .patient_report_section .button_action button { width: 475px; font-size: 20px;  padding: 8px; }\n  .content_wrapper {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n    flex-wrap: wrap;\n  }\n  .content_wrapper .itemsection {\n    width: 31%;\n    margin: 15px 12px;\n  }\n  .doctor_content_wrapper {\n    padding: 40px 30px;\n  }\n  .doctor_content_wrapper .mat-card-title {\n    font-size: 36px;\n    margin-bottom: 20px;\n  }\n  .table_structure .mat-list-item .title_n {\n    font-size: 26px;\n  }\n  .table_structure .mat-list-item .title_a {\n    font-size: 22px;\n  }\n  .content_wrapper .itemsection p {\n    width: 100%;\n    font-size: 22px;\n  }\n  .techdashboard_header {\n    height: auto;\n    flex-direction: column;\n  }\n\n}\n\n@media screen and (max-width: 1100px) {\n  .techdashboard_header .header_wrapper { width: 100%; flex-direction: column;   box-sizing: border-box; }\n  .techdashboard_header .logo_wrapper { max-width: 160px; }\n  .techdashboard_header .quotation .mat-nav-list .mat-list-item { font-size: 16px; }\n  .techdashboard_header .profile_section { padding-left: 0; border: none; }\n  .techdashboard_header .profile_section .username { font-size: 16px; }\n  .active {\n    color: #000000!important;\n    border-bottom: 3px solid #fecb00; position: relative;\n  }\n  .active::before{\n    content: ''; display: none;}\n}\n\n@media screen and (max-width: 1080px) {\n  .doctor_content_wrapper {\n    padding: 40px 20px;\n  }\n  .doctor_content_wrapper .mat-card-title {\n    font-size: 32px;\n    margin-bottom: 20px;\n  }\n  .table_structure .mat-list-item .title_n {\n    font-size: 22px;\n  }\n  .table_structure .mat-list-item .title_a {\n    font-size: 20px;\n  }\n}\n\n@media screen and (max-width: 1038px) {\n  .content_wrapper .itemsection {\n    width: 30.9%;\n  }\n}\n\n@media screen and (max-width: 991px) {\n  .doctor_content_wrapper {\n    text-align: center;\n  }\n  .patient_report_section .patient_top_search {\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n  }\n  .patient_report_section .patient_top_search .search_bar {\n    margin-bottom: 20px;\n  }\n  .patient_report_section .button_action button {\n    padding: 8px 30px;\n    margin: 0 10px;\n    width: 100%;\n  }\n  .patient_report_section .button_action {\n    width: auto;\n    margin: 0 5px;\n    display: flex;\n    justify-content: center;\n  }\n  .content_wrapper .itemsection {\n    width: 30.8%;\n  }\n  .table_structure .mat-list-item .title_a {\n    font-size: 16px;\n  }\n  .togle_menu { display: block; margin-top: 10px; background: #f8c655; color: #fff; position: absolute; right: 20px; min-width: auto; }\n  .techdashboard_header .quotation { display: none; width: 100%; background: #ffd06f;}\n  .techdashboard_header .quotation .mat-list-base { display: block; }\n  .techdashboard_header .quotation .mat-nav-list .mat-list-item { margin: 0;\n    align-items: center;\n    justify-content: center;\n    display: flex;\n    background: #fff3da;\n    margin: 1px 0;\n  }\n  .techdashboard_header .quotation .mat-nav-list .mat-list-item:nth-child(1) { margin-top: 0; }\n  .techdashboard_header .quotation .mat-list-base .mat-list-item:before {\n    content: \"\";\n    left: -15px;\n    width: 2px;\n    height: 15px;\n    background: #1c1c1c;\n    display: inline-block;\n    position: absolute;\n    top: 35%;\n    display: none;\n  }\n}\n\n@media screen and (max-width: 970px) {\n  .patient_report_section .button_action button {\n    width: auto;\n  }\n  .table_structure .mat-list-item .title_n {\n    font-size: 18px;\n  }\n  .one {\n    background: linear-gradient(100deg, #f9c856, #dd671d);\n  }\n  .two {\n    background: linear-gradient(100deg, #0973d1, #05335a);\n  }\n  .three {\n    background: linear-gradient(100deg, #44cf80, #26a555);\n  }\n}\n\n@media screen and (max-width: 950px) {\n  .content_wrapper .itemsection {\n    width: 30.8%;\n  }\n  .content_wrapper .itemsection p {\n    font-size: 20px;\n  }\n  .table_structure .mat-list-base .mat-list-item, .mat-list-base .mat-list-option {\n    margin-bottom: 16px;\n  }\n}\n\n@media screen and (max-width: 850px) {\n  .content_wrapper .itemsection {\n    width: 30.2%;\n  }\n  /* hiding searchbar */\n  .patient_report_section .patient_top_search .search_bar {\n    margin-bottom: 20px;\n    display: none;\n  }\n  .techdashboard_header {\n    padding: 0 16px;\n    flex-direction: column;\n  }\n}\n\n@media screen and (max-width: 768px) {\n  .content_wrapper .itemsection {\n    width: 100%;\n    margin: 16px;\n    margin-bottom: 0;\n  }\n  .content_wrapper .itemsection:nth-last-child(1) {\n    margin-bottom: 16px;\n  }\n  .patient_report_section .button_action {\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n  }\n  .patient_report_section .button_action button {\n    margin-bottom: 16px;\n    word-break: break-word;\n    white-space: normal;\n    line-height: 22px;\n  }\n  .techdashboard_header {\n    padding: 0 16px;\n  }\n  .techdashboard_header .quotation p {\n    margin: 16px 0;\n  }\n  .doctor_content_wrapper {\n    padding: 20px 0px;\n  }\n  .table_structure .mat-list-item .title_a {\n    font-size: 14px;\n  }\n  .doctor_content_wrapper .mat-card-title {\n    font-size: 28px;\n    margin-bottom: 5px;\n    text-align: left;\n    padding: 0 16px;\n  }\n  .table_structure .mat-list-base .mat-list-item, .mat-list-base .mat-list-option {\n    margin-bottom: 16px;\n  }\n  .footer_section .footer_content {\n    width: auto;\n  }\n  .table_structure .mat-list-base .mat-list-item, .mat-list-base .mat-list-option {\n    display: flex;\n    text-align: left;\n  }\n}\n\n@media screen and (max-width: 480px) {\n  .doctor_content_wrapper .mat-card-title {\n    font-size: 24px;\n  }\n  .patient_report_section .patient_top_search h1 {\n    font-size: 24px;\n  }\n}\n\n.danger {\n  display: block!important;\n  margin-top: 20px;\n  transition: 5px ease-out;\n}\n\n/*# sourceMappingURL=data:application/json;base64, */";
    /***/
  },

  /***/
  "./src/app/components/diagnostic-admin/diagnostic-admin-header/diagnostic-admin-header.component.ts":
  /*!**********************************************************************************************************!*\
    !*** ./src/app/components/diagnostic-admin/diagnostic-admin-header/diagnostic-admin-header.component.ts ***!
    \**********************************************************************************************************/

  /*! exports provided: DiagnosticAdminHeaderComponent */

  /***/
  function srcAppComponentsDiagnosticAdminDiagnosticAdminHeaderDiagnosticAdminHeaderComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DiagnosticAdminHeaderComponent", function () {
      return DiagnosticAdminHeaderComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _class_common_common_function__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../class/common/common-function */
    "./src/app/class/common/common-function.ts");
    /* harmony import */


    var _common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../../common/dialog-box/dialog-box.component */
    "./src/app/components/common/dialog-box/dialog-box.component.ts");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");

    var DiagnosticAdminHeaderComponent = /*#__PURE__*/function () {
      function DiagnosticAdminHeaderComponent(cookies, router, commonFunction, dialog) {
        _classCallCheck(this, DiagnosticAdminHeaderComponent);

        this.cookies = cookies;
        this.router = router;
        this.commonFunction = commonFunction;
        this.dialog = dialog;
        this.status = true;
        this.user_data = {};
        this.loader = true;
        this.main_user = {
          flag: false,
          data: {},
          buttonText: "Rerurn to Admin"
        }; // sticky section

        this.isSticky = false;
        window.scroll(0, 0);
        var allData = {};
        allData = this.cookies.getAll();

        if (typeof allData.main_user != 'undefined') {
          this.main_user.data = allData.main_user;
          this.main_user.flag = true;
        }

        this.user_data = JSON.parse(allData.user_details);
        this.user_cookie = cookies.get('jwtToken');
      }

      _createClass(DiagnosticAdminHeaderComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          /* Set Meta Data */
          this.commonFunction.setTitleMetaTags();
        }
        /**logout function start here**/

      }, {
        key: "logout",
        value: function logout() {
          var _this157 = this;

          this.cookies["delete"]('jwtToken');
          this.cookies["delete"]('user_details');
          this.cookies.deleteAll();
          setTimeout(function () {
            _this157.router.navigateByUrl('logout');
          }, 1000);
        }
        /**logout function end here**/
        // don't remove it's for menu toggleing

      }, {
        key: "menuFunction",
        value: function menuFunction() {
          this.status = !this.status;
        } //  @HostListener('window:scroll', ['$event'])
        //  checkScroll() {
        //    this.isSticky = window.pageYOffset >= 20;
        //  }

      }, {
        key: "returnToAdmin",
        value: function returnToAdmin() {
          var _this158 = this;

          var modalData = {
            panelClass: 'bulkupload-dialog',
            data: {
              header: "Alert",
              message: "Do you want to return to admin?",
              button1: {
                text: "Yes"
              },
              button2: {
                text: "No"
              }
            }
          };
          this.openModal(modalData);
          this.dialogRef.afterClosed().subscribe(function (result) {
            switch (result) {
              case "Yes":
                var jwtToken = _this158.cookies.get('jwtToken');

                var allData = _this158.cookies.getAll();

                var main_user = JSON.parse(allData.main_user);

                var secret = _this158.cookies.get('secret'); // Delete Cookie


                _this158.cookies["delete"]('user_details');

                _this158.cookies["delete"]('main_user');

                _this158.cookies["delete"]('doctor_signature');

                _this158.cookies["delete"]('secret');

                _this158.cookies["delete"]('jwtToken');

                _this158.cookies.deleteAll('/diagnostic_admin');

                setTimeout(function () {
                  // Reset again Cookie
                  _this158.cookies.set('jwtToken', jwtToken);

                  _this158.cookies.set('user_details', JSON.stringify(main_user));

                  _this158.cookies.set('secret', JSON.stringify(secret)); // Redirect to page


                  _this158.router.navigateByUrl("admin/dashboard");
                }, 500);
                break;

              case "No":
                _this158.dialogRef.close();

                break;
            }
          });
        }
      }, {
        key: "openModal",
        value: function openModal(data) {
          this.dialogRef = this.dialog.open(_common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_5__["DialogBoxComponent"], data);
        }
      }]);

      return DiagnosticAdminHeaderComponent;
    }();

    DiagnosticAdminHeaderComponent.ctorParameters = function () {
      return [{
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"]
      }, {
        type: _class_common_common_function__WEBPACK_IMPORTED_MODULE_4__["CommonFunction"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_6__["MatDialog"]
      }];
    };

    DiagnosticAdminHeaderComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-diagnostic-admin-header',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./diagnostic-admin-header.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/diagnostic-admin/diagnostic-admin-header/diagnostic-admin-header.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./diagnostic-admin-header.component.css */
      "./src/app/components/diagnostic-admin/diagnostic-admin-header/diagnostic-admin-header.component.css"))["default"]]
    })], DiagnosticAdminHeaderComponent);
    /***/
  },

  /***/
  "./src/app/components/distributors/distributors-dashboard/distributors-dashboard.component.css":
  /*!*****************************************************************************************************!*\
    !*** ./src/app/components/distributors/distributors-dashboard/distributors-dashboard.component.css ***!
    \*****************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsDistributorsDistributorsDashboardDistributorsDashboardComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGlzdHJpYnV0b3JzL2Rpc3RyaWJ1dG9ycy1kYXNoYm9hcmQvZGlzdHJpYnV0b3JzLWRhc2hib2FyZC5jb21wb25lbnQuY3NzIn0= */";
    /***/
  },

  /***/
  "./src/app/components/distributors/distributors-dashboard/distributors-dashboard.component.ts":
  /*!****************************************************************************************************!*\
    !*** ./src/app/components/distributors/distributors-dashboard/distributors-dashboard.component.ts ***!
    \****************************************************************************************************/

  /*! exports provided: DistributorsDashboardComponent */

  /***/
  function srcAppComponentsDistributorsDistributorsDashboardDistributorsDashboardComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DistributorsDashboardComponent", function () {
      return DistributorsDashboardComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/material/paginator */
    "./node_modules/@angular/material/esm2015/paginator.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var ngx_device_detector__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ngx-device-detector */
    "./node_modules/ngx-device-detector/fesm2015/ngx-device-detector.js");
    /* harmony import */


    var moment__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! moment */
    "./node_modules/moment/moment.js");
    /* harmony import */


    var moment__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_8__);
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ../../../../environments/environment */
    "./src/environments/environment.ts");

    var moment = moment__WEBPACK_IMPORTED_MODULE_8__;

    var DistributorsDashboardComponent = /*#__PURE__*/function () {
      // lib list end
      function DistributorsDashboardComponent(router, cookieService, http, activatedRoute, dialog, deviceService, matSnackBar) {
        var _this159 = this;

        _classCallCheck(this, DistributorsDashboardComponent);

        this.router = router;
        this.cookieService = cookieService;
        this.http = http;
        this.activatedRoute = activatedRoute;
        this.dialog = dialog;
        this.deviceService = deviceService;
        this.matSnackBar = matSnackBar;
        this.loginUserData = {};
        this.jwtToken = "";
        this.htmlText = {
          headerText: "Total Number of Report Processed"
        };
        this.shareDetails = {
          baseUrl: _environments_environment__WEBPACK_IMPORTED_MODULE_9__["environment"].doctorSignUpBaseUrl,
          userId: ""
        };
        this.allResolveData = {};
        this.uploadedStatusArray = [];
        this.processedStatusArray = [];
        this.signedStatusArray = [];
        this.billerStatusArray = [];
        this.searchJson = {
          doctorName: "",
          patientName: "",
          status: "",
          dateRange: ""
        };
        this.allDataList = []; // Lib list

        this.allBillerData = [];
        this.listFlag = true;
        this.updatetable = false;
        this.billerData_count = 0;
        this.allUserData_skip = ["_id", "report_file_type", "tech_id", "tech_email", "batch_name", "report_type", "status", "file_basepath", "file_bucketname", "file_name", "file_original_name", "file_type", "converted_image", "images", "patient_details", "patient_name_search", "report_life_circle", "note", "additional_potential_health_risks", "cpt_codes", "created_at"];
        this.editUrl = "admin/biller-management/edit";
        this.libdata = {
          basecondition: {},
          updateendpoint: 'status-update-doctor',
          updateendpointmany: 'status-update-biller',
          custombuttons: [{
            label: "View Report",
            route: "distributors/view-patient-record/",
            type: 'internallink',
            param: ['_id']
          }, {
            label: "Download Report",
            link: _environments_environment__WEBPACK_IMPORTED_MODULE_9__["environment"].s3bucket + "reports",
            type: 'externallink',
            paramtype: 'angular',
            param: ['download_file_name']
          }, {
            label: "Tech Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-tech-details',
            datafields: ['first name', 'last name', 'email', 'phone', 'address', 'city', 'state', 'zip'],
            param: 'id',
            headermessage: 'Tech Information'
          }, {
            label: "View Codes",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-codes-details',
            datafields: ['Additional Potential Health Risks', 'CPT Codes', 'ICD Codes'],
            param: 'id',
            headermessage: 'Associated Codes'
          }, {
            label: "Doctor Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-doctor-details',
            datafields: ['firstname', 'lastname', 'email', 'fax', 'Practice Name', 'NPI', 'phone', 'address', 'city', 'state', 'zip'],
            param: 'id',
            headermessage: 'Doctor Information'
          }, {
            label: "Doctor Office Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-doctor-office-details',
            datafields: ['center name', 'first name', 'last name', 'email', 'phone', 'address', 'city', 'state', 'zip'],
            param: 'id',
            headermessage: 'Doctor Office Info'
          }, {
            label: "Send to Biller",
            type: 'action',
            datatype: 'api',
            endpoint: 'status-parent-signed',
            cond: 'status',
            condval: 14,
            param: 'id',
            headermessage: 'Status Update'
          }],
          hideeditbutton: true,
          hidedeletebutton: true,
          hidestatustogglebutton: true,
          hidedeletemany: true,
          hideviewbutton: true,
          tableheaders: ["patient_name", "status_text", "created_at_datetime", "cpt_addl", "general_details"]
        };
        this.allUserData_modify_header = {
          "general_details": "Related Info",
          "patient_name": "Patient Name",
          "status_text": "Status",
          "created_at_datetime": "Report Added",
          "cpt_addl": "CPT/ Addl Hrisk C"
        };
        this.UpdateEndpoint = "addorupdatedata";
        this.deleteEndpoint = "deletesingledata";
        this.apiUrl = _environments_environment__WEBPACK_IMPORTED_MODULE_9__["environment"].apiBaseUrl;
        this.tableName = "data_pece";
        this.datacollection = 'dashboard-report-data-list';
        this.sortdata = {
          "type": 'desc',
          "field": 'patient_name',
          "options": ['patient_name', 'created_at_datetime']
        };
        this.limitcond = {
          "limit": 10,
          "skip": 0,
          "pagecount": 1
        };
        this.previewModal_detail_skip = ['_id', 'user_type', 'status', 'password', 'created_at'];
        this.status = [{
          val: 11,
          'name': 'Biller Admin Approved'
        }, {
          val: 12,
          'name': 'Biller Admin Not Approved'
        }, {
          val: 13,
          'name': "Biller Admin Hold"
        }, {
          val: 14,
          'name': "Doctor Signed"
        }, {
          val: 15,
          'name': "Sent to Biller"
        }, {
          val: 16,
          "name": "Report Downloaded"
        }];
        this.parent_type = [{
          val: "admin",
          'name': 'Admin'
        }, {
          val: "diagnostic_admin",
          'name': 'Diagnostic Admin'
        }, {
          val: "distributors",
          'name': 'Distributor'
        }, {
          val: "doctor_group",
          'name': 'Doctor Group'
        }];
        this.cptcodes = [{
          val: "95923",
          'name': '95923'
        }, {
          val: "95943",
          'name': '95943'
        }, {
          val: "95921",
          'name': "95921"
        }, {
          val: "93923",
          'name': "93923"
        }, {
          val: "93922",
          'name': "93922"
        }];
        this.report_type = [{
          val: "RM-3A",
          'name': 'RM-3A'
        }, {
          val: "TM FLOW V3",
          'name': 'TM FLOW V3'
        }, {
          val: "TM FLOW V4",
          'name': 'TM FLOW V4'
        }, {
          val: "CMAT with BP Cuffs",
          'name': "CMAT with BP Cuffs"
        }];
        this.SearchingEndpoint = "datalist";
        this.authval = [];
        this.docofficeval = [];
        this.techval = [];
        this.parentnameval = [];
        this.doctorcity = [];
        this.doctorstate = [];
        this.patientcity = [];
        this.patientstate = [];
        this.SearchingSourceName = "data_biller_list";
        this.search_settings = {
          selectsearch: [{
            label: 'Search By Report Type',
            field: 'report_file_type',
            values: this.report_type
          }, {
            label: "Search By Doctor",
            field: 'doc_name_search',
            values: this.authval
          }, {
            label: "Search By Tech",
            field: 'tech_name_search',
            values: this.techval
          }, {
            label: "Search By Doctor Office",
            field: 'doctor_ofiice_name_search',
            values: this.docofficeval
          }, {
            label: "Search By Doctor City",
            field: 'doctor_city_search',
            values: this.doctorcity
          }, {
            label: "Search By Doctor State",
            field: 'doctor_state_search',
            values: this.doctorstate
          }, {
            label: "Search By Patient City",
            field: 'patient_city_search',
            values: this.patientcity
          }, {
            label: "Search By Patient State",
            field: 'patient_state_search',
            values: this.patientstate
          }],
          datesearch: [{
            startdatelabel: "Start Date",
            enddatelabel: "End Date",
            submit: "Search",
            field: "created_at_datetime"
          }],
          textsearch: [{
            label: "Search By Patient Name",
            field: 'patient_name_search'
          }],
          search: [{
            label: 'Search By CPT Codes',
            field: 'cpt_codes_search',
            values: this.cptcodes
          }]
        };
        this.loginUserData["user_details"] = JSON.parse(cookieService.get('user_details'));
        this.loginUserData["jwtToken"] = cookieService.get('jwtToken');
        /* Get Auth Token */

        this.jwtToken = cookieService.get('jwtToken');
        /* Get resolve data */

        this.activatedRoute.data.subscribe(function (resolveData) {
          _this159.allResolveData.dashboardCount = resolveData.dataCount.data;
        }); // set liblist base condition

        this.libdata.basecondition.parent_id = this.loginUserData.user_details._id;
        this.shareDetails.userId = this.loginUserData.user_details._id; // call to load datalist

        this.viewAllButton(this.htmlText.headerText);
      }

      _createClass(DistributorsDashboardComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          // load data for search filter
          this.getSearchData();
        }
      }, {
        key: "ngAfterViewInit",
        value: function ngAfterViewInit() {}
      }, {
        key: "viewAllButton",
        value: function viewAllButton() {
          var _this160 = this;

          var flag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
          this.htmlText.headerText = flag;
          this.billerData_count = 0;
          this.allBillerData = []; // lib list

          var data = {
            "condition": {
              "limit": 10,
              "skip": 0
            },
            "sort": {
              "field": "patient_name",
              "type": "desc"
            },
            "searchcondition": {
              "parent_id": this.loginUserData.user_details._id
            },
            "secretkey": "na"
          };

          switch (flag) {
            case 'Total Number of Reports Added':
              data.searchcondition.report_type = {
                $exists: true
              };
              data.searchcondition.status = {
                $gte: 3
              };
              this.libdata.basecondition.status = {
                $gte: 3
              }; // Add status search filed

              this.deleteStatusSearchField();
              var searchData = this.search_settings.selectsearch;
              searchData.push({
                label: 'Search By Status',
                field: 'status',
                values: this.status
              });
              this.search_settings.selectsearch = [];
              this.search_settings.selectsearch = searchData;
              break;

            case 'Total Number of Report Processed':
              data.searchcondition.report_type = {
                $exists: true
              };
              data.searchcondition.status = {
                $gte: 11
              }; // this.libdata.basecondition.status = { $gte: 11 };
              // Add status search filed

              this.deleteStatusSearchField();
              var searchData = this.search_settings.selectsearch;
              searchData.push({
                label: 'Search By Status',
                field: 'status',
                values: this.status
              });
              this.search_settings.selectsearch = [];
              this.search_settings.selectsearch = searchData;
              break;

            case 'Total Number of Report Signed':
              data.searchcondition.report_type = {
                $exists: true
              };
              data.searchcondition.status = {
                $eq: 14
              };
              this.libdata.basecondition.status = {
                $eq: 14
              }; // delete status filter

              this.deleteStatusSearchField();
              break;

            case 'Sent to Biller':
              data.searchcondition.report_type = {
                $exists: true
              };
              data.searchcondition.status = {
                $eq: 15
              };
              this.libdata.basecondition.status = {
                $eq: 15
              }; // delete status filter

              this.deleteStatusSearchField();
              break;

            case 'Reports Downloaded':
              data.searchcondition.report_type = {
                $exists: true
              };
              data.searchcondition.status = {
                $eq: 16
              };
              this.libdata.basecondition.status = {
                $eq: 16
              }; // delete status filter

              this.deleteStatusSearchField();
              break;

            case 'Reports Pending Sing':
              data.searchcondition.report_type = {
                $exists: true
              };
              data.searchcondition.status = {
                $eq: 11
              };
              this.libdata.basecondition.status = {
                $eq: 11
              };
              this.deleteStatusSearchField();
              break;
          } // API Hit


          this.http.httpViaPost('dashboard-report-data-list', data).subscribe(function (res) {
            _this160.allBillerData = res.results.res;
            _this160.billerData_count = res.results.data_count;
          }, function (error) {
            console.log('Oooops!');
          });
        }
      }, {
        key: "downloadReport",
        value: function downloadReport(report) {
          var _this161 = this;

          if (typeof report.download_count == "undefined") {
            report.download_count = 1;
          } else {
            report.download_count = report.download_count + 1;
          }
          /* Collect User Information for Download record */


          var deviceInfo = this.deviceService.getDeviceInfo();
          deviceInfo["isMobile"] = this.deviceService.isMobile();
          deviceInfo["isTablet"] = this.deviceService.isTablet();
          deviceInfo["isDesktop"] = this.deviceService.isDesktop();
          /* Set downloader information */

          var userDetails = {
            id: this.loginUserData.user_details._id,
            user_type: this.loginUserData.user_details.user_type
          };
          var postData = {
            "source": "report_download",
            "data": {
              "report_id": report._id,
              "biller_id": this.loginUserData.user_details._id,
              "tech_id": report.tech_id,
              "doctor_id": report.doctor_id,
              "ip": this.htmlText.ip,
              "download_attempt": 1,
              "downloader_information": userDetails,
              "device_information": deviceInfo
            },
            "sourceobj": ["report_id", "biller_id", "tech_id", "doctor_id"],
            "download_count": report.download_count,
            "token": this.loginUserData.jwtToken
          };
          this.http.httpViaPost("addorupdatedata", postData).subscribe(function (response) {
            if (response.status == 'success') {
              _this161.matSnackBar.open("Start downloading.", "Ok", {
                duration: 3000
              });

              window.open(report.file_path, "_blank");

              _this161.viewAllButton(_this161.htmlText.headerText);
            } else {
              _this161.matSnackBar.open("Some error occord. Please try again.", "Ok", {
                duration: 3000
              });
            }
          });
        }
      }, {
        key: "deleteStatusSearchField",
        value: function deleteStatusSearchField() {
          // Delete Status Filter Field
          var searchData = this.search_settings.selectsearch;

          for (var loop in searchData) {
            if (searchData[loop].label == 'Search By Status') {
              searchData.splice(loop, 1);
            }
          }

          this.search_settings.selectsearch = [];
          this.search_settings.selectsearch = searchData;
        }
      }, {
        key: "getSearchData",
        value: function getSearchData() {
          var _this162 = this;

          var data = {
            "source": "patient_data_desc_patient_name",
            "condition": {
              status: {
                "$gt": 10
              },
              parent_id_object: this.loginUserData.user_details._id
            },
            "token": this.jwtToken
          };
          this.http.httpViaPost("datalist", data).subscribe(function (response) {
            var start = false;
            var count = 0;

            for (var i in response.res) {
              if (response.res[i].doc_name_search != "") {
                for (var j in _this162.authval) {
                  if (response.res[i].doc_name == _this162.authval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this162.authval.push({
                    name: response.res[i].doc_name,
                    val: response.res[i].doc_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].tech_name_search != "") {
                for (var j in _this162.techval) {
                  if (response.res[i].tech_namesearch == _this162.techval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this162.techval.push({
                    name: response.res[i].tech_namesearch,
                    val: response.res[i].tech_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].parent_name_search != "") {
                for (var j in _this162.parentnameval) {
                  if (response.res[i].parent_namesearch == _this162.parentnameval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this162.parentnameval.push({
                    name: response.res[i].parent_namesearch,
                    val: response.res[i].parent_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].doctor_state_search != "") {
                for (var j in _this162.doctorstate) {
                  if (response.res[i].doctor_state == _this162.doctorstate[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this162.doctorstate.push({
                    name: response.res[i].doctor_state,
                    val: response.res[i].doctor_state_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].doctor_city_search != "") {
                for (var j in _this162.doctorcity) {
                  if (response.res[i].doctor_city == _this162.doctorcity[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this162.doctorcity.push({
                    name: response.res[i].doctor_city,
                    val: response.res[i].doctor_city_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].patient_city_search != "") {
                for (var j in _this162.patientcity) {
                  if (response.res[i].patient_city == _this162.patientcity[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this162.patientcity.push({
                    name: response.res[i].patient_city,
                    val: response.res[i].patient_city_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].patient_state_search != "") {
                for (var j in _this162.patientstate) {
                  if (response.res[i].patient_state == _this162.patientstate[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this162.patientstate.push({
                    name: response.res[i].patient_state,
                    val: response.res[i].patient_state_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].doctor_ofiice_name_search != "") {
                for (var j in _this162.docofficeval) {
                  if (response.res[i].doctor_ofiice_namesearch == _this162.docofficeval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this162.docofficeval.push({
                    name: response.res[i].doctor_ofiice_namesearch,
                    val: response.res[i].doctor_ofiice_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }
          }, function (error) {
            console.log('Oooops!');
          });
        }
      }]);

      return DistributorsDashboardComponent;
    }();

    DistributorsDashboardComponent.ctorParameters = function () {
      return [{
        type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__["HttpServiceService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_6__["MatDialog"]
      }, {
        type: ngx_device_detector__WEBPACK_IMPORTED_MODULE_7__["DeviceDetectorService"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_6__["MatSnackBar"]
      }];
    };

    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_paginator__WEBPACK_IMPORTED_MODULE_5__["MatPaginator"], {
      "static": false
    })], DistributorsDashboardComponent.prototype, "paginatorAll", void 0);
    DistributorsDashboardComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-distributors-dashboard',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./distributors-dashboard.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/distributors/distributors-dashboard/distributors-dashboard.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./distributors-dashboard.component.css */
      "./src/app/components/distributors/distributors-dashboard/distributors-dashboard.component.css"))["default"]]
    })], DistributorsDashboardComponent);
    /***/
  },

  /***/
  "./src/app/components/distributors/distributors-footer/distributors-footer.component.css":
  /*!***********************************************************************************************!*\
    !*** ./src/app/components/distributors/distributors-footer/distributors-footer.component.css ***!
    \***********************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsDistributorsDistributorsFooterDistributorsFooterComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = ".footer_section{ display: block; border-top: 1px solid #c7c7c7; margin:0; margin-top: 30px; background: #e0e5eb; padding: 10px; }\n.footer_section .footer_content{ width: 600px; padding: 0 16px; margin: 0 auto; display: block; text-align: center; }\n.footer_section .footer_content .link{ margin-top: 10px; display: block;  }\n.footer_section .footer_content .link a:nth-of-type(1){ border-right: 1px solid #797979; padding-right: 5px; }\n.footer_section .footer_content .link a, .footer_section .footer_content p{ font-size: 16px; font-family: \"AvenirLight\"; color: #797979; text-decoration: none;}\n.footer_content p{ margin: 0; margin-bottom: 5px; }\n@media screen and (max-width: 668px){\n  .footer_section .footer_content { width: auto; }\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kaXN0cmlidXRvcnMvZGlzdHJpYnV0b3JzLWZvb3Rlci9kaXN0cmlidXRvcnMtZm9vdGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCLGNBQWMsRUFBRSw2QkFBNkIsRUFBRSxRQUFRLEVBQUUsZ0JBQWdCLEVBQUUsbUJBQW1CLEVBQUUsYUFBYSxFQUFFO0FBQ2hJLGlDQUFpQyxZQUFZLEVBQUUsZUFBZSxFQUFFLGNBQWMsRUFBRSxjQUFjLEVBQUUsa0JBQWtCLEVBQUU7QUFDcEgsdUNBQXVDLGdCQUFnQixFQUFFLGNBQWMsR0FBRztBQUMxRSx3REFBd0QsK0JBQStCLEVBQUUsa0JBQWtCLEVBQUU7QUFDN0csNEVBQTRFLGVBQWUsRUFBRSwwQkFBMEIsRUFBRSxjQUFjLEVBQUUscUJBQXFCLENBQUM7QUFDL0osbUJBQW1CLFNBQVMsRUFBRSxrQkFBa0IsRUFBRTtBQUdsRDtFQUNFLGtDQUFrQyxXQUFXLEVBQUU7QUFDakQiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2Rpc3RyaWJ1dG9ycy9kaXN0cmlidXRvcnMtZm9vdGVyL2Rpc3RyaWJ1dG9ycy1mb290ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb290ZXJfc2VjdGlvbnsgZGlzcGxheTogYmxvY2s7IGJvcmRlci10b3A6IDFweCBzb2xpZCAjYzdjN2M3OyBtYXJnaW46MDsgbWFyZ2luLXRvcDogMzBweDsgYmFja2dyb3VuZDogI2UwZTVlYjsgcGFkZGluZzogMTBweDsgfVxuLmZvb3Rlcl9zZWN0aW9uIC5mb290ZXJfY29udGVudHsgd2lkdGg6IDYwMHB4OyBwYWRkaW5nOiAwIDE2cHg7IG1hcmdpbjogMCBhdXRvOyBkaXNwbGF5OiBibG9jazsgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4uZm9vdGVyX3NlY3Rpb24gLmZvb3Rlcl9jb250ZW50IC5saW5reyBtYXJnaW4tdG9wOiAxMHB4OyBkaXNwbGF5OiBibG9jazsgIH1cbi5mb290ZXJfc2VjdGlvbiAuZm9vdGVyX2NvbnRlbnQgLmxpbmsgYTpudGgtb2YtdHlwZSgxKXsgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgIzc5Nzk3OTsgcGFkZGluZy1yaWdodDogNXB4OyB9XG4uZm9vdGVyX3NlY3Rpb24gLmZvb3Rlcl9jb250ZW50IC5saW5rIGEsIC5mb290ZXJfc2VjdGlvbiAuZm9vdGVyX2NvbnRlbnQgcHsgZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogXCJBdmVuaXJMaWdodFwiOyBjb2xvcjogIzc5Nzk3OTsgdGV4dC1kZWNvcmF0aW9uOiBub25lO31cbi5mb290ZXJfY29udGVudCBweyBtYXJnaW46IDA7IG1hcmdpbi1ib3R0b206IDVweDsgfVxuXG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDY2OHB4KXtcbiAgLmZvb3Rlcl9zZWN0aW9uIC5mb290ZXJfY29udGVudCB7IHdpZHRoOiBhdXRvOyB9XG59XG4iXX0= */";
    /***/
  },

  /***/
  "./src/app/components/distributors/distributors-footer/distributors-footer.component.ts":
  /*!**********************************************************************************************!*\
    !*** ./src/app/components/distributors/distributors-footer/distributors-footer.component.ts ***!
    \**********************************************************************************************/

  /*! exports provided: DistributorsFooterComponent */

  /***/
  function srcAppComponentsDistributorsDistributorsFooterDistributorsFooterComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DistributorsFooterComponent", function () {
      return DistributorsFooterComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");

    var DistributorsFooterComponent = /*#__PURE__*/function () {
      function DistributorsFooterComponent() {
        _classCallCheck(this, DistributorsFooterComponent);

        this.htmlData = {};
        this.htmlData["year"] = new Date().getFullYear();
      }

      _createClass(DistributorsFooterComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }]);

      return DistributorsFooterComponent;
    }();

    DistributorsFooterComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-distributors-footer',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./distributors-footer.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/distributors/distributors-footer/distributors-footer.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./distributors-footer.component.css */
      "./src/app/components/distributors/distributors-footer/distributors-footer.component.css"))["default"]]
    })], DistributorsFooterComponent);
    /***/
  },

  /***/
  "./src/app/components/distributors/distributors-header/distributors-header.component.css":
  /*!***********************************************************************************************!*\
    !*** ./src/app/components/distributors/distributors-header/distributors-header.component.css ***!
    \***********************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsDistributorsDistributorsHeaderDistributorsHeaderComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "/* header css */\n\n.techdashboard_header { height: auto; padding: 0; background: #fff; box-shadow: 0px 2px 7px 2px #b7b7b7; margin: 20px 0; }\n\n.techdashboard_header .header_wrapper{ width: 1400px; margin: 0 auto; display: flex; align-items: center; justify-content: space-between;}\n\n.techdashboard_header .logo_wrapper { max-width: 160px; display: block; cursor: pointer; flex: none; }\n\n.techdashboard_header .logo_wrapper:focus { outline: none; border: none; }\n\n.techdashboard_header .logo_wrapper img { max-width: 100%; vertical-align: middle; }\n\n.techdashboard_header .quotation { margin-bottom: 0px; }\n\n.techdashboard_header .quotation p { font-family: \"RobotoMedium\"; font-size: 30px; color: #002035; text-transform: uppercase; margin: 0; }\n\n.techdashboard_header .profile_section button { padding-top: 8px; }\n\n.techdashboard_header .profile_section {  display: flex;  border-left: 1px solid #ada9a9;  padding-left: 5px;  margin-bottom: 0;  justify-content: center;  align-items: center; }\n\n.techdashboard_header .profile_section .username { padding-right: 10px;\n  display: block;\n  font-family: \"AvenirRoman\";\n  font-size: 16px;\n  color: #1f1f1f;}\n\n.techdashboard_header .quotation .mat-list-base { display: flex; padding-top: 0; }\n\n/* .techdashboard_header .quotation .mat-list-base .mat-list-item:before {\n  content: \"\";\n  left: -15px;\n  width: 2px;\n  height: 15px;\n  background: #1c1c1c;\n  display: inline-block;\n  position: absolute;\n  top: 35%;\n} */\n\n.techdashboard_header .quotation .mat-nav-list .mat-list-item { margin: 0; position: relative; font-family: \"AvenirMedium\"; font-size: 16px; color: #767676;}\n\n.active { color: #000000!important;  /* border-bottom: 3px solid #fecb00; position: relative; */}\n\n.active::before{ content: ''; width: 100%; height: 4px; background: #fecb00; position: absolute; bottom: -25px; }\n\n/*End header css */\n\n.togle_menu { display: none;}\n\n.sticky { position: fixed; top: 0; margin: 0; z-index: 1; }\n\n@media screen and (max-width: 1540px) {\n  .techdashboard_header .header_wrapper { width: 90%; }\n\n}\n\n@media screen and (max-width: 1500px) {\n  .techdashboard_header .quotation .mat-nav-list .mat-list-item {\n    margin: 0px;\n    position: relative;\n  }\n  .techdashboard_header .quotation p {\n    font-size: 22px;\n  }\n  .content_wrapper .itemsection {\n    padding-bottom: 36px;\n  }\n  .techdashboard_header .logo_wrapper { max-width: 120px; }\n  .active::before { bottom: -13px; }\n}\n\n@media screen and (max-width: 1440px) {\n  .content_wrapper .itemsection p { line-height: 26px; font-size: 24px; }\n}\n\n@media screen and (max-width: 1400px) {\n  .techdashboard_header .header_wrapper {width: 95%; }\n}\n\n@media screen and (max-width: 1366px) {\n  .techdashboard_header .quotation .mat-nav-list .mat-list-item { margin: 0; font-size:14px; } \n  .techdashboard_header .profile_section .username { font-size: 14px; }\n}\n\n@media screen and (max-width: 1280px) {\n  .techdashboard_header .profile_section { padding-left: 8px; }\n  .techdashboard_header .quotation .mat-nav-list .mat-list-item .mat-list-base .mat-list-item .mat-list-item-content {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    box-sizing: border-box;\n    padding: 0 10px;\n    position: relative;\n    height: inherit;\n  }\n}\n\n@media screen and (max-width: 1240px) {\n  .doctor_content_wrapper { background: #012035; }\n  .techdashboard_header .quotation .mat-nav-list .mat-list-item { font-size: 14px; }\n}\n\n@media screen and (max-width: 1199px) {\n  .doctor_content_wrapper .table_structure { width: 100%; }\n  .patient_report_section .button_action { width: 970px; }\n    .patient_report_section .button_action button { width: 475px; font-size: 20px;  padding: 8px; }\n  .content_wrapper {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n    flex-wrap: wrap;\n  }\n  .content_wrapper .itemsection {\n    width: 31%;\n    margin: 15px 12px;\n  }\n  .doctor_content_wrapper {\n    padding: 40px 30px;\n  }\n  .doctor_content_wrapper .mat-card-title {\n    font-size: 36px;\n    margin-bottom: 20px;\n  }\n  .table_structure .mat-list-item .title_n {\n    font-size: 26px;\n  }\n  .table_structure .mat-list-item .title_a {\n    font-size: 22px;\n  }\n  .content_wrapper .itemsection p {\n    width: 100%;\n    font-size: 22px;\n  }\n  .techdashboard_header {\n    height: auto;\n    flex-direction: column;\n  }\n .techdashboard_header .header_wrapper { width: 100%; flex-direction: column;   box-sizing: border-box; }\n}\n\n@media screen and (max-width: 1100px) {\n \n  .techdashboard_header .logo_wrapper { max-width: 160px; }\n  .techdashboard_header .quotation .mat-nav-list .mat-list-item { font-size: 16px; }\n  .techdashboard_header .profile_section { padding-left: 0; border: none; }\n  .techdashboard_header .profile_section .username { font-size: 16px; }\n  .active {\n    color: #000000!important;\n    border-bottom: 3px solid #fecb00; position: relative;\n  }\n  .active::before{\n    content: ''; display: none;}\n}\n\n@media screen and (max-width: 1080px) {\n  .doctor_content_wrapper {\n    padding: 40px 20px;\n  }\n  .doctor_content_wrapper .mat-card-title {\n    font-size: 32px;\n    margin-bottom: 20px;\n  }\n  .table_structure .mat-list-item .title_n {\n    font-size: 22px;\n  }\n  .table_structure .mat-list-item .title_a {\n    font-size: 20px;\n  }\n}\n\n@media screen and (max-width: 1038px) {\n  .content_wrapper .itemsection {\n    width: 30.9%;\n  }\n}\n\n@media screen and (max-width: 991px) {\n  .doctor_content_wrapper {\n    text-align: center;\n  }\n  .patient_report_section .patient_top_search {\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n  }\n  .patient_report_section .patient_top_search .search_bar {\n    margin-bottom: 20px;\n  }\n  .patient_report_section .button_action button {\n    padding: 8px 30px;\n    margin: 0 10px;\n    width: 100%;\n  }\n  .patient_report_section .button_action {\n    width: auto;\n    margin: 0 5px;\n    display: flex;\n    justify-content: center;\n  }\n  .content_wrapper .itemsection {\n    width: 30.8%;\n  }\n  .table_structure .mat-list-item .title_a {\n    font-size: 16px;\n  }\n  .togle_menu { display: block; margin-top: 10px; background: #f8c655; color: #fff; position: absolute; right: 20px; min-width: auto; }\n  .techdashboard_header .quotation { display: none; width: 100%; background: #ffd06f;}\n  .techdashboard_header .quotation .mat-list-base { display: block; }\n  .techdashboard_header .quotation .mat-nav-list .mat-list-item { margin: 0;\n    align-items: center;\n    justify-content: center;\n    display: flex;\n    background: #fff3da;\n    margin: 1px 0;\n  }\n  .techdashboard_header .quotation .mat-nav-list .mat-list-item:nth-child(1) { margin-top: 0; }\n  .techdashboard_header .quotation .mat-list-base .mat-list-item:before {\n    content: \"\";\n    left: -15px;\n    width: 2px;\n    height: 15px;\n    background: #1c1c1c;\n    display: inline-block;\n    position: absolute;\n    top: 35%;\n    display: none;\n  }\n}\n\n@media screen and (max-width: 970px) {\n  .patient_report_section .button_action button {\n    width: auto;\n  }\n  .table_structure .mat-list-item .title_n {\n    font-size: 18px;\n  }\n  .one {\n    background: linear-gradient(100deg, #f9c856, #dd671d);\n  }\n  .two {\n    background: linear-gradient(100deg, #0973d1, #05335a);\n  }\n  .three {\n    background: linear-gradient(100deg, #44cf80, #26a555);\n  }\n}\n\n@media screen and (max-width: 950px) {\n  .content_wrapper .itemsection {\n    width: 30.8%;\n  }\n  .content_wrapper .itemsection p {\n    font-size: 20px;\n  }\n  .table_structure .mat-list-base .mat-list-item, .mat-list-base .mat-list-option {\n    margin-bottom: 16px;\n  }\n}\n\n@media screen and (max-width: 850px) {\n  .content_wrapper .itemsection {\n    width: 30.2%;\n  }\n  /* hiding searchbar */\n  .patient_report_section .patient_top_search .search_bar {\n    margin-bottom: 20px;\n    display: none;\n  }\n  .techdashboard_header {\n    padding: 0 16px;\n    flex-direction: column;\n  }\n}\n\n@media screen and (max-width: 768px) {\n  .content_wrapper .itemsection {\n    width: 100%;\n    margin: 16px;\n    margin-bottom: 0;\n  }\n  .content_wrapper .itemsection:nth-last-child(1) {\n    margin-bottom: 16px;\n  }\n  .patient_report_section .button_action {\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n  }\n  .patient_report_section .button_action button {\n    margin-bottom: 16px;\n    word-break: break-word;\n    white-space: normal;\n    line-height: 22px;\n  }\n  .techdashboard_header {\n    padding: 0 16px;\n  }\n  .techdashboard_header .quotation p {\n    margin: 16px 0;\n  }\n  .doctor_content_wrapper {\n    padding: 20px 0px;\n  }\n  .table_structure .mat-list-item .title_a {\n    font-size: 14px;\n  }\n  .doctor_content_wrapper .mat-card-title {\n    font-size: 28px;\n    margin-bottom: 5px;\n    text-align: left;\n    padding: 0 16px;\n  }\n  .table_structure .mat-list-base .mat-list-item, .mat-list-base .mat-list-option {\n    margin-bottom: 16px;\n  }\n  .footer_section .footer_content {\n    width: auto;\n  }\n  .table_structure .mat-list-base .mat-list-item, .mat-list-base .mat-list-option {\n    display: flex;\n    text-align: left;\n  }\n}\n\n@media screen and (max-width: 480px) {\n  .doctor_content_wrapper .mat-card-title {\n    font-size: 24px;\n  }\n  .patient_report_section .patient_top_search h1 {\n    font-size: 24px;\n  }\n}\n\n.danger {\n  display: block!important;\n  margin-top: 20px;\n  transition: 5px ease-out;\n}\n\n/*# sourceMappingURL=data:application/json;base64, */";
    /***/
  },

  /***/
  "./src/app/components/distributors/distributors-header/distributors-header.component.ts":
  /*!**********************************************************************************************!*\
    !*** ./src/app/components/distributors/distributors-header/distributors-header.component.ts ***!
    \**********************************************************************************************/

  /*! exports provided: DistributorsHeaderComponent */

  /***/
  function srcAppComponentsDistributorsDistributorsHeaderDistributorsHeaderComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DistributorsHeaderComponent", function () {
      return DistributorsHeaderComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _class_common_common_function__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../class/common/common-function */
    "./src/app/class/common/common-function.ts");
    /* harmony import */


    var _common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../../common/dialog-box/dialog-box.component */
    "./src/app/components/common/dialog-box/dialog-box.component.ts");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");

    var DistributorsHeaderComponent = /*#__PURE__*/function () {
      function DistributorsHeaderComponent(cookies, router, commonFunction, dialog) {
        _classCallCheck(this, DistributorsHeaderComponent);

        this.cookies = cookies;
        this.router = router;
        this.commonFunction = commonFunction;
        this.dialog = dialog;
        this.status = true;
        this.user_data = {};
        this.loader = true;
        this.main_user = {
          flag: false,
          data: {},
          buttonText: "Rerurn to Admin"
        }; // sticky section

        this.isSticky = false;
        window.scroll(0, 0);
        var allData = {};
        allData = this.cookies.getAll();

        if (typeof allData.main_user != 'undefined') {
          this.main_user.data = allData.main_user;
          this.main_user.flag = true;
        }

        this.user_data = JSON.parse(allData.user_details);
        this.user_cookie = cookies.get('jwtToken');
      }

      _createClass(DistributorsHeaderComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          /* Set Meta Data */
          this.commonFunction.setTitleMetaTags();
        }
        /**logout function start here**/

      }, {
        key: "logout",
        value: function logout() {
          var _this163 = this;

          this.cookies["delete"]('jwtToken');
          this.cookies["delete"]('user_details');
          this.cookies.deleteAll();
          setTimeout(function () {
            _this163.router.navigateByUrl('logout');
          }, 1000);
        }
        /**logout function end here**/
        // don't remove it's for menu toggleing

      }, {
        key: "menuFunction",
        value: function menuFunction() {
          this.status = !this.status;
        } //  @HostListener('window:scroll', ['$event'])
        //  checkScroll() {
        //    this.isSticky = window.pageYOffset >= 20;
        //  }

      }, {
        key: "returnToAdmin",
        value: function returnToAdmin() {
          var _this164 = this;

          var modalData = {
            panelClass: 'bulkupload-dialog',
            data: {
              header: "Alert",
              message: "Do you want to return to admin?",
              button1: {
                text: "Yes"
              },
              button2: {
                text: "No"
              }
            }
          };
          this.openModal(modalData);
          this.dialogRef.afterClosed().subscribe(function (result) {
            switch (result) {
              case "Yes":
                var jwtToken = _this164.cookies.get('jwtToken');

                var allData = _this164.cookies.getAll();

                var main_user = JSON.parse(allData.main_user);

                var secret = _this164.cookies.get('secret'); // Delete Cookie


                _this164.cookies["delete"]('user_details');

                _this164.cookies["delete"]('main_user');

                _this164.cookies["delete"]('doctor_signature');

                _this164.cookies["delete"]('secret');

                _this164.cookies["delete"]('jwtToken');

                _this164.cookies.deleteAll('/distributors');

                setTimeout(function () {
                  // Reset again Cookie
                  _this164.cookies.set('jwtToken', jwtToken);

                  _this164.cookies.set('user_details', JSON.stringify(main_user));

                  _this164.cookies.set('secret', JSON.stringify(secret)); // Redirect to page


                  _this164.router.navigateByUrl("admin/dashboard");
                }, 500);
                break;

              case "No":
                _this164.dialogRef.close();

                break;
            }
          });
        }
      }, {
        key: "openModal",
        value: function openModal(data) {
          this.dialogRef = this.dialog.open(_common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_5__["DialogBoxComponent"], data);
        }
      }]);

      return DistributorsHeaderComponent;
    }();

    DistributorsHeaderComponent.ctorParameters = function () {
      return [{
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"]
      }, {
        type: _class_common_common_function__WEBPACK_IMPORTED_MODULE_4__["CommonFunction"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_6__["MatDialog"]
      }];
    };

    DistributorsHeaderComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-distributors-header',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./distributors-header.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/distributors/distributors-header/distributors-header.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./distributors-header.component.css */
      "./src/app/components/distributors/distributors-header/distributors-header.component.css"))["default"]]
    })], DistributorsHeaderComponent);
    /***/
  },

  /***/
  "./src/app/components/doctor-group/doctor-group-dashboard/doctor-group-dashboard.component.css":
  /*!*****************************************************************************************************!*\
    !*** ./src/app/components/doctor-group/doctor-group-dashboard/doctor-group-dashboard.component.css ***!
    \*****************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsDoctorGroupDoctorGroupDashboardDoctorGroupDashboardComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZG9jdG9yLWdyb3VwL2RvY3Rvci1ncm91cC1kYXNoYm9hcmQvZG9jdG9yLWdyb3VwLWRhc2hib2FyZC5jb21wb25lbnQuY3NzIn0= */";
    /***/
  },

  /***/
  "./src/app/components/doctor-group/doctor-group-dashboard/doctor-group-dashboard.component.ts":
  /*!****************************************************************************************************!*\
    !*** ./src/app/components/doctor-group/doctor-group-dashboard/doctor-group-dashboard.component.ts ***!
    \****************************************************************************************************/

  /*! exports provided: DoctorGroupDashboardComponent */

  /***/
  function srcAppComponentsDoctorGroupDoctorGroupDashboardDoctorGroupDashboardComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DoctorGroupDashboardComponent", function () {
      return DoctorGroupDashboardComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/material/paginator */
    "./node_modules/@angular/material/esm2015/paginator.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var ngx_device_detector__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ngx-device-detector */
    "./node_modules/ngx-device-detector/fesm2015/ngx-device-detector.js");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../../../../environments/environment */
    "./src/environments/environment.ts");
    /* harmony import */


    var moment__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! moment */
    "./node_modules/moment/moment.js");
    /* harmony import */


    var moment__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_9__);

    var moment = moment__WEBPACK_IMPORTED_MODULE_9__;

    var DoctorGroupDashboardComponent = /*#__PURE__*/function () {
      function DoctorGroupDashboardComponent(router, cookieService, http, activatedRoute, dialog, deviceService, matSnackBar) {
        var _this165 = this;

        _classCallCheck(this, DoctorGroupDashboardComponent);

        this.router = router;
        this.cookieService = cookieService;
        this.http = http;
        this.activatedRoute = activatedRoute;
        this.dialog = dialog;
        this.deviceService = deviceService;
        this.matSnackBar = matSnackBar;
        this.loginUserData = {};
        this.jwtToken = "";
        this.htmlText = {
          headerText: "Total Number of Report Processed"
        };
        this.shareDetails = {
          baseUrl: _environments_environment__WEBPACK_IMPORTED_MODULE_8__["environment"].doctorSignUpBaseUrl,
          userId: ""
        };
        this.allResolveData = {};
        this.uploadedStatusArray = [];
        this.processedStatusArray = [];
        this.signedStatusArray = [];
        this.billerStatusArray = [];
        this.searchJson = {
          doctorName: "",
          patientName: "",
          status: "",
          dateRange: ""
        }; // list *********

        this.allBillerData = [];
        this.billerData_count = 0;
        this.allUserData_skip = ["_id", "report_file_type", "tech_id", "tech_email", "batch_name", "report_type", "status", "file_basepath", "file_bucketname", "file_name", "file_original_name", "file_type", "converted_image", "images", "patient_details", "patient_name_search", "report_life_circle", "note", "additional_potential_health_risks", "cpt_codes", "created_at"];
        this.editUrl = "admin/biller-management/edit";
        this.libdata = {
          basecondition: {},
          updateendpoint: '',
          custombuttons: [{
            label: "View Report",
            route: "doctor-group/view-patient-record/",
            type: 'internallink',
            param: ['_id']
          }, {
            label: "Download Report",
            link: _environments_environment__WEBPACK_IMPORTED_MODULE_8__["environment"].s3bucket + "reports",
            type: 'externallink',
            paramtype: 'angular',
            param: ['download_file_name']
          }, {
            label: "Tech Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-tech-details',
            datafields: ['first name', 'last name', 'email', 'phone', 'address', 'city', 'state', 'zip'],
            param: 'id',
            headermessage: 'Tech Information'
          }, {
            label: "View Codes",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-codes-details',
            datafields: ['Additional Potential Health Risks', 'CPT Codes', 'ICD Codes'],
            param: 'id',
            headermessage: 'Associated Codes'
          }, {
            label: "Doctor Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-doctor-details',
            datafields: ['firstname', 'lastname', 'email', 'fax', 'Practice Name', 'NPI', 'phone', 'address', 'city', 'state', 'zip'],
            param: 'id',
            headermessage: 'Doctor Information'
          }, {
            label: "Doctor Office Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-doctor-office-details',
            datafields: ['center name', 'first name', 'last name', 'email', 'phone', 'address', 'city', 'state', 'zip'],
            param: 'id',
            headermessage: 'Doctor Office Info'
          }, {
            label: "Send to Biller",
            type: 'action',
            datatype: 'api',
            endpoint: 'status-parent-signed',
            cond: 'status',
            condval: 14,
            param: 'id',
            headermessage: 'Status Update'
          }],
          hideeditbutton: true,
          hidedeletebutton: true,
          hidestatustogglebutton: true,
          hideviewbutton: true,
          tableheaders: ["patient_name", "status_text", "created_at_datetime", "cpt_addl", "general_details"]
        };
        this.allUserData_modify_header = {
          "general_details": "Related Info",
          "patient_name": "Patient Name",
          "status_text": "Status",
          "created_at_datetime": "Report Added",
          "cpt_addl": "CPT/ Addl Hrisk C"
        };
        this.UpdateEndpoint = "addorupdatedata";
        this.deleteEndpoint = "deletesingledata";
        this.apiUrl = _environments_environment__WEBPACK_IMPORTED_MODULE_8__["environment"].apiBaseUrl;
        this.tableName = "data_pece";
        this.datacollection = 'dashboard-report-data-list';
        this.sortdata = {
          "type": 'desc',
          "field": 'patient_name',
          "options": ['patient_name', 'created_at_datetime']
        };
        this.limitcond = {
          "limit": 10,
          "skip": 0,
          "pagecount": 1
        };
        this.previewModal_detail_skip = ['_id', 'user_type', 'status', 'password', 'created_at'];
        this.status = [{
          val: 11,
          'name': 'Biller Admin Approved'
        }, {
          val: 12,
          'name': 'Biller Admin Not Approved'
        }, {
          val: 13,
          'name': "Biller Admin Hold"
        }, {
          val: 14,
          'name': "Doctor Signed"
        }, {
          val: 15,
          'name': "Sent to Biller"
        }, {
          val: 16,
          "name": "Report Downloaded"
        }];
        this.cptcodes = [{
          val: "95923",
          'name': '95923'
        }, {
          val: "95943",
          'name': '95943'
        }, {
          val: "95921",
          'name': "95921"
        }, {
          val: "93923",
          'name': "93923"
        }, {
          val: "93922",
          'name': "93922"
        }];
        this.parent_type = [{
          val: "admin",
          'name': 'Admin'
        }, {
          val: "diagnostic_admin",
          'name': 'Diagnostic Admin'
        }, {
          val: "distributors",
          'name': 'Distributor'
        }, {
          val: "doctor_group",
          'name': 'Doctor Group'
        }];
        this.report_type = [{
          val: "RM-3A",
          'name': 'RM-3A'
        }, {
          val: "TM FLOW V3",
          'name': 'TM FLOW V3'
        }, {
          val: "TM FLOW V4",
          'name': 'TM FLOW V4'
        }, {
          val: "TM FLOW V4",
          'name': 'TM FLOW V4'
        }, {
          val: "CMAT with BP Cuffs",
          'name': "CMAT with BP Cuffs"
        }];
        this.SearchingEndpoint = "datalist";
        this.authval = [];
        this.docofficeval = [];
        this.techval = [];
        this.parentnameval = [];
        this.doctorcity = [];
        this.doctorstate = [];
        this.patientcity = [];
        this.patientstate = [];
        this.SearchingSourceName = "data_biller_list";
        this.search_settings = {
          selectsearch: [{
            label: 'Search By Report Type',
            field: 'report_file_type',
            values: this.report_type
          }, {
            label: "Search By Doctor",
            field: 'doc_name_search',
            values: this.authval
          }, {
            label: "Search By Tech",
            field: 'tech_name_search',
            values: this.techval
          }, {
            label: 'Search By Parent Type',
            field: 'parent_type',
            values: this.parent_type
          }, {
            label: "Search By Doctor Office",
            field: 'doctor_ofiice_name_search',
            values: this.docofficeval
          }, {
            label: "Search By Parent Name",
            field: 'parent_name_search',
            values: this.parentnameval
          }, {
            label: "Search By Doctor City",
            field: 'doctor_city_search',
            values: this.doctorcity
          }, {
            label: "Search By Doctor State",
            field: 'doctor_state_search',
            values: this.doctorstate
          }, {
            label: "Search By Patient City",
            field: 'patient_city_search',
            values: this.patientcity
          }, {
            label: "Search By Patient State",
            field: 'patient_state_search',
            values: this.patientstate
          }],
          datesearch: [{
            startdatelabel: "Start Date",
            enddatelabel: "End Date",
            submit: "Search",
            field: "created_at_datetime"
          }],
          textsearch: [{
            label: "Search By Patient Name",
            field: 'patient_name_search'
          }],
          search: [{
            label: 'Search By CPT Codes',
            field: 'cpt_codes_search',
            values: this.cptcodes
          }]
        }; // lib list end

        this.allDataList = [];
        this.loginUserData["user_details"] = JSON.parse(cookieService.get('user_details'));
        this.loginUserData["jwtToken"] = cookieService.get('jwtToken');
        /* Get Auth Token */

        this.jwtToken = cookieService.get('jwtToken');
        this.libdata.basecondition.parent_id = this.loginUserData.user_details._id;
        this.shareDetails.userId = this.loginUserData.user_details._id;
        /* Get resolve data */

        this.activatedRoute.data.subscribe(function (resolveData) {
          _this165.allResolveData = resolveData.dataCount.data;

          _this165.viewAllButton(_this165.htmlText.headerText);
        });
      }

      _createClass(DoctorGroupDashboardComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          this.getSearchData();
        }
      }, {
        key: "ngAfterViewInit",
        value: function ngAfterViewInit() {}
      }, {
        key: "viewAllButton",
        value: function viewAllButton() {
          var _this166 = this;

          var flag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
          this.htmlText.headerText = flag;
          this.billerData_count = 0;
          this.allBillerData = []; // lib list

          var data = {
            "condition": {
              "limit": 10,
              "skip": 0
            },
            "sort": {
              "field": "patient_name",
              "type": "desc"
            },
            "searchcondition": {
              "parent_id": this.loginUserData.user_details._id
            },
            "secretkey": "na"
          };

          switch (flag) {
            case 'Total Number of Reports Added':
              data.searchcondition.report_type = {
                $exists: true
              };
              data.searchcondition.status = {
                $gte: 3
              };
              this.libdata.basecondition.status = {
                $gte: 3
              }; // Add status search filed

              this.deleteStatusSearchField();
              var searchData = this.search_settings.selectsearch;
              searchData.push({
                label: 'Search By Status',
                field: 'status',
                values: this.status
              });
              this.search_settings.selectsearch = [];
              this.search_settings.selectsearch = searchData;
              break;

            case 'Total Number of Report Processed':
              data.searchcondition.report_type = {
                $exists: true
              };
              data.searchcondition.status = {
                $gte: 11
              }; // this.libdata.basecondition.status = { $gte: 11 };
              // Add status search filed

              this.deleteStatusSearchField();
              var searchData = this.search_settings.selectsearch;
              searchData.push({
                label: 'Search By Status',
                field: 'status',
                values: this.status
              });
              this.search_settings.selectsearch = [];
              this.search_settings.selectsearch = searchData;
              break;

            case 'Total Number of Report Signed':
              data.searchcondition.report_type = {
                $exists: true
              };
              data.searchcondition.status = {
                $eq: 14
              };
              this.libdata.basecondition.status = {
                $eq: 14
              }; // delete status filter

              this.deleteStatusSearchField();
              break;

            case 'Sent to Biller':
              data.searchcondition.report_type = {
                $exists: true
              };
              data.searchcondition.status = {
                $eq: 15
              };
              this.libdata.basecondition.status = {
                $eq: 15
              }; // delete status filter

              this.deleteStatusSearchField();
              break;

            case 'Reports Downloaded':
              data.searchcondition.report_type = {
                $exists: true
              };
              data.searchcondition.status = {
                $eq: 16
              };
              this.libdata.basecondition.status = {
                $eq: 16
              }; // delete status filter

              this.deleteStatusSearchField();
              break;

            case 'Reports Pending Sing':
              data.searchcondition.report_type = {
                $exists: true
              };
              data.searchcondition.status = {
                $eq: 11
              };
              this.libdata.basecondition.status = {
                $eq: 11
              };
              this.deleteStatusSearchField();
              break;
          } // API Hit


          this.http.httpViaPost('dashboard-report-data-list', data).subscribe(function (res) {
            _this166.allBillerData = res.results.res;
            _this166.billerData_count = res.results.data_count;
          }, function (error) {
            console.log('Oooops!');
          });
        }
      }, {
        key: "deleteStatusSearchField",
        value: function deleteStatusSearchField() {
          // Delete Status Filter Field
          var searchData = this.search_settings.selectsearch;

          for (var loop in searchData) {
            if (searchData[loop].label == 'Search By Status') {
              searchData.splice(loop, 1);
            }
          }

          this.search_settings.selectsearch = [];
          this.search_settings.selectsearch = searchData;
        }
      }, {
        key: "getSearchData",
        value: function getSearchData() {
          var _this167 = this;

          var data = {
            "source": "patient_data_desc_patient_name",
            "condition": {
              status: {
                "$gt": 10
              },
              parent_id_object: this.loginUserData.user_details._id
            },
            "token": this.jwtToken
          };
          this.http.httpViaPost("datalist", data).subscribe(function (response) {
            var start = false;
            var count = 0;

            for (var i in response.res) {
              if (response.res[i].doc_name_search != "") {
                for (var j in _this167.authval) {
                  if (response.res[i].doc_name == _this167.authval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this167.authval.push({
                    name: response.res[i].doc_name,
                    val: response.res[i].doc_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].tech_name_search != "") {
                for (var j in _this167.techval) {
                  if (response.res[i].tech_namesearch == _this167.techval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this167.techval.push({
                    name: response.res[i].tech_namesearch,
                    val: response.res[i].tech_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].parent_name_search != "") {
                for (var j in _this167.parentnameval) {
                  if (response.res[i].parent_namesearch == _this167.parentnameval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this167.parentnameval.push({
                    name: response.res[i].parent_namesearch,
                    val: response.res[i].parent_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].doctor_state_search != "") {
                for (var j in _this167.doctorstate) {
                  if (response.res[i].doctor_state == _this167.doctorstate[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this167.doctorstate.push({
                    name: response.res[i].doctor_state,
                    val: response.res[i].doctor_state_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].doctor_city_search != "") {
                for (var j in _this167.doctorcity) {
                  if (response.res[i].doctor_city == _this167.doctorcity[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this167.doctorcity.push({
                    name: response.res[i].doctor_city,
                    val: response.res[i].doctor_city_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].patient_city_search != "") {
                for (var j in _this167.patientcity) {
                  if (response.res[i].patient_city == _this167.patientcity[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this167.patientcity.push({
                    name: response.res[i].patient_city,
                    val: response.res[i].patient_city_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].patient_state_search != "") {
                for (var j in _this167.patientstate) {
                  if (response.res[i].patient_state == _this167.patientstate[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this167.patientstate.push({
                    name: response.res[i].patient_state,
                    val: response.res[i].patient_state_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].doctor_ofiice_name_search != "") {
                for (var j in _this167.docofficeval) {
                  if (response.res[i].doctor_ofiice_namesearch == _this167.docofficeval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this167.docofficeval.push({
                    name: response.res[i].doctor_ofiice_namesearch,
                    val: response.res[i].doctor_ofiice_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }
          }, function (error) {
            console.log('Oooops!');
          });
        }
      }]);

      return DoctorGroupDashboardComponent;
    }();

    DoctorGroupDashboardComponent.ctorParameters = function () {
      return [{
        type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__["HttpServiceService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_6__["MatDialog"]
      }, {
        type: ngx_device_detector__WEBPACK_IMPORTED_MODULE_7__["DeviceDetectorService"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_6__["MatSnackBar"]
      }];
    };

    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_paginator__WEBPACK_IMPORTED_MODULE_5__["MatPaginator"], {
      "static": false
    })], DoctorGroupDashboardComponent.prototype, "paginatorAll", void 0);
    DoctorGroupDashboardComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-doctor-group-dashboard',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./doctor-group-dashboard.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor-group/doctor-group-dashboard/doctor-group-dashboard.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./doctor-group-dashboard.component.css */
      "./src/app/components/doctor-group/doctor-group-dashboard/doctor-group-dashboard.component.css"))["default"]]
    })], DoctorGroupDashboardComponent);
    /***/
  },

  /***/
  "./src/app/components/doctor-group/doctor-group-footer/doctor-group-footer.component.css":
  /*!***********************************************************************************************!*\
    !*** ./src/app/components/doctor-group/doctor-group-footer/doctor-group-footer.component.css ***!
    \***********************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsDoctorGroupDoctorGroupFooterDoctorGroupFooterComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = ".footer_section{ display: block; border-top: 1px solid #c7c7c7; margin:0; margin-top: 30px; background: #e0e5eb; padding: 10px; }\n.footer_section .footer_content{ width: 600px; padding: 0 16px; margin: 0 auto; display: block; text-align: center; }\n.footer_section .footer_content .link{ margin-top: 10px; display: block;  }\n.footer_section .footer_content .link a:nth-of-type(1){ border-right: 1px solid #797979; padding-right: 5px; }\n.footer_section .footer_content .link a, .footer_section .footer_content p{ font-size: 16px; font-family: \"AvenirLight\"; color: #797979; text-decoration: none;}\n.footer_content p{ margin: 0; margin-bottom: 5px; }\n@media screen and (max-width: 668px){\n  .footer_section .footer_content { width: auto; }\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kb2N0b3ItZ3JvdXAvZG9jdG9yLWdyb3VwLWZvb3Rlci9kb2N0b3ItZ3JvdXAtZm9vdGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCLGNBQWMsRUFBRSw2QkFBNkIsRUFBRSxRQUFRLEVBQUUsZ0JBQWdCLEVBQUUsbUJBQW1CLEVBQUUsYUFBYSxFQUFFO0FBQ2hJLGlDQUFpQyxZQUFZLEVBQUUsZUFBZSxFQUFFLGNBQWMsRUFBRSxjQUFjLEVBQUUsa0JBQWtCLEVBQUU7QUFDcEgsdUNBQXVDLGdCQUFnQixFQUFFLGNBQWMsR0FBRztBQUMxRSx3REFBd0QsK0JBQStCLEVBQUUsa0JBQWtCLEVBQUU7QUFDN0csNEVBQTRFLGVBQWUsRUFBRSwwQkFBMEIsRUFBRSxjQUFjLEVBQUUscUJBQXFCLENBQUM7QUFDN0osbUJBQW1CLFNBQVMsRUFBRSxrQkFBa0IsRUFBRTtBQUdwRDtFQUNFLGtDQUFrQyxXQUFXLEVBQUU7QUFDakQiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2RvY3Rvci1ncm91cC9kb2N0b3ItZ3JvdXAtZm9vdGVyL2RvY3Rvci1ncm91cC1mb290ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb290ZXJfc2VjdGlvbnsgZGlzcGxheTogYmxvY2s7IGJvcmRlci10b3A6IDFweCBzb2xpZCAjYzdjN2M3OyBtYXJnaW46MDsgbWFyZ2luLXRvcDogMzBweDsgYmFja2dyb3VuZDogI2UwZTVlYjsgcGFkZGluZzogMTBweDsgfVxuLmZvb3Rlcl9zZWN0aW9uIC5mb290ZXJfY29udGVudHsgd2lkdGg6IDYwMHB4OyBwYWRkaW5nOiAwIDE2cHg7IG1hcmdpbjogMCBhdXRvOyBkaXNwbGF5OiBibG9jazsgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4uZm9vdGVyX3NlY3Rpb24gLmZvb3Rlcl9jb250ZW50IC5saW5reyBtYXJnaW4tdG9wOiAxMHB4OyBkaXNwbGF5OiBibG9jazsgIH1cbi5mb290ZXJfc2VjdGlvbiAuZm9vdGVyX2NvbnRlbnQgLmxpbmsgYTpudGgtb2YtdHlwZSgxKXsgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgIzc5Nzk3OTsgcGFkZGluZy1yaWdodDogNXB4OyB9XG4uZm9vdGVyX3NlY3Rpb24gLmZvb3Rlcl9jb250ZW50IC5saW5rIGEsIC5mb290ZXJfc2VjdGlvbiAuZm9vdGVyX2NvbnRlbnQgcHsgZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogXCJBdmVuaXJMaWdodFwiOyBjb2xvcjogIzc5Nzk3OTsgdGV4dC1kZWNvcmF0aW9uOiBub25lO31cbiAgLmZvb3Rlcl9jb250ZW50IHB7IG1hcmdpbjogMDsgbWFyZ2luLWJvdHRvbTogNXB4OyB9XG5cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjY4cHgpe1xuICAuZm9vdGVyX3NlY3Rpb24gLmZvb3Rlcl9jb250ZW50IHsgd2lkdGg6IGF1dG87IH1cbn1cbiJdfQ== */";
    /***/
  },

  /***/
  "./src/app/components/doctor-group/doctor-group-footer/doctor-group-footer.component.ts":
  /*!**********************************************************************************************!*\
    !*** ./src/app/components/doctor-group/doctor-group-footer/doctor-group-footer.component.ts ***!
    \**********************************************************************************************/

  /*! exports provided: DoctorGroupFooterComponent */

  /***/
  function srcAppComponentsDoctorGroupDoctorGroupFooterDoctorGroupFooterComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DoctorGroupFooterComponent", function () {
      return DoctorGroupFooterComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");

    var DoctorGroupFooterComponent = /*#__PURE__*/function () {
      function DoctorGroupFooterComponent() {
        _classCallCheck(this, DoctorGroupFooterComponent);

        this.htmlData = {};
        this.htmlData["year"] = new Date().getFullYear();
      }

      _createClass(DoctorGroupFooterComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }]);

      return DoctorGroupFooterComponent;
    }();

    DoctorGroupFooterComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-doctor-group-footer',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./doctor-group-footer.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor-group/doctor-group-footer/doctor-group-footer.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./doctor-group-footer.component.css */
      "./src/app/components/doctor-group/doctor-group-footer/doctor-group-footer.component.css"))["default"]]
    })], DoctorGroupFooterComponent);
    /***/
  },

  /***/
  "./src/app/components/doctor-group/doctor-group-header/doctor-group-header.component.css":
  /*!***********************************************************************************************!*\
    !*** ./src/app/components/doctor-group/doctor-group-header/doctor-group-header.component.css ***!
    \***********************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsDoctorGroupDoctorGroupHeaderDoctorGroupHeaderComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "/* header css */\n\n.techdashboard_header { height: auto; padding: 0; background: #fff; box-shadow: 0px 2px 7px 2px #b7b7b7; margin: 20px 0; }\n\n.techdashboard_header .header_wrapper{ width: 1400px; margin: 0 auto; display: flex; align-items: center; justify-content: space-between;}\n\n.techdashboard_header .logo_wrapper { max-width: 160px; display: block; cursor: pointer; flex: none; }\n\n.techdashboard_header .logo_wrapper:focus { outline: none; border: none; }\n\n.techdashboard_header .logo_wrapper img { max-width: 100%; vertical-align: middle; }\n\n.techdashboard_header .quotation { margin-bottom: 0px; }\n\n.techdashboard_header .quotation p { font-family: \"RobotoMedium\"; font-size: 30px; color: #002035; text-transform: uppercase; margin: 0; }\n\n.techdashboard_header .profile_section button { padding-top: 8px; }\n\n.techdashboard_header .profile_section {  display: flex;  border-left: 1px solid #ada9a9;  padding-left: 5px;  margin-bottom: 0;  justify-content: center;  align-items: center; }\n\n.techdashboard_header .profile_section .username { padding-right: 10px;\n  display: block;\n  font-family: \"AvenirRoman\";\n  font-size: 16px;\n  color: #1f1f1f;}\n\n.techdashboard_header .quotation .mat-list-base { display: flex; padding-top: 0; }\n\n/* .techdashboard_header .quotation .mat-list-base .mat-list-item:before {\n  content: \"\";\n  left: -15px;\n  width: 2px;\n  height: 15px;\n  background: #1c1c1c;\n  display: inline-block;\n  position: absolute;\n  top: 35%;\n} */\n\n.techdashboard_header .quotation .mat-nav-list .mat-list-item { margin: 0; position: relative; font-family: \"AvenirMedium\"; font-size: 16px; color: #767676;}\n\n.active { color: #000000!important;  /* border-bottom: 3px solid #fecb00; position: relative; */}\n\n.active::before{ content: ''; width: 100%; height: 4px; background: #fecb00; position: absolute; bottom: -25px; }\n\n/*End header css */\n\n.togle_menu { display: none;}\n\n.sticky { position: fixed; top: 0; margin: 0; z-index: 1; }\n\n@media screen and (max-width: 1540px) {\n  .techdashboard_header .header_wrapper { width: 90%; }\n\n}\n\n@media screen and (max-width: 1500px) {\n  .techdashboard_header .quotation .mat-nav-list .mat-list-item {\n    margin: 0px;\n    position: relative;\n  }\n  .techdashboard_header .quotation p {\n    font-size: 22px;\n  }\n  .content_wrapper .itemsection {\n    padding-bottom: 36px;\n  }\n  .techdashboard_header .logo_wrapper { max-width: 120px; }\n  .active::before { bottom: -13px; }\n}\n\n@media screen and (max-width: 1440px) {\n  .content_wrapper .itemsection p {\n    line-height: 26px;\n    font-size: 24px;\n  }\n}\n\n@media screen and (max-width: 1400px) {\n  .techdashboard_header .header_wrapper {width: 95%; }\n}\n\n@media screen and (max-width: 1366px) {\n  .techdashboard_header .quotation .mat-nav-list .mat-list-item { margin: 0; }\n  .techdashboard_header .quotation .mat-nav-list .mat-list-item{ margin: 0; }\n  .techdashboard_header .profile_section .username { font-size: 14px; }\n}\n\n@media screen and (max-width: 1280px) {\n  .techdashboard_header .profile_section { padding-left: 8px; }\n  .techdashboard_header .quotation .mat-nav-list .mat-list-item .mat-list-base .mat-list-item .mat-list-item-content {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    box-sizing: border-box;\n    padding: 0 10px;\n    position: relative;\n    height: inherit;\n  }\n}\n\n@media screen and (max-width: 1240px) {\n  .doctor_content_wrapper { background: #012035; }\n  .techdashboard_header .quotation .mat-nav-list .mat-list-item { font-size: 14px; }\n}\n\n@media screen and (max-width: 1199px) {\n  .doctor_content_wrapper .table_structure { width: 100%; }\n  .patient_report_section .button_action { width: 970px; }\n    .patient_report_section .button_action button { width: 475px; font-size: 20px;  padding: 8px; }\n  .content_wrapper {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n    flex-wrap: wrap;\n  }\n  .content_wrapper .itemsection {\n    width: 31%;\n    margin: 15px 12px;\n  }\n  .doctor_content_wrapper {\n    padding: 40px 30px;\n  }\n  .doctor_content_wrapper .mat-card-title {\n    font-size: 36px;\n    margin-bottom: 20px;\n  }\n  .table_structure .mat-list-item .title_n {\n    font-size: 26px;\n  }\n  .table_structure .mat-list-item .title_a {\n    font-size: 22px;\n  }\n  .content_wrapper .itemsection p {\n    width: 100%;\n    font-size: 22px;\n  }\n  .techdashboard_header {\n    height: auto;\n    flex-direction: column;\n  }\n\n}\n\n@media screen and (max-width: 1100px) {\n  .techdashboard_header .header_wrapper { width: 100%; flex-direction: column;   box-sizing: border-box; }\n  .techdashboard_header .logo_wrapper { max-width: 160px; }\n  .techdashboard_header .quotation .mat-nav-list .mat-list-item { font-size: 16px; }\n  .techdashboard_header .profile_section { padding-left: 0; border: none; }\n  .techdashboard_header .profile_section .username { font-size: 16px; }\n  .active {\n    color: #000000!important;\n    border-bottom: 3px solid #fecb00; position: relative;\n  }\n  .active::before{\n    content: ''; display: none;}\n}\n\n@media screen and (max-width: 1080px) {\n  .doctor_content_wrapper {\n    padding: 40px 20px;\n  }\n  .doctor_content_wrapper .mat-card-title {\n    font-size: 32px;\n    margin-bottom: 20px;\n  }\n  .table_structure .mat-list-item .title_n {\n    font-size: 22px;\n  }\n  .table_structure .mat-list-item .title_a {\n    font-size: 20px;\n  }\n}\n\n@media screen and (max-width: 1038px) {\n  .content_wrapper .itemsection {\n    width: 30.9%;\n  }\n}\n\n@media screen and (max-width: 991px) {\n  .doctor_content_wrapper {\n    text-align: center;\n  }\n  .patient_report_section .patient_top_search {\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n  }\n  .patient_report_section .patient_top_search .search_bar {\n    margin-bottom: 20px;\n  }\n  .patient_report_section .button_action button {\n    padding: 8px 30px;\n    margin: 0 10px;\n    width: 100%;\n  }\n  .patient_report_section .button_action {\n    width: auto;\n    margin: 0 5px;\n    display: flex;\n    justify-content: center;\n  }\n  .content_wrapper .itemsection {\n    width: 30.8%;\n  }\n  .table_structure .mat-list-item .title_a {\n    font-size: 16px;\n  }\n  .togle_menu { display: block; margin-top: 10px; background: #f8c655; color: #fff; position: absolute; right: 20px; min-width: auto; }\n  .techdashboard_header .quotation { display: none; width: 100%; background: #ffd06f;}\n  .techdashboard_header .quotation .mat-list-base { display: block; }\n  .techdashboard_header .quotation .mat-nav-list .mat-list-item { margin: 0;\n    align-items: center;\n    justify-content: center;\n    display: flex;\n    background: #fff3da;\n    margin: 1px 0;\n  }\n  .techdashboard_header .quotation .mat-nav-list .mat-list-item:nth-child(1) { margin-top: 0; }\n  .techdashboard_header .quotation .mat-list-base .mat-list-item:before {\n    content: \"\";\n    left: -15px;\n    width: 2px;\n    height: 15px;\n    background: #1c1c1c;\n    display: inline-block;\n    position: absolute;\n    top: 35%;\n    display: none;\n  }\n}\n\n@media screen and (max-width: 970px) {\n  .patient_report_section .button_action button {\n    width: auto;\n  }\n  .table_structure .mat-list-item .title_n {\n    font-size: 18px;\n  }\n  .one {\n    background: linear-gradient(100deg, #f9c856, #dd671d);\n  }\n  .two {\n    background: linear-gradient(100deg, #0973d1, #05335a);\n  }\n  .three {\n    background: linear-gradient(100deg, #44cf80, #26a555);\n  }\n}\n\n@media screen and (max-width: 950px) {\n  .content_wrapper .itemsection {\n    width: 30.8%;\n  }\n  .content_wrapper .itemsection p {\n    font-size: 20px;\n  }\n  .table_structure .mat-list-base .mat-list-item, .mat-list-base .mat-list-option {\n    margin-bottom: 16px;\n  }\n}\n\n@media screen and (max-width: 850px) {\n  .content_wrapper .itemsection {\n    width: 30.2%;\n  }\n  /* hiding searchbar */\n  .patient_report_section .patient_top_search .search_bar {\n    margin-bottom: 20px;\n    display: none;\n  }\n  .techdashboard_header {\n    padding: 0 16px;\n    flex-direction: column;\n  }\n}\n\n@media screen and (max-width: 768px) {\n  .content_wrapper .itemsection {\n    width: 100%;\n    margin: 16px;\n    margin-bottom: 0;\n  }\n  .content_wrapper .itemsection:nth-last-child(1) {\n    margin-bottom: 16px;\n  }\n  .patient_report_section .button_action {\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n  }\n  .patient_report_section .button_action button {\n    margin-bottom: 16px;\n    word-break: break-word;\n    white-space: normal;\n    line-height: 22px;\n  }\n  .techdashboard_header {\n    padding: 0 16px;\n  }\n  .techdashboard_header .quotation p {\n    margin: 16px 0;\n  }\n  .doctor_content_wrapper {\n    padding: 20px 0px;\n  }\n  .table_structure .mat-list-item .title_a {\n    font-size: 14px;\n  }\n  .doctor_content_wrapper .mat-card-title {\n    font-size: 28px;\n    margin-bottom: 5px;\n    text-align: left;\n    padding: 0 16px;\n  }\n  .table_structure .mat-list-base .mat-list-item, .mat-list-base .mat-list-option {\n    margin-bottom: 16px;\n  }\n  .footer_section .footer_content {\n    width: auto;\n  }\n  .table_structure .mat-list-base .mat-list-item, .mat-list-base .mat-list-option {\n    display: flex;\n    text-align: left;\n  }\n}\n\n@media screen and (max-width: 480px) {\n  .doctor_content_wrapper .mat-card-title {\n    font-size: 24px;\n  }\n  .patient_report_section .patient_top_search h1 {\n    font-size: 24px;\n  }\n}\n\n.danger {\n  display: block!important;\n  margin-top: 20px;\n  transition: 5px ease-out;\n}\n\n/*# sourceMappingURL=data:application/json;base64, */";
    /***/
  },

  /***/
  "./src/app/components/doctor-group/doctor-group-header/doctor-group-header.component.ts":
  /*!**********************************************************************************************!*\
    !*** ./src/app/components/doctor-group/doctor-group-header/doctor-group-header.component.ts ***!
    \**********************************************************************************************/

  /*! exports provided: DoctorGroupHeaderComponent */

  /***/
  function srcAppComponentsDoctorGroupDoctorGroupHeaderDoctorGroupHeaderComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DoctorGroupHeaderComponent", function () {
      return DoctorGroupHeaderComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _class_common_common_function__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../class/common/common-function */
    "./src/app/class/common/common-function.ts");
    /* harmony import */


    var _common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../../common/dialog-box/dialog-box.component */
    "./src/app/components/common/dialog-box/dialog-box.component.ts");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");

    var DoctorGroupHeaderComponent = /*#__PURE__*/function () {
      function DoctorGroupHeaderComponent(cookies, router, commonFunction, dialog) {
        _classCallCheck(this, DoctorGroupHeaderComponent);

        this.cookies = cookies;
        this.router = router;
        this.commonFunction = commonFunction;
        this.dialog = dialog;
        this.status = true;
        this.user_data = {};
        this.loader = true;
        this.main_user = {
          flag: false,
          data: {},
          buttonText: "Rerurn to Admin"
        }; // sticky section

        this.isSticky = false;
        window.scroll(0, 0);
        var allData = {};
        allData = this.cookies.getAll();

        if (typeof allData.main_user != 'undefined') {
          this.main_user.data = allData.main_user;
          this.main_user.flag = true;
        }

        this.user_data = JSON.parse(allData.user_details);
        this.user_cookie = cookies.get('jwtToken');
      }

      _createClass(DoctorGroupHeaderComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          /* Set Meta Data */
          this.commonFunction.setTitleMetaTags();
        }
        /**logout function start here**/

      }, {
        key: "logout",
        value: function logout() {
          var _this168 = this;

          this.cookies["delete"]('jwtToken');
          this.cookies["delete"]('user_details');
          this.cookies.deleteAll();
          setTimeout(function () {
            _this168.router.navigateByUrl('logout');
          }, 1000);
        }
        /**logout function end here**/
        // don't remove it's for menu toggleing

      }, {
        key: "menuFunction",
        value: function menuFunction() {
          this.status = !this.status;
        } //  @HostListener('window:scroll', ['$event'])
        //  checkScroll() {
        //    this.isSticky = window.pageYOffset >= 20;
        //  }

      }, {
        key: "returnToAdmin",
        value: function returnToAdmin() {
          var _this169 = this;

          var modalData = {
            panelClass: 'bulkupload-dialog',
            data: {
              header: "Alert",
              message: "Do you want to return to admin?",
              button1: {
                text: "Yes"
              },
              button2: {
                text: "No"
              }
            }
          };
          this.openModal(modalData);
          this.dialogRef.afterClosed().subscribe(function (result) {
            switch (result) {
              case "Yes":
                var jwtToken = _this169.cookies.get('jwtToken');

                var allData = _this169.cookies.getAll();

                var main_user = JSON.parse(allData.main_user);

                var secret = _this169.cookies.get('secret'); // Delete Cookie


                _this169.cookies["delete"]('user_details');

                _this169.cookies["delete"]('main_user');

                _this169.cookies["delete"]('doctor_signature');

                _this169.cookies["delete"]('secret');

                _this169.cookies["delete"]('jwtToken');

                _this169.cookies.deleteAll('/doctor_group');

                setTimeout(function () {
                  // Reset again Cookie
                  _this169.cookies.set('jwtToken', jwtToken);

                  _this169.cookies.set('user_details', JSON.stringify(main_user));

                  _this169.cookies.set('secret', JSON.stringify(secret)); // Redirect to page


                  _this169.router.navigateByUrl("admin/dashboard");
                }, 500);
                break;

              case "No":
                _this169.dialogRef.close();

                break;
            }
          });
        }
      }, {
        key: "openModal",
        value: function openModal(data) {
          this.dialogRef = this.dialog.open(_common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_5__["DialogBoxComponent"], data);
        }
      }]);

      return DoctorGroupHeaderComponent;
    }();

    DoctorGroupHeaderComponent.ctorParameters = function () {
      return [{
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"]
      }, {
        type: _class_common_common_function__WEBPACK_IMPORTED_MODULE_4__["CommonFunction"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_6__["MatDialog"]
      }];
    };

    DoctorGroupHeaderComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-doctor-group-header',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./doctor-group-header.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor-group/doctor-group-header/doctor-group-header.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./doctor-group-header.component.css */
      "./src/app/components/doctor-group/doctor-group-header/doctor-group-header.component.css"))["default"]]
    })], DoctorGroupHeaderComponent);
    /***/
  },

  /***/
  "./src/app/components/doctor-office/add-patient/add-patient-manually/add-patient-manually.component.css":
  /*!**************************************************************************************************************!*\
    !*** ./src/app/components/doctor-office/add-patient/add-patient-manually/add-patient-manually.component.css ***!
    \**************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsDoctorOfficeAddPatientAddPatientManuallyAddPatientManuallyComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = ".add_form{ width: 1400px; margin: 20px auto; background: #f3f3f3; padding: 16px 10px; padding-bottom: 50px; border: 1px solid #91e7ff; }\n.add_form .form_wrapper .mat-form-field{ width: 100%;  }\n.add_form .form_wrapper textarea{ resize: none;}\n.add_form h2{ font-family: \"AvenirBlack\"; text-transform: uppercase; font-size: 24px; padding: 0 6px; color: #1dbce9; }\n.add_form .submit_form { display: block; width: 100%; text-align: center; margin-top: 30px; }\n.add_form .submit_form button{ border-radius: 5px; background: linear-gradient(180deg, #f9dc19, #daa505); color: #5e3619; text-transform: uppercase; font-family: \"AvenirBlack\"; font-size: 25px; padding: 2px;\nwidth: 240px; border: 3px solid #d59d01; }\n.add_form .submit_form button:nth-child(1){ background: linear-gradient(180deg, #f2be00, #a52a08); color: #f3f3f3; border: 2px solid #bb3c0d; margin-right: 16px; }\n.add_form .return_button { background: #1dbce9; color: #fff; margin-bottom: 12px;}\n.add_header{ display: flex; width: 1400px; margin: 10px auto;}\n.add_header button{ margin-left: auto;\n  background: linear-gradient(180deg, #fac855, #e47e2a)!important;\n  text-transform: uppercase;\n  font-family: \"AvenirBlack\"; padding-top: 4px;\n}\n@media screen and (max-width: 1540px){\n  .add_header{ width:90%;}\n  .add_form{ width:90%; }\n}\n@media screen and (max-width: 840px){\n  .add_form { width: 80%; }\n}\n@media screen and (max-width: 700px){\n  .add_form{ width: 90%; }\n}\n@media screen and (max-width: 560px){\n.add_form .submit_form button:nth-child(1) { margin-right: 0px; margin-bottom: 16px; }\n.add_form .submit_form button { width: 100%; }\n\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kb2N0b3Itb2ZmaWNlL2FkZC1wYXRpZW50L2FkZC1wYXRpZW50LW1hbnVhbGx5L2FkZC1wYXRpZW50LW1hbnVhbGx5LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsV0FBVyxhQUFhLEVBQUUsaUJBQWlCLEVBQUUsbUJBQW1CLEVBQUUsa0JBQWtCLEVBQUUsb0JBQW9CLEVBQUUseUJBQXlCLEVBQUU7QUFDdkkseUNBQXlDLFdBQVcsR0FBRztBQUN2RCxrQ0FBa0MsWUFBWSxDQUFDO0FBQy9DLGNBQWMsMEJBQTBCLEVBQUUseUJBQXlCLEVBQUUsZUFBZSxFQUFFLGNBQWMsRUFBRSxjQUFjLEVBQUU7QUFDdEgseUJBQXlCLGNBQWMsRUFBRSxXQUFXLEVBQUUsa0JBQWtCLEVBQUUsZ0JBQWdCLEVBQUU7QUFDNUYsK0JBQStCLGtCQUFrQixFQUFFLHFEQUFxRCxFQUFFLGNBQWMsRUFBRSx5QkFBeUIsRUFBRSwwQkFBMEIsRUFBRSxlQUFlLEVBQUUsWUFBWTtBQUM5TSxZQUFZLEVBQUUseUJBQXlCLEVBQUU7QUFDekMsNENBQTRDLHFEQUFxRCxFQUFFLGNBQWMsRUFBRSx5QkFBeUIsRUFBRSxrQkFBa0IsRUFBRTtBQUNsSywyQkFBMkIsbUJBQW1CLEVBQUUsV0FBVyxFQUFFLG1CQUFtQixDQUFDO0FBQ2pGLGFBQWEsYUFBYSxFQUFFLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQztBQUM3RCxvQkFBb0IsaUJBQWlCO0VBQ25DLCtEQUErRDtFQUMvRCx5QkFBeUI7RUFDekIsMEJBQTBCLEVBQUUsZ0JBQWdCO0FBQzlDO0FBRUE7RUFDRSxhQUFhLFNBQVMsQ0FBQztFQUN2QixXQUFXLFNBQVMsRUFBRTtBQUN4QjtBQUNBO0VBQ0UsWUFBWSxVQUFVLEVBQUU7QUFDMUI7QUFDQTtFQUNFLFdBQVcsVUFBVSxFQUFFO0FBQ3pCO0FBQ0E7QUFDQSw2Q0FBNkMsaUJBQWlCLEVBQUUsbUJBQW1CLEVBQUU7QUFDckYsZ0NBQWdDLFdBQVcsRUFBRTs7QUFFN0MiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2RvY3Rvci1vZmZpY2UvYWRkLXBhdGllbnQvYWRkLXBhdGllbnQtbWFudWFsbHkvYWRkLXBhdGllbnQtbWFudWFsbHkuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hZGRfZm9ybXsgd2lkdGg6IDE0MDBweDsgbWFyZ2luOiAyMHB4IGF1dG87IGJhY2tncm91bmQ6ICNmM2YzZjM7IHBhZGRpbmc6IDE2cHggMTBweDsgcGFkZGluZy1ib3R0b206IDUwcHg7IGJvcmRlcjogMXB4IHNvbGlkICM5MWU3ZmY7IH1cbi5hZGRfZm9ybSAuZm9ybV93cmFwcGVyIC5tYXQtZm9ybS1maWVsZHsgd2lkdGg6IDEwMCU7ICB9XG4uYWRkX2Zvcm0gLmZvcm1fd3JhcHBlciB0ZXh0YXJlYXsgcmVzaXplOiBub25lO31cbi5hZGRfZm9ybSBoMnsgZm9udC1mYW1pbHk6IFwiQXZlbmlyQmxhY2tcIjsgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgZm9udC1zaXplOiAyNHB4OyBwYWRkaW5nOiAwIDZweDsgY29sb3I6ICMxZGJjZTk7IH1cbi5hZGRfZm9ybSAuc3VibWl0X2Zvcm0geyBkaXNwbGF5OiBibG9jazsgd2lkdGg6IDEwMCU7IHRleHQtYWxpZ246IGNlbnRlcjsgbWFyZ2luLXRvcDogMzBweDsgfVxuLmFkZF9mb3JtIC5zdWJtaXRfZm9ybSBidXR0b257IGJvcmRlci1yYWRpdXM6IDVweDsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDE4MGRlZywgI2Y5ZGMxOSwgI2RhYTUwNSk7IGNvbG9yOiAjNWUzNjE5OyB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyBmb250LWZhbWlseTogXCJBdmVuaXJCbGFja1wiOyBmb250LXNpemU6IDI1cHg7IHBhZGRpbmc6IDJweDtcbndpZHRoOiAyNDBweDsgYm9yZGVyOiAzcHggc29saWQgI2Q1OWQwMTsgfVxuLmFkZF9mb3JtIC5zdWJtaXRfZm9ybSBidXR0b246bnRoLWNoaWxkKDEpeyBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTgwZGVnLCAjZjJiZTAwLCAjYTUyYTA4KTsgY29sb3I6ICNmM2YzZjM7IGJvcmRlcjogMnB4IHNvbGlkICNiYjNjMGQ7IG1hcmdpbi1yaWdodDogMTZweDsgfVxuLmFkZF9mb3JtIC5yZXR1cm5fYnV0dG9uIHsgYmFja2dyb3VuZDogIzFkYmNlOTsgY29sb3I6ICNmZmY7IG1hcmdpbi1ib3R0b206IDEycHg7fVxuLmFkZF9oZWFkZXJ7IGRpc3BsYXk6IGZsZXg7IHdpZHRoOiAxNDAwcHg7IG1hcmdpbjogMTBweCBhdXRvO31cbi5hZGRfaGVhZGVyIGJ1dHRvbnsgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxODBkZWcsICNmYWM4NTUsICNlNDdlMmEpIWltcG9ydGFudDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC1mYW1pbHk6IFwiQXZlbmlyQmxhY2tcIjsgcGFkZGluZy10b3A6IDRweDtcbn1cbiBcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDE1NDBweCl7XG4gIC5hZGRfaGVhZGVyeyB3aWR0aDo5MCU7fVxuICAuYWRkX2Zvcm17IHdpZHRoOjkwJTsgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogODQwcHgpe1xuICAuYWRkX2Zvcm0geyB3aWR0aDogODAlOyB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3MDBweCl7XG4gIC5hZGRfZm9ybXsgd2lkdGg6IDkwJTsgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTYwcHgpe1xuLmFkZF9mb3JtIC5zdWJtaXRfZm9ybSBidXR0b246bnRoLWNoaWxkKDEpIHsgbWFyZ2luLXJpZ2h0OiAwcHg7IG1hcmdpbi1ib3R0b206IDE2cHg7IH1cbi5hZGRfZm9ybSAuc3VibWl0X2Zvcm0gYnV0dG9uIHsgd2lkdGg6IDEwMCU7IH1cblxufVxuIl19 */";
    /***/
  },

  /***/
  "./src/app/components/doctor-office/add-patient/add-patient-manually/add-patient-manually.component.ts":
  /*!*************************************************************************************************************!*\
    !*** ./src/app/components/doctor-office/add-patient/add-patient-manually/add-patient-manually.component.ts ***!
    \*************************************************************************************************************/

  /*! exports provided: AddPatientManuallyComponent */

  /***/
  function srcAppComponentsDoctorOfficeAddPatientAddPatientManuallyAddPatientManuallyComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AddPatientManuallyComponent", function () {
      return AddPatientManuallyComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var moment_es6__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! moment-es6 */
    "./node_modules/moment-es6/index.js");
    /* harmony import */


    var moment_es6__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(moment_es6__WEBPACK_IMPORTED_MODULE_7__);

    var AddPatientManuallyComponent = /*#__PURE__*/function () {
      function AddPatientManuallyComponent(activatedRoute, cookieService, snackBar, httpRequestService) {
        _classCallCheck(this, AddPatientManuallyComponent);

        this.activatedRoute = activatedRoute;
        this.cookieService = cookieService;
        this.snackBar = snackBar;
        this.httpRequestService = httpRequestService; // today = moment().format('L');
        // doctorOfficeChangePasswordForm: FormGroup;
        // loader: boolean = false;
        // headerFlag: any;
        // jwtToken: any;
        // cookiesData: any;
        // cookies_id: string;
        // formTag: boolean = false;
        //
        // parent_type: any = '';
        // parent_id: any = '';
        //
        // states: any = [];
        // // lib
        // emailregex: RegExp = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
        // passwordregex: RegExp = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/;
        //
        // insuranceData: any = [];
        // insuranceTypeData: any = [];
        // temtdata: any = '';
        // // formdata
        // formfieldrefresh: boolean = false;
        // updatetable: boolean = false;
        // formfieldrefreshdata: any = null;
        // formdata: any = {
        //   successmessage: "Added Successfully !!",
        //   submittext: "Submit",
        //   canceltext: "Cancel Now",
        //   resettext: "reset This",
        //   redirectpath: "/doctor-office/dashboard",
        //   submitactive: true, //optional, default true
        //   apiUrl: environment.calendarApi,
        //   endpoint: 'add-to-calendar-manually',
        //   jwttoken: "",
        //   //hidereset:true,
        //   //hidecancel:true,
        //   cancelroute: '/doctor-office/dashboard',
        //   fields: [
        //     {
        //       heading: "<h2>Patient General Information</h2>",
        //       type: 'text',
        //       name: 'practice_name',
        //       placeholder: 'Practice Name',
        //       label: 'Practice Name',
        //       value: '',
        //       validators: { rule: 'required' },
        //       error: 'Enter practice name',
        //       caption: 'Patient General Information'
        //     },
        //     { type: 'textarea', name: 'address', placeholder: 'Address', label: 'Address', value: '' },
        //     {
        //       label: "State",
        //       name: "state",
        //       type: 'select',
        //       val: this.states,
        //       value: [],
        //       multiple: false,
        //       validations: [
        //         { rule: 'required' }
        //       ],
        //       prefix: "",
        //       suffix: ""
        //     },
        //     { type: 'text', name: 'city', placeholder: 'City', label: 'City', value: '' },
        //     { type: 'text', name: 'zip', placeholder: 'ZIP', label: 'ZIP', value: '' },
        //     {
        //       type: 'text',
        //       name: 'patient_name',
        //       placeholder: 'Patient Name',
        //       label: 'Patient Name',
        //       value: '',
        //       validators: { rule: 'required' },
        //       error: 'Enter patient name'
        //     },
        //     {
        //       type: 'date',
        //       name: 'dob',
        //       placeholder: 'Date of Birth',
        //       label: 'Date of Birth',
        //       value: '',
        //       validators: { rule: 'required' },
        //       error: 'Enter date of birth of the patient'
        //     },
        //     {
        //       type: 'select',
        //       name: 'gender',
        //       placeholder: 'Gender',
        //       label: 'Gender',
        //       val: [
        //         { name: 'Male', val: 'male' },
        //         { name: 'Female', val: 'female' }
        //       ],
        //       validators: { rule: 'required' }, error: 'Select gender'
        //     },
        //     {
        //       type: 'text',
        //       name: 'patient_email',
        //       placeholder: 'Patient Email',
        //       label: 'Patient Email',
        //       value: '',
        //       validators: [Validators.required, Validators.email],
        //       error: 'Enter patient email'
        //     },
        //     {
        //       type: 'text',
        //       name: 'height',
        //       placeholder: 'Ex. 6\'10"',
        //       label: 'Height',
        //       value: '',
        //       validators: { rule: 'required' },
        //       error: 'Enter patient height'
        //     },
        //     {
        //       type: 'text',
        //       name: 'weight',
        //       placeholder: 'Ex. 210 lbs',
        //       label: 'Weight',
        //       value: '',
        //       validators: { rule: 'required' },
        //       error: 'Enter patient weight'
        //     },
        //     { type: 'text', name: 'booking_date', placeholder: 'Date', label: 'Booking date', value: this.today, disabled: true },
        //
        //     {
        //       heading: '<h2>Insurance Information</h2>',
        //       label: "Insurance name",
        //       name: 'insurance_id',
        //       hint: '',
        //       type: 'select',
        //       val: this.insuranceData,
        //       value: [],
        //       multiple: false,
        //       validations: [
        //         { rule: 'required' }
        //       ],
        //       prefix: "",
        //       suffix: ""
        //     },
        //
        //     {
        //       name: "parent_type",
        //       type: 'hidden',
        //       value: this.parent_type
        //     },
        //     {
        //       name: "parent_id",
        //       type: 'hidden',
        //       value: this.parent_id
        //     },
        //     {
        //       type: 'date',
        //       name: 'startdate',
        //       placeholder: 'Appointment Date',
        //       label: 'Appointment Date',
        //       value: '',
        //       validators: { rule: 'required' },
        //       error: 'Enter Appointment Date'
        //     },
        //     {
        //       type: 'select',
        //       label: "Time Zone",
        //       name: 'reqTimezone',
        //       val: [
        //         { name: 'Alaska Standard Time', val: '-08:00|America/Anchorage' },
        //         { name: 'Pacific Standard Time', val: '-07:00|America/Los_Angeles' },
        //         { name: 'Mountain Standard Time(GMT-06:00)', val: '-06:00|America/Denver' },
        //         { name: 'Mountain Standard Time(GMT-07:00) (no DST)', val: '-07:00|America/Phoenix' },
        //         { name: 'Central Standard Time', val: '-05:00|America/Chicago' },
        //         { name: 'Eastern Standard Time', val: '-04:00|America/New_York' },
        //         { name: 'Hawaii Standard Time', val: '-10:00|Pacific/Honolulu' }
        //       ],
        //       validations: [
        //         { rule: 'required' }
        //       ],
        //       prefix: "",
        //       suffix: ""
        //     },
        //     {
        //       type: 'select',
        //       label: "Appointment Time",
        //       name: 'appointment_time',
        //       val: [
        //         { name: '6.00 AM to 6.30 AM', val: '6.00 AM to 6.30 AM' },
        //         { name: '6.30 AM to 7.00 AM', val: '6.30 AM to 7.00 AM' },
        //         { name: '7.00 AM to 7.30 AM', val: '7.00 AM to 7.30 AM' },
        //         { name: '7.30 AM to 8.00 AM', val: '7.30 AM to 8.00 AM' },
        //         { name: '8.00 AM to 8.30 AM', val: '8.00 AM to 8.30 AM' },
        //         { name: '8.30 AM to 9.00 AM', val: '8.30 AM to 9.00 AM' },
        //         { name: '9.00 AM to 9.30 AM', val: '9.00 AM to 9.30 AM' },
        //         { name: '9.30 AM to 10.00 AM', val: '9.30 AM to 10.00 AM' },
        //         { name: '10.00 AM to 10.30 AM', val: '10.00 AM to 10.30 AM' },
        //         { name: '10.30 AM to 11.00 AM', val: '10.30 AM to 11.00 AM' },
        //         { name: '11.00 AM to 11.30 AM', val: '11.00 AM to 11.30 AM' },
        //         { name: '11.30 AM to 12.00 AM', val: '11.30 AM to 12.00 AM' },
        //         { name: '12.00 PM to 12.30 PM', val: '12.00 PM to 12.30 PM' },
        //         { name: '1.00 PM to 1.30 PM', val: '1.00 PM to 1.30 PM' },
        //         { name: '1.30 PM to 2.00 PM', val: '1.30 PM to 2.00 PM' },
        //         { name: '2.00 PM to 2.30 PM', val: '2.00 PM to 2.30 PM' },
        //         { name: '2.30 PM to 3.00 PM', val: '2.30 PM to 3.00 PM' },
        //         { name: '3.00 PM to 3.30 PM', val: '3.00 PM to 3.30 PM' },
        //         { name: '3.30 PM to 4.00 PM', val: '3.30 PM to 4.00 PM' },
        //         { name: '4.00 PM to 4.30 PM', val: '4.00 PM to 4.30 PM' },
        //         { name: '4.30 PM to 5.00 PM', val: '4.30 PM to 5.00 PM' },
        //         { name: '5.00 PM to 5.30 PM', val: '5.00 PM to 5.30 PM' },
        //         { name: '5.30 PM to 6.00 PM', val: '5.30 PM to 6.00 PM' },
        //         { name: '6.00 PM to 6.30 PM', val: '6.00 PM to 6.30 PM' },
        //         { name: '6.30 PM to 7.00 PM', val: '6.30 PM to 7.00 PM' },
        //         { name: '7.00 PM to 7.30 PM', val: '7.00 PM to 7.30 PM' },
        //         { name: '7.30 PM to 8.00 PM', val: '7.30 PM to 8.00 PM' },
        //         { name: '8.00 PM to 8.30 PM', val: '8.00 PM to 8.30 PM' },
        //         { name: '8.30 PM to 9.00 PM', val: '8.30 PM to 9.00 PM' },
        //         { name: '9.00 PM to 9.00 PM', val: '9.00 PM to 9.00 PM' },
        //         { name: '9.30 PM to 10.00 PM', val: '9.30 PM to 10.00 PM' }
        //       ],
        //       validations: [
        //         { rule: 'required' }
        //       ],
        //       prefix: "",
        //       suffix: ""
        //     },
        //
        //     {
        //       heading: "<h2>Autonomic Nervous System Dysfunction (ANSD)</h2>"
        //     },
        //     {
        //       heading: 'Blurred Vision',
        //       type: 'checkbox',
        //       name: 'bv_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'bv_six_months',
        //       label: '6 Months',
        //     },
        //     {
        //       heading: 'Elevated Blood Sugar',
        //       type: 'checkbox',
        //       name: 'ebs_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'ebs_six_months',
        //       label: '6 Months',
        //     },
        //     {
        //       heading: 'Extreme Thirst',
        //       type: 'checkbox',
        //       name: 'et_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'et_six_months',
        //       label: '6 Months',
        //     },
        //     {
        //       heading: 'Frequent Urination',
        //       type: 'checkbox',
        //       name: 'fu_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'fu_six_months',
        //       label: '6 Months',
        //     },
        //     {
        //       heading: 'Fatigue (Tiredness)',
        //       type: 'checkbox',
        //       name: 'ft_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'ft_six_months',
        //       label: '6 Months',
        //     },
        //     {
        //       heading: 'Heartburn',
        //       type: 'checkbox',
        //       name: 'hb_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'hb_six_months',
        //       label: '6 Months',
        //     },
        //     {
        //       heading: 'Increased Hunger',
        //       type: 'checkbox',
        //       name: 'ih_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'ih_six_months',
        //       label: '6 Months',
        //     },
        //     {
        //       heading: 'Nausea',
        //       type: 'checkbox',
        //       name: 'nau_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'nau_six_months',
        //       label: '6 Months',
        //     },
        //     {
        //       heading: 'Numbness & Tingling in Hands or Feet',
        //       type: 'checkbox',
        //       name: 'nthf_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'nthf_six_months',
        //       label: '6 Months',
        //     },
        //     {
        //       heading: 'Vomiting',
        //       type: 'checkbox',
        //       name: 'vomiting_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'vomiting_six_months',
        //       label: '6 Months',
        //     },
        //
        //     { heading: '<h2>Sudomotor Dysfunction (SUDOD)</h2>' },
        //     {
        //       heading: 'Burning Sensations',
        //       type: 'checkbox',
        //       name: 'bs_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'bs_six_months',
        //       label: '6 Months',
        //     },
        //     {
        //       heading: 'Difficulty Digesting Food',
        //       type: 'checkbox',
        //       name: 'ddf_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'ddf_six_months',
        //       label: '6 Months',
        //     },
        //     {
        //       heading: 'Dizziness or Fainting',
        //       type: 'checkbox',
        //       name: 'dof_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'dof_six_months',
        //       label: '6 Months',
        //     },
        //     {
        //       heading: 'Exercise Intolerance',
        //       type: 'checkbox',
        //       name: 'ei_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'ei_six_months',
        //       label: '6 Months',
        //     },
        //     {
        //       heading: 'Sexual Difficulties',
        //       type: 'checkbox',
        //       name: 'sd_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'sd_six_months',
        //       label: '6 Months',
        //     },
        //     {
        //       heading: 'Sweat Abnormalities',
        //       type: 'checkbox',
        //       name: 'sa_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'sa_six_months',
        //       label: '6 Months',
        //     },
        //     {
        //       heading: 'Tingling Hands & Feet',
        //       type: 'checkbox',
        //       name: 'thf_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'thf_six_months',
        //       label: '6 Months',
        //     },
        //     {
        //       heading: 'Urinary Problems',
        //       type: 'checkbox',
        //       name: 'up_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'up_six_months',
        //       label: '6 Months',
        //     },
        //
        //     { heading: '<h2>ENDOTHELIAL DYSFUNCTION (ENDOD)<h2>' },
        //     {
        //       heading: 'Angina (severe chest pain, often spreading to shoulder, arm, back, neck, or jaw)',
        //       type: 'checkbox',
        //       name: 'angina_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'angina_six_months',
        //       label: '6 Months',
        //     },
        //     {
        //       heading: 'Chest Pain that goes away with rest',
        //       type: 'checkbox',
        //       name: 'cptgawr_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'cptgawr_six_months',
        //       label: '6 Months',
        //     },
        //     {
        //       heading: 'Heartburn',
        //       type: 'checkbox',
        //       name: 'hrtbn_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'hrtbn_six_months',
        //       label: '6 Months',
        //     },
        //     {
        //       heading: 'Pain In Calves',
        //       type: 'checkbox',
        //       name: 'pic_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'pic_six_months',
        //       label: '6 Months',
        //     },
        //     {
        //       heading: 'Shortness of Breath',
        //       type: 'checkbox',
        //       name: 'sob_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'sob_six_months',
        //       label: '6 Months',
        //     },
        //     {
        //       heading: 'Stroke',
        //       type: 'checkbox',
        //       name: 'stroke_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'stroke_six_months',
        //       label: '6 Months',
        //     },
        //     {
        //       heading: 'TIA (mini stroke)',
        //       type: 'checkbox',
        //       name: 'tia_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'tia_six_months',
        //       label: '6 Months',
        //     },
        //
        //     { heading: '<h2>CARDIOMETABOLIC RISK (CMR)</h2>' },
        //     {
        //       heading: 'Headaches',
        //       type: 'checkbox',
        //       name: 'headaches_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'headaches_six_months',
        //       label: '6 Months',
        //     },
        //     {
        //       heading: 'Dizziness',
        //       type: 'checkbox',
        //       name: 'dizziness_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'dizziness_six_months',
        //       label: '6 Months',
        //     },
        //     {
        //       heading: 'Swelling of Ankles',
        //       type: 'checkbox',
        //       name: 'soa_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'soa_six_months',
        //       label: '6 Months',
        //     },
        //
        //     { heading: '<h2>INSULIN RESISTANCE (IR)</h2>' },
        //     {
        //       heading: 'Blurred Vision',
        //       type: 'checkbox',
        //       name: 'blv_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'blv_six_months',
        //       label: '6 Months',
        //     },
        //     {
        //       heading: 'Elevated Blood Sugar',
        //       type: 'checkbox',
        //       name: 'ebsr_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'ebsr_six_months',
        //       label: '6 Months',
        //     },
        //     {
        //       heading: 'Extreme Thirst',
        //       type: 'checkbox',
        //       name: 'ext_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'ext_six_months',
        //       label: '6 Months',
        //     },
        //     {
        //       heading: 'Fatigue (Tiredness)',
        //       type: 'checkbox',
        //       name: 'ftd_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'ftd_six_months',
        //       label: '6 Months',
        //     },
        //     {
        //       heading: 'Increased Hunger',
        //       type: 'checkbox',
        //       name: 'ihr_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'ihr_six_months',
        //       label: '6 Months',
        //     },
        //
        //     { heading: '<h2>SMALL FIBER SENSORY NEUROPATHY (SFN)</h2>' },
        //     {
        //       heading: 'Burning Sensations',
        //       type: 'checkbox',
        //       name: 'burns_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'burns_six_months',
        //       label: '6 Months',
        //     },
        //     {
        //       heading: 'Painful Contact With Socks or Bed Sheets',
        //       type: 'checkbox',
        //       name: 'pcwsbs_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'pcwsbs_six_months',
        //       label: '6 Months',
        //     },
        //     {
        //       heading: 'Pebble or Sandlike Sensation In Shoes',
        //       type: 'checkbox',
        //       name: 'psss_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'psss_six_months',
        //       label: '6 Months',
        //     },
        //     {
        //       heading: 'Pebble or Sandlike Sensation In Shoes',
        //       type: 'checkbox',
        //       name: 'psss_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'psss_six_months',
        //       label: '6 Months',
        //     },
        //     {
        //       heading: 'Stabbing or Electrical Shock Sensation',
        //       type: 'checkbox',
        //       name: 'sess_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'sess_six_months',
        //       label: '6 Months',
        //     },
        //     {
        //       heading: 'Pins And Needles Sensation In Feet',
        //       type: 'checkbox',
        //       name: 'pnsf_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'pnsf_six_months',
        //       label: '6 Months',
        //     },
        //
        //     { heading: '<h2>CARDIOMETABOLIC AUTONOMIC NEUROPATHY (CAN)</h2>' },
        //     {
        //       heading: 'Blurred Vision',
        //       type: 'checkbox',
        //       name: 'bldv_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'bldv_six_months',
        //       label: '6 Months',
        //     },
        //     {
        //       heading: 'Cold, Clammy, Pale Skin',
        //       type: 'checkbox',
        //       name: 'ccps_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'ccps_six_months',
        //       label: '6 Months',
        //     },
        //     {
        //       heading: 'Depression',
        //       type: 'checkbox',
        //       name: 'depression_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'depression_six_months',
        //       label: '6 Months',
        //     },
        //     {
        //       heading: 'Dizziness or Lightheadedness',
        //       type: 'checkbox',
        //       name: 'dol_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'dol_six_months',
        //       label: '6 Months',
        //     },
        //     {
        //       heading: 'Thirst',
        //       type: 'checkbox',
        //       name: 'thirst_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'thirst_six_months',
        //       label: '6 Months',
        //     },
        //     {
        //       heading: 'Fainting',
        //       type: 'checkbox',
        //       name: 'fainting_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'fainting_six_months',
        //       label: '6 Months',
        //     },
        //     {
        //       heading: 'Fatigue (Tiredness)',
        //       type: 'checkbox',
        //       name: 'fatt_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'fatt_six_months',
        //       label: '6 Months',
        //     },
        //     {
        //       heading: 'Lack of Concentration',
        //       type: 'checkbox',
        //       name: 'loc_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'loc_six_months',
        //       label: '6 Months',
        //     },
        //     {
        //       heading: 'Lack of Energy',
        //       type: 'checkbox',
        //       name: 'loe_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'loe_six_months',
        //       label: '6 Months',
        //     },
        //     {
        //       heading: 'Nausea',
        //       type: 'checkbox',
        //       name: 'nausea_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'nausea_six_months',
        //       label: '6 Months',
        //     },
        //     {
        //       heading: 'Rapid, Shallow Breathing',
        //       type: 'checkbox',
        //       name: 'rsb_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'rsb_six_months',
        //       label: '6 Months',
        //     },
        //
        //     { heading: '<h2>PLETHYSMOGRAPHY CARDIOVASCULAR DISEASE (PTG CVD)</h2>' },
        //     {
        //       heading: 'Blood clot in a vein (Venous Thrombosis)',
        //       type: 'checkbox',
        //       name: 'bciv_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'bciv_six_months',
        //       label: '6 Months',
        //     },
        //     {
        //       heading: 'Heart Attack',
        //       type: 'checkbox',
        //       name: 'hattk_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'hattk_six_months',
        //       label: '6 Months',
        //     },
        //     {
        //       heading: 'Irregular heartbeat, too fast/slow (Atrial Fibrillation)',
        //       type: 'checkbox',
        //       name: 'iftfs_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'ihtfs_six_months',
        //       label: '6 Months',
        //     },
        //     {
        //       heading: 'Stroke',
        //       type: 'checkbox',
        //       name: 'strk_today',
        //       label: 'Today',
        //     },
        //     {
        //       type: 'checkbox',
        //       name: 'strk_six_months',
        //       label: '6 Months',
        //     },
        //     {
        //       heading: '<h2>Notes</h2>',
        //       type: 'textarea',
        //       name: 'notes',
        //       placeholder: '',
        //       label: 'Notes',
        //       value: '',
        //       validators: {  }
        //     },
        //     {
        //       name: "add_to_google",
        //       type: 'hidden',
        //       value: true
        //     },
        //
        //     { type: 'input', name: 'username', placeholder: 'Organizer Name', label: 'Organizer Name', value: '', disabled: true },
        //     { type: 'input', name: 'useremail', placeholder: 'Organizer Email', label: 'Organizer Email', value: '', disabled: true },
        //     { type: 'input', name: 'attendees', placeholder: 'Attendee Email', label: 'Attendee Email', value: '', disabled: true },
        //     { type: 'input', name: 'additional_notes', placeholder: 'Additional Notes', label: 'Additional Notes', value: '' }
        //   ]
        // };
        //
        // public resolveData;
        //
        // constructor(private formBuilder: FormBuilder, private httpService: HttpServiceService,
        //   private snackBar: MatSnackBar, private commonFunction: CommonFunction, private activatedRoute: ActivatedRoute,
        //   private cookieService: CookieService, private router: Router) {
        //
        //   this.getStates();
        //
        //   this.headerFlag = this.activatedRoute.snapshot.url[0].path;
        //   this.jwtToken = cookieService.get('jwtToken');
        //   this.formdata.jwttoken = this.jwtToken;
        //   let allcookies: any;
        //   allcookies = cookieService.getAll();
        //   this.cookiesData = JSON.parse(allcookies.user_details);
        //   this.cookies_id = this.cookiesData._id;
        //
        //   this.formfieldrefreshdata = {
        //     field: 'addfromcontrol',
        //     value: {
        //       name: "doctor_office_id",
        //       type: 'hidden',
        //       value: this.cookiesData._id
        //     }
        //   };
        //
        //   var data: any = {
        //     "source": "data_pece",
        //     "condition": {
        //       _id_object: this.cookiesData.doctor_id
        //     },
        //     "token": this.jwtToken,
        //   };
        //
        //   this.httpService.httpViaPost("datalist", data).subscribe(response => {
        //     if(response.status == true) {
        //       var doctorDetails = [];
        //       for (let i = 0; i < response.res.length; i++) {
        //         let temp = {};
        //         temp['name'] = response.res[i].firstname + ' ' + response.res[i].lastname;
        //         temp['val'] = response.res[i]._id;
        //         doctorDetails.push(temp);
        //       }
        //
        //       this.parent_type = response.res[0].parent_type;
        //       this.parent_id = response.res[0].parent_id;
        //
        //       setTimeout(() => {
        //         this.formfieldrefreshdata = {
        //           field: 'addfromcontrol',
        //           value: {
        //             heading: "<h2>Appointment Details</h2>",
        //             label: "Select Doctor",
        //             name: "doctor_id",
        //             hint: '',
        //             type: 'select',
        //             val: doctorDetails,
        //             multiple: false,
        //             validations: [
        //               { rule: 'required' }
        //             ],
        //             prefix: "",
        //             suffix: "",
        //             after: 'insurance_id'
        //           }
        //         };
        //       }, 300);
        //     }
        //   });
        // }
        //
        // ngOnInit() {
        //   if (this.cookieService.check('jwtToken')) {
        //     this.activatedRoute.data.forEach((data) => {
        //       this.resolveData = data.eventdayarrData;
        //
        //       var otherFieldsData: any = [];
        //       for (let i = this.resolveData.others.patient_information.length - 1; i >= 0; i--) {
        //         let fieldData: any;
        //         switch (this.resolveData.others.patient_information[i].type) {
        //           case 'checkbox':
        //             otherFieldsData.push({
        //               type: 'checkbox',
        //               label: this.resolveData.others.patient_information[i].description,
        //               name: this.resolveData.others.patient_information[i].label,
        //               after: 'appointment_time'
        //             });
        //             break;
        //           case 'textfield':
        //             otherFieldsData.push({
        //               type: 'text',
        //               name: this.resolveData.others.patient_information[i].label,
        //               label: this.resolveData.others.patient_information[i].description,
        //               value: '',
        //               validators: { rule: 'required' },
        //               after: 'appointment_time'
        //             });
        //             break;
        //           case 'dropdown':
        //             var temp: any = [];
        //             for (let j = 0; j < this.resolveData.others.patient_information[i].addfield.length; j++) {
        //               let json = {
        //                 name: this.resolveData.others.patient_information[i].addfield[j],
        //                 val: this.resolveData.others.patient_information[i].addfield[j]
        //               }
        //               temp.push(json);
        //             }
        //
        //             otherFieldsData.push({
        //               label: this.resolveData.others.patient_information[i].description,
        //               name: this.resolveData.others.patient_information[i].label,
        //               type: 'select',
        //               val: temp,
        //               validations: [
        //                 { rule: 'required' }
        //               ],
        //               after: 'appointment_time'
        //             });
        //             break;
        //         }
        //       }
        //
        //       otherFieldsData[otherFieldsData.length - 1].heading = "<h2>Others Details</h2>";
        //
        //       this.formfieldrefreshdata = {
        //         field: 'addfromcontrol',
        //         value: otherFieldsData
        //       }
        //
        //       console.log('Loop finished.');
        //       console.log("Hello World: ", otherFieldsData);
        //     });
        //   } else {
        //     this.openSnackBar('Token not found');
        //   }
        // }
        //
        // getStates(): any {
        //   /* ****************** Get states value from assets/states.json ****************** */
        //   this.httpService.get('assets/data/states.json').subscribe(res => {
        //     var state: any = res;
        //     for (let loop = 0; loop < state.length; loop++) {
        //       this.states.push({ name: state[loop].text, val: state[loop].value });
        //     }
        //
        //     for (let i = 0; i < this.resolveData.others.insurance.length; i++) {
        //       let temp = {};
        //       temp['name'] = this.resolveData.others.insurance[i].insurancename;
        //       temp['val'] = this.resolveData.others.insurance[i]._id;
        //       this.insuranceData.push(temp);
        //     }
        //     this.insuranceData.push({ name: 'Others', val: 0 });
        //   }, error => {
        //     console.log('Oooops! Cannot get states.');
        //   });
        // }
        //
        // openSnackBar(message: string, action: string = null) {
        //   this.snackBar.open(message, action, {
        //     duration: 3000,
        //   });
        // }
        //
        // listenFormFieldChange(val: any) {
        //   switch(val.field.name) {
        //     case 'insurance_id':
        //       if(val.fieldval != 0) {
        //         var countFlag: number = 0;
        //         for (let i = 0; i < this.resolveData.others.insurance_type.length; i++) {
        //           for(let j = 0; j < this.resolveData.others.insurance_type[i].insurance_id.length; j++) {
        //             if(val.fieldval == this.resolveData.others.insurance_type[i].insurance_id[j]) {
        //               countFlag++;
        //               let temp: any = {};
        //               temp['name'] = this.resolveData.others.insurance_type[i].insurancetype_name;
        //               temp['val'] = this.resolveData.others.insurance_type[i]._id;
        //               this.insuranceTypeData.push(temp);
        //             }
        //           }
        //         }
        //
        //         if(countFlag == 0) {
        //           this.insuranceTypeData.push({});
        //         }
        //
        //         this.formfieldrefreshdata = { field: 'removefromcontrol', value: { name: 'insurance_name_input' } };
        //         this.formfieldrefreshdata = { field: 'removefromcontrol', value: { name: 'insurance_type_input' } };
        //         this.formfieldrefreshdata = {
        //           field: 'addfromcontrol',
        //           value: {
        //             label: "Insurance type",
        //             name: "insurance_type",
        //             hint: '',
        //             type: 'select',
        //             val: this.insuranceTypeData,
        //             multiple: false,
        //             validations: [
        //               { rule: 'required' }
        //             ],
        //             prefix: "",
        //             suffix: "",
        //             after: 'insurance_id'
        //           }
        //         };
        //       } else {
        //         this.formfieldrefreshdata = { field: 'removefromcontrol', value: { name: 'insurance_type' } };
        //
        //         setTimeout(() => {
        //           this.formfieldrefreshdata = {
        //             field: 'addfromcontrol',
        //             value: {
        //               label: 'Name of the insurance',
        //               name: 'insurance_name_input',
        //               type: 'text',
        //               val: '',
        //               validators: [
        //                 { rule: 'required' }
        //               ],
        //               prefix: "",
        //               suffix: "",
        //               after: 'insurance_id'
        //             }
        //           };
        //         }, 1000);
        //
        //         setTimeout(() => {
        //           this.formfieldrefreshdata = {
        //             field: 'addfromcontrol',
        //             value: {
        //               type: 'text',
        //               name: 'insurance_type_input',
        //               placeholder: 'Insurance type',
        //               label: 'Insurance type',
        //               value: '',
        //               validators: [
        //                 { rule: 'required' }
        //               ],
        //               prefix: "",
        //               suffix: "",
        //               after: 'insurance_name_input'
        //             }
        //           };
        //         }, 2000);
        //       }
        //       break;this.cookiesData
        //     case 'doctor_id':
        //       let data: any = {
        //         "source": "tech_by_doctor_id",
        //         "condition": {
        //           _id_object: val.fieldval
        //         },
        //         "token": this.jwtToken,
        //       };
        //
        //       this.httpService.httpViaPost("datalist", data).subscribe(response => {
        //         // this.formfieldrefreshdata = { field: 'removefromcontrol', value: { name: 'doctor_id' } };
        //         // this.formfieldrefreshdata = { field: 'removefromcontrol', value: { name: 'parent_type' } };
        //         // this.formfieldrefreshdata = { field: 'removefromcontrol', value: { name: 'parent_id' } };
        //
        //         if(response.status == true) {
        //           var techDetails = [];
        //           for (let i = 0; i < response.res.length; i++) {
        //             let temp = {};
        //             temp['name'] = response.res[i].firstname + ' ' + response.res[i].lastname;
        //             temp['val'] = response.res[i]._id;
        //             techDetails.push(temp);
        //           }
        //         }
        //
        //         // set doctor dropdown
        //         setTimeout(() => {
        //           this.formfieldrefreshdata = {
        //             field: 'addfromcontrol',
        //             value: {
        //               label: "Select Tech",
        //               name: "tech_id",
        //               hint: '',
        //               type: 'select',
        //               val: techDetails,
        //               validations: [
        //                 { rule: 'required' }
        //               ],
        //               after: 'doctor_id'
        //             }
        //           };
        //         }, 100);
        //       });
        //       break;
        //     case 'doctor_id':
        //       let data2: any = {
        //         "source": "data_pece",
        //         "condition": {
        //           "_id_object": val.fieldval
        //         },
        //         "token": this.jwtToken,
        //       };
        //
        //       this.httpService.httpViaPost("datalist", data2).subscribe(response => {
        //         if(response.status == true) {
        //           // set parent id and type
        //           let parentData: any = {
        //             "source": "data_pece",
        //             "condition": {
        //               _id_object: val.fieldval
        //             },
        //             "token": this.jwtToken,
        //           };
        //
        //           this.httpService.httpViaPost("datalist", parentData).subscribe(response => {
        //             if(response.status == true) {
        //               if(typeof(response.res[0].parent_type) != 'undefined') {
        //                 setTimeout(() => {
        //                   this.formfieldrefreshdata = {
        //                     field: 'addfromcontrol',
        //                     value: {
        //                       name: "parent_type",
        //                       type: 'hidden',
        //                       value: response.res[0].parent_type
        //                     }
        //                   };
        //                 }, 200);
        //
        //                 setTimeout(() => {
        //                   this.formfieldrefreshdata = {
        //                     field: 'addfromcontrol',
        //                     value: {
        //                       name: "parent_id",
        //                       type: 'hidden',
        //                       value: response.res[0].parent_id
        //                     }
        //                   };
        //                 }, 300);
        //               }
        //             }
        //           });
        //         }
        //       });
        //       break;
        //   }
        // }

        this.today = moment_es6__WEBPACK_IMPORTED_MODULE_7___default()().format('L');
        this.states = [];
        this.configData = {
          appName: 'Calendar-Management',
          jwtToken: '',
          baseUrl: 'https://m9mkuic6o9.execute-api.us-east-1.amazonaws.com/dev/api/',
          endPoint: {
            add: 'add-or-update-event-data',
            datalist: 'datalist',
            deleteEvent: 'delete-single-event',
            viewEventSlots: 'view-event-eventdayarr',
            search: 'search',
            countSlot: 'count-slot',
            addToCalendar: 'add-to-calendar-manually',
            getRefreshToken: 'get-refresh-token',
            getTokenInfo: 'getauthorization-pece-getuserdata',
            syncWithGoogle: 'get-events-from-google',
            insuranceDataManage: 'insurance-data-manage'
          },
          urls: [],
          timeZone: [{
            text: 'Alaska Standard Time',
            value: '-08:00|America/Anchorage'
          }, {
            text: 'Pacific Standard Time',
            value: '-07:00|America/Los_Angeles'
          }, {
            text: 'Mountain Standard Time(GMT-06:00)',
            value: '-06:00|America/Denver'
          }, {
            text: 'Mountain Standard Time(GMT-07:00) (no DST)',
            value: '-07:00|America/Phoenix'
          }, {
            text: 'Central Standard Time',
            value: '-05:00|America/Chicago'
          }, {
            text: 'Eastern Standard Time',
            value: '-04:00|America/New_York'
          }, {
            text: 'Hawaii Standard Time',
            value: '-10:00|Pacific/Honolulu'
          }],
          eventType: [{
            text: 'Admin Meetings',
            value: 1
          }],
          responseData: '',
          submitAnotherRecord: 'Add New Record',
          patientInfoFormFields: [],
          calendarInfoFormFields: {},
          primaryCondition: {}
        };
        this.loader = false;
        this.timeslots = [];
        this.headerFlag = this.activatedRoute.snapshot.url[0].path;
      }

      _createClass(AddPatientManuallyComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this170 = this;

          /******* Get user details from cookies ******/
          this.userDetails = JSON.parse(this.cookieService.get('user_details'));
          this.configData = Object.assign(this.configData, this.userDetails);
          console.log('this.userDetails', this.userDetails);
          this.populateFormFields();

          if (this.cookieService.check('jwtToken')) {
            this.configData.jwtToken = this.cookieService.get('jwtToken');
            this.activatedRoute.data.forEach(function (data) {
              _this170.resolveData = data.eventdayarrData;
              _this170.configData.responseData = data.eventdayarrData.data;
            });
          } else {
            this.openSnackBar('Token not found');
          } // this.configData.primaryCondition = Object.assign(this.configData.primaryCondition, {userid: {$in: [this.userDetails._id]}});

        }
      }, {
        key: "populateFormFields",
        value: function populateFormFields() {
          var _this171 = this;

          /* ****************** Get states value from assets/states.json ****************** */
          this.httpRequestService.get('assets/data/states.json').subscribe(function (res) {
            _this171.states = res;
            var insuranceData = [];

            for (var i = 0; i < _this171.resolveData.others.insurance.length; i++) {
              var temp = {};
              temp['text'] = _this171.resolveData.others.insurance[i].insurancename;
              temp['value'] = _this171.resolveData.others.insurance[i]._id;
              insuranceData.push(temp);
            }

            insuranceData.push({
              text: 'Others',
              value: 0
            });
            var insuranceTypeData = [];

            for (var _i = 0; _i < _this171.resolveData.others.insurance_type.length; _i++) {
              var _temp = {};
              _temp['text'] = _this171.resolveData.others.insurance_type[_i].insurancetype_name;
              _temp['value'] = _this171.resolveData.others.insurance_type[_i]._id;
              _temp['child_of'] = _this171.resolveData.others.insurance_type[_i].insurance_id;
              insuranceTypeData.push(_temp);
            } // console.log('insuranceTypeData', insuranceTypeData);


            var otherFieldsData = [];

            for (var _i2 = 0; _i2 < _this171.resolveData.others.patient_information.length; _i2++) {
              var fieldData = void 0;

              switch (_this171.resolveData.others.patient_information[_i2].type) {
                case 'checkbox':
                  fieldData = {
                    type: 'checkbox',
                    label: _this171.resolveData.others.patient_information[_i2].description,
                    checkItems: [{
                      name: _this171.resolveData.others.patient_information[_i2].label,
                      value: false,
                      label: '',
                      labelPosition: 'before'
                    }]
                  };
                  break;

                case 'textfield':
                  fieldData = {
                    type: 'input',
                    name: _this171.resolveData.others.patient_information[_i2].label,
                    placeholder: _this171.resolveData.others.patient_information[_i2].description,
                    label: _this171.resolveData.others.patient_information[_i2].description,
                    value: ''
                  };
                  break;

                case 'dropdown':
                  for (var j = 0; j < _this171.resolveData.others.patient_information[_i2].addfield.length; j++) {
                    _this171.resolveData.others.patient_information[_i2].addfield[j] = {
                      text: _this171.resolveData.others.patient_information[_i2].addfield[j],
                      value: _this171.resolveData.others.patient_information[_i2].addfield[j]
                    };
                  }

                  fieldData = {
                    type: 'select',
                    name: _this171.resolveData.others.patient_information[_i2].label,
                    placeholder: _this171.resolveData.others.patient_information[_i2].description,
                    label: _this171.resolveData.others.patient_information[_i2].description,
                    options: _this171.resolveData.others.patient_information[_i2].addfield
                  };
                  break;
              }

              if (fieldData != undefined) {
                if (otherFieldsData.length == 0) {
                  fieldData['caption'] = 'Others Details';
                }

                otherFieldsData.push(fieldData);
              }
            } // console.log('otherFieldsData', otherFieldsData);


            var patientInfoFormFields = [{
              type: 'input',
              name: 'practice_name',
              placeholder: 'Practice Name',
              label: 'Practice Name',
              value: '',
              validators: [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
              error: 'Enter practice name',
              caption: 'Patient General Information'
            }, {
              type: 'input',
              name: 'address',
              placeholder: 'Address',
              label: 'Address',
              value: ''
            }, {
              type: 'select',
              name: 'state',
              placeholder: 'Select State',
              label: 'State',
              options: _this171.states,
              validators: [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
              error: 'Select state'
            }, {
              type: 'input',
              name: 'city',
              placeholder: 'City',
              label: 'City',
              value: ''
            }, {
              type: 'input',
              name: 'zip',
              placeholder: 'ZIP',
              label: 'ZIP',
              value: ''
            }, {
              type: 'input',
              name: 'patient_name',
              placeholder: 'Patient Name',
              label: 'Patient Name',
              value: '',
              validators: [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
              error: 'Enter patient name'
            }, {
              type: 'select',
              name: 'gender',
              placeholder: 'Gender',
              label: 'Gender',
              options: [{
                text: 'Male',
                value: 'male'
              }, {
                text: 'Female',
                value: 'female'
              }],
              validators: [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
              error: 'Select gender'
            }, {
              type: 'input',
              name: 'patient_email',
              placeholder: 'Patient Email',
              label: 'Patient Email',
              value: '',
              validators: [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].email],
              error: 'Enter patient email'
            }, {
              type: 'input',
              name: 'height',
              placeholder: 'Ex. 6\'10"',
              label: 'Height',
              value: '',
              validators: [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
              error: 'Enter patient height'
            }, {
              type: 'input',
              name: 'weight',
              placeholder: 'Ex. 210 lbs',
              label: 'Weight',
              value: '',
              validators: [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
              error: 'Enter patient weight'
            }, {
              type: 'input',
              name: 'booking_date',
              placeholder: 'Date',
              label: 'Booking date',
              value: _this171.today,
              disabled: true
            }, {
              type: 'date',
              name: 'dob',
              placeholder: 'Date of Birth',
              label: 'Date of Birth',
              value: '',
              validators: [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
              error: 'Enter date of birth of the patient'
            }];
            var checkboxFields = [{
              type: 'checkbox',
              caption: 'Autonomic Nervous System Dysfunction (ANSD)',
              label: 'Blurred Vision',
              checkItems: [{
                name: 'bv_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'bv_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'Autonomic Nervous System Dysfunction (ANSD)'
            }, {
              type: 'checkbox',
              label: 'Elevated Blood Sugar',
              checkItems: [{
                name: 'ebs_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'ebs_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'Autonomic Nervous System Dysfunction (ANSD)'
            }, {
              type: 'checkbox',
              label: 'Extreme Thirst',
              checkItems: [{
                name: 'et_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'et_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'Autonomic Nervous System Dysfunction (ANSD)'
            }, {
              type: 'checkbox',
              label: 'Frequent Urination',
              checkItems: [{
                name: 'fu_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'fu_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'Autonomic Nervous System Dysfunction (ANSD)'
            }, {
              type: 'checkbox',
              label: 'Fatigue (Tiredness)',
              checkItems: [{
                name: 'ft_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'ft_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'Autonomic Nervous System Dysfunction (ANSD)'
            }, {
              type: 'checkbox',
              label: 'Heartburn',
              checkItems: [{
                name: 'hb_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'hb_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'Autonomic Nervous System Dysfunction (ANSD)'
            }, {
              type: 'checkbox',
              label: 'Increased Hunger',
              checkItems: [{
                name: 'ih_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'ih_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'Autonomic Nervous System Dysfunction (ANSD)'
            }, {
              type: 'checkbox',
              label: 'Nausea',
              checkItems: [{
                name: 'nau_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'nau_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'Autonomic Nervous System Dysfunction (ANSD)'
            }, {
              type: 'checkbox',
              label: 'Numbness & Tingling in Hands or Feet',
              checkItems: [{
                name: 'nthf_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'nthf_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'Autonomic Nervous System Dysfunction (ANSD)'
            }, {
              type: 'checkbox',
              label: 'Vomiting',
              checkItems: [{
                name: 'vomiting_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'vomiting_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'Autonomic Nervous System Dysfunction (ANSD)'
            }, {
              type: 'checkbox',
              caption: 'Sudomotor Dysfunction (SUDOD)',
              label: 'Burning Sensations',
              checkItems: [{
                name: 'bs_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'bs_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'Autonomic Nervous System Dysfunction (ANSD)'
            }, {
              type: 'checkbox',
              label: 'Difficulty Digesting Food',
              checkItems: [{
                name: 'ddf_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'ddf_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'Autonomic Nervous System Dysfunction (ANSD)'
            }, {
              type: 'checkbox',
              label: 'Dizziness or Fainting',
              checkItems: [{
                name: 'dof_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'dof_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'Autonomic Nervous System Dysfunction (ANSD)'
            }, {
              type: 'checkbox',
              label: 'Exercise Intolerance',
              checkItems: [{
                name: 'ei_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'ei_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'Autonomic Nervous System Dysfunction (ANSD)'
            }, {
              type: 'checkbox',
              label: 'Sexual Difficulties',
              checkItems: [{
                name: 'sd_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'sd_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'Autonomic Nervous System Dysfunction (ANSD)'
            }, {
              type: 'checkbox',
              label: 'Sweat Abnormalities',
              checkItems: [{
                name: 'sa_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'sa_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'Autonomic Nervous System Dysfunction (ANSD)'
            }, {
              type: 'checkbox',
              label: 'Tingling Hands & Feet',
              checkItems: [{
                name: 'thf_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'thf_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'Autonomic Nervous System Dysfunction (ANSD)'
            }, {
              type: 'checkbox',
              label: 'Urinary Problems',
              checkItems: [{
                name: 'up_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'up_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'Autonomic Nervous System Dysfunction (ANSD)'
            }, {
              type: 'checkbox',
              caption: 'ENDOTHELIAL DYSFUNCTION (ENDOD)',
              label: 'Angina (severe chest pain, often spreading to shoulder, arm, back, neck, or jaw)',
              checkItems: [{
                name: 'angina_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'angina_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'ENDOTHELIAL DYSFUNCTION (ENDOD)'
            }, {
              type: 'checkbox',
              label: 'Chest Pain that goes away with rest',
              checkItems: [{
                name: 'cptgawr_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'cptgawr_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'ENDOTHELIAL DYSFUNCTION (ENDOD)'
            }, {
              type: 'checkbox',
              label: 'Heartburn',
              checkItems: [{
                name: 'hrtbn_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'hrtbn_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'ENDOTHELIAL DYSFUNCTION (ENDOD)'
            }, {
              type: 'checkbox',
              label: 'Pain In Calves',
              checkItems: [{
                name: 'pic_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'pic_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'ENDOTHELIAL DYSFUNCTION (ENDOD)'
            }, {
              type: 'checkbox',
              label: 'Shortness of Breath',
              checkItems: [{
                name: 'sob_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'sob_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'ENDOTHELIAL DYSFUNCTION (ENDOD)'
            }, {
              type: 'checkbox',
              label: 'Stroke',
              checkItems: [{
                name: 'stroke_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'stroke_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'ENDOTHELIAL DYSFUNCTION (ENDOD)'
            }, {
              type: 'checkbox',
              label: 'TIA (mini stroke)',
              checkItems: [{
                name: 'tia_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'tia_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'ENDOTHELIAL DYSFUNCTION (ENDOD)'
            }, {
              type: 'checkbox',
              caption: 'CARDIOMETABOLIC RISK (CMR)',
              label: 'Headaches',
              checkItems: [{
                name: 'headaches_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'headaches_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'CARDIOMETABOLIC RISK (CMR)'
            }, {
              type: 'checkbox',
              label: 'Dizziness',
              checkItems: [{
                name: 'dizziness_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'dizziness_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'CARDIOMETABOLIC RISK (CMR)'
            }, {
              type: 'checkbox',
              label: 'Swelling of Ankles',
              checkItems: [{
                name: 'soa_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'soa_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'CARDIOMETABOLIC RISK (CMR)'
            }, {
              type: 'checkbox',
              caption: 'INSULIN RESISTANCE (IR)',
              label: 'Blurred Vision',
              checkItems: [{
                name: 'blv_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'blv_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'INSULIN RESISTANCE (IR)'
            }, {
              type: 'checkbox',
              label: 'Elevated Blood Sugar',
              checkItems: [{
                name: 'ebsr_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'ebsr_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'INSULIN RESISTANCE (IR)'
            }, {
              type: 'checkbox',
              label: 'Extreme Thirst',
              checkItems: [{
                name: 'ext_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'ext_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'INSULIN RESISTANCE (IR)'
            }, {
              type: 'checkbox',
              label: 'Fatigue (Tiredness)',
              checkItems: [{
                name: 'ftd_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'ftd_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'INSULIN RESISTANCE (IR)'
            }, {
              type: 'checkbox',
              label: 'Increased Hunger',
              checkItems: [{
                name: 'ihr_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'ihr_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'INSULIN RESISTANCE (IR)'
            }, {
              type: 'checkbox',
              caption: 'SMALL FIBER SENSORY NEUROPATHY (SFN)',
              label: 'Burning Sensations',
              checkItems: [{
                name: 'burns_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'burns_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'SMALL FIBER SENSORY NEUROPATHY (SFN)'
            }, {
              type: 'checkbox',
              label: 'Painful Contact With Socks or Bed Sheets',
              checkItems: [{
                name: 'pcwsbs_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'pcwsbs_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'SMALL FIBER SENSORY NEUROPATHY (SFN)'
            }, {
              type: 'checkbox',
              label: 'Pebble or Sandlike Sensation In Shoes',
              checkItems: [{
                name: 'psss_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'psss_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'SMALL FIBER SENSORY NEUROPATHY (SFN)'
            }, {
              type: 'checkbox',
              label: 'Stabbing or Electrical Shock Sensation',
              checkItems: [{
                name: 'sess_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'sess_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'SMALL FIBER SENSORY NEUROPATHY (SFN)'
            }, {
              type: 'checkbox',
              label: 'Pins And Needles Sensation In Feet',
              checkItems: [{
                name: 'pnsf_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'pnsf_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'SMALL FIBER SENSORY NEUROPATHY (SFN)'
            }, {
              type: 'checkbox',
              caption: 'CARDIOMETABOLIC AUTONOMIC NEUROPATHY (CAN)',
              label: 'Blurred Vision',
              checkItems: [{
                name: 'bldv_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'bldv_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'CARDIOMETABOLIC AUTONOMIC NEUROPATHY (CAN)'
            }, {
              type: 'checkbox',
              label: 'Cold, Clammy, Pale Skin',
              checkItems: [{
                name: 'ccps_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'ccps_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'CARDIOMETABOLIC AUTONOMIC NEUROPATHY (CAN)'
            }, {
              type: 'checkbox',
              label: 'Depression',
              checkItems: [{
                name: 'depression_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'depression_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'CARDIOMETABOLIC AUTONOMIC NEUROPATHY (CAN)'
            }, {
              type: 'checkbox',
              label: 'Dizziness or Lightheadedness',
              checkItems: [{
                name: 'dol_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'dol_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'CARDIOMETABOLIC AUTONOMIC NEUROPATHY (CAN)'
            }, {
              type: 'checkbox',
              label: 'Thirst',
              checkItems: [{
                name: 'thirst_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'thirst_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'CARDIOMETABOLIC AUTONOMIC NEUROPATHY (CAN)'
            }, {
              type: 'checkbox',
              label: 'Fainting',
              checkItems: [{
                name: 'fainting_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'fainting_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'CARDIOMETABOLIC AUTONOMIC NEUROPATHY (CAN)'
            }, {
              type: 'checkbox',
              label: 'Fatigue (Tiredness)',
              checkItems: [{
                name: 'fatt_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'fatt_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'CARDIOMETABOLIC AUTONOMIC NEUROPATHY (CAN)'
            }, {
              type: 'checkbox',
              label: 'Lack of Concentration',
              checkItems: [{
                name: 'loc_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'loc_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'CARDIOMETABOLIC AUTONOMIC NEUROPATHY (CAN)'
            }, {
              type: 'checkbox',
              label: 'Lack of Energy',
              checkItems: [{
                name: 'loe_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'loe_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'CARDIOMETABOLIC AUTONOMIC NEUROPATHY (CAN)'
            }, {
              type: 'checkbox',
              label: 'Nausea',
              checkItems: [{
                name: 'nausea_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'nausea_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'CARDIOMETABOLIC AUTONOMIC NEUROPATHY (CAN)'
            }, {
              type: 'checkbox',
              label: 'Rapid, Shallow Breathing',
              checkItems: [{
                name: 'rsb_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'rsb_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'CARDIOMETABOLIC AUTONOMIC NEUROPATHY (CAN)'
            }, {
              type: 'checkbox',
              caption: 'PLETHYSMOGRAPHY CARDIOVASCULAR DISEASE (PTG CVD)',
              label: 'Blood clot in a vein (Venous Thrombosis)',
              checkItems: [{
                name: 'bciv_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'bciv_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'PLETHYSMOGRAPHY CARDIOVASCULAR DISEASE (PTG CVD)'
            }, {
              type: 'checkbox',
              label: 'Heart Attack',
              checkItems: [{
                name: 'hattk_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'hattk_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'PLETHYSMOGRAPHY CARDIOVASCULAR DISEASE (PTG CVD)'
            }, {
              type: 'checkbox',
              label: 'Irregular heartbeat, too fast/slow (Atrial Fibrillation)',
              checkItems: [{
                name: 'ihtfs_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'iftfs_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'PLETHYSMOGRAPHY CARDIOVASCULAR DISEASE (PTG CVD)'
            }, {
              type: 'checkbox',
              label: 'Stroke',
              checkItems: [{
                name: 'strk_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'strk_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'PLETHYSMOGRAPHY CARDIOVASCULAR DISEASE (PTG CVD)'
            }];
            var autocompleteFields = [{
              type: 'select',
              name: 'insurance_id',
              placeholder: 'Insurance name',
              label: 'Insurance name',
              value: '',
              options: insuranceData,
              caption: 'Insurance Information',
              validators: [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]
            }, {
              type: 'select',
              name: 'insurance_type',
              placeholder: 'Insurance type',
              label: 'Insurance type',
              value: '',
              isDependent: true,
              dependentOn: 'insurance_id',
              options: insuranceTypeData,
              validators: [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]
            }, {
              type: 'input',
              name: 'insurance_name_input',
              placeholder: 'Name of the insurance',
              label: 'Name of the insurance',
              value: '',
              isDependent: true,
              dependentOn: 'insurance_id',
              condition: 0
            }, {
              type: 'input',
              name: 'insurance_type_input',
              placeholder: 'Insurance type',
              label: 'Insurance type',
              value: '',
              isDependent: true,
              dependentOn: 'insurance_id',
              condition: 0
            }];
            var calendarInfoFormFields = [{
              type: 'date',
              name: 'startdate',
              placeholder: 'Date of Appointment',
              label: 'Date of Appointment',
              value: '',
              minToday: true,
              validators: [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
              error: 'Enter Date of Appointment',
              caption: 'Appointment Schedule'
            }, // {
            //   type: 'select', name: 'slot', placeholder: 'Time of Appointment',
            //   label: 'Time of Appointment',
            //   options: [
            //     {text: '06:00 AM', value: '06:00 AM'}, {text: '06:30 AM', value: '06:30 AM'},
            //     {text: '07:00 AM', value: '07:00 AM'}, {text: '07:30 AM', value: '07:30 AM'},
            //     {text: '08:00 AM', value: '08:00 AM'}, {text: '08:30 AM', value: '08:30 AM'},
            //     {text: '09:00 AM', value: '09:00 AM'}, {text: '09:30 AM', value: '09:30 AM'},
            //     {text: '10:00 AM', value: '10:00 AM'}, {text: '10:30 AM', value: '10:30 AM'},
            //     {text: '11:00 AM', value: '11:00 AM'}, {text: '11:30 AM', value: '11:30 AM'},
            //     {text: '12:00 PM', value: '12:00 PM'}, {text: '12:30 PM', value: '12:30 PM'},
            //     {text: '01:00 PM', value: '01:00 PM'}, {text: '01:30 PM', value: '01:30 PM'},
            //     {text: '02:00 PM', value: '02:00 PM'}, {text: '02:30 PM', value: '02:30 PM'},
            //     {text: '03:00 PM', value: '03:00 PM'}, {text: '03:30 PM', value: '03:30 PM'},
            //     {text: '04:00 PM', value: '04:00 PM'}, {text: '04:30 PM', value: '04:30 PM'},
            //     {text: '05:00 PM', value: '05:00 PM'}, {text: '05:30 PM', value: '05:30 PM'},
            //     {text: '06:00 PM', value: '06:00 PM'}, {text: '06:30 PM', value: '06:30 PM'},
            //     {text: '07:00 PM', value: '07:00 PM'}, {text: '07:30 PM', value: '07:30 PM'},
            //     {text: '08:00 PM', value: '08:00 PM'}, {text: '08:30 PM', value: '08:30 PM'},
            //     {text: '09:00 PM', value: '09:00 PM'}, {text: '09:30 PM', value: '09:30 PM'},
            //     {text: '10:00 PM', value: '10:00 PM'}
            //   ]
            // },
            {
              type: 'select',
              name: 'reqTimezone',
              label: 'Timezone',
              options: [{
                text: 'Alaska Standard Time',
                value: '-08:00|America/Anchorage'
              }, {
                text: 'Pacific Standard Time',
                value: '-07:00|America/Los_Angeles'
              }, {
                text: 'Mountain Standard Time(GMT-06:00)',
                value: '-06:00|America/Denver'
              }, {
                text: 'Mountain Standard Time(GMT-07:00) (no DST)',
                value: '-07:00|America/Phoenix'
              }, {
                text: 'Central Standard Time',
                value: '-05:00|America/Chicago'
              }, {
                text: 'Eastern Standard Time',
                value: '-04:00|America/New_York'
              }, {
                text: 'Hawaii Standard Time',
                value: '-10:00|Pacific/Honolulu'
              }],
              value: '-05:00|America/Chicago'
            }, {
              type: 'input',
              name: 'attendees',
              placeholder: 'Attendee Email',
              label: 'Attendee Email',
              value: ''
            }, {
              type: 'textarea',
              name: 'additional_notes',
              placeholder: 'Additional Notes',
              label: 'Additional Notes',
              value: ''
            }];
            var data1 = {
              token: _this171.cookieService.get('jwtToken'),
              condition: {
                doctors_office_id: _this171.userDetails._id
              }
            };

            _this171.httpRequestService.postRequest('get-doctor-info', data1).subscribe(function (response) {
              var doctorArray = [];

              for (var _i3 = 0; _i3 < response.data.length; _i3++) {
                var _temp2 = {};
                _temp2['text'] = response.data[_i3].firstname + ' ' + response.data[_i3].lastname;
                _temp2['value'] = response.data[_i3]._id;
                _temp2['parent_id'] = response.data[_i3].parent_id;
                _temp2['parent_type'] = response.data[_i3].parent_type;
                doctorArray.push(_temp2);
              } // console.log('doctorArray', doctorArray);


              calendarInfoFormFields.push({
                type: 'select',
                name: 'doctor_id',
                placeholder: 'Select Doctor',
                label: 'Doctor Name',
                value: '',
                options: doctorArray,
                hasChildWithDynamicLoading: true,
                hasAdditionalFieldsWithValue: true,
                additionalFields: ['parent_id', 'parent_type'],
                childField: 'tech_id',
                endpoint: 'get-tech-info',
                caption: 'Select doctor and tech',
                validators: [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
                error: 'Select doctor'
              }, {
                type: 'select',
                name: 'tech_id',
                placeholder: 'Select Tech',
                label: 'Tech Name',
                value: '',
                isDependent: true,
                loadDynamically: true,
                options: [],
                validators: [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
                error: 'Select tech'
              });
              var hiddenFields = [{
                type: 'input',
                name: 'doctors_office_id',
                value: _this171.userDetails._id,
                hidden: true
              }, {
                type: 'input',
                name: 'parent_type',
                value: response.data.parent_type,
                hidden: true
              }, {
                type: 'input',
                name: 'parent_id',
                value: response.data.parent_id,
                hidden: true
              } // {type: 'input', name: 'userid', value: this.userDetails._id, hidden: true},
              // {type: 'input', name: 'username', value: this.userDetails.center_name, hidden: true},
              // {type: 'input', name: 'useremail', value: this.userDetails.email, hidden: true}
              ];
              _this171.configData = Object.assign(_this171.configData, {
                patientInfoFormFields: patientInfoFormFields.concat(autocompleteFields, otherFieldsData, checkboxFields, hiddenFields, calendarInfoFormFields)
              });
              console.log('this.configData', _this171.configData);
            });
          }, function (error) {
            console.log('Oooops! Cannot get states.');
          });
        }
      }, {
        key: "openSnackBar",
        value: function openSnackBar(message) {
          var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
          this.snackBar.open(message, action, {
            duration: 3000
          });
        }
      }]);

      return AddPatientManuallyComponent;
    }();

    AddPatientManuallyComponent.ctorParameters = function () {
      return [{
        type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_4__["CookieService"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_6__["MatSnackBar"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__["HttpServiceService"]
      }];
    };

    AddPatientManuallyComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-add-patient-manually',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./add-patient-manually.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor-office/add-patient/add-patient-manually/add-patient-manually.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./add-patient-manually.component.css */
      "./src/app/components/doctor-office/add-patient/add-patient-manually/add-patient-manually.component.css"))["default"]]
    })], AddPatientManuallyComponent);
    /***/
  },

  /***/
  "./src/app/components/doctor-office/doctor-office-account-settings/doctor-office-account-settings.component.css":
  /*!**********************************************************************************************************************!*\
    !*** ./src/app/components/doctor-office/doctor-office-account-settings/doctor-office-account-settings.component.css ***!
    \**********************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsDoctorOfficeDoctorOfficeAccountSettingsDoctorOfficeAccountSettingsComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "/* header css */\n.techdashboard_header .mat-toolbar-row{ height: auto; }\n.techdashboard_header .mat-toolbar-row .logo_wrapper{ max-width: 200px; display: block; }\n.techdashboard_header .mat-toolbar-row .logo_wrapper img{ max-width: 100%; vertical-align: middle; }\n.techdashboard_header .mat-toolbar-row{ justify-content: space-between; padding: 0 40px;}\n.techdashboard_header .mat-toolbar-row .quotation { margin-bottom: 0px;}\n.techdashboard_header .mat-toolbar-row .quotation p{ font-family: \"RobotoMedium\"; font-size: 30px; color: #002035; text-transform: uppercase; margin: 0; }\n.techdashboard_header .mat-toolbar-row .profile_section { display: flex; border-left: 1px solid #e2dede; padding-left: 20px; }\n.techdashboard_header .mat-toolbar-row .profile_section .username{ padding-right: 20px; display: block; }\n.techdashboard_header .mat-toolbar-row .quotation .mat-list-base{ display: flex;}\n.techdashboard_header .mat-toolbar-row .quotation .mat-list-base .mat-list-item:after{ content:\"\"; width:2px; height: 80px; background: red;}\n.active{ color: #c18500!important; }\n.techdashboard_header .mat-toolbar-row .quotation .mat-nav-list .mat-list-item { margin: 0 16px; }\n.add_form{ width: 80%; margin: 20px auto; background: #f3f3f3; padding: 16px 10px; padding-bottom: 50px; border: 1px solid #91e7ff; }\n.add_form .form_wrapper .mat-form-field{ width: 49%; margin: 0.5%; }\n.add_form .form_wrapper textarea{ resize: none;}\n.add_form h2{ font-family: \"RobotoBlack\"; text-transform: uppercase; font-size: 24px; padding: 0 6px; color: #1dbce9; }\n.add_form .submit_form { display: block; width: 100%; text-align: center; margin-top: 30px; }\n.add_form .submit_form button{ border-radius: 5px; background: linear-gradient(180deg, #f9dc19, #daa505); color: #5e3619; text-transform: uppercase; font-family: \"RobotoBlack\"; font-size: 25px; padding: 8px;\nwidth: 390px; border: 3px solid #d59d01; }\n.add_form .submit_form button:nth-child(1){ background: linear-gradient(180deg, #f2be00, #a52a08); color: #f3f3f3; border: 2px solid #bb3c0d; margin-right: 16px; }\n.add_form .return_button { background: #1dbce9; color: #fff; margin-bottom: 12px;}\n@media screen and (max-width: 1460px){\n  .techdashboard_header .mat-toolbar-row .quotation p { font-size: 24px; line-height: 26px;}\n}\n@media screen and (max-width: 1000px){\n  .add_form .submit_form button { width: 48%; }\n}\n@media screen and (max-width: 991px){\n.techdashboard_header .mat-toolbar-row { flex-direction: column; padding: 20px;}\n.techdashboard_header .mat-toolbar-row .quotation p { margin-top: 16px; }\n}\n@media screen and (max-width: 768px){\n  .add_form .form_wrapper .mat-form-field { width: 100%; margin: 0; }\n}\n@media screen and (max-width: 576px){\n.add_form .submit_form button { font-size: 22px; padding: 2px; }\n\n.add_form .submit_form button { width: 100%; margin: 0; margin-top: 20px; }\n.add_form .submit_form { display: flex; flex-direction: column-reverse; text-align: center; margin-top: 0px; }\n.add_form .submit_form button:nth-child(1) { margin-right: 0; margin-top: 20px; }\n}\n@media screen and (max-width: 360px){\n.techdashboard_header .mat-toolbar-row .quotation p { font-size: 16px; line-height: 22px; }\n.add_form h2 { font-size: 22px; line-height: 24px; text-align: center; }\n}\n#menu_button{ display: none;}\n.add_header{ display: flex; margin: 0 16px;}\n.add_header button{ margin-left: auto;\n  background: linear-gradient(180deg, #fac855, #e47e2a)!important;\n  text-transform: uppercase;\n  font-family: \"RobotoBlack\"; padding-top: 4px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kb2N0b3Itb2ZmaWNlL2RvY3Rvci1vZmZpY2UtYWNjb3VudC1zZXR0aW5ncy9kb2N0b3Itb2ZmaWNlLWFjY291bnQtc2V0dGluZ3MuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxlQUFlO0FBQ2Ysd0NBQXdDLFlBQVksRUFBRTtBQUN0RCxzREFBc0QsZ0JBQWdCLEVBQUUsY0FBYyxFQUFFO0FBQ3hGLDBEQUEwRCxlQUFlLEVBQUUsc0JBQXNCLEVBQUU7QUFDbkcsd0NBQXdDLDhCQUE4QixFQUFFLGVBQWUsQ0FBQztBQUN4RixvREFBb0Qsa0JBQWtCLENBQUM7QUFDdkUscURBQXFELDJCQUEyQixFQUFFLGVBQWUsRUFBRSxjQUFjLEVBQUUseUJBQXlCLEVBQUUsU0FBUyxFQUFFO0FBQ3pKLDBEQUEwRCxhQUFhLEVBQUUsOEJBQThCLEVBQUUsa0JBQWtCLEVBQUU7QUFDN0gsbUVBQW1FLG1CQUFtQixFQUFFLGNBQWMsRUFBRTtBQUd4RyxrRUFBa0UsYUFBYSxDQUFDO0FBQ2hGLHVGQUF1RixVQUFVLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxlQUFlLENBQUM7QUFDNUksU0FBUyx3QkFBd0IsRUFBRTtBQUNuQyxpRkFBaUYsY0FBYyxFQUFFO0FBR2pHLFdBQVcsVUFBVSxFQUFFLGlCQUFpQixFQUFFLG1CQUFtQixFQUFFLGtCQUFrQixFQUFFLG9CQUFvQixFQUFFLHlCQUF5QixFQUFFO0FBQ3BJLHlDQUF5QyxVQUFVLEVBQUUsWUFBWSxFQUFFO0FBQ25FLGtDQUFrQyxZQUFZLENBQUM7QUFDL0MsY0FBYywwQkFBMEIsRUFBRSx5QkFBeUIsRUFBRSxlQUFlLEVBQUUsY0FBYyxFQUFFLGNBQWMsRUFBRTtBQUN0SCx5QkFBeUIsY0FBYyxFQUFFLFdBQVcsRUFBRSxrQkFBa0IsRUFBRSxnQkFBZ0IsRUFBRTtBQUM1RiwrQkFBK0Isa0JBQWtCLEVBQUUscURBQXFELEVBQUUsY0FBYyxFQUFFLHlCQUF5QixFQUFFLDBCQUEwQixFQUFFLGVBQWUsRUFBRSxZQUFZO0FBQzlNLFlBQVksRUFBRSx5QkFBeUIsRUFBRTtBQUN6Qyw0Q0FBNEMscURBQXFELEVBQUUsY0FBYyxFQUFFLHlCQUF5QixFQUFFLGtCQUFrQixFQUFFO0FBQ2xLLDJCQUEyQixtQkFBbUIsRUFBRSxXQUFXLEVBQUUsbUJBQW1CLENBQUM7QUFLakY7RUFDRSxzREFBc0QsZUFBZSxFQUFFLGlCQUFpQixDQUFDO0FBQzNGO0FBRUE7RUFDRSxnQ0FBZ0MsVUFBVSxFQUFFO0FBQzlDO0FBQ0E7QUFDQSx5Q0FBeUMsc0JBQXNCLEVBQUUsYUFBYSxDQUFDO0FBQy9FLHNEQUFzRCxnQkFBZ0IsRUFBRTtBQUN4RTtBQUNBO0VBQ0UsMENBQTBDLFdBQVcsRUFBRSxTQUFTLEVBQUU7QUFDcEU7QUFDQTtBQUNBLGdDQUFnQyxlQUFlLEVBQUUsWUFBWSxFQUFFOztBQUUvRCxnQ0FBZ0MsV0FBVyxFQUFFLFNBQVMsRUFBRSxnQkFBZ0IsRUFBRTtBQUMxRSx5QkFBeUIsYUFBYSxFQUFFLDhCQUE4QixFQUFFLGtCQUFrQixFQUFFLGVBQWUsRUFBRTtBQUM3Ryw2Q0FBNkMsZUFBZSxFQUFFLGdCQUFnQixFQUFFO0FBQ2hGO0FBRUE7QUFDQSxzREFBc0QsZUFBZSxFQUFFLGlCQUFpQixFQUFFO0FBQzFGLGVBQWUsZUFBZSxFQUFFLGlCQUFpQixFQUFFLGtCQUFrQixFQUFFO0FBQ3ZFO0FBSUEsY0FBYyxhQUFhLENBQUM7QUFFNUIsYUFBYSxhQUFhLEVBQUUsY0FBYyxDQUFDO0FBQzNDLG9CQUFvQixpQkFBaUI7RUFDbkMsK0RBQStEO0VBQy9ELHlCQUF5QjtFQUN6QiwwQkFBMEIsRUFBRSxnQkFBZ0I7QUFDOUMiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2RvY3Rvci1vZmZpY2UvZG9jdG9yLW9mZmljZS1hY2NvdW50LXNldHRpbmdzL2RvY3Rvci1vZmZpY2UtYWNjb3VudC1zZXR0aW5ncy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogaGVhZGVyIGNzcyAqL1xuLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5tYXQtdG9vbGJhci1yb3d7IGhlaWdodDogYXV0bzsgfVxuLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5tYXQtdG9vbGJhci1yb3cgLmxvZ29fd3JhcHBlcnsgbWF4LXdpZHRoOiAyMDBweDsgZGlzcGxheTogYmxvY2s7IH1cbi50ZWNoZGFzaGJvYXJkX2hlYWRlciAubWF0LXRvb2xiYXItcm93IC5sb2dvX3dyYXBwZXIgaW1neyBtYXgtd2lkdGg6IDEwMCU7IHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IH1cbi50ZWNoZGFzaGJvYXJkX2hlYWRlciAubWF0LXRvb2xiYXItcm93eyBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47IHBhZGRpbmc6IDAgNDBweDt9XG4udGVjaGRhc2hib2FyZF9oZWFkZXIgLm1hdC10b29sYmFyLXJvdyAucXVvdGF0aW9uIHsgbWFyZ2luLWJvdHRvbTogMHB4O31cbi50ZWNoZGFzaGJvYXJkX2hlYWRlciAubWF0LXRvb2xiYXItcm93IC5xdW90YXRpb24gcHsgZm9udC1mYW1pbHk6IFwiUm9ib3RvTWVkaXVtXCI7IGZvbnQtc2l6ZTogMzBweDsgY29sb3I6ICMwMDIwMzU7IHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IG1hcmdpbjogMDsgfVxuLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5tYXQtdG9vbGJhci1yb3cgLnByb2ZpbGVfc2VjdGlvbiB7IGRpc3BsYXk6IGZsZXg7IGJvcmRlci1sZWZ0OiAxcHggc29saWQgI2UyZGVkZTsgcGFkZGluZy1sZWZ0OiAyMHB4OyB9XG4udGVjaGRhc2hib2FyZF9oZWFkZXIgLm1hdC10b29sYmFyLXJvdyAucHJvZmlsZV9zZWN0aW9uIC51c2VybmFtZXsgcGFkZGluZy1yaWdodDogMjBweDsgZGlzcGxheTogYmxvY2s7IH1cblxuXG4udGVjaGRhc2hib2FyZF9oZWFkZXIgLm1hdC10b29sYmFyLXJvdyAucXVvdGF0aW9uIC5tYXQtbGlzdC1iYXNleyBkaXNwbGF5OiBmbGV4O31cbi50ZWNoZGFzaGJvYXJkX2hlYWRlciAubWF0LXRvb2xiYXItcm93IC5xdW90YXRpb24gLm1hdC1saXN0LWJhc2UgLm1hdC1saXN0LWl0ZW06YWZ0ZXJ7IGNvbnRlbnQ6XCJcIjsgd2lkdGg6MnB4OyBoZWlnaHQ6IDgwcHg7IGJhY2tncm91bmQ6IHJlZDt9XG4uYWN0aXZleyBjb2xvcjogI2MxODUwMCFpbXBvcnRhbnQ7IH1cbi50ZWNoZGFzaGJvYXJkX2hlYWRlciAubWF0LXRvb2xiYXItcm93IC5xdW90YXRpb24gLm1hdC1uYXYtbGlzdCAubWF0LWxpc3QtaXRlbSB7IG1hcmdpbjogMCAxNnB4OyB9XG5cblxuLmFkZF9mb3JteyB3aWR0aDogODAlOyBtYXJnaW46IDIwcHggYXV0bzsgYmFja2dyb3VuZDogI2YzZjNmMzsgcGFkZGluZzogMTZweCAxMHB4OyBwYWRkaW5nLWJvdHRvbTogNTBweDsgYm9yZGVyOiAxcHggc29saWQgIzkxZTdmZjsgfVxuLmFkZF9mb3JtIC5mb3JtX3dyYXBwZXIgLm1hdC1mb3JtLWZpZWxkeyB3aWR0aDogNDklOyBtYXJnaW46IDAuNSU7IH1cbi5hZGRfZm9ybSAuZm9ybV93cmFwcGVyIHRleHRhcmVheyByZXNpemU6IG5vbmU7fVxuLmFkZF9mb3JtIGgyeyBmb250LWZhbWlseTogXCJSb2JvdG9CbGFja1wiOyB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyBmb250LXNpemU6IDI0cHg7IHBhZGRpbmc6IDAgNnB4OyBjb2xvcjogIzFkYmNlOTsgfVxuLmFkZF9mb3JtIC5zdWJtaXRfZm9ybSB7IGRpc3BsYXk6IGJsb2NrOyB3aWR0aDogMTAwJTsgdGV4dC1hbGlnbjogY2VudGVyOyBtYXJnaW4tdG9wOiAzMHB4OyB9XG4uYWRkX2Zvcm0gLnN1Ym1pdF9mb3JtIGJ1dHRvbnsgYm9yZGVyLXJhZGl1czogNXB4OyBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTgwZGVnLCAjZjlkYzE5LCAjZGFhNTA1KTsgY29sb3I6ICM1ZTM2MTk7IHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IGZvbnQtZmFtaWx5OiBcIlJvYm90b0JsYWNrXCI7IGZvbnQtc2l6ZTogMjVweDsgcGFkZGluZzogOHB4O1xud2lkdGg6IDM5MHB4OyBib3JkZXI6IDNweCBzb2xpZCAjZDU5ZDAxOyB9XG4uYWRkX2Zvcm0gLnN1Ym1pdF9mb3JtIGJ1dHRvbjpudGgtY2hpbGQoMSl7IGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxODBkZWcsICNmMmJlMDAsICNhNTJhMDgpOyBjb2xvcjogI2YzZjNmMzsgYm9yZGVyOiAycHggc29saWQgI2JiM2MwZDsgbWFyZ2luLXJpZ2h0OiAxNnB4OyB9XG4uYWRkX2Zvcm0gLnJldHVybl9idXR0b24geyBiYWNrZ3JvdW5kOiAjMWRiY2U5OyBjb2xvcjogI2ZmZjsgbWFyZ2luLWJvdHRvbTogMTJweDt9XG5cblxuXG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDE0NjBweCl7XG4gIC50ZWNoZGFzaGJvYXJkX2hlYWRlciAubWF0LXRvb2xiYXItcm93IC5xdW90YXRpb24gcCB7IGZvbnQtc2l6ZTogMjRweDsgbGluZS1oZWlnaHQ6IDI2cHg7fVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMDAwcHgpe1xuICAuYWRkX2Zvcm0gLnN1Ym1pdF9mb3JtIGJ1dHRvbiB7IHdpZHRoOiA0OCU7IH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDk5MXB4KXtcbi50ZWNoZGFzaGJvYXJkX2hlYWRlciAubWF0LXRvb2xiYXItcm93IHsgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgcGFkZGluZzogMjBweDt9XG4udGVjaGRhc2hib2FyZF9oZWFkZXIgLm1hdC10b29sYmFyLXJvdyAucXVvdGF0aW9uIHAgeyBtYXJnaW4tdG9wOiAxNnB4OyB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCl7XG4gIC5hZGRfZm9ybSAuZm9ybV93cmFwcGVyIC5tYXQtZm9ybS1maWVsZCB7IHdpZHRoOiAxMDAlOyBtYXJnaW46IDA7IH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU3NnB4KXtcbi5hZGRfZm9ybSAuc3VibWl0X2Zvcm0gYnV0dG9uIHsgZm9udC1zaXplOiAyMnB4OyBwYWRkaW5nOiAycHg7IH1cblxuLmFkZF9mb3JtIC5zdWJtaXRfZm9ybSBidXR0b24geyB3aWR0aDogMTAwJTsgbWFyZ2luOiAwOyBtYXJnaW4tdG9wOiAyMHB4OyB9XG4uYWRkX2Zvcm0gLnN1Ym1pdF9mb3JtIHsgZGlzcGxheTogZmxleDsgZmxleC1kaXJlY3Rpb246IGNvbHVtbi1yZXZlcnNlOyB0ZXh0LWFsaWduOiBjZW50ZXI7IG1hcmdpbi10b3A6IDBweDsgfVxuLmFkZF9mb3JtIC5zdWJtaXRfZm9ybSBidXR0b246bnRoLWNoaWxkKDEpIHsgbWFyZ2luLXJpZ2h0OiAwOyBtYXJnaW4tdG9wOiAyMHB4OyB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDM2MHB4KXtcbi50ZWNoZGFzaGJvYXJkX2hlYWRlciAubWF0LXRvb2xiYXItcm93IC5xdW90YXRpb24gcCB7IGZvbnQtc2l6ZTogMTZweDsgbGluZS1oZWlnaHQ6IDIycHg7IH1cbi5hZGRfZm9ybSBoMiB7IGZvbnQtc2l6ZTogMjJweDsgbGluZS1oZWlnaHQ6IDI0cHg7IHRleHQtYWxpZ246IGNlbnRlcjsgfVxufVxuXG5cblxuI21lbnVfYnV0dG9ueyBkaXNwbGF5OiBub25lO31cblxuLmFkZF9oZWFkZXJ7IGRpc3BsYXk6IGZsZXg7IG1hcmdpbjogMCAxNnB4O31cbi5hZGRfaGVhZGVyIGJ1dHRvbnsgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxODBkZWcsICNmYWM4NTUsICNlNDdlMmEpIWltcG9ydGFudDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvQmxhY2tcIjsgcGFkZGluZy10b3A6IDRweDtcbn0iXX0= */";
    /***/
  },

  /***/
  "./src/app/components/doctor-office/doctor-office-account-settings/doctor-office-account-settings.component.ts":
  /*!*********************************************************************************************************************!*\
    !*** ./src/app/components/doctor-office/doctor-office-account-settings/doctor-office-account-settings.component.ts ***!
    \*********************************************************************************************************************/

  /*! exports provided: DoctorOfficeAccountSettingsComponent */

  /***/
  function srcAppComponentsDoctorOfficeDoctorOfficeAccountSettingsDoctorOfficeAccountSettingsComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DoctorOfficeAccountSettingsComponent", function () {
      return DoctorOfficeAccountSettingsComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");

    var DoctorOfficeAccountSettingsComponent = /*#__PURE__*/function () {
      function DoctorOfficeAccountSettingsComponent(cookieService, formBuilder, http, router, snackBar) {
        _classCallCheck(this, DoctorOfficeAccountSettingsComponent);

        this.cookieService = cookieService;
        this.formBuilder = formBuilder;
        this.http = http;
        this.router = router;
        this.snackBar = snackBar;
        this.message = "Updated Successfuly!!!";
        this.loader = false;
        /*Getting the user data from the cookie*/

        var allData = cookieService.getAll();
        this.jwtToken = cookieService.get('jwtToken');
        this.userData = JSON.parse(allData.user_details);
      }

      _createClass(DoctorOfficeAccountSettingsComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this172 = this;

          //generating the form
          this.generateForm(); //setting the default value

          this.setDefaultValue(this.userData); //getting the citites

          this.allStateCityData();
          setTimeout(function () {
            _this172.getCityByName(_this172.userData.state);
          }, 2000);
        }
      }, {
        key: "generateForm",
        value: function generateForm() {
          this.accountForm = this.formBuilder.group({
            id: [this.userData._id],
            address: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
            centername: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
            state: [],
            city: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
            date: [],
            email: [{
              value: 'someValue',
              disabled: true
            }],
            phone: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
            zip: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]
          });
        }
      }, {
        key: "setDefaultValue",
        value: function setDefaultValue(defaultValue) {
          this.accountForm.patchValue({
            address: defaultValue.address,
            centername: defaultValue.centerName,
            state: defaultValue.state,
            city: defaultValue.city,
            date: defaultValue.date,
            email: defaultValue.email,
            phone: defaultValue.phone,
            status: defaultValue.status,
            zip: defaultValue.zip
          });
        }
      }, {
        key: "onSubmit",
        value: function onSubmit() {
          var _this173 = this;

          this.loader = true;
          if (this.accountForm.invalid) return;else {
            var postData = {
              'source': 'users',
              'data': Object.assign(this.accountForm.value),
              'token': this.jwtToken
            };
            this.http.httpViaPost('addorupdatedata', postData).subscribe(function (response) {
              if (response.status == 'success') {
                var userDetailsCookie = JSON.parse(_this173.cookieService.get('user_details'));
                var type = userDetailsCookie.type;

                _this173.cookieService["delete"]('user_details'); // -------------------------------------


                userDetailsCookie.address = _this173.accountForm.value.address; // -------------------------------------

                userDetailsCookie = JSON.stringify(userDetailsCookie);
                console.log("-->", userDetailsCookie);
                _this173.loader = false;
                var action = "Ok";

                _this173.snackBar.open(_this173.message, action, {
                  duration: 1000
                });

                setTimeout(function () {// this.cookieService.set('user_details', userDetailsCookie);
                }, 1000);
                setTimeout(function () {
                  _this173.router.navigateByUrl('/doctor-office/dashboard');
                }, 3000);
              } else {
                _this173.snackBar.open(response.status, "OK", {
                  duration: 1500
                });
              }
            });
          }
        }
      }, {
        key: "cancelRedirectToDashboard",
        value: function cancelRedirectToDashboard() {
          this.router.navigateByUrl('doctor-office/dashboard');
        }
        /**for getting all states & cities function start here**/

      }, {
        key: "allStateCityData",
        value: function allStateCityData() {
          var _this174 = this;

          this.http.getSiteSettingData("./assets/data-set/state.json").subscribe(function (response) {
            _this174.states = response;
          });
          this.http.getSiteSettingData("./assets/data-set/city.json").subscribe(function (response) {
            _this174.allCities = response;
          });
        }
        /**for getting all states & cities  function end here**/

      }, {
        key: "getCity",
        value: function getCity(event) {
          var val = event;
          this.cities = this.allCities[val];
        }
      }, {
        key: "getCityByName",
        value: function getCityByName(stateName) {
          this.cities = this.allCities[stateName];
        }
      }]);

      return DoctorOfficeAccountSettingsComponent;
    }();

    DoctorOfficeAccountSettingsComponent.ctorParameters = function () {
      return [{
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__["HttpServiceService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_6__["MatSnackBar"]
      }];
    };

    DoctorOfficeAccountSettingsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-doctor-office-account-settings',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./doctor-office-account-settings.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor-office/doctor-office-account-settings/doctor-office-account-settings.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./doctor-office-account-settings.component.css */
      "./src/app/components/doctor-office/doctor-office-account-settings/doctor-office-account-settings.component.css"))["default"]]
    })], DoctorOfficeAccountSettingsComponent);
    /***/
  },

  /***/
  "./src/app/components/doctor-office/doctor-office-change-password/doctor-office-change-password.component.css":
  /*!********************************************************************************************************************!*\
    !*** ./src/app/components/doctor-office/doctor-office-change-password/doctor-office-change-password.component.css ***!
    \********************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsDoctorOfficeDoctorOfficeChangePasswordDoctorOfficeChangePasswordComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = ".add_form{ width: 700px; margin: 20px auto; background: #f3f3f3; padding: 16px 10px; padding-bottom: 50px; border: 1px solid #91e7ff; }\n.add_form .form_wrapper .mat-form-field{ width: 100%;  }\n.add_form .form_wrapper textarea{ resize: none;}\n.add_form h2{ font-family: \"RobotoBlack\"; text-transform: uppercase; font-size: 24px; padding: 0 6px; color: #1dbce9; }\n.add_form .submit_form { display: block; width: 100%; text-align: center; margin-top: 30px; }\n.add_form .submit_form button{ border-radius: 5px; background: linear-gradient(180deg, #f9dc19, #daa505); color: #5e3619; text-transform: uppercase; font-family: \"RobotoBlack\"; font-size: 25px; padding: 2px;\nwidth: 240px; border: 3px solid #d59d01; }\n.add_form .submit_form button:nth-child(1){ background: linear-gradient(180deg, #f2be00, #a52a08); color: #f3f3f3; border: 2px solid #bb3c0d; margin-right: 16px; }\n.add_form .return_button { background: #1dbce9; color: #fff; margin-bottom: 12px;}\n.add_header{ display: flex; margin: 016px;}\n.add_header button{ margin-left: auto;\n  background: linear-gradient(180deg, #fac855, #e47e2a)!important;\n  text-transform: uppercase;\n  font-family: \"RobotoBlack\"; padding-top: 4px;\n}\n@media screen and (max-width: 840px){\n  .add_form { width: 80%; }\n}\n@media screen and (max-width: 560px){\n.add_form .submit_form button:nth-child(1) { margin-right: 0px; margin-bottom: 16px; }\n.add_form .submit_form button { width: 100%; }\n\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kb2N0b3Itb2ZmaWNlL2RvY3Rvci1vZmZpY2UtY2hhbmdlLXBhc3N3b3JkL2RvY3Rvci1vZmZpY2UtY2hhbmdlLXBhc3N3b3JkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsV0FBVyxZQUFZLEVBQUUsaUJBQWlCLEVBQUUsbUJBQW1CLEVBQUUsa0JBQWtCLEVBQUUsb0JBQW9CLEVBQUUseUJBQXlCLEVBQUU7QUFDdEkseUNBQXlDLFdBQVcsR0FBRztBQUN2RCxrQ0FBa0MsWUFBWSxDQUFDO0FBQy9DLGNBQWMsMEJBQTBCLEVBQUUseUJBQXlCLEVBQUUsZUFBZSxFQUFFLGNBQWMsRUFBRSxjQUFjLEVBQUU7QUFDdEgseUJBQXlCLGNBQWMsRUFBRSxXQUFXLEVBQUUsa0JBQWtCLEVBQUUsZ0JBQWdCLEVBQUU7QUFDNUYsK0JBQStCLGtCQUFrQixFQUFFLHFEQUFxRCxFQUFFLGNBQWMsRUFBRSx5QkFBeUIsRUFBRSwwQkFBMEIsRUFBRSxlQUFlLEVBQUUsWUFBWTtBQUM5TSxZQUFZLEVBQUUseUJBQXlCLEVBQUU7QUFDekMsNENBQTRDLHFEQUFxRCxFQUFFLGNBQWMsRUFBRSx5QkFBeUIsRUFBRSxrQkFBa0IsRUFBRTtBQUNsSywyQkFBMkIsbUJBQW1CLEVBQUUsV0FBVyxFQUFFLG1CQUFtQixDQUFDO0FBQ2pGLGFBQWEsYUFBYSxFQUFFLGFBQWEsQ0FBQztBQUMxQyxvQkFBb0IsaUJBQWlCO0VBQ25DLCtEQUErRDtFQUMvRCx5QkFBeUI7RUFDekIsMEJBQTBCLEVBQUUsZ0JBQWdCO0FBQzlDO0FBRUE7RUFDRSxZQUFZLFVBQVUsRUFBRTtBQUMxQjtBQUNBO0FBQ0EsNkNBQTZDLGlCQUFpQixFQUFFLG1CQUFtQixFQUFFO0FBQ3JGLGdDQUFnQyxXQUFXLEVBQUU7O0FBRTdDIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9kb2N0b3Itb2ZmaWNlL2RvY3Rvci1vZmZpY2UtY2hhbmdlLXBhc3N3b3JkL2RvY3Rvci1vZmZpY2UtY2hhbmdlLXBhc3N3b3JkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWRkX2Zvcm17IHdpZHRoOiA3MDBweDsgbWFyZ2luOiAyMHB4IGF1dG87IGJhY2tncm91bmQ6ICNmM2YzZjM7IHBhZGRpbmc6IDE2cHggMTBweDsgcGFkZGluZy1ib3R0b206IDUwcHg7IGJvcmRlcjogMXB4IHNvbGlkICM5MWU3ZmY7IH1cbi5hZGRfZm9ybSAuZm9ybV93cmFwcGVyIC5tYXQtZm9ybS1maWVsZHsgd2lkdGg6IDEwMCU7ICB9XG4uYWRkX2Zvcm0gLmZvcm1fd3JhcHBlciB0ZXh0YXJlYXsgcmVzaXplOiBub25lO31cbi5hZGRfZm9ybSBoMnsgZm9udC1mYW1pbHk6IFwiUm9ib3RvQmxhY2tcIjsgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgZm9udC1zaXplOiAyNHB4OyBwYWRkaW5nOiAwIDZweDsgY29sb3I6ICMxZGJjZTk7IH1cbi5hZGRfZm9ybSAuc3VibWl0X2Zvcm0geyBkaXNwbGF5OiBibG9jazsgd2lkdGg6IDEwMCU7IHRleHQtYWxpZ246IGNlbnRlcjsgbWFyZ2luLXRvcDogMzBweDsgfVxuLmFkZF9mb3JtIC5zdWJtaXRfZm9ybSBidXR0b257IGJvcmRlci1yYWRpdXM6IDVweDsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDE4MGRlZywgI2Y5ZGMxOSwgI2RhYTUwNSk7IGNvbG9yOiAjNWUzNjE5OyB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyBmb250LWZhbWlseTogXCJSb2JvdG9CbGFja1wiOyBmb250LXNpemU6IDI1cHg7IHBhZGRpbmc6IDJweDtcbndpZHRoOiAyNDBweDsgYm9yZGVyOiAzcHggc29saWQgI2Q1OWQwMTsgfVxuLmFkZF9mb3JtIC5zdWJtaXRfZm9ybSBidXR0b246bnRoLWNoaWxkKDEpeyBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTgwZGVnLCAjZjJiZTAwLCAjYTUyYTA4KTsgY29sb3I6ICNmM2YzZjM7IGJvcmRlcjogMnB4IHNvbGlkICNiYjNjMGQ7IG1hcmdpbi1yaWdodDogMTZweDsgfVxuLmFkZF9mb3JtIC5yZXR1cm5fYnV0dG9uIHsgYmFja2dyb3VuZDogIzFkYmNlOTsgY29sb3I6ICNmZmY7IG1hcmdpbi1ib3R0b206IDEycHg7fVxuLmFkZF9oZWFkZXJ7IGRpc3BsYXk6IGZsZXg7IG1hcmdpbjogMDE2cHg7fVxuLmFkZF9oZWFkZXIgYnV0dG9ueyBtYXJnaW4tbGVmdDogYXV0bztcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDE4MGRlZywgI2ZhYzg1NSwgI2U0N2UyYSkhaW1wb3J0YW50O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBmb250LWZhbWlseTogXCJSb2JvdG9CbGFja1wiOyBwYWRkaW5nLXRvcDogNHB4O1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA4NDBweCl7XG4gIC5hZGRfZm9ybSB7IHdpZHRoOiA4MCU7IH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU2MHB4KXtcbi5hZGRfZm9ybSAuc3VibWl0X2Zvcm0gYnV0dG9uOm50aC1jaGlsZCgxKSB7IG1hcmdpbi1yaWdodDogMHB4OyBtYXJnaW4tYm90dG9tOiAxNnB4OyB9XG4uYWRkX2Zvcm0gLnN1Ym1pdF9mb3JtIGJ1dHRvbiB7IHdpZHRoOiAxMDAlOyB9XG5cbn1cbiJdfQ== */";
    /***/
  },

  /***/
  "./src/app/components/doctor-office/doctor-office-change-password/doctor-office-change-password.component.ts":
  /*!*******************************************************************************************************************!*\
    !*** ./src/app/components/doctor-office/doctor-office-change-password/doctor-office-change-password.component.ts ***!
    \*******************************************************************************************************************/

  /*! exports provided: DoctorOfficeChangePasswordComponent */

  /***/
  function srcAppComponentsDoctorOfficeDoctorOfficeChangePasswordDoctorOfficeChangePasswordComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DoctorOfficeChangePasswordComponent", function () {
      return DoctorOfficeChangePasswordComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var _class_common_common_function__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../../../class/common/common-function */
    "./src/app/class/common/common-function.ts");

    var DoctorOfficeChangePasswordComponent = /*#__PURE__*/function () {
      function DoctorOfficeChangePasswordComponent(formBuilder, httpService, snackBar, commonFunction, activatedRoute, cookieService, router) {
        _classCallCheck(this, DoctorOfficeChangePasswordComponent);

        this.formBuilder = formBuilder;
        this.httpService = httpService;
        this.snackBar = snackBar;
        this.commonFunction = commonFunction;
        this.activatedRoute = activatedRoute;
        this.cookieService = cookieService;
        this.router = router;
        this.loader = false;
        /* Set Meta Data */

        this.commonFunction.setTitleMetaTags();
        this.headerFlag = this.activatedRoute.snapshot.url[0].path;
        this.jwtToken = cookieService.get('jwtToken');
        var allcookies;
        allcookies = cookieService.getAll();
        this.cookiesData = JSON.parse(allcookies.user_details);
        this.cookies_id = this.cookiesData._id;
      }

      _createClass(DoctorOfficeChangePasswordComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          //generating the form
          this.generateForm();
        }
      }, {
        key: "generateForm",
        value: function generateForm() {
          this.doctorOfficeChangePasswordForm = this.formBuilder.group({
            old_pwd: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(16), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(6)]],
            new_pwd: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(16), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(6)]],
            confirm_new_pwd: []
          }, {
            validator: this.matchpassword('new_pwd', 'confirm_new_pwd')
          });
        }
        /**for validation purpose**/

      }, {
        key: "matchpassword",
        value: function matchpassword(newPasswordkye, confirmPasswordkye) {
          return function (group) {
            var passwordInput = group.controls[newPasswordkye],
                confirmpasswordInput = group.controls[confirmPasswordkye];

            if (passwordInput.value !== confirmpasswordInput.value) {
              return confirmpasswordInput.setErrors({
                notEquivalent: true
              });
            } else {
              return confirmpasswordInput.setErrors(null);
            }
          };
        }
      }, {
        key: "changePassword",
        value: function changePassword() {
          var _this175 = this;

          this.loader = true;

          if (this.doctorOfficeChangePasswordForm.valid) {
            delete this.doctorOfficeChangePasswordForm.value.confirm_new_pwd;
            var data = {
              _id: this.cookies_id,
              adminflag: 0,
              oldPassword: this.doctorOfficeChangePasswordForm.value.old_pwd,
              newPassword: this.doctorOfficeChangePasswordForm.value.new_pwd
            };
            this.httpService.httpViaPost('changepassword', data).subscribe(function (response) {
              // this.formDirective.resetForm();
              _this175.loader = false;

              if (response.Status == true) {
                _this175.snackBar.open(response.message, "OK", {
                  duration: 1500
                });

                _this175.router.navigateByUrl('doctor-office/dashboard');
              } else {
                _this175.snackBar.open(response.message, "OK", {
                  duration: 1500
                });
              }
            }, function (error) {
              _this175.loader = false;
              alert("Some error occurred. Please try later.");
            });
          }
        }
      }]);

      return DoctorOfficeChangePasswordComponent;
    }();

    DoctorOfficeChangePasswordComponent.ctorParameters = function () {
      return [{
        type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__["HttpServiceService"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_6__["MatSnackBar"]
      }, {
        type: _class_common_common_function__WEBPACK_IMPORTED_MODULE_7__["CommonFunction"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_4__["CookieService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"]
      }];
    };

    DoctorOfficeChangePasswordComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-doctor-office-change-password',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./doctor-office-change-password.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor-office/doctor-office-change-password/doctor-office-change-password.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./doctor-office-change-password.component.css */
      "./src/app/components/doctor-office/doctor-office-change-password/doctor-office-change-password.component.css"))["default"]]
    })], DoctorOfficeChangePasswordComponent);
    /***/
  },

  /***/
  "./src/app/components/doctor-office/doctor-office-dashboard/doctor-office-dashboard.component.css":
  /*!********************************************************************************************************!*\
    !*** ./src/app/components/doctor-office/doctor-office-dashboard/doctor-office-dashboard.component.css ***!
    \********************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsDoctorOfficeDoctorOfficeDashboardDoctorOfficeDashboardComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZG9jdG9yLW9mZmljZS9kb2N0b3Itb2ZmaWNlLWRhc2hib2FyZC9kb2N0b3Itb2ZmaWNlLWRhc2hib2FyZC5jb21wb25lbnQuY3NzIn0= */";
    /***/
  },

  /***/
  "./src/app/components/doctor-office/doctor-office-dashboard/doctor-office-dashboard.component.ts":
  /*!*******************************************************************************************************!*\
    !*** ./src/app/components/doctor-office/doctor-office-dashboard/doctor-office-dashboard.component.ts ***!
    \*******************************************************************************************************/

  /*! exports provided: DoctorOfficeDashboardComponent */

  /***/
  function srcAppComponentsDoctorOfficeDoctorOfficeDashboardDoctorOfficeDashboardComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DoctorOfficeDashboardComponent", function () {
      return DoctorOfficeDashboardComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../../../../environments/environment */
    "./src/environments/environment.ts");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");

    var DoctorOfficeDashboardComponent = /*#__PURE__*/function () {
      function DoctorOfficeDashboardComponent(cookieService, activatedRoute, snackBar, http, matSnackBar) {
        var _this176 = this;

        _classCallCheck(this, DoctorOfficeDashboardComponent);

        this.cookieService = cookieService;
        this.activatedRoute = activatedRoute;
        this.snackBar = snackBar;
        this.http = http;
        this.matSnackBar = matSnackBar; // Lib list

        this.allBillerData = [];
        this.billerData_count = 0;
        this.allUserData_skip = ["_id", "report_file_type", "tech_id", "tech_email", "batch_name", "report_type", "status", "file_basepath", "file_bucketname", "file_name", "file_original_name", "file_type", "converted_image", "images", "patient_details", "patient_name_search", "report_life_circle", "note", "additional_potential_health_risks", "cpt_codes", "created_at"];
        this.editUrl = "admin/biller-management/edit";
        this.libdata = {
          basecondition: '',
          updateendpoint: '',
          custombuttons: [{
            label: "View Report",
            route: "doctor-office/view-patient-record/",
            type: 'internallink',
            param: ['_id']
          }, {
            label: "Tech Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-tech-details',
            datafields: ['first name', 'last name', 'email', 'phone', 'address', 'city', 'state', 'zip'],
            param: 'id',
            headermessage: 'Tech Information'
          }, {
            label: "View Codes",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-codes-details',
            datafields: ['Additional Potential Health Risks', 'CPT Codes', 'ICD Codes'],
            param: 'id',
            headermessage: 'Associated Codes'
          }, {
            label: "Doctor Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-doctor-details',
            datafields: ['firstname', 'lastname', 'email', 'fax', 'Practice Name', 'NPI', 'phone', 'address', 'city', 'state', 'zip'],
            param: 'id',
            headermessage: 'Doctor Information'
          }, {
            label: "Parent Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-parent-details',
            datafields: ['Parent Name', 'Contact Person', 'email', 'phone', 'address', 'city', 'state', 'zip'],
            param: 'id',
            headermessage: 'Parent Information'
          }],
          hideeditbutton: true,
          hidedeletebutton: true,
          hidestatustogglebutton: true,
          hideviewbutton: true,
          hidemultipleselectbutton: true,
          hidedeletemany: true,
          hideupdatemany: true,
          tableheaders: ["patient_name", "status_text", "created_at_datetime", "cpt_addl", "general_details"]
        };
        this.allUserData_modify_header = {
          "general_details": "Related Info",
          "patient_name": "Patient Name",
          "status_text": "Status",
          "created_at_datetime": "Report Added",
          "cpt_addl": "CPT/ Addl Hrisk C"
        };
        this.UpdateEndpoint = "addorupdatedata";
        this.deleteEndpoint = "deletesingledata";
        this.apiUrl = _environments_environment__WEBPACK_IMPORTED_MODULE_5__["environment"].apiBaseUrl1;
        this.tableName = "data_pece";
        this.datacollection = 'getPatientlistdata';
        this.sortdata = {
          "type": 'desc',
          "field": 'patient_name',
          "options": ['patient_name', 'created_at_datetime']
        };
        this.limitcond = {
          "limit": 10,
          "skip": 0,
          "pagecount": 1
        };
        this.previewModal_detail_skip = ['_id', 'user_type', 'status', 'password', 'created_at'];
        this.status = [];
        this.status_search = [{
          val: 11,
          'name': 'Biller Admin Approved'
        }, {
          val: 12,
          'name': 'Biller Admin Not Approved'
        }, {
          val: 13,
          'name': "Biller Admin Hold"
        }, {
          val: 14,
          'name': "Doctor Sign"
        }, {
          val: 15,
          'name': "Send to Biller"
        }, {
          val: 16,
          "name": "Report Downloaded"
        }];
        this.cptcodes = [{
          val: "95923",
          'name': '95923'
        }, {
          val: "95943",
          'name': '95943'
        }, {
          val: "95921",
          'name': "95921"
        }, {
          val: "93923",
          'name': "93923"
        }, {
          val: "93922",
          'name': "93922"
        }];
        this.parent_type = [{
          val: "admin",
          'name': 'Admin'
        }, {
          val: "diagnostic_admin",
          'name': 'Diagnostic Admin'
        }, {
          val: "distributors",
          'name': 'Distributor'
        }, {
          val: "doctor_group",
          'name': 'Doctor Group'
        }];
        this.report_type = [{
          val: "RM-3A",
          'name': 'RM-3A'
        }, {
          val: "TM FLOW V3",
          'name': 'TM FLOW V3'
        }, {
          val: "TM FLOW V4",
          'name': 'TM FLOW V4'
        }, {
          val: "CMAT with BP Cuffs",
          'name': "CMAT with BP Cuffs"
        }];
        this.SearchingEndpoint = "datalist";
        this.authval = [];
        this.docofficeval = [];
        this.techval = [];
        this.parentnameval = [];
        this.doctorcity = [];
        this.doctorstate = [];
        this.patientcity = [];
        this.patientstate = [];
        this.SearchingSourceName = "data_biller_list";
        this.search_settings = {
          selectsearch: [{
            label: 'Search By Report Type',
            field: 'report_file_type',
            values: this.report_type
          }, {
            label: "Search By Status",
            field: 'status_search',
            values: this.status_search
          }, {
            label: "Search By Doctor",
            field: 'doc_name_search',
            values: this.authval
          }, {
            label: "Search By Tech",
            field: 'tech_name_search',
            values: this.techval
          }, {
            label: "Search By Doctor City",
            field: 'doctor_city_search',
            values: this.doctorcity
          }, {
            label: "Search By Doctor State",
            field: 'doctor_state_search',
            values: this.doctorstate
          }, {
            label: "Search By Patient City",
            field: 'patient_state_search',
            values: this.patientcity
          }, {
            label: "Search By Patient State",
            field: 'patient_city_search',
            values: this.patientstate
          }],
          datesearch: [{
            startdatelabel: "Start Date",
            enddatelabel: "End Date",
            submit: "Search",
            field: "created_at_datetime"
          }],
          textsearch: [{
            label: "Search By Patient Name",
            field: 'patient_name_search'
          }],
          search: [{
            label: 'Search By CPT Codes',
            field: 'cpt_codes_search',
            values: this.cptcodes
          }]
        };
        this.htmlText = {
          headerText: "Total Appointments Booked"
        };
        this.allData = cookieService.getAll(); // this.authData = JSON.parse(this.allData.user_details);

        if (this.activatedRoute.snapshot.params._id) {
          this.authData = {
            _id: this.activatedRoute.snapshot.params._id
          }; // this.authData["parent_type"] = this.activatedRoute.snapshot.params.parent_type;
        } else {
          console.log('************************');
          this.authData = JSON.parse(this.allData.user_details);
        }

        this.authData["jwtToken"] = cookieService.get('jwtToken');
        this.jwtToken = cookieService.get('jwtToken');
        /* Get resolve data */

        this.activatedRoute.data.subscribe(function (resolveData) {
          _this176.htmlText.allResolveData = resolveData.countData.data;

          _this176.viewReportProcessData(_this176.htmlText.headerText);
        }); // lib list ----------------

        this.libdata.basecondition = {
          doctors_office_id: this.authData._id,
          status: {
            $gt: 10
          }
        };
        var endpoint = 'getPatientlistdata';
        var endpointc = 'getPatientlistdata-count';
        var data = {
          "condition": {
            "limit": 10,
            "skip": 0
          },
          sort: {
            "type": 'desc',
            "field": 'patient_name'
          },
          status: {
            "$gt": 10
          },
          doctors_office_id: this.authData._id
        };
        this.http.httpViaPost(endpointc, data).subscribe(function (res) {
          _this176.billerData_count = res.count;
        }, function (error) {
          console.log('Oooops!');
        });
        this.http.httpViaPost(endpoint, data).subscribe(function (res) {
          _this176.allBillerData = res.results.res;
        }, function (error) {
          console.log('Oooops!');
        });
      }

      _createClass(DoctorOfficeDashboardComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this177 = this;

          var data = {
            "source": "patient_data_desc_patient_name",
            "condition": {
              status: {
                "$gt": 10
              },
              doctors_office_id_object: this.authData._id
            },
            "token": this.jwtToken
          };
          this.http.httpViaPost("datalist", data).subscribe(function (response) {
            var start = false;
            var count = 0;

            for (var i in response.res) {
              if (response.res[i].doc_name_search != "") {
                for (var j in _this177.authval) {
                  if (response.res[i].doc_name == _this177.authval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this177.authval.push({
                    name: response.res[i].doc_name,
                    val: response.res[i].doc_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].tech_name_search != "") {
                for (var j in _this177.techval) {
                  if (response.res[i].tech_namesearch == _this177.techval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this177.techval.push({
                    name: response.res[i].tech_namesearch,
                    val: response.res[i].tech_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].parent_name_search != "") {
                for (var j in _this177.parentnameval) {
                  if (response.res[i].parent_namesearch == _this177.parentnameval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this177.parentnameval.push({
                    name: response.res[i].parent_namesearch,
                    val: response.res[i].parent_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].doctor_state_search != "") {
                for (var j in _this177.doctorstate) {
                  if (response.res[i].doctor_state == _this177.doctorstate[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this177.doctorstate.push({
                    name: response.res[i].doctor_state,
                    val: response.res[i].doctor_state_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].doctor_city_search != "") {
                for (var j in _this177.doctorcity) {
                  if (response.res[i].doctor_city == _this177.doctorcity[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this177.doctorcity.push({
                    name: response.res[i].doctor_city,
                    val: response.res[i].doctor_city_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].patient_city_search != "") {
                for (var j in _this177.patientcity) {
                  if (response.res[i].patient_city == _this177.patientcity[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this177.patientcity.push({
                    name: response.res[i].patient_city,
                    val: response.res[i].patient_city_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].patient_state_search != "") {
                for (var j in _this177.patientstate) {
                  if (response.res[i].patient_state == _this177.patientstate[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this177.patientstate.push({
                    name: response.res[i].patient_state,
                    val: response.res[i].patient_state_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].doctor_ofiice_name_search != "") {
                for (var j in _this177.docofficeval) {
                  if (response.res[i].doctor_ofiice_namesearch == _this177.docofficeval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this177.docofficeval.push({
                    name: response.res[i].doctor_ofiice_namesearch,
                    val: response.res[i].doctor_ofiice_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }
          }, function (error) {
            console.log('Oooops!');
          });
        }
      }, {
        key: "openSnackBar",
        value: function openSnackBar(message, action) {
          this.snackBar.open(message, action, {
            duration: 3000
          });
        }
      }, {
        key: "viewReportProcessData",
        value: function viewReportProcessData() {
          var flag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;

          switch (flag) {
            case 'Total Appointments Booked':
              break;

            case 'Total Appointments Completed':
              break;

            case '':
              break;
          }
        }
      }]);

      return DoctorOfficeDashboardComponent;
    }();

    DoctorOfficeDashboardComponent.ctorParameters = function () {
      return [{
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatSnackBar"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_6__["HttpServiceService"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatSnackBar"]
      }];
    };

    DoctorOfficeDashboardComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-doctor-office-dashboard',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./doctor-office-dashboard.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor-office/doctor-office-dashboard/doctor-office-dashboard.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./doctor-office-dashboard.component.css */
      "./src/app/components/doctor-office/doctor-office-dashboard/doctor-office-dashboard.component.css"))["default"]]
    })], DoctorOfficeDashboardComponent);
    /***/
  },

  /***/
  "./src/app/components/doctor-office/doctor-office-footer/doctor-office-footer.component.css":
  /*!**************************************************************************************************!*\
    !*** ./src/app/components/doctor-office/doctor-office-footer/doctor-office-footer.component.css ***!
    \**************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsDoctorOfficeDoctorOfficeFooterDoctorOfficeFooterComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = ".footer_section{display: block; border-top: 1px solid #c7c7c7; margin-top: 30px; }\n.footer_section .footer_content{ width: 600px; padding: 0 16px; margin: 0 auto; display: block; text-align: center; }\n.footer_section .footer_content .link{ margin-top: 10px; display: block;  }\n.footer_section .footer_content .link a:nth-of-type(1){ border-right: 1px solid #2b2b2b; padding-right: 5px; }\n.footer_section .footer_content .link a, .footer_section .footer_content .link p{ font-size: 16px; font-family: \"RobotoRegular\"; color: #2b2b2b; text-decoration: none;}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kb2N0b3Itb2ZmaWNlL2RvY3Rvci1vZmZpY2UtZm9vdGVyL2RvY3Rvci1vZmZpY2UtZm9vdGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZ0JBQWdCLGNBQWMsRUFBRSw2QkFBNkIsRUFBRSxnQkFBZ0IsRUFBRTtBQUNqRixpQ0FBaUMsWUFBWSxFQUFFLGVBQWUsRUFBRSxjQUFjLEVBQUUsY0FBYyxFQUFFLGtCQUFrQixFQUFFO0FBQ3BILHVDQUF1QyxnQkFBZ0IsRUFBRSxjQUFjLEdBQUc7QUFDMUUsd0RBQXdELCtCQUErQixFQUFFLGtCQUFrQixFQUFFO0FBQzdHLGtGQUFrRixlQUFlLEVBQUUsNEJBQTRCLEVBQUUsY0FBYyxFQUFFLHFCQUFxQixDQUFDIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9kb2N0b3Itb2ZmaWNlL2RvY3Rvci1vZmZpY2UtZm9vdGVyL2RvY3Rvci1vZmZpY2UtZm9vdGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9vdGVyX3NlY3Rpb257ZGlzcGxheTogYmxvY2s7IGJvcmRlci10b3A6IDFweCBzb2xpZCAjYzdjN2M3OyBtYXJnaW4tdG9wOiAzMHB4OyB9XG4uZm9vdGVyX3NlY3Rpb24gLmZvb3Rlcl9jb250ZW50eyB3aWR0aDogNjAwcHg7IHBhZGRpbmc6IDAgMTZweDsgbWFyZ2luOiAwIGF1dG87IGRpc3BsYXk6IGJsb2NrOyB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbi5mb290ZXJfc2VjdGlvbiAuZm9vdGVyX2NvbnRlbnQgLmxpbmt7IG1hcmdpbi10b3A6IDEwcHg7IGRpc3BsYXk6IGJsb2NrOyAgfVxuLmZvb3Rlcl9zZWN0aW9uIC5mb290ZXJfY29udGVudCAubGluayBhOm50aC1vZi10eXBlKDEpeyBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjMmIyYjJiOyBwYWRkaW5nLXJpZ2h0OiA1cHg7IH1cbi5mb290ZXJfc2VjdGlvbiAuZm9vdGVyX2NvbnRlbnQgLmxpbmsgYSwgLmZvb3Rlcl9zZWN0aW9uIC5mb290ZXJfY29udGVudCAubGluayBweyBmb250LXNpemU6IDE2cHg7IGZvbnQtZmFtaWx5OiBcIlJvYm90b1JlZ3VsYXJcIjsgY29sb3I6ICMyYjJiMmI7IHRleHQtZGVjb3JhdGlvbjogbm9uZTt9Il19 */";
    /***/
  },

  /***/
  "./src/app/components/doctor-office/doctor-office-footer/doctor-office-footer.component.ts":
  /*!*************************************************************************************************!*\
    !*** ./src/app/components/doctor-office/doctor-office-footer/doctor-office-footer.component.ts ***!
    \*************************************************************************************************/

  /*! exports provided: DoctorOfficeFooterComponent */

  /***/
  function srcAppComponentsDoctorOfficeDoctorOfficeFooterDoctorOfficeFooterComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DoctorOfficeFooterComponent", function () {
      return DoctorOfficeFooterComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");

    var DoctorOfficeFooterComponent = /*#__PURE__*/function () {
      function DoctorOfficeFooterComponent() {
        _classCallCheck(this, DoctorOfficeFooterComponent);

        this.htmlData = {};
        this.htmlData["year"] = new Date().getFullYear();
      }

      _createClass(DoctorOfficeFooterComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }]);

      return DoctorOfficeFooterComponent;
    }();

    DoctorOfficeFooterComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-doctor-office-footer',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./doctor-office-footer.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor-office/doctor-office-footer/doctor-office-footer.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./doctor-office-footer.component.css */
      "./src/app/components/doctor-office/doctor-office-footer/doctor-office-footer.component.css"))["default"]]
    })], DoctorOfficeFooterComponent);
    /***/
  },

  /***/
  "./src/app/components/doctor-office/doctor-office-header/doctor-office-header.component.css":
  /*!**************************************************************************************************!*\
    !*** ./src/app/components/doctor-office/doctor-office-header/doctor-office-header.component.css ***!
    \**************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsDoctorOfficeDoctorOfficeHeaderDoctorOfficeHeaderComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/* header css */\n\n.techdashboard_header { height: auto; padding: 0; background: #fff; box-shadow: 0px 2px 7px 2px #b7b7b7; margin: 20px 0; }\n\n.techdashboard_header .header_wrapper{ width: 1400px; margin: 0 auto; display: flex; align-items: center; justify-content: space-between;}\n\n.techdashboard_header .logo_wrapper { max-width: 160px; display: block; cursor: pointer; flex: none; }\n\n.techdashboard_header .logo_wrapper:focus { outline: none; border: none; }\n\n.techdashboard_header .logo_wrapper img { max-width: 100%; vertical-align: middle; }\n\n.techdashboard_header .quotation { margin-bottom: 0px; }\n\n.techdashboard_header .quotation p { font-family: \"AvenirMedium\"; font-size: 22px; color: #002035; text-transform: uppercase; margin: 0; word-break: break-word; white-space: normal;\n  text-align: center; line-height: 22px;}\n\n.techdashboard_header .profile_section button { padding-top: 8px; }\n\n.techdashboard_header .profile_section {  display: flex;  border-left: 1px solid #ada9a9;  padding-left: 5px;  margin-bottom: 0;  justify-content: center;  align-items: center; }\n\n.techdashboard_header .profile_section .username { padding-right: 10px;\n  display: block;\n  font-family: \"AvenirRoman\";\n  font-size: 16px;\n  color: #1f1f1f;}\n\n.techdashboard_header .quotation .mat-list-base { display: flex; padding-top: 0; }\n\n/* .techdashboard_header .quotation .mat-list-base .mat-list-item:before {\n  content: \"\";\n  left: -15px;\n  width: 2px;\n  height: 15px;\n  background: #1c1c1c;\n  display: inline-block;\n  position: absolute;\n  top: 35%;\n} */\n\n.techdashboard_header .quotation .mat-nav-list .mat-list-item { margin: 0; position: relative; font-family: \"AvenirMedium\"; font-size: 16px; color: #767676;}\n\n.active { color: #000000!important;  /* border-bottom: 3px solid #fecb00; position: relative; */}\n\n.active::before{ content: ''; width: 100%; height: 4px; background: #fecb00; position: absolute; bottom: -25px; }\n\n.togle_menu { display: none;}\n\n@media screen and (max-width: 1500px){\n  .techdashboard_header .header_wrapper { width: 90%; }\n}\n\n@media screen and (max-width: 1199px){\n.techdashboard_header .quotation p { font-size: 18px;}\n}\n\n@media screen and (max-width: 991px){\n.techdashboard_header .header_wrapper { display: flex; flex-direction: column; }\n.techdashboard_header .quotation p { margin: 10px 5px; }\n.techdashboard_header .profile_section{ border-left: 0;}\n.togle_menu { display: block; margin: auto; }\n.success{ display: block;}\n.danger{ display: none;}\n.techdashboard_header .quotation .mat-list-base { display: flex; flex-direction: column; }\n.techdashboard_header .quotation { width: 100%;}\n.active::before{ bottom: 0; height: 2px;}\n.techdashboard_header .quotation .mat-nav-list .mat-list-item { display: flex; justify-content: center; }\n}\n\n/* header css */\n\n.techdashboard_header .mat-toolbar-row{ height: auto; }\n\n.techdashboard_header .mat-toolbar-row .logo_wrapper{ max-width: 200px; display: block; }\n\n.techdashboard_header .mat-toolbar-row .logo_wrapper img{ max-width: 100%; vertical-align: middle; }\n\n.techdashboard_header .mat-toolbar-row{ justify-content: space-between; padding: 0 40px;}\n\n.techdashboard_header .mat-toolbar-row .quotation p{ font-family: \"AvenirMedium\"; font-size: 30px; color: #002035; text-transform: uppercase; margin: 0; }\n\n.techdashboard_header .mat-toolbar-row .profile_section { display: flex; border-left: 1px solid #e2dede; padding-left: 20px; }\n\n.techdashboard_header .mat-toolbar-row .profile_section .username{ padding-right: 20px; display: block; }\n\n/*End header css */\n\n@media screen and (max-width: 1680px){\n  .techdashboard_header .mat-toolbar-row .quotation p { font-size: 24px; }\n}\n\n@media screen and (max-width: 1500px){\n  .techdashboard_header .mat-toolbar-row .quotation p { font-size: 22px; } \n}\n\n@media screen and (max-width: 1440px){\n  .content_wrapper .itemsection p { line-height: 26px; font-size: 24px;} \n}\n\n@media screen and (max-width: 1400px){\n.techdashboard_header .mat-toolbar-row .quotation p { font-size: 20px; text-align: center; line-height: 22px; white-space: normal; }\n}\n \n\n/*# sourceMappingURL=data:application/json;base64, */";
    /***/
  },

  /***/
  "./src/app/components/doctor-office/doctor-office-header/doctor-office-header.component.ts":
  /*!*************************************************************************************************!*\
    !*** ./src/app/components/doctor-office/doctor-office-header/doctor-office-header.component.ts ***!
    \*************************************************************************************************/

  /*! exports provided: DoctorOfficeHeaderComponent */

  /***/
  function srcAppComponentsDoctorOfficeDoctorOfficeHeaderDoctorOfficeHeaderComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DoctorOfficeHeaderComponent", function () {
      return DoctorOfficeHeaderComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _class_common_common_function__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../class/common/common-function */
    "./src/app/class/common/common-function.ts");
    /* harmony import */


    var _common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../../common/dialog-box/dialog-box.component */
    "./src/app/components/common/dialog-box/dialog-box.component.ts");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");

    var DoctorOfficeHeaderComponent = /*#__PURE__*/function () {
      function DoctorOfficeHeaderComponent(cookies, router, commonFunction, activate, dialog) {
        _classCallCheck(this, DoctorOfficeHeaderComponent);

        this.cookies = cookies;
        this.router = router;
        this.commonFunction = commonFunction;
        this.activate = activate;
        this.dialog = dialog;
        this.toggleStatus = false;
        this.isSticky = false;
        this.user_data = {};
        this.flag = 0;
        this.loader = true;
        this.main_user = {
          flag: false,
          data: {},
          buttonText: "Rerurn to Admin"
        };
        var allData = {};
        allData = cookies.getAll();
        this.user_data = JSON.parse(allData.user_details);

        if (typeof allData.main_user != 'undefined') {
          this.main_user.data = allData.main_user;
          this.main_user.flag = true;
        }

        this.user_cookie = cookies.get('jwtToken');

        if (this.activate.snapshot.routeConfig.path == "admin/biller-dashboard/:_id") {
          this.flag = 1;
        }

        console.log(">>>", this.user_data);
      }

      _createClass(DoctorOfficeHeaderComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          /* Set Meta Data */
          this.commonFunction.setTitleMetaTags();
        }
        /**logout function start here**/

      }, {
        key: "logout",
        value: function logout() {
          this.cookies["delete"]('jwtToken');
          this.cookies["delete"]('user_details');
          this.cookies.deleteAll();
          this.router.navigateByUrl('logout');
        }
        /**logout function end here**/

        /* Dashboard redirect */

      }, {
        key: "toDashboard",
        value: function toDashboard() {
          this.router.navigateByUrl('/doctor-office/dashboard');
        }
      }, {
        key: "menuFunction",
        value: function menuFunction() {
          this.toggleStatus = !this.toggleStatus;
        }
      }, {
        key: "returnToAdmin",
        value: function returnToAdmin() {
          var _this178 = this;

          var modalData = {
            panelClass: 'bulkupload-dialog',
            data: {
              header: "Alert",
              message: "Do you want to return to admin?",
              button1: {
                text: "Yes"
              },
              button2: {
                text: "No"
              }
            }
          };
          this.openModal(modalData);
          this.dialogRef.afterClosed().subscribe(function (result) {
            switch (result) {
              case "Yes":
                var jwtToken = _this178.cookies.get('jwtToken');

                var allData = _this178.cookies.getAll();

                var main_user = JSON.parse(allData.main_user);

                var secret = _this178.cookies.get('secret'); // Delete Cookie


                _this178.cookies["delete"]('user_details');

                _this178.cookies["delete"]('main_user');

                _this178.cookies["delete"]('doctor_signature');

                _this178.cookies["delete"]('secret');

                _this178.cookies["delete"]('jwtToken');

                _this178.cookies.deleteAll('/doctor_office');

                setTimeout(function () {
                  // Reset again Cookie
                  _this178.cookies.set('jwtToken', jwtToken);

                  _this178.cookies.set('user_details', JSON.stringify(main_user));

                  _this178.cookies.set('secret', JSON.stringify(secret)); // Redirect to page


                  _this178.router.navigateByUrl("admin/dashboard");
                }, 500);
                break;

              case "No":
                _this178.dialogRef.close();

                break;
            }
          });
        }
      }, {
        key: "openModal",
        value: function openModal(data) {
          this.dialogRef = this.dialog.open(_common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_5__["DialogBoxComponent"], data);
        }
      }]);

      return DoctorOfficeHeaderComponent;
    }();

    DoctorOfficeHeaderComponent.ctorParameters = function () {
      return [{
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"]
      }, {
        type: _class_common_common_function__WEBPACK_IMPORTED_MODULE_4__["CommonFunction"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_6__["MatDialog"]
      }];
    };

    DoctorOfficeHeaderComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-doctor-office-header',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./doctor-office-header.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor-office/doctor-office-header/doctor-office-header.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./doctor-office-header.component.css */
      "./src/app/components/doctor-office/doctor-office-header/doctor-office-header.component.css"))["default"]]
    })], DoctorOfficeHeaderComponent);
    /***/
  },

  /***/
  "./src/app/components/doctor-office/manage-appointments/appoinments-listing/appoinments-listing.component.css":
  /*!********************************************************************************************************************!*\
    !*** ./src/app/components/doctor-office/manage-appointments/appoinments-listing/appoinments-listing.component.css ***!
    \********************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsDoctorOfficeManageAppointmentsAppoinmentsListingAppoinmentsListingComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = ".doctor_content_wrapper {\n    background: #edf0f2;\n    display: block;\n    padding: 15px 5px;\n    margin: 0px 5px 16px;\n    border-radius: 10px;\n  }\n  \n  .doctor_content_wrapper .mat-card-title {\n    font-size: 24px;\n    font-family: \"AvenirMedium\";\n    text-transform: uppercase;\n    color: #535353;\n    margin-bottom: 5px;\n    border-bottom: 1px solid #9c9c9c;\n    padding: 0 10px;\n    padding-bottom: 8px;\n  }\n  \n  .doctor_content_wrapper .table_structure {\n    width: 100%;\n    display: block;\n    margin-bottom: 0;\n    position: relative;\n  }\n  \n  .doctor_content_wrapper table {\n    width: 100%;\n  }\n  \n  .doctor_content_wrapper .table_structure::before {\n    content: '';\n    width: 1px;\n    height: 100%;\n    background: #c1c5c7;\n    position: absolute;\n    right: 51%;\n  }\n  \n  .table_structure .mat-list mat-list-base {\n    display: flex;\n  }\n  \n  .table_structure .mat-list-base .mat-list-item, .mat-list-base .mat-list-option {\n    display: inline-flex;\n    height: auto;\n    -webkit-tap-highlight-color: transparent;\n    width: auto;\n    padding: 0;\n    color: #fff;\n    border-right: 1px solid #044f82;\n  }\n  \n  .table_structure .mat-list-base .mat-list-item:nth-last-child(1) {\n    border: none;\n  }\n  \n  .table_structure .mat-list-item p {\n    display: block;\n    width: 100%;\n    margin: 0;\n  }\n  \n  .table_structure .mat-list-item .title_n {\n    color: var(--button-color2);\n    font-size: 22px;\n    font-family: \"AvenirMedium\";\n    font-weight: normal;\n    text-transform: uppercase;\n  }\n  \n  .table_structure .mat-list-item .title_a {\n    color: #7b7b7b;\n    font-size: 18px;\n    font-family: \"AvenirLight\";\n    text-transform: uppercase;\n  }\n  \n  .mat-form-field-flex {\n    display: inline-flex;\n    align-items: baseline;\n    box-sizing: border-box;\n    width: 100%;\n    border: 1px solid #012035;\n  }\n  \n  .patient_report_section .form_wrapper {\n    display: flex;\n    margin: 0 10px;\n  }\n  \n  .patient_report_section .form_wrapper .mat-form-field-flex {\n    border: 1px solid #000!important;\n  }\n  \n  .patient_report_section .mat-form-field-appearance-outline .mat-form-field-wrapper {\n    margin: 0!important;\n  }\n  \n  .patient_report_section .patient_top_search {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0 16px;\n    margin-top: 20px;\n    margin-bottom: 0;\n  }\n  \n  .patient_report_section .patient_top_search .search_bar {\n    display: flex;\n  }\n  \n  .patient_report_section .patient_top_search .search_bar button {\n    border: none;\n    background: #000;\n    color: #fff;\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n  }\n  \n  .patient_report_section .patient_top_search h1 {\n    font-size: 32px;\n    text-transform: uppercase;\n    color: #002035;\n    margin: auto;\n  }\n  \n  .patient_report_section .patient_top_search .search_bar button:focus {\n    outline: none;\n  }\n  \n  .patient_report_section .button_action button {\n    border-radius: 5px;\n    background: linear-gradient(180deg, #f9dc19, #daa505);\n    color: #5e3619;\n    text-transform: uppercase;\n    font-family: \"RobotoBlack\";\n    font-size: 25px;\n    padding: 10px;\n    width: 400px;\n    border: 3px solid #d59d01;\n  }\n  \n  .techTable {\n    width: 100%;\n  }\n  \n  .table_structure .mat-list-base .mat-list-item, .mat-list-base .mat-list-option {\n    display: inline-flex;\n    height: auto;\n    -webkit-tap-highlight-color: transparent;\n    width: auto;\n    padding: 0;\n    color: #fff;\n    border-right: 0;\n    width: 49%;\n    margin-bottom: 10px;\n  }\n  \n  .doctorCount {\n    color: #353535;\n    padding: 3px 6px 6px;\n    font-size: 18px;\n    font-family: \"AvenirLight\";\n    margin: 0 18px;\n    display: initial;\n    background: #ffffff;\n    border-radius: 5px;\n  }\n  \n  .doctorCount a {\n    color: #26c6da;\n    font-family: 'AvenirBlack';\n    cursor: pointer;\n  }\n  \n  .allDocGrid {\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n  }\n  \n  .allDocGrid .allItem {\n    width: 32%;\n    margin: 1%;\n    padding: 16px;\n    box-sizing: border-box;\n    box-shadow: 0px 0px 7px -1px #d27200;\n    position: relative;\n    text-align: center;\n  }\n  \n  .allDocGrid .allItem .items_counter {\n    /* content: '';\n    display: block;\n    font-size: 20px;\n    font-family: \"RobotoBold\";\n    color: #fff;\n    clip-path: polygon(100% -3%, 0% 100%, 0 0);\n    background: #fda300;\n    background: #462121;\n    width: 40px;\n    height: 40px;\n    position: absolute;\n    left: 0;\n    top: 0;\n    padding: 3px;\n    text-align: left; */\n    display: none;\n  }\n  \n  .allDocGrid .allItem .header {\n    padding: 0 10px;\n    font-family: \"AvenirBlack\";\n    color: #462121;\n    font-size: 18px;\n    line-height: 20px;\n    text-transform: uppercase;\n  }\n  \n  .allDocGrid .allItem .otherDetails {\n    color: #3a2323;\n    font-size: 14px;\n    font-family: \"AvenirMedium\";\n    margin-bottom: 0;\n    margin-top: 10px;\n  }\n  \n  .allDocGrid .allItem .otherDetails label {\n    font-family: \"AvenirBlack\";\n  }\n  \n  .allDocGrid .allItem:nth-child(3n+1) {\n    margin-left: 0;\n  }\n  \n  .allDocGrid .allItem:nth-child(3n+3) {\n    margin-right: 0;\n  }\n  \n  .modalmainwrapper .button_w { align-items: center; justify-content: flex-end; background: transparent; padding: 0; height: auto; }\n  \n  .modalmainwrapper .button_w button {\n    background: #fb0505;\n    color: #fff;\n    font-size: 18px;\n    font-family: \"RobotoBold\";\n    border-radius: 0;\n    text-transform: capitalize;\n  }\n  \n  .modalmainwrapper .main_title {\n    color: #0e0000;\n    display: block;\n    text-align: center;\n    font-family: \"AvenirBlack\";\n    text-transform: uppercase;\n    font-size: 30px;\n    margin-bottom: 16px;\n    background: #f9f9f9;\n    padding: 16px;\n    box-shadow: 0px 0px 3px 0px #fda300;\n  }\n  \n  @media screen and (max-width: 1199px) {\n    /* new modifiation */\n    .techDashboard .biller_wrapper .super_bill_item {\n      width: 29.2%;\n    }\n  }\n  \n/*# sourceMappingURL=data:application/json;base64, */";
    /***/
  },

  /***/
  "./src/app/components/doctor-office/manage-appointments/appoinments-listing/appoinments-listing.component.ts":
  /*!*******************************************************************************************************************!*\
    !*** ./src/app/components/doctor-office/manage-appointments/appoinments-listing/appoinments-listing.component.ts ***!
    \*******************************************************************************************************************/

  /*! exports provided: AppoinmentsListingComponent */

  /***/
  function srcAppComponentsDoctorOfficeManageAppointmentsAppoinmentsListingAppoinmentsListingComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AppoinmentsListingComponent", function () {
      return AppoinmentsListingComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_common_http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/common/http */
    "./node_modules/@angular/common/fesm2015/http.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _class_common_common_function__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../../../../class/common/common-function */
    "./src/app/class/common/common-function.ts");
    /* harmony import */


    var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/material/dialog */
    "./node_modules/@angular/material/esm2015/dialog.js");
    /* harmony import */


    var moment__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! moment */
    "./node_modules/moment/moment.js");
    /* harmony import */


    var moment__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_8__);
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");

    var moment = moment__WEBPACK_IMPORTED_MODULE_8__;

    var AppoinmentsListingComponent = /*#__PURE__*/function () {
      function AppoinmentsListingComponent(cookie, http, snackBar, httpService, activatedRoute, commonFunction, dialog) {
        _classCallCheck(this, AppoinmentsListingComponent);

        this.cookie = cookie;
        this.http = http;
        this.snackBar = snackBar;
        this.httpService = httpService;
        this.activatedRoute = activatedRoute;
        this.commonFunction = commonFunction;
        this.dialog = dialog;
        this.searchJson = {
          doctorName: "",
          patientName: "",
          status: "",
          dateRange: ""
        };
        this.allResolveData = {};
        this.htmlText = {
          headerText: "Patient Report Record"
        };
        this.authData = {};
        this.doctors = [];
        var allData = cookie.getAll();
        this.authData["userData"] = JSON.parse(cookie.get('user_details'));
        this.authData["jwtToken"] = cookie.get('jwtToken');
      }

      _createClass(AppoinmentsListingComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this179 = this;

          // load doctor search data
          var data1 = {
            token: this.cookie.get('jwtToken'),
            condition: {
              doctors_office_id: JSON.parse(this.cookie.get('user_details'))._id
            }
          };
          this.httpService.postRequest('get-doctor-info', data1).subscribe(function (response) {
            for (var i = 0; i < response.data.length; i++) {
              var temp = {};
              temp['val'] = response.data[i]._id;
              temp['name'] = response.data[i].firstname + ' ' + response.data[i].lastname;

              _this179.doctors.push(temp);
            }
          });
        }
      }, {
        key: "openSnackBar",
        value: function openSnackBar(message, action) {
          this.snackBar.open(message, action, {
            duration: 3000
          });
        }
      }]);

      return AppoinmentsListingComponent;
    }();

    AppoinmentsListingComponent.ctorParameters = function () {
      return [{
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_9__["MatSnackBar"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__["HttpServiceService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"]
      }, {
        type: _class_common_common_function__WEBPACK_IMPORTED_MODULE_6__["CommonFunction"]
      }, {
        type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_7__["MatDialog"]
      }];
    };

    AppoinmentsListingComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-appoinments-listing',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./appoinments-listing.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor-office/manage-appointments/appoinments-listing/appoinments-listing.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./appoinments-listing.component.css */
      "./src/app/components/doctor-office/manage-appointments/appoinments-listing/appoinments-listing.component.css"))["default"]]
    })], AppoinmentsListingComponent);
    /***/
  },

  /***/
  "./src/app/components/doctor-office/manage-appointments/book-appoinment-now/book-appoinment-now.component.css":
  /*!********************************************************************************************************************!*\
    !*** ./src/app/components/doctor-office/manage-appointments/book-appoinment-now/book-appoinment-now.component.css ***!
    \********************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsDoctorOfficeManageAppointmentsBookAppoinmentNowBookAppoinmentNowComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZG9jdG9yLW9mZmljZS9tYW5hZ2UtYXBwb2ludG1lbnRzL2Jvb2stYXBwb2lubWVudC1ub3cvYm9vay1hcHBvaW5tZW50LW5vdy5jb21wb25lbnQuY3NzIn0= */";
    /***/
  },

  /***/
  "./src/app/components/doctor-office/manage-appointments/book-appoinment-now/book-appoinment-now.component.ts":
  /*!*******************************************************************************************************************!*\
    !*** ./src/app/components/doctor-office/manage-appointments/book-appoinment-now/book-appoinment-now.component.ts ***!
    \*******************************************************************************************************************/

  /*! exports provided: BookAppoinmentNowComponent, ChooseDoctorDialog */

  /***/
  function srcAppComponentsDoctorOfficeManageAppointmentsBookAppoinmentNowBookAppoinmentNowComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BookAppoinmentNowComponent", function () {
      return BookAppoinmentNowComponent;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ChooseDoctorDialog", function () {
      return ChooseDoctorDialog;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../../../../../environments/environment */
    "./src/environments/environment.ts");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var moment_es6__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! moment-es6 */
    "./node_modules/moment-es6/index.js");
    /* harmony import */


    var moment_es6__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(moment_es6__WEBPACK_IMPORTED_MODULE_8__);
    /* harmony import */


    var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! @angular/material/dialog */
    "./node_modules/@angular/material/esm2015/dialog.js");

    var BookAppoinmentNowComponent = /*#__PURE__*/function () {
      function BookAppoinmentNowComponent(activatedRoute, cookieService, snackBar, httpRequestService, dialog) {
        _classCallCheck(this, BookAppoinmentNowComponent);

        this.activatedRoute = activatedRoute;
        this.cookieService = cookieService;
        this.snackBar = snackBar;
        this.httpRequestService = httpRequestService;
        this.dialog = dialog;
        this.today = moment_es6__WEBPACK_IMPORTED_MODULE_8___default()().format('L');
        this.states = [];
        this.loading = true;
        this.configData = {
          appName: 'Calendar-Management',
          jwtToken: '',
          baseUrl: _environments_environment__WEBPACK_IMPORTED_MODULE_6__["environment"].calendarApi,
          endPoint: {
            add: 'add-or-update-event-data',
            datalist: 'datalist',
            deleteEvent: 'delete-single-event',
            viewEventSlots: 'view-event-eventdayarr',
            search: 'search',
            countSlot: 'count-slot',
            addToCalendar: 'add-to-calendar',
            getRefreshToken: 'get-refresh-token',
            getTokenInfo: 'getauthorization-pece-getuserdata',
            syncWithGoogle: 'get-events-from-google',
            insuranceDataManage: 'insurance-data-manage'
          },
          urls: [],
          timeZone: [{
            text: 'Alaska Standard Time',
            value: '-08:00|America/Anchorage'
          }, {
            text: 'Pacific Standard Time',
            value: '-07:00|America/Los_Angeles'
          }, {
            text: 'Mountain Standard Time(GMT-06:00)',
            value: '-06:00|America/Denver'
          }, {
            text: 'Mountain Standard Time(GMT-07:00) (no DST)',
            value: '-07:00|America/Phoenix'
          }, {
            text: 'Central Standard Time',
            value: '-05:00|America/Chicago'
          }, {
            text: 'Eastern Standard Time',
            value: '-04:00|America/New_York'
          }, {
            text: 'Hawaii Standard Time',
            value: '-10:00|Pacific/Honolulu'
          }],
          eventType: [{
            text: 'Admin Meetings',
            value: 1
          }],
          responseData: [],
          bookingStep: ['Fill patient details'],
          patientInfoFormFields: {},
          calendarInfoFormFields: {},
          primaryCondition: {// $or: [{event_type: 1}, {event_type: 2}],
            // userid: {$in: JSON.parse(this.cookieService.get('user_details')).tech_id}
          }
        };
      }

      _createClass(BookAppoinmentNowComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          // this.getStates();
          if (this.cookieService.check('jwtToken')) {
            this.configData.jwtToken = this.cookieService.get('jwtToken'); // this.activatedRoute.data.forEach((data) => {
            //   this.resolveData = data.eventdayarrData;
            //   this.configData.responseData = data.eventdayarrData.data;
            // });
          } else {
            this.openSnackBar('Token not found');
          }
          /******* Get user details from cookies ******/


          this.userDetails = JSON.parse(this.cookieService.get('user_details'));
          this.configData = Object.assign(this.configData, this.userDetails);
          this.openDialog(); // this.configData.primaryCondition = Object.assign(this.configData.primaryCondition, {userid: {$in: [this.userDetails._id]}});
          // this.httpRequestService.postRequest('get-doctor-list', {_id: {$in: [this.userDetails.doctor_id]}}).subscribe((result: any) => {
          //   console.info('result', result);
          // })

          this.updateUser();
        }
      }, {
        key: "updateUser",
        value: function updateUser() {
          var _this180 = this;

          // let userDetails: any = JSON.parse(this.cookieService.get('user_details'));
          if (this.activatedRoute.snapshot.params.refresh && this.cookieService.check('user_details')) {
            var data = {
              token: this.cookieService.get('jwtToken'),
              id: this.userDetails._id,
              data: {
                access_token: this.activatedRoute.snapshot.params.access_t,
                refresh_token: this.activatedRoute.snapshot.params.refresh
              }
            };
            this.httpRequestService.postRequest('update-user', data).subscribe(function (response) {
              // console.log('response', response);
              if (response.status == 'success') {
                _this180.openSnackBar('Calendar added successfully...');
              }
            });
            var urlSendEmail = this.configData.baseUrl + 'send-confirmation-email?id=' + this.userDetails._id;
            this.httpRequestService.getRequest(urlSendEmail, {}).subscribe(function (response) {
              if (response.status == 'success') {
                // console.log('Mail sent ', response.msg_id);
                _this180.openSnackBar('Confirmation email sent to your email - ' + _this180.userDetails.email, 'Ok');
              }
            }); // Update user_details in cookie

            this.cookieService.set('user_details', JSON.stringify(Object.assign(this.userDetails, data.data)));
          }
        }
      }, {
        key: "populateFormFields",
        value: function populateFormFields(doctor_id, parent_id, parent_type) {
          var _this181 = this;

          /* ****************** Get states value from assets/states.json ****************** */
          this.httpRequestService.get('assets/data/states.json').subscribe(function (res) {
            _this181.states = res;
            var insuranceData = [];

            for (var i = 0; i < _this181.resolveData.others.insurance.length; i++) {
              var temp = {};
              temp['text'] = _this181.resolveData.others.insurance[i].insurancename;
              temp['value'] = _this181.resolveData.others.insurance[i]._id;
              insuranceData.push(temp);
            }

            insuranceData.push({
              text: 'Others',
              value: 0
            });
            var insuranceTypeData = [];

            for (var _i4 = 0; _i4 < _this181.resolveData.others.insurance_type.length; _i4++) {
              var _temp3 = {};
              _temp3['text'] = _this181.resolveData.others.insurance_type[_i4].insurancetype_name;
              _temp3['value'] = _this181.resolveData.others.insurance_type[_i4]._id;
              _temp3['child_of'] = _this181.resolveData.others.insurance_type[_i4].insurance_id;
              insuranceTypeData.push(_temp3);
            } // console.log('insuranceTypeData', insuranceTypeData);


            var otherFieldsData = [];

            for (var _i5 = 0; _i5 < _this181.resolveData.others.patient_information.length; _i5++) {
              var fieldData = void 0;

              switch (_this181.resolveData.others.patient_information[_i5].type) {
                case 'checkbox':
                  fieldData = {
                    type: 'checkbox',
                    label: _this181.resolveData.others.patient_information[_i5].description,
                    checkItems: [{
                      name: _this181.resolveData.others.patient_information[_i5].label,
                      value: false,
                      label: '',
                      labelPosition: 'before'
                    }]
                  };
                  break;

                case 'textfield':
                  fieldData = {
                    type: 'input',
                    name: _this181.resolveData.others.patient_information[_i5].label,
                    placeholder: _this181.resolveData.others.patient_information[_i5].description,
                    label: _this181.resolveData.others.patient_information[_i5].description,
                    value: ''
                  };
                  break;

                case 'dropdown':
                  for (var j = 0; j < _this181.resolveData.others.patient_information[_i5].addfield.length; j++) {
                    _this181.resolveData.others.patient_information[_i5].addfield[j] = {
                      text: _this181.resolveData.others.patient_information[_i5].addfield[j],
                      value: _this181.resolveData.others.patient_information[_i5].addfield[j]
                    };
                  }

                  fieldData = {
                    type: 'select',
                    name: _this181.resolveData.others.patient_information[_i5].label,
                    placeholder: _this181.resolveData.others.patient_information[_i5].description,
                    label: _this181.resolveData.others.patient_information[_i5].description,
                    options: _this181.resolveData.others.patient_information[_i5].addfield
                  };
                  break;
              }

              if (fieldData != undefined) {
                if (otherFieldsData.length == 0) {
                  fieldData['caption'] = 'Others Details';
                }

                otherFieldsData.push(fieldData);
              }
            } // console.log('otherFieldsData', otherFieldsData);


            var patientInfoFormFields = [{
              type: 'input',
              name: 'practice_name',
              placeholder: 'Practice Name',
              label: 'Practice Name',
              value: '',
              validators: [_angular_forms__WEBPACK_IMPORTED_MODULE_7__["Validators"].required],
              error: 'Enter practice name',
              caption: 'Patient General Information'
            }, {
              type: 'input',
              name: 'address',
              placeholder: 'Address',
              label: 'Address',
              value: ''
            }, // {type: 'input', name: 'state', placeholder: 'State', label: 'State', value: ''},
            {
              type: 'select',
              name: 'state',
              placeholder: 'Select State',
              label: 'State',
              options: _this181.states,
              validators: [_angular_forms__WEBPACK_IMPORTED_MODULE_7__["Validators"].required],
              error: 'Select state'
            }, {
              type: 'input',
              name: 'city',
              placeholder: 'City',
              label: 'City',
              value: ''
            }, {
              type: 'input',
              name: 'zip',
              placeholder: 'ZIP',
              label: 'ZIP',
              value: ''
            }, {
              type: 'input',
              name: 'patient_name',
              placeholder: 'Patient Name',
              label: 'Patient Name',
              value: '',
              validators: [_angular_forms__WEBPACK_IMPORTED_MODULE_7__["Validators"].required],
              error: 'Enter patient name'
            }, {
              type: 'date',
              name: 'dob',
              placeholder: 'Date of Birth',
              label: 'Date of Birth',
              value: '',
              validators: [_angular_forms__WEBPACK_IMPORTED_MODULE_7__["Validators"].required],
              error: 'Enter date of birth of the patient'
            }, {
              type: 'select',
              name: 'gender',
              placeholder: 'Gender',
              label: 'Gender',
              options: [{
                text: 'Male',
                value: 'male'
              }, {
                text: 'Female',
                value: 'female'
              }],
              validators: [_angular_forms__WEBPACK_IMPORTED_MODULE_7__["Validators"].required],
              error: 'Select gender'
            }, {
              type: 'input',
              name: 'patient_email',
              placeholder: 'Patient Email',
              label: 'Patient Email',
              value: '',
              validators: [_angular_forms__WEBPACK_IMPORTED_MODULE_7__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_7__["Validators"].email],
              error: 'Enter patient email'
            }, {
              type: 'input',
              name: 'height',
              placeholder: 'Ex. 6\'10"',
              label: 'Height',
              value: '',
              validators: [_angular_forms__WEBPACK_IMPORTED_MODULE_7__["Validators"].required],
              error: 'Enter patient height'
            }, {
              type: 'input',
              name: 'weight',
              placeholder: 'Ex. 210 lbs',
              label: 'Weight',
              value: '',
              validators: [_angular_forms__WEBPACK_IMPORTED_MODULE_7__["Validators"].required],
              error: 'Enter patient weight'
            }, {
              type: 'input',
              name: 'booking_date',
              placeholder: 'Date',
              label: 'Booking date',
              value: _this181.today,
              disabled: true
            }];
            var checkboxFields = [{
              type: 'checkbox',
              caption: 'Autonomic Nervous System Dysfunction (ANSD)',
              label: 'Blurred Vision',
              checkItems: [{
                name: 'bv_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'bv_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'Autonomic Nervous System Dysfunction (ANSD)'
            }, {
              type: 'checkbox',
              label: 'Elevated Blood Sugar',
              checkItems: [{
                name: 'ebs_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'ebs_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'Autonomic Nervous System Dysfunction (ANSD)'
            }, {
              type: 'checkbox',
              label: 'Extreme Thirst',
              checkItems: [{
                name: 'et_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'et_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'Autonomic Nervous System Dysfunction (ANSD)'
            }, {
              type: 'checkbox',
              label: 'Frequent Urination',
              checkItems: [{
                name: 'fu_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'fu_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'Autonomic Nervous System Dysfunction (ANSD)'
            }, {
              type: 'checkbox',
              label: 'Fatigue (Tiredness)',
              checkItems: [{
                name: 'ft_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'ft_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'Autonomic Nervous System Dysfunction (ANSD)'
            }, {
              type: 'checkbox',
              label: 'Heartburn',
              checkItems: [{
                name: 'hb_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'hb_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'Autonomic Nervous System Dysfunction (ANSD)'
            }, {
              type: 'checkbox',
              label: 'Increased Hunger',
              checkItems: [{
                name: 'ih_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'ih_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'Autonomic Nervous System Dysfunction (ANSD)'
            }, {
              type: 'checkbox',
              label: 'Nausea',
              checkItems: [{
                name: 'nau_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'nau_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'Autonomic Nervous System Dysfunction (ANSD)'
            }, {
              type: 'checkbox',
              label: 'Numbness & Tingling in Hands or Feet',
              checkItems: [{
                name: 'nthf_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'nthf_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'Autonomic Nervous System Dysfunction (ANSD)'
            }, {
              type: 'checkbox',
              label: 'Vomiting',
              checkItems: [{
                name: 'vomiting_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'vomiting_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'Autonomic Nervous System Dysfunction (ANSD)'
            }, {
              type: 'checkbox',
              caption: 'Sudomotor Dysfunction (SUDOD)',
              label: 'Burning Sensations',
              checkItems: [{
                name: 'bs_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'bs_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'Autonomic Nervous System Dysfunction (ANSD)'
            }, {
              type: 'checkbox',
              label: 'Difficulty Digesting Food',
              checkItems: [{
                name: 'ddf_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'ddf_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'Autonomic Nervous System Dysfunction (ANSD)'
            }, {
              type: 'checkbox',
              label: 'Dizziness or Fainting',
              checkItems: [{
                name: 'dof_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'dof_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'Autonomic Nervous System Dysfunction (ANSD)'
            }, {
              type: 'checkbox',
              label: 'Exercise Intolerance',
              checkItems: [{
                name: 'ei_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'ei_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'Autonomic Nervous System Dysfunction (ANSD)'
            }, {
              type: 'checkbox',
              label: 'Sexual Difficulties',
              checkItems: [{
                name: 'sd_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'sd_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'Autonomic Nervous System Dysfunction (ANSD)'
            }, {
              type: 'checkbox',
              label: 'Sweat Abnormalities',
              checkItems: [{
                name: 'sa_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'sa_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'Autonomic Nervous System Dysfunction (ANSD)'
            }, {
              type: 'checkbox',
              label: 'Tingling Hands & Feet',
              checkItems: [{
                name: 'thf_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'thf_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'Autonomic Nervous System Dysfunction (ANSD)'
            }, {
              type: 'checkbox',
              label: 'Urinary Problems',
              checkItems: [{
                name: 'up_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'up_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'Autonomic Nervous System Dysfunction (ANSD)'
            }, {
              type: 'checkbox',
              caption: 'ENDOTHELIAL DYSFUNCTION (ENDOD)',
              label: 'Angina (severe chest pain, often spreading to shoulder, arm, back, neck, or jaw)',
              checkItems: [{
                name: 'angina_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'angina_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'ENDOTHELIAL DYSFUNCTION (ENDOD)'
            }, {
              type: 'checkbox',
              label: 'Chest Pain that goes away with rest',
              checkItems: [{
                name: 'cptgawr_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'cptgawr_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'ENDOTHELIAL DYSFUNCTION (ENDOD)'
            }, {
              type: 'checkbox',
              label: 'Heartburn',
              checkItems: [{
                name: 'hrtbn_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'hrtbn_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'ENDOTHELIAL DYSFUNCTION (ENDOD)'
            }, {
              type: 'checkbox',
              label: 'Pain In Calves',
              checkItems: [{
                name: 'pic_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'pic_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'ENDOTHELIAL DYSFUNCTION (ENDOD)'
            }, {
              type: 'checkbox',
              label: 'Shortness of Breath',
              checkItems: [{
                name: 'sob_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'sob_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'ENDOTHELIAL DYSFUNCTION (ENDOD)'
            }, {
              type: 'checkbox',
              label: 'Stroke',
              checkItems: [{
                name: 'stroke_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'stroke_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'ENDOTHELIAL DYSFUNCTION (ENDOD)'
            }, {
              type: 'checkbox',
              label: 'TIA (mini stroke)',
              checkItems: [{
                name: 'tia_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'tia_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'ENDOTHELIAL DYSFUNCTION (ENDOD)'
            }, {
              type: 'checkbox',
              caption: 'CARDIOMETABOLIC RISK (CMR)',
              label: 'Headaches',
              checkItems: [{
                name: 'headaches_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'headaches_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'CARDIOMETABOLIC RISK (CMR)'
            }, {
              type: 'checkbox',
              label: 'Dizziness',
              checkItems: [{
                name: 'dizziness_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'dizziness_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'CARDIOMETABOLIC RISK (CMR)'
            }, {
              type: 'checkbox',
              label: 'Swelling of Ankles',
              checkItems: [{
                name: 'soa_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'soa_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'CARDIOMETABOLIC RISK (CMR)'
            }, {
              type: 'checkbox',
              caption: 'INSULIN RESISTANCE (IR)',
              label: 'Blurred Vision',
              checkItems: [{
                name: 'blv_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'blv_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'INSULIN RESISTANCE (IR)'
            }, {
              type: 'checkbox',
              label: 'Elevated Blood Sugar',
              checkItems: [{
                name: 'ebsr_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'ebsr_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'INSULIN RESISTANCE (IR)'
            }, {
              type: 'checkbox',
              label: 'Extreme Thirst',
              checkItems: [{
                name: 'ext_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'ext_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'INSULIN RESISTANCE (IR)'
            }, {
              type: 'checkbox',
              label: 'Fatigue (Tiredness)',
              checkItems: [{
                name: 'ftd_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'ftd_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'INSULIN RESISTANCE (IR)'
            }, {
              type: 'checkbox',
              label: 'Increased Hunger',
              checkItems: [{
                name: 'ihr_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'ihr_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'INSULIN RESISTANCE (IR)'
            }, {
              type: 'checkbox',
              caption: 'SMALL FIBER SENSORY NEUROPATHY (SFN)',
              label: 'Burning Sensations',
              checkItems: [{
                name: 'burns_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'burns_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'SMALL FIBER SENSORY NEUROPATHY (SFN)'
            }, {
              type: 'checkbox',
              label: 'Painful Contact With Socks or Bed Sheets',
              checkItems: [{
                name: 'pcwsbs_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'pcwsbs_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'SMALL FIBER SENSORY NEUROPATHY (SFN)'
            }, {
              type: 'checkbox',
              label: 'Pebble or Sandlike Sensation In Shoes',
              checkItems: [{
                name: 'psss_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'psss_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'SMALL FIBER SENSORY NEUROPATHY (SFN)'
            }, {
              type: 'checkbox',
              label: 'Stabbing or Electrical Shock Sensation',
              checkItems: [{
                name: 'sess_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'sess_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'SMALL FIBER SENSORY NEUROPATHY (SFN)'
            }, {
              type: 'checkbox',
              label: 'Pins And Needles Sensation In Feet',
              checkItems: [{
                name: 'pnsf_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'pnsf_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'SMALL FIBER SENSORY NEUROPATHY (SFN)'
            }, {
              type: 'checkbox',
              caption: 'CARDIOMETABOLIC AUTONOMIC NEUROPATHY (CAN)',
              label: 'Blurred Vision',
              checkItems: [{
                name: 'bldv_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'bldv_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'CARDIOMETABOLIC AUTONOMIC NEUROPATHY (CAN)'
            }, {
              type: 'checkbox',
              label: 'Cold, Clammy, Pale Skin',
              checkItems: [{
                name: 'ccps_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'ccps_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'CARDIOMETABOLIC AUTONOMIC NEUROPATHY (CAN)'
            }, {
              type: 'checkbox',
              label: 'Depression',
              checkItems: [{
                name: 'depression_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'depression_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'CARDIOMETABOLIC AUTONOMIC NEUROPATHY (CAN)'
            }, {
              type: 'checkbox',
              label: 'Dizziness or Lightheadedness',
              checkItems: [{
                name: 'dol_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'dol_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'CARDIOMETABOLIC AUTONOMIC NEUROPATHY (CAN)'
            }, {
              type: 'checkbox',
              label: 'Thirst',
              checkItems: [{
                name: 'thirst_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'thirst_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'CARDIOMETABOLIC AUTONOMIC NEUROPATHY (CAN)'
            }, {
              type: 'checkbox',
              label: 'Fainting',
              checkItems: [{
                name: 'fainting_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'fainting_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'CARDIOMETABOLIC AUTONOMIC NEUROPATHY (CAN)'
            }, {
              type: 'checkbox',
              label: 'Fatigue (Tiredness)',
              checkItems: [{
                name: 'fatt_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'fatt_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'CARDIOMETABOLIC AUTONOMIC NEUROPATHY (CAN)'
            }, {
              type: 'checkbox',
              label: 'Lack of Concentration',
              checkItems: [{
                name: 'loc_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'loc_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'CARDIOMETABOLIC AUTONOMIC NEUROPATHY (CAN)'
            }, {
              type: 'checkbox',
              label: 'Lack of Energy',
              checkItems: [{
                name: 'loe_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'loe_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'CARDIOMETABOLIC AUTONOMIC NEUROPATHY (CAN)'
            }, {
              type: 'checkbox',
              label: 'Nausea',
              checkItems: [{
                name: 'nausea_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'nausea_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'CARDIOMETABOLIC AUTONOMIC NEUROPATHY (CAN)'
            }, {
              type: 'checkbox',
              label: 'Rapid, Shallow Breathing',
              checkItems: [{
                name: 'rsb_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'rsb_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'CARDIOMETABOLIC AUTONOMIC NEUROPATHY (CAN)'
            }, {
              type: 'checkbox',
              caption: 'PLETHYSMOGRAPHY CARDIOVASCULAR DISEASE (PTG CVD)',
              label: 'Blood clot in a vein (Venous Thrombosis)',
              checkItems: [{
                name: 'bciv_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'bciv_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'PLETHYSMOGRAPHY CARDIOVASCULAR DISEASE (PTG CVD)'
            }, {
              type: 'checkbox',
              label: 'Heart Attack',
              checkItems: [{
                name: 'hattk_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'hattk_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'PLETHYSMOGRAPHY CARDIOVASCULAR DISEASE (PTG CVD)'
            }, {
              type: 'checkbox',
              label: 'Irregular heartbeat, too fast/slow (Atrial Fibrillation)',
              checkItems: [{
                name: 'ihtfs_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'iftfs_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'PLETHYSMOGRAPHY CARDIOVASCULAR DISEASE (PTG CVD)'
            }, {
              type: 'checkbox',
              label: 'Stroke',
              checkItems: [{
                name: 'strk_six_months',
                value: false,
                label: '6 Months',
                labelPosition: 'before'
              }, {
                name: 'strk_today',
                value: false,
                label: 'Today',
                labelPosition: 'before'
              }],
              isSymptomChecklist: true,
              block: 'PLETHYSMOGRAPHY CARDIOVASCULAR DISEASE (PTG CVD)'
            }];
            var autocompleteFields = [{
              type: 'select',
              name: 'insurance_id',
              placeholder: 'Insurance name',
              label: 'Insurance name',
              value: '',
              options: insuranceData,
              caption: 'Insurance Information',
              validators: [_angular_forms__WEBPACK_IMPORTED_MODULE_7__["Validators"].required],
              error: 'Please select insurance name'
            }, {
              type: 'select',
              name: 'insurance_type',
              placeholder: 'Insurance type',
              label: 'Insurance type',
              value: '',
              isDependent: true,
              dependentOn: 'insurance_id',
              options: insuranceTypeData,
              validators: [_angular_forms__WEBPACK_IMPORTED_MODULE_7__["Validators"].required],
              error: 'Please select insurance type'
            }, {
              type: 'input',
              name: 'insurance_name_input',
              placeholder: 'Name of the insurance',
              label: 'Name of the insurance',
              value: '',
              isDependent: true,
              dependentOn: 'insurance_id',
              condition: 0
            }, {
              type: 'input',
              name: 'insurance_type_input',
              placeholder: 'Insurance type',
              label: 'Insurance type',
              value: '',
              isDependent: true,
              dependentOn: 'insurance_id',
              condition: 0
            }];
            var calendarInfoFormFields = [{
              type: 'input',
              name: 'event_title',
              placeholder: 'Event Title',
              label: 'Event Title',
              value: '',
              disabled: true
            }, {
              type: 'input',
              name: 'description',
              placeholder: 'Event Description',
              label: 'Event Description',
              value: '',
              disabled: true
            }, {
              type: 'input',
              name: 'startdate',
              placeholder: 'Date of Appointment',
              label: 'Date of Appointment',
              value: '',
              disabled: true
            }, {
              type: 'input',
              name: 'slot',
              placeholder: 'Time of Appointment',
              label: 'Time of Appointment',
              value: '',
              disabled: true
            }, {
              type: 'select',
              name: 'reqTimezone',
              label: 'Timezone',
              options: [{
                text: 'Alaska Standard Time',
                value: '-08:00|America/Anchorage'
              }, {
                text: 'Pacific Standard Time',
                value: '-07:00|America/Los_Angeles'
              }, {
                text: 'Mountain Standard Time(GMT-06:00)',
                value: '-06:00|America/Denver'
              }, {
                text: 'Mountain Standard Time(GMT-07:00) (no DST)',
                value: '-07:00|America/Phoenix'
              }, {
                text: 'Central Standard Time',
                value: '-05:00|America/Chicago'
              }, {
                text: 'Eastern Standard Time',
                value: '-04:00|America/New_York'
              }, {
                text: 'Hawaii Standard Time',
                value: '-10:00|Pacific/Honolulu'
              }],
              value: '-05:00|America/Chicago',
              disabled: true
            }, {
              type: 'input',
              name: 'username',
              placeholder: 'Organizer Name',
              label: 'Organizer Name',
              value: '',
              disabled: true
            }, {
              type: 'input',
              name: 'useremail',
              placeholder: 'Organizer Email',
              label: 'Organizer Email',
              value: '',
              disabled: true
            }, {
              type: 'input',
              name: 'attendees',
              placeholder: 'Attendee Email',
              label: 'Attendee Email',
              value: '',
              disabled: true
            }, {
              type: 'input',
              name: 'additional_notes',
              placeholder: 'Additional Notes',
              label: 'Additional Notes',
              value: ''
            }]; // this.httpRequestService.postRequest('get-doctor-info', {condition: {_id: this.userDetails.doctor_id}}).subscribe((response: any) => {

            var hiddenFields = [{
              type: 'input',
              name: 'doctor_id',
              value: doctor_id,
              hidden: true
            }, {
              type: 'input',
              name: 'doctors_office_id',
              value: _this181.userDetails._id,
              hidden: true
            }, // {type: 'input', name: 'tech_id', value: response.data.tech_id, hidden: true},
            {
              type: 'input',
              name: 'parent_type',
              value: parent_type,
              hidden: true
            }, {
              type: 'input',
              name: 'parent_id',
              value: parent_id,
              hidden: true
            }];
            _this181.configData = Object.assign(_this181.configData, {
              patientInfoFormFields: patientInfoFormFields.concat(autocompleteFields, otherFieldsData, checkboxFields, hiddenFields)
            }, {
              calendarInfoFormFields: calendarInfoFormFields
            }); // });
          }, function (error) {
            console.log('Oooops! Cannot get states.');
          });
        }
      }, {
        key: "openSnackBar",
        value: function openSnackBar(message) {
          var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
          this.snackBar.open(message, action, {
            duration: 3000
          });
        }
      }, {
        key: "openDialog",
        value: function openDialog() {
          var _this182 = this;

          var dialogRef = this.dialog.open(ChooseDoctorDialog, {
            width: '500px',
            data: this.userDetails
          });
          dialogRef.afterClosed().subscribe(function (result) {
            console.log('The dialog was closed', result);
            _this182.configData.responseData = [];
            _this182.configData.primaryCondition = {
              userid: {
                $in: result.tech_id
              }
            };

            _this182.httpRequestService.postRequest(_this182.configData.endPoint.viewEventSlots, {
              token: _this182.configData.jwtToken,
              condition: _this182.configData.primaryCondition
            }).subscribe(function (response) {
              _this182.configData.responseData = response.data;
              _this182.resolveData = response;

              _this182.populateFormFields(result.doctor_id, result.parent_id, result.parent_type);

              _this182.loading = false;
            });
          });
        }
      }]);

      return BookAppoinmentNowComponent;
    }();

    BookAppoinmentNowComponent.ctorParameters = function () {
      return [{
        type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatSnackBar"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__["HttpServiceService"]
      }, {
        type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_9__["MatDialog"]
      }];
    };

    BookAppoinmentNowComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-book-appoinment-now',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./book-appoinment-now.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor-office/manage-appointments/book-appoinment-now/book-appoinment-now.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./book-appoinment-now.component.css */
      "./src/app/components/doctor-office/manage-appointments/book-appoinment-now/book-appoinment-now.component.css"))["default"]]
    })], BookAppoinmentNowComponent); // Choose doctor modal

    var ChooseDoctorDialog = /*#__PURE__*/function () {
      function ChooseDoctorDialog(dialogRef, snackBar, data, httpRequestService, cookieService) {
        _classCallCheck(this, ChooseDoctorDialog);

        this.dialogRef = dialogRef;
        this.snackBar = snackBar;
        this.data = data;
        this.httpRequestService = httpRequestService;
        this.cookieService = cookieService;
        this.selectedIds = {
          doctor_id: '',
          tech_id: '',
          parent_id: '',
          parent_type: ''
        };
        this.loadingTech = false;
      }

      _createClass(ChooseDoctorDialog, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this183 = this;

          var data1 = {
            token: this.cookieService.get('jwtToken'),
            condition: {
              doctors_office_id: this.data._id
            }
          };
          this.httpRequestService.postRequest('get-doctor-info', data1).subscribe(function (response) {
            _this183.doctorList = response.data;
          });
        }
      }, {
        key: "onChangeDoctor",
        value: function onChangeDoctor(doctor) {
          var _this184 = this;

          console.log('doctor', doctor);
          this.loadingTech = true;
          var data1 = {
            token: this.cookieService.get('jwtToken'),
            condition: {
              _id: doctor.doctor_id
            }
          };
          this.httpRequestService.postRequest('get-tech-info', data1).subscribe(function (response) {
            if (response._dropdown.length > 0) _this184.techList = response._dropdown;else _this184.openSnackBar('No tech found for this doctor', 'Ok');
            _this184.selectedIds.tech_id = response._dropdown.map(function (tech) {
              return tech.value;
            });
            _this184.loadingTech = false;
          });
          this.selectedIds.doctor_id = doctor.doctor_id;
          this.selectedIds.parent_id = doctor.parent_id;
          this.selectedIds.parent_type = doctor.parent_type;
        }
      }, {
        key: "onNoClick",
        value: function onNoClick() {
          this.dialogRef.close();
        }
      }, {
        key: "openSnackBar",
        value: function openSnackBar(message) {
          var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
          this.snackBar.open(message, action, {
            duration: 3000
          });
        }
      }]);

      return ChooseDoctorDialog;
    }();

    ChooseDoctorDialog.ctorParameters = function () {
      return [{
        type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_9__["MatDialogRef"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatSnackBar"]
      }, {
        type: undefined,
        decorators: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
          args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_9__["MAT_DIALOG_DATA"]]
        }]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__["HttpServiceService"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }];
    };

    ChooseDoctorDialog = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'choose-doctor',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./choose-doctor.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor-office/manage-appointments/book-appoinment-now/choose-doctor.html"))["default"]
    }), tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material_dialog__WEBPACK_IMPORTED_MODULE_9__["MAT_DIALOG_DATA"]))], ChooseDoctorDialog);
    /***/
  },

  /***/
  "./src/app/components/doctor/doctor-dashboard/doctor-dashboard.component.css":
  /*!***********************************************************************************!*\
    !*** ./src/app/components/doctor/doctor-dashboard/doctor-dashboard.component.css ***!
    \***********************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsDoctorDoctorDashboardDoctorDashboardComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "/*\n.content_wrapper{ display: flex; justify-content: center;  align-items: center; width: 100%; margin: auto;\n  text-align: center; }\n.content_wrapper .itemsection{width: 33%; margin: 14px 7px; padding: 15px; box-sizing: border-box; display: flex; flex-direction: column; min-height: 200px; align-items: center;\n  justify-content: center; position: relative;}\n.one{ background: url(\"../../../../assets/images/doctordashone.jpg\") no-repeat 100% center; background-size: cover; }\n.two{ background: url(\"../../../../assets/images/techdashcontentbg2.jpg\") no-repeat 100% center; background-size: cover; }\n.three{ background: url(\"../../../../assets/images/techdashcontentbg3.jpg\") no-repeat 100% center; background-size: cover; }\n.content_wrapper .itemsection button{ position: absolute;\n  right: 0; bottom: 0; background: rgba(0,0,0, 0.4); color: #fff; font-family: \"RobotoRegular\"; font-size: 15px;  border-radius: 0; text-transform: uppercase; }\n.content_wrapper .itemsection .counteer{ width: 90px; height: 90px; border-radius: 50%;\n  border: 1px solid rgba(0,0,0,0.1); background: rgba(0,0,0, 0.2); box-shadow: 2px 2px 2px 2px transparent;\n  display: flex; align-items: center; justify-content: center; font-size: 50px; font-family: \"RobotoBlack\"; }\n.content_wrapper .itemsection p{   line-height: 28px; font-family: \"RobotoBlack\"; font-size: 30px; color: #fff; text-transform: uppercase; width: 320px; margin: 20px auto; margin-top: 15px;}\n.content_wrapper .itemsection .uploadsign{ width: 100%; height: 113px;}\n.content_wrapper .itemsection .uploadsign p{ width: 100%; margin-bottom: 0; margin-top: 25px; }\n.content_wrapper .itemsection:nth-of-type(1){ padding: 0;}\n.content_wrapper .itemsection .section_title{ width: 90px; height: 90px; border-radius: 50%; background: #fff; margin-top: -45px; display: flex;\n  align-items: center; justify-content: center; padding: 20px; box-sizing: border-box; box-shadow: 0px 2px 4px -2px #e27d2c; margin-bottom: 13px;}\n.content_wrapper .itemsection .section_title img{ max-width: 100%; }\n.content_wrapper .itemsection .sign_uploader { display: flex; width: 100%; align-items: center;}\n.content_wrapper .itemsection .sign_uploader .message{ margin: 0 15px;}\n.content_wrapper .itemsection .sign_uploader input{ width: 100%; padding: 9px; box-sizing: border-box; border: 1px solid #dcdddf; }\n.content_wrapper .itemsection .sign_uploader .signature_upload{ position: inherit; top: 0; right: 0; background: #dd671d; color:#fff; }\n.gotoUpload{ position: inherit!important; top: 0; bottom: 0!important; background: #073f70!important; font-family: \"RobotoBold\"!important; width: 200px; padding: 3px; }\n.content_wrapper .itemsection:nth-child(1){ background: #efefef;}\n.top_header{ background: #f5ba4f; align-items: center; display: flex; justify-content: center; }\n.top_header h2{ margin: 0; font-size: 40px; color: #1f1f1f; font-family: \"RobotoBold\"; text-transform: uppercase; }\n.doctor_table .mat-form-field{ align-items: baseline; box-sizing: border-box; margin-left: 30px; }\n.doctorfromwrapper{ display: flex; justify-content: space-between; width: 100%; align-items: center; }\n.doctorfromwrapper button{ margin-right: 30px; }\n\n\n@media screen and (max-width: 1240px){\n  .content_wrapper .itemsection p { font-size: 22px; }\n  .content_wrapper .itemsection .counteer { width: 80px; height: 80px; font-size: 40px; }\n}\n@media screen and (max-width: 1040px){\n.content_wrapper .itemsection p { font-size: 20px; }\n.content_wrapper .itemsection .section_title { width: 75px; height: 75px; border-radius: 50%; padding: 14px; margin-bottom: 13px; }\n}\n@media screen and (max-width: 991px){\n.content_wrapper { display: flex; justify-content: center; align-items: center; flex-wrap: wrap; }\n.content_wrapper .itemsection { width: 48%; }\n.content_wrapper .itemsection:last-child{ margin-top: 0;}\n}\n@media screen and (max-width: 768px){\n.content_wrapper .itemsection { width: 100%; }\n}\n\n\n */\n.show{ flex-wrap: wrap; justify-content: center;}\n.hide{ display: none!important;}\n.viewMore{ display: flex; flex-wrap: wrap; justify-content: center;}\n\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kb2N0b3IvZG9jdG9yLWRhc2hib2FyZC9kb2N0b3ItZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztFQW1ERTtBQUNGLE9BQU8sZUFBZSxFQUFFLHVCQUF1QixDQUFDO0FBQ2hELE9BQU8sdUJBQXVCLENBQUM7QUFDL0IsV0FBVyxhQUFhLEVBQUUsZUFBZSxFQUFFLHVCQUF1QixDQUFDIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9kb2N0b3IvZG9jdG9yLWRhc2hib2FyZC9kb2N0b3ItZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuLmNvbnRlbnRfd3JhcHBlcnsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7ICBhbGlnbi1pdGVtczogY2VudGVyOyB3aWR0aDogMTAwJTsgbWFyZ2luOiBhdXRvO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbi5jb250ZW50X3dyYXBwZXIgLml0ZW1zZWN0aW9ue3dpZHRoOiAzMyU7IG1hcmdpbjogMTRweCA3cHg7IHBhZGRpbmc6IDE1cHg7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGRpc3BsYXk6IGZsZXg7IGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IG1pbi1oZWlnaHQ6IDIwMHB4OyBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgcG9zaXRpb246IHJlbGF0aXZlO31cbi5vbmV7IGJhY2tncm91bmQ6IHVybChcIi4uLy4uLy4uLy4uL2Fzc2V0cy9pbWFnZXMvZG9jdG9yZGFzaG9uZS5qcGdcIikgbm8tcmVwZWF0IDEwMCUgY2VudGVyOyBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyOyB9XG4udHdveyBiYWNrZ3JvdW5kOiB1cmwoXCIuLi8uLi8uLi8uLi9hc3NldHMvaW1hZ2VzL3RlY2hkYXNoY29udGVudGJnMi5qcGdcIikgbm8tcmVwZWF0IDEwMCUgY2VudGVyOyBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyOyB9XG4udGhyZWV7IGJhY2tncm91bmQ6IHVybChcIi4uLy4uLy4uLy4uL2Fzc2V0cy9pbWFnZXMvdGVjaGRhc2hjb250ZW50YmczLmpwZ1wiKSBuby1yZXBlYXQgMTAwJSBjZW50ZXI7IGJhY2tncm91bmQtc2l6ZTogY292ZXI7IH1cbi5jb250ZW50X3dyYXBwZXIgLml0ZW1zZWN0aW9uIGJ1dHRvbnsgcG9zaXRpb246IGFic29sdXRlO1xuICByaWdodDogMDsgYm90dG9tOiAwOyBiYWNrZ3JvdW5kOiByZ2JhKDAsMCwwLCAwLjQpOyBjb2xvcjogI2ZmZjsgZm9udC1mYW1pbHk6IFwiUm9ib3RvUmVndWxhclwiOyBmb250LXNpemU6IDE1cHg7ICBib3JkZXItcmFkaXVzOiAwOyB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyB9XG4uY29udGVudF93cmFwcGVyIC5pdGVtc2VjdGlvbiAuY291bnRlZXJ7IHdpZHRoOiA5MHB4OyBoZWlnaHQ6IDkwcHg7IGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgwLDAsMCwwLjEpOyBiYWNrZ3JvdW5kOiByZ2JhKDAsMCwwLCAwLjIpOyBib3gtc2hhZG93OiAycHggMnB4IDJweCAycHggdHJhbnNwYXJlbnQ7XG4gIGRpc3BsYXk6IGZsZXg7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IGp1c3RpZnktY29udGVudDogY2VudGVyOyBmb250LXNpemU6IDUwcHg7IGZvbnQtZmFtaWx5OiBcIlJvYm90b0JsYWNrXCI7IH1cbi5jb250ZW50X3dyYXBwZXIgLml0ZW1zZWN0aW9uIHB7ICAgbGluZS1oZWlnaHQ6IDI4cHg7IGZvbnQtZmFtaWx5OiBcIlJvYm90b0JsYWNrXCI7IGZvbnQtc2l6ZTogMzBweDsgY29sb3I6ICNmZmY7IHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IHdpZHRoOiAzMjBweDsgbWFyZ2luOiAyMHB4IGF1dG87IG1hcmdpbi10b3A6IDE1cHg7fVxuLmNvbnRlbnRfd3JhcHBlciAuaXRlbXNlY3Rpb24gLnVwbG9hZHNpZ257IHdpZHRoOiAxMDAlOyBoZWlnaHQ6IDExM3B4O31cbi5jb250ZW50X3dyYXBwZXIgLml0ZW1zZWN0aW9uIC51cGxvYWRzaWduIHB7IHdpZHRoOiAxMDAlOyBtYXJnaW4tYm90dG9tOiAwOyBtYXJnaW4tdG9wOiAyNXB4OyB9XG4uY29udGVudF93cmFwcGVyIC5pdGVtc2VjdGlvbjpudGgtb2YtdHlwZSgxKXsgcGFkZGluZzogMDt9XG4uY29udGVudF93cmFwcGVyIC5pdGVtc2VjdGlvbiAuc2VjdGlvbl90aXRsZXsgd2lkdGg6IDkwcHg7IGhlaWdodDogOTBweDsgYm9yZGVyLXJhZGl1czogNTAlOyBiYWNrZ3JvdW5kOiAjZmZmOyBtYXJnaW4tdG9wOiAtNDVweDsgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IHBhZGRpbmc6IDIwcHg7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGJveC1zaGFkb3c6IDBweCAycHggNHB4IC0ycHggI2UyN2QyYzsgbWFyZ2luLWJvdHRvbTogMTNweDt9XG4uY29udGVudF93cmFwcGVyIC5pdGVtc2VjdGlvbiAuc2VjdGlvbl90aXRsZSBpbWd7IG1heC13aWR0aDogMTAwJTsgfVxuLmNvbnRlbnRfd3JhcHBlciAuaXRlbXNlY3Rpb24gLnNpZ25fdXBsb2FkZXIgeyBkaXNwbGF5OiBmbGV4OyB3aWR0aDogMTAwJTsgYWxpZ24taXRlbXM6IGNlbnRlcjt9XG4uY29udGVudF93cmFwcGVyIC5pdGVtc2VjdGlvbiAuc2lnbl91cGxvYWRlciAubWVzc2FnZXsgbWFyZ2luOiAwIDE1cHg7fVxuLmNvbnRlbnRfd3JhcHBlciAuaXRlbXNlY3Rpb24gLnNpZ25fdXBsb2FkZXIgaW5wdXR7IHdpZHRoOiAxMDAlOyBwYWRkaW5nOiA5cHg7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGJvcmRlcjogMXB4IHNvbGlkICNkY2RkZGY7IH1cbi5jb250ZW50X3dyYXBwZXIgLml0ZW1zZWN0aW9uIC5zaWduX3VwbG9hZGVyIC5zaWduYXR1cmVfdXBsb2FkeyBwb3NpdGlvbjogaW5oZXJpdDsgdG9wOiAwOyByaWdodDogMDsgYmFja2dyb3VuZDogI2RkNjcxZDsgY29sb3I6I2ZmZjsgfVxuLmdvdG9VcGxvYWR7IHBvc2l0aW9uOiBpbmhlcml0IWltcG9ydGFudDsgdG9wOiAwOyBib3R0b206IDAhaW1wb3J0YW50OyBiYWNrZ3JvdW5kOiAjMDczZjcwIWltcG9ydGFudDsgZm9udC1mYW1pbHk6IFwiUm9ib3RvQm9sZFwiIWltcG9ydGFudDsgd2lkdGg6IDIwMHB4OyBwYWRkaW5nOiAzcHg7IH1cbi5jb250ZW50X3dyYXBwZXIgLml0ZW1zZWN0aW9uOm50aC1jaGlsZCgxKXsgYmFja2dyb3VuZDogI2VmZWZlZjt9XG4udG9wX2hlYWRlcnsgYmFja2dyb3VuZDogI2Y1YmE0ZjsgYWxpZ24taXRlbXM6IGNlbnRlcjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cbi50b3BfaGVhZGVyIGgyeyBtYXJnaW46IDA7IGZvbnQtc2l6ZTogNDBweDsgY29sb3I6ICMxZjFmMWY7IGZvbnQtZmFtaWx5OiBcIlJvYm90b0JvbGRcIjsgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgfVxuLmRvY3Rvcl90YWJsZSAubWF0LWZvcm0tZmllbGR7IGFsaWduLWl0ZW1zOiBiYXNlbGluZTsgYm94LXNpemluZzogYm9yZGVyLWJveDsgbWFyZ2luLWxlZnQ6IDMwcHg7IH1cbi5kb2N0b3Jmcm9td3JhcHBlcnsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOyB3aWR0aDogMTAwJTsgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuLmRvY3RvcmZyb213cmFwcGVyIGJ1dHRvbnsgbWFyZ2luLXJpZ2h0OiAzMHB4OyB9XG5cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTI0MHB4KXtcbiAgLmNvbnRlbnRfd3JhcHBlciAuaXRlbXNlY3Rpb24gcCB7IGZvbnQtc2l6ZTogMjJweDsgfVxuICAuY29udGVudF93cmFwcGVyIC5pdGVtc2VjdGlvbiAuY291bnRlZXIgeyB3aWR0aDogODBweDsgaGVpZ2h0OiA4MHB4OyBmb250LXNpemU6IDQwcHg7IH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEwNDBweCl7XG4uY29udGVudF93cmFwcGVyIC5pdGVtc2VjdGlvbiBwIHsgZm9udC1zaXplOiAyMHB4OyB9XG4uY29udGVudF93cmFwcGVyIC5pdGVtc2VjdGlvbiAuc2VjdGlvbl90aXRsZSB7IHdpZHRoOiA3NXB4OyBoZWlnaHQ6IDc1cHg7IGJvcmRlci1yYWRpdXM6IDUwJTsgcGFkZGluZzogMTRweDsgbWFyZ2luLWJvdHRvbTogMTNweDsgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTkxcHgpe1xuLmNvbnRlbnRfd3JhcHBlciB7IGRpc3BsYXk6IGZsZXg7IGp1c3RpZnktY29udGVudDogY2VudGVyOyBhbGlnbi1pdGVtczogY2VudGVyOyBmbGV4LXdyYXA6IHdyYXA7IH1cbi5jb250ZW50X3dyYXBwZXIgLml0ZW1zZWN0aW9uIHsgd2lkdGg6IDQ4JTsgfVxuLmNvbnRlbnRfd3JhcHBlciAuaXRlbXNlY3Rpb246bGFzdC1jaGlsZHsgbWFyZ2luLXRvcDogMDt9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCl7XG4uY29udGVudF93cmFwcGVyIC5pdGVtc2VjdGlvbiB7IHdpZHRoOiAxMDAlOyB9XG59XG5cblxuICovXG4uc2hvd3sgZmxleC13cmFwOiB3cmFwOyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjt9XG4uaGlkZXsgZGlzcGxheTogbm9uZSFpbXBvcnRhbnQ7fVxuLnZpZXdNb3JleyBkaXNwbGF5OiBmbGV4OyBmbGV4LXdyYXA6IHdyYXA7IGp1c3RpZnktY29udGVudDogY2VudGVyO31cblxuIl19 */";
    /***/
  },

  /***/
  "./src/app/components/doctor/doctor-dashboard/doctor-dashboard.component.ts":
  /*!**********************************************************************************!*\
    !*** ./src/app/components/doctor/doctor-dashboard/doctor-dashboard.component.ts ***!
    \**********************************************************************************/

  /*! exports provided: DoctorDashboardComponent */

  /***/
  function srcAppComponentsDoctorDoctorDashboardDoctorDashboardComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DoctorDashboardComponent", function () {
      return DoctorDashboardComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/material/dialog */
    "./node_modules/@angular/material/esm2015/dialog.js");
    /* harmony import */


    var _common_upload_dialog_box_upload_dialog_box_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../common/upload-dialog-box/upload-dialog-box.component */
    "./src/app/components/common/upload-dialog-box/upload-dialog-box.component.ts");
    /* harmony import */


    var _class_common_common_function__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../class/common/common-function */
    "./src/app/class/common/common-function.ts");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var ngx_device_detector__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ngx-device-detector */
    "./node_modules/ngx-device-detector/fesm2015/ngx-device-detector.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var _common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! ../../common/dialog-box/dialog-box.component */
    "./src/app/components/common/dialog-box/dialog-box.component.ts");
    /* harmony import */


    var moment__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
    /*! moment */
    "./node_modules/moment/moment.js");
    /* harmony import */


    var moment__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_11__);
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
    /*! ../../../../environments/environment */
    "./src/environments/environment.ts");

    var moment = moment__WEBPACK_IMPORTED_MODULE_11__;

    var DoctorDashboardComponent = /*#__PURE__*/function () {
      function DoctorDashboardComponent(dialog, commonFunction, cookie, http, activatedRoute, matSnackBar, deviceService) {
        var _this185 = this;

        _classCallCheck(this, DoctorDashboardComponent);

        this.dialog = dialog;
        this.commonFunction = commonFunction;
        this.cookie = cookie;
        this.http = http;
        this.activatedRoute = activatedRoute;
        this.matSnackBar = matSnackBar;
        this.deviceService = deviceService;
        this.shareDetails = {
          baseUrl: _environments_environment__WEBPACK_IMPORTED_MODULE_12__["environment"].doctorSignUpBaseUrl,
          userId: ""
        }; // Lib list

        this.allDocData = [];
        this.docData_count = 0;
        this.allUserData_skip = ["_id", "report_file_type", "tech_id", "tech_email", "batch_name", "report_type", "status", "file_basepath", "file_bucketname", "file_name", "file_original_name", "file_type", "converted_image", "images", "patient_details", "patient_name_search", "report_life_circle", "note", "additional_potential_health_risks", "cpt_codes", "created_at"];
        this.editUrl = "admin/biller-management/edit";
        this.libdata = {
          basecondition: "",
          updateendpoint: 'status-update-doctor',
          updateendpointmany: 'status-update-doctor',
          custombuttons: [{
            label: "View Report",
            route: "doctor/view-patient-record/",
            type: 'internallink',
            param: ['_id']
          }, {
            label: "Tech Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-tech-details',
            datafields: ['first name', 'last name', 'email', 'phone', 'address', 'city', 'state', 'zip'],
            param: 'id',
            headermessage: 'Tech Information'
          }, {
            label: "View Codes",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-codes-details',
            datafields: ['Additional Potential Health Risks', 'CPT Codes', 'ICD Codes'],
            param: 'id',
            headermessage: 'Associated Codes'
          }, {
            label: "Doctor Office Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-doctor-office-details',
            datafields: ['center name', 'first name', 'last name', 'email', 'phone', 'address', 'city', 'state', 'zip'],
            param: 'id',
            headermessage: 'Doctor Office Info'
          }, {
            label: "Parent Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-parent-details',
            datafields: ['Parent Name', 'Contact Person', 'email', 'phone', 'address', 'city', 'state', 'zip'],
            cond: 'parent_check_flag',
            condval: 1,
            param: 'id',
            headermessage: 'Parent Information'
          }, {
            label: "Download Report",
            link: _environments_environment__WEBPACK_IMPORTED_MODULE_12__["environment"].s3bucket + "reports",
            type: 'externallink',
            paramtype: 'angular',
            param: ['download_file_name']
          }, {
            label: "Sign",
            type: 'action',
            datatype: 'api',
            endpoint: 'status-doctor-signed',
            otherparam: ["patient_name"],
            cond: 'status',
            condval: 11,
            param: 'id',
            headermessage: 'Status Update'
          }, {
            label: "View Jobticket",
            route: "doctor/report-jobtickets/",
            type: 'internallink',
            param: ['_id'],
            cond: 'status',
            condval: 13
          }],
          hideeditbutton: true,
          hidedeletebutton: true,
          hidedeletemany: true,
          hidestatustogglebutton: true,
          hideviewbutton: true,
          tableheaders: ["patient_name", "status_text", "created_at_datetime", "cpt_addl", "general_details"]
        };
        this.allUserData_modify_header = {
          "general_details": "Related Info",
          "patient_name": "Patient Name",
          "status_text": "Status",
          "created_at_datetime": "Report Added",
          "cpt_addl": "CPT/ Addl Hrisk C"
        };
        this.UpdateEndpoint = "addorupdatedata";
        this.deleteEndpoint = "deletesingledata";
        this.apiUrl = _environments_environment__WEBPACK_IMPORTED_MODULE_12__["environment"].apiBaseUrl1;
        this.tableName = "data_pece";
        this.datacollection = 'getPatientlistdata';
        this.sortdata = {
          "type": 'desc',
          "field": 'patient_name',
          "options": ['patient_name', 'created_at_datetime']
        };
        this.limitcond = {
          "limit": 10,
          "skip": 0,
          "pagecount": 1
        };
        this.previewModal_detail_skip = ['_id', 'user_type', 'status', 'password', 'created_at'];
        this.status = [{
          val: "Doctor Sign and Send To Biller",
          'name': 'Doctor Sign and Send To Biller'
        }, {
          val: "Downloaded",
          "name": "Report Downloaded"
        }];
        this.cptcodes = [{
          val: "95923",
          'name': '95923'
        }, {
          val: "95943",
          'name': '95943'
        }, {
          val: "95921",
          'name': "95921"
        }, {
          val: "93923",
          'name': "93923"
        }, {
          val: "93922",
          'name': "93922"
        }];
        this.parent_type = [{
          val: "admin",
          'name': 'Admin'
        }, {
          val: "diagnostic_admin",
          'name': 'Diagnostic Admin'
        }, {
          val: "distributors",
          'name': 'Distributor'
        }, {
          val: "doctor_group",
          'name': 'Doctor Group'
        }];
        this.report_type = [{
          val: "RM-3A",
          'name': 'RM-3A'
        }, {
          val: "TM FLOW V3",
          'name': 'TM FLOW V3'
        }, {
          val: "TM FLOW V4",
          'name': 'TM FLOW V4'
        }, {
          val: "CMAT with BP Cuffs",
          'name': "CMAT with BP Cuffs"
        }];
        this.SearchingEndpoint = "datalist";
        this.authval = [];
        this.docofficeval = [];
        this.techval = [];
        this.parentnameval = [];
        this.doctorcity = [];
        this.doctorstate = [];
        this.patientcity = [];
        this.patientstate = [];
        this.SearchingSourceName = "data_biller_list";
        this.search_settings = {
          selectsearch: [{
            label: 'Search By Report Type',
            field: 'report_file_type',
            values: this.report_type
          }, {
            label: "Search By Tech",
            field: 'tech_name_search',
            values: this.techval
          }, {
            label: "Search By Doctor Office",
            field: 'doctor_ofiice_name_search',
            values: this.docofficeval
          }, {
            label: "Search By Patient City",
            field: 'patient_state_search',
            values: this.patientcity
          }, {
            label: "Search By Patient State",
            field: 'patient_city_search',
            values: this.patientstate
          }],
          datesearch: [{
            startdatelabel: "Start Date",
            enddatelabel: "End Date",
            submit: "Search",
            field: "created_at_datetime"
          }],
          textsearch: [{
            label: "Search By Patient Name",
            field: 'patient_name_search'
          }],
          search: [{
            label: 'Search By CPT Codes',
            field: 'cpt_codes_search',
            values: this.cptcodes
          }]
        }; // lib list end

        this.authData = {};
        this.allResolveData = {};
        this.htmlText = {
          buttonText: "Add One",
          headerText: "Reports Processed",
          billerData: [],
          signFlag: true
        };
        this.searchJson = {
          doctorName: "",
          patientName: "",
          status: "",
          dateRange: ""
        };
        this.viewstatus = false;
        this.btnName = 'view more';
        this.otherData = {
          all_details: {
            user_type: ""
          }
        };
        this.allData = cookie.getAll(); // this.cookie.delete('user_details');

        this.authData = JSON.parse(this.allData.user_details);
        console.log("Cookie", this.allData);

        if (typeof this.allData.doctor_signature == 'undefined' && typeof this.authData.doctor_signature != 'undefined') {
          this.cookie.set('doctor_signature', this.authData.doctor_signature);
        }

        this.authData["jwtToken"] = cookie.get('jwtToken');
        this.jwtToken = this.authData.jwtToken;
        console.log("authData", this.authData);
        this.authData.parent_type = this.authData.parent_type.toLowerCase();
        this.libdata.basecondition = {
          status: {
            "$gt": 10
          },
          doctor_id: this.authData._id
        };

        if (this.authData.parent_type != "admin") {
          this.status[0].val = "Doctor Signed";
          this.status[0].name = "Doctor Signed";
          this.status.splice(1, 1);
        }

        if (this.authData.status_text == "Doctor Signed") {
          this.status[0].val = "Send to Biller";
          this.status[0].name = "Doctor Signed";
        }

        if (typeof this.authData.diagnostic_admin_id != 'undefined') {
          this.htmlText.signFlag = false;
          this.data = {
            _id_object: this.authData.diagnostic_admin_id
          };
          this.header = {
            name: "Diagnostic Admin Name"
          };
        }

        if (typeof this.authData.distributor_id != 'undefined') {
          this.htmlText.signFlag = false;
          this.data = {
            _id_object: this.authData.distributor_id
          };
          this.header = {
            name: "Distributor Name"
          };
        }

        if (typeof this.authData.doctorgroup_id != 'undefined') {
          this.htmlText.signFlag = false;
          this.data = {
            _id_object: this.authData.doctorgroup_id
          };
          this.header = {
            name: "Doctor Group Name"
          };
        }

        this.activatedRoute.data.forEach(function (resolveData) {
          _this185.allResolveData.dashboardData = resolveData.doctordata.data;

          _this185.viewReportProcessData(_this185.htmlText.headerText);
        });
      }

      _createClass(DoctorDashboardComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this186 = this;

          var data = {
            "source": "patient_data_desc_patient_name",
            "condition": {
              status: {
                "$gt": 10
              },
              doctor_id_object: this.authData._id
            },
            "token": this.authData.jwtToken
          };
          this.http.httpViaPost("datalist", data).subscribe(function (response) {
            var start = false;
            var count = 0;

            for (var i in response.res) {
              if (response.res[i].doc_name_search != "") {
                for (var j in _this186.authval) {
                  if (response.res[i].doc_name == _this186.authval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this186.authval.push({
                    name: response.res[i].doc_name,
                    val: response.res[i].doc_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].tech_name_search != "") {
                for (var j in _this186.techval) {
                  if (response.res[i].tech_namesearch == _this186.techval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this186.techval.push({
                    name: response.res[i].tech_namesearch,
                    val: response.res[i].tech_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].parent_name_search != "") {
                for (var j in _this186.parentnameval) {
                  if (response.res[i].parent_namesearch == _this186.parentnameval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this186.parentnameval.push({
                    name: response.res[i].parent_namesearch,
                    val: response.res[i].parent_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].doctor_state_search != "") {
                for (var j in _this186.doctorstate) {
                  if (response.res[i].doctor_state == _this186.doctorstate[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this186.doctorstate.push({
                    name: response.res[i].doctor_state,
                    val: response.res[i].doctor_state_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].doctor_city_search != "") {
                for (var j in _this186.doctorcity) {
                  if (response.res[i].doctor_city == _this186.doctorcity[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this186.doctorcity.push({
                    name: response.res[i].doctor_city,
                    val: response.res[i].doctor_city_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].patient_city_search != "") {
                for (var j in _this186.patientcity) {
                  if (response.res[i].patient_city == _this186.patientcity[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this186.patientcity.push({
                    name: response.res[i].patient_city,
                    val: response.res[i].patient_city_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].patient_state_search != "") {
                for (var j in _this186.patientstate) {
                  if (response.res[i].patient_state == _this186.patientstate[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this186.patientstate.push({
                    name: response.res[i].patient_state,
                    val: response.res[i].patient_state_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].doctor_ofiice_name_search != "") {
                for (var j in _this186.docofficeval) {
                  if (response.res[i].doctor_ofiice_namesearch == _this186.docofficeval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this186.docofficeval.push({
                    name: response.res[i].doctor_ofiice_namesearch,
                    val: response.res[i].doctor_ofiice_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }
          }, function (error) {
            console.log('Oooops!');
          });
        }
      }, {
        key: "openDialog",
        value: function openDialog() {
          var dialogRef = this.dialog.open(_common_upload_dialog_box_upload_dialog_box_component__WEBPACK_IMPORTED_MODULE_3__["UploadDialogBoxComponent"], {
            width: '1000px'
          });
          dialogRef.afterClosed().subscribe(function (result) {});
        }
      }, {
        key: "viewReportProcessData",
        value: function viewReportProcessData() {
          var _this187 = this;

          var flag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
          this.htmlText.headerText = flag;
          this.allDocData = [];
          this.docData_count = 0; // lib list

          var endpoint = 'getPatientlistdata';
          var endpointc = 'getPatientlistdata-count';
          var data = {
            "condition": {
              "limit": 10,
              "skip": 0
            },
            sort: {
              "type": 'desc',
              "field": 'patient_name'
            },
            doctor_id: this.authData._id
          };

          switch (flag) {
            case 'Reports Processed':
              data.status = {
                "$in": [11, 12, 13, 14, 15]
              };
              break;

            case 'Reports Pending Signature':
              data.doctor_signature = {
                $exists: false
              };
              break;

            case 'Reports Asked for Review':
              data.job_tickets_details = {
                $exists: true
              };
              break;

            case 'Reports Sent to Biller':
              data.status = 15;
              break;

            case 'Reports Downloaded by Biller':
              data.status = 16;
              break;

            default:
              break;
          }

          console.log(data);
          this.http.httpViaPost(endpointc, data).subscribe(function (res) {
            _this187.docData_count = res.count;
          }, function (error) {
            console.log('Oooops!');
          });
          this.http.httpViaPost(endpoint, data).subscribe(function (res) {
            _this187.allDocData = res.results.res;
          }, function (error) {
            console.log('Oooops!');
          });
        }
      }, {
        key: "openModal",
        value: function openModal(data) {
          var _this188 = this;

          this.dialogRef = this.dialog.open(_common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_10__["DialogBoxComponent"], data);
          this.dialogRef.afterClosed().subscribe(function (result) {
            switch (result) {
              case "Ok":
                _this188.dialogRef.close();

                break;
            }
          });
        }
      }, {
        key: "viewMore",
        value: function viewMore() {
          this.viewstatus = !this.viewstatus;
          if (this.viewstatus) this.btnName = "view less";else this.btnName = "view more";
        }
      }]);

      return DoctorDashboardComponent;
    }();

    DoctorDashboardComponent.ctorParameters = function () {
      return [{
        type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MatDialog"]
      }, {
        type: _class_common_common_function__WEBPACK_IMPORTED_MODULE_4__["CommonFunction"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_5__["CookieService"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_6__["HttpServiceService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_7__["ActivatedRoute"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_9__["MatSnackBar"]
      }, {
        type: ngx_device_detector__WEBPACK_IMPORTED_MODULE_8__["DeviceDetectorService"]
      }];
    };

    DoctorDashboardComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-doctor-dashboard',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./doctor-dashboard.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor/doctor-dashboard/doctor-dashboard.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./doctor-dashboard.component.css */
      "./src/app/components/doctor/doctor-dashboard/doctor-dashboard.component.css"))["default"]]
    })], DoctorDashboardComponent);
    /***/
  },

  /***/
  "./src/app/components/doctor/doctor-dashboard/patient-report-view/additional-recommemded-diagnostic-tests/additional-recommemded-diagnostic-tests.component.css":
  /*!**********************************************************************************************************************************************************************!*\
    !*** ./src/app/components/doctor/doctor-dashboard/patient-report-view/additional-recommemded-diagnostic-tests/additional-recommemded-diagnostic-tests.component.css ***!
    \**********************************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsDoctorDoctorDashboardPatientReportViewAdditionalRecommemdedDiagnosticTestsAdditionalRecommemdedDiagnosticTestsComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = ".encounter_wrapper { width: 100%; margin: 20px auto; display: block; }\n.header { text-align: center; margin: 0; font-size: 30px; font-family: \"AvenirBlack\"; }\n.encounter_wrapper table { width: 100%;}\n.encounter_wrapper table { border-collapse: collapse; }\n.encounter_wrapper table, .encounter_wrapper  th, .encounter_wrapper  td { border: 1px solid #c7c7c7; padding: 5px 8px; font-family: 'AvenirMedium';}\n.encounter_wrapper table td tr td{ border:none; padding: 2px; vertical-align: top; font-family: 'AvenirMedium'; }\n.encounter_wrapper table td tr td b{ font-size: 16px; }\n.second_table .widther { width: 50%; }\n.second_table .spacer_o { margin-right: 15px; }\n.second_table .header { text-align: center; }\n.additionalnotes { width: 100%; height: 120px; resize: none; padding: 10px; box-sizing: border-box; }\n.additionalnotes3 { height: 238px; }\n.red_para { color: #bd1818; font-size: 20px; font-weight: normal; text-align: center; font-family: \"AvenirMedium\"; line-height: 22px; margin: 10px; }\ntable input[type=\"text\"] {\n  height: 40px;\n  border: none;\n  border-bottom: 1.4px solid #000;\n  padding: 0 10px;\n  background: #f1f1f1;\n  width: auto;\n  box-sizing: border-box;\n}\ntable input[type=\"text\"]:focus, textarea:focus{ outline: none;}\n.suggest { margin-top: 0; font-family: \"AvenirMedium\"; margin-bottom: 6px; color: #096509; }\n.limbs{ margin: 0; font-size: 22px; color: #000; text-align: center; font-family: \"AvenirMedium\"; border-top: 1px solid #b5b5b5; margin-top: 15px; text-transform: uppercase;\n  margin-bottom: -10px;\n}\ninput[type=\"checkbox\"]:checked {\n/* box-shadow: 0 0 0 3px hotpink; */\nposition: relative;\n}\ninput[type=\"checkbox\"]:checked::before{\ncontent: 'x';\n/* content: '\\2713'; checkmark */\nposition: absolute;\nbackground: #fff;\nwidth: 100%;\nheight: auto;\ncolor: #ff0707;\nleft: 0px;\ndisplay: flex;\njustify-content: center;\nborder: .5px solid #807f7f;\nline-height: 12px;\nbox-sizing: border-box;\ntop: 0;\nborder-radius: 2px;\nfont-weight: bold;\nfont-size: 16px;\npadding: 1px 7px 2px;\n}\n.signaturefont { font-family: \"AmandaSignature\"; font-size: 30px; line-height: 58px; height: 40px; padding: 10px 25px; box-sizing: border-box; background: #fff;\nborder-bottom: 1px solid #000; color: rgb(5, 5, 253); }\n.reportCheck label{ width: 33%; display: inline-block; }\n.content{ box-shadow: 0 2px 1px -1px rgba(0,0,0,.2), 0 1px 5px 0 rgba(0,0,0,.14), 0 1px 3px 0 rgba(0,0,0,.12);\ndisplay: block; padding: 16px; position: relative; background: #dce5ea; margin-bottom: 16px; box-sizing: border-box; border: 1px solid #bac4ca;}\n.content:last-child{ margin: 0;}\n.content table{ width: 100%; border-collapse: collapse;}\n.content table th, .content table td{ text-align: left; width: auto; padding: 5px; font-family: 'AvenirMedium'; font-size: 16px; color: #000; }\n.content table th{ font-family: 'AvenirBlack'; margin-right: 16px; color: #fff; background: linear-gradient(-45deg, #03a9f5, #076eff); width: 35%;\npadding: 10px; box-sizing: border-box; vertical-align: top;}\n.content table td { width: 65%; padding-left: 20px;}\n@media screen and (max-width:1440px){\n.reportCheck label { width: 50%;}\n}\n@media screen and (max-width:1199px){\n.reportCheck label { width: 24%;}\n}\n@media screen and (max-width:900px){\n.reportCheck label { width: 50%;}\n}\n@media screen and (max-width: 600px){\n.reportCheck label { width: 100%; }\n}\n@media screen and (max-width: 700px) {\n  \n   td label span{ display: none;} \n   input[type=\"text\"] { width: 50%; }\n   .tableone caption { font-size: 1.3em; }    \n   .tableone thead {\n       border: none;\n       clip: rect(0 0 0 0);\n       height: 1px;\n       margin: -1px;\n       overflow: hidden;\n       padding: 0;\n       position: absolute;\n       width: 1px;\n     }\n     \n    .tableone tr {\n       border-bottom: 3px solid #ddd;\n       display: block;\n       margin-bottom: .625em;\n     }\n     \n  .tableone td {\n       border-bottom: 1px solid #ddd;\n       display: block;\n       font-size: .8em;\n       text-align: right;\n     }\n     \n.tableone td::before {\n       /*\n       * aria-label has no advantage, it won't be read inside a table\n       content: attr(aria-label);\n       */\n       content: attr(data-label);\n       float: left;\n       font-weight: bold;\n       text-transform: uppercase;\n     }\n     \n .tableone td:last-child {\n   border-bottom: 0;\n }\n .header {font-size: 20px;}\n }\n@media screen and (max-width: 420px) {\n \n   .top_header { font-size: 18px; line-height: inherit; margin: 0;\n     padding-bottom: 0; border-bottom: none; }\n   .table2_header { font-size: 16px; }\n   .table_two tr td { width: 50%; }\n   .line_link { margin: 10px 0 0; }\n }\n/*# sourceMappingURL=data:application/json;base64, */";
    /***/
  },

  /***/
  "./src/app/components/doctor/doctor-dashboard/patient-report-view/additional-recommemded-diagnostic-tests/additional-recommemded-diagnostic-tests.component.ts":
  /*!*********************************************************************************************************************************************************************!*\
    !*** ./src/app/components/doctor/doctor-dashboard/patient-report-view/additional-recommemded-diagnostic-tests/additional-recommemded-diagnostic-tests.component.ts ***!
    \*********************************************************************************************************************************************************************/

  /*! exports provided: AdditionalRecommemdedDiagnosticTestsComponent */

  /***/
  function srcAppComponentsDoctorDoctorDashboardPatientReportViewAdditionalRecommemdedDiagnosticTestsAdditionalRecommemdedDiagnosticTestsComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AdditionalRecommemdedDiagnosticTestsComponent", function () {
      return AdditionalRecommemdedDiagnosticTestsComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");

    var AdditionalRecommemdedDiagnosticTestsComponent = /*#__PURE__*/function () {
      function AdditionalRecommemdedDiagnosticTestsComponent(activatedRoute, httpService, cookie, fb, router, datePipe) {
        _classCallCheck(this, AdditionalRecommemdedDiagnosticTestsComponent);

        this.activatedRoute = activatedRoute;
        this.httpService = httpService;
        this.cookie = cookie;
        this.fb = fb;
        this.router = router;
        this.datePipe = datePipe;
        this.htmlText = {};
        this.cookiesData = this.cookie.getAll();
        this.cookiesData.user_details = JSON.parse(this.cookiesData.user_details);
      }

      _createClass(AdditionalRecommemdedDiagnosticTestsComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          this.orginalReportDetails.patient_details[0].insurance_details = {};
          this.orginalReportDetails.patient_details[0].insurance_details.insurancename = '';

          switch (this.orginalReportDetails.patient_details[0].gender) {
            case 'male':
              this.orginalReportDetails.patient_details[0].gender_male_flag = true;
              this.orginalReportDetails.patient_details[0].gender_female_flag = false;
              break;

            case 'female':
              this.orginalReportDetails.patient_details[0].gender_male_flag = false;
              this.orginalReportDetails.patient_details[0].gender_female_flag = true;
              break;
          } // console.log("additional_potential_health_risks: ", this.orginalReportDetails.additional_potential_health_risks);
          // console.log("r00_description: ", this.orginalReportDetails.r00_description);
          // console.log("icd_codes: ", this.orginalReportDetails.icd_codes);
          // console.log("cpt_codes: ", this.orginalReportDetails.cpt_codes);


          if (this.orginalReportDetails.patient_details[0].doctor_details.length == 0) {
            this.orginalReportDetails.patient_details[0].doctor_details[0] = {};
            this.orginalReportDetails.patient_details[0].doctor_details[0].firstname = 'Not';
            this.orginalReportDetails.patient_details[0].doctor_details[0].lastname = 'Found';
          } // this.getInsuranceData('');

        }
      }, {
        key: "getInsuranceData",
        value: function getInsuranceData(id) {
          var _this189 = this;

          var data = {
            "source": "data_pece",
            "condition": {
              "_id_object": this.orginalReportDetails.patient_details[0].insurance_id
            },
            "token": this.cookiesData.jwtToken
          };
          this.httpService.httpViaPost('datalist', data).subscribe(function (response) {
            if (response.status == true) {
              _this189.orginalReportDetails.patient_details[0].insurance_details = response.res[0];
            } else {
              _this189.orginalReportDetails.patient_details[0].insurance_details = {};
            }
          });
        }
      }, {
        key: "patientDetails",
        set: function set(patientDetailsData) {
          this.reportDetails = patientDetailsData;
        }
      }, {
        key: "orginalData",
        set: function set(orginalData) {
          this.orginalReportDetails = orginalData;
        }
      }]);

      return AdditionalRecommemdedDiagnosticTestsComponent;
    }();

    AdditionalRecommemdedDiagnosticTestsComponent.ctorParameters = function () {
      return [{
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_5__["HttpServiceService"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_4__["CookieService"]
      }, {
        type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"]
      }, {
        type: _angular_common__WEBPACK_IMPORTED_MODULE_6__["DatePipe"]
      }];
    };

    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], AdditionalRecommemdedDiagnosticTestsComponent.prototype, "patientDetails", null);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], AdditionalRecommemdedDiagnosticTestsComponent.prototype, "orginalData", null);
    AdditionalRecommemdedDiagnosticTestsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-additional-recommemded-diagnostic-tests',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./additional-recommemded-diagnostic-tests.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor/doctor-dashboard/patient-report-view/additional-recommemded-diagnostic-tests/additional-recommemded-diagnostic-tests.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./additional-recommemded-diagnostic-tests.component.css */
      "./src/app/components/doctor/doctor-dashboard/patient-report-view/additional-recommemded-diagnostic-tests/additional-recommemded-diagnostic-tests.component.css"))["default"]]
    })], AdditionalRecommemdedDiagnosticTestsComponent);
    /***/
  },

  /***/
  "./src/app/components/doctor/doctor-dashboard/patient-report-view/health-risk-analysis/health-risk-analysis.component.css":
  /*!********************************************************************************************************************************!*\
    !*** ./src/app/components/doctor/doctor-dashboard/patient-report-view/health-risk-analysis/health-risk-analysis.component.css ***!
    \********************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsDoctorDoctorDashboardPatientReportViewHealthRiskAnalysisHealthRiskAnalysisComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = ".health_risk_report {\n  width: 100%; margin: 26px auto; display: block; background: #f3f3f3; box-sizing: border-box;\n}\n\n.health_risk_report table { \n  width: 100%; border-collapse: collapse; \n}\n\n.health_risk_report th { height: 50px; }\n\n.health_risk_report table, th, td {\n   padding: 0 10px; border: 1px solid #adadad; \n}\n\n.health_risk_report table tr:nth-child(1) th { border: none; }\n\n.health_risk_report table input[type=\"text\"], input[type=\"date\"] {\n\n  height: 50px; border: none; padding: 0 10px; background: #e8e8e8;\n  width: 55px; font-family: 'AvenirMedium';\n\n}\n\n.health_risk_report .patientName{ width: 52%!important}\n\n.health_risk_report table .order_input {\n  width: 300px!important; box-sizing: border-box; border-bottom: 1.4px solid #000!important;\n}\n\n.health_risk_report table .patient_name{ width: 160px!important;}\n\n.area_header { width: 100%; }\n\n.area_content { width: 100%; height: 150px; box-sizing: border-box; resize: none; padding: 10px; }\n\n.gender_label { display: flex; }\n\n.health_risk_report .orderInput {\n   display: inline-flex; justify-content: center; align-items: center; width: 100%;\n}\n\n.ordering_phy { font-weight: 500; display: inline-block; margin-right: 10px;}\n\n.rm_phy { text-align: center; font-weight: 500; }\n\n.fifty_width { width: 50%; }\n\n.health_risk_report table input:focus, textarea:focus { outline: none; }\n\n\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kb2N0b3IvZG9jdG9yLWRhc2hib2FyZC9wYXRpZW50LXJlcG9ydC12aWV3L2hlYWx0aC1yaXNrLWFuYWx5c2lzL2hlYWx0aC1yaXNrLWFuYWx5c2lzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXLEVBQUUsaUJBQWlCLEVBQUUsY0FBYyxFQUFFLG1CQUFtQixFQUFFLHNCQUFzQjtBQUM3Rjs7QUFFQTtFQUNFLFdBQVcsRUFBRSx5QkFBeUI7QUFDeEM7O0FBRUEseUJBQXlCLFlBQVksRUFBRTs7QUFDdkM7R0FDRyxlQUFlLEVBQUUseUJBQXlCO0FBQzdDOztBQUNBLCtDQUErQyxZQUFZLEVBQUU7O0FBRTdEOztFQUVFLFlBQVksRUFBRSxZQUFZLEVBQUUsZUFBZSxFQUFFLG1CQUFtQjtFQUNoRSxXQUFXLEVBQUUsMkJBQTJCOztBQUUxQzs7QUFFQSxrQ0FBa0Msb0JBQW9COztBQUN0RDtFQUNFLHNCQUFzQixFQUFFLHNCQUFzQixFQUFFLHlDQUF5QztBQUMzRjs7QUFDQSx5Q0FBeUMsc0JBQXNCLENBQUM7O0FBQ2hFLGVBQWUsV0FBVyxFQUFFOztBQUM1QixnQkFBZ0IsV0FBVyxFQUFFLGFBQWEsRUFBRSxzQkFBc0IsRUFBRSxZQUFZLEVBQUUsYUFBYSxFQUFFOztBQUNqRyxnQkFBZ0IsYUFBYSxFQUFFOztBQUMvQjtHQUNHLG9CQUFvQixFQUFFLHVCQUF1QixFQUFFLG1CQUFtQixFQUFFLFdBQVc7QUFDbEY7O0FBQ0EsZ0JBQWdCLGdCQUFnQixFQUFFLHFCQUFxQixFQUFFLGtCQUFrQixDQUFDOztBQUM1RSxVQUFVLGtCQUFrQixFQUFFLGdCQUFnQixFQUFFOztBQUNoRCxlQUFlLFVBQVUsRUFBRTs7QUFDM0Isd0RBQXdELGFBQWEsRUFBRSIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZG9jdG9yL2RvY3Rvci1kYXNoYm9hcmQvcGF0aWVudC1yZXBvcnQtdmlldy9oZWFsdGgtcmlzay1hbmFseXNpcy9oZWFsdGgtcmlzay1hbmFseXNpcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmhlYWx0aF9yaXNrX3JlcG9ydCB7XG4gIHdpZHRoOiAxMDAlOyBtYXJnaW46IDI2cHggYXV0bzsgZGlzcGxheTogYmxvY2s7IGJhY2tncm91bmQ6ICNmM2YzZjM7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbi5oZWFsdGhfcmlza19yZXBvcnQgdGFibGUgeyBcbiAgd2lkdGg6IDEwMCU7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IFxufVxuXG4uaGVhbHRoX3Jpc2tfcmVwb3J0IHRoIHsgaGVpZ2h0OiA1MHB4OyB9XG4uaGVhbHRoX3Jpc2tfcmVwb3J0IHRhYmxlLCB0aCwgdGQge1xuICAgcGFkZGluZzogMCAxMHB4OyBib3JkZXI6IDFweCBzb2xpZCAjYWRhZGFkOyBcbn1cbi5oZWFsdGhfcmlza19yZXBvcnQgdGFibGUgdHI6bnRoLWNoaWxkKDEpIHRoIHsgYm9yZGVyOiBub25lOyB9XG5cbi5oZWFsdGhfcmlza19yZXBvcnQgdGFibGUgaW5wdXRbdHlwZT1cInRleHRcIl0sIGlucHV0W3R5cGU9XCJkYXRlXCJdIHtcblxuICBoZWlnaHQ6IDUwcHg7IGJvcmRlcjogbm9uZTsgcGFkZGluZzogMCAxMHB4OyBiYWNrZ3JvdW5kOiAjZThlOGU4O1xuICB3aWR0aDogNTVweDsgZm9udC1mYW1pbHk6ICdBdmVuaXJNZWRpdW0nO1xuXG59XG5cbi5oZWFsdGhfcmlza19yZXBvcnQgLnBhdGllbnROYW1leyB3aWR0aDogNTIlIWltcG9ydGFudH1cbi5oZWFsdGhfcmlza19yZXBvcnQgdGFibGUgLm9yZGVyX2lucHV0IHtcbiAgd2lkdGg6IDMwMHB4IWltcG9ydGFudDsgYm94LXNpemluZzogYm9yZGVyLWJveDsgYm9yZGVyLWJvdHRvbTogMS40cHggc29saWQgIzAwMCFpbXBvcnRhbnQ7XG59XG4uaGVhbHRoX3Jpc2tfcmVwb3J0IHRhYmxlIC5wYXRpZW50X25hbWV7IHdpZHRoOiAxNjBweCFpbXBvcnRhbnQ7fVxuLmFyZWFfaGVhZGVyIHsgd2lkdGg6IDEwMCU7IH1cbi5hcmVhX2NvbnRlbnQgeyB3aWR0aDogMTAwJTsgaGVpZ2h0OiAxNTBweDsgYm94LXNpemluZzogYm9yZGVyLWJveDsgcmVzaXplOiBub25lOyBwYWRkaW5nOiAxMHB4OyB9XG4uZ2VuZGVyX2xhYmVsIHsgZGlzcGxheTogZmxleDsgfVxuLmhlYWx0aF9yaXNrX3JlcG9ydCAub3JkZXJJbnB1dCB7XG4gICBkaXNwbGF5OiBpbmxpbmUtZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHdpZHRoOiAxMDAlO1xufVxuLm9yZGVyaW5nX3BoeSB7IGZvbnQtd2VpZ2h0OiA1MDA7IGRpc3BsYXk6IGlubGluZS1ibG9jazsgbWFyZ2luLXJpZ2h0OiAxMHB4O31cbi5ybV9waHkgeyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtd2VpZ2h0OiA1MDA7IH1cbi5maWZ0eV93aWR0aCB7IHdpZHRoOiA1MCU7IH1cbi5oZWFsdGhfcmlza19yZXBvcnQgdGFibGUgaW5wdXQ6Zm9jdXMsIHRleHRhcmVhOmZvY3VzIHsgb3V0bGluZTogbm9uZTsgfVxuXG5cbiJdfQ== */";
    /***/
  },

  /***/
  "./src/app/components/doctor/doctor-dashboard/patient-report-view/health-risk-analysis/health-risk-analysis.component.ts":
  /*!*******************************************************************************************************************************!*\
    !*** ./src/app/components/doctor/doctor-dashboard/patient-report-view/health-risk-analysis/health-risk-analysis.component.ts ***!
    \*******************************************************************************************************************************/

  /*! exports provided: MY_FORMATS, HealthRiskAnalysisComponent */

  /***/
  function srcAppComponentsDoctorDoctorDashboardPatientReportViewHealthRiskAnalysisHealthRiskAnalysisComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "MY_FORMATS", function () {
      return MY_FORMATS;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "HealthRiskAnalysisComponent", function () {
      return HealthRiskAnalysisComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var _angular_material_moment_adapter__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/material-moment-adapter */
    "./node_modules/@angular/material-moment-adapter/esm2015/material-moment-adapter.js");
    /* harmony import */


    var _angular_material_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! @angular/material/core */
    "./node_modules/@angular/material/esm2015/core.js");
    /* harmony import */


    var moment__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! moment */
    "./node_modules/moment/moment.js");
    /* harmony import */


    var moment__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_9__); // Depending on whether rollup is used, moment needs to be imported differently.
    // Since Moment.js doesn't have a default export, we normally need to import using the `* as`
    // syntax. However, rollup creates a synthetic default module and we thus need to import it using
    // the `default as` syntax.
    // tslint:disable-next-line:no-duplicate-imports


    var moment = moment__WEBPACK_IMPORTED_MODULE_9___default.a || moment__WEBPACK_IMPORTED_MODULE_9__;
    var MY_FORMATS = {
      parse: {
        dateInput: 'LL'
      },
      display: {
        dateInput: 'LL',
        monthYearLabel: 'MMM YYYY',
        dateA11yLabel: 'LL',
        monthYearA11yLabel: 'MMMM YYYY'
      }
    };

    var HealthRiskAnalysisComponent = /*#__PURE__*/function () {
      function HealthRiskAnalysisComponent(activatedRoute, httpService, cookie, fb, router, datePipe) {
        _classCallCheck(this, HealthRiskAnalysisComponent);

        this.activatedRoute = activatedRoute;
        this.httpService = httpService;
        this.cookie = cookie;
        this.fb = fb;
        this.router = router;
        this.datePipe = datePipe;
        this.htmlText = {};
        this.cookiesData = this.cookie.getAll();
        this.cookiesData.user_details = JSON.parse(this.cookiesData.user_details);
      }

      _createClass(HealthRiskAnalysisComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }, {
        key: "patientDetails",
        set: function set(patientDetailsData) {
          this.reportDetails = patientDetailsData;
        }
      }]);

      return HealthRiskAnalysisComponent;
    }();

    HealthRiskAnalysisComponent.ctorParameters = function () {
      return [{
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_5__["HttpServiceService"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_4__["CookieService"]
      }, {
        type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"]
      }, {
        type: _angular_common__WEBPACK_IMPORTED_MODULE_6__["DatePipe"]
      }];
    };

    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], HealthRiskAnalysisComponent.prototype, "patientDetails", null);
    HealthRiskAnalysisComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-health-risk-analysis',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./health-risk-analysis.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor/doctor-dashboard/patient-report-view/health-risk-analysis/health-risk-analysis.component.html"))["default"],
      providers: [// `MomentDateAdapter` and `MAT_MOMENT_DATE_FORMATS` can be automatically provided by importing
      // `MatMomentDateModule` in your applications root module. We provide it at the component level
      // here, due to limitations of our example generation script.
      {
        provide: _angular_material_core__WEBPACK_IMPORTED_MODULE_8__["DateAdapter"],
        useClass: _angular_material_moment_adapter__WEBPACK_IMPORTED_MODULE_7__["MomentDateAdapter"],
        deps: [_angular_material_core__WEBPACK_IMPORTED_MODULE_8__["MAT_DATE_LOCALE"]]
      }, {
        provide: _angular_material_core__WEBPACK_IMPORTED_MODULE_8__["MAT_DATE_FORMATS"],
        useValue: _angular_material_moment_adapter__WEBPACK_IMPORTED_MODULE_7__["MAT_MOMENT_DATE_FORMATS"]
      }],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./health-risk-analysis.component.css */
      "./src/app/components/doctor/doctor-dashboard/patient-report-view/health-risk-analysis/health-risk-analysis.component.css"))["default"]]
    })], HealthRiskAnalysisComponent);
    /***/
  },

  /***/
  "./src/app/components/doctor/doctor-dashboard/patient-report-view/healthrisk-system-encounter/healthrisk-system-encounter.component.css":
  /*!**********************************************************************************************************************************************!*\
    !*** ./src/app/components/doctor/doctor-dashboard/patient-report-view/healthrisk-system-encounter/healthrisk-system-encounter.component.css ***!
    \**********************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsDoctorDoctorDashboardPatientReportViewHealthriskSystemEncounterHealthriskSystemEncounterComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = ".encounter_wrapper {\n    width: 100%;\n    margin: 20px auto;\n    display: block;\n}\n\n.header { text-align: center; margin: 0; font-size: 28px; font-family: \"AvenirMedium\";\n  text-transform: uppercase;\n  color: #ffffff;\n  background: #d20e89;\n  padding: 8px 0;\n}\n\n.encounter_wrapper table { width: 100%;}\n\n.encounter_wrapper table { border-collapse: collapse; }\n\n.encounter_wrapper table, th, td { border: 1px solid #c7c7c7; padding: 5px 8px; font-family: 'AvenirMedium';}\n\n.encounter_wrapper table td tr td{ border:none; padding: 2px; vertical-align: top; font-family: 'AvenirMedium'; }\n\n.encounter_wrapper table td tr td b{ font-size: 16px; }\n\n.second_table .widther { width: 50%; }\n\n.second_table .spacer_o { margin-right: 15px; }\n\n.second_table .header { text-align: center; }\n\n.additionalnotes { width: 100%; height: 120px; resize: none; padding: 10px; box-sizing: border-box; }\n\n.additionalnotes3 { height: 238px; }\n\n.red_para { color: #e40e0e; font-size: 20px; font-weight: normal; text-align: center; font-family: \"AvenirMedium\"; line-height: 22px; margin: 10px; }\n\ntable input[type=\"text\"] {\n    height: 40px;\n    border: none;\n    border-bottom: 1.4px solid #000;\n    padding: 0 10px;\n    background: #f1f1f1;\n    width: auto;\n    box-sizing: border-box;\n}\n\ntable input[type=\"text\"]:focus, textarea:focus{ outline: none;}\n\n.suggest { margin-top: 0; font-family: \"AvenirMedium\"; margin-bottom: 6px; color: #096509; }\n\n.limbs{ margin: 0; font-size: 22px; color: #000; text-align: center; font-family: \"AvenirMedium\"; border-top: 1px solid #b5b5b5; margin-top: 15px; text-transform: uppercase;\n    margin-bottom: -10px;\n }\n\ninput[type=\"checkbox\"]:checked {\n  /* box-shadow: 0 0 0 3px hotpink; */\n  position: relative;\n}\n\ninput[type=\"checkbox\"]:checked::before{\n  content: 'x';\n  /* content: '\\2713'; checkmark */\n  position: absolute;\n  background: #fff;\n  width: 100%;\n  height: auto;\n  color: #ff0707;\n  left: 0px;\n  display: flex;\n  justify-content: center;\n  border: .5px solid #807f7f;\n  line-height: 12px;\n  box-sizing: border-box;\n  top: 0;\n  border-radius: 2px;\n  font-weight: bold;\n  font-size: 16px;\n  padding: 1px 7px 2px;\n}\n\n.signaturefont { font-family: \"AmandaSignature\"; font-size: 30px; line-height: 58px; height: 40px; padding: 10px 25px; box-sizing: border-box; background: #fff;\nborder-bottom: 1px solid #000; color: rgb(5, 5, 253); }\n\n.reportCheck label{ width: 33%; display: inline-block; }\n\n@media screen and (max-width:1440px){\n  .reportCheck label { width: 50%;}\n}\n\n@media screen and (max-width:1199px){\n.reportCheck label { width: 24%;}\n}\n\n@media screen and (max-width:900px){\n  .reportCheck label { width: 50%;}\n}\n\n@media screen and (max-width: 600px){ \n  .header { font-size: 20px; padding: 6px 0; }\n  .encounter_wrapperh table, \n  .encounter_wrapperh table th, \n  .encounter_wrapperh table td { font-size: 12px; }\n  table input[type=\"text\"] { font-size: 12px; }\n  .red_para { font-size: 16px; line-height: inherit; margin: 0; }\n  .encounter_wrapper table td tr td { font-size: 12px; }\n}\n\n@media screen and (max-width: 700px) {\n   \n   td label span{ display: none;}      \n   .tableone thead {\n       border: none;\n       clip: rect(0 0 0 0);\n       height: 1px;\n       margin: -1px;\n       overflow: hidden;\n       padding: 0;\n       position: absolute;\n       width: 1px;\n     }\n     \n     .tableone tr {\n       border-bottom: 1px solid #ddd;\n       display: block;\n       margin-bottom: .625em;\n     }\n     \n     .tableone td {\n       border-bottom: 1px solid #ddd;\n       display: block;\n       font-size: .8em;\n       text-align: right; position: relative;\n     }\n     \n.tableone td::before {\n\n  content: attr(data-label);\n  /* float: left; */\n  font-weight: bold;\n  text-transform: uppercase;\n  position: absolute;\n  left: 8px;\n  top: 46%;\n\n}\n     \n .tableone td:last-child { border-bottom: 0; }\n .tableone  input[type=\"text\"] { width: 50%;}\n .suggest { font-size: 16px; text-align: center; }\n .reportCheck{ text-align: center; display: block; }\n .reportCheck label{ width: auto;}\n .red_para { font-size: 18px; line-height: inherit; margin: 0; }\n }\n\n@media screen and (max-width: 420px) {\n \n   .top_header { font-size: 18px; line-height: inherit; margin: 0; padding-bottom: 0; border-bottom: none; }\n   .table2_header { font-size: 16px; }\n   .table_two tr td { width: 50%; }\n   .line_link { margin: 10px 0 0; }\n }\n\n@media screen and (max-width: 360px) {\n\n .tableone td::before { top: 25%; width: 43%; text-align: left; }\n \n }\n/*# sourceMappingURL=data:application/json;base64, */";
    /***/
  },

  /***/
  "./src/app/components/doctor/doctor-dashboard/patient-report-view/healthrisk-system-encounter/healthrisk-system-encounter.component.ts":
  /*!*********************************************************************************************************************************************!*\
    !*** ./src/app/components/doctor/doctor-dashboard/patient-report-view/healthrisk-system-encounter/healthrisk-system-encounter.component.ts ***!
    \*********************************************************************************************************************************************/

  /*! exports provided: HealthriskSystemEncounterComponent */

  /***/
  function srcAppComponentsDoctorDoctorDashboardPatientReportViewHealthriskSystemEncounterHealthriskSystemEncounterComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "HealthriskSystemEncounterComponent", function () {
      return HealthriskSystemEncounterComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");

    var HealthriskSystemEncounterComponent = /*#__PURE__*/function () {
      function HealthriskSystemEncounterComponent(activatedRoute, httpService, cookie, fb, router, datePipe, matSnackBar) {
        _classCallCheck(this, HealthriskSystemEncounterComponent);

        this.activatedRoute = activatedRoute;
        this.httpService = httpService;
        this.cookie = cookie;
        this.fb = fb;
        this.router = router;
        this.datePipe = datePipe;
        this.matSnackBar = matSnackBar;
        this.R000Text = "R00.0 Tachycardia, unspecified Abnormal Heart Rhythm & Electrical Stability";
        this.htmlText = {
          nav: 'Add Patient',
          header: "Physician Report"
        };
        this.orginalReportDetails = {};
        this.cookiesData = this.cookie.getAll();
        this.cookiesData.user_details = JSON.parse(this.cookiesData.user_details);
      }

      _createClass(HealthriskSystemEncounterComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          this.orginalReportDetails.patient_details[0].insurance_details = {};
          this.orginalReportDetails.patient_details[0].insurance_details.insurancename = '';

          switch (this.orginalReportDetails.patient_details[0].gender) {
            case 'male':
              this.orginalReportDetails.patient_details[0].gender_male_flag = true;
              this.orginalReportDetails.patient_details[0].gender_female_flag = false;
              break;

            case 'female':
              this.orginalReportDetails.patient_details[0].gender_male_flag = false;
              this.orginalReportDetails.patient_details[0].gender_female_flag = true;
              break;
          } // console.log("additional_potential_health_risks: ", this.orginalReportDetails.additional_potential_health_risks);
          // console.log("r00_description: ", this.orginalReportDetails.r00_description);
          // console.log("icd_codes: ", this.orginalReportDetails.icd_codes);
          // console.log("cpt_codes: ", this.orginalReportDetails.cpt_codes);


          if (this.orginalReportDetails.patient_details[0].doctor_details.length == 0) {
            this.orginalReportDetails.patient_details[0].doctor_details[0] = {};
            this.orginalReportDetails.patient_details[0].doctor_details[0].firstname = 'Not';
            this.orginalReportDetails.patient_details[0].doctor_details[0].lastname = 'Found';
          }

          if (typeof this.orginalReportDetails.patient_details[0].insurance_id != 'undefined' && this.orginalReportDetails.patient_details[0].insurance_id != '') {
            this.getInsuranceData('');
          } else {
            this.orginalReportDetails.patient_details[0].insurance_details = {
              insurancename: ''
            };
          }
        }
      }, {
        key: "getInsuranceData",
        value: function getInsuranceData(id) {
          var _this190 = this;

          var data = {
            "source": "data_pece",
            "condition": {
              "_id": this.orginalReportDetails.patient_details[0].insurance_id
            },
            "token": this.cookiesData.jwtToken
          };
          this.httpService.httpViaPost('datalist', data).subscribe(function (response) {
            if (response.status == true) {
              _this190.orginalReportDetails.patient_details[0].insurance_details = response.res[0];
            } else {
              _this190.orginalReportDetails.patient_details[0].insurance_details = {};
            }
          });
        }
      }, {
        key: "checkValue",
        value: function checkValue() {
          var _this191 = this;

          var codeFlag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "icd_codes";
          var value = arguments.length > 1 ? arguments[1] : undefined;
          var fieldName = arguments.length > 2 ? arguments[2] : undefined;
          var postData = {
            "source": "data_pece",
            "condition": {
              "_id": this.orginalReportDetails._id
            },
            "_id": this.orginalReportDetails._id,
            "token": this.cookiesData.jwtToken,
            "field": fieldName,
            "code_type": codeFlag,
            "value": parseInt(value)
          };
          this.httpService.httpViaPost('update-patient-data-codes', postData).subscribe(function (response) {
            if (response.status == true) {
              _this191.matSnackBar.open("Successfully updated.", "Ok", {
                duration: 4000
              });
            } else {
              _this191.matSnackBar.open("An error occord.", "Ok", {
                duration: 4000
              });
            }
          });
        }
      }, {
        key: "patientDetails",
        set: function set(patientDetailsData) {
          this.reportDetails = patientDetailsData;
        }
      }, {
        key: "orginalData",
        set: function set(orginalData) {
          this.orginalReportDetails = orginalData;
        }
      }]);

      return HealthriskSystemEncounterComponent;
    }();

    HealthriskSystemEncounterComponent.ctorParameters = function () {
      return [{
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_5__["HttpServiceService"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_4__["CookieService"]
      }, {
        type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"]
      }, {
        type: _angular_common__WEBPACK_IMPORTED_MODULE_6__["DatePipe"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatSnackBar"]
      }];
    };

    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], HealthriskSystemEncounterComponent.prototype, "patientDetails", null);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], HealthriskSystemEncounterComponent.prototype, "orginalData", null);
    HealthriskSystemEncounterComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-healthrisk-system-encounter',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./healthrisk-system-encounter.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor/doctor-dashboard/patient-report-view/healthrisk-system-encounter/healthrisk-system-encounter.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./healthrisk-system-encounter.component.css */
      "./src/app/components/doctor/doctor-dashboard/patient-report-view/healthrisk-system-encounter/healthrisk-system-encounter.component.css"))["default"]]
    })], HealthriskSystemEncounterComponent);
    /***/
  },

  /***/
  "./src/app/components/doctor/doctor-dashboard/patient-report-view/patient-details/patient-details.component.css":
  /*!**********************************************************************************************************************!*\
    !*** ./src/app/components/doctor/doctor-dashboard/patient-report-view/patient-details/patient-details.component.css ***!
    \**********************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsDoctorDoctorDashboardPatientReportViewPatientDetailsPatientDetailsComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = ".encounter_wrapper {\n    width: 100%;\n    margin: 20px auto;\n    display: block;\n}\n\n.header { text-align: center; margin: 0;\n    font-size: 30px;\n    font-family: \"AvenirBlack\";\n}\n\n.encounter_wrapper table { width: 100%;}\n\n.encounter_wrapper table { border-collapse: collapse; }\n\n.encounter_wrapper table, th, td { border: 1px solid #c7c7c7; padding: 5px 8px; font-family: 'AvenirMedium';}\n\n.encounter_wrapper table td tr td{ border:none; padding: 2px; vertical-align: top; font-family: 'AvenirMedium'; }\n\n.encounter_wrapper table td tr td b{ font-size: 16px; }\n\n.second_table .widther { width: 50%; }\n\n.second_table .spacer_o { margin-right: 15px; }\n\n.second_table .header { text-align: center; }\n\n.additionalnotes { width: 100%; height: 120px; resize: none; padding: 10px; box-sizing: border-box; }\n\n.additionalnotes3 { height: 238px; }\n\n.red_para {  color: #ffffff; font-size: 20px; font-weight: normal; text-align: center; font-family: \"AvenirMedium\";\n  line-height: 22px; margin: 0; background: linear-gradient(45deg, #0ac3a2, #7afbb3);\n  padding: 10px;  text-transform: uppercase;}\n\ntable input[type=\"text\"] {\n    height: 40px; border: none; border-bottom: 1.4px solid #000; padding: 0 10px;\n    background: #f1f1f1; width: auto; box-sizing: border-box; }\n\ntable input[type=\"text\"]:focus, textarea:focus{ outline: none;}\n\n.suggest { margin-top: 0; font-family: \"AvenirMedium\"; margin-bottom: 6px; color: #096509; }\n\n.limbs{ margin: 0; font-size: 22px; color: #000; text-align: center; font-family: \"AvenirMedium\"; border-top: 1px solid #b5b5b5; margin-top: 15px; text-transform: uppercase;\n    margin-bottom: -10px; }\n\ninput[type=\"checkbox\"]:checked {\n  /* box-shadow: 0 0 0 3px hotpink; */\n  position: relative;\n}\n\ninput[type=\"checkbox\"]:checked::before{\n  content: 'x';\n  /* content: '\\2713'; checkmark */\n  position: absolute;\n  background: #fff;\n  width: 100%;\n  height: auto;\n  color: #ff0707;\n  left: 0px;\n  display: flex;\n  justify-content: center;\n  border: .5px solid #807f7f;\n  line-height: 12px;\n  box-sizing: border-box;\n  top: 0;\n  border-radius: 2px;\n  font-weight: bold;\n  font-size: 16px;\n  padding: 1px 7px 2px;\n}\n\n.signaturefont { font-family: \"AmandaSignature\"; font-size: 30px; line-height: 58px; height: 40px; padding: 10px 25px; box-sizing: border-box; background: #fff;\nborder-bottom: 1px solid #000; color: rgb(5, 5, 253); }\n\n.reportCheck label{ width: 33%; display: inline-block; }\n\n@media screen and (max-width:1440px){\n  .reportCheck label { width: 50%;}\n}\n\n@media screen and (max-width:1199px){\n.reportCheck label { width: 24%;}\n}\n\n@media screen and (max-width:900px){\n  .reportCheck label { width: 50%;}\n}\n\n@media screen and (max-width: 600px){\n  .reportCheck label { width: 100%; }\n}\n\n.mat-step-header {\n  display: none !important;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kb2N0b3IvZG9jdG9yLWRhc2hib2FyZC9wYXRpZW50LXJlcG9ydC12aWV3L3BhdGllbnQtZGV0YWlscy9wYXRpZW50LWRldGFpbHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7SUFDWCxpQkFBaUI7SUFDakIsY0FBYztBQUNsQjs7QUFFQSxVQUFVLGtCQUFrQixFQUFFLFNBQVM7SUFDbkMsZUFBZTtJQUNmLDBCQUEwQjtBQUM5Qjs7QUFFQSwyQkFBMkIsV0FBVyxDQUFDOztBQUV2QywyQkFBMkIseUJBQXlCLEVBQUU7O0FBQ3RELG1DQUFtQyx5QkFBeUIsRUFBRSxnQkFBZ0IsRUFBRSwyQkFBMkIsQ0FBQzs7QUFDNUcsbUNBQW1DLFdBQVcsRUFBRSxZQUFZLEVBQUUsbUJBQW1CLEVBQUUsMkJBQTJCLEVBQUU7O0FBQ2hILHFDQUFxQyxlQUFlLEVBQUU7O0FBQ3RELHlCQUF5QixVQUFVLEVBQUU7O0FBQ3JDLDBCQUEwQixrQkFBa0IsRUFBRTs7QUFDOUMsd0JBQXdCLGtCQUFrQixFQUFFOztBQUM1QyxtQkFBbUIsV0FBVyxFQUFFLGFBQWEsRUFBRSxZQUFZLEVBQUUsYUFBYSxFQUFFLHNCQUFzQixFQUFFOztBQUNwRyxvQkFBb0IsYUFBYSxFQUFFOztBQUNuQyxhQUFhLGNBQWMsRUFBRSxlQUFlLEVBQUUsbUJBQW1CLEVBQUUsa0JBQWtCLEVBQUUsMkJBQTJCO0VBQ2hILGlCQUFpQixFQUFFLFNBQVMsRUFBRSxvREFBb0Q7RUFDbEYsYUFBYSxHQUFHLHlCQUF5QixDQUFDOztBQUM1QztJQUNJLFlBQVksRUFBRSxZQUFZLEVBQUUsK0JBQStCLEVBQUUsZUFBZTtJQUM1RSxtQkFBbUIsRUFBRSxXQUFXLEVBQUUsc0JBQXNCLEVBQUU7O0FBQzlELGdEQUFnRCxhQUFhLENBQUM7O0FBQzlELFdBQVcsYUFBYSxFQUFFLDJCQUEyQixFQUFFLGtCQUFrQixFQUFFLGNBQWMsRUFBRTs7QUFDM0YsUUFBUSxTQUFTLEVBQUUsZUFBZSxFQUFFLFdBQVcsRUFBRSxrQkFBa0IsRUFBRSwyQkFBMkIsRUFBRSw2QkFBNkIsRUFBRSxnQkFBZ0IsRUFBRSx5QkFBeUI7SUFDeEssb0JBQW9CLEVBQUU7O0FBRXpCO0VBQ0MsbUNBQW1DO0VBQ25DLGtCQUFrQjtBQUNwQjs7QUFDQTtFQUNFLFlBQVk7RUFDWixnQ0FBZ0M7RUFDaEMsa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixXQUFXO0VBQ1gsWUFBWTtFQUNaLGNBQWM7RUFDZCxTQUFTO0VBQ1QsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QiwwQkFBMEI7RUFDMUIsaUJBQWlCO0VBQ2pCLHNCQUFzQjtFQUN0QixNQUFNO0VBQ04sa0JBQWtCO0VBQ2xCLGlCQUFpQjtFQUNqQixlQUFlO0VBQ2Ysb0JBQW9CO0FBQ3RCOztBQUVBLGlCQUFpQiw4QkFBOEIsRUFBRSxlQUFlLEVBQUUsaUJBQWlCLEVBQUUsWUFBWSxFQUFFLGtCQUFrQixFQUFFLHNCQUFzQixFQUFFLGdCQUFnQjtBQUMvSiw2QkFBNkIsRUFBRSxxQkFBcUIsRUFBRTs7QUFDdEQsb0JBQW9CLFVBQVUsRUFBRSxxQkFBcUIsRUFBRTs7QUFHdkQ7RUFDRSxxQkFBcUIsVUFBVSxDQUFDO0FBQ2xDOztBQUVBO0FBQ0EscUJBQXFCLFVBQVUsQ0FBQztBQUNoQzs7QUFDQTtFQUNFLHFCQUFxQixVQUFVLENBQUM7QUFDbEM7O0FBQ0E7RUFDRSxxQkFBcUIsV0FBVyxFQUFFO0FBQ3BDOztBQUdBO0VBQ0Usd0JBQXdCO0FBQzFCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9kb2N0b3IvZG9jdG9yLWRhc2hib2FyZC9wYXRpZW50LXJlcG9ydC12aWV3L3BhdGllbnQtZGV0YWlscy9wYXRpZW50LWRldGFpbHMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5lbmNvdW50ZXJfd3JhcHBlciB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWFyZ2luOiAyMHB4IGF1dG87XG4gICAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5oZWFkZXIgeyB0ZXh0LWFsaWduOiBjZW50ZXI7IG1hcmdpbjogMDtcbiAgICBmb250LXNpemU6IDMwcHg7XG4gICAgZm9udC1mYW1pbHk6IFwiQXZlbmlyQmxhY2tcIjtcbn1cblxuLmVuY291bnRlcl93cmFwcGVyIHRhYmxlIHsgd2lkdGg6IDEwMCU7fVxuXG4uZW5jb3VudGVyX3dyYXBwZXIgdGFibGUgeyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyB9XG4uZW5jb3VudGVyX3dyYXBwZXIgdGFibGUsIHRoLCB0ZCB7IGJvcmRlcjogMXB4IHNvbGlkICNjN2M3Yzc7IHBhZGRpbmc6IDVweCA4cHg7IGZvbnQtZmFtaWx5OiAnQXZlbmlyTWVkaXVtJzt9XG4uZW5jb3VudGVyX3dyYXBwZXIgdGFibGUgdGQgdHIgdGR7IGJvcmRlcjpub25lOyBwYWRkaW5nOiAycHg7IHZlcnRpY2FsLWFsaWduOiB0b3A7IGZvbnQtZmFtaWx5OiAnQXZlbmlyTWVkaXVtJzsgfVxuLmVuY291bnRlcl93cmFwcGVyIHRhYmxlIHRkIHRyIHRkIGJ7IGZvbnQtc2l6ZTogMTZweDsgfVxuLnNlY29uZF90YWJsZSAud2lkdGhlciB7IHdpZHRoOiA1MCU7IH1cbi5zZWNvbmRfdGFibGUgLnNwYWNlcl9vIHsgbWFyZ2luLXJpZ2h0OiAxNXB4OyB9XG4uc2Vjb25kX3RhYmxlIC5oZWFkZXIgeyB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbi5hZGRpdGlvbmFsbm90ZXMgeyB3aWR0aDogMTAwJTsgaGVpZ2h0OiAxMjBweDsgcmVzaXplOiBub25lOyBwYWRkaW5nOiAxMHB4OyBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XG4uYWRkaXRpb25hbG5vdGVzMyB7IGhlaWdodDogMjM4cHg7IH1cbi5yZWRfcGFyYSB7ICBjb2xvcjogI2ZmZmZmZjsgZm9udC1zaXplOiAyMHB4OyBmb250LXdlaWdodDogbm9ybWFsOyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtZmFtaWx5OiBcIkF2ZW5pck1lZGl1bVwiO1xuICBsaW5lLWhlaWdodDogMjJweDsgbWFyZ2luOiAwOyBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoNDVkZWcsICMwYWMzYTIsICM3YWZiYjMpO1xuICBwYWRkaW5nOiAxMHB4OyAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTt9XG50YWJsZSBpbnB1dFt0eXBlPVwidGV4dFwiXSB7XG4gICAgaGVpZ2h0OiA0MHB4OyBib3JkZXI6IG5vbmU7IGJvcmRlci1ib3R0b206IDEuNHB4IHNvbGlkICMwMDA7IHBhZGRpbmc6IDAgMTBweDtcbiAgICBiYWNrZ3JvdW5kOiAjZjFmMWYxOyB3aWR0aDogYXV0bzsgYm94LXNpemluZzogYm9yZGVyLWJveDsgfVxudGFibGUgaW5wdXRbdHlwZT1cInRleHRcIl06Zm9jdXMsIHRleHRhcmVhOmZvY3VzeyBvdXRsaW5lOiBub25lO31cbi5zdWdnZXN0IHsgbWFyZ2luLXRvcDogMDsgZm9udC1mYW1pbHk6IFwiQXZlbmlyTWVkaXVtXCI7IG1hcmdpbi1ib3R0b206IDZweDsgY29sb3I6ICMwOTY1MDk7IH1cbi5saW1ic3sgbWFyZ2luOiAwOyBmb250LXNpemU6IDIycHg7IGNvbG9yOiAjMDAwOyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtZmFtaWx5OiBcIkF2ZW5pck1lZGl1bVwiOyBib3JkZXItdG9wOiAxcHggc29saWQgI2I1YjViNTsgbWFyZ2luLXRvcDogMTVweDsgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICBtYXJnaW4tYm90dG9tOiAtMTBweDsgfVxuXG4gaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdOmNoZWNrZWQge1xuICAvKiBib3gtc2hhZG93OiAwIDAgMCAzcHggaG90cGluazsgKi9cbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdOmNoZWNrZWQ6OmJlZm9yZXtcbiAgY29udGVudDogJ3gnO1xuICAvKiBjb250ZW50OiAnXFwyNzEzJzsgY2hlY2ttYXJrICovXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYmFja2dyb3VuZDogI2ZmZjtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogYXV0bztcbiAgY29sb3I6ICNmZjA3MDc7XG4gIGxlZnQ6IDBweDtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGJvcmRlcjogLjVweCBzb2xpZCAjODA3ZjdmO1xuICBsaW5lLWhlaWdodDogMTJweDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgdG9wOiAwO1xuICBib3JkZXItcmFkaXVzOiAycHg7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBmb250LXNpemU6IDE2cHg7XG4gIHBhZGRpbmc6IDFweCA3cHggMnB4O1xufVxuXG4uc2lnbmF0dXJlZm9udCB7IGZvbnQtZmFtaWx5OiBcIkFtYW5kYVNpZ25hdHVyZVwiOyBmb250LXNpemU6IDMwcHg7IGxpbmUtaGVpZ2h0OiA1OHB4OyBoZWlnaHQ6IDQwcHg7IHBhZGRpbmc6IDEwcHggMjVweDsgYm94LXNpemluZzogYm9yZGVyLWJveDsgYmFja2dyb3VuZDogI2ZmZjtcbmJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjMDAwOyBjb2xvcjogcmdiKDUsIDUsIDI1Myk7IH1cbi5yZXBvcnRDaGVjayBsYWJlbHsgd2lkdGg6IDMzJTsgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG5cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDoxNDQwcHgpe1xuICAucmVwb3J0Q2hlY2sgbGFiZWwgeyB3aWR0aDogNTAlO31cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDoxMTk5cHgpe1xuLnJlcG9ydENoZWNrIGxhYmVsIHsgd2lkdGg6IDI0JTt9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOjkwMHB4KXtcbiAgLnJlcG9ydENoZWNrIGxhYmVsIHsgd2lkdGg6IDUwJTt9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA2MDBweCl7XG4gIC5yZXBvcnRDaGVjayBsYWJlbCB7IHdpZHRoOiAxMDAlOyB9XG59XG5cblxuLm1hdC1zdGVwLWhlYWRlciB7XG4gIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbn0iXX0= */";
    /***/
  },

  /***/
  "./src/app/components/doctor/doctor-dashboard/patient-report-view/patient-details/patient-details.component.ts":
  /*!*********************************************************************************************************************!*\
    !*** ./src/app/components/doctor/doctor-dashboard/patient-report-view/patient-details/patient-details.component.ts ***!
    \*********************************************************************************************************************/

  /*! exports provided: PatientDetailsComponent */

  /***/
  function srcAppComponentsDoctorDoctorDashboardPatientReportViewPatientDetailsPatientDetailsComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PatientDetailsComponent", function () {
      return PatientDetailsComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");

    var PatientDetailsComponent = /*#__PURE__*/function () {
      function PatientDetailsComponent(activatedRoute, httpService, cookie, fb, router, datePipe) {
        _classCallCheck(this, PatientDetailsComponent);

        this.activatedRoute = activatedRoute;
        this.httpService = httpService;
        this.cookie = cookie;
        this.fb = fb;
        this.router = router;
        this.datePipe = datePipe;
        this.R000Text = "R00.0 Tachycardia, unspecified Abnormal Heart Rhythm & Electrical Stability";
        this.htmlText = {
          nav: 'Add Patient',
          header: "Physician Report"
        };
        this.configData = {
          patientInfoFormFields: [],
          calendarInfoFormFields: {},
          primaryCondition: {}
        };
        this.formfieldrefreshdata = null;
        this.insuranceName = '';
        this.cookiesData = this.cookie.getAll();
        this.cookiesData.user_details = JSON.parse(this.cookiesData.user_details);
      }

      _createClass(PatientDetailsComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this192 = this;

          // console.log("Patient Details Start =============================================");
          // console.log("Patient Details End =============================================");
          var data = {
            "source": "data_pece",
            "condition": {
              "_id_object": this.orginalReportDetails.patient_details[0].insurance_id
            },
            "token": this.cookiesData.jwtToken
          }; // this.httpService.httpViaPost('datalist', data).subscribe(response => {
          //   if(response.status == true) {
          //     this.insuranceName = response.res[0].insurancename;
          //     console.log(">", this.configData.patientInfoFormFields[11]);
          //     console.log(">>", response.res);
          //   }
          // });
          //console.log("Patient details >>>", this.orginalReportDetails.patient_details[0].doctor_details[0].practice_name);

          var practice_name = '';

          if (this.orginalReportDetails.patient_details[0].doctor_details.length == 0) {
            practice_name = 'Not Found';
          } else {
            practice_name = this.orginalReportDetails.patient_details[0].doctor_details[0].practice_name;
          }

          var patientInfoFormFields = [{
            type: 'input',
            name: 'practice_name',
            placeholder: 'Practice Name',
            label: 'Practice Name',
            value: practice_name,
            caption: 'Patient General Information',
            disabled: true
          }, {
            type: 'input',
            name: 'address',
            placeholder: 'Address',
            label: 'Address',
            value: this.orginalReportDetails.patient_details[0].address,
            disabled: true
          }, {
            type: 'input',
            name: 'state',
            placeholder: 'State',
            label: 'State',
            value: this.orginalReportDetails.patient_details[0].state,
            disabled: true
          }, {
            type: 'input',
            name: 'city',
            placeholder: 'City',
            label: 'City',
            value: this.orginalReportDetails.patient_details[0].city,
            disabled: true
          }, {
            type: 'input',
            name: 'zip',
            placeholder: 'ZIP',
            label: 'ZIP',
            value: this.orginalReportDetails.patient_details[0].zip,
            disabled: true
          }, {
            type: 'input',
            name: 'patient_name',
            label: 'Patient Name',
            value: this.orginalReportDetails.patient_details[0].patient_name,
            disabled: true
          }, {
            type: 'input',
            name: 'gender',
            label: 'Gender',
            value: this.orginalReportDetails.patient_details[0].gender,
            disabled: true
          }, {
            type: 'input',
            name: 'patient_email',
            label: 'Patient Email',
            value: this.orginalReportDetails.patient_details[0].patient_email,
            disabled: true
          }, {
            type: 'input',
            name: 'height',
            label: 'Height',
            value: this.orginalReportDetails.patient_details[0].height,
            disabled: true
          }, {
            type: 'input',
            name: 'weight',
            label: 'Weight',
            value: this.orginalReportDetails.patient_details[0].weight,
            disabled: true
          }, {
            type: 'input',
            name: 'dob',
            label: 'Date of Birth',
            value: this.orginalReportDetails.patient_details[0].dob,
            disabled: true
          }];
          var checkboxFields = [{
            type: 'checkbox',
            caption: 'Autonomic Nervous System Dysfunction (ANSD)',
            label: 'Blurred Vision',
            checkItems: [{
              name: 'bv_six_months',
              value: this.orginalReportDetails.patient_details[0].bv_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'bv_today',
              value: this.orginalReportDetails.patient_details[0].bv_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'Autonomic Nervous System Dysfunction (ANSD)'
          }, {
            type: 'checkbox',
            label: 'Elevated Blood Sugar',
            checkItems: [{
              name: 'ebs_six_months',
              value: this.orginalReportDetails.patient_details[0].ebs_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'ebs_today',
              value: this.orginalReportDetails.patient_details[0].ebs_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'Autonomic Nervous System Dysfunction (ANSD)'
          }, {
            type: 'checkbox',
            label: 'Extreme Thirst',
            checkItems: [{
              name: 'et_six_months',
              value: this.orginalReportDetails.patient_details[0].et_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'et_today',
              value: this.orginalReportDetails.patient_details[0].et_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'Autonomic Nervous System Dysfunction (ANSD)'
          }, {
            type: 'checkbox',
            label: 'Frequent Urination',
            checkItems: [{
              name: 'fu_six_months',
              value: this.orginalReportDetails.patient_details[0].fu_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'fu_today',
              value: this.orginalReportDetails.patient_details[0].fu_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'Autonomic Nervous System Dysfunction (ANSD)'
          }, {
            type: 'checkbox',
            label: 'Fatigue (Tiredness)',
            checkItems: [{
              name: 'ft_six_months',
              value: this.orginalReportDetails.patient_details[0].ft_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'ft_today',
              value: this.orginalReportDetails.patient_details[0].ft_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'Autonomic Nervous System Dysfunction (ANSD)'
          }, {
            type: 'checkbox',
            label: 'Heartburn',
            checkItems: [{
              name: 'hb_six_months',
              value: this.orginalReportDetails.patient_details[0].hb_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'hb_today',
              value: this.orginalReportDetails.patient_details[0].hb_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'Autonomic Nervous System Dysfunction (ANSD)'
          }, {
            type: 'checkbox',
            label: 'Increased Hunger',
            checkItems: [{
              name: 'ih_six_months',
              value: this.orginalReportDetails.patient_details[0].ih_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'ih_today',
              value: this.orginalReportDetails.patient_details[0].ih_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'Autonomic Nervous System Dysfunction (ANSD)'
          }, {
            type: 'checkbox',
            label: 'Nausea',
            checkItems: [{
              name: 'nau_six_months',
              value: this.orginalReportDetails.patient_details[0].nau_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'nau_today',
              value: this.orginalReportDetails.patient_details[0].nau_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'Autonomic Nervous System Dysfunction (ANSD)'
          }, {
            type: 'checkbox',
            label: 'Numbness & Tingling in Hands or Feet',
            checkItems: [{
              name: 'nthf_six_months',
              value: this.orginalReportDetails.patient_details[0].nthf_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'nthf_today',
              value: this.orginalReportDetails.patient_details[0].nthf_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'Autonomic Nervous System Dysfunction (ANSD)'
          }, {
            type: 'checkbox',
            label: 'Vomiting',
            checkItems: [{
              name: 'vomiting_six_months',
              value: this.orginalReportDetails.patient_details[0].vomiting_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'vomiting_today',
              value: this.orginalReportDetails.patient_details[0].vomiting_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'Autonomic Nervous System Dysfunction (ANSD)'
          }, {
            type: 'checkbox',
            caption: 'Sudomotor Dysfunction (SUDOD)',
            label: 'Burning Sensations',
            checkItems: [{
              name: 'bs_six_months',
              value: this.orginalReportDetails.patient_details[0].bs_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'bs_today',
              value: this.orginalReportDetails.patient_details[0].bs_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'Autonomic Nervous System Dysfunction (ANSD)'
          }, {
            type: 'checkbox',
            label: 'Difficulty Digesting Food',
            checkItems: [{
              name: 'ddf_six_months',
              value: this.orginalReportDetails.patient_details[0].ddf_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'ddf_today',
              value: this.orginalReportDetails.patient_details[0].ddf_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'Autonomic Nervous System Dysfunction (ANSD)'
          }, {
            type: 'checkbox',
            label: 'Dizziness or Fainting',
            checkItems: [{
              name: 'dof_six_months',
              value: this.orginalReportDetails.patient_details[0].dof_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'dof_today',
              value: this.orginalReportDetails.patient_details[0].dof_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'Autonomic Nervous System Dysfunction (ANSD)'
          }, {
            type: 'checkbox',
            label: 'Exercise Intolerance',
            checkItems: [{
              name: 'ei_six_months',
              value: this.orginalReportDetails.patient_details[0].ei_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'ei_today',
              value: this.orginalReportDetails.patient_details[0].ei_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'Autonomic Nervous System Dysfunction (ANSD)'
          }, {
            type: 'checkbox',
            label: 'Sexual Difficulties',
            checkItems: [{
              name: 'sd_six_months',
              value: this.orginalReportDetails.patient_details[0].sd_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'sd_today',
              value: this.orginalReportDetails.patient_details[0].sd_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'Autonomic Nervous System Dysfunction (ANSD)'
          }, {
            type: 'checkbox',
            label: 'Sweat Abnormalities',
            checkItems: [{
              name: 'sa_six_months',
              value: this.orginalReportDetails.patient_details[0].sa_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'sa_today',
              value: this.orginalReportDetails.patient_details[0].sa_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'Autonomic Nervous System Dysfunction (ANSD)'
          }, {
            type: 'checkbox',
            label: 'Tingling Hands & Feet',
            checkItems: [{
              name: 'thf_six_months',
              value: this.orginalReportDetails.patient_details[0].thf_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'thf_today',
              value: this.orginalReportDetails.patient_details[0].thf_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'Autonomic Nervous System Dysfunction (ANSD)'
          }, {
            type: 'checkbox',
            label: 'Urinary Problems',
            checkItems: [{
              name: 'up_six_months',
              value: this.orginalReportDetails.patient_details[0].up_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'up_today',
              value: this.orginalReportDetails.patient_details[0].up_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'Autonomic Nervous System Dysfunction (ANSD)'
          }, {
            type: 'checkbox',
            caption: 'ENDOTHELIAL DYSFUNCTION (ENDOD)',
            label: 'Angina (severe chest pain, often spreading to shoulder, arm, back, neck, or jaw)',
            checkItems: [{
              name: 'angina_six_months',
              value: this.orginalReportDetails.patient_details[0].angina_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'angina_today',
              value: this.orginalReportDetails.patient_details[0].angina_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'ENDOTHELIAL DYSFUNCTION (ENDOD)'
          }, {
            type: 'checkbox',
            label: 'Chest Pain that goes away with rest',
            checkItems: [{
              name: 'cptgawr_six_months',
              value: this.orginalReportDetails.patient_details[0].cptgawr_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'cptgawr_today',
              value: this.orginalReportDetails.patient_details[0].cptgawr_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'ENDOTHELIAL DYSFUNCTION (ENDOD)'
          }, {
            type: 'checkbox',
            label: 'Heartburn',
            checkItems: [{
              name: 'hrtbn_six_months',
              value: this.orginalReportDetails.patient_details[0].hrtbn_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'hrtbn_today',
              value: this.orginalReportDetails.patient_details[0].hrtbn_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'ENDOTHELIAL DYSFUNCTION (ENDOD)'
          }, {
            type: 'checkbox',
            label: 'Pain In Calves',
            checkItems: [{
              name: 'pic_six_months',
              value: this.orginalReportDetails.patient_details[0].pic_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'pic_today',
              value: this.orginalReportDetails.patient_details[0].pic_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'ENDOTHELIAL DYSFUNCTION (ENDOD)'
          }, {
            type: 'checkbox',
            label: 'Shortness of Breath',
            checkItems: [{
              name: 'sob_six_months',
              value: this.orginalReportDetails.patient_details[0].sob_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'sob_today',
              value: this.orginalReportDetails.patient_details[0].sob_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'ENDOTHELIAL DYSFUNCTION (ENDOD)'
          }, {
            type: 'checkbox',
            label: 'Stroke',
            checkItems: [{
              name: 'stroke_six_months',
              value: this.orginalReportDetails.patient_details[0].stroke_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'stroke_today',
              value: this.orginalReportDetails.patient_details[0].stroke_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'ENDOTHELIAL DYSFUNCTION (ENDOD)'
          }, {
            type: 'checkbox',
            label: 'TIA (mini stroke)',
            checkItems: [{
              name: 'tia_six_months',
              value: this.orginalReportDetails.patient_details[0].tia_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'tia_today',
              value: this.orginalReportDetails.patient_details[0].tia_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'ENDOTHELIAL DYSFUNCTION (ENDOD)'
          }, {
            type: 'checkbox',
            caption: 'CARDIOMETABOLIC RISK (CMR)',
            label: 'Headaches',
            checkItems: [{
              name: 'headaches_six_months',
              value: this.orginalReportDetails.patient_details[0].headaches_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'headaches_today',
              value: this.orginalReportDetails.patient_details[0].headaches_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'CARDIOMETABOLIC RISK (CMR)'
          }, {
            type: 'checkbox',
            label: 'Dizziness',
            checkItems: [{
              name: 'dizziness_six_months',
              value: this.orginalReportDetails.patient_details[0].dizziness_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'dizziness_today',
              value: this.orginalReportDetails.patient_details[0].dizziness_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'CARDIOMETABOLIC RISK (CMR)'
          }, {
            type: 'checkbox',
            label: 'Swelling of Ankles',
            checkItems: [{
              name: 'soa_six_months',
              value: this.orginalReportDetails.patient_details[0].soa_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'soa_today',
              value: this.orginalReportDetails.patient_details[0].soa_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'CARDIOMETABOLIC RISK (CMR)'
          }, {
            type: 'checkbox',
            caption: 'INSULIN RESISTANCE (IR)',
            label: 'Blurred Vision',
            checkItems: [{
              name: 'blv_six_months',
              value: this.orginalReportDetails.patient_details[0].blv_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'blv_today',
              value: this.orginalReportDetails.patient_details[0].blv_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'INSULIN RESISTANCE (IR)'
          }, {
            type: 'checkbox',
            label: 'Elevated Blood Sugar',
            checkItems: [{
              name: 'ebsr_six_months',
              value: this.orginalReportDetails.patient_details[0].ebsr_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'ebsr_today',
              value: this.orginalReportDetails.patient_details[0].ebsr_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'INSULIN RESISTANCE (IR)'
          }, {
            type: 'checkbox',
            label: 'Extreme Thirst',
            checkItems: [{
              name: 'ext_six_months',
              value: this.orginalReportDetails.patient_details[0].ext_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'ext_today',
              value: this.orginalReportDetails.patient_details[0].ext_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'INSULIN RESISTANCE (IR)'
          }, {
            type: 'checkbox',
            label: 'Fatigue (Tiredness)',
            checkItems: [{
              name: 'ftd_six_months',
              value: this.orginalReportDetails.patient_details[0].ftd_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'ftd_today',
              value: this.orginalReportDetails.patient_details[0].ftd_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'INSULIN RESISTANCE (IR)'
          }, {
            type: 'checkbox',
            label: 'Increased Hunger',
            checkItems: [{
              name: 'ihr_six_months',
              value: this.orginalReportDetails.patient_details[0].ihr_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'ihr_today',
              value: this.orginalReportDetails.patient_details[0].ihr_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'INSULIN RESISTANCE (IR)'
          }, {
            type: 'checkbox',
            caption: 'SMALL FIBER SENSORY NEUROPATHY (SFN)',
            label: 'Burning Sensations',
            checkItems: [{
              name: 'burns_six_months',
              value: this.orginalReportDetails.patient_details[0].burns_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'burns_today',
              value: this.orginalReportDetails.patient_details[0].burns_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'SMALL FIBER SENSORY NEUROPATHY (SFN)'
          }, {
            type: 'checkbox',
            label: 'Painful Contact With Socks or Bed Sheets',
            checkItems: [{
              name: 'pcwsbs_six_months',
              value: this.orginalReportDetails.patient_details[0].pcwsbs_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'pcwsbs_today',
              value: this.orginalReportDetails.patient_details[0].pcwsbs_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'SMALL FIBER SENSORY NEUROPATHY (SFN)'
          }, {
            type: 'checkbox',
            label: 'Pebble or Sandlike Sensation In Shoes',
            checkItems: [{
              name: 'psss_six_months',
              value: this.orginalReportDetails.patient_details[0].psss_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'psss_today',
              value: this.orginalReportDetails.patient_details[0].psss_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'SMALL FIBER SENSORY NEUROPATHY (SFN)'
          }, {
            type: 'checkbox',
            label: 'Stabbing or Electrical Shock Sensation',
            checkItems: [{
              name: 'sess_six_months',
              value: this.orginalReportDetails.patient_details[0].sess_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'sess_today',
              value: this.orginalReportDetails.patient_details[0].sess_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'SMALL FIBER SENSORY NEUROPATHY (SFN)'
          }, {
            type: 'checkbox',
            label: 'Pins And Needles Sensation In Feet',
            checkItems: [{
              name: 'pnsf_six_months',
              value: this.orginalReportDetails.patient_details[0].pnsf_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'pnsf_today',
              value: this.orginalReportDetails.patient_details[0].pnsf_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'SMALL FIBER SENSORY NEUROPATHY (SFN)'
          }, {
            type: 'checkbox',
            caption: 'CARDIOMETABOLIC AUTONOMIC NEUROPATHY (CAN)',
            label: 'Blurred Vision',
            checkItems: [{
              name: 'bldv_six_months',
              value: this.orginalReportDetails.patient_details[0].bldv_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'bldv_today',
              value: this.orginalReportDetails.patient_details[0].bldv_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'CARDIOMETABOLIC AUTONOMIC NEUROPATHY (CAN)'
          }, {
            type: 'checkbox',
            label: 'Cold, Clammy, Pale Skin',
            checkItems: [{
              name: 'ccps_six_months',
              value: this.orginalReportDetails.patient_details[0].ccps_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'ccps_today',
              value: this.orginalReportDetails.patient_details[0].ccps_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'CARDIOMETABOLIC AUTONOMIC NEUROPATHY (CAN)'
          }, {
            type: 'checkbox',
            label: 'Depression',
            checkItems: [{
              name: 'depression_six_months',
              value: this.orginalReportDetails.patient_details[0].depression_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'depression_today',
              value: this.orginalReportDetails.patient_details[0].depression_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'CARDIOMETABOLIC AUTONOMIC NEUROPATHY (CAN)'
          }, {
            type: 'checkbox',
            label: 'Dizziness or Lightheadedness',
            checkItems: [{
              name: 'dol_six_months',
              value: this.orginalReportDetails.patient_details[0].dol_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'dol_today',
              value: this.orginalReportDetails.patient_details[0].dol_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'CARDIOMETABOLIC AUTONOMIC NEUROPATHY (CAN)'
          }, {
            type: 'checkbox',
            label: 'Thirst',
            checkItems: [{
              name: 'thirst_six_months',
              value: this.orginalReportDetails.patient_details[0].thirst_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'thirst_today',
              value: this.orginalReportDetails.patient_details[0].thirst_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'CARDIOMETABOLIC AUTONOMIC NEUROPATHY (CAN)'
          }, {
            type: 'checkbox',
            label: 'Fainting',
            checkItems: [{
              name: 'fainting_six_months',
              value: this.orginalReportDetails.patient_details[0].fainting_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'fainting_today',
              value: this.orginalReportDetails.patient_details[0].fainting_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'CARDIOMETABOLIC AUTONOMIC NEUROPATHY (CAN)'
          }, {
            type: 'checkbox',
            label: 'Fatigue (Tiredness)',
            checkItems: [{
              name: 'fatt_six_months',
              value: this.orginalReportDetails.patient_details[0].fatt_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'fatt_today',
              value: this.orginalReportDetails.patient_details[0].fatt_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'CARDIOMETABOLIC AUTONOMIC NEUROPATHY (CAN)'
          }, {
            type: 'checkbox',
            label: 'Lack of Concentration',
            checkItems: [{
              name: 'loc_six_months',
              value: this.orginalReportDetails.patient_details[0].loc_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'loc_today',
              value: this.orginalReportDetails.patient_details[0].loc_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'CARDIOMETABOLIC AUTONOMIC NEUROPATHY (CAN)'
          }, {
            type: 'checkbox',
            label: 'Lack of Energy',
            checkItems: [{
              name: 'loe_six_months',
              value: this.orginalReportDetails.patient_details[0].loe_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'loe_today',
              value: this.orginalReportDetails.patient_details[0].loe_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'CARDIOMETABOLIC AUTONOMIC NEUROPATHY (CAN)'
          }, {
            type: 'checkbox',
            label: 'Nausea',
            checkItems: [{
              name: 'nausea_six_months',
              value: this.orginalReportDetails.patient_details[0].nausea_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'nausea_today',
              value: this.orginalReportDetails.patient_details[0].nausea_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'CARDIOMETABOLIC AUTONOMIC NEUROPATHY (CAN)'
          }, {
            type: 'checkbox',
            label: 'Rapid, Shallow Breathing',
            checkItems: [{
              name: 'rsb_six_months',
              value: this.orginalReportDetails.patient_details[0].rsb_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'rsb_today',
              value: this.orginalReportDetails.patient_details[0].rsb_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'CARDIOMETABOLIC AUTONOMIC NEUROPATHY (CAN)'
          }, {
            type: 'checkbox',
            caption: 'PLETHYSMOGRAPHY CARDIOVASCULAR DISEASE (PTG CVD)',
            label: 'Blood clot in a vein (Venous Thrombosis)',
            checkItems: [{
              name: 'bciv_six_months',
              value: this.orginalReportDetails.patient_details[0].bciv_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'bciv_today',
              value: this.orginalReportDetails.patient_details[0].bciv_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'PLETHYSMOGRAPHY CARDIOVASCULAR DISEASE (PTG CVD)'
          }, {
            type: 'checkbox',
            label: 'Heart Attack',
            checkItems: [{
              name: 'hattk_six_months',
              value: this.orginalReportDetails.patient_details[0].hattk_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'hattk_today',
              value: this.orginalReportDetails.patient_details[0].hattk_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'PLETHYSMOGRAPHY CARDIOVASCULAR DISEASE (PTG CVD)'
          }, {
            type: 'checkbox',
            label: 'Irregular heartbeat, too fast/slow (Atrial Fibrillation)',
            checkItems: [{
              name: 'ihtfs_six_months',
              value: this.orginalReportDetails.patient_details[0].ihtfs_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'iftfs_today',
              value: this.orginalReportDetails.patient_details[0].iftfs_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'PLETHYSMOGRAPHY CARDIOVASCULAR DISEASE (PTG CVD)'
          }, {
            type: 'checkbox',
            label: 'Stroke',
            checkItems: [{
              name: 'strk_six_months',
              value: this.orginalReportDetails.patient_details[0].strk_six_months,
              label: '6 Months',
              labelPosition: 'before',
              disabled: true
            }, {
              name: 'strk_today',
              value: this.orginalReportDetails.patient_details[0].strk_today,
              label: 'Today',
              labelPosition: 'before',
              disabled: true
            }],
            isSymptomChecklist: true,
            block: 'PLETHYSMOGRAPHY CARDIOVASCULAR DISEASE (PTG CVD)'
          }]; // console.log("Print Data: ", this.orginalReportDetails.patient_details[0]);
          // let keys = Object.keys(this.orginalReportDetails.patient_details[0]);
          // keys.splice(0, 1);
          //
          // let extraFields = [];
          // for (let i in patientInfoFormFields) {
          //     extraFields.push(patientInfoFormFields[i].name)
          // }
          // for (let i in checkboxFields) {
          //   for (let j in checkboxFields[i].checkItems) {
          //       extraFields.push(checkboxFields[i].checkItems[j].name)
          //   }
          // }
          // extraFields.push("booking_date", "insurance_id", "insurance_type", "insurance_name_input", "insurance_type_input", "parent_type", "startdate", "slot", "reqTimezone", "attendees", "additional_notes", "timezoneName", "status", "startdate_unix", "doctor_id", "doctors_office_id", "tech_id", "parent_id", "doctor_details", "doctor_office_details")
          // extraFields = keys.filter(value => !extraFields.includes(value));
          //
          // // console.log('extraFields', extraFields);
          //
          // let otherFields: any = [];
          // for (let i in extraFields) {
          //   let label = extraFields[i].replace('_', ' ');
          //   otherFields.push({
          //     type: 'input', name: extraFields[i], label: label,
          //     value: this.orginalReportDetails.patient_details[0][extraFields[i]], disabled: true
          //   });
          //   if (i == '0') {
          //     otherFields[i] = Object.assign(otherFields[i], {caption: 'Other Information'})
          //   }
          // }

          var otherFields = [];
          var data2 = {
            token: this.cookie.get('jwtToken'),
            condition: {
              user_type: 'patient_information'
            },
            source: 'data_pece'
          };
          this.httpService.postRequest('get-data', data2).subscribe(function (response) {
            // console.log('response', response);
            for (var i in response.res) {
              // let label = response.res[i].replace('_', ' ');
              if (_this192.orginalReportDetails.patient_details[0][response.res[i].label] !== undefined) {
                switch (response.res[i].type) {
                  case 'checkbox':
                    otherFields.push({
                      type: 'checkbox',
                      label: response.res[i].description,
                      checkItems: [{
                        name: response.res[i].label,
                        value: _this192.orginalReportDetails.patient_details[0][response.res[i].label],
                        label: '',
                        labelPosition: 'before'
                      }]
                    });
                    break;

                  case 'textfield':
                    otherFields.push({
                      type: 'input',
                      name: response.res[i].label,
                      label: response.res[i].description,
                      value: _this192.orginalReportDetails.patient_details[0][response.res[i].label],
                      disabled: true
                    });
                    break;
                }

                if (otherFields.length == 0) {
                  otherFields[i] = Object.assign(otherFields[i], {
                    caption: 'Other Information'
                  });
                }
              }
            } // })


            var requestData = {
              token: _this192.cookie.get('jwtToken'),
              condition: {
                _id: _this192.orginalReportDetails.patient_details[0].insurance_id
              },
              source: 'data_pece'
            };

            if (_this192.orginalReportDetails.patient_details[0].insurance_id != '') {
              _this192.httpService.postRequest('get-data', requestData).subscribe(function (response) {
                var insurance_name = response.res[0].insurancename;
                patientInfoFormFields.push({
                  type: 'input',
                  name: 'insurance_name',
                  label: 'Insurance Name',
                  value: insurance_name,
                  disabled: true
                });
                _this192.configData = Object.assign(_this192.configData, {
                  patientInfoFormFields: patientInfoFormFields.concat(otherFields, checkboxFields)
                });
              });
            } else {
              console.log('otherFields', otherFields);
              _this192.configData = Object.assign(_this192.configData, {
                patientInfoFormFields: patientInfoFormFields.concat(otherFields, checkboxFields)
              });
            }
          });
        }
      }, {
        key: "patientDetails",
        set: function set(patientDetailsData) {
          this.reportDetails = patientDetailsData;
        }
      }, {
        key: "orginalData",
        set: function set(orginalData) {
          this.orginalReportDetails = orginalData;
        }
      }]);

      return PatientDetailsComponent;
    }();

    PatientDetailsComponent.ctorParameters = function () {
      return [{
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_5__["HttpServiceService"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_4__["CookieService"]
      }, {
        type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"]
      }, {
        type: _angular_common__WEBPACK_IMPORTED_MODULE_6__["DatePipe"]
      }];
    };

    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], PatientDetailsComponent.prototype, "patientDetails", null);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], PatientDetailsComponent.prototype, "orginalData", null);
    PatientDetailsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-patient-details',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./patient-details.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor/doctor-dashboard/patient-report-view/patient-details/patient-details.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./patient-details.component.css */
      "./src/app/components/doctor/doctor-dashboard/patient-report-view/patient-details/patient-details.component.css"))["default"]]
    })], PatientDetailsComponent);
    /***/
  },

  /***/
  "./src/app/components/doctor/doctor-dashboard/patient-report-view/patient-report-view.component.css":
  /*!**********************************************************************************************************!*\
    !*** ./src/app/components/doctor/doctor-dashboard/patient-report-view/patient-report-view.component.css ***!
    \**********************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsDoctorDoctorDashboardPatientReportViewPatientReportViewComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = ".patient_report_wrapper{ display: flex; justify-content: space-between; flex-wrap: wrap; margin-bottom: 60px; }\n.patient_report_wrapper .patient_item_section{  padding: 16px; box-sizing: border-box; margin-bottom: 0; width: 50%; background: #fff; }\n/*left part css start here*/\n/* header css */\n.techdashboard_header .mat-toolbar-row{ height: auto; }\n.techdashboard_header .mat-toolbar-row .logo_wrapper{ max-width: 200px; display: block; }\n.techdashboard_header .mat-toolbar-row .logo_wrapper img{ max-width: 100%; vertical-align: middle; }\n.techdashboard_header .mat-toolbar-row{ justify-content: space-evenly; padding: 0 40px;}\n.techdashboard_header .mat-toolbar-row .quotation { margin-bottom: 0px;}\n.techdashboard_header .mat-toolbar-row .quotation p{ font-family: \"RobotoMedium\"; font-size: 30px; color: #002035; text-transform: uppercase; margin: 0; white-space: normal;\n  text-align: center;}\n.techdashboard_header .mat-toolbar-row .profile_section { display: flex; border-left: 1px solid #e2dede; padding-left: 20px; }\n.techdashboard_header .mat-toolbar-row .profile_section .username{ padding-right: 20px; display: block; }\n/*End header css */\n.add_form{ width: 100%; margin: 20px auto; background: #f3f3f3; padding: 16px 10px; padding-bottom: 25px; border: 1px solid #91e7ff; box-sizing: border-box;}\n.add_form .form_wrapper .mat-form-field{ width: 49%; margin: 0.5%; }\n.add_form .form_wrapper textarea{ resize: none;}\n.add_form h2{ font-family: \"RobotoBlack\"; text-transform: uppercase; font-size: 24px; padding: 0 6px; color: #1dbce9; }\n.add_form .submit_form { display: block; width: 100%; text-align: center; margin-top: 30px; }\n.add_form .submit_form button{ border-radius: 5px; background: linear-gradient(180deg, #f9dc19, #daa505); color: #5e3619; text-transform: uppercase; font-family: \"RobotoBlack\"; font-size: 25px; padding: 8px;\nwidth: 390px; border: 3px solid #d59d01; }\n.add_form .submit_form button:nth-child(1){ background: linear-gradient(180deg, #f2be00, #a52a08); color: #f3f3f3; border: 2px solid #bb3c0d; margin-right: 16px; }\n.add_form .return_button { background: #1dbce9; color: #fff; margin-bottom: 12px;}\n.add_form .example-form .wrapper{ display: inline-flex; align-items: center; width: 100%; flex-wrap: wrap;}\n.add_form .example-form .wrapper label{ width: 150px; display: inline-block;}\n.report_header{ background:linear-gradient(45deg, #0772ff, #04a6f6); padding: 14px; display: block;\n  font-family: 'AvenirBlack';\n  font-size: 26px;\n  color: #fff;\n  text-transform: uppercase;}\n/* .add_form .test_date_wrapper{ display: inline-block; } */\n.add_form .test_date_wrapper .mat-card-actions, .add_form .test_date_wrapper .mat-card-content, .add_form .test_date_wrapper .mat-card-subtitle {\n  display: inline-flex;\n  margin-bottom: 16px;\n  vertical-align: middle;\n  justify-content: center;\n  align-items: center;\n}\n.add_form .mat-card-content label , .add_form .patient_diagnotes label{ font-family: \"AvenirLight\"; color: #01090c; font-size: 14px; margin: 0 5px}\n.add_form .test_date_wrapper .mat-form-field{ width: 100px;}\n.add_form .test_date_wrapper  label{ width: 120px;}\n.add_form .mat-card-content .mat-checkbox { margin: 0 5px; }\n.add_form .mat-card-content ,\n.add_form .patient_diagnotes .mat-form-field {margin: 0 5px;\n flex: 1 1 48%;\n}\n.add_form .patient_diagnotes{ width: auto; flex-direction: column; display: flex; margin: 0 8px; border: 2px solid #43cef5; background: #fff;\n  box-sizing: border-box;}\n.add_form .patient_diagnotes{ width: auto; flex-direction: column; display: flex; margin: 0px;}\n.add_form .patient_diagnotes .example-full-width textarea{ resize: none; }\n.add_form .example-form .field_setmodel{ border: 1px solid #6fa6bb;}\n.add_form .example-form .field_setmodel .legend_model{ font-family: \"AvenirLight\"; font-size: 20px; text-transform: uppercase; color: #03a9f5;}\n.add_header{ display: flex; margin: 0 16px;}\n.add_header button{ margin-left: auto;\n  background: linear-gradient(180deg, #fac855, #e47e2a)!important;\n  text-transform: uppercase;\n  font-family: \"RobotoBlack\"; padding-top: 4px;\n}\n.patient_preview { align-items: center; justify-content: center; margin-top: 50px; height: auto; padding: 16px; }\n.patient_preview button{  background: #1dbce9; font-size: 18px; text-transform: uppercase; font-family: \"AvenirBlack\"; border-radius: 0; padding: 4px 16px;  color: #fff;\n  margin: 0 5px;\n}\n.patient_preview button:first-child{ margin-left: 0;}\n.patient_preview button:last-child{ margin-right: o; background: var(--button-color3);}\n/*left part css end here*/\n.mat-elevation-z5 { position: relative; }\n.sticky {\n  position: fixed; z-index: 1; top: 6px; max-height: 80%; overflow: auto; }\n.stickyRight{ margin-left: 50%!important;}\n.document_wrapper{\n  width: 100%;\n  position: relative;\n  margin-bottom: 0;\n  box-shadow: 0px 4px 5px 0px #a5a5a5;\n  border: 1px solid #c7c7c7;\n  display: block;\n  box-sizing: border-box; }\n.document_wrapper button{ position: absolute;\n  top: 40%;\n  background: linear-gradient(45deg, #45bdf5, #23aaeb);\n  font-size: 18px; \n  color: white;\n  line-height: inherit; }\n.document_wrapper .prev{ left: 20px;}\n.document_wrapper .next{ right: 20px;}\n.imageGallery {height: 100%; display: block; text-align: center; padding: 16px 0;}\n.imageGallery img{ max-width: 100%; height: auto;  min-width: 100%;}\n.document_wrapper .itemCounter{ display: block;\n  text-align: center;\n  margin: 0;\n  padding: 16px;\n  font-family: \"Helvetica\";\n  font-size: 18px;\n  background: #000000;\n  color: #fff;\n}\n.select_wrp{ width: 200px;\n  border: 1px solid #909090;\n  padding: 5px;\n  box-sizing: border-box;\n  margin-right: 5px;  font-family: 'AvenirBlack';\n}\n/* media css */\n@media screen and (max-width: 1660px){\n  .patient_report_wrapper{ margin-bottom: 50px; } \n}\n@media screen and (max-width: 1500px){\n  .patient_report_wrapper{ margin-bottom: 48px; }\n}\n@media screen and (max-width: 1460px){\n  .techdashboard_header .mat-toolbar-row .quotation p { font-size: 24px; line-height: 26px;}\n}\n@media screen and (max-width: 1366px){ \n.document_wrapper.next{ left: 434px; }\n .patient_report_wrapper{ margin-bottom: 40px; } \n}\n@media screen and (max-width: 1340px){\n  .patient_report_wrapper { margin-bottom: 20px; }\n}\n@media screen and (max-width: 1199px){\n  .patient_report_wrapper .patient_item_section {  width: 100%; }\n  .sticky { position: inherit; top: 0; max-height: inherit; overflow: inherit; }\n  .stickyRight { margin-left: 0%!important; }\n}\n@media screen and (max-width: 1000px){\n  .add_form .submit_form button { width: 48%; }\n}\n@media screen and (max-width: 991px){\n.techdashboard_header .mat-toolbar-row { flex-direction: column; padding: 20px;}\n.techdashboard_header .mat-toolbar-row .quotation p { margin-top: 16px; }\n}\n@media screen and (max-width: 768px){\n  .add_form .form_wrapper .mat-form-field { width: 100%; margin: 0; }\n}\n@media screen and (max-width: 576px){\n.add_form .submit_form button { font-size: 22px; padding: 2px; }\n\n.add_form .submit_form button { width: 100%; margin: 0; margin-top: 20px; }\n.add_form .submit_form { display: flex; flex-direction: column-reverse; text-align: center; margin-top: 0px; }\n.add_form .submit_form button:nth-child(1) { margin-right: 0; margin-top: 20px; }\n}\n@media screen and (max-width: 360px){\n.techdashboard_header .mat-toolbar-row .quotation p { font-size: 16px; line-height: 22px; }\n.add_form h2 { font-size: 22px; line-height: 24px; text-align: center; }\n}\n.width-md {\n  width: 32%;\n}\n\n/*# sourceMappingURL=data:application/json;base64, */";
    /***/
  },

  /***/
  "./src/app/components/doctor/doctor-dashboard/patient-report-view/patient-report-view.component.ts":
  /*!*********************************************************************************************************!*\
    !*** ./src/app/components/doctor/doctor-dashboard/patient-report-view/patient-report-view.component.ts ***!
    \*********************************************************************************************************/

  /*! exports provided: PatientReportViewComponent */

  /***/
  function srcAppComponentsDoctorDoctorDashboardPatientReportViewPatientReportViewComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PatientReportViewComponent", function () {
      return PatientReportViewComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var _common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../../../common/dialog-box/dialog-box.component */
    "./src/app/components/common/dialog-box/dialog-box.component.ts");
    /* harmony import */


    var _class_common_common_function__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ../../../../class/common/common-function */
    "./src/app/class/common/common-function.ts");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! ../../../../../environments/environment */
    "./src/environments/environment.ts");

    var PatientReportViewComponent = /*#__PURE__*/function () {
      function PatientReportViewComponent(fb, activeRoute, router, httpService, datePipe, cookie, snakBar, dialog, commonFunction) {
        var _this193 = this;

        _classCallCheck(this, PatientReportViewComponent);

        this.fb = fb;
        this.activeRoute = activeRoute;
        this.router = router;
        this.httpService = httpService;
        this.datePipe = datePipe;
        this.cookie = cookie;
        this.snakBar = snakBar;
        this.dialog = dialog;
        this.commonFunction = commonFunction; // sticky scroll

        this.isSticky = false;
        this.htmlText = {
          nav: 'Add Patient',
          header: "Physician Report",
          allResolveData: "",
          sliderCount: 0,
          sendToBiller: true,
          sendButton: ["Sign & Back", "Sign & Next"],
          defaultLoadingImage: "https://www.drupal.org/files/issues/throbber_12.gif"
        };
        this.cookiesData = {};
        this.cookiesData = this.cookie.getAll();
        this.cookiesData.user_details = JSON.parse(this.cookiesData.user_details);

        if (this.cookiesData.user_details.user_type == 'doctor' || this.cookiesData.user_details.user_type == 'diagnostic_admin') {
          this.getBiller(this.cookiesData.user_details._id);
        }

        if ((typeof this.cookiesData.doctor_signature == 'undefined' || this.cookiesData.doctor_signature == '') && this.cookiesData.user_details.user_type == 'doctor' && typeof this.cookiesData.user_details.diagnostic_admin_id == 'undefined') {
          /* Open modal */
          var modalData = {
            panelClass: 'bulkupload-dialog',
            data: {
              header: "Message",
              message: "Please upload your signature first.",
              button1: {
                text: "Upload"
              },
              button2: {
                text: "Close"
              }
            }
          };
          this.openModal(modalData);
          this.dialogRef.afterClosed().subscribe(function (result) {
            switch (result) {
              case "Upload":
                _this193.dialogRef.close();

                _this193.router.navigateByUrl('/doctor/signature-management?view=' + activeRoute.snapshot.params._id);

                break;

              case "Close":
                _this193.dialogRef.close();

                _this193.router.navigateByUrl('/doctor/dashboard');

                break;
            }
          });
        }
      }

      _createClass(PatientReportViewComponent, [{
        key: "checkScroll",
        value: function checkScroll() {
          this.isSticky = window.pageYOffset >= 250;
        }
      }, {
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this194 = this;

          this.activeRoute.data.forEach(function (data) {
            _this194.htmlText.allResolveData = data.data.data;

            for (var loopIndex in _this194.htmlText.allResolveData.reportData[0].images) {
              _this194.htmlText.allResolveData.reportData[0].images[loopIndex].image_url = _this194.htmlText.allResolveData.reportData[0].file_basepath + _this194.htmlText.allResolveData.reportData[0].images[loopIndex].name;
              _this194.htmlText.allResolveData.reportData[0].images[loopIndex].show = false;
            }

            _this194.htmlText.orginalData = data.data.data_2[0];

            if (typeof _this194.cookiesData.doctor_signature != 'undefined') {
              _this194.htmlText.orginalData.doctor_signature = _this194.cookiesData.doctor_signature;
            } else {
              _this194.htmlText.orginalData.doctor_signature = "";
            }

            if (typeof _this194.htmlText.allResolveData.reportData[0].stressi != 'undefined') {
              _this194.htmlText.allResolveData.reportData[0].stressI = _this194.htmlText.allResolveData.reportData[0].stressi;
            }

            var BMI_flag = _this194.htmlText.allResolveData.reportData[0].BMI * 10;
            _this194.htmlText.allResolveData.reportData[0].BMI_flag = BMI_flag;
          });

          if (typeof this.cookiesData.user_details.diagnostic_admin_id != 'undefined') {
            this.htmlText.sendToBiller = false;
          }
        }
      }, {
        key: "getBiller",
        value: function getBiller(id) {
          var _this195 = this;

          var data = {
            "source": "biller_by_doctor_id",
            "condition": {
              "_id_object": id
            },
            "token": this.cookiesData.jwtToken
          };

          if (this.cookiesData.user_details.user_type == 'diagnostic_admin') {
            data.source = "data_pece";
            data.condition["parent_id_object"] = this.cookiesData.user_details._id;
            delete data.condition._id_object;
            this.htmlText.sendButton[0] = "Send & Back";
            this.htmlText.sendButton[1] = "Send & Next";
          }

          this.httpService.httpViaPost('datalist', data).subscribe(function (response) {
            _this195.htmlText.billers = response.res;
          });
        }
      }, {
        key: "playSlider",
        value: function playSlider(action) {
          switch (action) {
            case 'preview':
              if (this.htmlText.sliderCount == 0) {
                this.htmlText.sliderCount = this.htmlText.allResolveData.reportData[0].images.length - 1;
              } else {
                this.htmlText.sliderCount--;
              }

              break;

            case 'next':
              if (this.htmlText.sliderCount + 1 == this.htmlText.allResolveData.reportData[0].images.length) {
                this.htmlText.sliderCount = 0;
              } else {
                this.htmlText.sliderCount++;
              }

              break;
          }
        }
      }, {
        key: "reportSign",
        value: function reportSign() {
          var _this196 = this;

          var flug = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'default';

          if (typeof this.htmlText.billers !== 'undefined' && this.htmlText.billers != '' || this.cookiesData.user_details.parent_type != 'distributor') {
            var confirmDialogMsg = "Do you want to sign this report ?";

            if (this.cookiesData.user_details.parent_type != 'distributor') {
              var billerName = this.htmlText.billers[this.htmlText.billerArrayIndex].firstname + ' ' + this.htmlText.billers[this.htmlText.billerArrayIndex].lastname;
              var billerEmail = this.htmlText.billers[this.htmlText.billerArrayIndex].email;
              var billerID = this.htmlText.billers[this.htmlText.billerArrayIndex].biller_id;
              confirmDialogMsg = "Do you want to send this report to biller: " + billerName + " ?";
            }

            var modalData = {
              panelClass: 'bulkupload-dialog',
              data: {
                header: "Message",
                message: confirmDialogMsg,
                button1: {
                  text: "Yes"
                },
                button2: {
                  text: "No"
                }
              }
            };
            this.openModal(modalData);
            this.dialogRef.afterClosed().subscribe(function (result) {
              switch (result) {
                case "Yes":
                  var data = {
                    "source": "data_pece",
                    "data": {
                      "bill_generation_date": new Date(),
                      "bill_sent_date": new Date(),
                      "doctor_signature": _this196.cookiesData.doctor_signature,
                      "download_link": _environments_environment__WEBPACK_IMPORTED_MODULE_10__["environment"].siteBaseUrl + 'download/super-bill/' + _this196.htmlText.allResolveData.reportData[0]._id,
                      "file_path": "",
                      "download_password": "",
                      "details": _this196.htmlText.allResolveData.details,
                      "provide_description": _this196.htmlText.allResolveData.provide_description,
                      "status": "Send to Biller"
                    },
                    "report_id": _this196.htmlText.allResolveData.reportData[0]._id
                  };

                  if (_this196.cookiesData.user_details.parent_type != 'distributor') {
                    data.biller_id = billerID;
                    data.biller_name = billerName;
                    data.biller_email = billerEmail;
                  }

                  data.data["id"] = _this196.activeRoute.snapshot.params._id;

                  _this196.httpService.httpViaPost("report-sign-send-to-biller", data).subscribe(function (response) {
                    if (response.status = "success") {
                      switch (flug) {
                        case 'back':
                          _this196.dialogRef.close();

                          _this196.router.navigateByUrl('/doctor/dashboard');

                          break;

                        case 'next':
                          _this196.dialogRef.close();

                          _this196.router.navigateByUrl('/doctor/dashboard');

                          break;

                        default:
                          break;
                      }
                    }
                  });

                  break;

                case "No":
                  _this196.dialogRef.close();

                  break;
              }
            });
          } else {
            var _modalData2 = {
              panelClass: 'bulkupload-dialog',
              data: {
                header: "Message",
                message: "Select a biller first.",
                button1: {
                  text: ""
                },
                button2: {
                  text: "OK"
                }
              }
            };
            this.openModal(_modalData2);
          }
        }
      }, {
        key: "openModal",
        value: function openModal(data) {
          this.dialogRef = this.dialog.open(_common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_8__["DialogBoxComponent"], data);
        }
      }]);

      return PatientReportViewComponent;
    }();

    PatientReportViewComponent.ctorParameters = function () {
      return [{
        type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__["HttpServiceService"]
      }, {
        type: _angular_common__WEBPACK_IMPORTED_MODULE_5__["DatePipe"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_6__["CookieService"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatSnackBar"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatDialog"]
      }, {
        type: _class_common_common_function__WEBPACK_IMPORTED_MODULE_9__["CommonFunction"]
      }];
    };

    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["HostListener"])('window:scroll')], PatientReportViewComponent.prototype, "checkScroll", null);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroupDirective"], {
      "static": false
    })], PatientReportViewComponent.prototype, "formDirective", void 0);
    PatientReportViewComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-patient-report-view',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./patient-report-view.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor/doctor-dashboard/patient-report-view/patient-report-view.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./patient-report-view.component.css */
      "./src/app/components/doctor/doctor-dashboard/patient-report-view/patient-report-view.component.css"))["default"]]
    })], PatientReportViewComponent);
    /***/
  },

  /***/
  "./src/app/components/doctor/doctor-dashboard/patient-report-view/system-superbill/system-superbill.component.css":
  /*!************************************************************************************************************************!*\
    !*** ./src/app/components/doctor/doctor-dashboard/patient-report-view/system-superbill/system-superbill.component.css ***!
    \************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsDoctorDoctorDashboardPatientReportViewSystemSuperbillSystemSuperbillComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = ".system_superbill_wrapper { display: block; width: 100%; margin: 20px auto; } \n.table_one { border: 1px solid #333; width: 100%; padding: 12px; box-sizing: border-box; font-family: 'AvenirMedium'; } \n.top_header { text-align: center; font-family: \"AvenirBlack\"; font-size: 24px; line-height:24px; margin: 5px; padding-bottom: 14px; display: block; } \n.fifty { width: 50%; } \n.fifty p{ line-height: 22px; margin: 0;} \n.table_two { border-top: 2px solid #000; width: 100%; font-family: 'AvenirMedium'; } \n.table2_header { color: #d40505;\n  text-align: center;\n  font-size: 20px;\n  font-family: \"AvenirBlack\";\n  margin: 10px 0;\n  padding-bottom: 0px;} \ninput[type=\"text\"]{\n  height: 40px;\n  padding: 2px 10px;\n  border: none;\n  border-bottom: 1px solid #000;\n  background: #ececec; \n} \ninput[type=\"text\"]:focus{ outline: none;  } \n.line_link{ text-align: center; display: block; margin: 20px; color: #0808c3; font-family: \"AvenirMedium\";} \ninput[type=\"checkbox\"]:checked {\n  /* box-shadow: 0 0 0 3px hotpink; */\n  position: relative; margin-right: 6px;\n} \ninput[type=\"checkbox\"]:checked::before{\n  content: 'x';\n  position: absolute;\n  background: #fff;\n  width: 100%;\n  height: auto;\n  color: #ff0707;\n  left: -1px;\n  display: flex;\n  justify-content: center;\n  border: .5px solid #807f7f;\n  line-height: 8px;\n  box-sizing: border-box;\n  top: -1px;\n  border-radius: 2px;\n  font-weight: bold;\n  font-size: 16px;\n  padding: 2px 7px 3px;\n} \n.signaturefont { font-family: \"AmandaSignature\"; font-size: 30px; line-height: 58px; height: 40px; padding: 10px 25px; box-sizing: border-box; background: #fff;\n  border-bottom: 1px solid #000; color: rgb(7, 7, 253); } \n/* responsive table */ \n/* \nGeneric Styling, for Desktops/Laptops \n*/ \ntable { \n  width: 100%; \n  border-collapse: collapse; \n} \ntd, th { \n  padding: 6px; \n  border: 1px solid #ccc; \n} \n.gender{ width: 135px;} \n@media screen and (max-width: 700px) {\n .fifty{ width: 100%;}\n  table { order: 0; }\n  td label span{ display: none;}\n  .gender{ width: auto; }\n  input[type=\"text\"] { width: 50%; }\n  table caption { font-size: 1.3em; }    \n  table thead {\n      border: none;\n      clip: rect(0 0 0 0);\n      height: 1px;\n      margin: -1px;\n      overflow: hidden;\n      padding: 0;\n      position: absolute;\n      width: 1px;\n    }\n    \n    table tr {\n      border-bottom: 3px solid #ddd;\n      display: block;\n      margin-bottom: .625em;\n    }\n    \n    table td {\n      border-bottom: 1px solid #ddd;\n      display: block;\n      font-size: .8em;\n      text-align: right;\n    }\n    \n    table td::before {\n      /*\n      * aria-label has no advantage, it won't be read inside a table\n      content: attr(aria-label);\n      */\n      content: attr(data-label);\n      float: left;\n      font-weight: bold;\n      text-transform: uppercase;\n    }\n    \ntable td:last-child {\n  border-bottom: 0;\n}\n.table_two tr{ display: inline; border-bottom: 0;}\n.table_two tr td{\n  display: inline-block; width:25%; text-align:center;\n}\n.table_two tr td:last-child{\n  border-bottom: 1px solid #ddd;\n}\n} \n@media screen and (max-width: 420px) {\n\n  .top_header { font-size: 18px; line-height: inherit; margin: 0;\n    padding-bottom: 0; border-bottom: none; }\n  .table2_header { font-size: 16px; }\n  .table_two tr td { width: 50%; }\n  .line_link { margin: 10px 0 0; }\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kb2N0b3IvZG9jdG9yLWRhc2hib2FyZC9wYXRpZW50LXJlcG9ydC12aWV3L3N5c3RlbS1zdXBlcmJpbGwvc3lzdGVtLXN1cGVyYmlsbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDRCQUE0QixjQUFjLEVBQUUsV0FBVyxFQUFFLGlCQUFpQixFQUFFO0FBQzVFLGFBQWEsc0JBQXNCLEVBQUUsV0FBVyxFQUFFLGFBQWEsRUFBRSxzQkFBc0IsRUFBRSwyQkFBMkIsRUFBRTtBQUN0SCxjQUFjLGtCQUFrQixFQUFFLDBCQUEwQixFQUFFLGVBQWUsRUFBRSxnQkFBZ0IsRUFBRSxXQUFXLEVBQUUsb0JBQW9CLEVBQUUsY0FBYyxFQUFFO0FBRXBKLFNBQVMsVUFBVSxFQUFFO0FBQ3JCLFVBQVUsaUJBQWlCLEVBQUUsU0FBUyxDQUFDO0FBQ3ZDLGFBQWEsMEJBQTBCLEVBQUUsV0FBVyxFQUFFLDJCQUEyQixFQUFFO0FBQ2xGLGlCQUFpQixjQUFjO0VBQzlCLGtCQUFrQjtFQUNsQixlQUFlO0VBQ2YsMEJBQTBCO0VBQzFCLGNBQWM7RUFDZCxtQkFBbUIsQ0FBQztBQUV0QjtFQUNFLFlBQVk7RUFDWixpQkFBaUI7RUFDakIsWUFBWTtFQUNaLDZCQUE2QjtFQUM3QixtQkFBbUI7QUFDckI7QUFDQSwwQkFBMEIsYUFBYSxHQUFHO0FBRTFDLFlBQVksa0JBQWtCLEVBQUUsY0FBYyxFQUFFLFlBQVksRUFBRSxjQUFjLEVBQUUsMkJBQTJCLENBQUM7QUFDMUc7RUFDRSxtQ0FBbUM7RUFDbkMsa0JBQWtCLEVBQUUsaUJBQWlCO0FBQ3ZDO0FBQ0E7RUFDRSxZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixXQUFXO0VBQ1gsWUFBWTtFQUNaLGNBQWM7RUFDZCxVQUFVO0VBQ1YsYUFBYTtFQUViLHVCQUF1QjtFQUN2QiwwQkFBMEI7RUFDMUIsZ0JBQWdCO0VBQ2hCLHNCQUFzQjtFQUN0QixTQUFTO0VBQ1Qsa0JBQWtCO0VBQ2xCLGlCQUFpQjtFQUNqQixlQUFlO0VBQ2Ysb0JBQW9CO0FBQ3RCO0FBR0EsaUJBQWlCLDhCQUE4QixFQUFFLGVBQWUsRUFBRSxpQkFBaUIsRUFBRSxZQUFZLEVBQUUsa0JBQWtCLEVBQUUsc0JBQXNCLEVBQUUsZ0JBQWdCO0VBQzdKLDZCQUE2QixFQUFFLHFCQUFxQixFQUFFO0FBRXRELHFCQUFxQjtBQUV2Qjs7Q0FFQztBQUNEO0VBQ0UsV0FBVztFQUNYLHlCQUF5QjtBQUMzQjtBQUVBO0VBQ0UsWUFBWTtFQUNaLHNCQUFzQjtBQUN4QjtBQUdBLFNBQVMsWUFBWSxDQUFDO0FBT3RCO0NBQ0MsUUFBUSxXQUFXLENBQUM7RUFDbkIsUUFBUSxRQUFRLEVBQUU7RUFDbEIsZUFBZSxhQUFhLENBQUM7RUFDN0IsU0FBUyxXQUFXLEVBQUU7RUFDdEIscUJBQXFCLFVBQVUsRUFBRTtFQUNqQyxnQkFBZ0IsZ0JBQWdCLEVBQUU7RUFDbEM7TUFDSSxZQUFZO01BQ1osbUJBQW1CO01BQ25CLFdBQVc7TUFDWCxZQUFZO01BQ1osZ0JBQWdCO01BQ2hCLFVBQVU7TUFDVixrQkFBa0I7TUFDbEIsVUFBVTtJQUNaOztJQUVBO01BQ0UsNkJBQTZCO01BQzdCLGNBQWM7TUFDZCxxQkFBcUI7SUFDdkI7O0lBRUE7TUFDRSw2QkFBNkI7TUFDN0IsY0FBYztNQUNkLGVBQWU7TUFDZixpQkFBaUI7SUFDbkI7O0lBRUE7TUFDRTs7O09BR0M7TUFDRCx5QkFBeUI7TUFDekIsV0FBVztNQUNYLGlCQUFpQjtNQUNqQix5QkFBeUI7SUFDM0I7O0FBRUo7RUFDRSxnQkFBZ0I7QUFDbEI7QUFDQSxlQUFlLGVBQWUsRUFBRSxnQkFBZ0IsQ0FBQztBQUNqRDtFQUNFLHFCQUFxQixFQUFFLFNBQVMsRUFBRSxpQkFBaUI7QUFDckQ7QUFDQTtFQUNFLDZCQUE2QjtBQUMvQjtBQUNBO0FBR0E7O0VBRUUsY0FBYyxlQUFlLEVBQUUsb0JBQW9CLEVBQUUsU0FBUztJQUM1RCxpQkFBaUIsRUFBRSxtQkFBbUIsRUFBRTtFQUMxQyxpQkFBaUIsZUFBZSxFQUFFO0VBQ2xDLG1CQUFtQixVQUFVLEVBQUU7RUFDL0IsYUFBYSxnQkFBZ0IsRUFBRTtBQUNqQyIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZG9jdG9yL2RvY3Rvci1kYXNoYm9hcmQvcGF0aWVudC1yZXBvcnQtdmlldy9zeXN0ZW0tc3VwZXJiaWxsL3N5c3RlbS1zdXBlcmJpbGwuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zeXN0ZW1fc3VwZXJiaWxsX3dyYXBwZXIgeyBkaXNwbGF5OiBibG9jazsgd2lkdGg6IDEwMCU7IG1hcmdpbjogMjBweCBhdXRvOyB9IFxuLnRhYmxlX29uZSB7IGJvcmRlcjogMXB4IHNvbGlkICMzMzM7IHdpZHRoOiAxMDAlOyBwYWRkaW5nOiAxMnB4OyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBmb250LWZhbWlseTogJ0F2ZW5pck1lZGl1bSc7IH1cbi50b3BfaGVhZGVyIHsgdGV4dC1hbGlnbjogY2VudGVyOyBmb250LWZhbWlseTogXCJBdmVuaXJCbGFja1wiOyBmb250LXNpemU6IDI0cHg7IGxpbmUtaGVpZ2h0OjI0cHg7IG1hcmdpbjogNXB4OyBwYWRkaW5nLWJvdHRvbTogMTRweDsgZGlzcGxheTogYmxvY2s7IH1cblxuLmZpZnR5IHsgd2lkdGg6IDUwJTsgfVxuLmZpZnR5IHB7IGxpbmUtaGVpZ2h0OiAyMnB4OyBtYXJnaW46IDA7fVxuLnRhYmxlX3R3byB7IGJvcmRlci10b3A6IDJweCBzb2xpZCAjMDAwOyB3aWR0aDogMTAwJTsgZm9udC1mYW1pbHk6ICdBdmVuaXJNZWRpdW0nOyB9XG4gLnRhYmxlMl9oZWFkZXIgeyBjb2xvcjogI2Q0MDUwNTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXNpemU6IDIwcHg7XG4gIGZvbnQtZmFtaWx5OiBcIkF2ZW5pckJsYWNrXCI7XG4gIG1hcmdpbjogMTBweCAwO1xuICBwYWRkaW5nLWJvdHRvbTogMHB4O31cblxuaW5wdXRbdHlwZT1cInRleHRcIl17XG4gIGhlaWdodDogNDBweDtcbiAgcGFkZGluZzogMnB4IDEwcHg7XG4gIGJvcmRlcjogbm9uZTtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICMwMDA7XG4gIGJhY2tncm91bmQ6ICNlY2VjZWM7IFxufVxuaW5wdXRbdHlwZT1cInRleHRcIl06Zm9jdXN7IG91dGxpbmU6IG5vbmU7ICB9XG5cbi5saW5lX2xpbmt7IHRleHQtYWxpZ246IGNlbnRlcjsgZGlzcGxheTogYmxvY2s7IG1hcmdpbjogMjBweDsgY29sb3I6ICMwODA4YzM7IGZvbnQtZmFtaWx5OiBcIkF2ZW5pck1lZGl1bVwiO31cbmlucHV0W3R5cGU9XCJjaGVja2JveFwiXTpjaGVja2VkIHtcbiAgLyogYm94LXNoYWRvdzogMCAwIDAgM3B4IGhvdHBpbms7ICovXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgbWFyZ2luLXJpZ2h0OiA2cHg7XG59XG5pbnB1dFt0eXBlPVwiY2hlY2tib3hcIl06Y2hlY2tlZDo6YmVmb3Jle1xuICBjb250ZW50OiAneCc7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYmFja2dyb3VuZDogI2ZmZjtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogYXV0bztcbiAgY29sb3I6ICNmZjA3MDc7XG4gIGxlZnQ6IC0xcHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LXBhY2s6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGJvcmRlcjogLjVweCBzb2xpZCAjODA3ZjdmO1xuICBsaW5lLWhlaWdodDogOHB4O1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICB0b3A6IC0xcHg7XG4gIGJvcmRlci1yYWRpdXM6IDJweDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgcGFkZGluZzogMnB4IDdweCAzcHg7XG59XG4gXG5cbi5zaWduYXR1cmVmb250IHsgZm9udC1mYW1pbHk6IFwiQW1hbmRhU2lnbmF0dXJlXCI7IGZvbnQtc2l6ZTogMzBweDsgbGluZS1oZWlnaHQ6IDU4cHg7IGhlaWdodDogNDBweDsgcGFkZGluZzogMTBweCAyNXB4OyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBiYWNrZ3JvdW5kOiAjZmZmO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzAwMDsgY29sb3I6IHJnYig3LCA3LCAyNTMpOyB9XG5cbiAgLyogcmVzcG9uc2l2ZSB0YWJsZSAqL1xuXG4vKiBcbkdlbmVyaWMgU3R5bGluZywgZm9yIERlc2t0b3BzL0xhcHRvcHMgXG4qL1xudGFibGUgeyBcbiAgd2lkdGg6IDEwMCU7IFxuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyBcbn1cblxudGQsIHRoIHsgXG4gIHBhZGRpbmc6IDZweDsgXG4gIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7IFxufVxuXG5cbi5nZW5kZXJ7IHdpZHRoOiAxMzVweDt9XG5cblxuXG5cbiBcbiBcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDcwMHB4KSB7XG4gLmZpZnR5eyB3aWR0aDogMTAwJTt9XG4gIHRhYmxlIHsgb3JkZXI6IDA7IH1cbiAgdGQgbGFiZWwgc3BhbnsgZGlzcGxheTogbm9uZTt9XG4gIC5nZW5kZXJ7IHdpZHRoOiBhdXRvOyB9XG4gIGlucHV0W3R5cGU9XCJ0ZXh0XCJdIHsgd2lkdGg6IDUwJTsgfVxuICB0YWJsZSBjYXB0aW9uIHsgZm9udC1zaXplOiAxLjNlbTsgfSAgICBcbiAgdGFibGUgdGhlYWQge1xuICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgY2xpcDogcmVjdCgwIDAgMCAwKTtcbiAgICAgIGhlaWdodDogMXB4O1xuICAgICAgbWFyZ2luOiAtMXB4O1xuICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgIHBhZGRpbmc6IDA7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB3aWR0aDogMXB4O1xuICAgIH1cbiAgICBcbiAgICB0YWJsZSB0ciB7XG4gICAgICBib3JkZXItYm90dG9tOiAzcHggc29saWQgI2RkZDtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgbWFyZ2luLWJvdHRvbTogLjYyNWVtO1xuICAgIH1cbiAgICBcbiAgICB0YWJsZSB0ZCB7XG4gICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2RkZDtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgZm9udC1zaXplOiAuOGVtO1xuICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gICAgfVxuICAgIFxuICAgIHRhYmxlIHRkOjpiZWZvcmUge1xuICAgICAgLypcbiAgICAgICogYXJpYS1sYWJlbCBoYXMgbm8gYWR2YW50YWdlLCBpdCB3b24ndCBiZSByZWFkIGluc2lkZSBhIHRhYmxlXG4gICAgICBjb250ZW50OiBhdHRyKGFyaWEtbGFiZWwpO1xuICAgICAgKi9cbiAgICAgIGNvbnRlbnQ6IGF0dHIoZGF0YS1sYWJlbCk7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICB9XG4gICAgXG50YWJsZSB0ZDpsYXN0LWNoaWxkIHtcbiAgYm9yZGVyLWJvdHRvbTogMDtcbn1cbi50YWJsZV90d28gdHJ7IGRpc3BsYXk6IGlubGluZTsgYm9yZGVyLWJvdHRvbTogMDt9XG4udGFibGVfdHdvIHRyIHRke1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IHdpZHRoOjI1JTsgdGV4dC1hbGlnbjpjZW50ZXI7XG59XG4udGFibGVfdHdvIHRyIHRkOmxhc3QtY2hpbGR7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGRkO1xufVxufVxuXG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyMHB4KSB7XG5cbiAgLnRvcF9oZWFkZXIgeyBmb250LXNpemU6IDE4cHg7IGxpbmUtaGVpZ2h0OiBpbmhlcml0OyBtYXJnaW46IDA7XG4gICAgcGFkZGluZy1ib3R0b206IDA7IGJvcmRlci1ib3R0b206IG5vbmU7IH1cbiAgLnRhYmxlMl9oZWFkZXIgeyBmb250LXNpemU6IDE2cHg7IH1cbiAgLnRhYmxlX3R3byB0ciB0ZCB7IHdpZHRoOiA1MCU7IH1cbiAgLmxpbmVfbGluayB7IG1hcmdpbjogMTBweCAwIDA7IH1cbn0iXX0= */";
    /***/
  },

  /***/
  "./src/app/components/doctor/doctor-dashboard/patient-report-view/system-superbill/system-superbill.component.ts":
  /*!***********************************************************************************************************************!*\
    !*** ./src/app/components/doctor/doctor-dashboard/patient-report-view/system-superbill/system-superbill.component.ts ***!
    \***********************************************************************************************************************/

  /*! exports provided: SystemSuperbillComponent */

  /***/
  function srcAppComponentsDoctorDoctorDashboardPatientReportViewSystemSuperbillSystemSuperbillComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "SystemSuperbillComponent", function () {
      return SystemSuperbillComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");

    var SystemSuperbillComponent = /*#__PURE__*/function () {
      function SystemSuperbillComponent(activatedRoute, httpService, cookie, fb, router, datePipe) {
        _classCallCheck(this, SystemSuperbillComponent);

        this.activatedRoute = activatedRoute;
        this.httpService = httpService;
        this.cookie = cookie;
        this.fb = fb;
        this.router = router;
        this.datePipe = datePipe;
        this.R000Text = "R00.0 Tachycardia, unspecified Abnormal Heart Rhythm & Electrical Stability";
        this.htmlText = {
          nav: 'Add Patient',
          header: "Physician Report"
        };
        this.cookiesData = this.cookie.getAll();
        this.cookiesData.user_details = JSON.parse(this.cookiesData.user_details); //this.getPatientData(this.activatedRoute.snapshot.params._id);
      }

      _createClass(SystemSuperbillComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          this.orginalReportDetails.patient_details[0].insurance_details = {};
          this.orginalReportDetails.patient_details[0].insurance_details.insurancename = '';

          switch (this.orginalReportDetails.patient_details[0].gender) {
            case 'male':
              this.orginalReportDetails.patient_details[0].gender_male_flag = true;
              this.orginalReportDetails.patient_details[0].gender_female_flag = false;
              break;

            case 'female':
              this.orginalReportDetails.patient_details[0].gender_male_flag = false;
              this.orginalReportDetails.patient_details[0].gender_female_flag = true;
              break;
          } // console.log("additional_potential_health_risks: ", this.orginalReportDetails.additional_potential_health_risks);
          // console.log("r00_description: ", this.orginalReportDetails.r00_description);
          // console.log("icd_codes: ", this.orginalReportDetails.icd_codes);
          // console.log("cpt_codes: ", this.orginalReportDetails.cpt_codes);


          if (this.orginalReportDetails.patient_details[0].doctor_details.length == 0) {
            this.orginalReportDetails.patient_details[0].doctor_details.push({
              firstname: 'Not',
              lastname: 'Found'
            });
          }

          if (typeof this.orginalReportDetails.patient_details[0].insurance_id != 'undefined' && this.orginalReportDetails.patient_details[0].insurance_id != '') {
            this.getInsuranceData('');
          } else {
            this.orginalReportDetails.patient_details[0].insurance_details = {
              insurancename: ''
            };
          }

          if (typeof this.reportDetails.reportData[0].BMI != 'undefined') {
            this.reportDetails.reportData[0].BMI_flag = Math.round(this.reportDetails.reportData[0].BMI * 10);

            if (this.reportDetails.reportData[0].BMI_flag >= 290 && this.reportDetails.reportData[0].BMI_flag < 300) {
              this.reportDetails.reportData[0].BMI29 = true;
            }

            if (this.reportDetails.reportData[0].BMI_flag >= 330 && this.reportDetails.reportData[0].BMI_flag < 340) {
              this.reportDetails.reportData[0].BMI33 = true;
            }

            if (this.reportDetails.reportData[0].BMI_flag >= 370 && this.reportDetails.reportData[0].BMI_flag < 380) {
              this.reportDetails.reportData[0].BMI37 = true;
            }

            if (this.reportDetails.reportData[0].BMI_flag >= 450 && this.reportDetails.reportData[0].BMI_flag < 500) {
              this.reportDetails.reportData[0].BMI45 = true;
            }

            if (this.reportDetails.reportData[0].BMI_flag >= 300 && this.reportDetails.reportData[0].BMI_flag < 310) {
              this.reportDetails.reportData[0].BMI30 = true;
            }

            if (this.reportDetails.reportData[0].BMI_flag >= 340 && this.reportDetails.reportData[0].BMI_flag < 350) {
              this.reportDetails.reportData[0].BMI34 = true;
            }

            if (this.reportDetails.reportData[0].BMI_flag >= 380 && this.reportDetails.reportData[0].BMI_flag < 390) {
              this.reportDetails.reportData[0].BMI38 = true;
            }

            if (this.reportDetails.reportData[0].BMI_flag >= 500 && this.reportDetails.reportData[0].BMI_flag < 600) {
              this.reportDetails.reportData[0].BMI50 = true;
            }

            if (this.reportDetails.reportData[0].BMI_flag >= 310 && this.reportDetails.reportData[0].BMI_flag < 320) {
              this.reportDetails.reportData[0].BMI31 = true;
            }

            if (this.reportDetails.reportData[0].BMI_flag >= 350 && this.reportDetails.reportData[0].BMI_flag < 360) {
              this.reportDetails.reportData[0].BMI31 = true;
            }

            if (this.reportDetails.reportData[0].BMI_flag >= 390 && this.reportDetails.reportData[0].BMI_flag < 400) {
              this.reportDetails.reportData[0].BMI39 = true;
            }

            if (this.reportDetails.reportData[0].BMI_flag >= 600 && this.reportDetails.reportData[0].BMI_flag < 700) {
              this.reportDetails.reportData[0].BMI60 = true;
            }

            if (this.reportDetails.reportData[0].BMI_flag >= 320 && this.reportDetails.reportData[0].BMI_flag < 330) {
              this.reportDetails.reportData[0].BMI32 = true;
            }

            if (this.reportDetails.reportData[0].BMI_flag >= 360 && this.reportDetails.reportData[0].BMI_flag < 370) {
              this.reportDetails.reportData[0].BMI36 = true;
            }

            if (this.reportDetails.reportData[0].BMI_flag >= 400 && this.reportDetails.reportData[0].BMI_flag < 450) {
              this.reportDetails.reportData[0].BMI40 = true;
            }

            if (this.reportDetails.reportData[0].BMI_flag >= 700) {
              this.reportDetails.reportData[0].BMI70 = true;
            }
          }
        }
      }, {
        key: "getInsuranceData",
        value: function getInsuranceData(id) {
          var _this197 = this;

          var data = {
            "source": "data_pece",
            "condition": {
              "_id_object": this.orginalReportDetails.patient_details[0].insurance_id
            },
            "token": this.cookiesData.jwtToken
          };
          this.httpService.httpViaPost('datalist', data).subscribe(function (response) {
            if (response.status == true) {
              _this197.orginalReportDetails.patient_details[0].insurance_details = response.res[0];
            } else {
              _this197.orginalReportDetails.patient_details[0].insurance_details = {};
            }
          });
        }
      }, {
        key: "patientDetails",
        set: function set(patientDetailsData) {
          this.reportDetails = patientDetailsData;
        }
      }, {
        key: "orginalData",
        set: function set(orginalData) {
          this.orginalReportDetails = orginalData;
        }
      }]);

      return SystemSuperbillComponent;
    }();

    SystemSuperbillComponent.ctorParameters = function () {
      return [{
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_5__["HttpServiceService"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_4__["CookieService"]
      }, {
        type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"]
      }, {
        type: _angular_common__WEBPACK_IMPORTED_MODULE_6__["DatePipe"]
      }];
    };

    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], SystemSuperbillComponent.prototype, "patientDetails", null);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], SystemSuperbillComponent.prototype, "orginalData", null);
    SystemSuperbillComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-system-superbill',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./system-superbill.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor/doctor-dashboard/patient-report-view/system-superbill/system-superbill.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./system-superbill.component.css */
      "./src/app/components/doctor/doctor-dashboard/patient-report-view/system-superbill/system-superbill.component.css"))["default"]]
    })], SystemSuperbillComponent);
    /***/
  },

  /***/
  "./src/app/components/doctor/doctor-footer/doctor-footer.component.css":
  /*!*****************************************************************************!*\
    !*** ./src/app/components/doctor/doctor-footer/doctor-footer.component.css ***!
    \*****************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsDoctorDoctorFooterDoctorFooterComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = ".footer_section{display: block; border-top: 1px solid #c7c7c7; margin-top: 30px; }\n.footer_section .footer_content{ width: 600px; padding: 0 16px; margin: 0 auto; display: block; text-align: center; }\n.footer_section .footer_content .link{ margin-top: 10px; display: block;  }\n.footer_section .footer_content .link a:nth-of-type(1){ border-right: 1px solid #2b2b2b; padding-right: 5px; }\n.footer_section .footer_content .link a, .footer_section .footer_content .link p{ font-size: 16px; font-family: \"RobotoRegular\"; color: #2b2b2b; text-decoration: none;}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kb2N0b3IvZG9jdG9yLWZvb3Rlci9kb2N0b3ItZm9vdGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZ0JBQWdCLGNBQWMsRUFBRSw2QkFBNkIsRUFBRSxnQkFBZ0IsRUFBRTtBQUNqRixpQ0FBaUMsWUFBWSxFQUFFLGVBQWUsRUFBRSxjQUFjLEVBQUUsY0FBYyxFQUFFLGtCQUFrQixFQUFFO0FBQ3BILHVDQUF1QyxnQkFBZ0IsRUFBRSxjQUFjLEdBQUc7QUFDMUUsd0RBQXdELCtCQUErQixFQUFFLGtCQUFrQixFQUFFO0FBQzdHLGtGQUFrRixlQUFlLEVBQUUsNEJBQTRCLEVBQUUsY0FBYyxFQUFFLHFCQUFxQixDQUFDIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9kb2N0b3IvZG9jdG9yLWZvb3Rlci9kb2N0b3ItZm9vdGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9vdGVyX3NlY3Rpb257ZGlzcGxheTogYmxvY2s7IGJvcmRlci10b3A6IDFweCBzb2xpZCAjYzdjN2M3OyBtYXJnaW4tdG9wOiAzMHB4OyB9XG4uZm9vdGVyX3NlY3Rpb24gLmZvb3Rlcl9jb250ZW50eyB3aWR0aDogNjAwcHg7IHBhZGRpbmc6IDAgMTZweDsgbWFyZ2luOiAwIGF1dG87IGRpc3BsYXk6IGJsb2NrOyB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbi5mb290ZXJfc2VjdGlvbiAuZm9vdGVyX2NvbnRlbnQgLmxpbmt7IG1hcmdpbi10b3A6IDEwcHg7IGRpc3BsYXk6IGJsb2NrOyAgfVxuLmZvb3Rlcl9zZWN0aW9uIC5mb290ZXJfY29udGVudCAubGluayBhOm50aC1vZi10eXBlKDEpeyBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjMmIyYjJiOyBwYWRkaW5nLXJpZ2h0OiA1cHg7IH1cbi5mb290ZXJfc2VjdGlvbiAuZm9vdGVyX2NvbnRlbnQgLmxpbmsgYSwgLmZvb3Rlcl9zZWN0aW9uIC5mb290ZXJfY29udGVudCAubGluayBweyBmb250LXNpemU6IDE2cHg7IGZvbnQtZmFtaWx5OiBcIlJvYm90b1JlZ3VsYXJcIjsgY29sb3I6ICMyYjJiMmI7IHRleHQtZGVjb3JhdGlvbjogbm9uZTt9Il19 */";
    /***/
  },

  /***/
  "./src/app/components/doctor/doctor-footer/doctor-footer.component.ts":
  /*!****************************************************************************!*\
    !*** ./src/app/components/doctor/doctor-footer/doctor-footer.component.ts ***!
    \****************************************************************************/

  /*! exports provided: DoctorFooterComponent */

  /***/
  function srcAppComponentsDoctorDoctorFooterDoctorFooterComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DoctorFooterComponent", function () {
      return DoctorFooterComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");

    var DoctorFooterComponent = /*#__PURE__*/function () {
      function DoctorFooterComponent() {
        _classCallCheck(this, DoctorFooterComponent);

        this.htmlData = {};
        this.htmlData["year"] = new Date().getFullYear();
      }

      _createClass(DoctorFooterComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }]);

      return DoctorFooterComponent;
    }();

    DoctorFooterComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-doctor-footer',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./doctor-footer.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor/doctor-footer/doctor-footer.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./doctor-footer.component.css */
      "./src/app/components/doctor/doctor-footer/doctor-footer.component.css"))["default"]]
    })], DoctorFooterComponent);
    /***/
  },

  /***/
  "./src/app/components/doctor/doctor-header/doctor-header.component.css":
  /*!*****************************************************************************!*\
    !*** ./src/app/components/doctor/doctor-header/doctor-header.component.css ***!
    \*****************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsDoctorDoctorHeaderDoctorHeaderComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/* header css */\n\n.techdashboard_header { height: auto; padding: 0; background: #fff; box-shadow: 0px 2px 7px 2px #b7b7b7; margin: 20px 0; }\n\n.techdashboard_header .header_wrapper{ width: 1400px; margin: 0 auto; display: flex; align-items: center; justify-content: space-between;}\n\n.techdashboard_header .logo_wrapper { max-width: 160px; display: block; cursor: pointer; flex: none; }\n\n.techdashboard_header .logo_wrapper:focus { outline: none; border: none; }\n\n.techdashboard_header .logo_wrapper img { max-width: 100%; vertical-align: middle; }\n\n.techdashboard_header .quotation { margin-bottom: 0px; }\n\n.techdashboard_header .quotation p { font-family: \"AvenirMedium\"; font-size: 22px; color: #002035; text-transform: uppercase; margin: 0; word-break: break-word; white-space: normal;\n  text-align: center; line-height: 22px;}\n\n.techdashboard_header .profile_section button { padding-top: 8px; }\n\n.techdashboard_header .profile_section {  display: flex;  border-left: 1px solid #ada9a9;  padding-left: 5px;  margin-bottom: 0;  justify-content: center;  align-items: center; }\n\n.techdashboard_header .profile_section .username { padding-right: 10px;\n  display: block;\n  font-family: \"AvenirRoman\";\n  font-size: 16px;\n  color: #1f1f1f;}\n\n.techdashboard_header .quotation .mat-list-base { display: flex; padding-top: 0; }\n\n/* .techdashboard_header .quotation .mat-list-base .mat-list-item:before {\n  content: \"\";\n  left: -15px;\n  width: 2px;\n  height: 15px;\n  background: #1c1c1c;\n  display: inline-block;\n  position: absolute;\n  top: 35%;\n} */\n\n.techdashboard_header .quotation .mat-nav-list .mat-list-item { margin: 0; position: relative; font-family: \"AvenirMedium\"; font-size: 16px; color: #767676;}\n\n.active { color: #000000!important;  /* border-bottom: 3px solid #fecb00; position: relative; */}\n\n.active::before{ content: ''; width: 100%; height: 4px; background: #fecb00; position: absolute; bottom: -25px; }\n\n.togle_menu { display: none;}\n\n@media screen and (max-width: 1500px){\n  .techdashboard_header .header_wrapper { width: 90%; }\n}\n\n@media screen and (max-width: 1199px){\n.techdashboard_header .quotation p { font-size: 18px;}\n}\n\n@media screen and (max-width: 991px){\n.techdashboard_header .header_wrapper { display: flex; flex-direction: column; }\n.techdashboard_header .quotation p { margin: 10px 5px; }\n.techdashboard_header .profile_section{ border-left: 0;}\n.togle_menu { display: block; margin:auto;}\n.success{ display: block;}\n.danger{ display: none;}\n.techdashboard_header .quotation .mat-list-base { display: flex; flex-direction: column; }\n.techdashboard_header .quotation { width: 100%;}\n.active::before{ bottom: 0; height: 2px;}\n.techdashboard_header .quotation .mat-nav-list .mat-list-item { display: flex; justify-content: center; }\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kb2N0b3IvZG9jdG9yLWhlYWRlci9kb2N0b3ItaGVhZGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLGVBQWU7O0FBRWYsd0JBQXdCLFlBQVksRUFBRSxVQUFVLEVBQUUsZ0JBQWdCLEVBQUUsbUNBQW1DLEVBQUUsY0FBYyxFQUFFOztBQUN6SCx1Q0FBdUMsYUFBYSxFQUFFLGNBQWMsRUFBRSxhQUFhLEVBQUUsbUJBQW1CLEVBQUUsOEJBQThCLENBQUM7O0FBQ3pJLHNDQUFzQyxnQkFBZ0IsRUFBRSxjQUFjLEVBQUUsZUFBZSxFQUFFLFVBQVUsRUFBRTs7QUFDckcsNENBQTRDLGFBQWEsRUFBRSxZQUFZLEVBQUU7O0FBQ3pFLDBDQUEwQyxlQUFlLEVBQUUsc0JBQXNCLEVBQUU7O0FBQ25GLG1DQUFtQyxrQkFBa0IsRUFBRTs7QUFDdkQscUNBQXFDLDJCQUEyQixFQUFFLGVBQWUsRUFBRSxjQUFjLEVBQUUseUJBQXlCLEVBQUUsU0FBUyxFQUFFLHNCQUFzQixFQUFFLG1CQUFtQjtFQUNsTCxrQkFBa0IsRUFBRSxpQkFBaUIsQ0FBQzs7QUFDeEMsZ0RBQWdELGdCQUFnQixFQUFFOztBQUNsRSwwQ0FBdUYsYUFBYSxHQUFHLDhCQUE4QixHQUFHLGlCQUFpQixHQUFHLGdCQUFnQixHQUN2SCx1QkFBdUIsR0FBd0QsbUJBQW1CLEVBQUU7O0FBQ3pKLG1EQUFtRCxtQkFBbUI7RUFDcEUsY0FBYztFQUNkLDBCQUEwQjtFQUMxQixlQUFlO0VBQ2YsY0FBYyxDQUFDOztBQUVqQixrREFBOEYsYUFBYSxFQUFFLGNBQWMsRUFBRTs7QUFFN0g7Ozs7Ozs7OztHQVNHOztBQUNILGdFQUFnRSxTQUFTLEVBQUUsa0JBQWtCLEVBQUUsMkJBQTJCLEVBQUUsZUFBZSxFQUFFLGNBQWMsQ0FBQzs7QUFFNUosVUFBVSx3QkFBd0IsR0FBRywwREFBMEQsQ0FBQzs7QUFDaEcsaUJBQWlCLFdBQVcsRUFBRSxXQUFXLEVBQUUsV0FBVyxFQUFFLG1CQUFtQixFQUFFLGtCQUFrQixFQUFFLGFBQWEsRUFBRTs7QUFFaEgsY0FBYyxhQUFhLENBQUM7O0FBRTVCO0VBQ0Usd0NBQXdDLFVBQVUsRUFBRTtBQUN0RDs7QUFDQTtBQUNBLHFDQUFxQyxlQUFlLENBQUM7QUFDckQ7O0FBRUE7QUFDQSx3Q0FBd0MsYUFBYSxFQUFFLHNCQUFzQixFQUFFO0FBQy9FLHFDQUFxQyxnQkFBZ0IsRUFBRTtBQUN2RCx3Q0FBd0MsY0FBYyxDQUFDO0FBQ3ZELGNBQWMsY0FBYyxFQUFFLFdBQVcsQ0FBQztBQUMxQyxVQUFVLGNBQWMsQ0FBQztBQUN6QixTQUFTLGFBQWEsQ0FBQztBQUN2QixrREFBa0QsYUFBYSxFQUFFLHNCQUFzQixFQUFFO0FBQ3pGLG1DQUFtQyxXQUFXLENBQUM7QUFDL0MsaUJBQWlCLFNBQVMsRUFBRSxXQUFXLENBQUM7QUFDeEMsZ0VBQWdFLGFBQWEsRUFBRSx1QkFBdUIsRUFBRTtBQUN4RyIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZG9jdG9yL2RvY3Rvci1oZWFkZXIvZG9jdG9yLWhlYWRlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG4vKiBoZWFkZXIgY3NzICovXG5cbi50ZWNoZGFzaGJvYXJkX2hlYWRlciB7IGhlaWdodDogYXV0bzsgcGFkZGluZzogMDsgYmFja2dyb3VuZDogI2ZmZjsgYm94LXNoYWRvdzogMHB4IDJweCA3cHggMnB4ICNiN2I3Yjc7IG1hcmdpbjogMjBweCAwOyB9XG4udGVjaGRhc2hib2FyZF9oZWFkZXIgLmhlYWRlcl93cmFwcGVyeyB3aWR0aDogMTQwMHB4OyBtYXJnaW46IDAgYXV0bzsgZGlzcGxheTogZmxleDsgYWxpZ24taXRlbXM6IGNlbnRlcjsganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO31cbi50ZWNoZGFzaGJvYXJkX2hlYWRlciAubG9nb193cmFwcGVyIHsgbWF4LXdpZHRoOiAxNjBweDsgZGlzcGxheTogYmxvY2s7IGN1cnNvcjogcG9pbnRlcjsgZmxleDogbm9uZTsgfVxuLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5sb2dvX3dyYXBwZXI6Zm9jdXMgeyBvdXRsaW5lOiBub25lOyBib3JkZXI6IG5vbmU7IH1cbi50ZWNoZGFzaGJvYXJkX2hlYWRlciAubG9nb193cmFwcGVyIGltZyB7IG1heC13aWR0aDogMTAwJTsgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgfVxuLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5xdW90YXRpb24geyBtYXJnaW4tYm90dG9tOiAwcHg7IH1cbi50ZWNoZGFzaGJvYXJkX2hlYWRlciAucXVvdGF0aW9uIHAgeyBmb250LWZhbWlseTogXCJBdmVuaXJNZWRpdW1cIjsgZm9udC1zaXplOiAyMnB4OyBjb2xvcjogIzAwMjAzNTsgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgbWFyZ2luOiAwOyB3b3JkLWJyZWFrOiBicmVhay13b3JkOyB3aGl0ZS1zcGFjZTogbm9ybWFsO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7IGxpbmUtaGVpZ2h0OiAyMnB4O31cbi50ZWNoZGFzaGJvYXJkX2hlYWRlciAucHJvZmlsZV9zZWN0aW9uIGJ1dHRvbiB7IHBhZGRpbmctdG9wOiA4cHg7IH1cbi50ZWNoZGFzaGJvYXJkX2hlYWRlciAucHJvZmlsZV9zZWN0aW9uIHsgZGlzcGxheTogLXdlYmtpdC1ib3g7ICBkaXNwbGF5OiAtbXMtZmxleGJveDsgIGRpc3BsYXk6IGZsZXg7ICBib3JkZXItbGVmdDogMXB4IHNvbGlkICNhZGE5YTk7ICBwYWRkaW5nLWxlZnQ6IDVweDsgIG1hcmdpbi1ib3R0b206IDA7XG4gIC13ZWJraXQtYm94LXBhY2s6IGNlbnRlcjsgIC1tcy1mbGV4LXBhY2s6IGNlbnRlcjsgIGp1c3RpZnktY29udGVudDogY2VudGVyOyAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjsgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7ICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4udGVjaGRhc2hib2FyZF9oZWFkZXIgLnByb2ZpbGVfc2VjdGlvbiAudXNlcm5hbWUgeyBwYWRkaW5nLXJpZ2h0OiAxMHB4O1xuICBkaXNwbGF5OiBibG9jaztcbiAgZm9udC1mYW1pbHk6IFwiQXZlbmlyUm9tYW5cIjtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBjb2xvcjogIzFmMWYxZjt9XG5cbi50ZWNoZGFzaGJvYXJkX2hlYWRlciAucXVvdGF0aW9uIC5tYXQtbGlzdC1iYXNlIHsgZGlzcGxheTogLXdlYmtpdC1ib3g7IGRpc3BsYXk6IC1tcy1mbGV4Ym94OyBkaXNwbGF5OiBmbGV4OyBwYWRkaW5nLXRvcDogMDsgfVxuXG4vKiAudGVjaGRhc2hib2FyZF9oZWFkZXIgLnF1b3RhdGlvbiAubWF0LWxpc3QtYmFzZSAubWF0LWxpc3QtaXRlbTpiZWZvcmUge1xuICBjb250ZW50OiBcIlwiO1xuICBsZWZ0OiAtMTVweDtcbiAgd2lkdGg6IDJweDtcbiAgaGVpZ2h0OiAxNXB4O1xuICBiYWNrZ3JvdW5kOiAjMWMxYzFjO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAzNSU7XG59ICovXG4udGVjaGRhc2hib2FyZF9oZWFkZXIgLnF1b3RhdGlvbiAubWF0LW5hdi1saXN0IC5tYXQtbGlzdC1pdGVtIHsgbWFyZ2luOiAwOyBwb3NpdGlvbjogcmVsYXRpdmU7IGZvbnQtZmFtaWx5OiBcIkF2ZW5pck1lZGl1bVwiOyBmb250LXNpemU6IDE2cHg7IGNvbG9yOiAjNzY3Njc2O31cblxuLmFjdGl2ZSB7IGNvbG9yOiAjMDAwMDAwIWltcG9ydGFudDsgIC8qIGJvcmRlci1ib3R0b206IDNweCBzb2xpZCAjZmVjYjAwOyBwb3NpdGlvbjogcmVsYXRpdmU7ICovfVxuLmFjdGl2ZTo6YmVmb3JleyBjb250ZW50OiAnJzsgd2lkdGg6IDEwMCU7IGhlaWdodDogNHB4OyBiYWNrZ3JvdW5kOiAjZmVjYjAwOyBwb3NpdGlvbjogYWJzb2x1dGU7IGJvdHRvbTogLTI1cHg7IH1cblxuLnRvZ2xlX21lbnUgeyBkaXNwbGF5OiBub25lO31cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTUwMHB4KXtcbiAgLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5oZWFkZXJfd3JhcHBlciB7IHdpZHRoOiA5MCU7IH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDExOTlweCl7XG4udGVjaGRhc2hib2FyZF9oZWFkZXIgLnF1b3RhdGlvbiBwIHsgZm9udC1zaXplOiAxOHB4O31cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTkxcHgpe1xuLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5oZWFkZXJfd3JhcHBlciB7IGRpc3BsYXk6IGZsZXg7IGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IH1cbi50ZWNoZGFzaGJvYXJkX2hlYWRlciAucXVvdGF0aW9uIHAgeyBtYXJnaW46IDEwcHggNXB4OyB9XG4udGVjaGRhc2hib2FyZF9oZWFkZXIgLnByb2ZpbGVfc2VjdGlvbnsgYm9yZGVyLWxlZnQ6IDA7fVxuLnRvZ2xlX21lbnUgeyBkaXNwbGF5OiBibG9jazsgbWFyZ2luOmF1dG87fVxuLnN1Y2Nlc3N7IGRpc3BsYXk6IGJsb2NrO31cbi5kYW5nZXJ7IGRpc3BsYXk6IG5vbmU7fVxuLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5xdW90YXRpb24gLm1hdC1saXN0LWJhc2UgeyBkaXNwbGF5OiBmbGV4OyBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyB9XG4udGVjaGRhc2hib2FyZF9oZWFkZXIgLnF1b3RhdGlvbiB7IHdpZHRoOiAxMDAlO31cbi5hY3RpdmU6OmJlZm9yZXsgYm90dG9tOiAwOyBoZWlnaHQ6IDJweDt9XG4udGVjaGRhc2hib2FyZF9oZWFkZXIgLnF1b3RhdGlvbiAubWF0LW5hdi1saXN0IC5tYXQtbGlzdC1pdGVtIHsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cbn1cbiJdfQ== */";
    /***/
  },

  /***/
  "./src/app/components/doctor/doctor-header/doctor-header.component.ts":
  /*!****************************************************************************!*\
    !*** ./src/app/components/doctor/doctor-header/doctor-header.component.ts ***!
    \****************************************************************************/

  /*! exports provided: DoctorHeaderComponent */

  /***/
  function srcAppComponentsDoctorDoctorHeaderDoctorHeaderComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DoctorHeaderComponent", function () {
      return DoctorHeaderComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../common/dialog-box/dialog-box.component */
    "./src/app/components/common/dialog-box/dialog-box.component.ts");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");

    var DoctorHeaderComponent = /*#__PURE__*/function () {
      function DoctorHeaderComponent(cookies, router, activate, dialog) {
        _classCallCheck(this, DoctorHeaderComponent);

        this.cookies = cookies;
        this.router = router;
        this.activate = activate;
        this.dialog = dialog;
        this.toggleStatus = false;
        this.user_data = {};
        this.main_user = {
          flag: false,
          data: {},
          buttonText: "Rerurn to Admin"
        };
        this.loader = true;
        this.flag = 0;
        this.status = true;
        this.isSticky = false;
        var allData = cookies.getAll();
        this.user_data = JSON.parse(allData.user_details);
        this.user_cookie = cookies.get('jwtToken');

        if (typeof allData.main_user != 'undefined') {
          this.main_user.data = allData.main_user;
          this.main_user.flag = true;
        }

        this.user_data["headerFlag"] = typeof this.user_data.diagnostic_admin_id;

        if (this.activate.snapshot.routeConfig.path == "admin/doctor-dashboard/:_id") {
          this.flag = 1;
        }
      }

      _createClass(DoctorHeaderComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
        /**logout function start here**/

      }, {
        key: "logout",
        value: function logout() {
          this.cookies["delete"]('jwtToken');
          this.cookies["delete"]('user_details');
          this.cookies.deleteAll();
          this.router.navigateByUrl('logout');
        }
        /**logout function end here**/

      }, {
        key: "menuFunction",
        value: function menuFunction() {
          this.toggleStatus = !this.toggleStatus;
        }
      }, {
        key: "returnToAdmin",
        value: function returnToAdmin() {
          var _this198 = this;

          var modalData = {
            panelClass: 'bulkupload-dialog',
            data: {
              header: "Alert",
              message: "Do you want to return to admin?",
              button1: {
                text: "Yes"
              },
              button2: {
                text: "No"
              }
            }
          };
          this.openModal(modalData);
          this.dialogRef.afterClosed().subscribe(function (result) {
            switch (result) {
              case "Yes":
                var jwtToken = _this198.cookies.get('jwtToken');

                var allData = _this198.cookies.getAll();

                var main_user = JSON.parse(allData.main_user);

                var secret = _this198.cookies.get('secret'); // Delete Cookie


                _this198.cookies["delete"]('user_details');

                _this198.cookies["delete"]('main_user');

                _this198.cookies["delete"]('doctor_signature');

                _this198.cookies["delete"]('secret');

                _this198.cookies["delete"]('jwtToken');

                _this198.cookies.deleteAll('/doctor');

                setTimeout(function () {
                  // Reset again Cookie
                  _this198.cookies.set('jwtToken', jwtToken);

                  _this198.cookies.set('user_details', JSON.stringify(main_user));

                  _this198.cookies.set('secret', JSON.stringify(secret)); // Redirect to page


                  _this198.router.navigateByUrl("admin/dashboard");
                }, 500);
                break;

              case "No":
                _this198.dialogRef.close();

                break;
            }
          });
        }
      }, {
        key: "openModal",
        value: function openModal(data) {
          this.dialogRef = this.dialog.open(_common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_4__["DialogBoxComponent"], data);
        }
      }]);

      return DoctorHeaderComponent;
    }();

    DoctorHeaderComponent.ctorParameters = function () {
      return [{
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatDialog"]
      }];
    };

    DoctorHeaderComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-doctor-header',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./doctor-header.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor/doctor-header/doctor-header.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./doctor-header.component.css */
      "./src/app/components/doctor/doctor-header/doctor-header.component.css"))["default"]]
    })], DoctorHeaderComponent);
    /***/
  },

  /***/
  "./src/app/components/doctor/signature-management/signature-management.component.css":
  /*!*******************************************************************************************!*\
    !*** ./src/app/components/doctor/signature-management/signature-management.component.css ***!
    \*******************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsDoctorSignatureManagementSignatureManagementComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = ".content_wrapper{ display: flex; justify-content: center;  align-items: center; width: 100%; margin: auto;\n    text-align: center; }\n  .content_wrapper .itemsection{width: 620px; margin: 50px 7px; padding:0px; box-sizing: border-box; display: flex; flex-direction: column; min-height: 200px;\n     align-items: center; background: #f5f5f5; box-shadow: 0px 4px 8px 0px #b1b1b1;\n    /* justify-content: center; */\n     position: relative; background: #f1f1f1;}\n  .one{ background: url('doctordashone.jpg') no-repeat center center; background-size: cover; }\n  .two{ background: url('techdashcontentbg2.jpg') no-repeat center center; background-size: cover; }\n  .three{ background: url('techdashcontentbg3.jpg') no-repeat center center; background-size: cover; }\n  .content_wrapper .itemsection button{ position: absolute;\n    right: 0; bottom: 0; background: rgba(0,0,0, 0.4); color: #fff; font-family: \"AvenirRoman\"; font-size: 15px;  border-radius: 0; text-transform: uppercase; }\n  .content_wrapper .itemsection .counteer{ width: 90px;\n    height: 90px;\n    border-radius: 50%;\n    border: 1px solid rgba(0,0,0,0.1);\n    background: rgba(0,0,0, 0.2);\n    box-shadow: 2px 2px 2px 2px transparent;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 50px;\n    font-family: \"AvenirBlack\";\n  }\n  .content_wrapper .itemsection p{   line-height: 28px; font-family: \"AvenirBlack\"; font-size: 30px; color: #fff; text-transform: uppercase; width: 320px; margin: 20px auto; margin-top: 15px;}\n  .content_wrapper .itemsection .uploadsign{ width: 100%; height: 103px;}\n  .content_wrapper .itemsection .uploadsign p{ width: 100%; margin-bottom: 0; margin-top: 25px; }\n  .content_wrapper .itemsection .section_title{ width: 90px; height: 90px; border-radius: 50%; background: #fff; margin-top: -45px; display: flex;\n    align-items: center; justify-content: center; padding: 20px; box-sizing: border-box; box-shadow: 0px 2px 4px -2px #e27d2c; margin-bottom: 13px;}\n  .content_wrapper .itemsection .section_title img{ max-width: 100%; }\n  .content_wrapper .itemsection .sign_uploader { width: 100%; align-items: center; padding: 15px; box-sizing: border-box;}\n  .content_wrapper .itemsection .sign_uploader .message{ margin: 0 16px 0 0; font-size: 18px; font-family: \"AvenirRoman\"; color: #f54d96;}\n  .content_wrapper .itemsection .sign_uploader input{ width: 100%; padding: 9px; box-sizing: border-box; border: 1px solid #dcdddf; }\n  .content_wrapper .itemsection .sign_uploader .sing_box{ display: flex; justify-content: center; align-items: center;}\n  .content_wrapper .itemsection .sign_uploader .no_sign{ font-family: \"AvenirRoman\"; color: #ff378e; margin-top: 10px; font-size: 16px;\n    padding-bottom: 8px; margin-bottom: 20px; }\n  .content_wrapper .itemsection .sign_uploader input:focus{ border: 1px solid #000;outline: none; }\n  .content_wrapper .itemsection .sign_uploader .signature_upload{ min-width: 120px; position: inherit; top: 0; right: 0; background: #dd671d; color:#fff; }\n  @media screen and (max-width: 700px){\n    .content_wrapper .itemsection { width: 85%; margin: 50px 0;  padding: 0px; }\n    .content_wrapper .itemsection .section_title { width: 80px; height: 80px; margin-bottom: 0; }\n}\n  @media screen and (max-width: 520px){\n.content_wrapper .itemsection .uploadsign p { width: auto; font-size: 24px; }\n.content_wrapper .itemsection .sign_uploader .signature_upload { min-width: 100px; }\n}\n  @media screen and (max-width: 400px){\n.content_wrapper.itemsection.uploadsignp{ width: auto; font-size: 22px; }\n.content_wrapper .itemsection .sign_uploader .signature_upload { min-width: 80px; padding: 0;}\n.content_wrapper .itemsection .uploadsign p { font-size: 20px;}\n.content_wrapper .itemsection .section_title { width: 60px; height: 60px; padding: 12px; margin-top: -30px; }\n}\n  @media screen and (max-width: 320px){\n.content_wrapper .itemsection .sign_uploader input { width: 100%; }\n}\n  .signaturefont {\n  font-family: \"AmandaSignature\";\n  font-size: 40px;\n  line-height: 58px;\n  height: 60px;\n  padding: 10px 25px;\n  box-sizing: border-box;\n  background: #fff;\n  border-bottom: 1px solid #000;\n  color: blue;\n}\n\n/*# sourceMappingURL=data:application/json;base64, */";
    /***/
  },

  /***/
  "./src/app/components/doctor/signature-management/signature-management.component.ts":
  /*!******************************************************************************************!*\
    !*** ./src/app/components/doctor/signature-management/signature-management.component.ts ***!
    \******************************************************************************************/

  /*! exports provided: SignatureManagementComponent */

  /***/
  function srcAppComponentsDoctorSignatureManagementSignatureManagementComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "SignatureManagementComponent", function () {
      return SignatureManagementComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/material/dialog */
    "./node_modules/@angular/material/esm2015/dialog.js");
    /* harmony import */


    var src_app_class_common_common_function__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! src/app/class/common/common-function */
    "./src/app/class/common/common-function.ts");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var src_app_services_http_service_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! src/app/services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../../common/dialog-box/dialog-box.component */
    "./src/app/components/common/dialog-box/dialog-box.component.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");

    var SignatureManagementComponent = /*#__PURE__*/function () {
      function SignatureManagementComponent(dialog, commonFunction, cookie, http, activatedRoute, router) {
        _classCallCheck(this, SignatureManagementComponent);

        this.dialog = dialog;
        this.commonFunction = commonFunction;
        this.cookie = cookie;
        this.http = http;
        this.activatedRoute = activatedRoute;
        this.router = router;
        this.authData = {};
        this.DoctorSignedData = [];
        this.htmlText = {
          buttonText: "Add Signature"
        };
        var allcookies = cookie.getAll();
        this.authData["user_details"] = JSON.parse(cookie.get('user_details'));
        this.authData["jwtToken"] = cookie.get('jwtToken');
        this.authData["doctorSignature"] = cookie.get('doctor_signature');

        if (typeof this.authData.doctorSignature !== 'undefined') {
          this.htmlText.buttonText = "Update Signature";
          this.htmlText.viewSign = this.authData.doctorSignature;
        }
      }

      _createClass(SignatureManagementComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }, {
        key: "updateSignature",
        value: function updateSignature() {
          var _this199 = this;

          if (typeof this.htmlText.viewSign !== 'undefined' && this.htmlText.viewSign != '') {
            var data = {
              "source": "data_pece",
              "data": {
                "id": this.authData.user_details._id,
                "doctor_signature": this.htmlText.viewSign
              },
              "token": this.authData.jwtToken
            };
            this.http.httpViaPost('addorupdatedata', data).subscribe(function (response) {
              if (response.status == "success") {
                console.log("SIGN: ", _this199.htmlText.viewSign);

                _this199.cookie.set('doctor_signature', _this199.htmlText.viewSign);
                /* Open modal */


                var modalData = {
                  panelClass: 'bulkupload-dialog',
                  data: {
                    header: "Message",
                    message: "Signature uploaded successfully.",
                    button1: {
                      text: ""
                    },
                    button2: {
                      text: "Ok"
                    }
                  }
                };

                _this199.openModal(modalData);
              }
            });
          } else {
            this.htmlText.errorMessage = "Please write your signature.";
          }
        }
      }, {
        key: "removeErrorMessage",
        value: function removeErrorMessage() {
          if (typeof this.htmlText.viewSign === 'undefined' || this.htmlText.viewSign.length == 0) {
            this.htmlText.errorMessage = "Please write your signature.";
          } else {
            this.htmlText.errorMessage = "";
          }
        }
      }, {
        key: "openModal",
        value: function openModal(data) {
          var _this200 = this;

          this.dialogRef = this.dialog.open(_common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_6__["DialogBoxComponent"], data);
          this.dialogRef.afterClosed().subscribe(function (result) {
            switch (result) {
              case "Ok":
                _this200.dialogRef.close();

                _this200.activatedRoute.queryParams.subscribe(function (getData) {
                  _this200.router.navigateByUrl('/doctor/dashboard');
                });

                break;
            }
          });
        }
      }]);

      return SignatureManagementComponent;
    }();

    SignatureManagementComponent.ctorParameters = function () {
      return [{
        type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MatDialog"]
      }, {
        type: src_app_class_common_common_function__WEBPACK_IMPORTED_MODULE_3__["CommonFunction"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_4__["CookieService"]
      }, {
        type: src_app_services_http_service_service__WEBPACK_IMPORTED_MODULE_5__["HttpServiceService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_7__["ActivatedRoute"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_7__["Router"]
      }];
    };

    SignatureManagementComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-signature-management',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./signature-management.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/doctor/signature-management/signature-management.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./signature-management.component.css */
      "./src/app/components/doctor/signature-management/signature-management.component.css"))["default"]]
    })], SignatureManagementComponent);
    /***/
  },

  /***/
  "./src/app/components/encounter-form/encounter-form.component.css":
  /*!************************************************************************!*\
    !*** ./src/app/components/encounter-form/encounter-form.component.css ***!
    \************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsEncounterFormEncounterFormComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZW5jb3VudGVyLWZvcm0vZW5jb3VudGVyLWZvcm0uY29tcG9uZW50LmNzcyJ9 */";
    /***/
  },

  /***/
  "./src/app/components/encounter-form/encounter-form.component.ts":
  /*!***********************************************************************!*\
    !*** ./src/app/components/encounter-form/encounter-form.component.ts ***!
    \***********************************************************************/

  /*! exports provided: EncounterFormComponent */

  /***/
  function srcAppComponentsEncounterFormEncounterFormComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "EncounterFormComponent", function () {
      return EncounterFormComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../services/http-service.service */
    "./src/app/services/http-service.service.ts");

    var EncounterFormComponent = /*#__PURE__*/function () {
      function EncounterFormComponent(http) {
        var _this201 = this;

        _classCallCheck(this, EncounterFormComponent);

        this.http = http;
        var data = {
          "source": "",
          "condition": ""
        };
        this.http.httpViaPost("get-report-data", data).subscribe(function (response) {
          // console.log('7777',response);
          _this201.html_body = response.res;
        });
      }

      _createClass(EncounterFormComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }]);

      return EncounterFormComponent;
    }();

    EncounterFormComponent.ctorParameters = function () {
      return [{
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_2__["HttpServiceService"]
      }];
    };

    EncounterFormComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-encounter-form',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./encounter-form.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/encounter-form/encounter-form.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./encounter-form.component.css */
      "./src/app/components/encounter-form/encounter-form.component.css"))["default"]]
    })], EncounterFormComponent);
    /***/
  },

  /***/
  "./src/app/components/lazyload-training/training-management/manage-lesson/add-edit-lesson/add-edit-lesson.component.css":
  /*!******************************************************************************************************************************!*\
    !*** ./src/app/components/lazyload-training/training-management/manage-lesson/add-edit-lesson/add-edit-lesson.component.css ***!
    \******************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsLazyloadTrainingTrainingManagementManageLessonAddEditLessonAddEditLessonComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbGF6eWxvYWQtdHJhaW5pbmcvdHJhaW5pbmctbWFuYWdlbWVudC9tYW5hZ2UtbGVzc29uL2FkZC1lZGl0LWxlc3Nvbi9hZGQtZWRpdC1sZXNzb24uY29tcG9uZW50LmNzcyJ9 */";
    /***/
  },

  /***/
  "./src/app/components/lazyload-training/training-management/manage-lesson/add-edit-lesson/add-edit-lesson.component.ts":
  /*!*****************************************************************************************************************************!*\
    !*** ./src/app/components/lazyload-training/training-management/manage-lesson/add-edit-lesson/add-edit-lesson.component.ts ***!
    \*****************************************************************************************************************************/

  /*! exports provided: AddEditLessonComponent */

  /***/
  function srcAppComponentsLazyloadTrainingTrainingManagementManageLessonAddEditLessonAddEditLessonComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AddEditLessonComponent", function () {
      return AddEditLessonComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../../../../environments/environment */
    "./src/environments/environment.ts");

    var AddEditLessonComponent = /*#__PURE__*/function () {
      function AddEditLessonComponent(route, cookie) {
        _classCallCheck(this, AddEditLessonComponent);

        this.route = route;
        this.cookie = cookie;
        this.title = '';
        this.header_txt = 'Add Lesson';
        this.listingPageRoute = "/manage-lesson/list";
        this.pageName = "Manage Lesson";
        this.isitdna = false;
        this.serverDetails = {
          "serverUrl": _environments_environment__WEBPACK_IMPORTED_MODULE_4__["environment"].training_url,
          "jwttoken": ""
        };
        this.formSource = {
          "source": 'manage_lession',
          "endpoint": "addorupdatelessondata",
          "showEndpoint": "getlessondatabyid",
          "AddheaderText": "Add Lesson",
          "EditheaderText": "Edit Lesson",
          "lessonDataEndpoint": "getlessondatabytrainingid"
        };
        this.additionalData = {
          "objectId": "associated_training",
          "objectId2": "prerequisite_lession"
        };
        this.configFileUpload = {
          baseUrl: _environments_environment__WEBPACK_IMPORTED_MODULE_4__["environment"].fileUploadUrl,
          endpoint: "uploads",
          size: "51200",
          format: ["jpg", "jpeg", "png", "bmp", "zip", 'html', 'mp4', 'mp3', 'doc', 'ppt', 'pptx', 'pdf', 'msword'],
          type: "imageGallery-picture",
          path: "imageGallery",
          prefix: "imageGallery-picture_",
          formSubmit: false,
          conversionNeeded: 1,
          bucketName: "probidfiles-dev.com"
        };
        this.jwtToken = cookie.get('jwtToken');
        this.serverDetails.jwttoken = this.jwtToken;
        this.userData = JSON.parse(cookie.get('user_details'));
      }

      _createClass(AddEditLessonComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this202 = this;

          this.route.params.subscribe(function (params) {
            _this202.recid = params['id'];
            console.log(params['id']);

            if (_this202.recid != null && _this202.recid != '' && _this202.recid != undefined) {
              // this.geteditdata()
              _this202.header_txt = 'Edit Lesson';
            }
          });
          this.formdataval = [{
            inputtype: 'text',
            name: 'lession_title',
            label: 'Title',
            placeholder: 'Enter Lession Title',
            validationrule: {
              required: true
            },
            validationerrormsg: 'is required'
          }, {
            inputtype: 'textarea',
            name: 'description',
            label: 'Description',
            placeholder: 'Enter Description'
          }, {
            inputtype: 'select',
            name: 'associated_training',
            label: 'Associated Training',
            defaultchoice: 'Select a Training',
            sourceview: 'training_category_management',
            endpoint: 'gettrainingcategorydata',
            selectvalue: 'catagory_name',
            selectid: '_id',
            validationrule: {
              required: true
            },
            validationerrormsg: 'is required'
          }, {
            inputtype: 'select',
            name: 'prerequisite_lession',
            label: 'Prerequisite Lesson',
            defaultchoice: 'Select a Prerequisite Lession',
            sourceview: 'manage_lession_null',
            endpoint: 'datalist',
            selectvalue: 'lession_title',
            selectid: '_id'
          }, {
            inputtype: 'radio',
            name: 'quiz_associate_training',
            value: ["Yes", "No"],
            valuelabel: '',
            label: "Is there a quiz associated with this training",
            placeholder: "",
            validationrule: {
              required: true
            },
            validationerrormsg: '',
            "class": 'radioclass'
          }, {
            inputtype: 'checkbox',
            name: 'status',
            label: 'Active',
            placeholder: 'Enter Status',
            validationrule: {
              required: true
            },
            validationerrormsg: 'is required'
          }, {
            inputtype: 'select',
            name: 'mediaType',
            label: 'Training Type',
            defaultchoice: 'Select a Training Type',
            sourceview: 'assets/mediaType.json',
            sourcetype: 'static',
            selectvalue: 'name',
            selectid: 'selectname',
            validationrule: {
              required: true
            },
            validationerrormsg: 'is required'
          }];
        }
      }]);

      return AddEditLessonComponent;
    }();

    AddEditLessonComponent.ctorParameters = function () {
      return [{
        type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__["CookieService"]
      }];
    };

    AddEditLessonComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-add-edit-lesson',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./add-edit-lesson.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/lazyload-training/training-management/manage-lesson/add-edit-lesson/add-edit-lesson.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./add-edit-lesson.component.css */
      "./src/app/components/lazyload-training/training-management/manage-lesson/add-edit-lesson/add-edit-lesson.component.css"))["default"]]
    })], AddEditLessonComponent);
    /***/
  },

  /***/
  "./src/app/components/lazyload-training/training-management/manage-lesson/list-lesson/list-lesson.component.css":
  /*!**********************************************************************************************************************!*\
    !*** ./src/app/components/lazyload-training/training-management/manage-lesson/list-lesson/list-lesson.component.css ***!
    \**********************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsLazyloadTrainingTrainingManagementManageLessonListLessonListLessonComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbGF6eWxvYWQtdHJhaW5pbmcvdHJhaW5pbmctbWFuYWdlbWVudC9tYW5hZ2UtbGVzc29uL2xpc3QtbGVzc29uL2xpc3QtbGVzc29uLmNvbXBvbmVudC5jc3MifQ== */";
    /***/
  },

  /***/
  "./src/app/components/lazyload-training/training-management/manage-lesson/list-lesson/list-lesson.component.ts":
  /*!*********************************************************************************************************************!*\
    !*** ./src/app/components/lazyload-training/training-management/manage-lesson/list-lesson/list-lesson.component.ts ***!
    \*********************************************************************************************************************/

  /*! exports provided: ListLessonComponent */

  /***/
  function srcAppComponentsLazyloadTrainingTrainingManagementManageLessonListLessonListLessonComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ListLessonComponent", function () {
      return ListLessonComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../../../../environments/environment */
    "./src/environments/environment.ts");

    var ListLessonComponent = /*#__PURE__*/function () {
      function ListLessonComponent(activatedRoute, cookie) {
        _classCallCheck(this, ListLessonComponent);

        this.activatedRoute = activatedRoute;
        this.cookie = cookie;
        this.manageLessionList = [];
        this.isitdna = false;
        this.manageTrainingList = [];
        this.editPageRoute = "/admin/training/manage-lesson/edit/";
        this.addPageRoute = "/admin/training/manage-lesson/add";
        this.manageQuizRoute = "/admin/training/manage-quiz/list/";
        this.serverDetails = {
          "serverUrl": _environments_environment__WEBPACK_IMPORTED_MODULE_4__["environment"].training_url,
          "jwttoken": ""
        };
        this.formSource = {
          "source": 'manage_lession',
          "endpoint": "lessondelete",
          "deleteManyEndpoint": "lessondeletemany",
          "searchEndpoint": "getlessondata",
          "associatedTrainingSourceName": "training_category_management",
          "statusUpdateEndpoint": "lessonstatusupdate",
          "statusUpdateManyEndpoint": "lessonstatusupdate",
          "statusUpdateSourceName": "manage_lession",
          "trashDataSource": "manage_lession_view",
          "retriveTrashDataEndpoint": "lessonrestoredata",
          "retriveTrashDataSourceName": "manage_lession",
          "trainingCountEndpoint": "trainingcounts"
        };
        this.searchSourceName = "manage_lession_view";
        this.jwtToken = cookie.get('jwtToken');
        this.serverDetails.jwttoken = this.jwtToken;
        this.userData = JSON.parse(cookie.get('user_details'));
      }

      _createClass(ListLessonComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this203 = this;

          this.activatedRoute.data.forEach(function (data) {
            var result;
            result = data.lessionData.res;
            _this203.manageLessionList = result;
          });
        }
      }]);

      return ListLessonComponent;
    }();

    ListLessonComponent.ctorParameters = function () {
      return [{
        type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__["CookieService"]
      }];
    };

    ListLessonComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-list-lesson',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./list-lesson.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/lazyload-training/training-management/manage-lesson/list-lesson/list-lesson.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./list-lesson.component.css */
      "./src/app/components/lazyload-training/training-management/manage-lesson/list-lesson/list-lesson.component.css"))["default"]]
    })], ListLessonComponent);
    /***/
  },

  /***/
  "./src/app/components/lazyload-training/training-management/manage-quiz/add-edit-answer/add-edit-answer.component.css":
  /*!****************************************************************************************************************************!*\
    !*** ./src/app/components/lazyload-training/training-management/manage-quiz/add-edit-answer/add-edit-answer.component.css ***!
    \****************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsLazyloadTrainingTrainingManagementManageQuizAddEditAnswerAddEditAnswerComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbGF6eWxvYWQtdHJhaW5pbmcvdHJhaW5pbmctbWFuYWdlbWVudC9tYW5hZ2UtcXVpei9hZGQtZWRpdC1hbnN3ZXIvYWRkLWVkaXQtYW5zd2VyLmNvbXBvbmVudC5jc3MifQ== */";
    /***/
  },

  /***/
  "./src/app/components/lazyload-training/training-management/manage-quiz/add-edit-answer/add-edit-answer.component.ts":
  /*!***************************************************************************************************************************!*\
    !*** ./src/app/components/lazyload-training/training-management/manage-quiz/add-edit-answer/add-edit-answer.component.ts ***!
    \***************************************************************************************************************************/

  /*! exports provided: AddEditAnswerComponent */

  /***/
  function srcAppComponentsLazyloadTrainingTrainingManagementManageQuizAddEditAnswerAddEditAnswerComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AddEditAnswerComponent", function () {
      return AddEditAnswerComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../../../../environments/environment */
    "./src/environments/environment.ts");

    var AddEditAnswerComponent = /*#__PURE__*/function () {
      function AddEditAnswerComponent(activatedRoute, cookie) {
        _classCallCheck(this, AddEditAnswerComponent);

        this.activatedRoute = activatedRoute;
        this.cookie = cookie;
        this.header_txt = 'Add Answer';
        this.listingPageRoute = "/admin/training/manage-quiz/list/";
        this.serverDetails = {
          "serverUrl": _environments_environment__WEBPACK_IMPORTED_MODULE_4__["environment"].training_url,
          "jwttoken": ""
        };
        this.formSource = {
          "source": 'quiz_answer',
          "endpoint": "addorupdatelessonanswer",
          "showEndpoint": "datalist",
          "AddheaderText": "Add Training",
          "EditheaderText": "Edit Training",
          "formTitleName": 'Training'
        };
        this.dnaFlag = true;
        this.paramsId = activatedRoute.snapshot.params.id;
        this.lessonId = activatedRoute.snapshot.params.lessonid;
        this.jwtToken = cookie.get('jwtToken');
        this.serverDetails.jwttoken = this.jwtToken;
        this.userData = JSON.parse(cookie.get('user_details'));
      }

      _createClass(AddEditAnswerComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }]);

      return AddEditAnswerComponent;
    }();

    AddEditAnswerComponent.ctorParameters = function () {
      return [{
        type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__["CookieService"]
      }];
    };

    AddEditAnswerComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-add-edit-answer',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./add-edit-answer.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/lazyload-training/training-management/manage-quiz/add-edit-answer/add-edit-answer.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./add-edit-answer.component.css */
      "./src/app/components/lazyload-training/training-management/manage-quiz/add-edit-answer/add-edit-answer.component.css"))["default"]]
    })], AddEditAnswerComponent);
    /***/
  },

  /***/
  "./src/app/components/lazyload-training/training-management/manage-quiz/add-edit-quiz/add-edit-quiz.component.css":
  /*!************************************************************************************************************************!*\
    !*** ./src/app/components/lazyload-training/training-management/manage-quiz/add-edit-quiz/add-edit-quiz.component.css ***!
    \************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsLazyloadTrainingTrainingManagementManageQuizAddEditQuizAddEditQuizComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbGF6eWxvYWQtdHJhaW5pbmcvdHJhaW5pbmctbWFuYWdlbWVudC9tYW5hZ2UtcXVpei9hZGQtZWRpdC1xdWl6L2FkZC1lZGl0LXF1aXouY29tcG9uZW50LmNzcyJ9 */";
    /***/
  },

  /***/
  "./src/app/components/lazyload-training/training-management/manage-quiz/add-edit-quiz/add-edit-quiz.component.ts":
  /*!***********************************************************************************************************************!*\
    !*** ./src/app/components/lazyload-training/training-management/manage-quiz/add-edit-quiz/add-edit-quiz.component.ts ***!
    \***********************************************************************************************************************/

  /*! exports provided: AddEditQuizComponent */

  /***/
  function srcAppComponentsLazyloadTrainingTrainingManagementManageQuizAddEditQuizAddEditQuizComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AddEditQuizComponent", function () {
      return AddEditQuizComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../../../../environments/environment */
    "./src/environments/environment.ts");

    var AddEditQuizComponent = /*#__PURE__*/function () {
      function AddEditQuizComponent(activatedRoute, cookie) {
        _classCallCheck(this, AddEditQuizComponent);

        this.activatedRoute = activatedRoute;
        this.cookie = cookie;
        this.quizQuestionSingleDataList = [];
        this.header_txt = 'Add Quiz';
        this.serverDetails = {
          "serverUrl": _environments_environment__WEBPACK_IMPORTED_MODULE_4__["environment"].training_url,
          "jwttoken": ""
        };
        this.formSource = {
          "source": "quiz_question",
          "endpoint": "addorupdatelessonquestion",
          "showEndpoint": "datalist",
          "formTitleName": 'Training'
        };
        this.listingPageRoute = "/admin/training/manage-quiz/list/";
        console.log(this.activatedRoute.snapshot.params.lesson_id_object);
        this.lessonIdInedit = this.activatedRoute.snapshot.params.lesson_id_object;
        this.lessonId = this.activatedRoute.snapshot.params.id;
        this.jwtToken = cookie.get('jwtToken');
        this.serverDetails.jwttoken = this.jwtToken;
        this.userData = JSON.parse(cookie.get('user_details'));
      }

      _createClass(AddEditQuizComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this204 = this;

          if (this.activatedRoute.snapshot.params._id) {
            this.header_txt = 'Edit Quiz';
            this.activatedRoute.data.forEach(function (data) {
              var result;
              result = data.quizQuestionData.res;
              _this204.quizQuestionSingleDataList = result;
            });
          }
        }
      }]);

      return AddEditQuizComponent;
    }();

    AddEditQuizComponent.ctorParameters = function () {
      return [{
        type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__["CookieService"]
      }];
    };

    AddEditQuizComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-add-edit-quiz',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./add-edit-quiz.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/lazyload-training/training-management/manage-quiz/add-edit-quiz/add-edit-quiz.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./add-edit-quiz.component.css */
      "./src/app/components/lazyload-training/training-management/manage-quiz/add-edit-quiz/add-edit-quiz.component.css"))["default"]]
    })], AddEditQuizComponent);
    /***/
  },

  /***/
  "./src/app/components/lazyload-training/training-management/manage-quiz/list-answer/list-answer.component.css":
  /*!********************************************************************************************************************!*\
    !*** ./src/app/components/lazyload-training/training-management/manage-quiz/list-answer/list-answer.component.css ***!
    \********************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsLazyloadTrainingTrainingManagementManageQuizListAnswerListAnswerComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbGF6eWxvYWQtdHJhaW5pbmcvdHJhaW5pbmctbWFuYWdlbWVudC9tYW5hZ2UtcXVpei9saXN0LWFuc3dlci9saXN0LWFuc3dlci5jb21wb25lbnQuY3NzIn0= */";
    /***/
  },

  /***/
  "./src/app/components/lazyload-training/training-management/manage-quiz/list-answer/list-answer.component.ts":
  /*!*******************************************************************************************************************!*\
    !*** ./src/app/components/lazyload-training/training-management/manage-quiz/list-answer/list-answer.component.ts ***!
    \*******************************************************************************************************************/

  /*! exports provided: ListAnswerComponent */

  /***/
  function srcAppComponentsLazyloadTrainingTrainingManagementManageQuizListAnswerListAnswerComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ListAnswerComponent", function () {
      return ListAnswerComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../../../../environments/environment */
    "./src/environments/environment.ts");

    var ListAnswerComponent = /*#__PURE__*/function () {
      function ListAnswerComponent(activatedRoute, cookie) {
        _classCallCheck(this, ListAnswerComponent);

        this.activatedRoute = activatedRoute;
        this.cookie = cookie;
        this.quizAnswerList = [];
        this.serverDetails = {
          "serverUrl": _environments_environment__WEBPACK_IMPORTED_MODULE_4__["environment"].training_url,
          "jwttoken": ""
        };
        this.formSource = {
          "source": "quiz_answer",
          "endpoint": "addorupdatedata",
          "deleteendpoint": "lessonanswerdatadelete",
          "showEndpoint": "datalist",
          "formTitleName": 'Training'
        };
        this.jwtToken = cookie.get('jwtToken');
        this.serverDetails.jwttoken = this.jwtToken;
        this.userData = JSON.parse(cookie.get('user_details'));
      }

      _createClass(ListAnswerComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this205 = this;

          this.activatedRoute.data.forEach(function (data) {
            var result;
            result = data.quizQuestionData.res;
            _this205.quizAnswerList = result;
          });
        }
      }]);

      return ListAnswerComponent;
    }();

    ListAnswerComponent.ctorParameters = function () {
      return [{
        type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__["CookieService"]
      }];
    };

    ListAnswerComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-list-answer',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./list-answer.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/lazyload-training/training-management/manage-quiz/list-answer/list-answer.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./list-answer.component.css */
      "./src/app/components/lazyload-training/training-management/manage-quiz/list-answer/list-answer.component.css"))["default"]]
    })], ListAnswerComponent);
    /***/
  },

  /***/
  "./src/app/components/lazyload-training/training-management/manage-quiz/list-quiz/list-quiz.component.css":
  /*!****************************************************************************************************************!*\
    !*** ./src/app/components/lazyload-training/training-management/manage-quiz/list-quiz/list-quiz.component.css ***!
    \****************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsLazyloadTrainingTrainingManagementManageQuizListQuizListQuizComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbGF6eWxvYWQtdHJhaW5pbmcvdHJhaW5pbmctbWFuYWdlbWVudC9tYW5hZ2UtcXVpei9saXN0LXF1aXovbGlzdC1xdWl6LmNvbXBvbmVudC5jc3MifQ== */";
    /***/
  },

  /***/
  "./src/app/components/lazyload-training/training-management/manage-quiz/list-quiz/list-quiz.component.ts":
  /*!***************************************************************************************************************!*\
    !*** ./src/app/components/lazyload-training/training-management/manage-quiz/list-quiz/list-quiz.component.ts ***!
    \***************************************************************************************************************/

  /*! exports provided: ListQuizComponent */

  /***/
  function srcAppComponentsLazyloadTrainingTrainingManagementManageQuizListQuizListQuizComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ListQuizComponent", function () {
      return ListQuizComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../../../../environments/environment */
    "./src/environments/environment.ts");

    var ListQuizComponent = /*#__PURE__*/function () {
      function ListQuizComponent(activatedRoute, cookie) {
        _classCallCheck(this, ListQuizComponent);

        this.activatedRoute = activatedRoute;
        this.cookie = cookie;
        this.quizQuestionList = [];
        this.addPageRoute = "/admin/training/manage-quiz/add/";
        this.lessonPageRoute = "/admin/training/manage-lesson/list";
        this.editPageRoute = "/admin/training/manage-quiz/edit/"; // public updateAnswerRoute:any="/manage-quiz/update-answer/";

        this.serverDetails = {
          "serverUrl": _environments_environment__WEBPACK_IMPORTED_MODULE_4__["environment"].training_url,
          "jwttoken": ""
        };
        this.formSource = {
          "source": 'quiz_question',
          "endpoint": "lessonquestiondelete",
          "searchEndpoint": "datalist",
          "statusUpdateEndpoint": "questionstatusupdate",
          "statusUpdateSourceName": "quiz_question"
        };
        this.addUpdateAnswerRoute = {
          "addAnswerRoute": "/admin/training/manage-quiz/add-answer/",
          "updateAnswerRoute": "/admin/training/manage-quiz/update-answer/"
        };
        this.paramsId = this.activatedRoute.snapshot.params.lesson_id;
        console.log("lesson id", this.paramsId);
        this.jwtToken = cookie.get('jwtToken');
        this.serverDetails.jwttoken = this.jwtToken;
        this.userData = JSON.parse(cookie.get('user_details'));
      }

      _createClass(ListQuizComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this206 = this;

          this.activatedRoute.data.forEach(function (data) {
            var result;
            result = data.trainingdata.res;
            _this206.quizQuestionList = result;
          });
        }
      }]);

      return ListQuizComponent;
    }();

    ListQuizComponent.ctorParameters = function () {
      return [{
        type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__["CookieService"]
      }];
    };

    ListQuizComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-list-quiz',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./list-quiz.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/lazyload-training/training-management/manage-quiz/list-quiz/list-quiz.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./list-quiz.component.css */
      "./src/app/components/lazyload-training/training-management/manage-quiz/list-quiz/list-quiz.component.css"))["default"]]
    })], ListQuizComponent);
    /***/
  },

  /***/
  "./src/app/components/lazyload-training/training-management/manage-training/add-edit-training/add-edit-training.component.css":
  /*!************************************************************************************************************************************!*\
    !*** ./src/app/components/lazyload-training/training-management/manage-training/add-edit-training/add-edit-training.component.css ***!
    \************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsLazyloadTrainingTrainingManagementManageTrainingAddEditTrainingAddEditTrainingComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbGF6eWxvYWQtdHJhaW5pbmcvdHJhaW5pbmctbWFuYWdlbWVudC9tYW5hZ2UtdHJhaW5pbmcvYWRkLWVkaXQtdHJhaW5pbmcvYWRkLWVkaXQtdHJhaW5pbmcuY29tcG9uZW50LmNzcyJ9 */";
    /***/
  },

  /***/
  "./src/app/components/lazyload-training/training-management/manage-training/add-edit-training/add-edit-training.component.ts":
  /*!***********************************************************************************************************************************!*\
    !*** ./src/app/components/lazyload-training/training-management/manage-training/add-edit-training/add-edit-training.component.ts ***!
    \***********************************************************************************************************************************/

  /*! exports provided: AddEditTrainingComponent */

  /***/
  function srcAppComponentsLazyloadTrainingTrainingManagementManageTrainingAddEditTrainingAddEditTrainingComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AddEditTrainingComponent", function () {
      return AddEditTrainingComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../../../../environments/environment */
    "./src/environments/environment.ts");

    var AddEditTrainingComponent = /*#__PURE__*/function () {
      function AddEditTrainingComponent(route, cookie) {
        _classCallCheck(this, AddEditTrainingComponent);

        this.route = route;
        this.cookie = cookie;
        this.title = '';
        this.header_txt = 'Add Training';
        this.isDna = "no";
        this.listingPageRoute = "/admin/training/manage-training/list";
        this.serverDetails = {
          "serverUrl": _environments_environment__WEBPACK_IMPORTED_MODULE_4__["environment"].training_url,
          "jwttoken": ""
        };
        this.formSource = {
          "source": 'training_category_management',
          "endpoint": "addorupdatetrainingcategory",
          "showEndpoint": "gettrainingdatabyid",
          "AddheaderText": "Add Training",
          "EditheaderText": "Edit Training",
          "formTitleName": 'Training'
        };
        this.additionalData = {
          "objectId": "parent_catagory"
        };
        this.jwtToken = cookie.get('jwtToken');
        this.serverDetails.jwttoken = this.jwtToken;
        this.userData = JSON.parse(cookie.get('user_details'));
      }

      _createClass(AddEditTrainingComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this207 = this;

          this.route.params.subscribe(function (params) {
            _this207.recid = params['id'];
            console.log(params['id']);

            if (_this207.recid != null && _this207.recid != '' && _this207.recid != undefined) {
              // this.geteditdata()
              _this207.header_txt = 'Edit Training';
            }
          });
          this.formdataval = [{
            inputtype: 'text',
            name: 'catagory_name',
            label: 'Training Title',
            placeholder: 'Enter Training Title',
            validationrule: {
              required: true
            },
            validationerrormsg: 'is required'
          }, {
            inputtype: 'textarea',
            name: 'description',
            label: 'Description',
            placeholder: 'Enter Description'
          }, {
            inputtype: 'text',
            name: 'priority',
            label: 'Priority',
            placeholder: 'Enter Priority',
            validationrule: {
              required: true
            },
            validationerrormsg: 'is required'
          }, // {inputtype:'radio',name:'type',value:["Mentor","Mentee","All"],valuelabel:'',label:"Training accessible to",placeholder:"",validationrule:{required:true},validationerrormsg:'', class:'radioclass'},
          {
            inputtype: 'select',
            name: 'type',
            label: 'Select Role',
            sourceview: 'assets/user_type.json',
            multiple: true,
            sourcetype: 'static',
            selectvalue: 'name',
            selectid: 'val',
            validationrule: {
              required: true
            },
            validationerrormsg: 'is required'
          }, // { inputtype: 'text', name: 'catagoryname', label: 'Catagory Name ', placeholder: 'Enter Catagory Name', validationrule: { required: true }, validationerrormsg: 'is required' },
          {
            inputtype: 'select',
            name: 'parent_catagory',
            label: 'Parent Category',
            defaultchoice: 'Select a Parent Category',
            sourceview: 'training_category_management',
            endpoint: 'gettrainingcategorydata',
            selectvalue: 'catagory_name',
            selectid: '_id'
          }, // {inputtype:'select',name:'state',label:'State/Region',defaultchoice:'Select a State/region',sourceview:'assets/states.json',multiple:true, sourcetype:'static',selectvalue:'name',selectid:'abbreviation',validationrule:{required:true},validationerrormsg:'is required'},
          {
            inputtype: 'checkbox',
            name: 'status',
            label: 'Active',
            placeholder: 'Enter Status',
            validationrule: {
              required: true
            },
            validationerrormsg: 'is required'
          }];
        }
      }]);

      return AddEditTrainingComponent;
    }();

    AddEditTrainingComponent.ctorParameters = function () {
      return [{
        type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__["CookieService"]
      }];
    };

    AddEditTrainingComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-add-edit-training',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./add-edit-training.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/lazyload-training/training-management/manage-training/add-edit-training/add-edit-training.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./add-edit-training.component.css */
      "./src/app/components/lazyload-training/training-management/manage-training/add-edit-training/add-edit-training.component.css"))["default"]]
    })], AddEditTrainingComponent);
    /***/
  },

  /***/
  "./src/app/components/lazyload-training/training-management/manage-training/listing-training/listing-training.component.css":
  /*!**********************************************************************************************************************************!*\
    !*** ./src/app/components/lazyload-training/training-management/manage-training/listing-training/listing-training.component.css ***!
    \**********************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsLazyloadTrainingTrainingManagementManageTrainingListingTrainingListingTrainingComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbGF6eWxvYWQtdHJhaW5pbmcvdHJhaW5pbmctbWFuYWdlbWVudC9tYW5hZ2UtdHJhaW5pbmcvbGlzdGluZy10cmFpbmluZy9saXN0aW5nLXRyYWluaW5nLmNvbXBvbmVudC5jc3MifQ== */";
    /***/
  },

  /***/
  "./src/app/components/lazyload-training/training-management/manage-training/listing-training/listing-training.component.ts":
  /*!*********************************************************************************************************************************!*\
    !*** ./src/app/components/lazyload-training/training-management/manage-training/listing-training/listing-training.component.ts ***!
    \*********************************************************************************************************************************/

  /*! exports provided: ListingTrainingComponent */

  /***/
  function srcAppComponentsLazyloadTrainingTrainingManagementManageTrainingListingTrainingListingTrainingComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ListingTrainingComponent", function () {
      return ListingTrainingComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../../../../environments/environment */
    "./src/environments/environment.ts");

    var ListingTrainingComponent = /*#__PURE__*/function () {
      function ListingTrainingComponent(activatedRoute, cookie) {
        _classCallCheck(this, ListingTrainingComponent);

        this.activatedRoute = activatedRoute;
        this.cookie = cookie;
        this.manageTrainingList = [];
        this.editPageRoute = "/admin/training/manage-training/edit/";
        this.addPageRoute = "/admin/training/manage-training/add";
        this.searchSourceName = "training_category_management_view";
        this.serverDetails = {
          "serverUrl": _environments_environment__WEBPACK_IMPORTED_MODULE_4__["environment"].training_url,
          "jwttoken": ""
        };
        this.formSource = {
          "source": 'training_category_management',
          "endpoint": "trainingcatdelete",
          "deleteManyEndpoint": "trainingcatdeletemany",
          "searchEndpoint": "gettrainingcategorydata",
          "statusUpdateEndpoint": "trainingcatstatusupdate",
          "statusUpdateManyEndpoint": "trainingcatstatusupdate",
          "statusUpdateSourceName": "training_category_management",
          "trashDataSource": "training_category_management_view",
          "retriveTrashDataEndpoint": "trainingcatrestoredata",
          "retriveTrashDataSourceName": "training_category_management",
          "trainingCountEndpoint": "trainingcounts"
        };
        this.userData = JSON.parse(cookie.get('user_details'));
        this.jwtToken = cookie.get('jwtToken');
        this.serverDetails.jwttoken = this.jwtToken;
      }

      _createClass(ListingTrainingComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this208 = this;

          this.activatedRoute.data.forEach(function (data) {
            console.log(data);
            var result;
            result = data.trainingdata.res;
            _this208.manageTrainingList = result; // console.log('///')
          });
        }
      }]);

      return ListingTrainingComponent;
    }();

    ListingTrainingComponent.ctorParameters = function () {
      return [{
        type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__["CookieService"]
      }];
    };

    ListingTrainingComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-listing-training',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./listing-training.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/lazyload-training/training-management/manage-training/listing-training/listing-training.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./listing-training.component.css */
      "./src/app/components/lazyload-training/training-management/manage-training/listing-training/listing-training.component.css"))["default"]]
    })], ListingTrainingComponent);
    /***/
  },

  /***/
  "./src/app/components/lazyload-training/training-routing.module.ts":
  /*!*************************************************************************!*\
    !*** ./src/app/components/lazyload-training/training-routing.module.ts ***!
    \*************************************************************************/

  /*! exports provided: TrainingRoutingModule */

  /***/
  function srcAppComponentsLazyloadTrainingTrainingRoutingModuleTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TrainingRoutingModule", function () {
      return TrainingRoutingModule;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _training_management_manage_training_add_edit_training_add_edit_training_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./training-management/manage-training/add-edit-training/add-edit-training.component */
    "./src/app/components/lazyload-training/training-management/manage-training/add-edit-training/add-edit-training.component.ts");
    /* harmony import */


    var _training_management_manage_training_listing_training_listing_training_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./training-management/manage-training/listing-training/listing-training.component */
    "./src/app/components/lazyload-training/training-management/manage-training/listing-training/listing-training.component.ts");
    /* harmony import */


    var src_app_services_training_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! src/app/services/training.service */
    "./src/app/services/training.service.ts");
    /* harmony import */


    var _training_management_manage_lesson_add_edit_lesson_add_edit_lesson_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ./training-management/manage-lesson/add-edit-lesson/add-edit-lesson.component */
    "./src/app/components/lazyload-training/training-management/manage-lesson/add-edit-lesson/add-edit-lesson.component.ts");
    /* harmony import */


    var _training_management_manage_lesson_list_lesson_list_lesson_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ./training-management/manage-lesson/list-lesson/list-lesson.component */
    "./src/app/components/lazyload-training/training-management/manage-lesson/list-lesson/list-lesson.component.ts");
    /* harmony import */


    var _training_management_manage_quiz_list_quiz_list_quiz_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ./training-management/manage-quiz/list-quiz/list-quiz.component */
    "./src/app/components/lazyload-training/training-management/manage-quiz/list-quiz/list-quiz.component.ts");
    /* harmony import */


    var _training_management_manage_quiz_add_edit_quiz_add_edit_quiz_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ./training-management/manage-quiz/add-edit-quiz/add-edit-quiz.component */
    "./src/app/components/lazyload-training/training-management/manage-quiz/add-edit-quiz/add-edit-quiz.component.ts");
    /* harmony import */


    var _training_management_manage_quiz_add_edit_answer_add_edit_answer_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! ./training-management/manage-quiz/add-edit-answer/add-edit-answer.component */
    "./src/app/components/lazyload-training/training-management/manage-quiz/add-edit-answer/add-edit-answer.component.ts");
    /* harmony import */


    var _training_management_manage_quiz_list_answer_list_answer_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
    /*! ./training-management/manage-quiz/list-answer/list-answer.component */
    "./src/app/components/lazyload-training/training-management/manage-quiz/list-answer/list-answer.component.ts");

    var routes = [// training category management route
    {
      path: 'manage-training/add',
      component: _training_management_manage_training_add_edit_training_add_edit_training_component__WEBPACK_IMPORTED_MODULE_3__["AddEditTrainingComponent"]
    }, {
      path: '',
      component: _training_management_manage_training_add_edit_training_add_edit_training_component__WEBPACK_IMPORTED_MODULE_3__["AddEditTrainingComponent"]
    }, {
      path: 'manage-training/edit/:id',
      component: _training_management_manage_training_add_edit_training_add_edit_training_component__WEBPACK_IMPORTED_MODULE_3__["AddEditTrainingComponent"]
    }, {
      path: 'manage-training/list',
      component: _training_management_manage_training_listing_training_listing_training_component__WEBPACK_IMPORTED_MODULE_4__["ListingTrainingComponent"],
      // canActivate: [AuthguardService],
      resolve: {
        trainingdata: src_app_services_training_service__WEBPACK_IMPORTED_MODULE_5__["TrainingService"]
      },
      data: {
        requestcondition: {
          source: '',
          condition: {
            'is_trash': {
              $ne: 1
            }
          }
        },
        endpoint: 'gettrainingcategorydata'
      }
    }, //lesson management route
    {
      path: 'manage-lesson/add',
      component: _training_management_manage_lesson_add_edit_lesson_add_edit_lesson_component__WEBPACK_IMPORTED_MODULE_6__["AddEditLessonComponent"]
    }, {
      path: 'manage-lesson/edit/:id',
      component: _training_management_manage_lesson_add_edit_lesson_add_edit_lesson_component__WEBPACK_IMPORTED_MODULE_6__["AddEditLessonComponent"]
    }, {
      path: 'manage-lesson/list',
      component: _training_management_manage_lesson_list_lesson_list_lesson_component__WEBPACK_IMPORTED_MODULE_7__["ListLessonComponent"],
      // canActivate: [AuthguardService],
      resolve: {
        lessionData: src_app_services_training_service__WEBPACK_IMPORTED_MODULE_5__["TrainingService"]
      },
      data: {
        requestcondition: {
          source: '',
          condition: {
            'is_trash': {
              $ne: 1
            }
          }
        },
        endpoint: 'getlessondata'
      }
    }, //manage quiz route
    {
      path: 'manage-quiz/list/:lesson_id',
      component: _training_management_manage_quiz_list_quiz_list_quiz_component__WEBPACK_IMPORTED_MODULE_8__["ListQuizComponent"],
      resolve: {
        trainingdata: src_app_services_training_service__WEBPACK_IMPORTED_MODULE_5__["TrainingService"]
      },
      data: {
        requestcondition: {
          source: '',
          condition: {}
        },
        endpoint: 'getlessonquestiondata'
      }
    }, {
      path: 'manage-quiz/add/:id',
      component: _training_management_manage_quiz_add_edit_quiz_add_edit_quiz_component__WEBPACK_IMPORTED_MODULE_9__["AddEditQuizComponent"]
    }, {
      path: 'manage-quiz/edit/:_id/:lesson_id_object',
      component: _training_management_manage_quiz_add_edit_quiz_add_edit_quiz_component__WEBPACK_IMPORTED_MODULE_9__["AddEditQuizComponent"],
      resolve: {
        quizQuestionData: src_app_services_training_service__WEBPACK_IMPORTED_MODULE_5__["TrainingService"]
      },
      data: {
        requestcondition: {
          source: '',
          condition: {}
        },
        endpoint: 'getlessonquestiondatabyid'
      }
    }, {
      path: 'manage-quiz/add-answer/:id/:lessonid',
      component: _training_management_manage_quiz_add_edit_answer_add_edit_answer_component__WEBPACK_IMPORTED_MODULE_10__["AddEditAnswerComponent"]
    }, {
      path: 'manage-quiz/update-answer/:questionId',
      component: _training_management_manage_quiz_list_answer_list_answer_component__WEBPACK_IMPORTED_MODULE_11__["ListAnswerComponent"],
      resolve: {
        quizQuestionData: src_app_services_training_service__WEBPACK_IMPORTED_MODULE_5__["TrainingService"]
      },
      data: {
        requestcondition: {
          source: '',
          condition: {}
        },
        endpoint: 'getlessonanswerdata'
      }
    }];

    var TrainingRoutingModule = function TrainingRoutingModule() {
      _classCallCheck(this, TrainingRoutingModule);
    };

    TrainingRoutingModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
      imports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"].forChild(routes)],
      exports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"]],
      schemas: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["CUSTOM_ELEMENTS_SCHEMA"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["NO_ERRORS_SCHEMA"]]
    })], TrainingRoutingModule);
    /***/
  },

  /***/
  "./src/app/components/lazyload-training/training.module.ts":
  /*!*****************************************************************!*\
    !*** ./src/app/components/lazyload-training/training.module.ts ***!
    \*****************************************************************/

  /*! exports provided: TrainingModule */

  /***/
  function srcAppComponentsLazyloadTrainingTrainingModuleTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TrainingModule", function () {
      return TrainingModule;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var _training_routing_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./training-routing.module */
    "./src/app/components/lazyload-training/training-routing.module.ts");
    /* harmony import */


    var _training_management_manage_training_add_edit_training_add_edit_training_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./training-management/manage-training/add-edit-training/add-edit-training.component */
    "./src/app/components/lazyload-training/training-management/manage-training/add-edit-training/add-edit-training.component.ts");
    /* harmony import */


    var _training_management_manage_training_listing_training_listing_training_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./training-management/manage-training/listing-training/listing-training.component */
    "./src/app/components/lazyload-training/training-management/manage-training/listing-training/listing-training.component.ts");
    /* harmony import */


    var _training_management_manage_lesson_list_lesson_list_lesson_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ./training-management/manage-lesson/list-lesson/list-lesson.component */
    "./src/app/components/lazyload-training/training-management/manage-lesson/list-lesson/list-lesson.component.ts");
    /* harmony import */


    var _training_management_manage_lesson_add_edit_lesson_add_edit_lesson_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ./training-management/manage-lesson/add-edit-lesson/add-edit-lesson.component */
    "./src/app/components/lazyload-training/training-management/manage-lesson/add-edit-lesson/add-edit-lesson.component.ts");
    /* harmony import */


    var _common_template_common_template_module__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../../common-template/common-template.module */
    "./src/app/common-template/common-template.module.ts");
    /* harmony import */


    var traning_lib_influxiq__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! traning-lib-influxiq */
    "./node_modules/traning-lib-influxiq/fesm2015/traning-lib-influxiq.js");
    /* harmony import */


    var _training_management_manage_quiz_add_edit_quiz_add_edit_quiz_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! ./training-management/manage-quiz/add-edit-quiz/add-edit-quiz.component */
    "./src/app/components/lazyload-training/training-management/manage-quiz/add-edit-quiz/add-edit-quiz.component.ts");
    /* harmony import */


    var _training_management_manage_quiz_list_quiz_list_quiz_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
    /*! ./training-management/manage-quiz/list-quiz/list-quiz.component */
    "./src/app/components/lazyload-training/training-management/manage-quiz/list-quiz/list-quiz.component.ts");
    /* harmony import */


    var _training_management_manage_quiz_add_edit_answer_add_edit_answer_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
    /*! ./training-management/manage-quiz/add-edit-answer/add-edit-answer.component */
    "./src/app/components/lazyload-training/training-management/manage-quiz/add-edit-answer/add-edit-answer.component.ts");
    /* harmony import */


    var _training_management_manage_quiz_list_answer_list_answer_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
    /*! ./training-management/manage-quiz/list-answer/list-answer.component */
    "./src/app/components/lazyload-training/training-management/manage-quiz/list-answer/list-answer.component.ts");

    var TrainingModule = function TrainingModule() {
      _classCallCheck(this, TrainingModule);
    };

    TrainingModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
      declarations: [_training_management_manage_training_add_edit_training_add_edit_training_component__WEBPACK_IMPORTED_MODULE_4__["AddEditTrainingComponent"], _training_management_manage_training_listing_training_listing_training_component__WEBPACK_IMPORTED_MODULE_5__["ListingTrainingComponent"], _training_management_manage_lesson_add_edit_lesson_add_edit_lesson_component__WEBPACK_IMPORTED_MODULE_7__["AddEditLessonComponent"], _training_management_manage_lesson_list_lesson_list_lesson_component__WEBPACK_IMPORTED_MODULE_6__["ListLessonComponent"], _training_management_manage_quiz_add_edit_quiz_add_edit_quiz_component__WEBPACK_IMPORTED_MODULE_10__["AddEditQuizComponent"], _training_management_manage_quiz_list_quiz_list_quiz_component__WEBPACK_IMPORTED_MODULE_11__["ListQuizComponent"], _training_management_manage_quiz_add_edit_answer_add_edit_answer_component__WEBPACK_IMPORTED_MODULE_12__["AddEditAnswerComponent"], _training_management_manage_quiz_list_answer_list_answer_component__WEBPACK_IMPORTED_MODULE_13__["ListAnswerComponent"]],
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"], _training_routing_module__WEBPACK_IMPORTED_MODULE_3__["TrainingRoutingModule"], _common_template_common_template_module__WEBPACK_IMPORTED_MODULE_8__["CommonTemplateModule"], traning_lib_influxiq__WEBPACK_IMPORTED_MODULE_9__["TraningModule"]],
      exports: [// A11yModule,
        // FooterComponent,
        // HeaderComponent
      ],
      schemas: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["CUSTOM_ELEMENTS_SCHEMA"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["NO_ERRORS_SCHEMA"]]
    })], TrainingModule);
    /***/
  },

  /***/
  "./src/app/components/sales-person/add-new-doctor/add-new-doctor.component.css":
  /*!*************************************************************************************!*\
    !*** ./src/app/components/sales-person/add-new-doctor/add-new-doctor.component.css ***!
    \*************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsSalesPersonAddNewDoctorAddNewDoctorComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2FsZXMtcGVyc29uL2FkZC1uZXctZG9jdG9yL2FkZC1uZXctZG9jdG9yLmNvbXBvbmVudC5jc3MifQ== */";
    /***/
  },

  /***/
  "./src/app/components/sales-person/add-new-doctor/add-new-doctor.component.ts":
  /*!************************************************************************************!*\
    !*** ./src/app/components/sales-person/add-new-doctor/add-new-doctor.component.ts ***!
    \************************************************************************************/

  /*! exports provided: AddNewDoctorComponent */

  /***/
  function srcAppComponentsSalesPersonAddNewDoctorAddNewDoctorComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AddNewDoctorComponent", function () {
      return AddNewDoctorComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/material/dialog */
    "./node_modules/@angular/material/esm2015/dialog.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../../common/dialog-box/dialog-box.component */
    "./src/app/components/common/dialog-box/dialog-box.component.ts");

    var AddNewDoctorComponent = /*#__PURE__*/function () {
      function AddNewDoctorComponent(formBuilder, http, cookieService, dialog, router, acivatedRoute, snackBar) {
        _classCallCheck(this, AddNewDoctorComponent);

        this.formBuilder = formBuilder;
        this.http = http;
        this.cookieService = cookieService;
        this.dialog = dialog;
        this.router = router;
        this.acivatedRoute = acivatedRoute;
        this.snackBar = snackBar;
        this.params_id = '';
        this.htmlText = {
          userData: "",
          header: 'Add New Doctor',
          nav: 'Add Doctor',
          buttonText: 'Save',
          message: "Submitted Successfully",
          doctorOfficeData: [],
          techData: [],
          parent_type: [{
            name: "Distributor",
            value: "distributor"
          }, {
            name: "DiagnosticAdmin",
            value: "diagnostic_admin"
          }, {
            name: "DoctorGroup",
            value: "doctor_group"
          }],
          parent_id: [],
          cpt_amount: [{
            value: 12
          }, {
            value: 13
          }, {
            value: 14
          }, {
            value: 15
          }],
          billerData: [],
          states: "",
          allCities: "",
          cities: "",
          taxonomies: "",
          user_details: ""
        };
        this.htmlText.userData = this.cookieService.getAll();
        this.htmlText.user_details = JSON.parse(this.htmlText.userData.user_details);
        this.allStateCityData();

        if (this.acivatedRoute.snapshot.params._id) {
          this.generateAddEditForm('edit');
          this.htmlText.message = "Updated Successfully";
          this.htmlText.header = 'Edit Doctor Record';
          this.htmlText.nav = 'Edit Doctor';
          this.htmlText.buttonText = 'Update';
          this.params_id = this.acivatedRoute.snapshot.params._id;
        } else {
          this.generateAddEditForm('add');
        } // Generate Add Edit Form


        this.generateAddEditForm();
      }

      _createClass(AddNewDoctorComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }, {
        key: "generateAddEditForm",
        value: function generateAddEditForm() {
          var _this209 = this;

          var flag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
          var validateRule = {
            id: ['', []],
            firstname: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].maxLength(50)]],
            lastname: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].maxLength(50)]],
            email: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].email, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].maxLength(100)]],
            phone: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].minLength(7), _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].maxLength(16)]],
            fax: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]],
            practice_name: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]],
            npi: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]],
            address: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].maxLength(200)]],
            zip: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].minLength(4), _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].maxLength(18)]],
            city: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]],
            state: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]],
            user_type: ['doctor'],
            parent_type: ['admin'],
            parent_id: ['', []],
            cpt_validate_amount: [12, []],
            tech_id: ['', []],
            biller_id: ['', []],
            doctors_office_id: ['', []],
            taxo_list: ['', []],
            status: ['', []],
            password: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].maxLength(16), _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].minLength(6)]],
            confirmpassword: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]]
          };
          var passwordRule = {
            validators: this.matchpassword('password', 'confirmpassword')
          };

          switch (flag) {
            case 'edit':
              delete validateRule.password;
              delete validateRule.confirmpassword;
              this.doctorManagementAddEditForm = this.formBuilder.group(validateRule);
              this.acivatedRoute.data.subscribe(function (resolveData) {
                _this209.htmlText.techData = resolveData.data.data.tech_data;
                _this209.htmlText.billerData = resolveData.data.data.biller_data;
                _this209.htmlText.doctorOfficeData = resolveData.data.data.doctor_office_data;
                var doctorDetails = resolveData.data.data.doctor_data;

                _this209.doctorManagementAddEditForm.controls['id'].patchValue(doctorDetails[0]._id);

                _this209.doctorManagementAddEditForm.controls['firstname'].patchValue(doctorDetails[0].firstname);

                _this209.doctorManagementAddEditForm.controls['firstname'].patchValue(doctorDetails[0].firstname);

                _this209.doctorManagementAddEditForm.controls['lastname'].patchValue(doctorDetails[0].lastname);

                _this209.doctorManagementAddEditForm.controls['email'].patchValue(doctorDetails[0].email);

                _this209.doctorManagementAddEditForm.controls['phone'].patchValue(doctorDetails[0].phone);

                _this209.doctorManagementAddEditForm.controls['fax'].patchValue(doctorDetails[0].fax);

                _this209.doctorManagementAddEditForm.controls['practice_name'].patchValue(doctorDetails[0].practice_name);

                _this209.doctorManagementAddEditForm.controls['npi'].patchValue(doctorDetails[0].npi);

                _this209.doctorManagementAddEditForm.controls['address'].patchValue(doctorDetails[0].address);

                _this209.doctorManagementAddEditForm.controls['zip'].patchValue(doctorDetails[0].zip);

                _this209.doctorManagementAddEditForm.controls['city'].patchValue(doctorDetails[0].city);

                _this209.doctorManagementAddEditForm.controls['state'].patchValue(doctorDetails[0].state);

                _this209.doctorManagementAddEditForm.controls['city'].patchValue(doctorDetails[0].city);

                _this209.doctorManagementAddEditForm.controls['cpt_validate_amount'].patchValue(doctorDetails[0].cpt_validate_amount);

                _this209.doctorManagementAddEditForm.controls['tech_id'].patchValue(doctorDetails[0].tech_id);

                _this209.doctorManagementAddEditForm.controls['biller_id'].patchValue(doctorDetails[0].biller_id);

                _this209.doctorManagementAddEditForm.controls['doctors_office_id'].patchValue(doctorDetails[0].doctors_office_id);

                _this209.doctorManagementAddEditForm.controls['taxo_list'].patchValue(doctorDetails[0].taxo_list);

                _this209.doctorManagementAddEditForm.controls['status'].patchValue(doctorDetails[0].status);
              });
              break;

            case 'add':
              delete validateRule.id;
              this.acivatedRoute.data.subscribe(function (resolveData) {
                _this209.htmlText.techData = resolveData.data.data.tech_data;
                _this209.htmlText.billerData = resolveData.data.data.biller_data;
                _this209.htmlText.doctorOfficeData = resolveData.data.data.doctor_office_data;
              });
              this.doctorManagementAddEditForm = this.formBuilder.group(validateRule, passwordRule);
              break;
          } // Call function to get all City, State and Taxonomies


          this.allStateCityData();
        } // Fetch All City, State and Taxonomies

      }, {
        key: "allStateCityData",
        value: function allStateCityData() {
          var _this210 = this;

          this.http.getSiteSettingData("./assets/data-set/state.json").subscribe(function (response) {
            _this210.htmlText.states = response;
          });
          this.http.getSiteSettingData("./assets/data-set/city.json").subscribe(function (response) {
            _this210.htmlText.allCities = response;
          });
          this.http.getSiteSettingData("./assets/data-set/taxonomies.json").subscribe(function (response) {
            _this210.htmlText.taxonomies = response;
          });
        } // Confirm Password match function

      }, {
        key: "matchpassword",
        value: function matchpassword(passwordkye, confirmpasswordkye) {
          return function (group) {
            var passwordInput = group.controls[passwordkye],
                confirmpasswordInput = group.controls[confirmpasswordkye];

            if (passwordInput.value !== confirmpasswordInput.value) {
              return confirmpasswordInput.setErrors({
                notEquivalent: true
              });
            } else {
              return confirmpasswordInput.setErrors(null);
            }
          };
        }
      }, {
        key: "inputUntouch",
        value: function inputUntouch(form, val) {
          form.controls[val].markAsUntouched();
        }
      }, {
        key: "getCity",
        value: function getCity(event) {
          this.htmlText.cities = this.htmlText.allCities[event];
        }
      }, {
        key: "getCityByName",
        value: function getCityByName(stateName) {
          this.htmlText.cities = this.htmlText.allCities[stateName];
        }
      }, {
        key: "doctorManagementAddEditFormSubmit",
        value: function doctorManagementAddEditFormSubmit() {
          var _this211 = this;

          console.log("Data: ", this.htmlText.user_details);

          for (var x in this.doctorManagementAddEditForm.controls) {
            this.doctorManagementAddEditForm.controls[x].markAsTouched();
          }
          /* stop here if form is invalid */


          if (this.doctorManagementAddEditForm.valid) {
            delete this.doctorManagementAddEditForm.value.confirmpassword;

            if (this.doctorManagementAddEditForm.value.status) {
              this.doctorManagementAddEditForm.controls['status'].patchValue(parseInt("1"));
            } else {
              this.doctorManagementAddEditForm.controls['status'].patchValue(parseInt("0"));
            }

            if (this.doctorManagementAddEditForm.value.cpt_validate_amount) {
              this.doctorManagementAddEditForm.controls['cpt_validate_amount'].patchValue(parseInt(this.doctorManagementAddEditForm.value.cpt_validate_amount));
            }
            /* start process to submited data */


            var postData = {
              "source": "data_pece",
              "data": this.doctorManagementAddEditForm.value,
              "sourceobjArray": ["tech_id", "biller_id", "doctors_office_id"],
              "sourceobj": ["parent_id"],
              "token": this.cookieService.get('jwtToken')
            };

            if (this.htmlText.user_details.parent_type != 'admin') {
              postData.data.parent_id = this.htmlText.user_details.parent_id;
              postData.data.parent_type = this.htmlText.user_details.parent_type;
            } else {
              postData.data.parent_id = this.htmlText.user_details._id;
              postData.data.parent_type = this.htmlText.user_details.parent_type;
            }

            this.http.httpViaPostbyApi1('addorupdatedata', postData).subscribe(function (response) {
              if (response.status == "success") {
                var modalData1 = {
                  panelClass: 'bulkupload-dialog',
                  data: {
                    header: "Message",
                    message: "Successfully Saved.",
                    button1: {
                      text: ""
                    },
                    button2: {
                      text: "OK"
                    }
                  }
                };

                var dialogRef = _this211.dialog.open(_common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_8__["DialogBoxComponent"], modalData1);

                dialogRef.afterClosed().subscribe(function (result) {
                  switch (result) {
                    case "OK":
                      dialogRef.close();

                      _this211.router.navigateByUrl("sales-person/dashboard");

                      break;
                  }
                });
              } else {
                _this211.snackBar.open(response.msg, '', {
                  duration: 2000
                });
              }
            }, function (error) {
              _this211.snackBar.open("An error occurred. Please try again.", '', {
                duration: 2000
              });
            });
          }
        }
      }, {
        key: "getParentData",
        value: function getParentData() {
          var _this212 = this;

          var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
          var billerData = id;
          this.selectionChangeValue = billerData;

          if (billerData == 'DiagnosticAdmin' || billerData == "diagnostic_admin") {
            var data = {
              "source": "data_pece",
              "condition": {
                "user_type": "diagnostic_admin"
              },
              "token": this.htmlText.userData.jwtToken
            };
          }

          if (billerData == 'Distributor' || billerData == 'distributor') {
            var data = {
              "source": "data_pece",
              "condition": {
                "user_type": "distributors"
              },
              "token": this.htmlText.userData.jwtToken
            };
          }

          if (billerData == 'DoctorGroup' || billerData == "doctor_group") {
            var data = {
              "source": "data_pece",
              "condition": {
                "user_type": "doctor_group"
              },
              "token": this.htmlText.userData.jwtToken
            };
          }

          this.http.httpViaPost('datalist', data).subscribe(function (response) {
            _this212.htmlText.parent_id = response.res;
          });
        }
      }]);

      return AddNewDoctorComponent;
    }();

    AddNewDoctorComponent.ctorParameters = function () {
      return [{
        type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_6__["HttpServiceService"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_7__["CookieService"]
      }, {
        type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MatDialog"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatSnackBar"]
      }];
    };

    AddNewDoctorComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-add-new-doctor',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./add-new-doctor.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/sales-person/add-new-doctor/add-new-doctor.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./add-new-doctor.component.css */
      "./src/app/components/sales-person/add-new-doctor/add-new-doctor.component.css"))["default"]]
    })], AddNewDoctorComponent);
    /***/
  },

  /***/
  "./src/app/components/sales-person/cpt-validate-report-salesperson/cpt-validate-report-sales-person/cpt-validate-report-sales-person.component.css":
  /*!*********************************************************************************************************************************************************!*\
    !*** ./src/app/components/sales-person/cpt-validate-report-salesperson/cpt-validate-report-sales-person/cpt-validate-report-sales-person.component.css ***!
    \*********************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsSalesPersonCptValidateReportSalespersonCptValidateReportSalesPersonCptValidateReportSalesPersonComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2FsZXMtcGVyc29uL2NwdC12YWxpZGF0ZS1yZXBvcnQtc2FsZXNwZXJzb24vY3B0LXZhbGlkYXRlLXJlcG9ydC1zYWxlcy1wZXJzb24vY3B0LXZhbGlkYXRlLXJlcG9ydC1zYWxlcy1wZXJzb24uY29tcG9uZW50LmNzcyJ9 */";
    /***/
  },

  /***/
  "./src/app/components/sales-person/cpt-validate-report-salesperson/cpt-validate-report-sales-person/cpt-validate-report-sales-person.component.ts":
  /*!********************************************************************************************************************************************************!*\
    !*** ./src/app/components/sales-person/cpt-validate-report-salesperson/cpt-validate-report-sales-person/cpt-validate-report-sales-person.component.ts ***!
    \********************************************************************************************************************************************************/

  /*! exports provided: CptValidateReportSalesPersonComponent */

  /***/
  function srcAppComponentsSalesPersonCptValidateReportSalespersonCptValidateReportSalesPersonCptValidateReportSalesPersonComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CptValidateReportSalesPersonComponent", function () {
      return CptValidateReportSalesPersonComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var ngx_device_detector__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ngx-device-detector */
    "./node_modules/ngx-device-detector/fesm2015/ngx-device-detector.js");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../../../../../environments/environment */
    "./src/environments/environment.ts"); // import { DownloadDetailsComponent } from './download-details/download-details.component';


    var CptValidateReportSalesPersonComponent = /*#__PURE__*/function () {
      // lib list end
      function CptValidateReportSalesPersonComponent(router, cookieService, http, activatedRoute, dialog, deviceService, matSnackBar) {
        var _this213 = this;

        _classCallCheck(this, CptValidateReportSalesPersonComponent);

        this.router = router;
        this.cookieService = cookieService;
        this.http = http;
        this.activatedRoute = activatedRoute;
        this.dialog = dialog;
        this.deviceService = deviceService;
        this.matSnackBar = matSnackBar;
        this.loginUserData = {};
        this.jwtToken = "";
        this.user = {};
        this.htmlText = {
          headerText: "Patient Reports"
        };
        this.allResolveData = {};
        this.shareDetails = {
          baseUrl: _environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].doctorSignUpBaseUrl,
          userId: ""
        }; // Lib list

        this.allBillerData = [];
        this.billerData_count = 0;
        this.allUserData_skip = ["_id", "report_file_type", "tech_id", "tech_email", "batch_name", "report_type", "status", "file_basepath", "file_bucketname", "file_name", "file_original_name", "file_type", "converted_image", "images", "patient_details", "patient_name_search", "report_life_circle", "note", "additional_potential_health_risks", "cpt_codes", "created_at", "doctor_name"];
        this.editUrl = "admin/biller-management/edit";
        this.libdata = {
          basecondition: "",
          updateendpoint: 'status-update',
          hideeditbutton: true,
          hidedeletebutton: true,
          hidestatustogglebutton: true,
          hideviewbutton: true,
          hidedeletemany: true,
          hideupdatemany: true,
          custombuttons: [{
            label: "View Report",
            route: "sales-person/patient-record/",
            type: 'internallink',
            param: ['_id']
          }, {
            label: "Download Report",
            link: _environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].s3bucket + "reports",
            type: 'externallink',
            paramtype: 'angular',
            param: ['download_file_name']
          }, {
            label: "Tech Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-tech-details',
            // otherparam:["patient_name"],
            //cond:'status',
            //condval:0,
            datafields: ['first name', 'last name', 'email', 'phone', 'address', 'city', 'state', 'zip'],
            param: 'id',
            headermessage: 'Tech Information'
          }, {
            label: "View Codes",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-codes-details',
            datafields: ['Additional Potential Health Risks', 'CPT Codes', 'ICD Codes'],
            // otherparam:["patient_name"],
            //cond:'status',
            //condval:0,
            param: 'id',
            headermessage: 'Associated Codes'
          }, {
            label: "Doctor Office Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-doctor-office-details',
            datafields: ['center name', 'first name', 'last name', 'email', 'phone', 'address', 'city', 'state', 'zip'],
            // otherparam:["patient_name"],
            //cond:'status',
            //condval:0,
            param: 'id',
            headermessage: 'Doctor Office Info'
          }, {
            label: "Parent Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-parent-details',
            datafields: ['Parent Name', 'Contact Person', 'email', 'phone', 'address', 'city', 'state', 'zip'],
            // otherparam:["patient_name"],
            // cond:'parent_check',
            // condval:"1",
            param: 'id',
            headermessage: 'Parent Information'
          }],
          tableheaders: ["patient_name", // "tech_name",
          "status_text", "created_at_datetime", "cpt_addl", "general_details", "cpt_amount", "total_cpt_amount" // "parent_type",`
          // "parent_id",
          // "doctors_office_id",
          ]
        };
        this.allUserData_modify_header = {
          "general_details": "Related Info",
          // "tech_name": "Tech Name",
          "patient_name": "Patient Name",
          "status_text": "Status",
          "created_at_datetime": "Report Added",
          "cpt_addl": "CPT/ Addl Hrisk C",
          "cpt_amount": "Per CPT Validate Amount($)",
          "total_cpt_amount": "Total Validate Amount($)" // "addl_hlth_risk": "Addl Hlth Risk"

        };
        this.UpdateEndpoint = "addorupdatedata";
        this.deleteEndpoint = "deletesingledata";
        this.apiUrl = _environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].apiBaseUrl1;
        this.tableName = "data_pece";
        this.datacollection = 'getPatientreport';
        this.sortdata = {
          "type": 'desc',
          "field": 'patient_name',
          "options": ['patient_name']
        };
        this.limitcond = {
          "limit": 10,
          "skip": 0,
          "pagecount": 1
        };
        this.previewModal_detail_skip = ['_id', 'user_type', 'status', 'password', 'created_at'];
        this.status = [{
          val: "Biller Admin Approved",
          'name': 'Biller Admin Approved'
        }, {
          val: "Biller Admin Not Approved",
          'name': 'Biller Admin Not Approved'
        }, {
          val: "Biller Admin Hold",
          'name': "Biller Admin Hold"
        }];
        this.parent_type = [{
          val: "admin",
          'name': 'Admin'
        }, {
          val: "diagnostic_admin",
          'name': 'Diagnostic Admin'
        }, {
          val: "distributors",
          'name': 'Distributor'
        }, {
          val: "doctor_group",
          'name': 'Doctor Group'
        }];
        this.cptcodes = [{
          val: "95923",
          'name': '95923'
        }, {
          val: "95943",
          'name': '95943'
        }, {
          val: "95921",
          'name': "95921"
        }, {
          val: "93923",
          'name': "93923"
        }, {
          val: "93922",
          'name': "93922"
        }];
        this.report_type = [{
          val: "RM-3A",
          'name': 'RM-3A'
        }, {
          val: "TM FLOW V3",
          'name': 'TM FLOW V3'
        }, {
          val: "TM FLOW V4",
          'name': 'TM FLOW V4'
        }, {
          val: "CMAT with BP Cuffs",
          'name': 'CMAT with BP Cuffs'
        }];
        this.SearchingEndpoint = "datalist";
        this.authval = [];
        this.docofficeval = [];
        this.techval = [];
        this.parentnameval = [];
        this.doctorcity = [];
        this.doctorstate = [];
        this.patientcity = [];
        this.patientstate = [];
        this.SearchingSourceName = "data_biller_list";
        this.search_settings = {
          selectsearch: [{
            label: 'Search By Report Type',
            field: 'report_file_type',
            values: this.report_type
          }, {
            label: "Search By Patient City",
            field: 'patient_state_search',
            values: this.patientcity
          }, {
            label: "Search By Doctor",
            field: 'doc_name_search',
            values: this.authval
          }, {
            label: "Search By Tech",
            field: 'tech_name_search',
            values: this.techval
          }, {
            label: "Search By Doctor Office",
            field: 'doctor_ofiice_name_search',
            values: this.docofficeval
          }, {
            label: "Search By Parent Name",
            field: 'parent_name_search',
            values: this.parentnameval
          }, {
            label: "Search By Doctor City",
            field: 'doctor_city_search',
            values: this.doctorcity
          }, {
            label: "Search By Doctor State",
            field: 'doctor_state_search',
            values: this.doctorstate
          }, {
            label: "Search By Patient State",
            field: 'patient_city_search',
            values: this.patientstate
          }],
          datesearch: [{
            startdatelabel: "Start Date",
            enddatelabel: "End Date",
            submit: "Search",
            field: "created_at_datetime"
          }],
          textsearch: [{
            label: "Search By Patient Name",
            field: 'patient_name_search'
          }],
          // { label: "Search By E-Mail", field: 'email' }, { label: "Search By Parent Name", field: 'parent_search' }, { label: "Search By Company Name", field: 'company_search' }],
          search: [{
            label: 'Search By CPT Codes',
            field: 'cpt_codes_search',
            values: this.cptcodes
          }]
        };
        this.loginUserData["user_details"] = cookieService.getAll();
        this.loginUserData.user_details.user_details = JSON.parse(this.loginUserData.user_details.user_details);
        this.shareDetails.userId = this.loginUserData.user_details.user_details._id;
        this.shareDetails.user_type = this.loginUserData.user_details.user_details.user_type;
        this.loginUserData["jwtToken"] = cookieService.get('jwtToken');
        /* Get Auth Token */

        this.jwtToken = cookieService.get('jwtToken');
        this.user = {
          parent_id: this.loginUserData.user_details.user_details._id
        };
        /* Get resolve data */
        // this.activatedRoute.data.subscribe(resolveData => {
        // this.allResolveData = resolveData.dataCount.data.dashboardCount[0];
        //this.viewReportProcessData(this.htmlText.headerText);
        // });

        this.libdata.basecondition = this.user; // lib list

        var endpoint = 'getPatientreport';
        var endpointc = 'getPatientreport-count';
        var data = {
          "condition": {
            "limit": 10,
            "skip": 0
          },
          sort: {
            "type": 'desc',
            "field": 'patient_name'
          },
          data: this.user
        };
        this.http.httpViaPostbyApi1(endpointc, data).subscribe(function (res) {
          _this213.billerData_count = res.count;
        }, function (error) {
          console.log('Oooops!');
        });
        this.http.httpViaPostbyApi1(endpoint, data).subscribe(function (res) {
          // console.log(res);
          _this213.allBillerData = res.results.res;
        }, function (error) {
          console.log('Oooops!');
        });
      }

      _createClass(CptValidateReportSalesPersonComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this214 = this;

          var data = {
            "data": this.user
          }; // data.condition = this.user;

          this.http.httpViaPostbyApi1("datalist-report", data).subscribe(function (response) {
            var start = false;
            var count = 0;

            for (var i in response.res) {
              if (response.res[i].doc_name_search != "") {
                for (var j in _this214.authval) {
                  if (response.res[i].doc_name == _this214.authval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this214.authval.push({
                    name: response.res[i].doc_name,
                    val: response.res[i].doc_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].tech_name_search != "") {
                for (var j in _this214.techval) {
                  if (response.res[i].tech_namesearch == _this214.techval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this214.techval.push({
                    name: response.res[i].tech_namesearch,
                    val: response.res[i].tech_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].parent_name_search != "") {
                for (var j in _this214.parentnameval) {
                  if (response.res[i].parent_namesearch == _this214.parentnameval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this214.parentnameval.push({
                    name: response.res[i].parent_namesearch,
                    val: response.res[i].parent_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].doctor_state_search != "") {
                for (var j in _this214.doctorstate) {
                  if (response.res[i].doctor_state == _this214.doctorstate[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this214.doctorstate.push({
                    name: response.res[i].doctor_state,
                    val: response.res[i].doctor_state_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].doctor_city_search != "") {
                for (var j in _this214.doctorcity) {
                  if (response.res[i].doctor_city == _this214.doctorcity[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this214.doctorcity.push({
                    name: response.res[i].doctor_city,
                    val: response.res[i].doctor_city_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].patient_city_search != "") {
                for (var j in _this214.patientcity) {
                  if (response.res[i].patient_city == _this214.patientcity[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this214.patientcity.push({
                    name: response.res[i].patient_city,
                    val: response.res[i].patient_city_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].patient_state_search != "") {
                for (var j in _this214.patientstate) {
                  if (response.res[i].patient_state == _this214.patientstate[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this214.patientstate.push({
                    name: response.res[i].patient_state,
                    val: response.res[i].patient_state_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].doctor_ofiice_name_search != "") {
                for (var j in _this214.docofficeval) {
                  if (response.res[i].doctor_ofiice_namesearch == _this214.docofficeval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this214.docofficeval.push({
                    name: response.res[i].doctor_ofiice_namesearch,
                    val: response.res[i].doctor_ofiice_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }
          }, function (error) {
            console.log('Oooops!');
          });
        }
      }, {
        key: "ngAfterViewInit",
        value: function ngAfterViewInit() {}
      }, {
        key: "viewReportProcessData",
        value: function viewReportProcessData(flag) {
          console.log(flag);
        }
      }]);

      return CptValidateReportSalesPersonComponent;
    }();

    CptValidateReportSalesPersonComponent.ctorParameters = function () {
      return [{
        type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__["HttpServiceService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatDialog"]
      }, {
        type: ngx_device_detector__WEBPACK_IMPORTED_MODULE_6__["DeviceDetectorService"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatSnackBar"]
      }];
    };

    CptValidateReportSalesPersonComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-cpt-validate-report-sales-person',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./cpt-validate-report-sales-person.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/sales-person/cpt-validate-report-salesperson/cpt-validate-report-sales-person/cpt-validate-report-sales-person.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./cpt-validate-report-sales-person.component.css */
      "./src/app/components/sales-person/cpt-validate-report-salesperson/cpt-validate-report-sales-person/cpt-validate-report-sales-person.component.css"))["default"]]
    })], CptValidateReportSalesPersonComponent);
    /***/
  },

  /***/
  "./src/app/components/sales-person/sales-person-dashboard/sales-person-dashboard.component.css":
  /*!*****************************************************************************************************!*\
    !*** ./src/app/components/sales-person/sales-person-dashboard/sales-person-dashboard.component.css ***!
    \*****************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsSalesPersonSalesPersonDashboardSalesPersonDashboardComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2FsZXMtcGVyc29uL3NhbGVzLXBlcnNvbi1kYXNoYm9hcmQvc2FsZXMtcGVyc29uLWRhc2hib2FyZC5jb21wb25lbnQuY3NzIn0= */";
    /***/
  },

  /***/
  "./src/app/components/sales-person/sales-person-dashboard/sales-person-dashboard.component.ts":
  /*!****************************************************************************************************!*\
    !*** ./src/app/components/sales-person/sales-person-dashboard/sales-person-dashboard.component.ts ***!
    \****************************************************************************************************/

  /*! exports provided: SalesPersonDashboardComponent */

  /***/
  function srcAppComponentsSalesPersonSalesPersonDashboardSalesPersonDashboardComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "SalesPersonDashboardComponent", function () {
      return SalesPersonDashboardComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../../../../environments/environment */
    "./src/environments/environment.ts");

    var SalesPersonDashboardComponent = /*#__PURE__*/function () {
      function SalesPersonDashboardComponent(http, cookieService, router, activatedRoute) {
        var _this215 = this;

        _classCallCheck(this, SalesPersonDashboardComponent);

        this.http = http;
        this.cookieService = cookieService;
        this.router = router;
        this.activatedRoute = activatedRoute;
        this.displayedColumns = ['no', 'doctors_name', 'email', 'phone', 'NPI', 'addon', 'address'];
        this.userData = {};
        this.shareDetails = {}; // public cookieUserallData: any = JSON.parse(this.cookieService.get('user_details'))

        this.docData_count = 0;
        this.docData = [];
        this.docData_skip = ["_id", "fax", "address", "zip", "city", "state", "user_type", "tech_id", "biller_id", "doctors_office_id", "diagnostic_admin_id", "taxo_list", "password", "created_at", "id", "name_search", "updated_at", "doctor_signature", "distributor_id", "diagnostic_admin_id", "doctorgroup_id"];
        this.docData_modify_header = {
          firstname: "First Name",
          lastname: "Last Name",
          practice_name: "Practice Name",
          parent_name: "Parent Name",
          parent_type: "Parent Type",
          npi: "NPI#",
          email: "Email",
          phone: "Phone Number",
          status: "Status",
          created_date: "Created Date"
        };
        this.previewModal_skip = ["_id", "user_type", "tech_id", "biller_id", "doctors_office_id", "taxo_list", "password", "created_at", "id", "name_search", "updated_at"];
        this.tableName = 'users';
        this.UpdateEndpoint = "addorupdatedata";
        this.deleteEndpoint = "deletesingledata";
        this.searchingEndpoint = "datalist";
        this.searchSourceName = "data_doctor_list";
        this.editUrl = 'sales-person/edit-doctor';
        this.datacollection = 'getdoctorlistdata';
        this.libdata = {
          basecondition: "",
          updateendpoint: 'statusupdate',
          hidedeletemany: true,
          hideeditbutton: false,
          hidedeletebutton: true,
          hideviewbutton: false,
          hidestatustogglebutton: true,
          hideaction: false,
          tableheaders: ['firstname', 'lastname', 'email', 'phone', 'practice_name', 'npi', 'status', 'created_date']
        };
        this.sortdata = {
          "type": 'desc',
          "field": 'firstname',
          "options": ['firstname', 'email', 'practice_name', 'npi', 'status', 'created_date']
        };
        this.limitcond = {
          "limit": 10,
          "skip": 0,
          "pagecount": 1
        };
        this.status = [{
          val: 1,
          'name': 'Active'
        }, {
          val: 0,
          'name': 'Inactive'
        }];
        this.search_settings = {
          selectsearch: [{
            label: 'Search By Status',
            field: 'status',
            values: this.status
          }],
          textsearch: [{
            label: "Search By Name",
            field: 'name_search'
          }, // {label:"Search by Taxonomy",field:'taxo_list'},
          {
            label: "Search By E-Mail",
            field: 'email'
          }, {
            label: "Search By NPI",
            field: 'npi'
          }]
        }; // ====================================================================

        this.allResolveData = {};
        this.user_cookie = cookieService.get('jwtToken');
        var allData = cookieService.getAll();
        this.userData = JSON.parse(allData.user_details);
        this.libdata.basecondition = {
          parent_id: this.userData._id
        };
        this.shareDetails = {
          baseUrl: _environments_environment__WEBPACK_IMPORTED_MODULE_5__["environment"].doctorSignUpBaseUrl,
          userId: this.userData._id
        }; // console.log('libdata',this.libdata);

        this.apiUrl = http.baseUrl;
        /* Get resolve data */

        this.activatedRoute.data.subscribe(function (resolveData) {
          _this215.allResolveData = resolveData.dataCount.data;
        });
      }

      _createClass(SalesPersonDashboardComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this216 = this;

          this.datasource = '';
          var endpoint = 'getdoctorlistdata';
          var endpointc = 'getdoctorlistdata-count';
          var data = {
            "condition": {
              "limit": 10,
              "skip": 0
            },
            sort: {
              "type": 'desc',
              "field": 'firstname'
            },
            data: {}
          };

          if (this.userData.parent_type != 'admin') {
            data.data.parent_id = this.userData._id;
            data.data.parent_type = this.userData.parent_type;
          } else {
            data.data.parent_id = this.userData.parent_id;
            data.data.parent_type = this.userData.parent_type;
          }

          this.http.httpViaPost(endpointc, data).subscribe(function (res) {
            // console.log('in constructor');
            // console.log(result);
            _this216.docData_count = res.count; //console.warn('blogData c',res);
          }, function (error) {
            console.log('Oooops!');
          });
          this.http.httpViaPost(endpoint, data).subscribe(function (res) {
            _this216.docData = res.results.res;
          }, function (error) {
            console.log('Oooops!');
          });
        }
      }]);

      return SalesPersonDashboardComponent;
    }();

    SalesPersonDashboardComponent.ctorParameters = function () {
      return [{
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_2__["HttpServiceService"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__["CookieService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"]
      }];
    };

    SalesPersonDashboardComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-sales-person-dashboard',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./sales-person-dashboard.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/sales-person/sales-person-dashboard/sales-person-dashboard.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./sales-person-dashboard.component.css */
      "./src/app/components/sales-person/sales-person-dashboard/sales-person-dashboard.component.css"))["default"]]
    })], SalesPersonDashboardComponent);
    /***/
  },

  /***/
  "./src/app/components/sales-person/sales-person-footer/sales-person-footer.component.css":
  /*!***********************************************************************************************!*\
    !*** ./src/app/components/sales-person/sales-person-footer/sales-person-footer.component.css ***!
    \***********************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsSalesPersonSalesPersonFooterSalesPersonFooterComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = ".footer_section{ display: block; border-top: 1px solid #c7c7c7; margin-top: 30px; background: #e0e5eb; padding: 10px; margin: 0; }\n.footer_section .footer_content{ width: 600px; padding: 0 16px; margin: 0 auto; display: block; text-align: center; }\n.footer_section .footer_content .link{ margin-top: 10px; display: block;  }\n.footer_section .footer_content .link a:nth-of-type(1){ border-right: 1px solid #797979; padding-right: 5px; }\n.footer_section .footer_content .link a, .footer_section .footer_content p{ font-size: 16px; font-family: \"AvenirLight\"; color: #797979; text-decoration: none;}\n.footer_content p{ margin: 0; margin-bottom: 5px; }\n@media screen and (max-width: 668px){\n  .footer_section .footer_content { width: auto; }\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9zYWxlcy1wZXJzb24vc2FsZXMtcGVyc29uLWZvb3Rlci9zYWxlcy1wZXJzb24tZm9vdGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCLGNBQWMsRUFBRSw2QkFBNkIsRUFBRSxnQkFBZ0IsRUFBRSxtQkFBbUIsRUFBRSxhQUFhLEVBQUUsU0FBUyxFQUFFO0FBQ2pJLGlDQUFpQyxZQUFZLEVBQUUsZUFBZSxFQUFFLGNBQWMsRUFBRSxjQUFjLEVBQUUsa0JBQWtCLEVBQUU7QUFDcEgsdUNBQXVDLGdCQUFnQixFQUFFLGNBQWMsR0FBRztBQUMxRSx3REFBd0QsK0JBQStCLEVBQUUsa0JBQWtCLEVBQUU7QUFDN0csNEVBQTRFLGVBQWUsRUFBRSwwQkFBMEIsRUFBRSxjQUFjLEVBQUUscUJBQXFCLENBQUM7QUFDL0osbUJBQW1CLFNBQVMsRUFBRSxrQkFBa0IsRUFBRTtBQUdsRDtFQUNFLGtDQUFrQyxXQUFXLEVBQUU7QUFDakQiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL3NhbGVzLXBlcnNvbi9zYWxlcy1wZXJzb24tZm9vdGVyL3NhbGVzLXBlcnNvbi1mb290ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb290ZXJfc2VjdGlvbnsgZGlzcGxheTogYmxvY2s7IGJvcmRlci10b3A6IDFweCBzb2xpZCAjYzdjN2M3OyBtYXJnaW4tdG9wOiAzMHB4OyBiYWNrZ3JvdW5kOiAjZTBlNWViOyBwYWRkaW5nOiAxMHB4OyBtYXJnaW46IDA7IH1cbi5mb290ZXJfc2VjdGlvbiAuZm9vdGVyX2NvbnRlbnR7IHdpZHRoOiA2MDBweDsgcGFkZGluZzogMCAxNnB4OyBtYXJnaW46IDAgYXV0bzsgZGlzcGxheTogYmxvY2s7IHRleHQtYWxpZ246IGNlbnRlcjsgfVxuLmZvb3Rlcl9zZWN0aW9uIC5mb290ZXJfY29udGVudCAubGlua3sgbWFyZ2luLXRvcDogMTBweDsgZGlzcGxheTogYmxvY2s7ICB9XG4uZm9vdGVyX3NlY3Rpb24gLmZvb3Rlcl9jb250ZW50IC5saW5rIGE6bnRoLW9mLXR5cGUoMSl7IGJvcmRlci1yaWdodDogMXB4IHNvbGlkICM3OTc5Nzk7IHBhZGRpbmctcmlnaHQ6IDVweDsgfVxuLmZvb3Rlcl9zZWN0aW9uIC5mb290ZXJfY29udGVudCAubGluayBhLCAuZm9vdGVyX3NlY3Rpb24gLmZvb3Rlcl9jb250ZW50IHB7IGZvbnQtc2l6ZTogMTZweDsgZm9udC1mYW1pbHk6IFwiQXZlbmlyTGlnaHRcIjsgY29sb3I6ICM3OTc5Nzk7IHRleHQtZGVjb3JhdGlvbjogbm9uZTt9XG4uZm9vdGVyX2NvbnRlbnQgcHsgbWFyZ2luOiAwOyBtYXJnaW4tYm90dG9tOiA1cHg7IH1cblxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA2NjhweCl7XG4gIC5mb290ZXJfc2VjdGlvbiAuZm9vdGVyX2NvbnRlbnQgeyB3aWR0aDogYXV0bzsgfVxufVxuIl19 */";
    /***/
  },

  /***/
  "./src/app/components/sales-person/sales-person-footer/sales-person-footer.component.ts":
  /*!**********************************************************************************************!*\
    !*** ./src/app/components/sales-person/sales-person-footer/sales-person-footer.component.ts ***!
    \**********************************************************************************************/

  /*! exports provided: SalesPersonFooterComponent */

  /***/
  function srcAppComponentsSalesPersonSalesPersonFooterSalesPersonFooterComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "SalesPersonFooterComponent", function () {
      return SalesPersonFooterComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");

    var SalesPersonFooterComponent = /*#__PURE__*/function () {
      function SalesPersonFooterComponent() {
        _classCallCheck(this, SalesPersonFooterComponent);

        this.htmlData = {};
        this.htmlData["year"] = new Date().getFullYear();
      }

      _createClass(SalesPersonFooterComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }]);

      return SalesPersonFooterComponent;
    }();

    SalesPersonFooterComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-sales-person-footer',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./sales-person-footer.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/sales-person/sales-person-footer/sales-person-footer.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./sales-person-footer.component.css */
      "./src/app/components/sales-person/sales-person-footer/sales-person-footer.component.css"))["default"]]
    })], SalesPersonFooterComponent);
    /***/
  },

  /***/
  "./src/app/components/sales-person/sales-person-header/sales-person-header.component.css":
  /*!***********************************************************************************************!*\
    !*** ./src/app/components/sales-person/sales-person-header/sales-person-header.component.css ***!
    \***********************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsSalesPersonSalesPersonHeaderSalesPersonHeaderComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/* header css */\n\n.techdashboard_header { height: auto; padding: 0; background: #fff; box-shadow: 0px 2px 7px 2px #b7b7b7; margin: 20px 0; }\n\n.techdashboard_header .header_wrapper{ width: 1400px; margin: 0 auto; display: flex; align-items: center; justify-content: space-between;}\n\n.techdashboard_header .logo_wrapper { max-width: 160px; display: block; cursor: pointer; flex: none; }\n\n.techdashboard_header .logo_wrapper:focus { outline: none; border: none; }\n\n.techdashboard_header .logo_wrapper img { max-width: 100%; vertical-align: middle; }\n\n.techdashboard_header .quotation { margin-bottom: 0px; }\n\n.techdashboard_header .quotation p { font-family: \"AvenirMedium\"; font-size: 22px; color: #002035; text-transform: uppercase; margin: 0; word-break: break-word; white-space: normal;\n  text-align: center; line-height: 22px;}\n\n.techdashboard_header .profile_section button { padding-top: 8px; }\n\n.techdashboard_header .profile_section {  display: flex;  border-left: 1px solid #ada9a9;  padding-left: 5px;  margin-bottom: 0;  justify-content: center;  align-items: center; }\n\n.techdashboard_header .profile_section .username { padding-right: 10px;\n  display: block;\n  font-family: \"AvenirRoman\";\n  font-size: 16px;\n  color: #1f1f1f;}\n\n.techdashboard_header .quotation .mat-list-base { display: flex; padding-top: 0; }\n\n/* .techdashboard_header .quotation .mat-list-base .mat-list-item:before {\n  content: \"\";\n  left: -15px;\n  width: 2px;\n  height: 15px;\n  background: #1c1c1c;\n  display: inline-block;\n  position: absolute;\n  top: 35%;\n} */\n\n.techdashboard_header .quotation .mat-nav-list .mat-list-item { margin: 0; position: relative; font-family: \"AvenirMedium\"; font-size: 16px; color: #767676;}\n\n.active { color: #000000!important;  /* border-bottom: 3px solid #fecb00; position: relative; */}\n\n.active::before{ content: ''; width: 100%; height: 4px; background: #fecb00; position: absolute; bottom: -25px; }\n\n.togle_menu { display: none;}\n\n.techdashboard_header .header_title{ color: #000; font-family: 'AvenirMedium'; font-size: 18px; white-space: normal; word-break: break-word; text-align: center;\n  line-height: 20px; margin: 0; }\n\n@media screen and (max-width: 1500px){\n  .techdashboard_header .header_wrapper { width: 90%; }\n}\n\n@media screen and (max-width: 1199px){\n.techdashboard_header .quotation p { font-size: 18px;}\n.techdashboard_header .header_title { font-size: 16px; }\n\n}\n\n@media screen and (max-width: 991px){\n.techdashboard_header .header_wrapper { display: flex; flex-direction: column; }\n.techdashboard_header .quotation p { margin: 10px 5px; }\n.techdashboard_header .profile_section{ border-left: 0;}\n.togle_menu { display: block;}\n.success{ display: block;}\n.danger{ display: none;}\n.techdashboard_header .quotation .mat-list-base { display: flex; flex-direction: column; }\n.techdashboard_header .quotation { width: 100%;}\n.active::before{ bottom: 0; height: 2px;}\n.techdashboard_header .quotation .mat-nav-list .mat-list-item { display: flex; justify-content: center; }\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9zYWxlcy1wZXJzb24vc2FsZXMtcGVyc29uLWhlYWRlci9zYWxlcy1wZXJzb24taGVhZGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLGVBQWU7O0FBRWYsd0JBQXdCLFlBQVksRUFBRSxVQUFVLEVBQUUsZ0JBQWdCLEVBQUUsbUNBQW1DLEVBQUUsY0FBYyxFQUFFOztBQUN6SCx1Q0FBdUMsYUFBYSxFQUFFLGNBQWMsRUFBRSxhQUFhLEVBQUUsbUJBQW1CLEVBQUUsOEJBQThCLENBQUM7O0FBQ3pJLHNDQUFzQyxnQkFBZ0IsRUFBRSxjQUFjLEVBQUUsZUFBZSxFQUFFLFVBQVUsRUFBRTs7QUFDckcsNENBQTRDLGFBQWEsRUFBRSxZQUFZLEVBQUU7O0FBQ3pFLDBDQUEwQyxlQUFlLEVBQUUsc0JBQXNCLEVBQUU7O0FBQ25GLG1DQUFtQyxrQkFBa0IsRUFBRTs7QUFDdkQscUNBQXFDLDJCQUEyQixFQUFFLGVBQWUsRUFBRSxjQUFjLEVBQUUseUJBQXlCLEVBQUUsU0FBUyxFQUFFLHNCQUFzQixFQUFFLG1CQUFtQjtFQUNsTCxrQkFBa0IsRUFBRSxpQkFBaUIsQ0FBQzs7QUFDeEMsZ0RBQWdELGdCQUFnQixFQUFFOztBQUNsRSwwQ0FBdUYsYUFBYSxHQUFHLDhCQUE4QixHQUFHLGlCQUFpQixHQUFHLGdCQUFnQixHQUN2SCx1QkFBdUIsR0FBd0QsbUJBQW1CLEVBQUU7O0FBQ3pKLG1EQUFtRCxtQkFBbUI7RUFDcEUsY0FBYztFQUNkLDBCQUEwQjtFQUMxQixlQUFlO0VBQ2YsY0FBYyxDQUFDOztBQUVqQixrREFBOEYsYUFBYSxFQUFFLGNBQWMsRUFBRTs7QUFFN0g7Ozs7Ozs7OztHQVNHOztBQUNILGdFQUFnRSxTQUFTLEVBQUUsa0JBQWtCLEVBQUUsMkJBQTJCLEVBQUUsZUFBZSxFQUFFLGNBQWMsQ0FBQzs7QUFFNUosVUFBVSx3QkFBd0IsR0FBRywwREFBMEQsQ0FBQzs7QUFDaEcsaUJBQWlCLFdBQVcsRUFBRSxXQUFXLEVBQUUsV0FBVyxFQUFFLG1CQUFtQixFQUFFLGtCQUFrQixFQUFFLGFBQWEsRUFBRTs7QUFFaEgsY0FBYyxhQUFhLENBQUM7O0FBQzVCLHFDQUFxQyxXQUFXLEVBQUUsMkJBQTJCLEVBQUUsZUFBZSxFQUFFLG1CQUFtQixFQUFFLHNCQUFzQixFQUFFLGtCQUFrQjtFQUM3SixpQkFBaUIsRUFBRSxTQUFTLEVBQUU7O0FBRWhDO0VBQ0Usd0NBQXdDLFVBQVUsRUFBRTtBQUN0RDs7QUFDQTtBQUNBLHFDQUFxQyxlQUFlLENBQUM7QUFDckQsc0NBQXNDLGVBQWUsRUFBRTs7QUFFdkQ7O0FBRUE7QUFDQSx3Q0FBd0MsYUFBYSxFQUFFLHNCQUFzQixFQUFFO0FBQy9FLHFDQUFxQyxnQkFBZ0IsRUFBRTtBQUN2RCx3Q0FBd0MsY0FBYyxDQUFDO0FBQ3ZELGNBQWMsY0FBYyxDQUFDO0FBQzdCLFVBQVUsY0FBYyxDQUFDO0FBQ3pCLFNBQVMsYUFBYSxDQUFDO0FBQ3ZCLGtEQUFrRCxhQUFhLEVBQUUsc0JBQXNCLEVBQUU7QUFDekYsbUNBQW1DLFdBQVcsQ0FBQztBQUMvQyxpQkFBaUIsU0FBUyxFQUFFLFdBQVcsQ0FBQztBQUN4QyxnRUFBZ0UsYUFBYSxFQUFFLHVCQUF1QixFQUFFO0FBQ3hHIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9zYWxlcy1wZXJzb24vc2FsZXMtcGVyc29uLWhlYWRlci9zYWxlcy1wZXJzb24taGVhZGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qIGhlYWRlciBjc3MgKi9cblxuLnRlY2hkYXNoYm9hcmRfaGVhZGVyIHsgaGVpZ2h0OiBhdXRvOyBwYWRkaW5nOiAwOyBiYWNrZ3JvdW5kOiAjZmZmOyBib3gtc2hhZG93OiAwcHggMnB4IDdweCAycHggI2I3YjdiNzsgbWFyZ2luOiAyMHB4IDA7IH1cbi50ZWNoZGFzaGJvYXJkX2hlYWRlciAuaGVhZGVyX3dyYXBwZXJ7IHdpZHRoOiAxNDAwcHg7IG1hcmdpbjogMCBhdXRvOyBkaXNwbGF5OiBmbGV4OyBhbGlnbi1pdGVtczogY2VudGVyOyBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47fVxuLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5sb2dvX3dyYXBwZXIgeyBtYXgtd2lkdGg6IDE2MHB4OyBkaXNwbGF5OiBibG9jazsgY3Vyc29yOiBwb2ludGVyOyBmbGV4OiBub25lOyB9XG4udGVjaGRhc2hib2FyZF9oZWFkZXIgLmxvZ29fd3JhcHBlcjpmb2N1cyB7IG91dGxpbmU6IG5vbmU7IGJvcmRlcjogbm9uZTsgfVxuLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5sb2dvX3dyYXBwZXIgaW1nIHsgbWF4LXdpZHRoOiAxMDAlOyB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyB9XG4udGVjaGRhc2hib2FyZF9oZWFkZXIgLnF1b3RhdGlvbiB7IG1hcmdpbi1ib3R0b206IDBweDsgfVxuLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5xdW90YXRpb24gcCB7IGZvbnQtZmFtaWx5OiBcIkF2ZW5pck1lZGl1bVwiOyBmb250LXNpemU6IDIycHg7IGNvbG9yOiAjMDAyMDM1OyB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyBtYXJnaW46IDA7IHdvcmQtYnJlYWs6IGJyZWFrLXdvcmQ7IHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgbGluZS1oZWlnaHQ6IDIycHg7fVxuLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5wcm9maWxlX3NlY3Rpb24gYnV0dG9uIHsgcGFkZGluZy10b3A6IDhweDsgfVxuLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5wcm9maWxlX3NlY3Rpb24geyBkaXNwbGF5OiAtd2Via2l0LWJveDsgIGRpc3BsYXk6IC1tcy1mbGV4Ym94OyAgZGlzcGxheTogZmxleDsgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgI2FkYTlhOTsgIHBhZGRpbmctbGVmdDogNXB4OyAgbWFyZ2luLWJvdHRvbTogMDtcbiAgLXdlYmtpdC1ib3gtcGFjazogY2VudGVyOyAgLW1zLWZsZXgtcGFjazogY2VudGVyOyAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7ICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyOyAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjsgIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cbi50ZWNoZGFzaGJvYXJkX2hlYWRlciAucHJvZmlsZV9zZWN0aW9uIC51c2VybmFtZSB7IHBhZGRpbmctcmlnaHQ6IDEwcHg7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBmb250LWZhbWlseTogXCJBdmVuaXJSb21hblwiO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGNvbG9yOiAjMWYxZjFmO31cblxuLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5xdW90YXRpb24gLm1hdC1saXN0LWJhc2UgeyBkaXNwbGF5OiAtd2Via2l0LWJveDsgZGlzcGxheTogLW1zLWZsZXhib3g7IGRpc3BsYXk6IGZsZXg7IHBhZGRpbmctdG9wOiAwOyB9XG5cbi8qIC50ZWNoZGFzaGJvYXJkX2hlYWRlciAucXVvdGF0aW9uIC5tYXQtbGlzdC1iYXNlIC5tYXQtbGlzdC1pdGVtOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGxlZnQ6IC0xNXB4O1xuICB3aWR0aDogMnB4O1xuICBoZWlnaHQ6IDE1cHg7XG4gIGJhY2tncm91bmQ6ICMxYzFjMWM7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDM1JTtcbn0gKi9cbi50ZWNoZGFzaGJvYXJkX2hlYWRlciAucXVvdGF0aW9uIC5tYXQtbmF2LWxpc3QgLm1hdC1saXN0LWl0ZW0geyBtYXJnaW46IDA7IHBvc2l0aW9uOiByZWxhdGl2ZTsgZm9udC1mYW1pbHk6IFwiQXZlbmlyTWVkaXVtXCI7IGZvbnQtc2l6ZTogMTZweDsgY29sb3I6ICM3Njc2NzY7fVxuXG4uYWN0aXZlIHsgY29sb3I6ICMwMDAwMDAhaW1wb3J0YW50OyAgLyogYm9yZGVyLWJvdHRvbTogM3B4IHNvbGlkICNmZWNiMDA7IHBvc2l0aW9uOiByZWxhdGl2ZTsgKi99XG4uYWN0aXZlOjpiZWZvcmV7IGNvbnRlbnQ6ICcnOyB3aWR0aDogMTAwJTsgaGVpZ2h0OiA0cHg7IGJhY2tncm91bmQ6ICNmZWNiMDA7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgYm90dG9tOiAtMjVweDsgfVxuXG4udG9nbGVfbWVudSB7IGRpc3BsYXk6IG5vbmU7fVxuLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5oZWFkZXJfdGl0bGV7IGNvbG9yOiAjMDAwOyBmb250LWZhbWlseTogJ0F2ZW5pck1lZGl1bSc7IGZvbnQtc2l6ZTogMThweDsgd2hpdGUtc3BhY2U6IG5vcm1hbDsgd29yZC1icmVhazogYnJlYWstd29yZDsgdGV4dC1hbGlnbjogY2VudGVyO1xuICBsaW5lLWhlaWdodDogMjBweDsgbWFyZ2luOiAwOyB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDE1MDBweCl7XG4gIC50ZWNoZGFzaGJvYXJkX2hlYWRlciAuaGVhZGVyX3dyYXBwZXIgeyB3aWR0aDogOTAlOyB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMTk5cHgpe1xuLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5xdW90YXRpb24gcCB7IGZvbnQtc2l6ZTogMThweDt9XG4udGVjaGRhc2hib2FyZF9oZWFkZXIgLmhlYWRlcl90aXRsZSB7IGZvbnQtc2l6ZTogMTZweDsgfVxuXG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDk5MXB4KXtcbi50ZWNoZGFzaGJvYXJkX2hlYWRlciAuaGVhZGVyX3dyYXBwZXIgeyBkaXNwbGF5OiBmbGV4OyBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyB9XG4udGVjaGRhc2hib2FyZF9oZWFkZXIgLnF1b3RhdGlvbiBwIHsgbWFyZ2luOiAxMHB4IDVweDsgfVxuLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5wcm9maWxlX3NlY3Rpb257IGJvcmRlci1sZWZ0OiAwO31cbi50b2dsZV9tZW51IHsgZGlzcGxheTogYmxvY2s7fVxuLnN1Y2Nlc3N7IGRpc3BsYXk6IGJsb2NrO31cbi5kYW5nZXJ7IGRpc3BsYXk6IG5vbmU7fVxuLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5xdW90YXRpb24gLm1hdC1saXN0LWJhc2UgeyBkaXNwbGF5OiBmbGV4OyBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyB9XG4udGVjaGRhc2hib2FyZF9oZWFkZXIgLnF1b3RhdGlvbiB7IHdpZHRoOiAxMDAlO31cbi5hY3RpdmU6OmJlZm9yZXsgYm90dG9tOiAwOyBoZWlnaHQ6IDJweDt9XG4udGVjaGRhc2hib2FyZF9oZWFkZXIgLnF1b3RhdGlvbiAubWF0LW5hdi1saXN0IC5tYXQtbGlzdC1pdGVtIHsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cbn1cbiJdfQ== */";
    /***/
  },

  /***/
  "./src/app/components/sales-person/sales-person-header/sales-person-header.component.ts":
  /*!**********************************************************************************************!*\
    !*** ./src/app/components/sales-person/sales-person-header/sales-person-header.component.ts ***!
    \**********************************************************************************************/

  /*! exports provided: SalesPersonHeaderComponent */

  /***/
  function srcAppComponentsSalesPersonSalesPersonHeaderSalesPersonHeaderComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "SalesPersonHeaderComponent", function () {
      return SalesPersonHeaderComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");

    var SalesPersonHeaderComponent = /*#__PURE__*/function () {
      function SalesPersonHeaderComponent(cookies, router) {
        _classCallCheck(this, SalesPersonHeaderComponent);

        this.cookies = cookies;
        this.router = router;
        this.toggleStatus = false;
        this.user_data = {};
        this.loader = true;
        this.status = true;
        this.isSticky = false;
        var allData = cookies.getAll();
        this.user_data = JSON.parse(allData.user_details);
        this.user_cookie = cookies.get('jwtToken');
        this.user_data["headerFlag"] = typeof this.user_data.diagnostic_admin_id;
      }

      _createClass(SalesPersonHeaderComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
        /**logout function start here**/

      }, {
        key: "logout",
        value: function logout() {
          this.cookies["delete"]('jwtToken');
          this.cookies["delete"]('user_details');
          this.cookies.deleteAll();
          this.router.navigateByUrl('logout');
        }
        /**logout function end here**/

      }, {
        key: "menuFunction",
        value: function menuFunction() {
          this.toggleStatus = !this.toggleStatus;
        }
      }]);

      return SalesPersonHeaderComponent;
    }();

    SalesPersonHeaderComponent.ctorParameters = function () {
      return [{
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"]
      }];
    };

    SalesPersonHeaderComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-sales-person-header',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./sales-person-header.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/sales-person/sales-person-header/sales-person-header.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./sales-person-header.component.css */
      "./src/app/components/sales-person/sales-person-header/sales-person-header.component.css"))["default"]]
    })], SalesPersonHeaderComponent);
    /***/
  },

  /***/
  "./src/app/components/tech/manage-calender/manage-schedule/booked-events/booked-events.component.css":
  /*!***********************************************************************************************************!*\
    !*** ./src/app/components/tech/manage-calender/manage-schedule/booked-events/booked-events.component.css ***!
    \***********************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsTechManageCalenderManageScheduleBookedEventsBookedEventsComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdGVjaC9tYW5hZ2UtY2FsZW5kZXIvbWFuYWdlLXNjaGVkdWxlL2Jvb2tlZC1ldmVudHMvYm9va2VkLWV2ZW50cy5jb21wb25lbnQuY3NzIn0= */";
    /***/
  },

  /***/
  "./src/app/components/tech/manage-calender/manage-schedule/booked-events/booked-events.component.ts":
  /*!**********************************************************************************************************!*\
    !*** ./src/app/components/tech/manage-calender/manage-schedule/booked-events/booked-events.component.ts ***!
    \**********************************************************************************************************/

  /*! exports provided: BookedEventsComponent */

  /***/
  function srcAppComponentsTechManageCalenderManageScheduleBookedEventsBookedEventsComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BookedEventsComponent", function () {
      return BookedEventsComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");

    var BookedEventsComponent = /*#__PURE__*/function () {
      // public configData: any = {
      //   appName: 'Calendar-Management',
      //   jwtToken: '',
      //   baseUrl: environment.calendarApi,
      //   endPoint: {
      //     add: 'add-or-update-event-data',
      //     datalist: 'datalist',
      //     deleteEvent: 'delete-single-event',
      //     viewEventSlots: 'view-event-eventdayarr',
      //     search: 'search',
      //     countSlot: 'count-slot',
      //     listBookedEvents: 'list-booked-events',
      //     listBookedEventsCount: 'list-booked-events-count',
      //     deleteBookedEvent: 'delete-booked-event',
      //     rescheduleBookedEvent: 'reschedule',
      //     getTokenInfo: 'getauthorization-pece-getuserdata'
      //   },
      //   urls: [
      //     {
      //       pathUrl: 'tech/manage-calender/manage-sehedule',
      //       text: 'View Slot',
      //       color: 'primary',
      //       active: true,
      //       isExternalLink: false
      //     },
      //     {
      //       pathUrl: 'tech/manage-calender/manage-sehedule/event-listing',
      //       text: 'Event Listing',
      //       color: 'accent',
      //       active: true,
      //       isExternalLink: false
      //     },
      //     {
      //       pathUrl: 'tech/manage-calender/manage-sehedule/create-availability',
      //       text: 'Create Availability',
      //       color: 'warn',
      //       active: true,
      //       isExternalLink: false
      //     },
      //     {
      //       pathUrl: 'tech/manage-calender/manage-sehedule/booked-events',
      //       text: 'Booked Events',
      //       color: 'accent',
      //       active: true,
      //       isExternalLink: false
      //     },
      //     {
      //       pathUrl: 'tech/manage-calender/manage-sehedule/sync-with-google',
      //       text: 'Sync with Google',
      //       color: 'warn',
      //       active: true,
      //       isExternalLink: false
      //     },
      //     {
      //       pathUrl: environment.googleSyncApi,
      //       text: 'Add or Update Google Calendar', color: 'primary',
      //       active: true, isExternalLink: true
      //     }
      //   ],
      //   timeZone: [
      //     {text: 'Alaska Standard Time', value: '-08:00|America/Anchorage'},
      //     {text: 'Pacific Standard Time', value: '-07:00|America/Los_Angeles'},
      //     {text: 'Mountain Standard Time(GMT-06:00)', value: '-06:00|America/Denver'},
      //     {text: 'Mountain Standard Time(GMT-07:00) (no DST)', value: '-07:00|America/Phoenix'},
      //     {text: 'Central Standard Time', value: '-05:00|America/Chicago'},
      //     {text: 'Eastern Standard Time', value: '-04:00|America/New_York'},
      //     {text: 'Hawaii Standard Time', value: '-10:00|Pacific/Honolulu'}
      //   ],
      //   eventType: [
      //     {text: 'Admin Meetings', value: 1}
      //   ],
      //   responseData: '',
      //   primaryCondition: {$or: [{event_type: 1}, {event_type: 2}]},
      //
      //   // lib-listing inputs
      //   skipFields: [],
      //   modify_header_array: {
      //     patient_name: 'Patient Name',
      //     doctor_name: 'Doctor Name',
      //     doctor_office_name: 'Doctor Office Name',
      //     booking_date: 'Booked On',
      //     startdate: 'Event Date',
      //     slot: "Start Time",
      //     slot_end_time: 'End Time',
      //     timezoneName: 'Timezone'
      //   },
      //   source: 'google-events',
      //   date_search_source_count: 0,
      //   libdata: {
      //     detailview_override: [],
      //     updateendpoint: 'statusupdate',
      //     hideeditbutton: true,// all these button options are optional not mandatory
      //     tableheaders: ['patient_name', 'doctor_name', 'doctor_office_name', 'booking_date', 'startdate', 'slot', 'slot_end_time', 'timezoneName'], //not required
      //     custombuttons: []
      //   },
      //   updatetable: false,
      //   limitcond: {
      //     "limit": 10,
      //     "skip": 0,
      //     "pagecount": 1
      //   },
      //   sortdata: {
      //     "type": 'asc',
      //     "field": 'booking_date',
      //     "options": ['patient_name', 'booking_date', 'startdate', 'slot', 'slot_end_time']
      //   },
      //   custom_link: [],
      //   search_settings: {
      //     // this is use for  date search
      //     datesearch: [{
      //       startdatelabel: "Events After",
      //       enddatelabel: "Events Before",
      //       submit: "Search",
      //       field: "startdate_unix"
      //     }],
      //
      //     // this is use for  select search
      //     selectsearch: [{
      //       label: 'Search By Status',
      //       field: 'status',
      //       values: [{val: 0, 'name': 'Pending'}, {val: 1, 'name': 'Approved'}, {val: 2, 'name': 'Canceled'}]
      //     }],
      //
      //     // this is use for  text search
      //     textsearch: [{label: "Search By Patient Name", field: 'patient_name'}],
      //
      //     // this is use for  Autocomplete search
      //     search: [
      //       {
      //         label: "Search By Doctor", field: 'doctor_id', values: [
      //           {val: 'example_doctor_id', name: 'YmattZ A'},
      //           {val: 'YmattZ', name: 'YmattZ A'},
      //           {val: 'Ymatt', name: 'YmattZ AB'},
      //           {val: 'Jessica', name: 'A Jessica'}
      //         ]
      //       },
      //       {
      //         label: "Search By Doctor Office", field: 'doctor_office_id', values: [
      //           {val: 'example_doctor_office_id', name: 'YmattZ A'},
      //           {val: 'YmattZ', name: 'YmattZ A'},
      //           {val: 'Ymatt', name: 'YmattZ AB'},
      //           {val: 'Jessica', name: 'A Jessica'}
      //         ]
      //       }
      //     ]
      //   },
      //   statusarray: [{val: 0, 'name': 'Pending'}, {val: 1, 'name': 'Approved'}, {val: 2, 'name': 'Canceled'}]
      // };
      function BookedEventsComponent(cookieService, activatedRoute, snackBar, httpRequest) {
        _classCallCheck(this, BookedEventsComponent);

        this.cookieService = cookieService;
        this.activatedRoute = activatedRoute;
        this.snackBar = snackBar;
        this.httpRequest = httpRequest;
      }

      _createClass(BookedEventsComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {// if (this.cookieService.check('jwtToken')) {
          //   this.configData.jwtToken = this.cookieService.get('jwtToken');
          //   this.activatedRoute.data.forEach((data) => {
          //     // Set dataset in responseData
          //     this.configData.responseData = data.eventListData.results.res;
          //     // Create skipFields array(first save all the keys from the dataset)
          //     this.configData.skipFields = Object.keys(data.eventListData.results.res[0]);
          //     let requiredFields = ['patient_name', 'doctor_name', 'doctor_office_name', 'booking_date', 'startdate', 'slot', 'slot_end_time', 'timezoneName'];
          //     // Modify the skipFields array(splicing the keys which is in the requiredFields)
          //     for (let i = 0; i < requiredFields.length; i++) {
          //       this.configData.skipFields.splice(this.configData.skipFields.indexOf(requiredFields[i]), 1)
          //     }
          //   });
          //
          //   // Merge logged in user details with the config data
          //   let userDetails: any = JSON.parse(this.cookieService.get('user_details'));
          //   this.configData = Object.assign(this.configData, userDetails);
          //
          //   /* ****************** Get total booked events count ****************** */
          //   let data = {
          //     condition: {}, token: this.configData.jwtToken,
          //     sort: {type: 'asc', field: 'patient_name'}
          //   };
          //
          //   this.httpRequest.postRequest(this.configData.endPoint.listBookedEventsCount, data).subscribe((response: any) => {
          //     this.configData.date_search_source_count = response.count;
          //   });
          //   /* ******************************************************************* */
          //
          // } else {
          //   this.openSnackBar('Token not found', null);
          // }
        }
      }, {
        key: "openSnackBar",
        value: function openSnackBar(message, action) {
          this.snackBar.open(message, action, {
            duration: 3000
          });
        }
      }]);

      return BookedEventsComponent;
    }();

    BookedEventsComponent.ctorParameters = function () {
      return [{
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatSnackBar"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__["HttpServiceService"]
      }];
    };

    BookedEventsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-booked-events',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./booked-events.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/tech/manage-calender/manage-schedule/booked-events/booked-events.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./booked-events.component.css */
      "./src/app/components/tech/manage-calender/manage-schedule/booked-events/booked-events.component.css"))["default"]]
    })], BookedEventsComponent);
    /***/
  },

  /***/
  "./src/app/components/tech/manage-calender/manage-schedule/cal-create-slot/cal-create-slot.component.css":
  /*!***************************************************************************************************************!*\
    !*** ./src/app/components/tech/manage-calender/manage-schedule/cal-create-slot/cal-create-slot.component.css ***!
    \***************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsTechManageCalenderManageScheduleCalCreateSlotCalCreateSlotComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdGVjaC9tYW5hZ2UtY2FsZW5kZXIvbWFuYWdlLXNjaGVkdWxlL2NhbC1jcmVhdGUtc2xvdC9jYWwtY3JlYXRlLXNsb3QuY29tcG9uZW50LmNzcyJ9 */";
    /***/
  },

  /***/
  "./src/app/components/tech/manage-calender/manage-schedule/cal-create-slot/cal-create-slot.component.ts":
  /*!**************************************************************************************************************!*\
    !*** ./src/app/components/tech/manage-calender/manage-schedule/cal-create-slot/cal-create-slot.component.ts ***!
    \**************************************************************************************************************/

  /*! exports provided: CalCreateSlotComponent */

  /***/
  function srcAppComponentsTechManageCalenderManageScheduleCalCreateSlotCalCreateSlotComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CalCreateSlotComponent", function () {
      return CalCreateSlotComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../../../../environments/environment */
    "./src/environments/environment.ts");

    var CalCreateSlotComponent = /*#__PURE__*/function () {
      function CalCreateSlotComponent(router, cookieService) {
        _classCallCheck(this, CalCreateSlotComponent);

        this.router = router;
        this.cookieService = cookieService;
        this.configData = {
          appName: 'Calendar Management',
          jwtToken: '',
          baseUrl: _environments_environment__WEBPACK_IMPORTED_MODULE_4__["environment"].calendarApi,
          endPoint: {
            add: 'add-or-update-event-data',
            edit: 'add-or-update-event-data',
            getTokenInfo: 'getauthorization-pece-getuserdata',
            syncWithGoogle: 'get-events-from-google'
          },
          urls: [{
            pathUrl: 'tech/manage-calender/manage-sehedule',
            text: 'View Slot',
            color: 'primary',
            active: true,
            isExternalLink: false
          }, {
            pathUrl: 'tech/manage-calender/manage-sehedule/event-listing',
            text: 'Event Listing',
            color: 'accent',
            active: true,
            isExternalLink: false
          }, {
            pathUrl: 'tech/manage-calender/manage-sehedule/create-availability',
            text: 'Create Availability',
            color: 'warn',
            active: true,
            isExternalLink: false
          }, {
            pathUrl: 'tech/manage-calender/manage-sehedule/booked-events',
            text: 'Booked Events',
            color: 'accent',
            active: true,
            isExternalLink: false
          }, // { pathUrl: 'tech/manage-calender/manage-sehedule/sync-with-google', text: 'Sync with Google', color: 'warn', active: true, isExternalLink: false },
          {
            type: 'syncGoogleCalendar',
            text: 'Sync with google',
            color: 'warn',
            spinnerColor: 'primary',
            active: true,
            isExternalLink: false
          }, {
            pathUrl: _environments_environment__WEBPACK_IMPORTED_MODULE_4__["environment"].googleSyncApi,
            text: 'Add or Update Google Calendar',
            color: 'primary',
            active: true,
            isExternalLink: true
          }],
          redirectUrl: 'tech/manage-calender/manage-sehedule',
          timeZone: [{
            text: 'Alaska Standard Time',
            value: '-08:00|America/Anchorage'
          }, {
            text: 'Pacific Standard Time',
            value: '-07:00|America/Los_Angeles'
          }, {
            text: 'Mountain Standard Time(GMT-06:00)',
            value: '-06:00|America/Denver'
          }, {
            text: 'Mountain Standard Time(GMT-07:00) (no DST)',
            value: '-07:00|America/Phoenix'
          }, {
            text: 'Central Standard Time',
            value: '-05:00|America/Chicago'
          }, {
            text: 'Eastern Standard Time',
            value: '-04:00|America/New_York'
          }, {
            text: 'Hawaii Standard Time',
            value: '-10:00|Pacific/Honolulu'
          }],
          timeSpan: [{
            text: '30 Min',
            value: 30
          }, {
            text: '60 Min',
            value: 60
          }, {
            text: '90 Min',
            value: 90
          }, {
            text: '120 Min',
            value: 120
          }],
          eventType: [{
            text: 'Admin Meetings',
            value: 1
          }]
        };
      }

      _createClass(CalCreateSlotComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          if (this.cookieService.check('user_details')) {
            this.configData.jwtToken = this.cookieService.get('jwtToken'); // Merge logged in user details with the config data

            var userDetails = JSON.parse(this.cookieService.get('user_details'));
            this.configData = Object.assign(this.configData, userDetails);
          }
        }
      }]);

      return CalCreateSlotComponent;
    }();

    CalCreateSlotComponent.ctorParameters = function () {
      return [{
        type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__["CookieService"]
      }];
    };

    CalCreateSlotComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-cal-create-slot',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./cal-create-slot.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/tech/manage-calender/manage-schedule/cal-create-slot/cal-create-slot.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./cal-create-slot.component.css */
      "./src/app/components/tech/manage-calender/manage-schedule/cal-create-slot/cal-create-slot.component.css"))["default"]]
    })], CalCreateSlotComponent);
    /***/
  },

  /***/
  "./src/app/components/tech/manage-calender/manage-schedule/cal-event-listing/cal-event-listing.component.css":
  /*!*******************************************************************************************************************!*\
    !*** ./src/app/components/tech/manage-calender/manage-schedule/cal-event-listing/cal-event-listing.component.css ***!
    \*******************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsTechManageCalenderManageScheduleCalEventListingCalEventListingComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdGVjaC9tYW5hZ2UtY2FsZW5kZXIvbWFuYWdlLXNjaGVkdWxlL2NhbC1ldmVudC1saXN0aW5nL2NhbC1ldmVudC1saXN0aW5nLmNvbXBvbmVudC5jc3MifQ== */";
    /***/
  },

  /***/
  "./src/app/components/tech/manage-calender/manage-schedule/cal-event-listing/cal-event-listing.component.ts":
  /*!******************************************************************************************************************!*\
    !*** ./src/app/components/tech/manage-calender/manage-schedule/cal-event-listing/cal-event-listing.component.ts ***!
    \******************************************************************************************************************/

  /*! exports provided: CalEventListingComponent */

  /***/
  function srcAppComponentsTechManageCalenderManageScheduleCalEventListingCalEventListingComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CalEventListingComponent", function () {
      return CalEventListingComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../../../services/resolve.service */
    "./src/app/services/resolve.service.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _angular_common_http__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/common/http */
    "./node_modules/@angular/common/fesm2015/http.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../../../../../../environments/environment */
    "./src/environments/environment.ts");

    var CalEventListingComponent = /*#__PURE__*/function () {
      function CalEventListingComponent(http, httpRequest, router, cookieService, snackBar, resolveService, activatedRoute) {
        _classCallCheck(this, CalEventListingComponent);

        this.http = http;
        this.httpRequest = httpRequest;
        this.router = router;
        this.cookieService = cookieService;
        this.snackBar = snackBar;
        this.resolveService = resolveService;
        this.activatedRoute = activatedRoute;
        this.configData = {
          appName: 'Calendar-Management',
          jwtToken: "",
          baseUrl: _environments_environment__WEBPACK_IMPORTED_MODULE_8__["environment"].calendarApi,
          endPoint: {
            add: "add-or-update-event-data",
            datalist: "datalist",
            deleteEvent: "delete-single-event",
            search: "search",
            getTokenInfo: 'getauthorization-pece-getuserdata',
            syncWithGoogle: 'get-events-from-google'
          },
          responseData: "",
          timeZone: [{
            text: 'Alaska Standard Time',
            value: '-08:00|America/Anchorage'
          }, {
            text: 'Pacific Standard Time',
            value: '-07:00|America/Los_Angeles'
          }, {
            text: 'Mountain Standard Time(GMT-06:00)',
            value: '-06:00|America/Denver'
          }, {
            text: 'Mountain Standard Time(GMT-07:00) (no DST)',
            value: '-07:00|America/Phoenix'
          }, {
            text: 'Central Standard Time',
            value: '-05:00|America/Chicago'
          }, {
            text: 'Eastern Standard Time',
            value: '-04:00|America/New_York'
          }, {
            text: 'Hawaii Standard Time',
            value: '-10:00|Pacific/Honolulu'
          }],
          timeSpan: [{
            text: "30 Min",
            value: 30
          }, {
            text: "60 Min",
            value: 60
          }, {
            text: "90 Min",
            value: 90
          }, {
            text: "120 Min",
            value: 120
          }],
          eventType: [{
            text: "Admin Meetings",
            value: 1
          }],
          urls: [{
            pathUrl: 'tech/manage-calender/manage-sehedule',
            text: 'View Slot',
            color: 'primary',
            active: true,
            isExternalLink: false
          }, {
            pathUrl: 'tech/manage-calender/manage-sehedule/event-listing',
            text: 'Event Listing',
            color: 'accent',
            active: true,
            isExternalLink: false
          }, {
            pathUrl: 'tech/manage-calender/manage-sehedule/create-availability',
            text: 'Create Availability',
            color: 'warn',
            active: true,
            isExternalLink: false
          }, {
            pathUrl: 'tech/manage-calender/manage-sehedule/booked-events',
            text: 'Booked Events',
            color: 'accent',
            active: true,
            isExternalLink: false
          }, // { pathUrl: 'tech/manage-calender/manage-sehedule/sync-with-google', text: 'Sync with Google', color: 'warn', active: true, isExternalLink: false },
          {
            type: 'syncGoogleCalendar',
            text: 'Sync with google',
            color: 'warn',
            spinnerColor: 'primary',
            active: true,
            isExternalLink: false
          }, {
            pathUrl: _environments_environment__WEBPACK_IMPORTED_MODULE_8__["environment"].googleSyncApi,
            text: 'Add or Update Google Calendar',
            color: 'primary',
            active: true,
            isExternalLink: true
          }],
          primaryCondition: {}
        };
      }

      _createClass(CalEventListingComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          if (this.cookieService.check('jwtToken')) {
            this.configData.jwtToken = this.cookieService.get('jwtToken');
            this.getEvents(); // Merge logged in user details with the config data

            var userDetails = JSON.parse(this.cookieService.get('user_details'));
            this.configData = Object.assign(this.configData, userDetails);
            this.configData.primaryCondition = Object.assign(this.configData.primaryCondition, {
              userid: {
                $in: [userDetails._id]
              }
            });
          } else {
            this.openSnackBar("Token not found", null);
          }
        }
      }, {
        key: "getEvents",
        value: function getEvents() {
          var _this217 = this;

          this.activatedRoute.data.forEach(function (data) {
            _this217.configData.responseData = data.eventListData.data;
          });
        }
      }, {
        key: "openSnackBar",
        value: function openSnackBar(message, action) {
          this.snackBar.open(message, action, {
            duration: 3000
          });
        }
      }]);

      return CalEventListingComponent;
    }();

    CalEventListingComponent.ctorParameters = function () {
      return [{
        type: _angular_common_http__WEBPACK_IMPORTED_MODULE_6__["HttpClient"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__["HttpServiceService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatSnackBar"]
      }, {
        type: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"]
      }];
    };

    CalEventListingComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-cal-event-listing',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./cal-event-listing.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/tech/manage-calender/manage-schedule/cal-event-listing/cal-event-listing.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./cal-event-listing.component.css */
      "./src/app/components/tech/manage-calender/manage-schedule/cal-event-listing/cal-event-listing.component.css"))["default"]]
    })], CalEventListingComponent);
    /***/
  },

  /***/
  "./src/app/components/tech/manage-calender/manage-schedule/cal-home/cal-home.component.css":
  /*!*************************************************************************************************!*\
    !*** ./src/app/components/tech/manage-calender/manage-schedule/cal-home/cal-home.component.css ***!
    \*************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsTechManageCalenderManageScheduleCalHomeCalHomeComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdGVjaC9tYW5hZ2UtY2FsZW5kZXIvbWFuYWdlLXNjaGVkdWxlL2NhbC1ob21lL2NhbC1ob21lLmNvbXBvbmVudC5jc3MifQ== */";
    /***/
  },

  /***/
  "./src/app/components/tech/manage-calender/manage-schedule/cal-home/cal-home.component.ts":
  /*!************************************************************************************************!*\
    !*** ./src/app/components/tech/manage-calender/manage-schedule/cal-home/cal-home.component.ts ***!
    \************************************************************************************************/

  /*! exports provided: CalHomeComponent */

  /***/
  function srcAppComponentsTechManageCalenderManageScheduleCalHomeCalHomeComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CalHomeComponent", function () {
      return CalHomeComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _angular_common_http__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/common/http */
    "./node_modules/@angular/common/fesm2015/http.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../../../../../../environments/environment */
    "./src/environments/environment.ts");

    var CalHomeComponent = /*#__PURE__*/function () {
      function CalHomeComponent(http, activatedRoute, cookieService, snackBar) {
        _classCallCheck(this, CalHomeComponent);

        this.http = http;
        this.activatedRoute = activatedRoute;
        this.cookieService = cookieService;
        this.snackBar = snackBar;
        this.configData = {
          appName: 'Calendar Management',
          jwtToken: "",
          baseUrl: _environments_environment__WEBPACK_IMPORTED_MODULE_6__["environment"].calendarApi,
          endPoint: {
            add: "add-or-update-event-data",
            datalist: "datalist",
            deleteEvent: "delete-single-event",
            viewEventSlots: "view-event-eventdayarr",
            search: "search",
            countSlot: "count-slot",
            getTokenInfo: 'getauthorization-pece-getuserdata',
            syncWithGoogle: 'get-events-from-google'
          },
          urls: [{
            pathUrl: 'tech/manage-calender/manage-sehedule',
            text: 'View Slot',
            color: 'primary',
            active: true,
            isExternalLink: false
          }, {
            pathUrl: 'tech/manage-calender/manage-sehedule/event-listing',
            text: 'Event Listing',
            color: 'accent',
            active: true,
            isExternalLink: false
          }, {
            pathUrl: 'tech/manage-calender/manage-sehedule/create-availability',
            text: 'Create Availability',
            color: 'warn',
            active: true,
            isExternalLink: false
          }, {
            pathUrl: 'tech/manage-calender/manage-sehedule/booked-events',
            text: 'Booked Events',
            color: 'accent',
            active: true,
            isExternalLink: false
          }, // { pathUrl: 'tech/manage-calender/manage-sehedule/sync-with-google', text: 'Sync with Google', color: 'warn', active: true, isExternalLink: false },
          {
            type: 'syncGoogleCalendar',
            text: 'Sync with google',
            color: 'warn',
            spinnerColor: 'primary',
            active: true,
            isExternalLink: false
          }, {
            pathUrl: _environments_environment__WEBPACK_IMPORTED_MODULE_6__["environment"].googleSyncApi,
            text: 'Add or Update Google Calendar',
            color: 'primary',
            active: true,
            isExternalLink: true
          }],
          timeZone: [{
            text: 'Alaska Standard Time',
            value: '-08:00|America/Anchorage'
          }, {
            text: 'Pacific Standard Time',
            value: '-07:00|America/Los_Angeles'
          }, {
            text: 'Mountain Standard Time(GMT-06:00)',
            value: '-06:00|America/Denver'
          }, {
            text: 'Mountain Standard Time(GMT-07:00) (no DST)',
            value: '-07:00|America/Phoenix'
          }, {
            text: 'Central Standard Time',
            value: '-05:00|America/Chicago'
          }, {
            text: 'Eastern Standard Time',
            value: '-04:00|America/New_York'
          }, {
            text: 'Hawaii Standard Time',
            value: '-10:00|Pacific/Honolulu'
          }],
          eventType: [{
            text: "Admin Meetings",
            value: 1
          }],
          primaryCondition: {},
          responseData: ""
        };
      }

      _createClass(CalHomeComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this218 = this;

          if (this.cookieService.check('jwtToken')) {
            this.configData.jwtToken = this.cookieService.get('jwtToken');
            this.activatedRoute.data.forEach(function (data) {
              _this218.configData.responseData = data.eventdayarrData.data;
            }); // Merge logged in user details with the config data

            var userDetails = JSON.parse(this.cookieService.get('user_details'));
            this.configData = Object.assign(this.configData, userDetails);
            this.configData.primaryCondition = Object.assign(this.configData.primaryCondition, {
              userid: {
                $in: [userDetails._id]
              }
            });
          } else {
            this.openSnackBar("Token not found", null);
          }
        }
      }, {
        key: "openSnackBar",
        value: function openSnackBar(message, action) {
          this.snackBar.open(message, action, {
            duration: 3000
          });
        }
        /* call api via post method */

      }, {
        key: "httpViaPost",
        value: function httpViaPost(endpoint, jsonData) {
          /* set common header */
          var httpOptions = {
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_4__["HttpHeaders"]({
              'Content-Type': 'application/json',
              'Authorization': jsonData.token
            })
          };
          return this.http.post(endpoint, jsonData);
        }
      }]);

      return CalHomeComponent;
    }();

    CalHomeComponent.ctorParameters = function () {
      return [{
        type: _angular_common_http__WEBPACK_IMPORTED_MODULE_4__["HttpClient"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatSnackBar"]
      }];
    };

    CalHomeComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-cal-home',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./cal-home.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/tech/manage-calender/manage-schedule/cal-home/cal-home.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./cal-home.component.css */
      "./src/app/components/tech/manage-calender/manage-schedule/cal-home/cal-home.component.css"))["default"]]
    })], CalHomeComponent);
    /***/
  },

  /***/
  "./src/app/components/tech/manage-calender/manage-schedule/cal-sync-with-google/cal-sync-with-google.component.css":
  /*!*************************************************************************************************************************!*\
    !*** ./src/app/components/tech/manage-calender/manage-schedule/cal-sync-with-google/cal-sync-with-google.component.css ***!
    \*************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsTechManageCalenderManageScheduleCalSyncWithGoogleCalSyncWithGoogleComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdGVjaC9tYW5hZ2UtY2FsZW5kZXIvbWFuYWdlLXNjaGVkdWxlL2NhbC1zeW5jLXdpdGgtZ29vZ2xlL2NhbC1zeW5jLXdpdGgtZ29vZ2xlLmNvbXBvbmVudC5jc3MifQ== */";
    /***/
  },

  /***/
  "./src/app/components/tech/manage-calender/manage-schedule/cal-sync-with-google/cal-sync-with-google.component.ts":
  /*!************************************************************************************************************************!*\
    !*** ./src/app/components/tech/manage-calender/manage-schedule/cal-sync-with-google/cal-sync-with-google.component.ts ***!
    \************************************************************************************************************************/

  /*! exports provided: CalSyncWithGoogleComponent */

  /***/
  function srcAppComponentsTechManageCalenderManageScheduleCalSyncWithGoogleCalSyncWithGoogleComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CalSyncWithGoogleComponent", function () {
      return CalSyncWithGoogleComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var _environments_environment_prod__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../../../../../../environments/environment.prod */
    "./src/environments/environment.prod.ts");

    var CalSyncWithGoogleComponent = /*#__PURE__*/function () {
      function CalSyncWithGoogleComponent(httpRequestService, activatedRoute, cookieService, router, snackBar) {
        _classCallCheck(this, CalSyncWithGoogleComponent);

        this.httpRequestService = httpRequestService;
        this.activatedRoute = activatedRoute;
        this.cookieService = cookieService;
        this.router = router;
        this.snackBar = snackBar;
        this.displayMessage = "Please wait...";
        this.secCount = 5;
      }

      _createClass(CalSyncWithGoogleComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this219 = this;

          this.userDetails = JSON.parse(this.cookieService.get('user_details'));

          if (this.activatedRoute.snapshot.params.refresh && this.cookieService.check('user_details')) {
            var url = _environments_environment_prod__WEBPACK_IMPORTED_MODULE_6__["environment"].calendarApi + 'getauthorization-pece-getuserdata' + '?access_token=' + this.activatedRoute.snapshot.params.access_token;
            this.httpRequestService.get(url).subscribe(function (response) {
              var data = {
                token: _this219.cookieService.get('jwtToken'),
                id: _this219.userDetails._id,
                data: {
                  access_token: _this219.activatedRoute.snapshot.params.access_token,
                  refresh_token: _this219.activatedRoute.snapshot.params.refresh,
                  connected_gmail: response.id
                }
              }; // Update user details in database

              _this219.httpRequestService.postRequest('update-user', data).subscribe(function (response) {
                console.log('response', response);

                if (response.status == 'success') {
                  _this219.openSnackBar('Calendar added successfully...');

                  setInterval(function () {
                    _this219.secCount = _this219.secCount - 1;
                    _this219.displayMessage = "Synchronize Complete. You will be redirected in " + _this219.secCount + " sec.";

                    if (_this219.secCount == 0) {
                      _this219.secCount = 1;

                      _this219.router.navigateByUrl('/tech/manage-calender/manage-sehedule');
                    }
                  }, 1000);
                } else {
                  _this219.openSnackBar("An error occurs. Please try again.", "Ok");

                  setTimeout(function () {
                    _this219.router.navigateByUrl('/tech/manage-calender/manage-sehedule');
                  }, 4000);
                }
              }); // Send email to the logged in user


              var urlSendEmail = _environments_environment_prod__WEBPACK_IMPORTED_MODULE_6__["environment"].calendarApi + 'send-confirmation-email?id=' + _this219.userDetails._id;

              _this219.httpRequestService.get(urlSendEmail).subscribe(function (response) {
                if (response.status == 'success') {
                  console.log('Mail sent ', response.msg_id);

                  _this219.openSnackBar('Confirmation email sent to your email - ' + _this219.userDetails.email, 'Ok');
                }
              }); // Update user_details in cookie


              _this219.cookieService.set('user_details', JSON.stringify(Object.assign(_this219.userDetails, data.data)));
            });
            /* **********************************************************************************
            this.httpRequestService.httpViaPost('cal-update-user', data).subscribe((response) => {
              if (response.status == 'success') {
                setInterval(() => {
                  this.secCount = this.secCount - 1;
                  this.displayMessage = "Synchronize Complete. You will be redirected in " + this.secCount + " sec.";
                  if (this.secCount == 0) {
                    this.secCount = 1;
                    this.router.navigateByUrl('/tech/manage-calender/manage-sehedule');
                  }
                }, 1000);
                       this.snackBar.open("Successfully updated.", "Ok", {
                  duration: 2000,
                });
              } else {
                this.snackBar.open("SuccessfAn error occord. Please try again.", "Ok", {
                  duration: 2000,
                });
                       setTimeout(() => {
                  this.router.navigateByUrl('/tech/manage-calender/manage-sehedule');
                }, 4000);
              }
            });
            ************************************************************************** */
          }
        }
      }, {
        key: "openSnackBar",
        value: function openSnackBar(message) {
          var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
          this.snackBar.open(message, action, {
            duration: 3000
          });
        }
      }, {
        key: "connectGoogleCalendar",
        value: function connectGoogleCalendar() {
          this.httpRequestService.httpViaPost("https://gapi.betoparedes.com/connect-calendar-pece.php", null).subscribe(function (response) {
            console.log("response", response);
          });
        }
      }]);

      return CalSyncWithGoogleComponent;
    }();

    CalSyncWithGoogleComponent.ctorParameters = function () {
      return [{
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_2__["HttpServiceService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_4__["CookieService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatSnackBar"]
      }];
    };

    CalSyncWithGoogleComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-cal-sync-with-google',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./cal-sync-with-google.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/tech/manage-calender/manage-schedule/cal-sync-with-google/cal-sync-with-google.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./cal-sync-with-google.component.css */
      "./src/app/components/tech/manage-calender/manage-schedule/cal-sync-with-google/cal-sync-with-google.component.css"))["default"]]
    })], CalSyncWithGoogleComponent);
    /***/
  },

  /***/
  "./src/app/components/tech/manage-calender/manage-schedule/cal-view-slot/cal-view-slot.component.css":
  /*!***********************************************************************************************************!*\
    !*** ./src/app/components/tech/manage-calender/manage-schedule/cal-view-slot/cal-view-slot.component.css ***!
    \***********************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsTechManageCalenderManageScheduleCalViewSlotCalViewSlotComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdGVjaC9tYW5hZ2UtY2FsZW5kZXIvbWFuYWdlLXNjaGVkdWxlL2NhbC12aWV3LXNsb3QvY2FsLXZpZXctc2xvdC5jb21wb25lbnQuY3NzIn0= */";
    /***/
  },

  /***/
  "./src/app/components/tech/manage-calender/manage-schedule/cal-view-slot/cal-view-slot.component.ts":
  /*!**********************************************************************************************************!*\
    !*** ./src/app/components/tech/manage-calender/manage-schedule/cal-view-slot/cal-view-slot.component.ts ***!
    \**********************************************************************************************************/

  /*! exports provided: CalViewSlotComponent */

  /***/
  function srcAppComponentsTechManageCalenderManageScheduleCalViewSlotCalViewSlotComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CalViewSlotComponent", function () {
      return CalViewSlotComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../../../../../../environments/environment */
    "./src/environments/environment.ts");

    var CalViewSlotComponent = /*#__PURE__*/function () {
      function CalViewSlotComponent(activatedRoute, cookieService, snackBar, httpRequestService) {
        _classCallCheck(this, CalViewSlotComponent);

        this.activatedRoute = activatedRoute;
        this.cookieService = cookieService;
        this.snackBar = snackBar;
        this.httpRequestService = httpRequestService;
        this.configData = {
          appName: 'Calendar Management',
          jwtToken: '',
          baseUrl: _environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].calendarApi,
          endPoint: {
            add: 'add-or-update-event-data',
            datalist: 'datalist',
            deleteEvent: 'delete-single-event',
            viewEventSlots: 'view-event-eventdayarr',
            search: 'search',
            countSlot: 'count-slot',
            addToCalendar: 'add-to-calendar'
          },
          urls: [{
            pathUrl: 'tech/manage-calender/manage-sehedule',
            text: 'View Slot',
            color: 'primary',
            active: false,
            isExternalLink: false
          }, {
            pathUrl: 'tech/manage-calender/manage-sehedule/event-listing',
            text: 'Event Listing',
            color: 'accent',
            active: true,
            isExternalLink: false
          }, {
            pathUrl: 'tech/manage-calender/manage-sehedule/create-slot',
            text: 'Create Availability',
            color: 'warn',
            active: true,
            isExternalLink: false
          }, {
            pathUrl: 'tech/manage-calender/manage-sehedule/booked-events',
            text: 'Booked Events',
            color: 'accent',
            active: true,
            isExternalLink: false
          }, {
            pathUrl: 'tech/manage-calender/manage-sehedule/sync-with-google',
            text: 'Sync with Google',
            color: 'warn',
            active: true,
            isExternalLink: false
          }, {
            pathUrl: _environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].googleSyncApi,
            text: 'Add or Update Google Calendar',
            color: 'primary',
            active: true,
            isExternalLink: true
          }],
          timeZone: [{
            text: 'Alaska Standard Time',
            value: '-08:00|America/Anchorage'
          }, {
            text: 'Pacific Standard Time',
            value: '-07:00|America/Los_Angeles'
          }, {
            text: 'Mountain Standard Time(GMT-06:00)',
            value: '-06:00|America/Denver'
          }, {
            text: 'Mountain Standard Time(GMT-07:00) (no DST)',
            value: '-07:00|America/Phoenix'
          }, {
            text: 'Central Standard Time',
            value: '-05:00|America/Chicago'
          }, {
            text: 'Eastern Standard Time',
            value: '-04:00|America/New_York'
          }, {
            text: 'Hawaii Standard Time',
            value: '-10:00|Pacific/Honolulu'
          }],
          eventType: [{
            text: 'Admin Meetings',
            value: 1
          }, {
            text: 'Type 2',
            value: 2
          }, {
            text: 'Type 3',
            value: 3
          }, {
            text: 'Type 3',
            value: 4
          }],
          responseData: '',
          primaryCondition: {
            $or: [{
              event_type: 1
            }, {
              event_type: 2
            }]
          },
          patientInfoFormFields: [{
            type: 'input',
            name: 'practice_name',
            placeholder: 'Practice Name',
            label: 'Practice Name',
            value: '',
            validators: [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            error: "Enter practice name"
          }, {
            type: 'input',
            name: 'address',
            placeholder: 'Address',
            label: 'Address',
            value: ''
          }, {
            type: 'input',
            name: 'patient_name',
            placeholder: 'Patient Name',
            label: 'Patient Name',
            value: '',
            validators: [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            error: "Enter patient name"
          }, {
            type: 'date',
            name: 'dob',
            placeholder: 'Date of Birth',
            label: 'Date of Birth',
            value: '',
            validators: [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            error: "Enter date of birth of the patient"
          }, {
            type: 'select',
            name: 'gender',
            placeholder: 'Gender',
            label: 'Gender',
            options: [{
              text: 'Male',
              value: 'male'
            }, {
              text: 'Female',
              value: 'female'
            }],
            validators: [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            error: "Select gender"
          }, {
            type: 'input',
            name: 'patient_email',
            placeholder: 'Patient Email',
            label: 'Patient Email',
            value: '',
            validators: [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].email],
            error: "Enter patient email"
          }, {
            type: 'input',
            name: 'current_date',
            placeholder: 'Date',
            label: 'Booking date',
            value: ''
          }, {
            type: 'input',
            name: 'height',
            placeholder: 'Ex. 6\'10"',
            label: 'Height',
            value: '',
            validators: [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            error: "Enter patient height"
          }, {
            type: 'input',
            name: 'weight',
            placeholder: 'Ex. 210 lbs',
            label: 'Weight',
            value: '',
            validators: [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            error: "Enter patient weight"
          }, {
            type: 'checkbox',
            caption: 'Autonomic Nervous System Dysfunction (ANSD)',
            label: 'Blurred Vision',
            checkItems: [{
              name: 'bv_six_months',
              value: false,
              label: '6 Months',
              labelPosition: 'before'
            }, {
              name: 'bv_today',
              value: false,
              label: 'Today',
              labelPosition: 'before'
            }]
          }, {
            type: 'checkbox',
            label: 'Elevated Blood Sugar',
            checkItems: [{
              name: 'ebs_six_months',
              value: false,
              label: '6 Months',
              labelPosition: 'before'
            }, {
              name: 'ebs_today',
              value: false,
              label: 'Today',
              labelPosition: 'before'
            }]
          }, {
            type: 'checkbox',
            label: 'Extreme Thirst',
            checkItems: [{
              name: 'et_six_months',
              value: false,
              label: '6 Months',
              labelPosition: 'before'
            }, {
              name: 'et_today',
              value: false,
              label: 'Today',
              labelPosition: 'before'
            }]
          }, {
            type: 'checkbox',
            label: 'Frequent Urination',
            checkItems: [{
              name: 'fu_six_months',
              value: false,
              label: '6 Months',
              labelPosition: 'before'
            }, {
              name: 'fu_today',
              value: false,
              label: 'Today',
              labelPosition: 'before'
            }]
          }, {
            type: 'checkbox',
            label: 'Fatigue (Tiredness)',
            checkItems: [{
              name: 'ft_six_months',
              value: false,
              label: '6 Months',
              labelPosition: 'before'
            }, {
              name: 'ft_today',
              value: false,
              label: 'Today',
              labelPosition: 'before'
            }]
          }, {
            type: 'checkbox',
            label: 'Heartburn',
            checkItems: [{
              name: 'hb_six_months',
              value: false,
              label: '6 Months',
              labelPosition: 'before'
            }, {
              name: 'hb_today',
              value: false,
              label: 'Today',
              labelPosition: 'before'
            }]
          }, {
            type: 'checkbox',
            label: 'Increased Hunger',
            checkItems: [{
              name: 'ih_six_months',
              value: false,
              label: '6 Months',
              labelPosition: 'before'
            }, {
              name: 'ih_today',
              value: false,
              label: 'Today',
              labelPosition: 'before'
            }]
          }, {
            type: 'checkbox',
            label: 'Nausea',
            checkItems: [{
              name: 'nau_six_months',
              value: false,
              label: '6 Months',
              labelPosition: 'before'
            }, {
              name: 'nau_today',
              value: false,
              label: 'Today',
              labelPosition: 'before'
            }]
          }, {
            type: 'checkbox',
            label: 'Numbness & Tingling in Hands or Feet',
            checkItems: [{
              name: 'nthf_six_months',
              value: false,
              label: '6 Months',
              labelPosition: 'before'
            }, {
              name: 'nthf_today',
              value: false,
              label: 'Today',
              labelPosition: 'before'
            }]
          }, {
            type: 'checkbox',
            label: 'Vomiting',
            checkItems: [{
              name: 'vomiting_six_months',
              value: false,
              label: '6 Months',
              labelPosition: 'before'
            }, {
              name: 'vomiting_today',
              value: false,
              label: 'Today',
              labelPosition: 'before'
            }]
          }],
          calendarInfoFormFields: [{
            type: 'input',
            name: 'event_title',
            placeholder: 'Event Title',
            label: 'Event Title',
            value: ''
          }, {
            type: 'input',
            name: 'description',
            placeholder: 'Event Description',
            label: 'Event Description',
            value: ''
          }, {
            type: 'input',
            name: 'startdate',
            placeholder: 'Date of Appointment',
            label: 'Date of Appointment',
            value: ''
          }, {
            type: 'input',
            name: 'slot',
            placeholder: 'Time of Appointment',
            label: 'Time of Appointment',
            value: ''
          }, {
            type: 'select',
            name: 'reqTimezone',
            options: [{
              text: 'Alaska Standard Time',
              value: '-08:00|America/Anchorage'
            }, {
              text: 'Pacific Standard Time',
              value: '-07:00|America/Los_Angeles'
            }, {
              text: 'Mountain Standard Time(GMT-06:00)',
              value: '-06:00|America/Denver'
            }, {
              text: 'Mountain Standard Time(GMT-07:00) (no DST)',
              value: '-07:00|America/Phoenix'
            }, {
              text: 'Central Standard Time',
              value: '-05:00|America/Chicago'
            }, {
              text: 'Eastern Standard Time',
              value: '-04:00|America/New_York'
            }, {
              text: 'Hawaii Standard Time',
              value: '-10:00|Pacific/Honolulu'
            }],
            value: '-05:00|America/Chicago'
          }, {
            type: 'input',
            name: 'username',
            placeholder: 'Organizer Name',
            label: 'Organizer Name',
            value: ''
          }, {
            type: 'input',
            name: 'useremail',
            placeholder: 'Organizer Email',
            label: 'Organizer Email',
            value: ''
          }, {
            type: 'input',
            name: 'attendees',
            placeholder: 'Attendee Email',
            label: 'Attendee Email',
            value: ''
          }, {
            type: 'input',
            name: 'additional_notes',
            placeholder: 'Additional Notes',
            label: 'Additional Notes',
            value: ''
          }]
        };
      }

      _createClass(CalViewSlotComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this220 = this;

          if (this.cookieService.check('jwtToken')) {
            this.configData.jwtToken = this.cookieService.get('jwtToken');
            this.activatedRoute.data.forEach(function (data) {
              _this220.configData.responseData = data.eventdayarrData.data;
              console.log('responseData', _this220.configData.responseData);
            });
          } else {
            this.openSnackBar('Token not found');
          }
          /******* Get user details from cookies ******/


          var userDetails = JSON.parse(this.cookieService.get('user_details'));
          this.configData = Object.assign(this.configData, userDetails); // this.configData.refresh_token = userDetails.refresh_token;
          // this.configData.access_token = userDetails.access_token;

          this.updateUser();
        }
      }, {
        key: "updateUser",
        value: function updateUser() {
          var userDetails = JSON.parse(this.cookieService.get('user_details'));

          if (this.activatedRoute.snapshot.params.refresh && this.cookieService.check('user_details')) {
            var data = {
              token: this.cookieService.get('jwtToken'),
              id: userDetails._id,
              data: {
                access_token: this.activatedRoute.snapshot.params.access_t,
                refresh_token: this.activatedRoute.snapshot.params.refresh
              }
            };
            this.httpRequestService.httpViaPost('update-user', data).subscribe(function (response) {
              console.log('response', response);
            });
          }
        }
      }, {
        key: "openSnackBar",
        value: function openSnackBar(message) {
          var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
          this.snackBar.open(message, action, {
            duration: 3000
          });
        }
      }]);

      return CalViewSlotComponent;
    }();

    CalViewSlotComponent.ctorParameters = function () {
      return [{
        type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__["CookieService"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_6__["MatSnackBar"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__["HttpServiceService"]
      }];
    };

    CalViewSlotComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-cal-view-slot',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./cal-view-slot.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/tech/manage-calender/manage-schedule/cal-view-slot/cal-view-slot.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./cal-view-slot.component.css */
      "./src/app/components/tech/manage-calender/manage-schedule/cal-view-slot/cal-view-slot.component.css"))["default"]]
    })], CalViewSlotComponent);
    /***/
  },

  /***/
  "./src/app/components/tech/manage-calender/my-appointments/list/list.component.css":
  /*!*****************************************************************************************!*\
    !*** ./src/app/components/tech/manage-calender/my-appointments/list/list.component.css ***!
    \*****************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsTechManageCalenderMyAppointmentsListListComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdGVjaC9tYW5hZ2UtY2FsZW5kZXIvbXktYXBwb2ludG1lbnRzL2xpc3QvbGlzdC5jb21wb25lbnQuY3NzIn0= */";
    /***/
  },

  /***/
  "./src/app/components/tech/manage-calender/my-appointments/list/list.component.ts":
  /*!****************************************************************************************!*\
    !*** ./src/app/components/tech/manage-calender/my-appointments/list/list.component.ts ***!
    \****************************************************************************************/

  /*! exports provided: ListComponent */

  /***/
  function srcAppComponentsTechManageCalenderMyAppointmentsListListComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ListComponent", function () {
      return ListComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");

    var ListComponent = /*#__PURE__*/function () {
      function ListComponent(cookieService, activatedRoute, snackBar) {
        _classCallCheck(this, ListComponent);

        this.cookieService = cookieService;
        this.activatedRoute = activatedRoute;
        this.snackBar = snackBar;
      }

      _createClass(ListComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }, {
        key: "openSnackBar",
        value: function openSnackBar(message, action) {
          this.snackBar.open(message, action, {
            duration: 3000
          });
        }
      }]);

      return ListComponent;
    }();

    ListComponent.ctorParameters = function () {
      return [{
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatSnackBar"]
      }];
    };

    ListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-list',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./list.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/tech/manage-calender/my-appointments/list/list.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./list.component.css */
      "./src/app/components/tech/manage-calender/my-appointments/list/list.component.css"))["default"]]
    })], ListComponent);
    /***/
  },

  /***/
  "./src/app/components/tech/patient-management/bulk-upload/bulk-upload.component.css":
  /*!******************************************************************************************!*\
    !*** ./src/app/components/tech/patient-management/bulk-upload/bulk-upload.component.css ***!
    \******************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsTechPatientManagementBulkUploadBulkUploadComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n\n\n\n.add_form .form_wrapper .mat-form-field{ width: 100%;  }\n.add_form .form_wrapper textarea{ resize: none;}\n.add_form h2{ font-family: \"AvenirBlack\"; text-transform: uppercase; font-size: 24px; padding: 0 6px; color: #1dbce9; }\n.add_form .submit_form { display: block; width: 100%; text-align: center; margin-top: 30px; }\n.add_form .test_date_wrapper .mat-card-actions, .add_form .test_date_wrapper .mat-card-content, .add_form .test_date_wrapper .mat-card-subtitle {\n  display: inline-flex;\n  margin-bottom: 16px;\n  vertical-align: middle;\n  justify-content: center;\n  align-items: center;\n}\n.add_form .mat-card-content label , .add_form .patient_diagnotes label{ font-family: \"AvenirMedium\"; color: #01090c; font-size: 16px; margin: 0 5px}\n.add_form .mat-card-content label ,\n.add_form .patient_diagnotes label{ font-family: \"AvenirMedium\"; color: #01090c; font-size: 16px; margin:10px;line-height: 20px;}\n.add_form .mat-card-content .mat-checkbox { margin: 0 5px; }\n.add_form .mat-card-content ,\n.add_form .patient_diagnotes .mat-form-field {\n\n  position: relative;\n  text-align: left;\n  margin: 0 10px;\n}\n.add_form .patient_diagnotes{ width: auto; flex-direction: column; display: flex; margin: 0 8px; border: 2px solid #43cef5; background: #fff; box-sizing: border-box;}\n.add_form .patient_diagnotes{ width: auto; flex-direction: column; display: flex; margin: 0;}\n.add_form .patient_diagnotes .example-full-width textarea{ resize: none; }\n.add_form .status_wrapper{ display: flex; align-items: center; justify-content: space-evenly; margin: 0; }\n.add_form  .status_wrapper .mat-form-field { width: 48%; }\n@media screen and (max-width: 1460px){\n  .techdashboard_header .mat-toolbar-row .quotation p { font-size: 24px; line-height: 26px;}\n}\n@media screen and (max-width: 1000px){\n  .add_form .submit_form button { width: 48%; }\n}\n@media screen and (max-width: 991px){\n.techdashboard_header .mat-toolbar-row { flex-direction: column; padding: 20px;}\n.techdashboard_header .mat-toolbar-row .quotation p { margin-top: 16px; }\n}\n@media screen and (max-width: 768px){\n  .add_form .form_wrapper .mat-form-field { width: 100%; margin: 0; }\n}\n@media screen and (max-width: 576px){\n.add_form .submit_form button { font-size: 22px; padding: 2px; }\n\n.add_form .submit_form button { width: 100%; margin: 0; margin-top: 20px; }\n.add_form .submit_form { display: flex; flex-direction: column-reverse; text-align: center; margin-top: 0px; }\n.add_form .submit_form button:nth-child(1) { margin-right: 0; margin-top: 20px; }\n}\n@media screen and (max-width: 360px){\n.techdashboard_header .mat-toolbar-row .quotation p { font-size: 16px; line-height: 22px; }\n.add_form h2 { font-size: 22px; line-height: 24px; text-align: center; }\n}\n@media screen and (max-width: 1700px){\n  .content_wrapper .itemsection p { font-size: 26px; }\n  .one, .two, .three { background-position: 100% center; }\n}\n@media screen and (max-width: 1680px){\n  .techdashboard_header .mat-toolbar-row .quotation p { font-size: 24px; }\n}\n@media screen and (max-width: 1500px){\n  .techdashboard_header .mat-toolbar-row .quotation p { font-size: 22px; }\n  .content_wrapper .itemsection { padding-bottom: 36px; }\n}\n@media screen and (max-width: 1440px){\n  .content_wrapper .itemsection p { line-height: 26px; font-size: 24px;}\n\n}\n@media screen and (max-width: 1400px){\n.techdashboard_header .mat-toolbar-row .quotation p { font-size: 20px; text-align: center; line-height: 22px; white-space: normal; }\n.techdashboard_header .mat-toolbar-row { padding: 0 20px; }\n}\n@media screen and (max-width: 1240px){\n  .doctor_content_wrapper{ background: #012035; }\n}\n@media screen and (max-width: 1199px){\n.doctor_content_wrapper .table_structure { width: 100%;  }\n.patient_report_section .button_action { width: 970px; }\n.patient_report_section .button_action button { width: 475px; font-size: 20px; padding: 8px; }\n.content_wrapper { display: flex; justify-content: center; align-items: center; text-align: center; flex-wrap: wrap; }\n.content_wrapper .itemsection { width: 31%; margin: 15px 12px; }\n.doctor_content_wrapper { padding: 40px 30px; }\n.doctor_content_wrapper .mat-card-title { font-size: 36px; margin-bottom: 20px; }\n\n.table_structure .mat-list-item .title_n { font-size: 26px; }\n.table_structure .mat-list-item .title_a { font-size: 22px; }\n.content_wrapper .itemsection p{ width: 100%; font-size: 22px; }\n.techdashboard_header .mat-toolbar-row { height: auto; flex-direction: column; }\n}\n@media screen and (max-width: 1080px){\n.doctor_content_wrapper {\n    padding: 40px 20px;\n}\n.doctor_content_wrapper .mat-card-title {\n  font-size: 32px;\n  margin-bottom: 20px;\n}\n.table_structure .mat-list-item .title_n {\n  font-size: 22px;\n}\n.table_structure .mat-list-item .title_a {\n  font-size: 20px;\n}\n}\n@media screen and (max-width: 1038px){\n.content_wrapper .itemsection { width: 30.9%;  }\n}\n@media screen and (max-width: 991px){\n.doctor_content_wrapper { text-align: center; }\n.patient_report_section .patient_top_search { display: flex; align-items: center; flex-direction: column; }\n.patient_report_section .patient_top_search .search_bar { margin-bottom: 20px; }\n.patient_report_section .button_action button { padding: 8px 30px; margin: 0 10px; width: 100%;}\n.patient_report_section .button_action { width: auto; margin: 0 5px; display: flex; justify-content: center; }\n.content_wrapper .itemsection { width: 30.8%; }\n.table_structure .mat-list-item .title_a { font-size: 16px; }\n\n.techdashboard_header .mat-toolbar-row .quotation { display: none; }\n\n.techdashboard_header .mat-toolbar-row .quotation .mat-list-base {\n  display: block;\n}\n}\n@media screen and (max-width: 970px){\n.patient_report_section .button_action button { width: auto; }\n.table_structure .mat-list-item .title_n { font-size: 18px; }\n\n.one { background: linear-gradient(100deg, #f9c856, #dd671d); }\n.two { background: linear-gradient(100deg, #0973d1, #05335a); }\n.three { background: linear-gradient(100deg, #44cf80, #26a555); }\n}\n@media screen and (max-width: 950px){\n  .content_wrapper .itemsection {\n    width: 30.8%;\n}\n  .content_wrapper .itemsection p { font-size: 20px; }\n  .table_structure .mat-list-base .mat-list-item, .mat-list-base .mat-list-option {  margin-bottom: 16px; }\n}\n@media screen and (max-width: 850px){\n.content_wrapper .itemsection { width: 30.2%; }\n/* hiding searchbar */\n.patient_report_section .patient_top_search .search_bar {\n  margin-bottom: 20px;\n  display: none;\n}\n\n.techdashboard_header .mat-toolbar-row {\n  padding: 0 16px;\n  flex-direction: column;\n}\n\n\n}\n@media screen and (max-width: 768px){\n.content_wrapper .itemsection { width: 100%; margin: 16px; margin-bottom: 0; }\n.content_wrapper .itemsection:nth-last-child(1) {margin-bottom: 16px; }\n.patient_report_section .button_action { display: flex; justify-content: center; flex-direction: column; }\n.patient_report_section .button_action button { margin-bottom: 16px; word-break: break-word; white-space: normal; line-height: 22px; }\n.techdashboard_header .mat-toolbar-row { padding: 0 16px; }\n.techdashboard_header .mat-toolbar-row .quotation p { margin: 16px 0; }\n.doctor_content_wrapper { padding: 20px 0px; }\n.table_structure .mat-list-item .title_a { font-size: 14px; }\n.doctor_content_wrapper .mat-card-title { font-size: 28px; margin-bottom: 5px; text-align: left; padding: 0 16px; }\n\n.table_structure .mat-list-base .mat-list-item, .mat-list-base .mat-list-option { margin-bottom: 16px; }\n.footer_section .footer_content { width: auto; }\n\n.table_structure .mat-list-base .mat-list-item, .mat-list-base .mat-list-option { display: flex; text-align: left; }\n}\n@media screen and (max-width: 480px){\n.doctor_content_wrapper .mat-card-title { font-size: 24px; }\n.patient_report_section .patient_top_search h1 { font-size: 24px; }\n}\n\n\n/*# sourceMappingURL=data:application/json;base64, */";
    /***/
  },

  /***/
  "./src/app/components/tech/patient-management/bulk-upload/bulk-upload.component.ts":
  /*!*****************************************************************************************!*\
    !*** ./src/app/components/tech/patient-management/bulk-upload/bulk-upload.component.ts ***!
    \*****************************************************************************************/

  /*! exports provided: BulkUploadComponent */

  /***/
  function srcAppComponentsTechPatientManagementBulkUploadBulkUploadComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BulkUploadComponent", function () {
      return BulkUploadComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var _class_common_common_function__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../../../../class/common/common-function */
    "./src/app/class/common/common-function.ts");
    /* harmony import */


    var _common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../../../common/dialog-box/dialog-box.component */
    "./src/app/components/common/dialog-box/dialog-box.component.ts");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ../../../../../environments/environment */
    "./src/environments/environment.ts");

    var BulkUploadComponent = /*#__PURE__*/function () {
      function BulkUploadComponent(fb, activeRoute, router, httpService, cookie, snakBar, dialog, commonFunction) {
        _classCallCheck(this, BulkUploadComponent);

        this.fb = fb;
        this.activeRoute = activeRoute;
        this.router = router;
        this.httpService = httpService;
        this.cookie = cookie;
        this.snakBar = snakBar;
        this.dialog = dialog;
        this.commonFunction = commonFunction;
        this.configData = {
          baseUrl: _environments_environment__WEBPACK_IMPORTED_MODULE_9__["environment"].fileUploadUrl,
          endpoint: "uploads",
          size: "51200",
          format: ["pdf", "jpeg"],
          type: "patient-file",
          path: "patientFile",
          prefix: "patient-file",
          formSubmit: false,
          conversionNeeded: 1,
          bucketName: "awsbackend-dev-patient-files"
        };
        this.doctorDetails = {};
        this.images_array = [];
        this.cookiesData = {};
        this.allDoctorDataArray = [];
        this.user_token = cookie.get('jwtToken');
        var allcookies = cookie.getAll();
        this.cookiesData = JSON.parse(allcookies.user_details);
        this.cookies_id = this.cookiesData._id; //this.getAllDoctorData();

        this.techBulkUploadForm = this.fb.group({
          batch_name: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(40)]],
          report_file_type: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          // doctor_id           : ['', [Validators.required]],
          // doctor_name         : ['', []],
          // doctor_email        : ['', []],
          // doctor_details      : ['', []],
          tech_id: [this.cookies_id, [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
          tech_name: [this.cookiesData.firstname + ' ' + this.cookiesData.lastname, []],
          tech_email: [this.cookiesData.email, []],
          upload_file: ['', []],
          status: [2, []],
          ready_for_process: [false, []],
          note: ['', []],
          report_type: ['file', []]
        });
        this.user_token = cookie.get('jwtToken');
      }

      _createClass(BulkUploadComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }, {
        key: "getAllDoctorData",
        value: function getAllDoctorData() {
          var _this221 = this;

          var data = {
            "source": "doctors_by_tech_id",
            "condition": {
              "tech_id_object": this.cookies_id
            },
            "token": this.user_token
          };
          this.httpService.httpViaPost('datalist', data).subscribe(function (response) {
            var result = {};
            result = response.res;
            _this221.allDoctorDataArray = result;
          });
        }
      }, {
        key: "cancelButton",
        value: function cancelButton() {
          this.router.navigateByUrl('/tech/dashboard');
        }
      }, {
        key: "inputUntouch",
        value: function inputUntouch(form, val) {
          form.controls[val].markAsUntouched();
        }
        /* This one is for get doctor dropdown data */

      }, {
        key: "getsellabel",
        value: function getsellabel(index) {
          this.doctorDetails.name = this.allDoctorDataArray[index].firstname + ' ' + this.allDoctorDataArray[index].lastname;
          this.doctorDetails.email = this.allDoctorDataArray[index].email;
          var details = '<p class="doctor_name">';
          details += this.doctorDetails.name;
          details += '<p class="doctor_name"> <span> Email: </span>';
          details += this.allDoctorDataArray[index].email;
          details += '</p><p class="doctor_name"> <span>NPI: </span>';
          details += this.allDoctorDataArray[index].npi;
          details += '</p>';
          this.techBulkUploadForm.patchValue({
            doctor_id: this.allDoctorDataArray[index]._id,
            doctor_name: this.doctorDetails.name,
            doctor_email: this.doctorDetails.email,
            doctor_details: details
          });
        }
      }, {
        key: "techBulkUploadFormSubmit",
        value: function techBulkUploadFormSubmit() {
          this.configData.formSubmit = true;

          if (!this.configData.files) {
            return false;
          } else {
            this.bulkUploaddataSubmit();
          }
          /* Open modal */
          // let modalData: any = {
          //   panelClass: 'bulkupload-dialog',
          //   data: {
          //     header: "Message",
          //     message: "Are you sure you want to upload these reports for physician : " + this.doctorDetails.name + " ?",
          //     button1: { text: "No" },
          //     button2: { text: "Yes" },
          //   }
          // }
          // this.dialogRef = this.dialog.open(DialogBoxComponent, modalData);
          // this.dialogRef.afterClosed().subscribe(result => {
          //   switch (result) {
          //     case "No":
          //       break;
          //     case "Yes":
          //       this.bulkUploaddataSubmit();
          //       break;
          //   }
          // });

        }
      }, {
        key: "bulkUploaddataSubmit",
        value: function bulkUploaddataSubmit() {
          var _this222 = this;

          if (this.configData.files.length > 0) {
            for (var loop in this.configData.files) {
              this.images_array = this.images_array.concat({
                "upload_server_id": this.configData.files[loop].upload.data._id,
                "basepath": this.configData.files[loop].upload.data.basepath + '/' + this.configData.path + '/',
                "fileservername": this.configData.files[loop].upload.data.data.fileservername,
                "name": this.configData.files[loop].name,
                "type": this.configData.files[loop].type,
                "bucketname": this.configData.bucketName
              });
            }

            this.techBulkUploadForm.controls['upload_file'].patchValue(this.images_array);
          } else {
            this.techBulkUploadForm.value.upload_file = false;
          }

          if (this.techBulkUploadForm.valid) {
            var formData = this.techBulkUploadForm.value;

            if (typeof this.cookiesData.diagnostic_admin_id != 'undefined') {
              formData["diagnostic_admin_id"] = this.cookiesData.diagnostic_admin_id;
            }

            formData.report_life_circle = [];
            formData.report_life_circle.push({
              "upload_by_tech_id": this.cookies_id,
              "date": Date.now(),
              "upload_date": Date.now(),
              "status": 2,
              "upload_status": 2,
              "upload_status_text": "File uploaded",
              "status_text": "File uploaded"
            });
            var data = {
              "source": "data_pece",
              "data": formData,
              //"doctor_details": this.doctorDetails,
              "tech_details": this.cookiesData,
              "login_url": _environments_environment__WEBPACK_IMPORTED_MODULE_9__["environment"].siteBaseUrl + "login",
              "sourceobj": ["tech_id", "doctor_id", "diagnostic_admin_id"],
              "token": this.user_token
            };
            this.httpService.httpViaPost("upload-bulk-report", data).subscribe(function (response) {
              if (response.status = "success") {
                _this222.snakBar.open("Successfully Submitted", "OK", {
                  duration: 1000
                });

                setTimeout(function () {
                  _this222.router.navigateByUrl('/tech/patient-management/bulk-upload/report-conformation/' + response.upload_id);
                }, 2000);
              }
            });
          } else {
            var modalData = {
              panelClass: 'bulkupload-dialog',
              data: {
                header: "Message",
                message: "An error occord. Please try later.",
                button1: {
                  text: ""
                },
                button2: {
                  text: "Ok"
                }
              }
            };
            this.dialogRef = this.dialog.open(_common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_8__["DialogBoxComponent"], modalData);
            this.dialogRef.afterClosed().subscribe(function (result) {
              switch (result) {
                case "No":
                  break;

                case "Ok":
                  break;
              }
            });
          }
        }
      }]);

      return BulkUploadComponent;
    }();

    BulkUploadComponent.ctorParameters = function () {
      return [{
        type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__["HttpServiceService"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_5__["CookieService"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_6__["MatSnackBar"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_6__["MatDialog"]
      }, {
        type: _class_common_common_function__WEBPACK_IMPORTED_MODULE_7__["CommonFunction"]
      }];
    };

    BulkUploadComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-bulk-upload',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./bulk-upload.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/tech/patient-management/bulk-upload/bulk-upload.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./bulk-upload.component.css */
      "./src/app/components/tech/patient-management/bulk-upload/bulk-upload.component.css"))["default"]]
    })], BulkUploadComponent);
    /***/
  },

  /***/
  "./src/app/components/tech/patient-management/patient-select-modal/patient-select-modal.component.css":
  /*!************************************************************************************************************!*\
    !*** ./src/app/components/tech/patient-management/patient-select-modal/patient-select-modal.component.css ***!
    \************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsTechPatientManagementPatientSelectModalPatientSelectModalComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdGVjaC9wYXRpZW50LW1hbmFnZW1lbnQvcGF0aWVudC1zZWxlY3QtbW9kYWwvcGF0aWVudC1zZWxlY3QtbW9kYWwuY29tcG9uZW50LmNzcyJ9 */";
    /***/
  },

  /***/
  "./src/app/components/tech/patient-management/patient-select-modal/patient-select-modal.component.ts":
  /*!***********************************************************************************************************!*\
    !*** ./src/app/components/tech/patient-management/patient-select-modal/patient-select-modal.component.ts ***!
    \***********************************************************************************************************/

  /*! exports provided: PatientSelectModalComponent */

  /***/
  function srcAppComponentsTechPatientManagementPatientSelectModalPatientSelectModalComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PatientSelectModalComponent", function () {
      return PatientSelectModalComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/material/dialog */
    "./node_modules/@angular/material/esm2015/dialog.js");

    var PatientSelectModalComponent = /*#__PURE__*/function () {
      function PatientSelectModalComponent(dialogRef, data) {
        _classCallCheck(this, PatientSelectModalComponent);

        this.dialogRef = dialogRef;
        this.data = data;
        this.selectPatientData = '';
      }

      _createClass(PatientSelectModalComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }, {
        key: "onNoClick",
        value: function onNoClick() {
          this.dialogRef.close();
        }
      }, {
        key: "selectPatient",
        value: function selectPatient(patientIndex) {
          this.selectPatientData = this.data.allPatient[patientIndex];
        }
      }]);

      return PatientSelectModalComponent;
    }();

    PatientSelectModalComponent.ctorParameters = function () {
      return [{
        type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"]
      }, {
        type: undefined,
        decorators: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
          args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"]]
        }]
      }];
    };

    PatientSelectModalComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-patient-select-modal',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./patient-select-modal.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/tech/patient-management/patient-select-modal/patient-select-modal.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./patient-select-modal.component.css */
      "./src/app/components/tech/patient-management/patient-select-modal/patient-select-modal.component.css"))["default"]]
    }), tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"]))], PatientSelectModalComponent);
    /***/
  },

  /***/
  "./src/app/components/tech/patient-management/report-conformation/report-conformation.component.css":
  /*!**********************************************************************************************************!*\
    !*** ./src/app/components/tech/patient-management/report-conformation/report-conformation.component.css ***!
    \**********************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsTechPatientManagementReportConformationReportConformationComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "table {\n    width: 100%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy90ZWNoL3BhdGllbnQtbWFuYWdlbWVudC9yZXBvcnQtY29uZm9ybWF0aW9uL3JlcG9ydC1jb25mb3JtYXRpb24uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7QUFDZiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdGVjaC9wYXRpZW50LW1hbmFnZW1lbnQvcmVwb3J0LWNvbmZvcm1hdGlvbi9yZXBvcnQtY29uZm9ybWF0aW9uLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gICAgd2lkdGg6IDEwMCU7XG59Il19 */";
    /***/
  },

  /***/
  "./src/app/components/tech/patient-management/report-conformation/report-conformation.component.ts":
  /*!*********************************************************************************************************!*\
    !*** ./src/app/components/tech/patient-management/report-conformation/report-conformation.component.ts ***!
    \*********************************************************************************************************/

  /*! exports provided: ReportConformationComponent */

  /***/
  function srcAppComponentsTechPatientManagementReportConformationReportConformationComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ReportConformationComponent", function () {
      return ReportConformationComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../../common/dialog-box/dialog-box.component */
    "./src/app/components/common/dialog-box/dialog-box.component.ts");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _angular_material_table__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/material/table */
    "./node_modules/@angular/material/esm2015/table.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var _patient_select_modal_patient_select_modal_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../patient-select-modal/patient-select-modal.component */
    "./src/app/components/tech/patient-management/patient-select-modal/patient-select-modal.component.ts");
    /* harmony import */


    var _report_upload_success_modal_report_upload_success_modal_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ../report-upload-success-modal/report-upload-success-modal.component */
    "./src/app/components/tech/patient-management/report-upload-success-modal/report-upload-success-modal.component.ts");

    var ReportConformationComponent = /*#__PURE__*/function () {
      function ReportConformationComponent(snackBar, dialog, http, cookieService, router, activatedRoute) {
        var _this223 = this;

        _classCallCheck(this, ReportConformationComponent);

        this.snackBar = snackBar;
        this.dialog = dialog;
        this.http = http;
        this.cookieService = cookieService;
        this.router = router;
        this.activatedRoute = activatedRoute;
        /* Confirm submitted records with existing patient profile which yet to have a report. */

        this.confirmSubmittedDisplayedColumns = ["no", "patient_report", "suggested_patient_by_system", "choose_other_patient"];
        this.confirmSubmittedDataSource = [];
        /* Conflicting Patient Records */

        this.conflictingPatientRecordsDisplayedColumns = ["no", "patient_report", "conflicting_records", "choose_other_patient"];
        this.conflictingPatientRecordsDataSource = [];
        /* Not Find Patient Records */

        this.notFindPatientRecordsDisplayedColumns = ["no", "patient_report", "choose_other_patient"];
        this.notFindPatientRecordsDataSource = [];
        this.htmlText = {
          confirmSubmittedDataSource: [],
          conflictingPatientRecordsDataSource: [],
          notFindDataSource: []
        };
        /* Auto Complete */

        this.autocomplateData = {
          flag: "",
          arrayIndex: ""
        };
        this.checkboxData = {
          checkbox1: false,
          checkbox2: false
        };
        this.htmlText.userData = this.cookieService.getAll();
        this.htmlText.userData.user_details = JSON.parse(this.htmlText.userData.user_details);
        var data = {
          "source": "data_bulk_upload",
          "condition": {
            "upload_id": this.activatedRoute.snapshot.paramMap.get("upload_id")
          },
          "token": this.htmlText.userData.jwtToken
        };
        this.http.httpViaPost('datalist', data).subscribe(function (response) {
          if (response.status == true) {
            console.log("Step 1: Get uploaded patient files.");
            /* Get name using file name start */

            _this223.htmlText.confirmSubmittedDataSource = response.res;
            var patientSearch = [];
            console.log("Step 2: Get patient name using report file name and create an array to get the patient details from database.");

            for (var loop = 0; loop < _this223.htmlText.confirmSubmittedDataSource.length; loop++) {
              var patientNameArr = _this223.htmlText.confirmSubmittedDataSource[loop].file_original_name.replace("PatientReport_", "");

              patientNameArr = patientNameArr.replace(".pdf", "");
              patientNameArr = patientNameArr.split(' ');
              console.log("Name: ", patientNameArr);
              _this223.htmlText.confirmSubmittedDataSource[loop].patient_name = patientNameArr[0] + ' ' + patientNameArr[1];
              _this223.htmlText.confirmSubmittedDataSource[loop].patient_name_search = patientNameArr[0];
              patientSearch.push(patientNameArr[0]);
              _this223.htmlText.confirmSubmittedDataSource[loop].patient_details = [];
            }
            /* Get name using file name end */

            /* Find patient name using file name start view_google_event_with_all_data */


            var _data8 = {
              "source": "view_google_event_with_all_data",
              "condition": {
                "patient_name": patientSearch,
                "tech_id": _this223.htmlText.userData.user_details._id
              },
              "token": _this223.htmlText.userData.jwtToken
            };
            console.log("Step 3: Http request for get all patient data and match patient data.");

            _this223.http.httpViaPost('bulk-upload-patient-match', _data8).subscribe(function (response) {
              if (response.status == "success") {
                _this223.htmlText.options = response.data.all_patient;
                _this223.htmlText.conflictingPatientRecordsDataSource = [];
                console.log("Step 4: Marge with patient details and conflict record.");

                for (var _loop2 = 0; _loop2 < _this223.htmlText.confirmSubmittedDataSource.length; _loop2++) {
                  for (var loop2 = 0; loop2 < response.data.match_patient.length; loop2++) {
                    /* For find some patient */
                    if (_this223.htmlText.confirmSubmittedDataSource[_loop2].patient_name.toLowerCase() == response.data.match_patient[loop2].patient_name.toLowerCase()) {
                      /* checking duplicate */
                      if (typeof _this223.htmlText.confirmSubmittedDataSource[_loop2].patient_find_flag == 'undefined') {
                        _this223.htmlText.confirmSubmittedDataSource[_loop2].patient_find_flag = true;

                        _this223.htmlText.confirmSubmittedDataSource[_loop2].patient_details.push(response.data.match_patient[loop2]);

                        _this223.htmlText.confirmSubmittedDataSource[_loop2].status = 3;

                        _this223.htmlText.confirmSubmittedDataSource[_loop2].report_life_circle.push({
                          "upload_by_tech_id": _this223.htmlText.userData.user_details._id,
                          "date": Date.now(),
                          "upload_date": Date.now(),
                          "status": 3,
                          "upload_status": 3,
                          "upload_status_text": "File uploaded confirm",
                          "status_text": "File uploaded confirm"
                        });

                        loop2 = response.data.match_patient.length;
                      } else {
                        _this223.htmlText.conflictingPatientRecordsDataSource.push(_this223.htmlText.confirmSubmittedDataSource[_loop2]);

                        _this223.htmlText.conflictingPatientRecordsDataSource[_this223.htmlText.conflictingPatientRecordsDataSource.length - 1].patient_details.push(response.data.match_patient[loop2]);

                        _this223.htmlText.conflictingPatientRecordsDataSource[_this223.htmlText.conflictingPatientRecordsDataSource.length - 1].status = 3;

                        _this223.htmlText.conflictingPatientRecordsDataSource[_this223.htmlText.conflictingPatientRecordsDataSource.length - 1].report_life_circle.push({
                          "upload_by_tech_id": _this223.htmlText.userData.user_details._id,
                          "upload_date": Date.now(),
                          "upload_status": 3,
                          "upload_status_text": "File uploaded confirm",
                          "File uploaded": "File uploaded confirm"
                        });
                      }
                    }
                  }
                }

                console.log("Step 4: Marge with patient details and conflict record.");
                console.log("Step 5: Delete conflict record from total patient report array.");
                /* Delete conflict data */

                for (var _loop3 = 0; _loop3 < _this223.htmlText.confirmSubmittedDataSource.length; _loop3++) {
                  if (_this223.htmlText.confirmSubmittedDataSource[_loop3].patient_details.length > 1) {
                    _this223.htmlText.confirmSubmittedDataSource.splice(_loop3, 1);
                  }
                }

                console.log("Step 6: Checking report where patient name not found.");
                /* Add not find data */

                var deleteIndex = [];

                for (var _loop4 = 0; _loop4 < _this223.htmlText.confirmSubmittedDataSource.length; _loop4++) {
                  if (typeof _this223.htmlText.confirmSubmittedDataSource[_loop4].patient_find_flag == 'undefined') {
                    _this223.htmlText.notFindDataSource.push(_this223.htmlText.confirmSubmittedDataSource[_loop4]);

                    _this223.htmlText.notFindDataSource[_this223.htmlText.notFindDataSource.length - 1].status = 3;

                    _this223.htmlText.notFindDataSource[_this223.htmlText.notFindDataSource.length - 1].report_life_circle.push({
                      "upload_by_tech_id": _this223.htmlText.userData.user_details._id,
                      "upload_date": Date.now(),
                      "upload_status": 3,
                      "upload_status_text": "File uploaded confirm",
                      "File uploaded": "File uploaded confirm"
                    });

                    deleteIndex.push(_loop4);
                  }
                }

                console.log("Step 7: Delete not patient find record from total patient report array.");

                for (var _loop5 = 0; _loop5 < deleteIndex.length; _loop5++) {
                  _this223.htmlText.confirmSubmittedDataSource.splice(deleteIndex, 1);
                }

                console.log("Step 8: Now we have 3 type of record.");
                console.log("          1) Confirm Submit: Find one patient name using file name.");
                console.log("          2) Conflict Record: Find more then one patient name using file name.");
                console.log("          3) Report which dose not match with any patient name using file name.");
                console.log("Step 9: Push data into the mat table.");
                _this223.confirmSubmittedDataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_6__["MatTableDataSource"](_this223.htmlText.confirmSubmittedDataSource);
                _this223.conflictingPatientRecordsDataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_6__["MatTableDataSource"](_this223.htmlText.conflictingPatientRecordsDataSource);
                _this223.notFindPatientRecordsDataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_6__["MatTableDataSource"](_this223.htmlText.notFindDataSource);
              }
            });
          }
        });
      }

      _createClass(ReportConformationComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }, {
        key: "selectArrayIndex",
        value: function selectArrayIndex(flag, index) {
          this.autocomplateData.flag = flag;
          this.autocomplateData.arrayIndex = index;
        }
      }, {
        key: "selectConflictingRecord",
        value: function selectConflictingRecord(flag, conflictIndex, selectIndex) {
          var _this224 = this;

          if (flag == 'conflicting') {
            var data = {
              width: '250px',
              data: {
                header: "Alert",
                message: "Are you sure to select record ?",
                button1: {
                  text: "No"
                },
                button2: {
                  text: "Yes"
                }
              }
            };
            this.dialogRef = this.dialog.open(_common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_3__["DialogBoxComponent"], data);
            this.dialogRef.afterClosed().subscribe(function (result) {
              switch (result) {
                case "No":
                  break;

                case "Yes":
                  var patientDetails = _this224.htmlText.conflictingPatientRecordsDataSource[conflictIndex].patient_details[selectIndex];

                  _this224.htmlText.conflictingPatientRecordsDataSource[conflictIndex].patient_details.splice(0, _this224.htmlText.conflictingPatientRecordsDataSource[conflictIndex].patient_details.length);

                  _this224.htmlText.conflictingPatientRecordsDataSource[conflictIndex].patient_details.push(patientDetails);

                  _this224.htmlText.confirmSubmittedDataSource.push(_this224.htmlText.conflictingPatientRecordsDataSource[conflictIndex]);

                  _this224.htmlText.conflictingPatientRecordsDataSource.splice(conflictIndex, 1);

                  _this224.confirmSubmittedDataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_6__["MatTableDataSource"](_this224.htmlText.confirmSubmittedDataSource);
                  _this224.conflictingPatientRecordsDataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_6__["MatTableDataSource"](_this224.htmlText.conflictingPatientRecordsDataSource);
                  break;
              }
            });
          }
        }
      }, {
        key: "updateRecord",
        value: function updateRecord() {
          var _this225 = this;

          if (this.checkboxData.checkbox1 == true && this.checkboxData.checkbox2 == true) {
            var data = {
              "source": "data_pece",
              "data": this.htmlText.confirmSubmittedDataSource,
              "token": this.htmlText.userData.jwtToken
            };
            this.http.httpViaPost("update-upload-file", data).subscribe(function (response) {
              if (response.status == 'success') {
                var dialogRef = _this225.dialog.open(_report_upload_success_modal_report_upload_success_modal_component__WEBPACK_IMPORTED_MODULE_9__["ReportUploadSuccessModalComponent"], {
                  panelClass: 'patient-confirm-report',
                  data: {
                    confirmSubmittedDataSource: _this225.htmlText.confirmSubmittedDataSource,
                    conflictingPatientRecordsDataSource: _this225.htmlText.conflictingPatientRecordsDataSource,
                    notFindDataSource: _this225.htmlText.notFindDataSource
                  }
                });

                dialogRef.afterClosed().subscribe(function (result) {
                  _this225.router.navigateByUrl('/tech/dashboard');
                });
              } else {
                _this225.snackBar.open(response.msg + " Error code: F-AEA-TS-258.", "Ok", {
                  duration: 2000
                });
              }
            });
          } else {
            var _data9 = {
              width: '250px',
              data: {
                header: "Alert",
                message: "Please check confirm box before submit.",
                button1: {
                  text: ""
                },
                button2: {
                  text: "Ok"
                }
              }
            };
            this.dialogRef = this.dialog.open(_common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_3__["DialogBoxComponent"], _data9);
            this.dialogRef.afterClosed().subscribe(function (result) {
              switch (result) {
                case "oK":
                  break;
              }
            });
          }
        }
      }, {
        key: "changePatientDialog",
        value: function changePatientDialog(sectionFlag, tableIndex) {
          var _this226 = this;

          var dialogRef = this.dialog.open(_patient_select_modal_patient_select_modal_component__WEBPACK_IMPORTED_MODULE_8__["PatientSelectModalComponent"], {
            panelClass: 'patient-confirm-report',
            data: {
              allPatient: this.htmlText.options
            }
          });
          dialogRef.afterClosed().subscribe(function (result) {
            if (result != '') {
              switch (sectionFlag) {
                case 'submitted':
                  _this226.htmlText.confirmSubmittedDataSource[tableIndex].patient_details.splice(0, 1);

                  _this226.htmlText.confirmSubmittedDataSource[tableIndex].patient_details.push(result);

                  _this226.confirmSubmittedDataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_6__["MatTableDataSource"](_this226.htmlText.confirmSubmittedDataSource);
                  break;

                case 'conflicting':
                  _this226.htmlText.conflictingPatientRecordsDataSource[tableIndex].patient_details = [];

                  _this226.htmlText.conflictingPatientRecordsDataSource[tableIndex].patient_details.push(result);

                  _this226.conflictingPatientRecordsDataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_6__["MatTableDataSource"](_this226.htmlText.conflictingPatientRecordsDataSource);
                  break;

                case 'not found':
                  _this226.htmlText.confirmSubmittedDataSource.push(_this226.htmlText.notFindDataSource[tableIndex]);

                  _this226.htmlText.confirmSubmittedDataSource[_this226.htmlText.confirmSubmittedDataSource.length - 1].patient_details.push(result);

                  _this226.htmlText.notFindDataSource.splice(tableIndex, 1);

                  _this226.confirmSubmittedDataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_6__["MatTableDataSource"](_this226.htmlText.confirmSubmittedDataSource);
                  _this226.notFindPatientRecordsDataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_6__["MatTableDataSource"](_this226.htmlText.notFindDataSource);
                  break;

                default:
                  break;
              }
            }
          });
        }
      }]);

      return ReportConformationComponent;
    }();

    ReportConformationComponent.ctorParameters = function () {
      return [{
        type: _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatSnackBar"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatDialog"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_2__["HttpServiceService"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_4__["CookieService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"]
      }];
    };

    ReportConformationComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-report-conformation',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./report-conformation.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/tech/patient-management/report-conformation/report-conformation.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./report-conformation.component.css */
      "./src/app/components/tech/patient-management/report-conformation/report-conformation.component.css"))["default"]]
    })], ReportConformationComponent);
    /***/
  },

  /***/
  "./src/app/components/tech/patient-management/report-upload-success-modal/report-upload-success-modal.component.css":
  /*!**************************************************************************************************************************!*\
    !*** ./src/app/components/tech/patient-management/report-upload-success-modal/report-upload-success-modal.component.css ***!
    \**************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsTechPatientManagementReportUploadSuccessModalReportUploadSuccessModalComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "table {\n    width: 100%;\n  }\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy90ZWNoL3BhdGllbnQtbWFuYWdlbWVudC9yZXBvcnQtdXBsb2FkLXN1Y2Nlc3MtbW9kYWwvcmVwb3J0LXVwbG9hZC1zdWNjZXNzLW1vZGFsLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0VBQ2IiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL3RlY2gvcGF0aWVudC1tYW5hZ2VtZW50L3JlcG9ydC11cGxvYWQtc3VjY2Vzcy1tb2RhbC9yZXBvcnQtdXBsb2FkLXN1Y2Nlc3MtbW9kYWwuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfSJdfQ== */";
    /***/
  },

  /***/
  "./src/app/components/tech/patient-management/report-upload-success-modal/report-upload-success-modal.component.ts":
  /*!*************************************************************************************************************************!*\
    !*** ./src/app/components/tech/patient-management/report-upload-success-modal/report-upload-success-modal.component.ts ***!
    \*************************************************************************************************************************/

  /*! exports provided: ReportUploadSuccessModalComponent */

  /***/
  function srcAppComponentsTechPatientManagementReportUploadSuccessModalReportUploadSuccessModalComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ReportUploadSuccessModalComponent", function () {
      return ReportUploadSuccessModalComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/material/dialog */
    "./node_modules/@angular/material/esm2015/dialog.js");
    /* harmony import */


    var _angular_material_table__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/material/table */
    "./node_modules/@angular/material/esm2015/table.js");

    var ReportUploadSuccessModalComponent = /*#__PURE__*/function () {
      function ReportUploadSuccessModalComponent(dialogRef, data) {
        _classCallCheck(this, ReportUploadSuccessModalComponent);

        this.dialogRef = dialogRef;
        this.data = data;
        /* Confirm submitted records with existing patient profile which yet to have a report. */

        this.confirmSubmittedDisplayedColumns = ["no", "patient_report", "suggested_patient_by_system"];
        this.confirmSubmittedDataSource = [];
        /* Conflicting Patient Records */

        this.conflictingPatientRecordsDisplayedColumns = ["no", "patient_report", "conflicting_records"];
        this.conflictingPatientRecordsDataSource = [];
        /* Not Find Patient Records */

        this.notFindPatientRecordsDisplayedColumns = ["no", "patient_report"];
        this.notFindPatientRecordsDataSource = [];
      }

      _createClass(ReportUploadSuccessModalComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          this.confirmSubmittedDataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_3__["MatTableDataSource"](this.data.confirmSubmittedDataSource);
          this.notFindPatientRecordsDataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_3__["MatTableDataSource"](this.data.notFindDataSource);
          this.conflictingPatientRecordsDataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_3__["MatTableDataSource"](this.data.conflictingPatientRecordsDataSource);
        }
      }, {
        key: "onNoClick",
        value: function onNoClick() {
          this.dialogRef.close();
        }
      }]);

      return ReportUploadSuccessModalComponent;
    }();

    ReportUploadSuccessModalComponent.ctorParameters = function () {
      return [{
        type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"]
      }, {
        type: undefined,
        decorators: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
          args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"]]
        }]
      }];
    };

    ReportUploadSuccessModalComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-report-upload-success-modal',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./report-upload-success-modal.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/tech/patient-management/report-upload-success-modal/report-upload-success-modal.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./report-upload-success-modal.component.css */
      "./src/app/components/tech/patient-management/report-upload-success-modal/report-upload-success-modal.component.css"))["default"]]
    }), tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"]))], ReportUploadSuccessModalComponent);
    /***/
  },

  /***/
  "./src/app/components/tech/report-details/report-details.component.css":
  /*!*****************************************************************************!*\
    !*** ./src/app/components/tech/report-details/report-details.component.css ***!
    \*****************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsTechReportDetailsReportDetailsComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdGVjaC9yZXBvcnQtZGV0YWlscy9yZXBvcnQtZGV0YWlscy5jb21wb25lbnQuY3NzIn0= */";
    /***/
  },

  /***/
  "./src/app/components/tech/report-details/report-details.component.ts":
  /*!****************************************************************************!*\
    !*** ./src/app/components/tech/report-details/report-details.component.ts ***!
    \****************************************************************************/

  /*! exports provided: ReportDetailsComponent */

  /***/
  function srcAppComponentsTechReportDetailsReportDetailsComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ReportDetailsComponent", function () {
      return ReportDetailsComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");

    var ReportDetailsComponent = /*#__PURE__*/function () {
      function ReportDetailsComponent(router) {
        _classCallCheck(this, ReportDetailsComponent);

        this.router = router;
        console.log("urllllllll", router.url);
      }

      _createClass(ReportDetailsComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }]);

      return ReportDetailsComponent;
    }();

    ReportDetailsComponent.ctorParameters = function () {
      return [{
        type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"]
      }];
    };

    ReportDetailsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-report-details',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./report-details.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/tech/report-details/report-details.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./report-details.component.css */
      "./src/app/components/tech/report-details/report-details.component.css"))["default"]]
    })], ReportDetailsComponent);
    /***/
  },

  /***/
  "./src/app/components/tech/tech-dashboard/tech-dashboard.component.css":
  /*!*****************************************************************************!*\
    !*** ./src/app/components/tech/tech-dashboard/tech-dashboard.component.css ***!
    \*****************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsTechTechDashboardTechDashboardComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = ".doctor_content_wrapper {\n  background: #edf0f2;\n  display: block;\n  padding: 15px 5px;\n  margin: 0px 5px 16px;\n  border-radius: 10px;\n}\n\n.doctor_content_wrapper .mat-card-title {\n  font-size: 24px;\n  font-family: \"AvenirMedium\";\n  text-transform: uppercase;\n  color: #535353;\n  margin-bottom: 5px;\n  border-bottom: 1px solid #9c9c9c;\n  padding: 0 10px;\n  padding-bottom: 8px;\n}\n\n.doctor_content_wrapper .table_structure {\n  width: 100%;\n  display: block;\n  margin-bottom: 0;\n  position: relative;\n}\n\n.doctor_content_wrapper table {\n  width: 100%;\n}\n\n.doctor_content_wrapper .table_structure::before {\n  content: '';\n  width: 1px;\n  height: 100%;\n  background: #c1c5c7;\n  position: absolute;\n  right: 51%;\n}\n\n.table_structure .mat-list mat-list-base {\n  display: flex;\n}\n\n.table_structure .mat-list-base .mat-list-item, .mat-list-base .mat-list-option {\n  display: inline-flex;\n  height: auto;\n  -webkit-tap-highlight-color: transparent;\n  width: auto;\n  padding: 0;\n  color: #fff;\n  border-right: 1px solid #044f82;\n}\n\n.table_structure .mat-list-base .mat-list-item:nth-last-child(1) {\n  border: none;\n}\n\n.table_structure .mat-list-item p {\n  display: block;\n  width: 100%;\n  margin: 0;\n}\n\n.table_structure .mat-list-item .title_n {\n  color: var(--button-color2);\n  font-size: 22px;\n  font-family: \"AvenirMedium\";\n  font-weight: normal;\n  text-transform: uppercase;\n}\n\n.table_structure .mat-list-item .title_a {\n  color: #7b7b7b;\n  font-size: 18px;\n  font-family: \"AvenirLight\";\n  text-transform: uppercase;\n}\n\n.mat-form-field-flex {\n  display: inline-flex;\n  align-items: baseline;\n  box-sizing: border-box;\n  width: 100%;\n  border: 1px solid #012035;\n}\n\n.patient_report_section .form_wrapper {\n  display: flex;\n  margin: 0 10px;\n}\n\n.patient_report_section .form_wrapper .mat-form-field-flex {\n  border: 1px solid #000!important;\n}\n\n.patient_report_section .mat-form-field-appearance-outline .mat-form-field-wrapper {\n  margin: 0!important;\n}\n\n.patient_report_section .patient_top_search {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 16px;\n  margin-top: 20px;\n  margin-bottom: 0;\n}\n\n.patient_report_section .patient_top_search .search_bar {\n  display: flex;\n}\n\n.patient_report_section .patient_top_search .search_bar button {\n  border: none;\n  background: #000;\n  color: #fff;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n}\n\n.patient_report_section .patient_top_search h1 {\n  font-size: 32px;\n  text-transform: uppercase;\n  color: #002035;\n  margin: auto;\n}\n\n.patient_report_section .patient_top_search .search_bar button:focus {\n  outline: none;\n}\n\n.patient_report_section .button_action button {\n  border-radius: 5px;\n  background: linear-gradient(180deg, #f9dc19, #daa505);\n  color: #5e3619;\n  text-transform: uppercase;\n  font-family: \"RobotoBlack\";\n  font-size: 25px;\n  padding: 10px;\n  width: 400px;\n  border: 3px solid #d59d01;\n}\n\n.techTable {\n  width: 100%;\n}\n\n.table_structure .mat-list-base .mat-list-item, .mat-list-base .mat-list-option {\n  display: inline-flex;\n  height: auto;\n  -webkit-tap-highlight-color: transparent;\n  width: auto;\n  padding: 0;\n  color: #fff;\n  border-right: 0;\n  width: 49%;\n  margin-bottom: 10px;\n}\n\n.doctorCount {\n  color: #353535;\n  padding: 3px 6px 6px;\n  font-size: 18px;\n  font-family: \"AvenirLight\";\n  margin: 0 18px;\n  display: initial;\n  background: #ffffff;\n  border-radius: 5px;\n}\n\n.doctorCount a {\n  color: #26c6da;\n  font-family: 'AvenirBlack';\n  cursor: pointer;\n}\n\n.allDocGrid {\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n}\n\n.allDocGrid .allItem {\n  width: 32%;\n  margin: 1%;\n  padding: 16px;\n  box-sizing: border-box;\n  box-shadow: 0px 0px 7px -1px #d27200;\n  position: relative;\n  text-align: center;\n}\n\n.allDocGrid .allItem .items_counter {\n  /* content: '';\n  display: block;\n  font-size: 20px;\n  font-family: \"RobotoBold\";\n  color: #fff;\n  clip-path: polygon(100% -3%, 0% 100%, 0 0);\n  background: #fda300;\n  background: #462121;\n  width: 40px;\n  height: 40px;\n  position: absolute;\n  left: 0;\n  top: 0;\n  padding: 3px;\n  text-align: left; */\n  display: none;\n}\n\n.allDocGrid .allItem .header {\n  padding: 0 10px;\n  font-family: \"AvenirBlack\";\n  color: #462121;\n  font-size: 18px;\n  line-height: 20px;\n  text-transform: uppercase;\n}\n\n.allDocGrid .allItem .otherDetails {\n  color: #3a2323;\n  font-size: 14px;\n  font-family: \"AvenirMedium\";\n  margin-bottom: 0;\n  margin-top: 10px;\n}\n\n.allDocGrid .allItem .otherDetails label {\n  font-family: \"AvenirBlack\";\n}\n\n.allDocGrid .allItem:nth-child(3n+1) {\n  margin-left: 0;\n}\n\n.allDocGrid .allItem:nth-child(3n+3) {\n  margin-right: 0;\n}\n\n.modalmainwrapper .button_w { align-items: center; justify-content: flex-end; background: transparent; padding: 0; height: auto; }\n\n.modalmainwrapper .button_w button {\n  background: #fb0505;\n  color: #fff;\n  font-size: 18px;\n  font-family: \"RobotoBold\";\n  border-radius: 0;\n  text-transform: capitalize;\n}\n\n.modalmainwrapper .main_title {\n  color: #0e0000;\n  display: block;\n  text-align: center;\n  font-family: \"AvenirBlack\";\n  text-transform: uppercase;\n  font-size: 30px;\n  margin-bottom: 16px;\n  background: #f9f9f9;\n  padding: 16px;\n  box-shadow: 0px 0px 3px 0px #fda300;\n}\n\n \n\n/*# sourceMappingURL=data:application/json;base64, */";
    /***/
  },

  /***/
  "./src/app/components/tech/tech-dashboard/tech-dashboard.component.ts":
  /*!****************************************************************************!*\
    !*** ./src/app/components/tech/tech-dashboard/tech-dashboard.component.ts ***!
    \****************************************************************************/

  /*! exports provided: TechDashboardComponent, DoctorViewDialogComponent */

  /***/
  function srcAppComponentsTechTechDashboardTechDashboardComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TechDashboardComponent", function () {
      return TechDashboardComponent;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DoctorViewDialogComponent", function () {
      return DoctorViewDialogComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_common_http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/common/http */
    "./node_modules/@angular/common/fesm2015/http.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _class_common_common_function__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../../../class/common/common-function */
    "./src/app/class/common/common-function.ts");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! @angular/material/paginator */
    "./node_modules/@angular/material/esm2015/paginator.js");
    /* harmony import */


    var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! @angular/material/dialog */
    "./node_modules/@angular/material/esm2015/dialog.js");
    /* harmony import */


    var _common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! ../../common/dialog-box/dialog-box.component */
    "./src/app/components/common/dialog-box/dialog-box.component.ts");
    /* harmony import */


    var moment__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
    /*! moment */
    "./node_modules/moment/moment.js");
    /* harmony import */


    var moment__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_11__);
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
    /*! ../../../../environments/environment */
    "./src/environments/environment.ts");

    var moment = moment__WEBPACK_IMPORTED_MODULE_11__;

    var TechDashboardComponent = /*#__PURE__*/function () {
      function TechDashboardComponent(cookie, http, httpService, activatedRoute, commonFunction, dialog) {
        var _this227 = this;

        _classCallCheck(this, TechDashboardComponent);

        this.cookie = cookie;
        this.http = http;
        this.httpService = httpService;
        this.activatedRoute = activatedRoute;
        this.commonFunction = commonFunction;
        this.dialog = dialog; // list *********

        this.allBillerData = [];
        this.billerData_count = 0;
        this.allUserData_skip = ["_id", "report_file_type", "tech_id", "tech_email", "batch_name", "report_type", "status", "file_basepath", "file_bucketname", "file_name", "file_original_name", "file_type", "converted_image", "images", "patient_details", "patient_name_search", "report_life_circle", "note", "additional_potential_health_risks", "cpt_codes", "created_at"];
        this.editUrl = "admin/biller-management/edit";
        this.libdata = {
          basecondition: {
            status: {
              "$gt": 10
            }
          },
          updateendpoint: '',
          custombuttons: [{
            label: "View Report",
            route: "tech/view-patient-record/",
            type: 'internallink',
            param: ['_id']
          }, {
            label: "Download Report",
            link: _environments_environment__WEBPACK_IMPORTED_MODULE_12__["environment"].s3bucket + "reports",
            type: 'externallink',
            paramtype: 'angular',
            param: ['download_file_name']
          }, {
            label: "View Codes",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-codes-details',
            datafields: ['Additional Potential Health Risks', 'CPT Codes', 'ICD Codes'],
            param: 'id',
            headermessage: 'Associated Codes'
          }, {
            label: "Doctor Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-doctor-details',
            datafields: ['firstname', 'lastname', 'email', 'fax', 'Practice Name', 'NPI', 'phone', 'address', 'city', 'state', 'zip'],
            param: 'id',
            headermessage: 'Doctor Information'
          }, {
            label: "Doctor Office Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-doctor-office-details',
            datafields: ['center name', 'first name', 'last name', 'email', 'phone', 'address', 'city', 'state', 'zip'],
            param: 'id',
            headermessage: 'Doctor Office Info'
          }, {
            label: "Parent Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-parent-details',
            datafields: ['Parent Name', 'Contact Person', 'email', 'phone', 'address', 'city', 'state', 'zip'],
            param: 'id',
            headermessage: 'Parent Information'
          }],
          hideeditbutton: true,
          hidedeletebutton: true,
          hidestatustogglebutton: true,
          hidedeletemany: true,
          hidemultipleselectbutton: true,
          hideupdatemany: true,
          hideviewbutton: true,
          tableheaders: ["patient_name", "status_text", "created_at_datetime", "cpt_addl", "general_details"]
        };
        this.allUserData_modify_header = {
          "general_details": "Related Info",
          "patient_name": "Patient Name",
          "status_text": "Status",
          "created_at_datetime": "Report Added",
          "cpt_addl": "CPT/ Addl Hrisk C"
        };
        this.UpdateEndpoint = "addorupdatedata";
        this.deleteEndpoint = "deletesingledata";
        this.apiUrl = _environments_environment__WEBPACK_IMPORTED_MODULE_12__["environment"].apiBaseUrl1;
        this.tableName = "data_pece";
        this.datacollection = 'getPatientlistdata';
        this.sortdata = {
          "type": 'desc',
          "field": 'patient_name',
          "options": ['patient_name', 'created_at_datetime']
        };
        this.limitcond = {
          "limit": 10,
          "skip": 0,
          "pagecount": 1
        };
        this.previewModal_detail_skip = ['_id', 'user_type', 'status', 'password', 'created_at'];
        this.status = [];
        this.status_search = [{
          val: "Biller Admin Approved",
          'name': 'Biller Admin Approved'
        }, {
          val: "Biller Admin Not Approved",
          'name': 'Biller Admin Not Approved'
        }, {
          val: "Biller Admin Hold",
          'name': "Biller Admin Hold"
        }, {
          val: "Doctor Sign",
          'name': "Doctor Sign"
        }, {
          val: "Send to Biller",
          'name': "Send to Biller"
        }, {
          val: "Downloaded",
          "name": "Report Downloaded"
        }];
        this.cptcodes = [{
          val: "95923",
          'name': '95923'
        }, {
          val: "95943",
          'name': '95943'
        }, {
          val: "95921",
          'name': "95921"
        }, {
          val: "93923",
          'name': "93923"
        }, {
          val: "93922",
          'name': "93922"
        }];
        this.parent_type = [{
          val: "admin",
          'name': 'Admin'
        }, {
          val: "diagnostic_admin",
          'name': 'Diagnostic Admin'
        }, {
          val: "distributors",
          'name': 'Distributor'
        }, {
          val: "doctor_group",
          'name': 'Doctor Group'
        }];
        this.report_type = [{
          val: "RM-3A",
          'name': 'RM-3A'
        }, {
          val: "TM FLOW V3",
          'name': 'TM FLOW V3'
        }, {
          val: "TM FLOW V4",
          'name': 'TM FLOW V4'
        }, {
          val: "CMAT with BP Cuffs",
          'name': "CMAT with BP Cuffs"
        }];
        this.SearchingEndpoint = "datalist";
        this.authval = [];
        this.docofficeval = [];
        this.techval = [];
        this.parentnameval = [];
        this.doctorcity = [];
        this.doctorstate = [];
        this.patientcity = [];
        this.patientstate = [];
        this.SearchingSourceName = "data_biller_list";
        this.search_settings = {
          selectsearch: [{
            label: 'Search By Report Type',
            field: 'report_file_type',
            values: this.report_type
          }, {
            label: "Search By Status",
            field: 'status_text',
            values: this.status_search
          }, {
            label: "Search By Doctor",
            field: 'doc_name_search',
            values: this.authval
          }, {
            label: "Search By Doctor Office",
            field: 'doctor_ofiice_name_search',
            values: this.docofficeval
          }, {
            label: "Search By Doctor City",
            field: 'doctor_city_search',
            values: this.doctorcity
          }, {
            label: "Search By Doctor State",
            field: 'doctor_state_search',
            values: this.doctorstate
          }, {
            label: "Search By Patient City",
            field: 'patient_state_search',
            values: this.patientcity
          }, {
            label: "Search By Patient State",
            field: 'patient_city_search',
            values: this.patientstate
          }],
          datesearch: [{
            startdatelabel: "Start Date",
            enddatelabel: "End Date",
            submit: "Search",
            field: "created_at_datetime"
          }],
          textsearch: [{
            label: "Search By Patient Name",
            field: 'patient_name_search'
          }],
          search: [{
            label: 'Search By CPT Codes',
            field: 'cpt_codes_search',
            values: this.cptcodes
          }]
        }; // lib list end

        this.commonArray = [];
        this.searchJson = {
          doctorName: "",
          patientName: "",
          status: "",
          dateRange: ""
        };
        this.displayedColumns = ['no', 'patientName', 'record_type', 'doctorName', 'techName', 'date_added', 'status', 'created_at'];
        this.allDataColumns = ['no', 'patientName', 'doctorName', 'techName', 'billerName', 'recordType', 'billGenerationData', 'billsendDate', 'status', 'created_at'];
        this.htmlText = {
          headerText: "Patient Report Record"
        };
        this.authData = {};
        var allData = cookie.getAll();
        this.authData["userData"] = JSON.parse(allData.user_details);
        this.authData["jwtToken"] = cookie.get('jwtToken');

        if (this.activatedRoute.snapshot.params._id) {
          this.authData["userData"] = {
            _id: this.activatedRoute.snapshot.params._id
          }; // this.authData["parent_type"] = this.activatedRoute.snapshot.params.parent_type;
        } else {
          console.log('************************');
          this.authData["userData"] = JSON.parse(allData.user_details);
        }

        this.libdata.basecondition.tech_id = this.authData.userData._id;
        /* Get Auth Token */

        this.jwtToken = cookie.get('jwtToken');
        this.activatedRoute.data.forEach(function (data) {
          _this227.allResolveData = data.techDashboardData.data;
          _this227.allResolveData["totalRemainToProcessCount"] = _this227.allResolveData.totalReportCount - _this227.allResolveData.processedReportCount;
          var allDashboardData = _this227.allResolveData.totalReportData;
          _this227.allDataSource = new _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatTableDataSource"](allDashboardData);
        }); // lib list

        var endpoint = 'getPatientlistdata';
        var endpointc = 'getPatientlistdata-count';
        var data = {
          "condition": {
            "limit": 10,
            "skip": 0
          },
          sort: {
            "type": 'desc',
            "field": 'patient_name'
          },
          status: {
            "$gt": 10
          },
          tech_id: this.authData.userData._id
        };
        this.httpService.httpViaPost(endpointc, data).subscribe(function (res) {
          _this227.billerData_count = res.count;
        }, function (error) {
          console.log('Oooops!');
        });
        this.httpService.httpViaPost(endpoint, data).subscribe(function (res) {
          _this227.allBillerData = res.results.res;
        }, function (error) {
          console.log('Oooops!');
        });
      }

      _createClass(TechDashboardComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this228 = this;

          var data = {
            "source": "patient_data_desc_patient_name",
            "condition": {
              status: {
                "$gt": 10
              },
              tech_id_object: this.authData.userData._id
            },
            "token": this.jwtToken
          };
          this.httpService.httpViaPost("datalist", data).subscribe(function (response) {
            var start = false;
            var count = 0;

            for (var i in response.res) {
              if (response.res[i].doc_name_search != "") {
                for (var j in _this228.authval) {
                  if (response.res[i].doc_name == _this228.authval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this228.authval.push({
                    name: response.res[i].doc_name,
                    val: response.res[i].doc_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].tech_name_search != "") {
                for (var j in _this228.techval) {
                  if (response.res[i].tech_namesearch == _this228.techval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this228.techval.push({
                    name: response.res[i].tech_namesearch,
                    val: response.res[i].tech_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].parent_name_search != "") {
                for (var j in _this228.parentnameval) {
                  if (response.res[i].parent_namesearch == _this228.parentnameval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this228.parentnameval.push({
                    name: response.res[i].parent_namesearch,
                    val: response.res[i].parent_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].doctor_state_search != "") {
                for (var j in _this228.doctorstate) {
                  if (response.res[i].doctor_state == _this228.doctorstate[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this228.doctorstate.push({
                    name: response.res[i].doctor_state,
                    val: response.res[i].doctor_state_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].doctor_city_search != "") {
                for (var j in _this228.doctorcity) {
                  if (response.res[i].doctor_city == _this228.doctorcity[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this228.doctorcity.push({
                    name: response.res[i].doctor_city,
                    val: response.res[i].doctor_city_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].patient_city_search != "") {
                for (var j in _this228.patientcity) {
                  if (response.res[i].patient_city == _this228.patientcity[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this228.patientcity.push({
                    name: response.res[i].patient_city,
                    val: response.res[i].patient_city_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].patient_state_search != "") {
                for (var j in _this228.patientstate) {
                  if (response.res[i].patient_state == _this228.patientstate[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this228.patientstate.push({
                    name: response.res[i].patient_state,
                    val: response.res[i].patient_state_search
                  });
                }

                start = false;
                count = 0;
              }
            }

            for (var i in response.res) {
              if (response.res[i].doctor_ofiice_name_search != "") {
                for (var j in _this228.docofficeval) {
                  if (response.res[i].doctor_ofiice_namesearch == _this228.docofficeval[j].name) {
                    start = true;
                  }
                }

                count++;

                if (count == 1 && start == false) {
                  _this228.docofficeval.push({
                    name: response.res[i].doctor_ofiice_namesearch,
                    val: response.res[i].doctor_ofiice_name_search
                  });
                }

                start = false;
                count = 0;
              }
            }
          }, function (error) {
            console.log('Oooops!');
          });
        }
      }, {
        key: "ngAfterViewInit",
        value: function ngAfterViewInit() {
          this.allDataSource.paginator = this.paginatorAll;
        }
      }, {
        key: "viewDetailsData",
        value: function viewDetailsData(flag) {
          var _this229 = this;

          var condition = {};
          this.htmlText.headerText = flag;

          if (this.searchJson.dateRange != '') {
            this.searchJson.dateRange.end = moment(this.searchJson.dateRange.end, "DD-MM-YYYY").add(1, 'days');
          }

          switch (flag) {
            case 'Reports Uploaded':
              condition = {
                "source": "data_pece",
                "search": this.searchJson,
                "condition": {
                  "tech_id": this.authData.userData._id
                },
                "token": this.authData.jwtToken
              };
              break;

            case 'Reports Processed':
              condition = {
                "source": "data_pece",
                "search": this.searchJson,
                "condition": {
                  "tech_id": this.authData.userData._id,
                  "page_1": {
                    $exists: true
                  },
                  "page_2": {
                    $exists: true
                  },
                  "page_3": {
                    $exists: true
                  },
                  "page_4": {
                    $exists: true
                  },
                  "page_5": {
                    $exists: true
                  },
                  "page_6": {
                    $exists: true
                  },
                  "page_7": {
                    $exists: true
                  }
                },
                "token": this.authData.jwtToken
              };
              break;

            case 'Remain Process':
              condition = {
                "source": "data_pece",
                "search": this.searchJson,
                "condition": {
                  "tech_id": this.authData.userData._id,
                  $or: [{
                    "page_1": {
                      $exists: false
                    }
                  }, {
                    "page_2": {
                      $exists: false
                    }
                  }, {
                    "page_3": {
                      $exists: false
                    }
                  }, {
                    "page_4": {
                      $exists: false
                    }
                  }, {
                    "page_5": {
                      $exists: false
                    }
                  }, {
                    "page_6": {
                      $exists: false
                    }
                  }, {
                    "page_7": {
                      $exists: false
                    }
                  }]
                },
                "token": this.authData.jwtToken
              };
              break;

            default:
              condition = {
                "source": "data_pece",
                "search": this.searchJson,
                "condition": {
                  "tech_id": this.authData.userData._id
                },
                "token": this.authData.jwtToken
              };
              break;
          }

          this.httpService.httpViaPost('dashboard-datalist', condition).subscribe(function (response) {
            var allDashboardData = response.data;
            _this229.allDataSource = new _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatTableDataSource"](allDashboardData);
            _this229.allDataSource.paginator = _this229.paginator;
            _this229.allDataSource.sort = _this229.sortAll;
          });
        }
      }, {
        key: "openDialog",
        value: function openDialog(data) {
          var _this230 = this;

          this.dialogRef = this.dialog.open(_common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_10__["DialogBoxComponent"], data);
          this.dialogRef.afterClosed().subscribe(function (result) {
            switch (result) {
              case "Ok":
                _this230.dialogRef.close();

                break;
            }
          });
        }
        /**All doctor deatls view in modal */

      }, {
        key: "allDoctorViewModal",
        value: function allDoctorViewModal() {
          var dialogGenreRef = this.dialog.open(DoctorViewDialogComponent, {
            panelClass: ['modal-sm', 'infomodal'],
            disableClose: true
          });
          dialogGenreRef.afterClosed().subscribe(function (result) {
            console.log('Modal Close');
          });
        }
      }, {
        key: "resetSearch",
        value: function resetSearch() {
          this.searchJson = {
            doctorName: "",
            patientName: "",
            status: "",
            dateRange: ""
          };
          this.viewDetailsData(this.htmlText.headerText);
        }
      }]);

      return TechDashboardComponent;
    }();

    TechDashboardComponent.ctorParameters = function () {
      return [{
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__["HttpServiceService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"]
      }, {
        type: _class_common_common_function__WEBPACK_IMPORTED_MODULE_6__["CommonFunction"]
      }, {
        type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_9__["MatDialog"]
      }];
    };

    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_paginator__WEBPACK_IMPORTED_MODULE_8__["MatPaginator"], {
      "static": false
    })], TechDashboardComponent.prototype, "paginator", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_paginator__WEBPACK_IMPORTED_MODULE_8__["MatPaginator"], {
      "static": false
    })], TechDashboardComponent.prototype, "paginatorAll", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material__WEBPACK_IMPORTED_MODULE_7__["MatSort"], {
      "static": false
    })], TechDashboardComponent.prototype, "sort", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material__WEBPACK_IMPORTED_MODULE_7__["MatSort"], {
      "static": false
    })], TechDashboardComponent.prototype, "sortAll", void 0);
    TechDashboardComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-tech-dashboard',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./tech-dashboard.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/tech/tech-dashboard/tech-dashboard.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./tech-dashboard.component.css */
      "./src/app/components/tech/tech-dashboard/tech-dashboard.component.css"))["default"]]
    })], TechDashboardComponent); // Doctor View dialog component

    var DoctorViewDialogComponent = /*#__PURE__*/function () {
      function DoctorViewDialogComponent(dialogRef, data, cookie, http, httpService) {
        var _this231 = this;

        _classCallCheck(this, DoctorViewDialogComponent);

        this.dialogRef = dialogRef;
        this.data = data;
        this.cookie = cookie;
        this.http = http;
        this.httpService = httpService;
        this.allData = {};
        this.loader = true;
        this.allData = cookie.getAll();
        this.user_data = JSON.parse(this.allData.user_details);
        this.user_token = cookie.get('jwtToken');
        var dta = {
          "source": "data_pece",
          "condition": {
            "tech_id_object": this.user_data._id
          },
          "token": this.user_token
        };
        this.httpService.httpViaPost('datalist', dta).subscribe(function (response) {
          var result = response.res;

          if (response.resc > 0) {
            _this231.loader = false;
            _this231.allDoctorData = response.res;
          }
        });
      }

      _createClass(DoctorViewDialogComponent, [{
        key: "onNoClick",
        value: function onNoClick() {
          this.dialogRef.close();
        }
      }]);

      return DoctorViewDialogComponent;
    }();

    DoctorViewDialogComponent.ctorParameters = function () {
      return [{
        type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_9__["MatDialogRef"]
      }, {
        type: undefined,
        decorators: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
          args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_9__["MAT_DIALOG_DATA"]]
        }]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_4__["HttpServiceService"]
      }];
    };

    DoctorViewDialogComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'doctor-dialog',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./doctorview.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/tech/tech-dashboard/doctorview.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./tech-dashboard.component.css */
      "./src/app/components/tech/tech-dashboard/tech-dashboard.component.css"))["default"]]
    }), tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material_dialog__WEBPACK_IMPORTED_MODULE_9__["MAT_DIALOG_DATA"]))], DoctorViewDialogComponent);
    /***/
  },

  /***/
  "./src/app/components/tech/tech-footer/tech-footer.component.css":
  /*!***********************************************************************!*\
    !*** ./src/app/components/tech/tech-footer/tech-footer.component.css ***!
    \***********************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsTechTechFooterTechFooterComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = ".footer_section{ display: block; border-top: 1px solid #c7c7c7; margin-top: 30px; background: #e0e5eb; padding: 10px; margin: 0;\n    width: 100%; \n    /* z-index: 1; position: fixed; bottom: -100px; transition: all 200ms; */\n   }\n  .footer_section .footer_content{ width: 600px; padding: 0 16px; margin: 0 auto; display: block; text-align: center; }\n  .footer_section .footer_content .link{ margin-top: 10px; display: block; margin-bottom: 6px; }\n  .footer_section .footer_content .link a:nth-of-type(1){ border-right: 1px solid #797979; padding-right: 5px; }\n  .footer_section .footer_content .link a, .footer_section .footer_content p{ font-size: 16px; font-family: \"AvenirLight\"; color: #797979; text-decoration: none;}\n  .footer_content p{ margin: 0; margin-bottom: 5px; }\n  @media screen and (max-width: 668px){\n    .footer_section .footer_content { width: auto; }\n  }\n  \n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy90ZWNoL3RlY2gtZm9vdGVyL3RlY2gtZm9vdGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCLGNBQWMsRUFBRSw2QkFBNkIsRUFBRSxnQkFBZ0IsRUFBRSxtQkFBbUIsRUFBRSxhQUFhLEVBQUUsU0FBUztJQUMzSCxXQUFXO0lBQ1gsd0VBQXdFO0dBQ3pFO0VBQ0QsaUNBQWlDLFlBQVksRUFBRSxlQUFlLEVBQUUsY0FBYyxFQUFFLGNBQWMsRUFBRSxrQkFBa0IsRUFBRTtFQUNwSCx1Q0FBdUMsZ0JBQWdCLEVBQUUsY0FBYyxFQUFFLGtCQUFrQixFQUFFO0VBQzdGLHdEQUF3RCwrQkFBK0IsRUFBRSxrQkFBa0IsRUFBRTtFQUM3Ryw0RUFBNEUsZUFBZSxFQUFFLDBCQUEwQixFQUFFLGNBQWMsRUFBRSxxQkFBcUIsQ0FBQztFQUMvSixtQkFBbUIsU0FBUyxFQUFFLGtCQUFrQixFQUFFO0VBR2xEO0lBQ0Usa0NBQWtDLFdBQVcsRUFBRTtFQUNqRCIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdGVjaC90ZWNoLWZvb3Rlci90ZWNoLWZvb3Rlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvb3Rlcl9zZWN0aW9ueyBkaXNwbGF5OiBibG9jazsgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNjN2M3Yzc7IG1hcmdpbi10b3A6IDMwcHg7IGJhY2tncm91bmQ6ICNlMGU1ZWI7IHBhZGRpbmc6IDEwcHg7IG1hcmdpbjogMDtcbiAgICB3aWR0aDogMTAwJTsgXG4gICAgLyogei1pbmRleDogMTsgcG9zaXRpb246IGZpeGVkOyBib3R0b206IC0xMDBweDsgdHJhbnNpdGlvbjogYWxsIDIwMG1zOyAqL1xuICAgfVxuICAuZm9vdGVyX3NlY3Rpb24gLmZvb3Rlcl9jb250ZW50eyB3aWR0aDogNjAwcHg7IHBhZGRpbmc6IDAgMTZweDsgbWFyZ2luOiAwIGF1dG87IGRpc3BsYXk6IGJsb2NrOyB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgLmZvb3Rlcl9zZWN0aW9uIC5mb290ZXJfY29udGVudCAubGlua3sgbWFyZ2luLXRvcDogMTBweDsgZGlzcGxheTogYmxvY2s7IG1hcmdpbi1ib3R0b206IDZweDsgfVxuICAuZm9vdGVyX3NlY3Rpb24gLmZvb3Rlcl9jb250ZW50IC5saW5rIGE6bnRoLW9mLXR5cGUoMSl7IGJvcmRlci1yaWdodDogMXB4IHNvbGlkICM3OTc5Nzk7IHBhZGRpbmctcmlnaHQ6IDVweDsgfVxuICAuZm9vdGVyX3NlY3Rpb24gLmZvb3Rlcl9jb250ZW50IC5saW5rIGEsIC5mb290ZXJfc2VjdGlvbiAuZm9vdGVyX2NvbnRlbnQgcHsgZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogXCJBdmVuaXJMaWdodFwiOyBjb2xvcjogIzc5Nzk3OTsgdGV4dC1kZWNvcmF0aW9uOiBub25lO31cbiAgLmZvb3Rlcl9jb250ZW50IHB7IG1hcmdpbjogMDsgbWFyZ2luLWJvdHRvbTogNXB4OyB9XG4gXG4gICBcbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjY4cHgpe1xuICAgIC5mb290ZXJfc2VjdGlvbiAuZm9vdGVyX2NvbnRlbnQgeyB3aWR0aDogYXV0bzsgfVxuICB9XG4gICJdfQ== */";
    /***/
  },

  /***/
  "./src/app/components/tech/tech-footer/tech-footer.component.ts":
  /*!**********************************************************************!*\
    !*** ./src/app/components/tech/tech-footer/tech-footer.component.ts ***!
    \**********************************************************************/

  /*! exports provided: TechFooterComponent */

  /***/
  function srcAppComponentsTechTechFooterTechFooterComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TechFooterComponent", function () {
      return TechFooterComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");

    var TechFooterComponent = /*#__PURE__*/function () {
      function TechFooterComponent() {
        _classCallCheck(this, TechFooterComponent);

        this.htmlData = {};
        this.htmlData["year"] = new Date().getFullYear();
      }

      _createClass(TechFooterComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }]);

      return TechFooterComponent;
    }();

    TechFooterComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-tech-footer',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./tech-footer.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/tech/tech-footer/tech-footer.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./tech-footer.component.css */
      "./src/app/components/tech/tech-footer/tech-footer.component.css"))["default"]]
    })], TechFooterComponent);
    /***/
  },

  /***/
  "./src/app/components/tech/tech-header/tech-header.component.css":
  /*!***********************************************************************!*\
    !*** ./src/app/components/tech/tech-header/tech-header.component.css ***!
    \***********************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsTechTechHeaderTechHeaderComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "/* header css */\n\n.techdashboard_header { height: auto; padding: 0; background: #fff; box-shadow: 0px 2px 7px 2px #b7b7b7; margin: 20px 0; }\n\n.techdashboard_header .header_wrapper{ width: 1400px; margin: 0 auto; display: flex; align-items: center; justify-content: space-between;}\n\n.techdashboard_header .logo_wrapper { max-width: 160px; display: block; cursor: pointer; flex: none; }\n\n.techdashboard_header .logo_wrapper:focus { outline: none; border: none; }\n\n.techdashboard_header .logo_wrapper img { max-width: 100%; vertical-align: middle; }\n\n.techdashboard_header .quotation { margin-bottom: 0px; }\n\n.techdashboard_header .quotation p { font-family: \"RobotoMedium\"; font-size: 30px; color: #002035; text-transform: uppercase; margin: 0; }\n\n.techdashboard_header .profile_section button { padding-top: 8px; }\n\n.techdashboard_header .profile_section {  display: flex;  border-left: 1px solid #ada9a9;  padding-left: 5px;  margin-bottom: 0;  justify-content: center;  align-items: center; }\n\n.techdashboard_header .profile_section .username { padding-right: 10px;\n  display: block;\n  font-family: \"AvenirRoman\";\n  font-size: 16px;\n  color: #1f1f1f;}\n\n.techdashboard_header .quotation .mat-list-base { display: flex; padding-top: 0; }\n\n/* .techdashboard_header .quotation .mat-list-base .mat-list-item:before {\n  content: \"\";\n  left: -15px;\n  width: 2px;\n  height: 15px;\n  background: #1c1c1c;\n  display: inline-block;\n  position: absolute;\n  top: 35%;\n} */\n\n.techdashboard_header .quotation .mat-nav-list .mat-list-item { margin: 0; position: relative; font-family: \"AvenirMedium\"; font-size: 16px; color: #767676;}\n\n.active { color: #000000!important;  /* border-bottom: 3px solid #fecb00; position: relative; */}\n\n.active::before{ content: ''; width: 100%; height: 4px; background: #fecb00; position: absolute; bottom: -25px; }\n\n/*End header css */\n\n.togle_menu { display: none;}\n\n.sticky { position: fixed; top: 0; margin: 0; z-index: 1; }\n\n@media screen and (max-width: 1540px) {\n  .techdashboard_header .header_wrapper { width: 90%; }\n\n}\n\n@media screen and (max-width: 1500px) {\n  .techdashboard_header .quotation .mat-nav-list .mat-list-item {\n    margin: 0px;\n    position: relative;\n  }\n  .techdashboard_header .quotation p {\n    font-size: 22px;\n  }\n  .content_wrapper .itemsection {\n    padding-bottom: 36px;\n  }\n  .techdashboard_header .logo_wrapper { max-width: 120px; }\n  .active::before { bottom: -13px; }\n}\n\n@media screen and (max-width: 1440px) {\n  .content_wrapper .itemsection p {\n    line-height: 26px;\n    font-size: 24px;\n  }\n}\n\n@media screen and (max-width: 1400px) {\n  .techdashboard_header .header_wrapper {width: 95%; }\n}\n\n@media screen and (max-width: 1366px) {\n  .techdashboard_header .quotation .mat-nav-list .mat-list-item { margin: 0; }\n  .techdashboard_header .quotation .mat-nav-list .mat-list-item{ margin: 0; }\n  .techdashboard_header .profile_section .username { font-size: 14px; }\n}\n\n@media screen and (max-width: 1280px) {\n  .techdashboard_header .profile_section { padding-left: 8px; }\n  .techdashboard_header .quotation .mat-nav-list .mat-list-item .mat-list-base .mat-list-item .mat-list-item-content {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    box-sizing: border-box;\n    padding: 0 10px;\n    position: relative;\n    height: inherit;\n  }\n}\n\n@media screen and (max-width: 1240px) {\n  .doctor_content_wrapper { background: #012035; }\n  .techdashboard_header .quotation .mat-nav-list .mat-list-item { font-size: 14px; }\n}\n\n@media screen and (max-width: 1199px) {\n  .doctor_content_wrapper .table_structure { width: 100%; }\n  .patient_report_section .button_action { width: 970px; }\n    .patient_report_section .button_action button { width: 475px; font-size: 20px;  padding: 8px; }\n  .content_wrapper {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n    flex-wrap: wrap;\n  }\n  .content_wrapper .itemsection {\n    width: 31%;\n    margin: 15px 12px;\n  }\n  .doctor_content_wrapper {\n    padding: 40px 30px;\n  }\n  .doctor_content_wrapper .mat-card-title {\n    font-size: 36px;\n    margin-bottom: 20px;\n  }\n  .table_structure .mat-list-item .title_n {\n    font-size: 26px;\n  }\n  .table_structure .mat-list-item .title_a {\n    font-size: 22px;\n  }\n  .content_wrapper .itemsection p {\n    width: 100%;\n    font-size: 22px;\n  }\n  .techdashboard_header {\n    height: auto;\n    flex-direction: column;\n  }\n\n}\n\n@media screen and (max-width: 1100px) {\n  .techdashboard_header .header_wrapper { width: 100%; flex-direction: column;   box-sizing: border-box; }\n  .techdashboard_header .logo_wrapper { max-width: 160px; }\n  .techdashboard_header .quotation .mat-nav-list .mat-list-item { font-size: 16px; }\n  .techdashboard_header .profile_section { padding-left: 0; border: none; }\n  .techdashboard_header .profile_section .username { font-size: 16px; }\n  .active {\n    color: #000000!important;\n    border-bottom: 3px solid #fecb00; position: relative;\n  }\n  .active::before{\n    content: ''; display: none;}\n}\n\n@media screen and (max-width: 1080px) {\n  .doctor_content_wrapper {\n    padding: 40px 20px;\n  }\n  .doctor_content_wrapper .mat-card-title {\n    font-size: 32px;\n    margin-bottom: 20px;\n  }\n  .table_structure .mat-list-item .title_n {\n    font-size: 22px;\n  }\n  .table_structure .mat-list-item .title_a {\n    font-size: 20px;\n  }\n}\n\n@media screen and (max-width: 1038px) {\n  .content_wrapper .itemsection {\n    width: 30.9%;\n  }\n}\n\n@media screen and (max-width: 991px) {\n  .doctor_content_wrapper {\n    text-align: center;\n  }\n  .patient_report_section .patient_top_search {\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n  }\n  .patient_report_section .patient_top_search .search_bar {\n    margin-bottom: 20px;\n  }\n  .patient_report_section .button_action button {\n    padding: 8px 30px;\n    margin: 0 10px;\n    width: 100%;\n  }\n  .patient_report_section .button_action {\n    width: auto;\n    margin: 0 5px;\n    display: flex;\n    justify-content: center;\n  }\n  .content_wrapper .itemsection {\n    width: 30.8%;\n  }\n  .table_structure .mat-list-item .title_a {\n    font-size: 16px;\n  }\n  .togle_menu { display: block; margin-top: 10px; background: #f8c655; color: #fff; position: absolute; right: 20px; min-width: auto; }\n  .techdashboard_header .quotation { display: none; width: 100%; background: #ffd06f;}\n  .techdashboard_header .quotation .mat-list-base { display: block; }\n  .techdashboard_header .quotation .mat-nav-list .mat-list-item { margin: 0;\n    align-items: center;\n    justify-content: center;\n    display: flex;\n    background: #fff3da;\n    margin: 1px 0;\n  }\n  .techdashboard_header .quotation .mat-nav-list .mat-list-item:nth-child(1) { margin-top: 0; }\n  .techdashboard_header .quotation .mat-list-base .mat-list-item:before {\n    content: \"\";\n    left: -15px;\n    width: 2px;\n    height: 15px;\n    background: #1c1c1c;\n    display: inline-block;\n    position: absolute;\n    top: 35%;\n    display: none;\n  }\n}\n\n@media screen and (max-width: 970px) {\n  .patient_report_section .button_action button {\n    width: auto;\n  }\n  .table_structure .mat-list-item .title_n {\n    font-size: 18px;\n  }\n  .one {\n    background: linear-gradient(100deg, #f9c856, #dd671d);\n  }\n  .two {\n    background: linear-gradient(100deg, #0973d1, #05335a);\n  }\n  .three {\n    background: linear-gradient(100deg, #44cf80, #26a555);\n  }\n}\n\n@media screen and (max-width: 950px) {\n  .content_wrapper .itemsection {\n    width: 30.8%;\n  }\n  .content_wrapper .itemsection p {\n    font-size: 20px;\n  }\n  .table_structure .mat-list-base .mat-list-item, .mat-list-base .mat-list-option {\n    margin-bottom: 16px;\n  }\n}\n\n@media screen and (max-width: 850px) {\n  .content_wrapper .itemsection {\n    width: 30.2%;\n  }\n  /* hiding searchbar */\n  .patient_report_section .patient_top_search .search_bar {\n    margin-bottom: 20px;\n    display: none;\n  }\n  .techdashboard_header {\n    padding: 0 16px;\n    flex-direction: column;\n  }\n}\n\n@media screen and (max-width: 768px) {\n  .content_wrapper .itemsection {\n    width: 100%;\n    margin: 16px;\n    margin-bottom: 0;\n  }\n  .content_wrapper .itemsection:nth-last-child(1) {\n    margin-bottom: 16px;\n  }\n  .patient_report_section .button_action {\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n  }\n  .patient_report_section .button_action button {\n    margin-bottom: 16px;\n    word-break: break-word;\n    white-space: normal;\n    line-height: 22px;\n  }\n  .techdashboard_header {\n    padding: 0 16px;\n  }\n  .techdashboard_header .quotation p {\n    margin: 16px 0;\n  }\n  .doctor_content_wrapper {\n    padding: 20px 0px;\n  }\n  .table_structure .mat-list-item .title_a {\n    font-size: 14px;\n  }\n  .doctor_content_wrapper .mat-card-title {\n    font-size: 28px;\n    margin-bottom: 5px;\n    text-align: left;\n    padding: 0 16px;\n  }\n  .table_structure .mat-list-base .mat-list-item, .mat-list-base .mat-list-option {\n    margin-bottom: 16px;\n  }\n  .footer_section .footer_content {\n    width: auto;\n  }\n  .table_structure .mat-list-base .mat-list-item, .mat-list-base .mat-list-option {\n    display: flex;\n    text-align: left;\n  }\n}\n\n@media screen and (max-width: 480px) {\n  .doctor_content_wrapper .mat-card-title {\n    font-size: 24px;\n  }\n  .patient_report_section .patient_top_search h1 {\n    font-size: 24px;\n  }\n}\n\n.danger {\n  display: block!important;\n  margin-top: 20px;\n  transition: 5px ease-out;\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy90ZWNoL3RlY2gtaGVhZGVyL3RlY2gtaGVhZGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZUFBZTs7QUFFZix3QkFBd0IsWUFBWSxFQUFFLFVBQVUsRUFBRSxnQkFBZ0IsRUFBRSxtQ0FBbUMsRUFBRSxjQUFjLEVBQUU7O0FBQ3pILHVDQUF1QyxhQUFhLEVBQUUsY0FBYyxFQUFFLGFBQWEsRUFBRSxtQkFBbUIsRUFBRSw4QkFBOEIsQ0FBQzs7QUFDekksc0NBQXNDLGdCQUFnQixFQUFFLGNBQWMsRUFBRSxlQUFlLEVBQUUsVUFBVSxFQUFFOztBQUNyRyw0Q0FBNEMsYUFBYSxFQUFFLFlBQVksRUFBRTs7QUFDekUsMENBQTBDLGVBQWUsRUFBRSxzQkFBc0IsRUFBRTs7QUFDbkYsbUNBQW1DLGtCQUFrQixFQUFFOztBQUN2RCxxQ0FBcUMsMkJBQTJCLEVBQUUsZUFBZSxFQUFFLGNBQWMsRUFBRSx5QkFBeUIsRUFBRSxTQUFTLEVBQUU7O0FBQ3pJLGdEQUFnRCxnQkFBZ0IsRUFBRTs7QUFDbEUsMENBQXVGLGFBQWEsR0FBRyw4QkFBOEIsR0FBRyxpQkFBaUIsR0FBRyxnQkFBZ0IsR0FDdkgsdUJBQXVCLEdBQXdELG1CQUFtQixFQUFFOztBQUN6SixtREFBbUQsbUJBQW1CO0VBQ3BFLGNBQWM7RUFDZCwwQkFBMEI7RUFDMUIsZUFBZTtFQUNmLGNBQWMsQ0FBQzs7QUFFakIsa0RBQThGLGFBQWEsRUFBRSxjQUFjLEVBQUU7O0FBRTdIOzs7Ozs7Ozs7R0FTRzs7QUFDSCxnRUFBZ0UsU0FBUyxFQUFFLGtCQUFrQixFQUFFLDJCQUEyQixFQUFFLGVBQWUsRUFBRSxjQUFjLENBQUM7O0FBRTVKLFVBQVUsd0JBQXdCLEdBQUcsMERBQTBELENBQUM7O0FBQ2hHLGlCQUFpQixXQUFXLEVBQUUsV0FBVyxFQUFFLFdBQVcsRUFBRSxtQkFBbUIsRUFBRSxrQkFBa0IsRUFBRSxhQUFhLEVBQUU7O0FBR2hILGtCQUFrQjs7QUFDbEIsY0FBYyxhQUFhLENBQUM7O0FBQzVCLFVBQVUsZUFBZSxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFOztBQUUxRDtFQUNFLHdDQUF3QyxVQUFVLEVBQUU7O0FBRXREOztBQUNBO0VBQ0U7SUFDRSxXQUFXO0lBQ1gsa0JBQWtCO0VBQ3BCO0VBQ0E7SUFDRSxlQUFlO0VBQ2pCO0VBQ0E7SUFDRSxvQkFBb0I7RUFDdEI7RUFDQSxzQ0FBc0MsZ0JBQWdCLEVBQUU7RUFDeEQsa0JBQWtCLGFBQWEsRUFBRTtBQUNuQzs7QUFFQTtFQUNFO0lBQ0UsaUJBQWlCO0lBQ2pCLGVBQWU7RUFDakI7QUFDRjs7QUFFQTtFQUNFLHVDQUF1QyxVQUFVLEVBQUU7QUFDckQ7O0FBRUE7RUFDRSxnRUFBZ0UsU0FBUyxFQUFFO0VBQzNFLCtEQUErRCxTQUFTLEVBQUU7RUFDMUUsbURBQW1ELGVBQWUsRUFBRTtBQUN0RTs7QUFFQTtFQUNFLHlDQUF5QyxpQkFBaUIsRUFBRTtFQUM1RDtJQUdFLGFBQWE7SUFJYixtQkFBbUI7SUFHbkIsbUJBQW1CO0lBRW5CLHNCQUFzQjtJQUN0QixlQUFlO0lBQ2Ysa0JBQWtCO0lBQ2xCLGVBQWU7RUFDakI7QUFDRjs7QUFFQTtFQUNFLDBCQUEwQixtQkFBbUIsRUFBRTtFQUMvQyxnRUFBZ0UsZUFBZSxFQUFFO0FBQ25GOztBQUVBO0VBQ0UsMkNBQTJDLFdBQVcsRUFBRTtFQUN4RCx5Q0FBeUMsWUFBWSxFQUFFO0lBQ3JELGdEQUFnRCxZQUFZLEVBQUUsZUFBZSxHQUFHLFlBQVksRUFBRTtFQUNoRztJQUdFLGFBQWE7SUFHYix1QkFBdUI7SUFHdkIsbUJBQW1CO0lBQ25CLGtCQUFrQjtJQUVsQixlQUFlO0VBQ2pCO0VBQ0E7SUFDRSxVQUFVO0lBQ1YsaUJBQWlCO0VBQ25CO0VBQ0E7SUFDRSxrQkFBa0I7RUFDcEI7RUFDQTtJQUNFLGVBQWU7SUFDZixtQkFBbUI7RUFDckI7RUFDQTtJQUNFLGVBQWU7RUFDakI7RUFDQTtJQUNFLGVBQWU7RUFDakI7RUFDQTtJQUNFLFdBQVc7SUFDWCxlQUFlO0VBQ2pCO0VBQ0E7SUFDRSxZQUFZO0lBSVosc0JBQXNCO0VBQ3hCOztBQUVGOztBQUVBO0VBQ0Usd0NBQXdDLFdBQVcsRUFBRSxzQkFBc0IsSUFBSSxzQkFBc0IsRUFBRTtFQUN2RyxzQ0FBc0MsZ0JBQWdCLEVBQUU7RUFDeEQsZ0VBQWdFLGVBQWUsRUFBRTtFQUNqRix5Q0FBeUMsZUFBZSxFQUFFLFlBQVksRUFBRTtFQUN4RSxtREFBbUQsZUFBZSxFQUFFO0VBQ3BFO0lBQ0Usd0JBQXdCO0lBQ3hCLGdDQUFnQyxFQUFFLGtCQUFrQjtFQUN0RDtFQUNBO0lBQ0UsV0FBVyxFQUFFLGFBQWEsQ0FBQztBQUMvQjs7QUFDQTtFQUNFO0lBQ0Usa0JBQWtCO0VBQ3BCO0VBQ0E7SUFDRSxlQUFlO0lBQ2YsbUJBQW1CO0VBQ3JCO0VBQ0E7SUFDRSxlQUFlO0VBQ2pCO0VBQ0E7SUFDRSxlQUFlO0VBQ2pCO0FBQ0Y7O0FBRUE7RUFDRTtJQUNFLFlBQVk7RUFDZDtBQUNGOztBQUVBO0VBQ0U7SUFDRSxrQkFBa0I7RUFDcEI7RUFDQTtJQUdFLGFBQWE7SUFHYixtQkFBbUI7SUFJbkIsc0JBQXNCO0VBQ3hCO0VBQ0E7SUFDRSxtQkFBbUI7RUFDckI7RUFDQTtJQUNFLGlCQUFpQjtJQUNqQixjQUFjO0lBQ2QsV0FBVztFQUNiO0VBQ0E7SUFDRSxXQUFXO0lBQ1gsYUFBYTtJQUdiLGFBQWE7SUFHYix1QkFBdUI7RUFDekI7RUFDQTtJQUNFLFlBQVk7RUFDZDtFQUNBO0lBQ0UsZUFBZTtFQUNqQjtFQUNBLGNBQWMsY0FBYyxFQUFFLGdCQUFnQixFQUFFLG1CQUFtQixFQUFFLFdBQVcsRUFBRSxrQkFBa0IsRUFBRSxXQUFXLEVBQUUsZUFBZSxFQUFFO0VBQ3BJLG1DQUFtQyxhQUFhLEVBQUUsV0FBVyxFQUFFLG1CQUFtQixDQUFDO0VBQ25GLGtEQUFrRCxjQUFjLEVBQUU7RUFDbEUsZ0VBQWdFLFNBQVM7SUFDdkUsbUJBQW1CO0lBR25CLHVCQUF1QjtJQUd2QixhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLGFBQWE7RUFDZjtFQUNBLDZFQUE2RSxhQUFhLEVBQUU7RUFDNUY7SUFDRSxXQUFXO0lBQ1gsV0FBVztJQUNYLFVBQVU7SUFDVixZQUFZO0lBQ1osbUJBQW1CO0lBQ25CLHFCQUFxQjtJQUNyQixrQkFBa0I7SUFDbEIsUUFBUTtJQUNSLGFBQWE7RUFDZjtBQUNGOztBQUVBO0VBQ0U7SUFDRSxXQUFXO0VBQ2I7RUFDQTtJQUNFLGVBQWU7RUFDakI7RUFDQTtJQUNFLHFEQUFxRDtFQUN2RDtFQUNBO0lBQ0UscURBQXFEO0VBQ3ZEO0VBQ0E7SUFDRSxxREFBcUQ7RUFDdkQ7QUFDRjs7QUFFQTtFQUNFO0lBQ0UsWUFBWTtFQUNkO0VBQ0E7SUFDRSxlQUFlO0VBQ2pCO0VBQ0E7SUFDRSxtQkFBbUI7RUFDckI7QUFDRjs7QUFFQTtFQUNFO0lBQ0UsWUFBWTtFQUNkO0VBQ0EscUJBQXFCO0VBQ3JCO0lBQ0UsbUJBQW1CO0lBQ25CLGFBQWE7RUFDZjtFQUNBO0lBQ0UsZUFBZTtJQUlmLHNCQUFzQjtFQUN4QjtBQUNGOztBQUVBO0VBQ0U7SUFDRSxXQUFXO0lBQ1gsWUFBWTtJQUNaLGdCQUFnQjtFQUNsQjtFQUNBO0lBQ0UsbUJBQW1CO0VBQ3JCO0VBQ0E7SUFHRSxhQUFhO0lBR2IsdUJBQXVCO0lBSXZCLHNCQUFzQjtFQUN4QjtFQUNBO0lBQ0UsbUJBQW1CO0lBQ25CLHNCQUFzQjtJQUN0QixtQkFBbUI7SUFDbkIsaUJBQWlCO0VBQ25CO0VBQ0E7SUFDRSxlQUFlO0VBQ2pCO0VBQ0E7SUFDRSxjQUFjO0VBQ2hCO0VBQ0E7SUFDRSxpQkFBaUI7RUFDbkI7RUFDQTtJQUNFLGVBQWU7RUFDakI7RUFDQTtJQUNFLGVBQWU7SUFDZixrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCLGVBQWU7RUFDakI7RUFDQTtJQUNFLG1CQUFtQjtFQUNyQjtFQUNBO0lBQ0UsV0FBVztFQUNiO0VBQ0E7SUFHRSxhQUFhO0lBQ2IsZ0JBQWdCO0VBQ2xCO0FBQ0Y7O0FBRUE7RUFDRTtJQUNFLGVBQWU7RUFDakI7RUFDQTtJQUNFLGVBQWU7RUFDakI7QUFDRjs7QUFFQTtFQUNFLHdCQUF3QjtFQUN4QixnQkFBZ0I7RUFDaEIsd0JBQXdCO0FBQzFCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy90ZWNoL3RlY2gtaGVhZGVyL3RlY2gtaGVhZGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBoZWFkZXIgY3NzICovXG5cbi50ZWNoZGFzaGJvYXJkX2hlYWRlciB7IGhlaWdodDogYXV0bzsgcGFkZGluZzogMDsgYmFja2dyb3VuZDogI2ZmZjsgYm94LXNoYWRvdzogMHB4IDJweCA3cHggMnB4ICNiN2I3Yjc7IG1hcmdpbjogMjBweCAwOyB9XG4udGVjaGRhc2hib2FyZF9oZWFkZXIgLmhlYWRlcl93cmFwcGVyeyB3aWR0aDogMTQwMHB4OyBtYXJnaW46IDAgYXV0bzsgZGlzcGxheTogZmxleDsgYWxpZ24taXRlbXM6IGNlbnRlcjsganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO31cbi50ZWNoZGFzaGJvYXJkX2hlYWRlciAubG9nb193cmFwcGVyIHsgbWF4LXdpZHRoOiAxNjBweDsgZGlzcGxheTogYmxvY2s7IGN1cnNvcjogcG9pbnRlcjsgZmxleDogbm9uZTsgfVxuLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5sb2dvX3dyYXBwZXI6Zm9jdXMgeyBvdXRsaW5lOiBub25lOyBib3JkZXI6IG5vbmU7IH1cbi50ZWNoZGFzaGJvYXJkX2hlYWRlciAubG9nb193cmFwcGVyIGltZyB7IG1heC13aWR0aDogMTAwJTsgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgfVxuLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5xdW90YXRpb24geyBtYXJnaW4tYm90dG9tOiAwcHg7IH1cbi50ZWNoZGFzaGJvYXJkX2hlYWRlciAucXVvdGF0aW9uIHAgeyBmb250LWZhbWlseTogXCJSb2JvdG9NZWRpdW1cIjsgZm9udC1zaXplOiAzMHB4OyBjb2xvcjogIzAwMjAzNTsgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgbWFyZ2luOiAwOyB9XG4udGVjaGRhc2hib2FyZF9oZWFkZXIgLnByb2ZpbGVfc2VjdGlvbiBidXR0b24geyBwYWRkaW5nLXRvcDogOHB4OyB9XG4udGVjaGRhc2hib2FyZF9oZWFkZXIgLnByb2ZpbGVfc2VjdGlvbiB7IGRpc3BsYXk6IC13ZWJraXQtYm94OyAgZGlzcGxheTogLW1zLWZsZXhib3g7ICBkaXNwbGF5OiBmbGV4OyAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjYWRhOWE5OyAgcGFkZGluZy1sZWZ0OiA1cHg7ICBtYXJnaW4tYm90dG9tOiAwO1xuICAtd2Via2l0LWJveC1wYWNrOiBjZW50ZXI7ICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7ICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7ICAtbXMtZmxleC1hbGlnbjogY2VudGVyOyAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5wcm9maWxlX3NlY3Rpb24gLnVzZXJuYW1lIHsgcGFkZGluZy1yaWdodDogMTBweDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtZmFtaWx5OiBcIkF2ZW5pclJvbWFuXCI7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgY29sb3I6ICMxZjFmMWY7fVxuXG4udGVjaGRhc2hib2FyZF9oZWFkZXIgLnF1b3RhdGlvbiAubWF0LWxpc3QtYmFzZSB7IGRpc3BsYXk6IC13ZWJraXQtYm94OyBkaXNwbGF5OiAtbXMtZmxleGJveDsgZGlzcGxheTogZmxleDsgcGFkZGluZy10b3A6IDA7IH1cblxuLyogLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5xdW90YXRpb24gLm1hdC1saXN0LWJhc2UgLm1hdC1saXN0LWl0ZW06YmVmb3JlIHtcbiAgY29udGVudDogXCJcIjtcbiAgbGVmdDogLTE1cHg7XG4gIHdpZHRoOiAycHg7XG4gIGhlaWdodDogMTVweDtcbiAgYmFja2dyb3VuZDogIzFjMWMxYztcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMzUlO1xufSAqL1xuLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5xdW90YXRpb24gLm1hdC1uYXYtbGlzdCAubWF0LWxpc3QtaXRlbSB7IG1hcmdpbjogMDsgcG9zaXRpb246IHJlbGF0aXZlOyBmb250LWZhbWlseTogXCJBdmVuaXJNZWRpdW1cIjsgZm9udC1zaXplOiAxNnB4OyBjb2xvcjogIzc2NzY3Njt9XG5cbi5hY3RpdmUgeyBjb2xvcjogIzAwMDAwMCFpbXBvcnRhbnQ7ICAvKiBib3JkZXItYm90dG9tOiAzcHggc29saWQgI2ZlY2IwMDsgcG9zaXRpb246IHJlbGF0aXZlOyAqL31cbi5hY3RpdmU6OmJlZm9yZXsgY29udGVudDogJyc7IHdpZHRoOiAxMDAlOyBoZWlnaHQ6IDRweDsgYmFja2dyb3VuZDogI2ZlY2IwMDsgcG9zaXRpb246IGFic29sdXRlOyBib3R0b206IC0yNXB4OyB9XG5cblxuLypFbmQgaGVhZGVyIGNzcyAqL1xuLnRvZ2xlX21lbnUgeyBkaXNwbGF5OiBub25lO31cbi5zdGlja3kgeyBwb3NpdGlvbjogZml4ZWQ7IHRvcDogMDsgbWFyZ2luOiAwOyB6LWluZGV4OiAxOyB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDE1NDBweCkge1xuICAudGVjaGRhc2hib2FyZF9oZWFkZXIgLmhlYWRlcl93cmFwcGVyIHsgd2lkdGg6IDkwJTsgfVxuXG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxNTAwcHgpIHtcbiAgLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5xdW90YXRpb24gLm1hdC1uYXYtbGlzdCAubWF0LWxpc3QtaXRlbSB7XG4gICAgbWFyZ2luOiAwcHg7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB9XG4gIC50ZWNoZGFzaGJvYXJkX2hlYWRlciAucXVvdGF0aW9uIHAge1xuICAgIGZvbnQtc2l6ZTogMjJweDtcbiAgfVxuICAuY29udGVudF93cmFwcGVyIC5pdGVtc2VjdGlvbiB7XG4gICAgcGFkZGluZy1ib3R0b206IDM2cHg7XG4gIH1cbiAgLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5sb2dvX3dyYXBwZXIgeyBtYXgtd2lkdGg6IDEyMHB4OyB9XG4gIC5hY3RpdmU6OmJlZm9yZSB7IGJvdHRvbTogLTEzcHg7IH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTQ0MHB4KSB7XG4gIC5jb250ZW50X3dyYXBwZXIgLml0ZW1zZWN0aW9uIHAge1xuICAgIGxpbmUtaGVpZ2h0OiAyNnB4O1xuICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxNDAwcHgpIHtcbiAgLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5oZWFkZXJfd3JhcHBlciB7d2lkdGg6IDk1JTsgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMzY2cHgpIHtcbiAgLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5xdW90YXRpb24gLm1hdC1uYXYtbGlzdCAubWF0LWxpc3QtaXRlbSB7IG1hcmdpbjogMDsgfVxuICAudGVjaGRhc2hib2FyZF9oZWFkZXIgLnF1b3RhdGlvbiAubWF0LW5hdi1saXN0IC5tYXQtbGlzdC1pdGVteyBtYXJnaW46IDA7IH1cbiAgLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5wcm9maWxlX3NlY3Rpb24gLnVzZXJuYW1lIHsgZm9udC1zaXplOiAxNHB4OyB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEyODBweCkge1xuICAudGVjaGRhc2hib2FyZF9oZWFkZXIgLnByb2ZpbGVfc2VjdGlvbiB7IHBhZGRpbmctbGVmdDogOHB4OyB9XG4gIC50ZWNoZGFzaGJvYXJkX2hlYWRlciAucXVvdGF0aW9uIC5tYXQtbmF2LWxpc3QgLm1hdC1saXN0LWl0ZW0gLm1hdC1saXN0LWJhc2UgLm1hdC1saXN0LWl0ZW0gLm1hdC1saXN0LWl0ZW0tY29udGVudCB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IGhvcml6b250YWw7XG4gICAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgLW1zLWZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xuICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAtd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICBwYWRkaW5nOiAwIDEwcHg7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGhlaWdodDogaW5oZXJpdDtcbiAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMjQwcHgpIHtcbiAgLmRvY3Rvcl9jb250ZW50X3dyYXBwZXIgeyBiYWNrZ3JvdW5kOiAjMDEyMDM1OyB9XG4gIC50ZWNoZGFzaGJvYXJkX2hlYWRlciAucXVvdGF0aW9uIC5tYXQtbmF2LWxpc3QgLm1hdC1saXN0LWl0ZW0geyBmb250LXNpemU6IDE0cHg7IH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTE5OXB4KSB7XG4gIC5kb2N0b3JfY29udGVudF93cmFwcGVyIC50YWJsZV9zdHJ1Y3R1cmUgeyB3aWR0aDogMTAwJTsgfVxuICAucGF0aWVudF9yZXBvcnRfc2VjdGlvbiAuYnV0dG9uX2FjdGlvbiB7IHdpZHRoOiA5NzBweDsgfVxuICAgIC5wYXRpZW50X3JlcG9ydF9zZWN0aW9uIC5idXR0b25fYWN0aW9uIGJ1dHRvbiB7IHdpZHRoOiA0NzVweDsgZm9udC1zaXplOiAyMHB4OyAgcGFkZGluZzogOHB4OyB9XG4gIC5jb250ZW50X3dyYXBwZXIge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLXdlYmtpdC1ib3gtcGFjazogY2VudGVyO1xuICAgIC1tcy1mbGV4LXBhY2s6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xuICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgLW1zLWZsZXgtd3JhcDogd3JhcDtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gIH1cbiAgLmNvbnRlbnRfd3JhcHBlciAuaXRlbXNlY3Rpb24ge1xuICAgIHdpZHRoOiAzMSU7XG4gICAgbWFyZ2luOiAxNXB4IDEycHg7XG4gIH1cbiAgLmRvY3Rvcl9jb250ZW50X3dyYXBwZXIge1xuICAgIHBhZGRpbmc6IDQwcHggMzBweDtcbiAgfVxuICAuZG9jdG9yX2NvbnRlbnRfd3JhcHBlciAubWF0LWNhcmQtdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMzZweDtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICB9XG4gIC50YWJsZV9zdHJ1Y3R1cmUgLm1hdC1saXN0LWl0ZW0gLnRpdGxlX24ge1xuICAgIGZvbnQtc2l6ZTogMjZweDtcbiAgfVxuICAudGFibGVfc3RydWN0dXJlIC5tYXQtbGlzdC1pdGVtIC50aXRsZV9hIHtcbiAgICBmb250LXNpemU6IDIycHg7XG4gIH1cbiAgLmNvbnRlbnRfd3JhcHBlciAuaXRlbXNlY3Rpb24gcCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgZm9udC1zaXplOiAyMnB4O1xuICB9XG4gIC50ZWNoZGFzaGJvYXJkX2hlYWRlciB7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XG4gICAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgfVxuXG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDExMDBweCkge1xuICAudGVjaGRhc2hib2FyZF9oZWFkZXIgLmhlYWRlcl93cmFwcGVyIHsgd2lkdGg6IDEwMCU7IGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47ICAgYm94LXNpemluZzogYm9yZGVyLWJveDsgfVxuICAudGVjaGRhc2hib2FyZF9oZWFkZXIgLmxvZ29fd3JhcHBlciB7IG1heC13aWR0aDogMTYwcHg7IH1cbiAgLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5xdW90YXRpb24gLm1hdC1uYXYtbGlzdCAubWF0LWxpc3QtaXRlbSB7IGZvbnQtc2l6ZTogMTZweDsgfVxuICAudGVjaGRhc2hib2FyZF9oZWFkZXIgLnByb2ZpbGVfc2VjdGlvbiB7IHBhZGRpbmctbGVmdDogMDsgYm9yZGVyOiBub25lOyB9XG4gIC50ZWNoZGFzaGJvYXJkX2hlYWRlciAucHJvZmlsZV9zZWN0aW9uIC51c2VybmFtZSB7IGZvbnQtc2l6ZTogMTZweDsgfVxuICAuYWN0aXZlIHtcbiAgICBjb2xvcjogIzAwMDAwMCFpbXBvcnRhbnQ7XG4gICAgYm9yZGVyLWJvdHRvbTogM3B4IHNvbGlkICNmZWNiMDA7IHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuICAuYWN0aXZlOjpiZWZvcmV7XG4gICAgY29udGVudDogJyc7IGRpc3BsYXk6IG5vbmU7fVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTA4MHB4KSB7XG4gIC5kb2N0b3JfY29udGVudF93cmFwcGVyIHtcbiAgICBwYWRkaW5nOiA0MHB4IDIwcHg7XG4gIH1cbiAgLmRvY3Rvcl9jb250ZW50X3dyYXBwZXIgLm1hdC1jYXJkLXRpdGxlIHtcbiAgICBmb250LXNpemU6IDMycHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgfVxuICAudGFibGVfc3RydWN0dXJlIC5tYXQtbGlzdC1pdGVtIC50aXRsZV9uIHtcbiAgICBmb250LXNpemU6IDIycHg7XG4gIH1cbiAgLnRhYmxlX3N0cnVjdHVyZSAubWF0LWxpc3QtaXRlbSAudGl0bGVfYSB7XG4gICAgZm9udC1zaXplOiAyMHB4O1xuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEwMzhweCkge1xuICAuY29udGVudF93cmFwcGVyIC5pdGVtc2VjdGlvbiB7XG4gICAgd2lkdGg6IDMwLjklO1xuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDk5MXB4KSB7XG4gIC5kb2N0b3JfY29udGVudF93cmFwcGVyIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbiAgLnBhdGllbnRfcmVwb3J0X3NlY3Rpb24gLnBhdGllbnRfdG9wX3NlYXJjaCB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xuICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIH1cbiAgLnBhdGllbnRfcmVwb3J0X3NlY3Rpb24gLnBhdGllbnRfdG9wX3NlYXJjaCAuc2VhcmNoX2JhciB7XG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgfVxuICAucGF0aWVudF9yZXBvcnRfc2VjdGlvbiAuYnV0dG9uX2FjdGlvbiBidXR0b24ge1xuICAgIHBhZGRpbmc6IDhweCAzMHB4O1xuICAgIG1hcmdpbjogMCAxMHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIC5wYXRpZW50X3JlcG9ydF9zZWN0aW9uIC5idXR0b25fYWN0aW9uIHtcbiAgICB3aWR0aDogYXV0bztcbiAgICBtYXJnaW46IDAgNXB4O1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLXdlYmtpdC1ib3gtcGFjazogY2VudGVyO1xuICAgIC1tcy1mbGV4LXBhY2s6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgfVxuICAuY29udGVudF93cmFwcGVyIC5pdGVtc2VjdGlvbiB7XG4gICAgd2lkdGg6IDMwLjglO1xuICB9XG4gIC50YWJsZV9zdHJ1Y3R1cmUgLm1hdC1saXN0LWl0ZW0gLnRpdGxlX2Ege1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgfVxuICAudG9nbGVfbWVudSB7IGRpc3BsYXk6IGJsb2NrOyBtYXJnaW4tdG9wOiAxMHB4OyBiYWNrZ3JvdW5kOiAjZjhjNjU1OyBjb2xvcjogI2ZmZjsgcG9zaXRpb246IGFic29sdXRlOyByaWdodDogMjBweDsgbWluLXdpZHRoOiBhdXRvOyB9XG4gIC50ZWNoZGFzaGJvYXJkX2hlYWRlciAucXVvdGF0aW9uIHsgZGlzcGxheTogbm9uZTsgd2lkdGg6IDEwMCU7IGJhY2tncm91bmQ6ICNmZmQwNmY7fVxuICAudGVjaGRhc2hib2FyZF9oZWFkZXIgLnF1b3RhdGlvbiAubWF0LWxpc3QtYmFzZSB7IGRpc3BsYXk6IGJsb2NrOyB9XG4gIC50ZWNoZGFzaGJvYXJkX2hlYWRlciAucXVvdGF0aW9uIC5tYXQtbmF2LWxpc3QgLm1hdC1saXN0LWl0ZW0geyBtYXJnaW46IDA7IC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7ICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIC13ZWJraXQtYm94LXBhY2s6IGNlbnRlcjtcbiAgICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBiYWNrZ3JvdW5kOiAjZmZmM2RhO1xuICAgIG1hcmdpbjogMXB4IDA7XG4gIH1cbiAgLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5xdW90YXRpb24gLm1hdC1uYXYtbGlzdCAubWF0LWxpc3QtaXRlbTpudGgtY2hpbGQoMSkgeyBtYXJnaW4tdG9wOiAwOyB9XG4gIC50ZWNoZGFzaGJvYXJkX2hlYWRlciAucXVvdGF0aW9uIC5tYXQtbGlzdC1iYXNlIC5tYXQtbGlzdC1pdGVtOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcIjtcbiAgICBsZWZ0OiAtMTVweDtcbiAgICB3aWR0aDogMnB4O1xuICAgIGhlaWdodDogMTVweDtcbiAgICBiYWNrZ3JvdW5kOiAjMWMxYzFjO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAzNSU7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5NzBweCkge1xuICAucGF0aWVudF9yZXBvcnRfc2VjdGlvbiAuYnV0dG9uX2FjdGlvbiBidXR0b24ge1xuICAgIHdpZHRoOiBhdXRvO1xuICB9XG4gIC50YWJsZV9zdHJ1Y3R1cmUgLm1hdC1saXN0LWl0ZW0gLnRpdGxlX24ge1xuICAgIGZvbnQtc2l6ZTogMThweDtcbiAgfVxuICAub25lIHtcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTAwZGVnLCAjZjljODU2LCAjZGQ2NzFkKTtcbiAgfVxuICAudHdvIHtcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTAwZGVnLCAjMDk3M2QxLCAjMDUzMzVhKTtcbiAgfVxuICAudGhyZWUge1xuICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxMDBkZWcsICM0NGNmODAsICMyNmE1NTUpO1xuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDk1MHB4KSB7XG4gIC5jb250ZW50X3dyYXBwZXIgLml0ZW1zZWN0aW9uIHtcbiAgICB3aWR0aDogMzAuOCU7XG4gIH1cbiAgLmNvbnRlbnRfd3JhcHBlciAuaXRlbXNlY3Rpb24gcCB7XG4gICAgZm9udC1zaXplOiAyMHB4O1xuICB9XG4gIC50YWJsZV9zdHJ1Y3R1cmUgLm1hdC1saXN0LWJhc2UgLm1hdC1saXN0LWl0ZW0sIC5tYXQtbGlzdC1iYXNlIC5tYXQtbGlzdC1vcHRpb24ge1xuICAgIG1hcmdpbi1ib3R0b206IDE2cHg7XG4gIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogODUwcHgpIHtcbiAgLmNvbnRlbnRfd3JhcHBlciAuaXRlbXNlY3Rpb24ge1xuICAgIHdpZHRoOiAzMC4yJTtcbiAgfVxuICAvKiBoaWRpbmcgc2VhcmNoYmFyICovXG4gIC5wYXRpZW50X3JlcG9ydF9zZWN0aW9uIC5wYXRpZW50X3RvcF9zZWFyY2ggLnNlYXJjaF9iYXIge1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICAudGVjaGRhc2hib2FyZF9oZWFkZXIge1xuICAgIHBhZGRpbmc6IDAgMTZweDtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgLmNvbnRlbnRfd3JhcHBlciAuaXRlbXNlY3Rpb24ge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbjogMTZweDtcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xuICB9XG4gIC5jb250ZW50X3dyYXBwZXIgLml0ZW1zZWN0aW9uOm50aC1sYXN0LWNoaWxkKDEpIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxNnB4O1xuICB9XG4gIC5wYXRpZW50X3JlcG9ydF9zZWN0aW9uIC5idXR0b25fYWN0aW9uIHtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIC13ZWJraXQtYm94LXBhY2s6IGNlbnRlcjtcbiAgICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcbiAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB9XG4gIC5wYXRpZW50X3JlcG9ydF9zZWN0aW9uIC5idXR0b25fYWN0aW9uIGJ1dHRvbiB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTZweDtcbiAgICB3b3JkLWJyZWFrOiBicmVhay13b3JkO1xuICAgIHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gICAgbGluZS1oZWlnaHQ6IDIycHg7XG4gIH1cbiAgLnRlY2hkYXNoYm9hcmRfaGVhZGVyIHtcbiAgICBwYWRkaW5nOiAwIDE2cHg7XG4gIH1cbiAgLnRlY2hkYXNoYm9hcmRfaGVhZGVyIC5xdW90YXRpb24gcCB7XG4gICAgbWFyZ2luOiAxNnB4IDA7XG4gIH1cbiAgLmRvY3Rvcl9jb250ZW50X3dyYXBwZXIge1xuICAgIHBhZGRpbmc6IDIwcHggMHB4O1xuICB9XG4gIC50YWJsZV9zdHJ1Y3R1cmUgLm1hdC1saXN0LWl0ZW0gLnRpdGxlX2Ege1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgfVxuICAuZG9jdG9yX2NvbnRlbnRfd3JhcHBlciAubWF0LWNhcmQtdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMjhweDtcbiAgICBtYXJnaW4tYm90dG9tOiA1cHg7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICBwYWRkaW5nOiAwIDE2cHg7XG4gIH1cbiAgLnRhYmxlX3N0cnVjdHVyZSAubWF0LWxpc3QtYmFzZSAubWF0LWxpc3QtaXRlbSwgLm1hdC1saXN0LWJhc2UgLm1hdC1saXN0LW9wdGlvbiB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTZweDtcbiAgfVxuICAuZm9vdGVyX3NlY3Rpb24gLmZvb3Rlcl9jb250ZW50IHtcbiAgICB3aWR0aDogYXV0bztcbiAgfVxuICAudGFibGVfc3RydWN0dXJlIC5tYXQtbGlzdC1iYXNlIC5tYXQtbGlzdC1pdGVtLCAubWF0LWxpc3QtYmFzZSAubWF0LWxpc3Qtb3B0aW9uIHtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgLmRvY3Rvcl9jb250ZW50X3dyYXBwZXIgLm1hdC1jYXJkLXRpdGxlIHtcbiAgICBmb250LXNpemU6IDI0cHg7XG4gIH1cbiAgLnBhdGllbnRfcmVwb3J0X3NlY3Rpb24gLnBhdGllbnRfdG9wX3NlYXJjaCBoMSB7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICB9XG59XG5cbi5kYW5nZXIge1xuICBkaXNwbGF5OiBibG9jayFpbXBvcnRhbnQ7XG4gIG1hcmdpbi10b3A6IDIwcHg7XG4gIHRyYW5zaXRpb246IDVweCBlYXNlLW91dDtcbn1cbiJdfQ== */";
    /***/
  },

  /***/
  "./src/app/components/tech/tech-header/tech-header.component.ts":
  /*!**********************************************************************!*\
    !*** ./src/app/components/tech/tech-header/tech-header.component.ts ***!
    \**********************************************************************/

  /*! exports provided: TechHeaderComponent */

  /***/
  function srcAppComponentsTechTechHeaderTechHeaderComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TechHeaderComponent", function () {
      return TechHeaderComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../common/dialog-box/dialog-box.component */
    "./src/app/components/common/dialog-box/dialog-box.component.ts");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");

    var TechHeaderComponent = /*#__PURE__*/function () {
      function TechHeaderComponent(cookies, router, activate, dialog) {
        _classCallCheck(this, TechHeaderComponent);

        this.cookies = cookies;
        this.router = router;
        this.activate = activate;
        this.dialog = dialog;
        this.user_data = {};
        this.loader = true;
        this.main_user = {
          flag: false,
          data: {},
          buttonText: "Rerurn to Admin"
        };
        this.isSticky = false;
        this.status = true;
        this.flag = 0;
        var allData = {};
        allData = cookies.getAll();
        this.user_data = JSON.parse(allData.user_details);

        if (typeof allData.main_user != 'undefined') {
          this.main_user.data = allData.main_user;
          this.main_user.flag = true;
        }

        this.user_cookie = cookies.get('jwtToken');

        if (this.activate.snapshot.routeConfig.path == "admin/tech-dashboard/:_id") {
          this.flag = 1;
        }
      }

      _createClass(TechHeaderComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
        /**logout function start here**/

      }, {
        key: "logout",
        value: function logout() {
          this.cookies["delete"]('jwtToken');
          this.cookies["delete"]('user_details');
          this.cookies.deleteAll();
          this.router.navigateByUrl('logout');
        }
        /**logout function end here**/

      }, {
        key: "returnToAdmin",
        value: function returnToAdmin() {
          var _this232 = this;

          var modalData = {
            panelClass: 'bulkupload-dialog',
            data: {
              header: "Alert",
              message: "Do you want to return to admin?",
              button1: {
                text: "Yes"
              },
              button2: {
                text: "No"
              }
            }
          };
          this.openModal(modalData);
          this.dialogRef.afterClosed().subscribe(function (result) {
            switch (result) {
              case "Yes":
                var jwtToken = _this232.cookies.get('jwtToken');

                var allData = _this232.cookies.getAll();

                var main_user = JSON.parse(allData.main_user);

                var secret = _this232.cookies.get('secret'); // Delete Cookie


                _this232.cookies["delete"]('user_details');

                _this232.cookies["delete"]('main_user');

                _this232.cookies["delete"]('doctor_signature');

                _this232.cookies["delete"]('secret');

                _this232.cookies["delete"]('jwtToken');

                _this232.cookies.deleteAll('/tech');

                setTimeout(function () {
                  // Reset again Cookie
                  _this232.cookies.set('jwtToken', jwtToken);

                  _this232.cookies.set('user_details', JSON.stringify(main_user));

                  _this232.cookies.set('secret', JSON.stringify(secret)); // Redirect to page


                  _this232.router.navigateByUrl("admin/dashboard");
                }, 500);
                break;

              case "No":
                _this232.dialogRef.close();

                break;
            }
          });
        }
      }, {
        key: "menuFunction",
        value: function menuFunction() {
          this.status = !this.status;
        }
      }, {
        key: "openModal",
        value: function openModal(data) {
          this.dialogRef = this.dialog.open(_common_dialog_box_dialog_box_component__WEBPACK_IMPORTED_MODULE_4__["DialogBoxComponent"], data);
        }
      }]);

      return TechHeaderComponent;
    }();

    TechHeaderComponent.ctorParameters = function () {
      return [{
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatDialog"]
      }];
    };

    TechHeaderComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-tech-header',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./tech-header.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/tech/tech-header/tech-header.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./tech-header.component.css */
      "./src/app/components/tech/tech-header/tech-header.component.css"))["default"]]
    })], TechHeaderComponent);
    /***/
  },

  /***/
  "./src/app/components/test/test.component.css":
  /*!****************************************************!*\
    !*** ./src/app/components/test/test.component.css ***!
    \****************************************************/

  /*! exports provided: default */

  /***/
  function srcAppComponentsTestTestComponentCss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "table {\n    width: 100%;\n  }\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy90ZXN0L3Rlc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7RUFDYiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdGVzdC90ZXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH0iXX0= */";
    /***/
  },

  /***/
  "./src/app/components/test/test.component.ts":
  /*!***************************************************!*\
    !*** ./src/app/components/test/test.component.ts ***!
    \***************************************************/

  /*! exports provided: TestComponent */

  /***/
  function srcAppComponentsTestTestComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TestComponent", function () {
      return TestComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../services/http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _angular_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/material */
    "./node_modules/@angular/material/esm2015/material.js");
    /* harmony import */


    var ngx_device_detector__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ngx-device-detector */
    "./node_modules/ngx-device-detector/fesm2015/ngx-device-detector.js");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../../../environments/environment */
    "./src/environments/environment.ts");
    /* harmony import */


    var moment__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! moment */
    "./node_modules/moment/moment.js");
    /* harmony import */


    var moment__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_8__);

    var moment = moment__WEBPACK_IMPORTED_MODULE_8__;

    var TestComponent = /*#__PURE__*/function () {
      // lib list end
      function TestComponent(router, cookieService, http, activatedRoute, dialog, deviceService, matSnackBar) {
        var _this233 = this;

        _classCallCheck(this, TestComponent);

        this.router = router;
        this.cookieService = cookieService;
        this.http = http;
        this.activatedRoute = activatedRoute;
        this.dialog = dialog;
        this.deviceService = deviceService;
        this.matSnackBar = matSnackBar;
        this.loginUserData = {};
        this.jwtToken = "";
        this.htmlText = {
          headerText: "Patient Reports"
        };
        this.allResolveData = {}; // Lib list

        this.allBillerData = [];
        this.billerData_count = 0;
        this.allUserData_skip = ["_id", "report_file_type", "tech_id", "tech_email", "batch_name", "report_type", "status", "file_basepath", "file_bucketname", "file_name", "file_original_name", "file_type", "converted_image", "images", "patient_details", "patient_name_search", "report_life_circle", "note", "additional_potential_health_risks", "cpt_codes", "created_at", "doctor_name"];
        this.editUrl = "admin/biller-management/edit";
        this.libdata = {
          basecondition: "",
          updateendpoint: '',
          custombuttons: [{
            label: "View Report",
            route: "admin/patient-record/",
            type: 'internallink',
            param: ['_id']
          }, {
            label: "Download Report",
            link: _environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].s3bucket + "reports",
            type: 'externallink',
            paramtype: 'angular',
            param: ['download_file_name']
          }, {
            label: "Tech Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-tech-details',
            // otherparam:["patient_name"],
            //cond:'status',
            //condval:0,
            datafields: ['firstname', 'lastname', 'email', 'phone', 'address', 'city', 'state', 'zip'],
            param: 'id',
            headermessage: 'Tech Info'
          }, {
            label: "View Codes",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-codes-details',
            datafields: ['additional_potential_health_risks', 'cpt_codes', 'icd_codes'],
            // otherparam:["patient_name"],
            //cond:'status',
            //condval:0,
            param: 'id',
            headermessage: 'Codes Info'
          }, {
            label: "Doctor Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-doctor-details',
            datafields: ['firstname', 'lastname', 'email', 'fax', 'practice_name', 'npi', 'phone', 'address', 'city', 'state', 'zip'],
            // otherparam:["patient_name"],
            //cond:'status',
            //condval:0,
            param: 'id',
            headermessage: 'Doctor Info'
          }, {
            label: "Doctor Office Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-doctor-office-details',
            datafields: ['centername', 'firstname', 'lastname', 'email', 'phone', 'address', 'city', 'state', 'zip'],
            // otherparam:["patient_name"],
            //cond:'status',
            //condval:0,
            param: 'id',
            headermessage: 'Doctor Office Info'
          }, {
            label: "Parent Details",
            type: 'action',
            datatype: 'api',
            endpoint: 'get-parent-details',
            // otherparam:["patient_name"],
            cond: 'parent_details_check',
            condval: 1,
            param: 'id',
            headermessage: 'Parent Info'
          }],
          hideeditbutton: true,
          hidedeletebutton: true,
          hidestatustogglebutton: true,
          hideviewbutton: true,
          tableheaders: ["patient_name", // "tech_name",
          "status_text", "created_at_datetime", "cpt_addl", "general_details"]
        };
        this.allUserData_modify_header = {
          "general_details": "Related Info",
          // "tech_name": "Tech Name",
          "patient_name": "Patient Name",
          "status_text": "Status",
          "created_at_datetime": "Report Added",
          "cpt_addl": "CPT/ Addl Hrisk C"
        };
        this.UpdateEndpoint = "addorupdatedata";
        this.deleteEndpoint = "deletesingledata";
        this.apiUrl = _environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].apiBaseUrl1;
        this.tableName = "data_pece";
        this.datacollection = 'getPatientlistdata';
        this.sortdata = {
          "type": 'desc',
          "field": 'patient_name',
          "options": ['patient_name', 'email', 'created_date']
        };
        this.limitcond = {
          "limit": 10,
          "skip": 0,
          "pagecount": 1
        };
        this.previewModal_detail_skip = ['_id', 'user_type', 'status', 'password', 'created_at'];
        this.status = [{
          val: 1,
          'name': 'Active'
        }, {
          val: 0,
          'name': 'Inactive'
        }];
        this.parent_type = [{
          val: "admin",
          'name': 'Admin'
        }, {
          val: "diagnostic_admin",
          'name': 'Diagnostic Admin'
        }, {
          val: "distributors",
          'name': 'Distributor'
        }, {
          val: "doctor_group",
          'name': 'Doctor Group'
        }];
        this.report_type = [{
          val: "RM-3A",
          'name': 'RM-3A'
        }, {
          val: "TM FLOW V3",
          'name': 'TM FLOW V3'
        }, {
          val: "TM FLOW V4",
          'name': 'TM FLOW V4'
        }];
        this.SearchingEndpoint = "datalist";
        this.authval = [];
        this.docofficeval = [];
        this.techval = [];
        this.parentnameval = [];
        this.doctorcity = [];
        this.doctorstate = [];
        this.patientcity = [];
        this.patientstate = [];
        this.SearchingSourceName = "data_biller_list";
        this.search_settings = {
          selectsearch: [{
            label: 'Search By Report Type',
            field: 'report_file_type',
            values: this.report_type
          }, {
            label: 'Search By Parent Type',
            field: 'parent_type',
            values: this.parent_type
          }],
          // datesearch: [{ startdatelabel: "Start Date", enddatelabel: "End Date", submit: "Search", field: "created_at_datetime" }], 
          // textsearch: [{ label: "Search By Name", field: 'name_search' },
          // { label: "Search By E-Mail", field: 'email' }, { label: "Search By Parent Name", field: 'parent_search' }, { label: "Search By Company Name", field: 'company_search' }],
          search: [{
            label: "Search By Doctor",
            field: 'doc_name_search',
            values: this.authval
          }, {
            label: "Search By Tech",
            field: 'tech_name_search',
            values: this.techval
          }, {
            label: "Search By Doctor Office",
            field: 'author_search',
            values: this.docofficeval
          }, {
            label: "Search By Parent Name",
            field: 'patient_name',
            values: this.parentnameval
          }, {
            label: "Search By Doctor City",
            field: 'author_search',
            values: this.doctorcity
          }, {
            label: "Search By Doctor State",
            field: 'author_search',
            values: this.doctorstate
          }, {
            label: "Search By Parent City",
            field: 'author_search',
            values: this.patientcity
          }, {
            label: "Search By Parent State",
            field: 'author_search',
            values: this.patientstate
          }]
        };
        this.loginUserData["user_details"] = cookieService.getAll();
        this.loginUserData["jwtToken"] = cookieService.get('jwtToken');
        /* Get Auth Token */

        this.jwtToken = cookieService.get('jwtToken');
        /* Get resolve data */

        this.activatedRoute.data.subscribe(function (resolveData) {
          _this233.allResolveData = resolveData.dataCount.data.dashboardCount[0]; //this.viewReportProcessData(this.htmlText.headerText);
        }); // lib list

        var endpoint = 'getPatientlistdata';
        var endpointc = 'getPatientlistdata-count';
        var data = {
          "condition": {
            "limit": 10,
            "skip": 0
          },
          sort: {
            "type": 'desc',
            "field": 'patient_name'
          }
        };
        this.http.httpViaPostbyApi1(endpointc, data).subscribe(function (res) {
          _this233.billerData_count = res.count;
        }, function (error) {
          console.log('Oooops!');
        });
        this.http.httpViaPostbyApi1(endpoint, data).subscribe(function (res) {
          // console.log(res);
          _this233.allBillerData = res.results.res;

          for (var i in res.results.res) {
            _this233.authval.push({
              name: res.results.res[i].doc_name,
              val: res.results.res[i].doc_name_search
            });
          }

          for (var i in res.results.res) {
            _this233.techval.push({
              name: res.results.res[i].tech_name,
              val: res.results.res[i].tech_name_search
            });
          }

          for (var i in res.results.res) {
            _this233.parentnameval.push({
              name: res.results.res[i].parent_name,
              val: res.results.res[i].parent_name_search
            });
          }

          for (var i in res.results.res) {
            _this233.doctorstate.push({
              name: res.results.res[i].doctor_state,
              val: res.results.res[i].doctor_state_search
            });
          }

          for (var i in res.results.res) {
            _this233.doctorcity.push({
              name: res.results.res[i].doctor_city,
              val: res.results.res[i].doctor_city_search
            });
          }

          for (var i in res.results.res) {
            _this233.patientcity.push({
              name: res.results.res[i].patient_city,
              val: res.results.res[i].patient_city_search
            });
          }

          for (var i in res.results.res) {
            _this233.patientstate.push({
              name: res.results.res[i].patient_state,
              val: res.results.res[i].patient_state_search
            });
          }

          for (var i in res.results.res) {
            _this233.docofficeval.push({
              name: res.results.res[i].doctor_ofiice_name,
              val: res.results.res[i].doctor_ofiice_name_search
            });
          }
        }, function (error) {
          console.log('Oooops!');
        });
      }

      _createClass(TestComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }, {
        key: "ngAfterViewInit",
        value: function ngAfterViewInit() {}
      }, {
        key: "viewReportProcessData",
        value: function viewReportProcessData(flag) {
          console.log(flag);
        }
      }]);

      return TestComponent;
    }();

    TestComponent.ctorParameters = function () {
      return [{
        type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }, {
        type: _services_http_service_service__WEBPACK_IMPORTED_MODULE_3__["HttpServiceService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatDialog"]
      }, {
        type: ngx_device_detector__WEBPACK_IMPORTED_MODULE_6__["DeviceDetectorService"]
      }, {
        type: _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatSnackBar"]
      }];
    };

    TestComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-test',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./test.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/components/test/test.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./test.component.css */
      "./src/app/components/test/test.component.css"))["default"]]
    })], TestComponent);
    /***/
  },

  /***/
  "./src/app/modules/app-routing.module.ts":
  /*!***********************************************!*\
    !*** ./src/app/modules/app-routing.module.ts ***!
    \***********************************************/

  /*! exports provided: AppRoutingModule */

  /***/
  function srcAppModulesAppRoutingModuleTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AppRoutingModule", function () {
      return AppRoutingModule;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _services_authguard_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../services/authguard.service */
    "./src/app/services/authguard.service.ts");
    /* harmony import */


    var _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../services/resolve.service */
    "./src/app/services/resolve.service.ts");
    /* harmony import */


    var _services_calendar_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../services/calendar.service */
    "./src/app/services/calendar.service.ts");
    /* harmony import */


    var _components_auth_login_login_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../components/auth/login/login.component */
    "./src/app/components/auth/login/login.component.ts");
    /* harmony import */


    var _components_auth_forgetpassword_forgetpassword_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../components/auth/forgetpassword/forgetpassword.component */
    "./src/app/components/auth/forgetpassword/forgetpassword.component.ts");
    /* harmony import */


    var _components_auth_resetpassword_resetpassword_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../components/auth/resetpassword/resetpassword.component */
    "./src/app/components/auth/resetpassword/resetpassword.component.ts");
    /* harmony import */


    var _components_auth_logout_logout_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ../components/auth/logout/logout.component */
    "./src/app/components/auth/logout/logout.component.ts");
    /* harmony import */


    var _components_admin_report_not_process_report_not_process_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! ../components/admin/report-not-process/report-not-process.component */
    "./src/app/components/admin/report-not-process/report-not-process.component.ts");
    /* harmony import */


    var _components_admin_admin_dashboard_admin_dashboard_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
    /*! ../components/admin/admin-dashboard/admin-dashboard.component */
    "./src/app/components/admin/admin-dashboard/admin-dashboard.component.ts");
    /* harmony import */


    var _components_admin_admin_dashboard_hold_report_job_ticket_hold_report_job_ticket_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
    /*! ../components/admin/admin-dashboard/hold-report-job-ticket/hold-report-job-ticket.component */
    "./src/app/components/admin/admin-dashboard/hold-report-job-ticket/hold-report-job-ticket.component.ts");
    /* harmony import */


    var _components_admin_admin_dashboard_edit_patient_record_edit_patient_record_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
    /*! ../components/admin/admin-dashboard/edit-patient-record/edit-patient-record.component */
    "./src/app/components/admin/admin-dashboard/edit-patient-record/edit-patient-record.component.ts");
    /* harmony import */


    var _components_admin_diagnostic_admin_management_add_edit_diagnostic_admin_add_edit_diagnostic_admin_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
    /*! ../components/admin/diagnostic-admin-management/add-edit-diagnostic-admin/add-edit-diagnostic-admin.component */
    "./src/app/components/admin/diagnostic-admin-management/add-edit-diagnostic-admin/add-edit-diagnostic-admin.component.ts");
    /* harmony import */


    var _components_admin_diagnostic_admin_management_listing_diagnostic_admin_listing_diagnostic_admin_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
    /*! ../components/admin/diagnostic-admin-management/listing-diagnostic-admin/listing-diagnostic-admin.component */
    "./src/app/components/admin/diagnostic-admin-management/listing-diagnostic-admin/listing-diagnostic-admin.component.ts");
    /* harmony import */


    var _components_admin_user_management_user_add_edit_user_add_edit_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
    /*! ../components/admin/user-management/user-add-edit/user-add-edit.component */
    "./src/app/components/admin/user-management/user-add-edit/user-add-edit.component.ts");
    /* harmony import */


    var _components_admin_admin_management_add_edit_add_edit_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
    /*! ../components/admin/admin-management/add-edit/add-edit.component */
    "./src/app/components/admin/admin-management/add-edit/add-edit.component.ts");
    /* harmony import */


    var _components_admin_admin_management_manage_admin_list_manage_admin_list_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
    /*! ../components/admin/admin-management/manage-admin-list/manage-admin-list.component */
    "./src/app/components/admin/admin-management/manage-admin-list/manage-admin-list.component.ts");
    /* harmony import */


    var _components_admin_doctor_management_addedit_doctor_addedit_doctor_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(
    /*! ../components/admin/doctor-management/addedit-doctor/addedit-doctor.component */
    "./src/app/components/admin/doctor-management/addedit-doctor/addedit-doctor.component.ts");
    /* harmony import */


    var _components_admin_doctor_management_list_doctor_list_doctor_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(
    /*! ../components/admin/doctor-management/list-doctor/list-doctor.component */
    "./src/app/components/admin/doctor-management/list-doctor/list-doctor.component.ts");
    /* harmony import */


    var _components_admin_biller_management_add_edit_biller_add_edit_biller_component__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(
    /*! ../components/admin/biller-management/add-edit-biller/add-edit-biller.component */
    "./src/app/components/admin/biller-management/add-edit-biller/add-edit-biller.component.ts");
    /* harmony import */


    var _components_admin_biller_management_listing_biller_listing_biller_component__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(
    /*! ../components/admin/biller-management/listing-biller/listing-biller.component */
    "./src/app/components/admin/biller-management/listing-biller/listing-biller.component.ts");
    /* harmony import */


    var _components_admin_tech_management_add_edit_tech_add_edit_tech_component__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(
    /*! ../components/admin/tech-management/add-edit-tech/add-edit-tech.component */
    "./src/app/components/admin/tech-management/add-edit-tech/add-edit-tech.component.ts");
    /* harmony import */


    var _components_admin_tech_management_listing_tech_listing_tech_component__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(
    /*! ../components/admin/tech-management/listing-tech/listing-tech.component */
    "./src/app/components/admin/tech-management/listing-tech/listing-tech.component.ts");
    /* harmony import */


    var _components_admin_sales_person_management_list_sales_person_list_sales_person_component__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(
    /*! ../components/admin/sales-person-management/list-sales-person/list-sales-person.component */
    "./src/app/components/admin/sales-person-management/list-sales-person/list-sales-person.component.ts");
    /* harmony import */


    var _components_admin_sales_person_management_add_edit_sales_person_add_edit_sales_person_component__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(
    /*! ../components/admin/sales-person-management/add-edit-sales-person/add-edit-sales-person.component */
    "./src/app/components/admin/sales-person-management/add-edit-sales-person/add-edit-sales-person.component.ts");
    /* harmony import */


    var _components_admin_faq_management_add_edit_faq_add_edit_faq_component__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(
    /*! ../components/admin/faq-management/add-edit-faq/add-edit-faq.component */
    "./src/app/components/admin/faq-management/add-edit-faq/add-edit-faq.component.ts");
    /* harmony import */


    var _components_admin_faq_management_list_faq_list_faq_component__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(
    /*! ../components/admin/faq-management/list-faq/list-faq.component */
    "./src/app/components/admin/faq-management/list-faq/list-faq.component.ts");
    /* harmony import */


    var _components_admin_doctor_office_management_doctor_office_management_component__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(
    /*! ../components/admin/doctor-office-management/doctor-office-management.component */
    "./src/app/components/admin/doctor-office-management/doctor-office-management.component.ts");
    /* harmony import */


    var _components_admin_doctor_office_management_add_edit_doctor_ofc_add_edit_doctor_ofc_component__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(
    /*! ../components/admin/doctor-office-management/add-edit-doctor-ofc/add-edit-doctor-ofc.component */
    "./src/app/components/admin/doctor-office-management/add-edit-doctor-ofc/add-edit-doctor-ofc.component.ts");
    /* harmony import */


    var _components_admin_booked_appoinments_booked_appoinments_component__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(
    /*! ../components/admin/booked-appoinments/booked-appoinments.component */
    "./src/app/components/admin/booked-appoinments/booked-appoinments.component.ts");
    /* harmony import */


    var _components_common_account_settings_account_settings_component__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(
    /*! ../components/common/account-settings/account-settings.component */
    "./src/app/components/common/account-settings/account-settings.component.ts");
    /* harmony import */


    var _components_common_account_settings_change_password_change_password_component__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(
    /*! ../components/common/account-settings/change-password/change-password.component */
    "./src/app/components/common/account-settings/change-password/change-password.component.ts");
    /* harmony import */


    var _components_tech_tech_dashboard_tech_dashboard_component__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(
    /*! ../components/tech/tech-dashboard/tech-dashboard.component */
    "./src/app/components/tech/tech-dashboard/tech-dashboard.component.ts");
    /* harmony import */


    var _components_tech_manage_calender_manage_schedule_cal_home_cal_home_component__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(
    /*! ../components/tech/manage-calender/manage-schedule/cal-home/cal-home.component */
    "./src/app/components/tech/manage-calender/manage-schedule/cal-home/cal-home.component.ts");
    /* harmony import */


    var _components_tech_manage_calender_my_appointments_list_list_component__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(
    /*! ../components/tech/manage-calender/my-appointments/list/list.component */
    "./src/app/components/tech/manage-calender/my-appointments/list/list.component.ts");
    /* harmony import */


    var _components_admin_admin_dashboard_add_edit_patient_add_edit_patient_component__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(
    /*! ../components/admin/admin-dashboard/add-edit-patient/add-edit-patient.component */
    "./src/app/components/admin/admin-dashboard/add-edit-patient/add-edit-patient.component.ts");
    /* harmony import */


    var _components_tech_patient_management_bulk_upload_bulk_upload_component__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(
    /*! ../components/tech/patient-management/bulk-upload/bulk-upload.component */
    "./src/app/components/tech/patient-management/bulk-upload/bulk-upload.component.ts");
    /* harmony import */


    var _components_tech_patient_management_report_conformation_report_conformation_component__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(
    /*! ../components/tech/patient-management/report-conformation/report-conformation.component */
    "./src/app/components/tech/patient-management/report-conformation/report-conformation.component.ts");
    /* harmony import */


    var _components_biller_biller_dashboard_biller_dashboard_component__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(
    /*! ../components/biller/biller-dashboard/biller-dashboard.component */
    "./src/app/components/biller/biller-dashboard/biller-dashboard.component.ts");
    /* harmony import */


    var _components_biller_direct_download_reports_direct_download_reports_component__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(
    /*! ../components/biller/direct-download-reports/direct-download-reports.component */
    "./src/app/components/biller/direct-download-reports/direct-download-reports.component.ts");
    /* harmony import */


    var _components_doctor_doctor_dashboard_doctor_dashboard_component__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(
    /*! ../components/doctor/doctor-dashboard/doctor-dashboard.component */
    "./src/app/components/doctor/doctor-dashboard/doctor-dashboard.component.ts");
    /* harmony import */


    var _components_doctor_doctor_dashboard_patient_report_view_patient_report_view_component__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(
    /*! ../components/doctor/doctor-dashboard/patient-report-view/patient-report-view.component */
    "./src/app/components/doctor/doctor-dashboard/patient-report-view/patient-report-view.component.ts");
    /* harmony import */


    var _components_tech_report_details_report_details_component__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(
    /*! ../components/tech/report-details/report-details.component */
    "./src/app/components/tech/report-details/report-details.component.ts");
    /* harmony import */


    var _components_doctor_office_doctor_office_dashboard_doctor_office_dashboard_component__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(
    /*! ../components/doctor-office/doctor-office-dashboard/doctor-office-dashboard.component */
    "./src/app/components/doctor-office/doctor-office-dashboard/doctor-office-dashboard.component.ts");
    /* harmony import */


    var _components_common_not_found_error_not_found_error_component__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(
    /*! ../components/common/not-found-error/not-found-error.component */
    "./src/app/components/common/not-found-error/not-found-error.component.ts");
    /* harmony import */


    var _components_sales_person_sales_person_dashboard_sales_person_dashboard_component__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(
    /*! ../components/sales-person/sales-person-dashboard/sales-person-dashboard.component */
    "./src/app/components/sales-person/sales-person-dashboard/sales-person-dashboard.component.ts");
    /* harmony import */


    var _components_sales_person_add_new_doctor_add_new_doctor_component__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(
    /*! ../components/sales-person/add-new-doctor/add-new-doctor.component */
    "./src/app/components/sales-person/add-new-doctor/add-new-doctor.component.ts");
    /* harmony import */


    var _components_test_test_component__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(
    /*! ../components/test/test.component */
    "./src/app/components/test/test.component.ts");
    /* harmony import */


    var _components_doctor_doctor_dashboard_patient_report_view_healthrisk_system_encounter_healthrisk_system_encounter_component__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(
    /*! ../components/doctor/doctor-dashboard/patient-report-view/healthrisk-system-encounter/healthrisk-system-encounter.component */
    "./src/app/components/doctor/doctor-dashboard/patient-report-view/healthrisk-system-encounter/healthrisk-system-encounter.component.ts");
    /* harmony import */


    var _components_doctor_doctor_dashboard_patient_report_view_system_superbill_system_superbill_component__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(
    /*! ../components/doctor/doctor-dashboard/patient-report-view/system-superbill/system-superbill.component */
    "./src/app/components/doctor/doctor-dashboard/patient-report-view/system-superbill/system-superbill.component.ts");
    /* harmony import */


    var _components_doctor_doctor_dashboard_patient_report_view_health_risk_analysis_health_risk_analysis_component__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(
    /*! ../components/doctor/doctor-dashboard/patient-report-view/health-risk-analysis/health-risk-analysis.component */
    "./src/app/components/doctor/doctor-dashboard/patient-report-view/health-risk-analysis/health-risk-analysis.component.ts");
    /* harmony import */


    var _components_doctor_signature_management_signature_management_component__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(
    /*! ../components/doctor/signature-management/signature-management.component */
    "./src/app/components/doctor/signature-management/signature-management.component.ts");
    /* harmony import */


    var _components_biller_download_superbiller_download_superbiller_component__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(
    /*! ../components/biller/download-superbiller/download-superbiller.component */
    "./src/app/components/biller/download-superbiller/download-superbiller.component.ts");
    /* harmony import */


    var _components_diagnostic_admin_diagnostic_admin_dashboard_diagnostic_admin_dashboard_component__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(
    /*! ../components/diagnostic-admin/diagnostic-admin-dashboard/diagnostic-admin-dashboard.component */
    "./src/app/components/diagnostic-admin/diagnostic-admin-dashboard/diagnostic-admin-dashboard.component.ts");
    /* harmony import */


    var _components_common_faq_view_faq_view_component__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(
    /*! ../components/common/faq-view/faq-view.component */
    "./src/app/components/common/faq-view/faq-view.component.ts");
    /* harmony import */


    var _components_tech_manage_calender_manage_schedule_cal_create_slot_cal_create_slot_component__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(
    /*! ../components/tech/manage-calender/manage-schedule/cal-create-slot/cal-create-slot.component */
    "./src/app/components/tech/manage-calender/manage-schedule/cal-create-slot/cal-create-slot.component.ts");
    /* harmony import */


    var _components_tech_manage_calender_manage_schedule_cal_event_listing_cal_event_listing_component__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(
    /*! ../components/tech/manage-calender/manage-schedule/cal-event-listing/cal-event-listing.component */
    "./src/app/components/tech/manage-calender/manage-schedule/cal-event-listing/cal-event-listing.component.ts");
    /* harmony import */


    var _components_tech_manage_calender_manage_schedule_cal_view_slot_cal_view_slot_component__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(
    /*! ../components/tech/manage-calender/manage-schedule/cal-view-slot/cal-view-slot.component */
    "./src/app/components/tech/manage-calender/manage-schedule/cal-view-slot/cal-view-slot.component.ts");
    /* harmony import */


    var _components_doctor_office_manage_appointments_appoinments_listing_appoinments_listing_component__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(
    /*! ../components/doctor-office/manage-appointments/appoinments-listing/appoinments-listing.component */
    "./src/app/components/doctor-office/manage-appointments/appoinments-listing/appoinments-listing.component.ts");
    /* harmony import */


    var _components_doctor_office_manage_appointments_book_appoinment_now_book_appoinment_now_component__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(
    /*! ../components/doctor-office/manage-appointments/book-appoinment-now/book-appoinment-now.component */
    "./src/app/components/doctor-office/manage-appointments/book-appoinment-now/book-appoinment-now.component.ts");
    /* harmony import */


    var _components_tech_manage_calender_manage_schedule_cal_sync_with_google_cal_sync_with_google_component__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(
    /*! ../components/tech/manage-calender/manage-schedule/cal-sync-with-google/cal-sync-with-google.component */
    "./src/app/components/tech/manage-calender/manage-schedule/cal-sync-with-google/cal-sync-with-google.component.ts");
    /* harmony import */


    var _components_tech_manage_calender_manage_schedule_booked_events_booked_events_component__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(
    /*! ../components/tech/manage-calender/manage-schedule/booked-events/booked-events.component */
    "./src/app/components/tech/manage-calender/manage-schedule/booked-events/booked-events.component.ts");
    /* harmony import */


    var _components_admin_manage_insurance_add_edit_insurance_add_edit_insurance_component__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(
    /*! ../components/admin/manage-insurance/add-edit-insurance/add-edit-insurance.component */
    "./src/app/components/admin/manage-insurance/add-edit-insurance/add-edit-insurance.component.ts");
    /* harmony import */


    var _components_admin_manage_insurance_listing_insurance_listing_insurance_component__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(
    /*! ../components/admin/manage-insurance/listing-insurance/listing-insurance.component */
    "./src/app/components/admin/manage-insurance/listing-insurance/listing-insurance.component.ts");
    /* harmony import */


    var _components_admin_manage_insurancetype_add_edit_insurancetype_add_edit_insurancetype_component__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(
    /*! ../components/admin/manage-insurancetype/add-edit-insurancetype/add-edit-insurancetype.component */
    "./src/app/components/admin/manage-insurancetype/add-edit-insurancetype/add-edit-insurancetype.component.ts");
    /* harmony import */


    var _components_admin_manage_insurancetype_listing_insurancetype_listing_insurancetype_component__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(
    /*! ../components/admin/manage-insurancetype/listing-insurancetype/listing-insurancetype.component */
    "./src/app/components/admin/manage-insurancetype/listing-insurancetype/listing-insurancetype.component.ts");
    /* harmony import */


    var _components_admin_manage_doctorgroup_add_edit_doctorgroup_add_edit_doctorgroup_component__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(
    /*! ../components/admin/manage-doctorgroup/add-edit-doctorgroup/add-edit-doctorgroup.component */
    "./src/app/components/admin/manage-doctorgroup/add-edit-doctorgroup/add-edit-doctorgroup.component.ts");
    /* harmony import */


    var _components_admin_manage_doctorgroup_listing_doctorgroup_listing_doctorgroup_component__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(
    /*! ../components/admin/manage-doctorgroup/listing-doctorgroup/listing-doctorgroup.component */
    "./src/app/components/admin/manage-doctorgroup/listing-doctorgroup/listing-doctorgroup.component.ts");
    /* harmony import */


    var _components_admin_manage_adminbiller_add_edit_adminbiller_add_edit_adminbiller_component__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(
    /*! ../components/admin/manage-adminbiller/add-edit-adminbiller/add-edit-adminbiller.component */
    "./src/app/components/admin/manage-adminbiller/add-edit-adminbiller/add-edit-adminbiller.component.ts");
    /* harmony import */


    var _components_admin_manage_adminbiller_listing_adminbiller_listing_adminbiller_component__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(
    /*! ../components/admin/manage-adminbiller/listing-adminbiller/listing-adminbiller.component */
    "./src/app/components/admin/manage-adminbiller/listing-adminbiller/listing-adminbiller.component.ts");
    /* harmony import */


    var _components_admin_manage_patientinformation_add_edit_patientinformation_add_edit_patientinformation_component__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(
    /*! ../components/admin/manage-patientinformation/add-edit-patientinformation/add-edit-patientinformation.component */
    "./src/app/components/admin/manage-patientinformation/add-edit-patientinformation/add-edit-patientinformation.component.ts");
    /* harmony import */


    var _components_admin_manage_patientinformation_listing_patientinformation_listing_patientinformation_component__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(
    /*! ../components/admin/manage-patientinformation/listing-patientinformation/listing-patientinformation.component */
    "./src/app/components/admin/manage-patientinformation/listing-patientinformation/listing-patientinformation.component.ts");
    /* harmony import */


    var _components_admin_manage_distributors_add_edit_distributors_add_edit_distributors_component__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(
    /*! ../components/admin/manage-distributors/add-edit-distributors/add-edit-distributors.component */
    "./src/app/components/admin/manage-distributors/add-edit-distributors/add-edit-distributors.component.ts");
    /* harmony import */


    var _components_admin_manage_distributors_listing_distributors_listing_distributors_component__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(
    /*! ../components/admin/manage-distributors/listing-distributors/listing-distributors.component */
    "./src/app/components/admin/manage-distributors/listing-distributors/listing-distributors.component.ts");
    /* harmony import */


    var _components_doctor_group_doctor_group_dashboard_doctor_group_dashboard_component__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(
    /*! ../components/doctor-group/doctor-group-dashboard/doctor-group-dashboard.component */
    "./src/app/components/doctor-group/doctor-group-dashboard/doctor-group-dashboard.component.ts");
    /* harmony import */


    var _components_distributors_distributors_dashboard_distributors_dashboard_component__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(
    /*! ../components/distributors/distributors-dashboard/distributors-dashboard.component */
    "./src/app/components/distributors/distributors-dashboard/distributors-dashboard.component.ts");
    /* harmony import */


    var _components_adminbiller_adminbiller_dashboard_adminbiller_dashboard_component__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(
    /*! ../components/adminbiller/adminbiller-dashboard/adminbiller-dashboard.component */
    "./src/app/components/adminbiller/adminbiller-dashboard/adminbiller-dashboard.component.ts");
    /* harmony import */


    var _components_doctor_office_add_patient_add_patient_manually_add_patient_manually_component__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(
    /*! ../components/doctor-office/add-patient/add-patient-manually/add-patient-manually.component */
    "./src/app/components/doctor-office/add-patient/add-patient-manually/add-patient-manually.component.ts");
    /* harmony import */


    var _components_encounter_form_encounter_form_component__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(
    /*! ../components/encounter-form/encounter-form.component */
    "./src/app/components/encounter-form/encounter-form.component.ts");
    /* harmony import */


    var _components_booked_events_listing_reschedule_appointment_reschedule_appointment_component__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(
    /*! ../components/booked-events-listing/reschedule-appointment/reschedule-appointment.component */
    "./src/app/components/booked-events-listing/reschedule-appointment/reschedule-appointment.component.ts");
    /* harmony import */


    var _components_common_encounter_form_rules_encounter_form_rules_component__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(
    /*! ../components/common/encounter-form-rules/encounter-form-rules.component */
    "./src/app/components/common/encounter-form-rules/encounter-form-rules.component.ts");
    /* harmony import */


    var _components_admin_cpt_validate_reports_cpt_validate_reports_cpt_validate_reports_component__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(
    /*! ../components/admin/cpt-validate-reports/cpt-validate-reports/cpt-validate-reports.component */
    "./src/app/components/admin/cpt-validate-reports/cpt-validate-reports/cpt-validate-reports.component.ts");
    /* harmony import */


    var _components_admin_reports_details_reports_details_reports_details_component__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(
    /*! ../components/admin/reports-details/reports-details/reports-details.component */
    "./src/app/components/admin/reports-details/reports-details/reports-details.component.ts");
    /* harmony import */


    var _components_admin_report_process_time_report_process_time_report_process_time_component__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(
    /*! ../components/admin/report-process-time/report-process-time/report-process-time.component */
    "./src/app/components/admin/report-process-time/report-process-time/report-process-time.component.ts");
    /* harmony import */


    var _components_admin_report_time_setting_add_setting_time_add_setting_time_component__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(
    /*! ../components/admin/report-time-setting/add-setting-time/add-setting-time.component */
    "./src/app/components/admin/report-time-setting/add-setting-time/add-setting-time.component.ts");
    /* harmony import */


    var _components_admin_report_time_setting_report_time_setting_report_time_setting_component__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(
    /*! ../components/admin/report-time-setting/report-time-setting/report-time-setting.component */
    "./src/app/components/admin/report-time-setting/report-time-setting/report-time-setting.component.ts");
    /* Resolve Service */

    /* Auth Component */

    /****************** Admin *****************/
    // Diagnostic Admin Management

    /* User Mnagement */

    /* Biller Management */

    /* Tech Management */

    /* Sales Person Management */

    /* FNQ Management */

    /**Doctor Office Mnagement**/

    /**Booked-Appoiments**/

    /* Account Settings */

    /***************** Tech Dashboard ****************/

    /* Patient Management */

    /* Bulk Upload**/

    /**Doctor Dashboard **/

    /***************** Doctor Office Dashboard ****************/

    /* Error Pages */

    /* Sales Person */

    /* Test Component */
    // import {RescheduleAppointmentComponent} from "../components/booked-events-listing/reschedule-appointment/reschedule-appointment.component"
    // import {RescheduleAppointmentComponent} from "../components/booked-events-listing/reschedule-appointment/reschedule-appointment.component";
    // import { AddEditTrainingComponent } from '../components/lazyload-training/training-management/manage-training/add-edit-training/add-edit-training.component';
    // import { ListingTrainingComponent } from '../components/lazyload-training/training-management/manage-training/listing-training/listing-training.component';
    // import { AddEditLessionsComponent } from 'traning-lib-influxiq/lib/manage-lessions/add-edit-lessions/add-edit-lessions.component';
    // import { ListLessionComponent } from 'traning-lib-influxiq/lib/manage-lessions/list-lession/list-lession.component';
    // import { AddEditLessonComponent } from '../components/lazyload-training/training-management/manage-lesson/add-edit-lesson/add-edit-lesson.component';
    // import { ListLessonComponent } from '../components/lazyload-training/training-management/manage-lesson/list-lesson/list-lesson.component';


    var routes = [
    /********** Auth Route Start **********/
    {
      path: '',
      redirectTo: 'login',
      pathMatch: 'full'
    }, {
      path: 'login',
      component: _components_auth_login_login_component__WEBPACK_IMPORTED_MODULE_6__["LoginComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'forget-password',
      component: _components_auth_forgetpassword_forgetpassword_component__WEBPACK_IMPORTED_MODULE_7__["ForgetpasswordComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'reset-password/:token',
      component: _components_auth_resetpassword_resetpassword_component__WEBPACK_IMPORTED_MODULE_8__["ResetpasswordComponent"]
    }, {
      path: 'sign-up',
      redirectTo: '/login',
      pathMatch: 'full'
    }, {
      path: 'logout',
      component: _components_auth_logout_logout_component__WEBPACK_IMPORTED_MODULE_9__["LogoutComponent"]
    },
    /********** Auth Route Start **********/

    /*=========Reports Details Routes======== */
    {
      path: 'admin/reports-details/:_id',
      component: _components_admin_reports_details_reports_details_reports_details_component__WEBPACK_IMPORTED_MODULE_84__["ReportsDetailsComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'admin-biller/reports-details/:_id',
      component: _components_admin_reports_details_reports_details_reports_details_component__WEBPACK_IMPORTED_MODULE_84__["ReportsDetailsComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'doctor/reports-details',
      component: _components_admin_reports_details_reports_details_reports_details_component__WEBPACK_IMPORTED_MODULE_84__["ReportsDetailsComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'doctor-office/reports-details',
      component: _components_admin_reports_details_reports_details_reports_details_component__WEBPACK_IMPORTED_MODULE_84__["ReportsDetailsComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'tech/reports-details',
      component: _components_admin_reports_details_reports_details_reports_details_component__WEBPACK_IMPORTED_MODULE_84__["ReportsDetailsComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'diagnostic_admin/reports-details',
      component: _components_admin_reports_details_reports_details_reports_details_component__WEBPACK_IMPORTED_MODULE_84__["ReportsDetailsComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'doctor-group/reports-details',
      component: _components_admin_reports_details_reports_details_reports_details_component__WEBPACK_IMPORTED_MODULE_84__["ReportsDetailsComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'distributors/reports-details',
      component: _components_admin_reports_details_reports_details_reports_details_component__WEBPACK_IMPORTED_MODULE_84__["ReportsDetailsComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    },
    /*========Admin Biller Routes========== */
    {
      path: 'admin-biller/dashboard',
      component: _components_adminbiller_adminbiller_dashboard_adminbiller_dashboard_component__WEBPACK_IMPORTED_MODULE_78__["AdminbillerDashboardComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        dataCount: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {}
        },
        endpoint: 'admin-biller-dashboard'
      }
    }, {
      path: 'admin-biller/patient-record-report/:_id',
      component: _components_doctor_doctor_dashboard_patient_report_view_patient_report_view_component__WEBPACK_IMPORTED_MODULE_43__["PatientReportViewComponent"],
      //canActivate: [AuthguardService],
      resolve: {
        data: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {}
        },
        endpoint: 'report-view'
      }
    }, {
      path: 'admin-biller/report-jobtickets/:_id',
      component: _components_admin_admin_dashboard_hold_report_job_ticket_hold_report_job_ticket_component__WEBPACK_IMPORTED_MODULE_12__["HoldReportJobTicketComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        dataCount: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {}
        },
        endpoint: 'admin-dashboard'
      }
    }, // faq
    {
      path: 'admin-biller/faq',
      component: _components_common_faq_view_faq_view_component__WEBPACK_IMPORTED_MODULE_56__["FaqViewComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        faqData: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_faq',
          condition: {
            users: "admin_biller"
          }
        },
        endpoint: 'datalist'
      }
    }, // Cpt Reports Routes----------------
    {
      path: 'admin/cpt-reports',
      component: _components_admin_cpt_validate_reports_cpt_validate_reports_cpt_validate_reports_component__WEBPACK_IMPORTED_MODULE_83__["CptValidateReportsComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'admin/report-processing',
      component: _components_admin_report_process_time_report_process_time_report_process_time_component__WEBPACK_IMPORTED_MODULE_85__["ReportProcessTimeComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'admin/sales-person/cpt-reports',
      component: _components_admin_cpt_validate_reports_cpt_validate_reports_cpt_validate_reports_component__WEBPACK_IMPORTED_MODULE_83__["CptValidateReportsComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'admin-biller/cpt-reports',
      component: _components_admin_cpt_validate_reports_cpt_validate_reports_cpt_validate_reports_component__WEBPACK_IMPORTED_MODULE_83__["CptValidateReportsComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    },
    /********** Admin Routes Start **********/
    {
      path: 'admin/dashboard',
      // loadChildren: () => import('../components/admin/admin-dashboard/approved-patient-reports/approved-patient-reports.component').then(m => m.ApprovedPatientReportsComponent),
      component: _components_admin_admin_dashboard_admin_dashboard_component__WEBPACK_IMPORTED_MODULE_11__["AdminDashboardComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        dataCount: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {}
        },
        endpoint: 'admin-dashboard'
      }
    }, {
      path: 'admin/report-jobtickets/:_id',
      component: _components_admin_admin_dashboard_hold_report_job_ticket_hold_report_job_ticket_component__WEBPACK_IMPORTED_MODULE_12__["HoldReportJobTicketComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        dataCount: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {}
        },
        endpoint: 'admin-dashboard'
      }
    }, {
      path: 'admin/images-not-process',
      component: _components_admin_report_not_process_report_not_process_component__WEBPACK_IMPORTED_MODULE_10__["ReportNotProcessComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        data: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {}
        },
        endpoint: 'datalist'
      }
    }, {
      path: 'admin/text-not-process',
      component: _components_admin_report_not_process_report_not_process_component__WEBPACK_IMPORTED_MODULE_10__["ReportNotProcessComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        data: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {
            "report_type": "file",
            "images": {
              $exists: true
            },
            $or: [{
              "page_1": {
                $exists: false
              }
            }, {
              "page_2": {
                $exists: false
              }
            }, {
              "page_3": {
                $exists: false
              }
            }, {
              "page_4": {
                $exists: false
              }
            }, {
              "page_5": {
                $exists: false
              }
            }, {
              "page_6": {
                $exists: false
              }
            }, {
              "page_7": {
                $exists: false
              }
            }]
          }
        },
        endpoint: 'datalist'
      }
    },
    /* Patient Management */
    {
      path: 'admin/view-patient-record/:_id',
      component: _components_doctor_doctor_dashboard_patient_report_view_patient_report_view_component__WEBPACK_IMPORTED_MODULE_43__["PatientReportViewComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        data: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {}
        },
        endpoint: 'report-view'
      }
    }, {
      path: 'doctor/view-patient-record/:_id',
      component: _components_doctor_doctor_dashboard_patient_report_view_patient_report_view_component__WEBPACK_IMPORTED_MODULE_43__["PatientReportViewComponent"],
      //canActivate: [AuthguardService],
      resolve: {
        data: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {}
        },
        endpoint: 'report-view'
      }
    }, // {
    //   path: 'distributors/view-patient-record/:_id',
    //   component: PatientReportViewComponent,
    //   // canActivate: [AuthguardService],
    //   resolve: { data: ResolveService },
    //   data: {
    //     requestcondition: {
    //       source: 'data_pece',
    //       condition: {}
    //     },
    //     endpoint: 'report-view'
    //   },
    // },
    // {
    //   path: 'doctor-group/view-patient-record/:_id',
    //   component: PatientReportViewComponent,
    //   //canActivate: [AuthguardService],
    //   resolve: { data: ResolveService },
    //   data: {
    //     requestcondition: {
    //       source: 'data_pece',
    //       condition: {}
    //     },
    //     endpoint: 'report-view'
    //   },
    // },
    // {
    //   path: 'diagnostic-admin/patient-record/:_id',
    //   component: PatientReportViewComponent,
    //   canActivate: [AuthguardService],
    //   resolve: { data: ResolveService },
    //   data: {
    //     requestcondition: {
    //       source: 'data_pece',
    //       condition: {}
    //     },
    //     endpoint: 'report-view'
    //   },
    // },
    {
      path: 'doctor/patient-record/:_id',
      component: _components_doctor_doctor_dashboard_patient_report_view_patient_report_view_component__WEBPACK_IMPORTED_MODULE_43__["PatientReportViewComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        data: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {}
        },
        endpoint: 'report-view'
      }
    }, // {
    //   path: 'sales-person/patient-record/:_id',
    //   component: PatientReportViewComponent,
    //   canActivate: [AuthguardService],
    //   resolve: { data: ResolveService },
    //   data: {
    //     requestcondition: {
    //       source: 'data_pece',
    //       condition: {}
    //     },
    //     endpoint: 'report-view'
    //   },
    // },
    {
      path: 'admin/patient-record/encounter/:_id',
      component: _components_encounter_form_encounter_form_component__WEBPACK_IMPORTED_MODULE_80__["EncounterFormComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        data: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {}
        },
        endpoint: 'report-view'
      }
    }, {
      path: 'admin-biller/view-patient-record/:_id',
      component: _components_doctor_doctor_dashboard_patient_report_view_patient_report_view_component__WEBPACK_IMPORTED_MODULE_43__["PatientReportViewComponent"],
      //canActivate: [AuthguardService],
      resolve: {
        data: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {}
        },
        endpoint: 'report-view'
      }
    }, {
      path: 'admin/patient-management/add',
      component: _components_admin_admin_dashboard_add_edit_patient_add_edit_patient_component__WEBPACK_IMPORTED_MODULE_37__["AddEditPatientComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'admin/patient-record/edit/:_id',
      component: _components_admin_admin_dashboard_edit_patient_record_edit_patient_record_component__WEBPACK_IMPORTED_MODULE_13__["EditPatientRecordComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        patientData: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {}
        },
        endpoint: 'datalist'
      }
    }, {
      path: 'doctor/patient-record/edit/:_id',
      component: _components_admin_admin_dashboard_edit_patient_record_edit_patient_record_component__WEBPACK_IMPORTED_MODULE_13__["EditPatientRecordComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        patientData: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {}
        },
        endpoint: 'datalist'
      }
    },
    /* Patient Information Management */
    {
      path: 'admin/patientinformation-management',
      component: _components_admin_manage_patientinformation_listing_patientinformation_listing_patientinformation_component__WEBPACK_IMPORTED_MODULE_73__["ListingPatientinformationComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'admin/patientinformation-management/add',
      component: _components_admin_manage_patientinformation_add_edit_patientinformation_add_edit_patientinformation_component__WEBPACK_IMPORTED_MODULE_72__["AddEditPatientinformationComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'admin/patientinformation-management/edit/:_id',
      component: _components_admin_manage_patientinformation_add_edit_patientinformation_add_edit_patientinformation_component__WEBPACK_IMPORTED_MODULE_72__["AddEditPatientinformationComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        patientinformationData: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {
            user_type: "patient_information"
          }
        },
        endpoint: 'datalist'
      }
    },
    /* User Management */
    {
      path: 'admin/user-management/add',
      component: _components_admin_user_management_user_add_edit_user_add_edit_component__WEBPACK_IMPORTED_MODULE_16__["UserAddEditComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'admin/user-management/edit/:_id',
      component: _components_admin_user_management_user_add_edit_user_add_edit_component__WEBPACK_IMPORTED_MODULE_16__["UserAddEditComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        UserData: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {}
        },
        endpoint: 'datalist'
      }
    },
    /* Admin Management */
    {
      path: 'admin/admin-management',
      component: _components_admin_admin_management_manage_admin_list_manage_admin_list_component__WEBPACK_IMPORTED_MODULE_18__["ManageAdminListComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'admin/admin-management/add',
      component: _components_admin_admin_management_add_edit_add_edit_component__WEBPACK_IMPORTED_MODULE_17__["AddEditComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'admin/admin-management/edit/:_id',
      component: _components_admin_admin_management_add_edit_add_edit_component__WEBPACK_IMPORTED_MODULE_17__["AddEditComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        adminsingleData: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {
            user_type: "admin"
          }
        },
        endpoint: 'datalist'
      }
    },
    /* Biller Management */
    {
      path: 'admin/biller-management',
      component: _components_admin_biller_management_listing_biller_listing_biller_component__WEBPACK_IMPORTED_MODULE_22__["ListingBillerComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'admin/biller-management/add',
      component: _components_admin_biller_management_add_edit_biller_add_edit_biller_component__WEBPACK_IMPORTED_MODULE_21__["AddEditBillerComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'admin/biller-management/edit/:_id',
      component: _components_admin_biller_management_add_edit_biller_add_edit_biller_component__WEBPACK_IMPORTED_MODULE_21__["AddEditBillerComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        billersingleData: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {
            user_type: "biller"
          }
        },
        endpoint: 'datalist'
      }
    },
    /* Distributors Management Start */
    {
      path: 'admin/distributors-management',
      component: _components_admin_manage_distributors_listing_distributors_listing_distributors_component__WEBPACK_IMPORTED_MODULE_75__["ListingDistributorsComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'admin/distributors-management/add',
      component: _components_admin_manage_distributors_add_edit_distributors_add_edit_distributors_component__WEBPACK_IMPORTED_MODULE_74__["AddEditDistributorsComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'admin/distributors-management/edit/:_id',
      component: _components_admin_manage_distributors_add_edit_distributors_add_edit_distributors_component__WEBPACK_IMPORTED_MODULE_74__["AddEditDistributorsComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        distributorsData: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {
            user_type: "distributors"
          }
        },
        endpoint: 'datalist'
      }
    },
    /* Distributors Management End */

    /* Tech Management */
    {
      path: 'admin/tech-management',
      component: _components_admin_tech_management_listing_tech_listing_tech_component__WEBPACK_IMPORTED_MODULE_24__["ListingTechComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'admin/tech-management/add',
      component: _components_admin_tech_management_add_edit_tech_add_edit_tech_component__WEBPACK_IMPORTED_MODULE_23__["AddEditTechComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'admin/tech-management/edit/:_id',
      component: _components_admin_tech_management_add_edit_tech_add_edit_tech_component__WEBPACK_IMPORTED_MODULE_23__["AddEditTechComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        techData: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {
            user_type: "tech"
          }
        },
        endpoint: 'datalist'
      }
    },
    /* Insurance Management */
    {
      path: 'admin/insurance-management',
      component: _components_admin_manage_insurance_listing_insurance_listing_insurance_component__WEBPACK_IMPORTED_MODULE_65__["ListingInsuranceComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'admin/insurance-management/add',
      component: _components_admin_manage_insurance_add_edit_insurance_add_edit_insurance_component__WEBPACK_IMPORTED_MODULE_64__["AddEditInsuranceComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'admin/insurance-management/edit/:_id',
      component: _components_admin_manage_insurance_add_edit_insurance_add_edit_insurance_component__WEBPACK_IMPORTED_MODULE_64__["AddEditInsuranceComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        insuranceData: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {
            user_type: "insurance"
          }
        },
        endpoint: 'datalist'
      }
    },
    /* Insurance Type Management */
    {
      path: 'admin/insurance-type-management',
      component: _components_admin_manage_insurancetype_listing_insurancetype_listing_insurancetype_component__WEBPACK_IMPORTED_MODULE_67__["ListingInsurancetypeComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'admin/insurance-type-management/add',
      component: _components_admin_manage_insurancetype_add_edit_insurancetype_add_edit_insurancetype_component__WEBPACK_IMPORTED_MODULE_66__["AddEditInsurancetypeComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'admin/insurance-type-management/edit/:_id',
      component: _components_admin_manage_insurancetype_add_edit_insurancetype_add_edit_insurancetype_component__WEBPACK_IMPORTED_MODULE_66__["AddEditInsurancetypeComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        data: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {}
        },
        endpoint: 'datalist'
      }
    },
    /* Doctor Management */
    {
      path: 'admin/doctor-management',
      component: _components_admin_doctor_management_list_doctor_list_doctor_component__WEBPACK_IMPORTED_MODULE_20__["ListDoctorComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'admin/sales-person/doctor-management',
      component: _components_admin_doctor_management_list_doctor_list_doctor_component__WEBPACK_IMPORTED_MODULE_20__["ListDoctorComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'admin/doctor-management/add',
      component: _components_admin_doctor_management_addedit_doctor_addedit_doctor_component__WEBPACK_IMPORTED_MODULE_19__["AddeditDoctorComponent"]
    }, {
      path: 'admin/doctor-management/edit/:_id',
      component: _components_admin_doctor_management_addedit_doctor_addedit_doctor_component__WEBPACK_IMPORTED_MODULE_19__["AddeditDoctorComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        data: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {
            user_type: "doctor"
          }
        },
        endpoint: 'datalist'
      }
    },
    /* Doctor Office Management */

    /* Admin Biller Management */
    {
      path: 'admin/adminbiller-management',
      component: _components_admin_manage_adminbiller_listing_adminbiller_listing_adminbiller_component__WEBPACK_IMPORTED_MODULE_71__["ListingAdminbillerComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'admin/adminbiller-management/add',
      component: _components_admin_manage_adminbiller_add_edit_adminbiller_add_edit_adminbiller_component__WEBPACK_IMPORTED_MODULE_70__["AddEditAdminbillerComponent"]
    }, {
      path: 'admin/adminbiller-management/edit/:_id',
      component: _components_admin_manage_adminbiller_add_edit_adminbiller_add_edit_adminbiller_component__WEBPACK_IMPORTED_MODULE_70__["AddEditAdminbillerComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        data: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {
            user_type: "admin_biller"
          }
        },
        endpoint: 'datalist'
      }
    },
    /* Admin Biller Management */

    /* Doctor Group Management */
    {
      path: 'admin/doctor-management/group',
      component: _components_admin_manage_doctorgroup_listing_doctorgroup_listing_doctorgroup_component__WEBPACK_IMPORTED_MODULE_69__["ListingDoctorgroupComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'admin/doctor-management/group/add',
      component: _components_admin_manage_doctorgroup_add_edit_doctorgroup_add_edit_doctorgroup_component__WEBPACK_IMPORTED_MODULE_68__["AddEditDoctorgroupComponent"]
    }, {
      path: 'admin/doctor-management/group/edit/:_id',
      component: _components_admin_manage_doctorgroup_add_edit_doctorgroup_add_edit_doctorgroup_component__WEBPACK_IMPORTED_MODULE_68__["AddEditDoctorgroupComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        data: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {
            user_type: "doctor_group"
          }
        },
        endpoint: 'datalist'
      }
    },
    /* Doctor Group Management */
    {
      path: 'distributors/doctor-office-management',
      component: _components_admin_doctor_office_management_doctor_office_management_component__WEBPACK_IMPORTED_MODULE_29__["DoctorOfficeManagementComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'distributors/doctor-office-management/add',
      component: _components_admin_doctor_office_management_add_edit_doctor_ofc_add_edit_doctor_ofc_component__WEBPACK_IMPORTED_MODULE_30__["AddEditDoctorOfcComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'distributors/doctor-office-management/edit/:_id',
      component: _components_admin_doctor_office_management_add_edit_doctor_ofc_add_edit_doctor_ofc_component__WEBPACK_IMPORTED_MODULE_30__["AddEditDoctorOfcComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        data: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {}
        },
        endpoint: 'datalist'
      }
    },
    /* Faq */
    {
      path: 'distributors/faq',
      component: _components_common_faq_view_faq_view_component__WEBPACK_IMPORTED_MODULE_56__["FaqViewComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        faqData: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_faq',
          condition: {
            users: "distributors"
          }
        },
        endpoint: 'datalist'
      }
    }, {
      path: 'diagnostic-admin/doctor-office-management',
      component: _components_admin_doctor_office_management_doctor_office_management_component__WEBPACK_IMPORTED_MODULE_29__["DoctorOfficeManagementComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'diagnostic-admin/doctor-office-management/add',
      component: _components_admin_doctor_office_management_add_edit_doctor_ofc_add_edit_doctor_ofc_component__WEBPACK_IMPORTED_MODULE_30__["AddEditDoctorOfcComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'diagnostic-admin/doctor-office-management/edit/:_id',
      component: _components_admin_doctor_office_management_add_edit_doctor_ofc_add_edit_doctor_ofc_component__WEBPACK_IMPORTED_MODULE_30__["AddEditDoctorOfcComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        data: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {}
        },
        endpoint: 'datalist'
      }
    }, {
      path: 'doctor-group/doctor-office-management',
      component: _components_admin_doctor_office_management_doctor_office_management_component__WEBPACK_IMPORTED_MODULE_29__["DoctorOfficeManagementComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'doctor-group/doctor-office-management/add',
      component: _components_admin_doctor_office_management_add_edit_doctor_ofc_add_edit_doctor_ofc_component__WEBPACK_IMPORTED_MODULE_30__["AddEditDoctorOfcComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'doctor-group/doctor-office-management/edit/:_id',
      component: _components_admin_doctor_office_management_add_edit_doctor_ofc_add_edit_doctor_ofc_component__WEBPACK_IMPORTED_MODULE_30__["AddEditDoctorOfcComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        data: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {}
        },
        endpoint: 'datalist'
      }
    },
    /* Faq */
    {
      path: 'doctor-group/faq',
      component: _components_common_faq_view_faq_view_component__WEBPACK_IMPORTED_MODULE_56__["FaqViewComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        faqData: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_faq',
          condition: {
            users: "doctor_group"
          }
        },
        endpoint: 'datalist'
      }
    }, {
      path: 'admin/doctor-office-management',
      component: _components_admin_doctor_office_management_doctor_office_management_component__WEBPACK_IMPORTED_MODULE_29__["DoctorOfficeManagementComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'admin/doctor-office-management/add',
      component: _components_admin_doctor_office_management_add_edit_doctor_ofc_add_edit_doctor_ofc_component__WEBPACK_IMPORTED_MODULE_30__["AddEditDoctorOfcComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'admin/doctor-office-management/edit/:_id',
      component: _components_admin_doctor_office_management_add_edit_doctor_ofc_add_edit_doctor_ofc_component__WEBPACK_IMPORTED_MODULE_30__["AddEditDoctorOfcComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        data: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {}
        },
        endpoint: 'datalist'
      }
    },
    /* Diagnostic Admin Management */
    {
      path: 'admin/diagnostic-admin-management',
      component: _components_admin_diagnostic_admin_management_listing_diagnostic_admin_listing_diagnostic_admin_component__WEBPACK_IMPORTED_MODULE_15__["ListingDiagnosticAdminComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'admin/diagnostic-admin-management/add',
      component: _components_admin_diagnostic_admin_management_add_edit_diagnostic_admin_add_edit_diagnostic_admin_component__WEBPACK_IMPORTED_MODULE_14__["AddEditDiagnosticAdminComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'admin/diagnostic-admin-management/edit/:_id',
      component: _components_admin_diagnostic_admin_management_add_edit_diagnostic_admin_add_edit_diagnostic_admin_component__WEBPACK_IMPORTED_MODULE_14__["AddEditDiagnosticAdminComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        data: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {
            user_type: "diagnostic_admin"
          }
        },
        endpoint: 'datalist'
      }
    },
    /* Sales Person Management */
    {
      path: 'admin/sales-person-management',
      component: _components_admin_sales_person_management_list_sales_person_list_sales_person_component__WEBPACK_IMPORTED_MODULE_25__["ListSalesPersonComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'admin/sales-person-management/add',
      component: _components_admin_sales_person_management_add_edit_sales_person_add_edit_sales_person_component__WEBPACK_IMPORTED_MODULE_26__["AddEditSalesPersonComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'admin/sales-person-management/edit/:_id',
      component: _components_admin_sales_person_management_add_edit_sales_person_add_edit_sales_person_component__WEBPACK_IMPORTED_MODULE_26__["AddEditSalesPersonComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        techData: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {
            user_type: "sales_person"
          }
        },
        endpoint: 'datalist'
      }
    },
    /* ----------------Time Setting Management================ */
    {
      path: 'admin/setting-management',
      component: _components_admin_report_time_setting_report_time_setting_report_time_setting_component__WEBPACK_IMPORTED_MODULE_87__["ReportTimeSettingComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'admin/setting-management/add',
      component: _components_admin_report_time_setting_add_setting_time_add_setting_time_component__WEBPACK_IMPORTED_MODULE_86__["AddSettingTimeComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'admin/setting-management/:_id',
      component: _components_admin_report_time_setting_add_setting_time_add_setting_time_component__WEBPACK_IMPORTED_MODULE_86__["AddSettingTimeComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        techData: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {}
        },
        endpoint: 'datalist'
      }
    }, {
      path: 'diagnostic-admin/sales-person-management',
      component: _components_admin_sales_person_management_list_sales_person_list_sales_person_component__WEBPACK_IMPORTED_MODULE_25__["ListSalesPersonComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'diagnostic-admin/sales-person-management/add',
      component: _components_admin_sales_person_management_add_edit_sales_person_add_edit_sales_person_component__WEBPACK_IMPORTED_MODULE_26__["AddEditSalesPersonComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'diagnostic-admin/sales-person-management/edit/:_id',
      component: _components_admin_sales_person_management_add_edit_sales_person_add_edit_sales_person_component__WEBPACK_IMPORTED_MODULE_26__["AddEditSalesPersonComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        techData: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {
            user_type: "sales_person"
          }
        },
        endpoint: 'datalist'
      }
    }, {
      path: 'distributors/sales-person-management',
      component: _components_admin_sales_person_management_list_sales_person_list_sales_person_component__WEBPACK_IMPORTED_MODULE_25__["ListSalesPersonComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'distributors/sales-person-management/add',
      component: _components_admin_sales_person_management_add_edit_sales_person_add_edit_sales_person_component__WEBPACK_IMPORTED_MODULE_26__["AddEditSalesPersonComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'distributors/sales-person-management/edit/:_id',
      component: _components_admin_sales_person_management_add_edit_sales_person_add_edit_sales_person_component__WEBPACK_IMPORTED_MODULE_26__["AddEditSalesPersonComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        techData: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {
            user_type: "sales_person"
          }
        },
        endpoint: 'datalist'
      }
    },
    /* FNQ Management */
    {
      path: 'admin/faq-management',
      component: _components_admin_faq_management_list_faq_list_faq_component__WEBPACK_IMPORTED_MODULE_28__["ListFaqComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        techDashboardData: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_faq',
          condition: {}
        },
        endpoint: 'datalist'
      }
    }, {
      path: 'admin-biller/faq',
      component: _components_common_faq_view_faq_view_component__WEBPACK_IMPORTED_MODULE_56__["FaqViewComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        faqData: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_faq',
          condition: {
            users: "admin_biller"
          }
        },
        endpoint: 'datalist'
      }
    }, {
      path: 'admin/faq-management/add',
      component: _components_admin_faq_management_add_edit_faq_add_edit_faq_component__WEBPACK_IMPORTED_MODULE_27__["AddEditFaqComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'admin/faq-management/edit/:_id',
      component: _components_admin_faq_management_add_edit_faq_add_edit_faq_component__WEBPACK_IMPORTED_MODULE_27__["AddEditFaqComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        techData: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_faq',
          condition: {}
        },
        endpoint: 'datalist'
      }
    },
    /* Booked Appoinments */
    {
      path: 'admin/booked-appoinments',
      component: _components_admin_booked_appoinments_booked_appoinments_component__WEBPACK_IMPORTED_MODULE_31__["BookedAppoinmentsComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      // resolve: { bookedEventList: ResolveService },
      data: {
        requestcondition: {
          source: 'google-events',
          condition: {}
        },
        endpoint: 'list-booked-events'
      }
    }, {
      path: 'admin/booked-appoinments/:tab_flag',
      component: _components_admin_booked_appoinments_booked_appoinments_component__WEBPACK_IMPORTED_MODULE_31__["BookedAppoinmentsComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      // resolve: { bookedEventList: ResolveService },
      data: {
        requestcondition: {
          source: 'google-events',
          condition: {}
        },
        endpoint: 'list-booked-events'
      }
    },
    /* Faq */
    {
      path: 'admin/faq',
      component: _components_common_faq_view_faq_view_component__WEBPACK_IMPORTED_MODULE_56__["FaqViewComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        faqData: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_faq',
          condition: {
            users: "admin"
          }
        },
        endpoint: 'datalist'
      }
    },
    /* Account-Settings */
    {
      path: 'admin/account-settings',
      component: _components_common_account_settings_account_settings_component__WEBPACK_IMPORTED_MODULE_32__["AccountSettingsComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'admin/account-settings/change-password',
      component: _components_common_account_settings_change_password_change_password_component__WEBPACK_IMPORTED_MODULE_33__["ChangePasswordComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    },
    /********** Admin Routes End ***********/

    /* Doctor Group Admin Dashboard */
    {
      path: 'doctor-group/dashboard',
      component: _components_doctor_group_doctor_group_dashboard_doctor_group_dashboard_component__WEBPACK_IMPORTED_MODULE_76__["DoctorGroupDashboardComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        dataCount: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {}
        },
        endpoint: 'doctor-group-dashboard'
      }
    }, // {
    //   path: 'doctor-group/view-patient-record/:_id',
    //   component: PatientReportViewComponent,
    //   //canActivate: [AuthguardService],
    //   resolve: { data: ResolveService },
    //   data: {
    //     requestcondition: {
    //       source: 'data_pece',
    //       condition: {}
    //     },
    //     endpoint: 'report-view'
    //   },
    // },

    /* Distributors Admin Dashboard */
    {
      path: 'distributors/dashboard',
      component: _components_distributors_distributors_dashboard_distributors_dashboard_component__WEBPACK_IMPORTED_MODULE_77__["DistributorsDashboardComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        dataCount: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {}
        },
        endpoint: 'distributors-dashboard'
      }
    }, // {
    //   path: 'distributors/patient-record-report/:_id',
    //   component: PatientReportViewComponent,
    //   //canActivate: [AuthguardService],
    //   resolve: { data: ResolveService },
    //   data: {
    //     requestcondition: {
    //       source: 'data_pece',
    //       condition: {}
    //     },
    //     endpoint: 'report-view'
    //   },
    // },

    /****************** Diagnostic Admin Routes Start *****************/

    /* Diagnostic Admin Dashboard */
    {
      path: 'diagnostic-admin/dashboard',
      component: _components_diagnostic_admin_diagnostic_admin_dashboard_diagnostic_admin_dashboard_component__WEBPACK_IMPORTED_MODULE_55__["DiagnosticAdminDashboardComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        dataCount: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {}
        },
        endpoint: 'diagnostic-admin-dashboard'
      }
    }, // {
    //   path: 'diagnostic-admin/patient-record-report/:_id',
    //   component: PatientReportViewComponent,
    //   //canActivate: [AuthguardService],
    //   resolve: { data: ResolveService },
    //   data: {
    //     requestcondition: {
    //       source: 'data_pece',
    //       condition: {}
    //     },
    //     endpoint: 'report-view'
    //   },
    // },

    /* Add Patient Record Mannual */
    {
      path: 'diagnostic-admin/patient-management/add',
      component: _components_admin_admin_dashboard_add_edit_patient_add_edit_patient_component__WEBPACK_IMPORTED_MODULE_37__["AddEditPatientComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    },
    /* Edit Patient Record */
    {
      path: 'diagnostic-admin/patient-record/edit/:_id',
      component: _components_admin_admin_dashboard_edit_patient_record_edit_patient_record_component__WEBPACK_IMPORTED_MODULE_13__["EditPatientRecordComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        patientData: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {}
        },
        endpoint: 'datalist'
      }
    },
    /* Diagnostic Admin Patient Record View */
    // {
    //   path: 'diagnostic-admin/view-patient-record/:_id',
    //   component: PatientReportViewComponent,
    //   //canActivate: [AuthguardService],
    //   resolve: { data: ResolveService },
    //   data: {
    //     requestcondition: {
    //       source: 'data_pece',
    //       condition: {}
    //     },
    //     endpoint: 'report-view'
    //   },
    // },

    /* Account Settings */
    {
      path: 'diagnostic-admin/account-settings',
      component: _components_common_account_settings_account_settings_component__WEBPACK_IMPORTED_MODULE_32__["AccountSettingsComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'diagnostic-admin/account-settings/change-password',
      component: _components_common_account_settings_change_password_change_password_component__WEBPACK_IMPORTED_MODULE_33__["ChangePasswordComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    },
    /* Account Settings For Doctor Group */
    {
      path: 'doctor-group/account-settings',
      component: _components_common_account_settings_account_settings_component__WEBPACK_IMPORTED_MODULE_32__["AccountSettingsComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'doctor-group/account-settings/change-password',
      component: _components_common_account_settings_change_password_change_password_component__WEBPACK_IMPORTED_MODULE_33__["ChangePasswordComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    },
    /* Account Settings For Distributor */
    {
      path: 'distributors/account-settings',
      component: _components_common_account_settings_account_settings_component__WEBPACK_IMPORTED_MODULE_32__["AccountSettingsComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'distributors/account-settings/change-password',
      component: _components_common_account_settings_change_password_change_password_component__WEBPACK_IMPORTED_MODULE_33__["ChangePasswordComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    },
    /* Tech Management */
    {
      path: 'diagnostic-admin/tech-management',
      component: _components_admin_tech_management_listing_tech_listing_tech_component__WEBPACK_IMPORTED_MODULE_24__["ListingTechComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'diagnostic-admin/tech-management/add',
      component: _components_admin_tech_management_add_edit_tech_add_edit_tech_component__WEBPACK_IMPORTED_MODULE_23__["AddEditTechComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'diagnostic-admin/tech-management/edit/:_id',
      component: _components_admin_tech_management_add_edit_tech_add_edit_tech_component__WEBPACK_IMPORTED_MODULE_23__["AddEditTechComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        techData: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {
            user_type: "tech"
          }
        },
        endpoint: 'datalist'
      }
    }, {
      path: 'doctor-group/tech-management',
      component: _components_admin_tech_management_listing_tech_listing_tech_component__WEBPACK_IMPORTED_MODULE_24__["ListingTechComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'doctor-group/tech-management/add',
      component: _components_admin_tech_management_add_edit_tech_add_edit_tech_component__WEBPACK_IMPORTED_MODULE_23__["AddEditTechComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'doctor-group/tech-management/edit/:_id',
      component: _components_admin_tech_management_add_edit_tech_add_edit_tech_component__WEBPACK_IMPORTED_MODULE_23__["AddEditTechComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        techData: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {
            user_type: "tech"
          }
        },
        endpoint: 'datalist'
      }
    }, {
      path: 'distributors/tech-management',
      component: _components_admin_tech_management_listing_tech_listing_tech_component__WEBPACK_IMPORTED_MODULE_24__["ListingTechComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'distributors/tech-management/add',
      component: _components_admin_tech_management_add_edit_tech_add_edit_tech_component__WEBPACK_IMPORTED_MODULE_23__["AddEditTechComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'distributors/tech-management/edit/:_id',
      component: _components_admin_tech_management_add_edit_tech_add_edit_tech_component__WEBPACK_IMPORTED_MODULE_23__["AddEditTechComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        techData: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {
            user_type: "tech"
          }
        },
        endpoint: 'datalist'
      }
    },
    /* Doctor Management */
    {
      path: 'diagnostic-admin/doctor-management',
      component: _components_admin_doctor_management_list_doctor_list_doctor_component__WEBPACK_IMPORTED_MODULE_20__["ListDoctorComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'diagnostic-admin/doctor-management/add',
      component: _components_admin_doctor_management_addedit_doctor_addedit_doctor_component__WEBPACK_IMPORTED_MODULE_19__["AddeditDoctorComponent"]
    }, {
      path: 'diagnostic-admin/doctor-management/edit/:_id',
      component: _components_admin_doctor_management_addedit_doctor_addedit_doctor_component__WEBPACK_IMPORTED_MODULE_19__["AddeditDoctorComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        data: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {
            user_type: "doctor"
          }
        },
        endpoint: 'datalist'
      }
    }, {
      path: 'distributors/doctor-management',
      component: _components_admin_doctor_management_list_doctor_list_doctor_component__WEBPACK_IMPORTED_MODULE_20__["ListDoctorComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'distributors/doctor-management/add',
      component: _components_admin_doctor_management_addedit_doctor_addedit_doctor_component__WEBPACK_IMPORTED_MODULE_19__["AddeditDoctorComponent"]
    }, {
      path: 'distributors/doctor-management/edit/:_id',
      component: _components_admin_doctor_management_addedit_doctor_addedit_doctor_component__WEBPACK_IMPORTED_MODULE_19__["AddeditDoctorComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        data: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {
            user_type: "doctor"
          }
        },
        endpoint: 'datalist'
      }
    }, {
      path: 'doctor-group/doctor-management',
      component: _components_admin_doctor_management_list_doctor_list_doctor_component__WEBPACK_IMPORTED_MODULE_20__["ListDoctorComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'doctor-group/doctor-management/add',
      component: _components_admin_doctor_management_addedit_doctor_addedit_doctor_component__WEBPACK_IMPORTED_MODULE_19__["AddeditDoctorComponent"]
    }, {
      path: 'doctor-group/doctor-management/edit/:_id',
      component: _components_admin_doctor_management_addedit_doctor_addedit_doctor_component__WEBPACK_IMPORTED_MODULE_19__["AddeditDoctorComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        data: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {
            user_type: "doctor"
          }
        },
        endpoint: 'datalist'
      }
    },
    /* Biller Management */
    {
      path: 'diagnostic-admin/biller-management',
      component: _components_admin_biller_management_listing_biller_listing_biller_component__WEBPACK_IMPORTED_MODULE_22__["ListingBillerComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'diagnostic-admin/biller-management/add',
      component: _components_admin_biller_management_add_edit_biller_add_edit_biller_component__WEBPACK_IMPORTED_MODULE_21__["AddEditBillerComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'diagnostic-admin/biller-management/edit/:_id',
      component: _components_admin_biller_management_add_edit_biller_add_edit_biller_component__WEBPACK_IMPORTED_MODULE_21__["AddEditBillerComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        billersingleData: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {
            user_type: "biller"
          }
        },
        endpoint: 'datalist'
      }
    }, {
      path: 'doctor-group/biller-management',
      component: _components_admin_biller_management_listing_biller_listing_biller_component__WEBPACK_IMPORTED_MODULE_22__["ListingBillerComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'doctor-group/biller-management/add',
      component: _components_admin_biller_management_add_edit_biller_add_edit_biller_component__WEBPACK_IMPORTED_MODULE_21__["AddEditBillerComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'doctor-group/biller-management/edit/:_id',
      component: _components_admin_biller_management_add_edit_biller_add_edit_biller_component__WEBPACK_IMPORTED_MODULE_21__["AddEditBillerComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        billersingleData: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {
            user_type: "biller"
          }
        },
        endpoint: 'datalist'
      }
    }, {
      path: 'distributors/biller-management',
      component: _components_admin_biller_management_listing_biller_listing_biller_component__WEBPACK_IMPORTED_MODULE_22__["ListingBillerComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'distributors/biller-management/add',
      component: _components_admin_biller_management_add_edit_biller_add_edit_biller_component__WEBPACK_IMPORTED_MODULE_21__["AddEditBillerComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'distributors/biller-management/edit/:_id',
      component: _components_admin_biller_management_add_edit_biller_add_edit_biller_component__WEBPACK_IMPORTED_MODULE_21__["AddEditBillerComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        billersingleData: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {
            user_type: "biller"
          }
        },
        endpoint: 'datalist'
      }
    },
    /* Faq */
    {
      path: 'diagnostic-admin/faq',
      component: _components_common_faq_view_faq_view_component__WEBPACK_IMPORTED_MODULE_56__["FaqViewComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        faqData: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_faq',
          condition: {
            users: "diagnostic_admin"
          }
        },
        endpoint: 'datalist'
      }
    },
    /****************** Diagnostic Admin Routes End *****************/

    /****************** Tech Route Start *****************/

    /* Tech Dashboard */
    {
      path: 'tech/dashboard',
      component: _components_tech_tech_dashboard_tech_dashboard_component__WEBPACK_IMPORTED_MODULE_34__["TechDashboardComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        techDashboardData: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {}
        },
        endpoint: 'tech-dashboard'
      }
    }, {
      path: 'tech/view-patient-record/:_id',
      component: _components_doctor_doctor_dashboard_patient_report_view_patient_report_view_component__WEBPACK_IMPORTED_MODULE_43__["PatientReportViewComponent"],
      //canActivate: [AuthguardService],
      resolve: {
        data: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {}
        },
        endpoint: 'report-view'
      }
    },
    /* Report */
    {
      path: 'tech/report/total-uploaded',
      component: _components_tech_report_details_report_details_component__WEBPACK_IMPORTED_MODULE_44__["ReportDetailsComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'tech/report/total-processed',
      component: _components_tech_report_details_report_details_component__WEBPACK_IMPORTED_MODULE_44__["ReportDetailsComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'tech/report/total-remained-processed',
      component: _components_tech_report_details_report_details_component__WEBPACK_IMPORTED_MODULE_44__["ReportDetailsComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    },
    /* Calender Management */
    {
      path: 'tech/manage-calender/manage-sehedule',
      component: _components_tech_manage_calender_manage_schedule_cal_home_cal_home_component__WEBPACK_IMPORTED_MODULE_35__["CalHomeComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        eventdayarrData: _services_calendar_service__WEBPACK_IMPORTED_MODULE_5__["CalendarService"]
      },
      data: {
        requestcondition: {
          source: 'events_eventdayarr_view',
          condition: {}
        },
        endpoint: 'view-event-eventdayarr'
      }
    }, {
      path: 'tech/manage-calender/manage-sehedule/:access_token/:refresh',
      component: _components_tech_manage_calender_manage_schedule_cal_sync_with_google_cal_sync_with_google_component__WEBPACK_IMPORTED_MODULE_62__["CalSyncWithGoogleComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'tech/manage-calender/manage-sehedule/view-slot-user',
      component: _components_tech_manage_calender_manage_schedule_cal_view_slot_cal_view_slot_component__WEBPACK_IMPORTED_MODULE_59__["CalViewSlotComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        eventdayarrData: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'events_eventdayarr_view',
          condition: {
            $and: [{
              event_type: 1
            }]
          }
        },
        endpoint: 'cal-view-event-eventdayarr'
      }
    }, {
      path: 'tech/manage-calender/manage-sehedule/create-availability',
      component: _components_tech_manage_calender_manage_schedule_cal_create_slot_cal_create_slot_component__WEBPACK_IMPORTED_MODULE_57__["CalCreateSlotComponent"]
    }, {
      path: 'tech/manage-calender/manage-sehedule/booked-events',
      component: _components_tech_manage_calender_manage_schedule_booked_events_booked_events_component__WEBPACK_IMPORTED_MODULE_63__["BookedEventsComponent"],
      resolve: {
        eventListData: _services_calendar_service__WEBPACK_IMPORTED_MODULE_5__["CalendarService"]
      },
      data: {
        requestcondition: {
          source: 'google-events',
          condition: {},
          sort: {
            type: 'asc',
            field: 'booking_date'
          }
        },
        endpoint: 'list-booked-events'
      }
    }, {
      path: 'tech/manage-calender/manage-sehedule/event-listing',
      component: _components_tech_manage_calender_manage_schedule_cal_event_listing_cal_event_listing_component__WEBPACK_IMPORTED_MODULE_58__["CalEventListingComponent"],
      resolve: {
        eventListData: _services_calendar_service__WEBPACK_IMPORTED_MODULE_5__["CalendarService"]
      },
      data: {
        requestcondition: {
          source: 'events',
          condition: {}
        },
        endpoint: 'datalist'
      }
    },
    /* My Appoinments */
    {
      path: 'tech/manage-calender/my-appoinments',
      component: _components_tech_manage_calender_my_appointments_list_list_component__WEBPACK_IMPORTED_MODULE_36__["ListComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    },
    /* Bulk Upload */
    {
      path: 'tech/patient-management/bulk-upload',
      component: _components_tech_patient_management_bulk_upload_bulk_upload_component__WEBPACK_IMPORTED_MODULE_38__["BulkUploadComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'tech/patient-management/bulk-upload/report-conformation/:upload_id',
      component: _components_tech_patient_management_report_conformation_report_conformation_component__WEBPACK_IMPORTED_MODULE_39__["ReportConformationComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'tech/health-risk-system-encounter',
      component: _components_doctor_doctor_dashboard_patient_report_view_healthrisk_system_encounter_healthrisk_system_encounter_component__WEBPACK_IMPORTED_MODULE_50__["HealthriskSystemEncounterComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'tech/system-superbill',
      component: _components_doctor_doctor_dashboard_patient_report_view_system_superbill_system_superbill_component__WEBPACK_IMPORTED_MODULE_51__["SystemSuperbillComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'tech/health-risk-analysis',
      component: _components_doctor_doctor_dashboard_patient_report_view_health_risk_analysis_health_risk_analysis_component__WEBPACK_IMPORTED_MODULE_52__["HealthRiskAnalysisComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'tech/health-risk-system-encounter',
      component: _components_doctor_doctor_dashboard_patient_report_view_healthrisk_system_encounter_healthrisk_system_encounter_component__WEBPACK_IMPORTED_MODULE_50__["HealthriskSystemEncounterComponent"]
    }, {
      path: 'tech/system-superbill',
      component: _components_doctor_doctor_dashboard_patient_report_view_system_superbill_system_superbill_component__WEBPACK_IMPORTED_MODULE_51__["SystemSuperbillComponent"]
    }, {
      path: 'tech/health-risk-analysis',
      component: _components_doctor_doctor_dashboard_patient_report_view_health_risk_analysis_health_risk_analysis_component__WEBPACK_IMPORTED_MODULE_52__["HealthRiskAnalysisComponent"],
      resolve: {
        data: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {}
        },
        endpoint: 'datalist'
      }
    },
    /* Faq */
    {
      path: 'tech/faq',
      component: _components_common_faq_view_faq_view_component__WEBPACK_IMPORTED_MODULE_56__["FaqViewComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        faqData: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_faq',
          condition: {
            users: "tech"
          }
        },
        endpoint: 'datalist'
      }
    },
    /* Account-Settings */
    {
      path: 'tech/account-settings',
      component: _components_common_account_settings_account_settings_component__WEBPACK_IMPORTED_MODULE_32__["AccountSettingsComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'tech/account-settings/change-password',
      component: _components_common_account_settings_change_password_change_password_component__WEBPACK_IMPORTED_MODULE_33__["ChangePasswordComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    },
    /****************** Tech Route End *****************/

    /*****************  Biller Route ****************/

    /* Biller Dashboard */
    {
      path: 'biller/dashboard',
      component: _components_biller_biller_dashboard_biller_dashboard_component__WEBPACK_IMPORTED_MODULE_40__["BillerDashboardComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        billerData: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {}
        },
        endpoint: 'biller-dashboard'
      }
    },
    /* Download report */
    {
      path: 'download/super-bill/:_id',
      component: _components_biller_download_superbiller_download_superbiller_component__WEBPACK_IMPORTED_MODULE_54__["DownloadSuperbillerComponent"]
    },
    /* Direct Download Reports */
    {
      path: 'direct-Download-Reports/super-bill/:_id',
      component: _components_biller_direct_download_reports_direct_download_reports_component__WEBPACK_IMPORTED_MODULE_41__["DirectDownloadReportsComponent"]
    }, // {
    //   path: 'biller/patient-record-report/:_id',
    //   component: PatientReportViewComponent,
    //   canActivate: [AuthguardService],
    //   resolve: { data: ResolveService },
    //   data: {
    //     requestcondition: {
    //       source: 'data_pece',
    //       condition: {}
    //     },
    //     endpoint: 'report-view'
    //   },
    // },

    /* Faq */
    {
      path: 'biller/faq',
      component: _components_common_faq_view_faq_view_component__WEBPACK_IMPORTED_MODULE_56__["FaqViewComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        faqData: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_faq',
          condition: {
            users: "biller"
          }
        },
        endpoint: 'datalist'
      }
    },
    /* Account Setting */
    {
      path: 'biller/account-settings',
      component: _components_common_account_settings_account_settings_component__WEBPACK_IMPORTED_MODULE_32__["AccountSettingsComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'biller/account-settings/change-password',
      component: _components_common_account_settings_change_password_change_password_component__WEBPACK_IMPORTED_MODULE_33__["ChangePasswordComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    },
    /******************  Biller Route End *******************/

    /*********** Doctor Route ***********/

    /* Doctor Dashboard */
    {
      path: 'doctor/dashboard',
      component: _components_doctor_doctor_dashboard_doctor_dashboard_component__WEBPACK_IMPORTED_MODULE_42__["DoctorDashboardComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        doctordata: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {}
        },
        endpoint: 'doctor-dashboard'
      }
    }, {
      path: 'doctor/report-jobtickets/:_id',
      component: _components_admin_admin_dashboard_hold_report_job_ticket_hold_report_job_ticket_component__WEBPACK_IMPORTED_MODULE_12__["HoldReportJobTicketComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        dataCount: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {}
        },
        endpoint: 'admin-dashboard'
      }
    }, {
      path: 'doctor/patient-record-report/:_id',
      component: _components_doctor_doctor_dashboard_patient_report_view_patient_report_view_component__WEBPACK_IMPORTED_MODULE_43__["PatientReportViewComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        data: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {}
        },
        endpoint: 'report-view'
      }
    },
    /* Biller Management */
    {
      path: 'doctor/biller-management',
      component: _components_admin_biller_management_listing_biller_listing_biller_component__WEBPACK_IMPORTED_MODULE_22__["ListingBillerComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        Billerdata: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {
            user_type: "biller",
            diagnostic_admin_id: {
              $exists: false
            }
          }
        },
        endpoint: 'datalist'
      }
    }, {
      path: 'doctor/biller-management/add',
      component: _components_admin_biller_management_add_edit_biller_add_edit_biller_component__WEBPACK_IMPORTED_MODULE_21__["AddEditBillerComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'doctor/biller-management/edit/:_id',
      component: _components_admin_biller_management_add_edit_biller_add_edit_biller_component__WEBPACK_IMPORTED_MODULE_21__["AddEditBillerComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        billersingleData: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {
            user_type: "biller",
            diagnostic_admin_id: {
              $exists: false
            }
          }
        },
        endpoint: 'datalist'
      }
    },
    /* Tech Management */
    {
      path: 'doctor/tech-management',
      component: _components_admin_tech_management_listing_tech_listing_tech_component__WEBPACK_IMPORTED_MODULE_24__["ListingTechComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        techDashboardData: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {
            user_type: "tech",
            diagnostic_admin_id: {
              $exists: false
            }
          }
        },
        endpoint: 'datalist'
      }
    }, {
      path: 'doctor/tech-management/add',
      component: _components_admin_tech_management_add_edit_tech_add_edit_tech_component__WEBPACK_IMPORTED_MODULE_23__["AddEditTechComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'doctor/tech-management/edit/:_id',
      component: _components_admin_tech_management_add_edit_tech_add_edit_tech_component__WEBPACK_IMPORTED_MODULE_23__["AddEditTechComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        techData: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {// user_type: "tech",
            // diagnostic_admin_id: { $exists: false }
          }
        },
        endpoint: 'datalist'
      }
    },
    /* Doctor Office Management */
    {
      path: 'doctor/doctor-office-management',
      component: _components_admin_doctor_office_management_doctor_office_management_component__WEBPACK_IMPORTED_MODULE_29__["DoctorOfficeManagementComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        data: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {
            "user_type": "doctor_office",
            "diagnostic_admin_id": {
              $exists: false
            }
          }
        },
        endpoint: 'datalist'
      }
    }, {
      path: 'doctor/doctor-office-management/add',
      component: _components_admin_doctor_office_management_add_edit_doctor_ofc_add_edit_doctor_ofc_component__WEBPACK_IMPORTED_MODULE_30__["AddEditDoctorOfcComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'doctor/doctor-office-management/edit/:_id',
      component: _components_admin_doctor_office_management_add_edit_doctor_ofc_add_edit_doctor_ofc_component__WEBPACK_IMPORTED_MODULE_30__["AddEditDoctorOfcComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        data: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {
            "user_type": "doctor_office",
            "diagnostic_admin_id": {
              $exists: false
            }
          }
        },
        endpoint: 'datalist'
      }
    },
    /* Signature Management */
    {
      path: 'doctor/signature-management',
      component: _components_doctor_signature_management_signature_management_component__WEBPACK_IMPORTED_MODULE_53__["SignatureManagementComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    },
    /* Faq */
    {
      path: 'doctor/faq',
      component: _components_common_faq_view_faq_view_component__WEBPACK_IMPORTED_MODULE_56__["FaqViewComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        faqData: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_faq',
          condition: {
            users: "doctor"
          }
        },
        endpoint: 'datalist'
      }
    },
    /* Account-Settings */
    {
      path: 'doctor/account-settings',
      component: _components_common_account_settings_account_settings_component__WEBPACK_IMPORTED_MODULE_32__["AccountSettingsComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'doctor/account-settings/change-password',
      component: _components_common_account_settings_change_password_change_password_component__WEBPACK_IMPORTED_MODULE_33__["ChangePasswordComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    },
    /****************** Doctor Route End *****************/

    /****************** Doctor Office Route Start *****************/

    /*Doctor Office Dashboard*/
    {
      path: 'doctor-office/dashboard',
      component: _components_doctor_office_doctor_office_dashboard_doctor_office_dashboard_component__WEBPACK_IMPORTED_MODULE_45__["DoctorOfficeDashboardComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        countData: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'google-events',
          condition: {}
        },
        endpoint: 'doctor-office-dashboard'
      }
    }, // {
    //   path: 'doctor-office/view-patient-record/:_id',
    //   component: PatientReportViewComponent,
    //   //canActivate: [AuthguardService],
    //   resolve: { data: ResolveService },
    //   data: {
    //     requestcondition: {
    //       source: 'data_pece',
    //       condition: {}
    //     },
    //     endpoint: 'report-view'
    //   },
    // },

    /*Doctor Office Dashboard*/
    {
      path: 'doctor-office/manage-appointments',
      component: _components_doctor_office_manage_appointments_appoinments_listing_appoinments_listing_component__WEBPACK_IMPORTED_MODULE_60__["AppoinmentsListingComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      // resolve: { bookedEventList: CalendarService },
      data: {
        requestcondition: {
          source: 'google-events',
          condition: {},
          sort: {
            type: 'asc',
            field: 'booking_date'
          }
        },
        endpoint: 'list-booked-events'
      }
    },
    /* Add Patient Manually */
    {
      path: 'doctor-office/create-patient/add-patient-manually',
      component: _components_doctor_office_add_patient_add_patient_manually_add_patient_manually_component__WEBPACK_IMPORTED_MODULE_79__["AddPatientManuallyComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        eventdayarrData: _services_calendar_service__WEBPACK_IMPORTED_MODULE_5__["CalendarService"]
      },
      data: {
        requestcondition: {
          source: 'events_eventdayarr_view',
          condition: {
            $or: [{
              event_type: 1
            }]
          }
        },
        endpoint: 'view-event-eventdayarr'
      }
    },
    /* Google Sync */
    {
      path: 'doctor-office/manage-appointments/:access_token/:refresh',
      component: _components_tech_manage_calender_manage_schedule_cal_sync_with_google_cal_sync_with_google_component__WEBPACK_IMPORTED_MODULE_62__["CalSyncWithGoogleComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    },
    /*Doctor Office Dashboard*/
    {
      path: 'doctor-office/manage-appointments/book-appoinment-now',
      component: _components_doctor_office_manage_appointments_book_appoinment_now_book_appoinment_now_component__WEBPACK_IMPORTED_MODULE_61__["BookAppoinmentNowComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'doctor-office/reschedule-appointment/:_id/:doctor_id',
      component: _components_booked_events_listing_reschedule_appointment_reschedule_appointment_component__WEBPACK_IMPORTED_MODULE_81__["RescheduleAppointmentComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    },
    /* Faq */
    {
      path: 'doctor-office/faq',
      component: _components_common_faq_view_faq_view_component__WEBPACK_IMPORTED_MODULE_56__["FaqViewComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        faqData: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_faq',
          condition: {
            users: "doctor_office"
          }
        },
        endpoint: 'datalist'
      }
    },
    /* Account-Settings */
    {
      path: 'doctor-office/account-settings',
      component: _components_common_account_settings_account_settings_component__WEBPACK_IMPORTED_MODULE_32__["AccountSettingsComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    }, {
      path: 'doctor-office/account-settings/change-password',
      component: _components_common_account_settings_change_password_change_password_component__WEBPACK_IMPORTED_MODULE_33__["ChangePasswordComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]]
    },
    /****************** Doctor Office Route End *****************/

    /****************** Sales Person *****************/

    /* Dashboard */
    {
      path: 'sales-person/dashboard',
      component: _components_sales_person_sales_person_dashboard_sales_person_dashboard_component__WEBPACK_IMPORTED_MODULE_47__["SalesPersonDashboardComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        dataCount: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {}
        },
        endpoint: 'sales-person-dashboard'
      }
    },
    /* Add New Doctor */
    {
      path: 'sales-person/add-doctor',
      component: _components_sales_person_add_new_doctor_add_new_doctor_component__WEBPACK_IMPORTED_MODULE_48__["AddNewDoctorComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        data: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {}
        },
        endpoint: 'sales-person/add-doctor-required-data'
      }
    },
    /* Edit Doctor */
    {
      path: 'sales-person/edit-doctor/:_id',
      component: _components_sales_person_add_new_doctor_add_new_doctor_component__WEBPACK_IMPORTED_MODULE_48__["AddNewDoctorComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        data: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_pece',
          condition: {}
        },
        endpoint: 'sales-person/add-doctor-required-data'
      }
    },
    /* Faq */
    {
      path: 'sales-person/faq',
      component: _components_common_faq_view_faq_view_component__WEBPACK_IMPORTED_MODULE_56__["FaqViewComponent"],
      canActivate: [_services_authguard_service__WEBPACK_IMPORTED_MODULE_3__["AuthguardService"]],
      resolve: {
        faqData: _services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]
      },
      data: {
        requestcondition: {
          source: 'data_faq',
          condition: {
            users: "sales_person"
          }
        },
        endpoint: 'datalist'
      }
    },
    /*Training Management start*/
    //---------lazy load training module-----------//
    {
      path: 'admin/training',
      loadChildren: function loadChildren() {
        return Promise.resolve().then(__webpack_require__.bind(null,
        /*! ../components/lazyload-training/training.module */
        "./src/app/components/lazyload-training/training.module.ts")).then(function (t) {
          return t.TrainingModule;
        });
      }
    }, //---------lazy load training module-----------//
    // {
    //   path:'admin/manage-training/add',
    //   component:AddEditTrainingComponent
    // },
    // {
    //   path:'admin/manage-training/edit/:id',
    //   component:AddEditTrainingComponent
    // },
    // {
    //   path:'admin/manage-training/list',
    //   component:ListingTrainingComponent,
    //   canActivate: [AuthguardService],
    //   resolve: { trainingdata: TrainingService },
    //   data: {
    //     requestcondition: {
    //       source: '',
    //       condition: {'is_trash':{$ne:1}}
    //     },
    //     endpoint: 'gettrainingcategorydata'
    //   },
    // },
    // {
    //   path:'admin/manage-lesson/add',
    //   component:AddEditLessonComponent
    // },
    // {
    //   path:'admin/manage-lesson/edit/:id',
    //   component:AddEditLessonComponent
    // },
    // {
    //   path:'admin/manage-lesson/list',
    //   component:ListLessonComponent,
    //   canActivate: [AuthguardService],
    //   resolve: { lessionData: TrainingService },
    //   data: {
    //     requestcondition: {
    //       source: '',
    //       condition: {'is_trash':{$ne:1}}
    //     },
    //     endpoint: 'getlessondata'
    //   },
    // },

    /*Training Management end*/

    /* test component route start here */
    {
      path: 'test',
      component: _components_test_test_component__WEBPACK_IMPORTED_MODULE_49__["TestComponent"]
    }, {
      path: 'encounter-form-status',
      component: _components_common_encounter_form_rules_encounter_form_rules_component__WEBPACK_IMPORTED_MODULE_82__["EncounterFormRulesComponent"]
    },
    /* Error Page Route Start */
    {
      path: 'error/404',
      component: _components_common_not_found_error_not_found_error_component__WEBPACK_IMPORTED_MODULE_46__["NotFoundErrorComponent"]
    }, {
      path: '**',
      component: _components_common_not_found_error_not_found_error_component__WEBPACK_IMPORTED_MODULE_46__["NotFoundErrorComponent"]
    }
    /* Error Page Route End */
    ];

    var AppRoutingModule = function AppRoutingModule() {
      _classCallCheck(this, AppRoutingModule);
    };

    AppRoutingModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
      imports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"].forRoot(routes)],
      exports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"]],
      providers: [_services_resolve_service__WEBPACK_IMPORTED_MODULE_4__["ResolveService"]]
    })], AppRoutingModule);
    /***/
  },

  /***/
  "./src/app/modules/materialModule.ts":
  /*!*******************************************!*\
    !*** ./src/app/modules/materialModule.ts ***!
    \*******************************************/

  /*! exports provided: DemoMaterialModule */

  /***/
  function srcAppModulesMaterialModuleTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DemoMaterialModule", function () {
      return DemoMaterialModule;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/cdk/a11y */
    "./node_modules/@angular/cdk/esm2015/a11y.js");
    /* harmony import */


    var _angular_cdk_drag_drop__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/cdk/drag-drop */
    "./node_modules/@angular/cdk/esm2015/drag-drop.js");
    /* harmony import */


    var _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/cdk/portal */
    "./node_modules/@angular/cdk/esm2015/portal.js");
    /* harmony import */


    var _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/cdk/scrolling */
    "./node_modules/@angular/cdk/esm2015/scrolling.js");
    /* harmony import */


    var _angular_cdk_stepper__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/cdk/stepper */
    "./node_modules/@angular/cdk/esm2015/stepper.js");
    /* harmony import */


    var _angular_cdk_table__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/cdk/table */
    "./node_modules/@angular/cdk/esm2015/table.js");
    /* harmony import */


    var _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! @angular/cdk/tree */
    "./node_modules/@angular/cdk/esm2015/tree.js");
    /* harmony import */


    var _angular_material_autocomplete__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! @angular/material/autocomplete */
    "./node_modules/@angular/material/esm2015/autocomplete.js");
    /* harmony import */


    var _angular_material_badge__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! @angular/material/badge */
    "./node_modules/@angular/material/esm2015/badge.js");
    /* harmony import */


    var _angular_material_bottom_sheet__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
    /*! @angular/material/bottom-sheet */
    "./node_modules/@angular/material/esm2015/bottom-sheet.js");
    /* harmony import */


    var _angular_material_button__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
    /*! @angular/material/button */
    "./node_modules/@angular/material/esm2015/button.js");
    /* harmony import */


    var _angular_material_button_toggle__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
    /*! @angular/material/button-toggle */
    "./node_modules/@angular/material/esm2015/button-toggle.js");
    /* harmony import */


    var _angular_material_card__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
    /*! @angular/material/card */
    "./node_modules/@angular/material/esm2015/card.js");
    /* harmony import */


    var _angular_material_checkbox__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
    /*! @angular/material/checkbox */
    "./node_modules/@angular/material/esm2015/checkbox.js");
    /* harmony import */


    var _angular_material_chips__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
    /*! @angular/material/chips */
    "./node_modules/@angular/material/esm2015/chips.js");
    /* harmony import */


    var _angular_material_stepper__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
    /*! @angular/material/stepper */
    "./node_modules/@angular/material/esm2015/stepper.js");
    /* harmony import */


    var _angular_material_datepicker__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
    /*! @angular/material/datepicker */
    "./node_modules/@angular/material/esm2015/datepicker.js");
    /* harmony import */


    var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(
    /*! @angular/material/dialog */
    "./node_modules/@angular/material/esm2015/dialog.js");
    /* harmony import */


    var _angular_material_divider__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(
    /*! @angular/material/divider */
    "./node_modules/@angular/material/esm2015/divider.js");
    /* harmony import */


    var _angular_material_expansion__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(
    /*! @angular/material/expansion */
    "./node_modules/@angular/material/esm2015/expansion.js");
    /* harmony import */


    var _angular_material_grid_list__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(
    /*! @angular/material/grid-list */
    "./node_modules/@angular/material/esm2015/grid-list.js");
    /* harmony import */


    var _angular_material_icon__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(
    /*! @angular/material/icon */
    "./node_modules/@angular/material/esm2015/icon.js");
    /* harmony import */


    var _angular_material_input__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(
    /*! @angular/material/input */
    "./node_modules/@angular/material/esm2015/input.js");
    /* harmony import */


    var _angular_material_list__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(
    /*! @angular/material/list */
    "./node_modules/@angular/material/esm2015/list.js");
    /* harmony import */


    var _angular_material_menu__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(
    /*! @angular/material/menu */
    "./node_modules/@angular/material/esm2015/menu.js");
    /* harmony import */


    var _angular_material_core__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(
    /*! @angular/material/core */
    "./node_modules/@angular/material/esm2015/core.js");
    /* harmony import */


    var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(
    /*! @angular/material/paginator */
    "./node_modules/@angular/material/esm2015/paginator.js");
    /* harmony import */


    var _angular_material_progress_bar__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(
    /*! @angular/material/progress-bar */
    "./node_modules/@angular/material/esm2015/progress-bar.js");
    /* harmony import */


    var _angular_material_progress_spinner__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(
    /*! @angular/material/progress-spinner */
    "./node_modules/@angular/material/esm2015/progress-spinner.js");
    /* harmony import */


    var _angular_material_radio__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(
    /*! @angular/material/radio */
    "./node_modules/@angular/material/esm2015/radio.js");
    /* harmony import */


    var _angular_material_select__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(
    /*! @angular/material/select */
    "./node_modules/@angular/material/esm2015/select.js");
    /* harmony import */


    var _angular_material_sidenav__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(
    /*! @angular/material/sidenav */
    "./node_modules/@angular/material/esm2015/sidenav.js");
    /* harmony import */


    var _angular_material_slider__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(
    /*! @angular/material/slider */
    "./node_modules/@angular/material/esm2015/slider.js");
    /* harmony import */


    var _angular_material_slide_toggle__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(
    /*! @angular/material/slide-toggle */
    "./node_modules/@angular/material/esm2015/slide-toggle.js");
    /* harmony import */


    var _angular_material_snack_bar__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(
    /*! @angular/material/snack-bar */
    "./node_modules/@angular/material/esm2015/snack-bar.js");
    /* harmony import */


    var _angular_material_sort__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(
    /*! @angular/material/sort */
    "./node_modules/@angular/material/esm2015/sort.js");
    /* harmony import */


    var _angular_material_table__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(
    /*! @angular/material/table */
    "./node_modules/@angular/material/esm2015/table.js");
    /* harmony import */


    var _angular_material_tabs__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(
    /*! @angular/material/tabs */
    "./node_modules/@angular/material/esm2015/tabs.js");
    /* harmony import */


    var _angular_material_toolbar__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(
    /*! @angular/material/toolbar */
    "./node_modules/@angular/material/esm2015/toolbar.js");
    /* harmony import */


    var _angular_material_tooltip__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(
    /*! @angular/material/tooltip */
    "./node_modules/@angular/material/esm2015/tooltip.js");
    /* harmony import */


    var _angular_material_tree__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(
    /*! @angular/material/tree */
    "./node_modules/@angular/material/esm2015/tree.js");

    var DemoMaterialModule = function DemoMaterialModule() {
      _classCallCheck(this, DemoMaterialModule);
    };

    DemoMaterialModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
      exports: [_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_2__["A11yModule"], _angular_cdk_stepper__WEBPACK_IMPORTED_MODULE_6__["CdkStepperModule"], _angular_cdk_table__WEBPACK_IMPORTED_MODULE_7__["CdkTableModule"], _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_8__["CdkTreeModule"], _angular_cdk_drag_drop__WEBPACK_IMPORTED_MODULE_3__["DragDropModule"], _angular_material_autocomplete__WEBPACK_IMPORTED_MODULE_9__["MatAutocompleteModule"], _angular_material_badge__WEBPACK_IMPORTED_MODULE_10__["MatBadgeModule"], _angular_material_bottom_sheet__WEBPACK_IMPORTED_MODULE_11__["MatBottomSheetModule"], _angular_material_button__WEBPACK_IMPORTED_MODULE_12__["MatButtonModule"], _angular_material_button_toggle__WEBPACK_IMPORTED_MODULE_13__["MatButtonToggleModule"], _angular_material_card__WEBPACK_IMPORTED_MODULE_14__["MatCardModule"], _angular_material_checkbox__WEBPACK_IMPORTED_MODULE_15__["MatCheckboxModule"], _angular_material_chips__WEBPACK_IMPORTED_MODULE_16__["MatChipsModule"], _angular_material_stepper__WEBPACK_IMPORTED_MODULE_17__["MatStepperModule"], _angular_material_datepicker__WEBPACK_IMPORTED_MODULE_18__["MatDatepickerModule"], _angular_material_dialog__WEBPACK_IMPORTED_MODULE_19__["MatDialogModule"], _angular_material_divider__WEBPACK_IMPORTED_MODULE_20__["MatDividerModule"], _angular_material_expansion__WEBPACK_IMPORTED_MODULE_21__["MatExpansionModule"], _angular_material_grid_list__WEBPACK_IMPORTED_MODULE_22__["MatGridListModule"], _angular_material_icon__WEBPACK_IMPORTED_MODULE_23__["MatIconModule"], _angular_material_input__WEBPACK_IMPORTED_MODULE_24__["MatInputModule"], _angular_material_list__WEBPACK_IMPORTED_MODULE_25__["MatListModule"], _angular_material_menu__WEBPACK_IMPORTED_MODULE_26__["MatMenuModule"], _angular_material_core__WEBPACK_IMPORTED_MODULE_27__["MatNativeDateModule"], _angular_material_paginator__WEBPACK_IMPORTED_MODULE_28__["MatPaginatorModule"], _angular_material_progress_bar__WEBPACK_IMPORTED_MODULE_29__["MatProgressBarModule"], _angular_material_progress_spinner__WEBPACK_IMPORTED_MODULE_30__["MatProgressSpinnerModule"], _angular_material_radio__WEBPACK_IMPORTED_MODULE_31__["MatRadioModule"], _angular_material_core__WEBPACK_IMPORTED_MODULE_27__["MatRippleModule"], _angular_material_select__WEBPACK_IMPORTED_MODULE_32__["MatSelectModule"], _angular_material_sidenav__WEBPACK_IMPORTED_MODULE_33__["MatSidenavModule"], _angular_material_slider__WEBPACK_IMPORTED_MODULE_34__["MatSliderModule"], _angular_material_slide_toggle__WEBPACK_IMPORTED_MODULE_35__["MatSlideToggleModule"], _angular_material_snack_bar__WEBPACK_IMPORTED_MODULE_36__["MatSnackBarModule"], _angular_material_sort__WEBPACK_IMPORTED_MODULE_37__["MatSortModule"], _angular_material_table__WEBPACK_IMPORTED_MODULE_38__["MatTableModule"], _angular_material_tabs__WEBPACK_IMPORTED_MODULE_39__["MatTabsModule"], _angular_material_toolbar__WEBPACK_IMPORTED_MODULE_40__["MatToolbarModule"], _angular_material_tooltip__WEBPACK_IMPORTED_MODULE_41__["MatTooltipModule"], _angular_material_tree__WEBPACK_IMPORTED_MODULE_42__["MatTreeModule"], _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_4__["PortalModule"], _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_5__["ScrollingModule"]]
    })], DemoMaterialModule);
    /**  Copyright 2019 Google Inc. All Rights Reserved.
        Use of this source code is governed by an MIT-style license that
        can be found in the LICENSE file at http://angular.io/license */

    /***/
  },

  /***/
  "./src/app/services/authguard.service.ts":
  /*!***********************************************!*\
    !*** ./src/app/services/authguard.service.ts ***!
    \***********************************************/

  /*! exports provided: AuthguardService */

  /***/
  function srcAppServicesAuthguardServiceTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AuthguardService", function () {
      return AuthguardService;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");

    var AuthguardService = /*#__PURE__*/function () {
      function AuthguardService(cookie, _router) {
        _classCallCheck(this, AuthguardService);

        this.cookie = cookie;
        this._router = _router;
      }

      _createClass(AuthguardService, [{
        key: "canActivate",
        value: function canActivate(next, state) {
          var getToken = this.cookie.get('jwtToken');

          if (getToken) {
            var allData = this.cookie.getAll();
            var userData = JSON.parse(allData.user_details);
            /* Login User */

            switch (next.url[0].path) {
              case 'login':
              case 'forget-password':
                this._router.navigate([userData.user_type.replace("_", "-") + '/dashboard']);

                break;

              default:
                if (userData.user_type == 'doctor_office' && next.url[0].path == 'doctor-office') {
                  return true;
                } else {
                  if (userData.user_type == 'diagnostic_admin' && next.url[0].path == 'diagnostic-admin') {
                    return true;
                  } else {
                    if (userData.user_type == 'sales_person' && next.url[0].path == 'sales-person') {
                      return true;
                    } else {
                      if (userData.user_type == 'doctor_group' && next.url[0].path == 'doctor-group') {
                        return true;
                      } else {
                        if (userData.user_type == 'admin_biller' && next.url[0].path == 'admin-biller') {
                          return true;
                        } else {
                          if (next.url[0].path == userData.user_type) {
                            return true;
                          } else {
                            this._router.navigate([userData.user_type.replace("_", "-") + '/dashboard']);
                          }
                        }
                      }
                    }
                  }
                }

                break;
            }
          } else {
            /* Login User */
            switch (next.url[0].path) {
              case 'login':
              case 'forget-password':
                return true;
                break;

              default:
                this._router.navigate(['/login']);

                break;
            }
          }
        }
      }]);

      return AuthguardService;
    }();

    AuthguardService.ctorParameters = function () {
      return [{
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__["CookieService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"]
      }];
    };

    AuthguardService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
      providedIn: 'root'
    })], AuthguardService);
    /***/
  },

  /***/
  "./src/app/services/calendar.service.ts":
  /*!**********************************************!*\
    !*** ./src/app/services/calendar.service.ts ***!
    \**********************************************/

  /*! exports provided: CalendarService */

  /***/
  function srcAppServicesCalendarServiceTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CalendarService", function () {
      return CalendarService;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_common_http__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/common/http */
    "./node_modules/@angular/common/fesm2015/http.js");
    /* harmony import */


    var _http_service_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./http-service.service */
    "./src/app/services/http-service.service.ts");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../../environments/environment */
    "./src/environments/environment.ts");
    /* harmony import */


    var rxjs_operators__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! rxjs/operators */
    "./node_modules/rxjs/_esm2015/operators/index.js");

    var CalendarService = /*#__PURE__*/function () {
      function CalendarService(http, _apiService, router, cookieService) {
        _classCallCheck(this, CalendarService);

        this.http = http;
        this._apiService = _apiService;
        this.router = router;
        this.cookieService = cookieService;
      }

      _createClass(CalendarService, [{
        key: "resolve",
        value: function resolve(route, state) {
          var _this234 = this;

          /* will come into play while editing otherwise no effect */
          var requestData = route.data.requestcondition; //requestData.condition = Object.assign(requestData.condition, route.params);
          //requestData.condition = requestData.condition;

          return new Promise(function (resolve) {
            if (typeof route.data.requestcondition.source != 'string') {
              var data;

              (function () {
                var returnData = {};

                var _loop6 = function _loop6(i) {
                  data = {
                    source: route.data.requestcondition.source[i],
                    condition: {}
                  };
                  /* If endpoint is 'view-event-eventdayarr' then include 'timezone' with data */

                  if (route.data.endpoint == 'view-event-eventdayarr' && _this234.cookieService.check('timezone')) {
                    data.timezone = _this234.cookieService.get('timezone');
                  }
                  /* If endpoint is 'view-event-eventdayarr' and user is not an admin */


                  if (route.data.endpoint == 'view-event-eventdayarr' && _this234.cookieService.check('user_details')) {
                    data.condition = JSON.parse(_this234.cookieService.get('user_details')).email;
                  }

                  _this234.ResolveViaPost(data, route.data.endpoint).subscribe(function (api_object) {
                    if (api_object) {
                      returnData[route.data.requestcondition.source[i]] = api_object;
                    } else {
                      // id not found
                      return true;
                    }
                  });
                };

                for (var i = 0; i <= route.data.requestcondition.source.length - 1; i++) {
                  _loop6(i);
                }

                setTimeout(function () {
                  return resolve(returnData);
                }, 3000);
              })();
            } else {
              /* If endpoint is 'view-event-eventdayarr' then include 'timezone' with data */
              if (route.data.endpoint == 'view-event-eventdayarr' && _this234.cookieService.check('timezone')) {
                route.data.requestcondition.timezone = _this234.cookieService.get('timezone');
              }
              /* If user is not an admin */


              if (_this234.cookieService.check('user_details') && JSON.parse(_this234.cookieService.get('user_details')).user_type == 'tech') {
                route.data.requestcondition.condition = Object.assign(route.data.requestcondition.condition, {
                  userid: {
                    $in: [JSON.parse(_this234.cookieService.get('user_details'))._id]
                  }
                }); // route.data.requestcondition.condition.$or.push({userid: JSON.parse(this.cookieService.get('user_details'))._id});
              } else {
                route.data.requestcondition.condition = Object.assign(route.data.requestcondition.condition, {
                  userid: {
                    $in: JSON.parse(_this234.cookieService.get('user_details')).tech_id
                  }
                });
              }

              _this234.ResolveViaPost(route.data.requestcondition, route.data.endpoint).subscribe(function (api_object) {
                if (api_object) {
                  return resolve(api_object);
                } else {
                  // id not found
                  return true;
                }
              });
            }
          });
        }
      }, {
        key: "ResolveViaPost",
        value: function ResolveViaPost(requestdata, endpoint) {
          var jwtToken = this.cookieService.get('jwtToken');
          /* set common header */

          var httpOptions = {
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_4__["HttpHeaders"]({
              'Content-Type': 'application/json',
              'Authorization': jwtToken
            })
          };
          requestdata['token'] = jwtToken;
          return this.http.post(_environments_environment__WEBPACK_IMPORTED_MODULE_6__["environment"].calendarApi + endpoint, JSON.stringify(requestdata), httpOptions).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_7__["map"])(function (res) {
            return res;
          }));
        }
      }]);

      return CalendarService;
    }();

    CalendarService.ctorParameters = function () {
      return [{
        type: _angular_common_http__WEBPACK_IMPORTED_MODULE_4__["HttpClient"]
      }, {
        type: _http_service_service__WEBPACK_IMPORTED_MODULE_5__["HttpServiceService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__["CookieService"]
      }];
    };

    CalendarService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
      providedIn: 'root'
    })], CalendarService);
    /***/
  },

  /***/
  "./src/app/services/http-loader.service.ts":
  /*!*************************************************!*\
    !*** ./src/app/services/http-loader.service.ts ***!
    \*************************************************/

  /*! exports provided: HttpLoaderService */

  /***/
  function srcAppServicesHttpLoaderServiceTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "HttpLoaderService", function () {
      return HttpLoaderService;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! rxjs */
    "./node_modules/rxjs/_esm2015/index.js");

    var HttpLoaderService = function HttpLoaderService() {
      _classCallCheck(this, HttpLoaderService);

      this.isLoading = new rxjs__WEBPACK_IMPORTED_MODULE_2__["BehaviorSubject"](false);
    };

    HttpLoaderService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
      providedIn: 'root'
    })], HttpLoaderService);
    /***/
  },

  /***/
  "./src/app/services/http-service.service.ts":
  /*!**************************************************!*\
    !*** ./src/app/services/http-service.service.ts ***!
    \**************************************************/

  /*! exports provided: HttpServiceService */

  /***/
  function srcAppServicesHttpServiceServiceTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "HttpServiceService", function () {
      return HttpServiceService;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _angular_common_http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/common/http */
    "./node_modules/@angular/common/fesm2015/http.js");
    /* harmony import */


    var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! rxjs/operators */
    "./node_modules/rxjs/_esm2015/operators/index.js");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../../environments/environment */
    "./src/environments/environment.ts");

    var HttpServiceService = /*#__PURE__*/function () {
      function HttpServiceService(http, CookieService) {
        _classCallCheck(this, HttpServiceService);

        this.http = http;
        this.CookieService = CookieService;
        this.baseUrl = _environments_environment__WEBPACK_IMPORTED_MODULE_5__["environment"].apiBaseUrl;
        this.baseUrl1 = _environments_environment__WEBPACK_IMPORTED_MODULE_5__["environment"].apiBaseUrl1;
        this.calendarApiUrl = _environments_environment__WEBPACK_IMPORTED_MODULE_5__["environment"].calendarApi;
        this.jwtToken = "";
        this.jwtToken = this.CookieService.get('jwtToken');
      }
      /* read site setting data */


      _createClass(HttpServiceService, [{
        key: "getSiteSettingData",
        value: function getSiteSettingData(url) {
          return this.http.get(url);
        }
        /* call api via post method */

      }, {
        key: "httpViaPost",
        value: function httpViaPost(endpoint, jsonData) {
          this.jwtToken = this.CookieService.get('jwtToken');
          /* set common header */

          var httpOptions = {
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
              'Content-Type': 'application/json',
              'Authorization': this.jwtToken
            })
          };
          return this.http.post(this.baseUrl + endpoint, jsonData, httpOptions);
        }
        /* call api via post method */

      }, {
        key: "httpViaPostbyApi1",
        value: function httpViaPostbyApi1(endpoint, jsonData) {
          this.jwtToken = this.CookieService.get('jwtToken');
          /* set common header */

          var httpOptions = {
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
              'Content-Type': 'application/json',
              'Authorization': this.jwtToken
            })
          };
          return this.http.post(this.baseUrl1 + endpoint, jsonData, httpOptions);
        } //ip track api function

      }, {
        key: "getclientip",
        value: function getclientip() {
          var result = this.http.get("https://ipinfo.io/?format=json&token=9797c42b93078a").pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (res) {
            return res;
          }));
          return result;
        }
        /* call api via get method */

      }, {
        key: "httpViaGet",
        value: function httpViaGet(endpoint, jsonData) {
          this.jwtToken = this.CookieService.get('jwtToken');
          /* set common header */

          var httpOptions = {
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
              'Content-Type': 'application/json',
              'Authorization': this.jwtToken
            })
          };
          return this.http.get(this.baseUrl + endpoint, jsonData);
        }
        /* call api via post method for calendar api */

      }, {
        key: "postRequest",
        value: function postRequest(endpoint, jsonData) {
          this.jwtToken = this.CookieService.get('jwtToken');
          /* set common header */

          var httpOptions = {
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
              'Content-Type': 'application/json',
              'Authorization': this.jwtToken
            })
          };
          return this.http.post(this.calendarApiUrl + endpoint, jsonData, httpOptions);
        }
        /* Resolve service */

      }, {
        key: "ResolveViaPost",
        value: function ResolveViaPost(requestdata, endpoint) {
          this.jwtToken = this.CookieService.get('jwtToken');
          /* set common header */

          var httpOptions = {
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
              'Content-Type': 'application/json',
              'Authorization': this.jwtToken
            })
          };
          requestdata['token'] = this.jwtToken;
          return this.http.post(this.baseUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (res) {
            return res;
          }));
        }
      }, {
        key: "checkingDuplicateEmail",
        value: function checkingDuplicateEmail(requestdata) {
          this.jwtToken = this.CookieService.get('jwtToken');
          var data = {
            "email": requestdata,
            "source": "users"
          };
          /* set common header */

          var httpOptions = {
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
              'Content-Type': 'application/json',
              'Authorization': this.CookieService.get('jwtToken')
            })
          };
          return this.http.post(this.baseUrl + 'duplicate-email-checking', JSON.stringify(data), httpOptions).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (res) {
            return res;
          }));
        }
        /* call api via get method */

      }, {
        key: "httpViaGetExt",
        value: function httpViaGetExt(url, jsonData) {
          this.jwtToken = this.CookieService.get('jwtToken');
          /* set common header */

          var httpOptions = {
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
              'Content-Type': 'application/json',
              'Authorization': this.jwtToken
            })
          };
          return this.http.get(url, jsonData);
        }
      }, {
        key: "getRequest",
        value: function getRequest(url, data) {
          return this.http.get(this.baseUrl + url, data);
        }
      }, {
        key: "get",
        value: function get(url) {
          return this.http.get(url);
        }
      }]);

      return HttpServiceService;
    }();

    HttpServiceService.ctorParameters = function () {
      return [{
        type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_2__["CookieService"]
      }];
    };

    HttpServiceService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
      providedIn: 'root'
    })], HttpServiceService);
    /***/
  },

  /***/
  "./src/app/services/resolve.service.ts":
  /*!*********************************************!*\
    !*** ./src/app/services/resolve.service.ts ***!
    \*********************************************/

  /*! exports provided: ResolveService */

  /***/
  function srcAppServicesResolveServiceTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ResolveService", function () {
      return ResolveService;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _http_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./http-service.service */
    "./src/app/services/http-service.service.ts");

    var ResolveService = /*#__PURE__*/function () {
      function ResolveService(cookies, _apiService, router) {
        _classCallCheck(this, ResolveService);

        this.cookies = cookies;
        this._apiService = _apiService;
        this.router = router;
      }

      _createClass(ResolveService, [{
        key: "resolve",
        value: function resolve(route, state) {
          var _this235 = this;

          /* will come into play while editing otherwise no effect */
          var requestData = route.data.requestcondition;
          /* Condition for all dashboard */

          var allData = this.cookies.getAll();
          var userData = JSON.parse(allData.user_details);
          /* This one is for Tech Dashboard Start */

          if (route.url[0].path == 'admin') {
            switch (route.url[1].path) {
              case 'dashboard':
                requestData.condition['admin_id'] = userData._id;
                break;
            }
          }
          /* This one is for Tech Dashboard End */

          /* This one is for Tech Dashboard Start */


          if (route.url[0].path == 'tech') {
            switch (route.url[1].path) {
              case 'dashboard':
                requestData.condition['tech_id'] = userData._id;
                break;

              case 'manage-calender':
                if (route.url[2].path == 'manage-sehedule') {
                  requestData.condition['userid'] = userData._id;
                }

                break;
            }
          }
          /* This one is for Tech Dashboard End */

          /* This one is for Doctor Dashboard Start */


          if (route.url[0].path == 'doctor') {
            switch (route.url[1].path) {
              case 'dashboard':
                requestData.condition['doctor_id'] = userData._id;
                break;

              default:
                //requestData.condition['doctor_id_object'] = userData._id;
                break;
            }
          }
          /* This one is for Doctor Dashboard End */

          /* This one is for Biller Dashboard Start */


          if (route.url[0].path == 'biller') {
            switch (route.url[1].path) {
              case 'dashboard':
                requestData.condition['biller_id'] = userData._id;
                break;
            }
          }
          /* This one is for Biller Dashboard End */

          /* This one is for Doctor Office Start */


          if (route.url[0].path == 'doctor-office') {
            switch (route.url[1].path) {
              case 'dashboard':
                requestData.condition['doctor_office_id'] = userData._id;
                break;

              case 'manage-appointments':
                requestData.condition['tech_id'] = userData.tech_id;
                requestData.condition['closeremail'] = userData.email;
                break;
            }
          }
          /* This one is for Doctor Office End */

          /* This one is for Diagnostic Admin Start */


          if (route.url[0].path == 'diagnostic-admin') {
            switch (route.url[1].path) {
              case 'dashboard':
                requestData.condition['diagnostic_admin_id'] = userData._id;
                break;
            }

            ;
          }
          /* This one is for Diagnostic Admin End */

          /* This one is for Doctor Group Start */


          if (route.url[0].path == 'doctor-group') {
            switch (route.url[1].path) {
              case 'dashboard':
                requestData.condition['doctor_group_id'] = userData._id;
                break;
            }
          }
          /* This one is for Doctor Group End */

          /* This one is for Distributors Start */


          if (route.url[0].path == 'distributors') {
            switch (route.url[1].path) {
              case 'dashboard':
                requestData.condition['distributors_id'] = userData._id;
                break;
            }
          }
          /* This one is for Distributors End */

          /* This one is for Sales Person Start */


          if (route.url[0].path == 'sales-person') {
            switch (route.url[1].path) {
              case 'dashboard':
                requestData.condition['sales_person_id'] = userData._id;
                requestData.condition['parent_type'] = userData.parent_type;
                requestData.condition['parent_id'] = userData.parent_id;
                break;

              case 'add-doctor':
                requestData.condition['sales_person_id'] = userData._id;
                requestData.condition['parent_type'] = userData.parent_type;
                requestData.condition['parent_id'] = userData.parent_id;
                break;

              case 'edit-doctor':
                requestData.condition['sales_person_id'] = userData._id;
                requestData.condition['parent_type'] = userData.parent_type;
                requestData.condition['parent_id'] = userData.parent_id;
                break;
            }
          }
          /* This one is for Sales Person End */

          /* This one is for Admin Biller Start */


          if (route.url[0].path == 'admin-biller') {
            switch (route.url[1].path) {
              case 'dashboard':
                requestData.condition['admin_biller_id'] = userData._id;
                break;
            }
          }
          /* This one is for Admin Biller End */
          /////////////////////////////////////////////////////////////////////

          /* If send any query params */


          requestData.condition = Object.assign(requestData.condition, route.params);
          return new Promise(function (resolve) {
            if (typeof route.data.requestcondition.source != 'string') {
              var returnData = {};

              var _loop7 = function _loop7(i) {
                var data = {
                  source: route.data.requestcondition.source[i],
                  condition: {}
                };

                _this235._apiService.ResolveViaPost(data, route.data.endpoint).subscribe(function (api_object) {
                  if (api_object) {
                    returnData[route.data.requestcondition.source[i]] = api_object;
                    return resolve(returnData);
                  } else {
                    // id not found
                    return true;
                  }
                });
              };

              for (var i = 0; i < route.data.requestcondition.source.length; i++) {
                _loop7(i);
              }
            } else {
              /* If endpoint is 'view-event-eventdayarr' then include 'timezone' with data */
              if (route.data.endpoint == 'view-event-eventdayarr' && _this235.cookies.check('timezone')) {
                route.data.requestcondition.timezone = _this235.cookies.get('timezone');
              }
              /* If user is not an admin */
              // if (this.cookies.check('user_details') &&
              //   JSON.parse(this.cookies.get('user_details')).user_type != 'admin') {
              //   route.data.requestcondition.condition = Object.assign(
              //     route.data.requestcondition.condition, {useremail: JSON.parse(this.cookies.get('user_details')).email}
              //   );
              // }


              _this235._apiService.ResolveViaPost(route.data.requestcondition, route.data.endpoint).subscribe(function (api_object) {
                if (api_object) {
                  return resolve(api_object);
                } else {
                  // id not found
                  return true;
                }
              });
            }
          });
        }
      }]);

      return ResolveService;
    }();

    ResolveService.ctorParameters = function () {
      return [{
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__["CookieService"]
      }, {
        type: _http_service_service__WEBPACK_IMPORTED_MODULE_4__["HttpServiceService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"]
      }];
    };

    ResolveService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
      providedIn: 'root'
    })], ResolveService);
    /***/
  },

  /***/
  "./src/app/services/training-api.service.ts":
  /*!**************************************************!*\
    !*** ./src/app/services/training-api.service.ts ***!
    \**************************************************/

  /*! exports provided: TrainingApiService */

  /***/
  function srcAppServicesTrainingApiServiceTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TrainingApiService", function () {
      return TrainingApiService;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! rxjs/operators */
    "./node_modules/rxjs/_esm2015/operators/index.js");
    /* harmony import */


    var _angular_common_http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/common/http */
    "./node_modules/@angular/common/fesm2015/http.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../../environments/environment */
    "./src/environments/environment.ts");

    var TrainingApiService = /*#__PURE__*/function () {
      function TrainingApiService(_http, _authHttp, cookieService) {
        _classCallCheck(this, TrainingApiService);

        this._http = _http;
        this._authHttp = _authHttp;
        this.cookieService = cookieService;
        this.progress = [];
        this.uploaderror = '';
        this.accesstoken = "";
        this.fileservername = [];
        this.serverUrl = _environments_environment__WEBPACK_IMPORTED_MODULE_5__["environment"].training_url;
        this.getdata_endpointUrl = 'datalist';
        this.jwtToken = cookieService.get('jwtToken');
        this.accesstoken = this.jwtToken;
      }

      _createClass(TrainingApiService, [{
        key: "isTokenExpired",
        value: function isTokenExpired() {// const helper = new JwtHelperService();
          // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));
          // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));
          // console.log('refresh_token',localStorage.getItem('refresh_token'))
          // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));
          // console.log('id_token isExpired:',isIdTokenExpired)
          // console.log('refresh_token isExpired:',isRefreshTokenExpired)
        }
      }, {
        key: "addData",
        value: function addData(requestdata) {
          var httpOptions = {
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
              'Content-Type': 'application/json',
              'Authorization': this.accesstoken
            })
          };

          var result = this._http.post(this.serverUrl + this.addendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
          }));

          return result;
        }
      }, {
        key: "UpdateData",
        value: function UpdateData(requestdata) {
          var httpOptions = {
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
              'Content-Type': 'application/json',
              'Authorization': this.accesstoken
            })
          };

          var result = this._http.post(this.serverUrl + this.updateendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
          }));

          return result;
        }
      }, {
        key: "getData",
        value: function getData(requestdata) {
          var httpOptions = {
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
              'Content-Type': 'application/json',
              'Authorization': this.accesstoken
            })
          };

          var result = this._http.post(this.serverUrl + this.getdata_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
          }));

          return result;
        }
      }, {
        key: "deleteSingleData",
        value: function deleteSingleData(requestdata) {
          var httpOptions = {
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
              'Content-Type': 'application/json',
              'Authorization': this.accesstoken
            })
          };

          var result = this._http.post(this.serverUrl + this.deletesingle_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
          }));

          return result;
        }
      }, {
        key: "deleteMultipleData",
        value: function deleteMultipleData(requestdata) {
          var httpOptions = {
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
              'Content-Type': 'application/json',
              'Authorization': this.accesstoken
            })
          };

          var result = this._http.post(this.serverUrl + this.deletesingle_endpointUrl + 'many', JSON.stringify(requestdata), httpOptions).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
          }));

          return result;
        }
      }, {
        key: "UpdateStatusForSingleData",
        value: function UpdateStatusForSingleData(requestdata) {
          var httpOptions = {
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
              'Content-Type': 'application/json',
              'Authorization': this.accesstoken
            })
          };

          var result = this._http.post(this.serverUrl + this.updatestatus_single_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
          }));

          return result;
        }
      }, {
        key: "UpdateStatusForMultipleData",
        value: function UpdateStatusForMultipleData(requestdata) {
          var httpOptions = {
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
              'Content-Type': 'application/json',
              'Authorization': this.accesstoken
            })
          };

          var result = this._http.post(this.serverUrl + this.updatestatus_single_endpointUrl + 'many', JSON.stringify(requestdata), httpOptions).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
          }));

          return result;
        }
      }, {
        key: "CustomRequest",
        value: function CustomRequest(requestdata, endpoint) {
          var httpOptions = {
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
              'Content-Type': 'application/json',
              'Authorization': this.accesstoken
            })
          };

          var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
          }));

          return result;
        }
      }]);

      return TrainingApiService;
    }();

    TrainingApiService.ctorParameters = function () {
      return [{
        type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]
      }, {
        type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_4__["CookieService"]
      }];
    };

    TrainingApiService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
      providedIn: 'root'
    })], TrainingApiService);
    /***/
  },

  /***/
  "./src/app/services/training.service.ts":
  /*!**********************************************!*\
    !*** ./src/app/services/training.service.ts ***!
    \**********************************************/

  /*! exports provided: TrainingService */

  /***/
  function srcAppServicesTrainingServiceTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TrainingService", function () {
      return TrainingService;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _training_api_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./training-api.service */
    "./src/app/services/training-api.service.ts");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");

    var TrainingService =
    /*#__PURE__*/
    // export class TrainingService {
    //   constructor() { }
    // }
    function () {
      function TrainingService(_apiService, router, cookiesService) {
        _classCallCheck(this, TrainingService);

        // this.allCookiesData = cookiesService.getAll();
        //   this.cookiesData = JSON.parse(this.allCookiesData.user_details);
        //   this.userType=this.cookiesData.type;
        this._apiService = _apiService;
        this.router = router;
        this.cookiesService = cookiesService; //   this.userId = this.cookiesData._id;
        //   this.userType=this.cookiesData.type;
        // console.log("routeee",this.acti);

        this.user_details = JSON.parse(this.cookiesService.get('user_details'));
        console.log(this.user_details, "....?");
        this.userType = this.user_details.user_type;
        this.userId = this.user_details._id;
      }

      _createClass(TrainingService, [{
        key: "resolve",
        value: function resolve(route, state) {
          var _this236 = this;

          /* will come into play while editing otherwise no effect */
          var requestData = route.data.requestcondition;
          requestData.condition = Object.assign(requestData.condition, route.params);

          if (route.url[0].path == "training-center") {
            requestData.condition['user_id'] = this.userId;
            requestData.condition['type'] = "admin";
          } // lesson plan 


          if (route.url[0].path == "lesson-plan-material") {
            // requestData.condition['lesson_id'] = this.userId;
            delete requestData.condition.associated_training; // requestData.condition['type'] = "admin";
          }

          if (route.url[0].path == "training-center-dna") {
            requestData.condition['associated_training'] = route.params.associated_training;
            requestData['user_id'] = this.userId;
            requestData['type'] = this.userType; //    requestData['type'] = "mentor";

            requestData['associated_training'] = route.params.associated_training;
          }

          if (route.url[0].path == "training-report") {
            if (this.userType == "admin") {}

            if (this.userType == "salesrep") {
              requestData.condition['user_id'] = this.userId;
            }

            if (this.userType == "user") {
              requestData.condition['user_id'] = this.userId;
            }
          }

          return new Promise(function (resolve) {
            _this236._apiService.CustomRequest(route.data.requestcondition, route.data.endpoint).subscribe(function (api_object) {
              if (api_object) {
                return resolve(api_object);
              } else {
                // id not found
                return true;
              }
            });
          });
        }
      }]);

      return TrainingService;
    }();

    TrainingService.ctorParameters = function () {
      return [{
        type: _training_api_service__WEBPACK_IMPORTED_MODULE_3__["TrainingApiService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_4__["CookieService"]
      }];
    };

    TrainingService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
      providedIn: 'root'
    }) // export class TrainingService {
    //   constructor() { }
    // }
    ], TrainingService);
    /***/
  },

  /***/
  "./src/environments/environment.prod.ts":
  /*!**********************************************!*\
    !*** ./src/environments/environment.prod.ts ***!
    \**********************************************/

  /*! exports provided: environment */

  /***/
  function srcEnvironmentsEnvironmentProdTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "environment", function () {
      return environment;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");

    var environment = {
      siteBaseUrl: "https://www.testbedpece.influxiq.com/",
      s3bucket: "https://s3.us-east-2.amazonaws.com/crmfiles.influxhostserver/",
      apiBaseUrl: "https://wfr9bu9th2.execute-api.us-east-1.amazonaws.com/dev/api/",
      apiBaseUrl1: "https://wfr9bu9th2.execute-api.us-east-1.amazonaws.com/dev/api1/",
      fileUploadUrl: "https://fileupload.influxhostserver.com/",
      pagination: [20, 50, 100, 200, 500],
      logo: "https://5hyccia9v2.execute-api.us-east-1.amazonaws.com/dev/api/",
      siteTitle: "AWS Backend",
      footerText: "AWS Copyright 2020",
      production: true,
      floatPattern: "(^[0-9]{1,9})+(\.[0-9]{1,4})?$",
      googleSyncApi: "https://gapi.betoparedes.com/connect-calendar-pece-live.php",
      calendarApi: "https://mu44hv19t8.execute-api.us-east-1.amazonaws.com/production/api/",
      doctorSignUpBaseUrl: "https://pece-doctor-signup.influxiq.com",
      training_url: "https://obq0e0nxhk.execute-api.us-east-1.amazonaws.com/production/api1/"
    };
    /***/
  },

  /***/
  "./src/environments/environment.ts":
  /*!*****************************************!*\
    !*** ./src/environments/environment.ts ***!
    \*****************************************/

  /*! exports provided: environment */

  /***/
  function srcEnvironmentsEnvironmentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "environment", function () {
      return environment;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");

    var environment = {
      siteBaseUrl: "https://www.testbedpece.influxiq.com/",
      s3bucket: "https://s3.us-east-2.amazonaws.com/crmfiles.influxhostserver/",
      apiBaseUrl: "https://trtss4n5ff.execute-api.us-east-1.amazonaws.com/dev/api/",
      apiBaseUrl1: "https://trtss4n5ff.execute-api.us-east-1.amazonaws.com/dev/api1/",
      fileUploadUrl: "https://fileupload.influxhostserver.com/",
      pagination: [20, 50, 100, 200, 500],
      logo: "https://5hyccia9v2.execute-api.us-east-1.amazonaws.com/dev/api/",
      siteTitle: "AWS Backend",
      footerText: "AWS Copyright 2020",
      production: true,
      floatPattern: "(^[0-9]{1,9})+(\.[0-9]{1,4})?$",
      googleSyncApi: "https://gapi.betoparedes.com/connect-calendar-pece-live.php",
      calendarApi: "https://mu44hv19t8.execute-api.us-east-1.amazonaws.com/production/api/",
      doctorSignUpBaseUrl: "https://pece-doctor-signup.influxiq.com",
      training_url: "https://obq0e0nxhk.execute-api.us-east-1.amazonaws.com/production/api1/"
    };
    /***/
  },

  /***/
  "./src/main.ts":
  /*!*********************!*\
    !*** ./src/main.ts ***!
    \*********************/

  /*! no exports provided */

  /***/
  function srcMainTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var hammerjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! hammerjs */
    "./node_modules/hammerjs/hammer.js");
    /* harmony import */


    var hammerjs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(hammerjs__WEBPACK_IMPORTED_MODULE_1__);
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/platform-browser-dynamic */
    "./node_modules/@angular/platform-browser-dynamic/fesm2015/platform-browser-dynamic.js");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./environments/environment */
    "./src/environments/environment.ts");
    /* harmony import */


    var _app_app_browser_module__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./app/app.browser.module */
    "./src/app/app.browser.module.ts");

    if (_environments_environment__WEBPACK_IMPORTED_MODULE_4__["environment"].production) {
      Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["enableProdMode"])();
    }

    document.addEventListener('DOMContentLoaded', function () {
      Object(_angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_3__["platformBrowserDynamic"])().bootstrapModule(_app_app_browser_module__WEBPACK_IMPORTED_MODULE_5__["AppBrowserModule"])["catch"](function (err) {
        return console.error(err);
      });
    });
    /***/
  },

  /***/
  0:
  /*!***************************!*\
    !*** multi ./src/main.ts ***!
    \***************************/

  /*! no static exports found */

  /***/
  function _(module, exports, __webpack_require__) {
    module.exports = __webpack_require__(
    /*! /home/subha-influxiq/Documents/Angular/aws-backend/src/main.ts */
    "./src/main.ts");
    /***/
  }
}, [[0, "runtime", "vendor"]]]);
//# sourceMappingURL=main-es5.js.map