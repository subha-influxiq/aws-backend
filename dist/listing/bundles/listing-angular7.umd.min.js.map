{"version":3,"sources":["ng://listing-angular7/lib/listing.service.ts","ng://listing-angular7/lib/api.service.ts","ng://listing-angular7/lib/listing.component.ts","ng://listing-angular7/lib/materialmodules.ts","ng://listing-angular7/lib/listing.module.ts"],"names":["ListingService","Injectable","args","providedIn","ApiService","_http","_authHttp","this","domain_for_fileupload_val","progress","uploaderror","fileservername","options","concurrency","maxUploads","files","uploadInput","EventEmitter","humanizeBytes","prototype","onUploadOutput","uploadOutput","arrayvalue","uploadtypec","uploadpath","type","event_1","url","method","data","path","emit","file","response","push","console","log","lengthis","length","percentageis","percentage","index","findIndex","id","filter","dragOver","inprogress","error_code","b","isTokenExpired","getclientip","get","pipe","map","res","getEndpoint","endpoint","httpOptions","headers","HttpHeaders","Content-Type","Authorization","post","source","getData","postData","token","getEndpointUrl","JSON","stringify","postDatawithoutToken","postlogin","postSearch","link","postSearch1","putData","put","deteOneData","dataval","_id","togglestatus","deteManyData","ids","togglestatusmany","val","HttpClient","ViewChild","static","moment","momentImported","ListingComponent","_apiService","dialog","bottomSheet","fb","router","resolver","container","sanitizer","_this","myControl","FormControl","columns","olddata","tsearch","autosearch","result","sh","art","aud2","aud","previewFlug","stateGroups","searchListval","displayedColumns","datacolumns","displayedColumnsheader","formarray","dateSearch_condition","selectSearch_condition","autoSearch_condition","textSearch_condition","loading","preresult","dataSource","MatTableDataSource","events","subscribe","event","NavigationStart","NavigationEnd","NavigationCancel","NavigationError","Object","defineProperty","search_settings","search_settingsval","click_to_add_ananother_page","click_to_add_ananother_pageval","grab_link","grab_linkval","custombutton","custombuttonval","date_search_source","date_search_sourceval","date_search_endpoint","date_search_endpointval","urlval","searchendpoint","searchendpointval","pdf_link","pdf_link_val","searchList","datasource","datasourceval","skip","skipval","detail_datatype","detail_datatypeval","detail_skip_array","detail_skip_arrayval","sourcedata","sourcedataval","modify_header_array","modify_header_arrayval","deleteendpointval","updateendpoint","updateendpointval","apiurl","apiurlval","jwttoken","jwttokenval","statusarr","statusarrval","emailarray","emailarrayval","editroute","editrouteval","flug","inputblur","myForm","controls","markAsUntouched","ngOnInit","search","condition","stateGroup","valueChanges","startWith","value","_filter","x","temp","keys","coldef_list","header_list","i","replace","ff","tt","columnDef","header","cell","row","eval","objlength","this_1","indexOf","displayedcols","unshift","data_list","createData","selection","SelectionModel","paginator","sort","onSubmit","errormg","valid","markAsTouched","dateSearch","start_date","end_date","unix","Date","getTime","$lte","$gte","conditionobj","assign","selectSearch","field","autosearchfunction","toLowerCase","toUpperCase","textsearchfunction","filterValue","option","includes","getstatus","name","hi","shatterblok_agreement_date","audiodeadline_agreement_date","grapurl","copyText","fullurl","selBox","document","createElement","style","position","left","top","opacity","body","appendChild","focus","select","execCommand","removeChild","clickurl","window","open","isAllSelected","selected","masterToggle","clear","forEach","checkboxLabel","isSelected","point","key","applyFilter","trim","firstPage","styleCell","col_name","viewdata","data1","data2","hasOwnProperty","tempdata","k","p","imgval","fileurl","n","v","entries","Confirmdialog","height","panelClass","isconfirmation","managestatus","BottomSheet","items","afterDismissed","status","c","message","error","custombuttonfunc","unsafeurl","fields","bypassSecurityTrustResourceUrl","customdata","managestatusmultiple","newstatus_1","c_1","deletemultiple","dialogRef","afterClosed","c_2","deletedata","editdata","navigate","artistxpPreview","singleData","posts_id_object","restlt","preview","previewData","Component","selector","template","MatDialog","MatBottomSheet","FormBuilder","Router","ComponentFactoryResolver","ViewContainerRef","DomSanitizer","Input","MatSort","MatPaginator","onNoClick","close","sanitizeUrl","rowdata","MatDialogRef","Inject","MAT_DIALOG_DATA","bottomSheetRef","openLink","dismiss","MatBottomSheetRef","MAT_BOTTOM_SHEET_DATA","DemoMaterialModule","NgModule","exports","A11yModule","CdkStepperModule","CdkTableModule","CdkTreeModule","DragDropModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","PortalModule","ScrollingModule","ListingModule","declarations","imports","CommonModule","BrowserModule","BrowserAnimationsModule","FormsModule","ReactiveFormsModule","RouterModule","MomentModule","schemas","CUSTOM_ELEMENTS_SCHEMA","providers","entryComponents"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ListingService {\n\n  constructor() { }\n}\n","import {ElementRef, EventEmitter, Injectable, Input, ViewChild} from '@angular/core';\nimport { switchMap, map, takeWhile } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders} from '@angular/common/http';\nimport { UploadOutput, UploadInput, UploadFile, humanizeBytes, UploaderOptions, UploadStatus } from 'ngx-uploader';\n\n\n@Injectable()\nexport class ApiService {\n  public domain_for_fileupload_val: any = 'http://developmentapi.audiodeadline.com:7031/uploads' + 'uploads' ;\n  files: UploadFile[];\n  uploadInput: EventEmitter<UploadInput>;\n  humanizeBytes: Function;\n  dragOver: boolean;\n  options: UploaderOptions;\n  @ViewChild('fileInput1',{static: false}) uploaderInput: ElementRef;\n  /*@Input()\n  set domain_for_fileupload(domain_for_fileupload: any) {\n    this.domain_for_fileupload_val = domain_for_fileupload;\n    console.log('this.skipval');\n    console.log(this.domain_for_fileupload_val);\n  }*/\n  public lengthis;\n  public percentageis;\n  public inprogress;\n  public progress:any=[];\n  public uploadtype;\n  public uploaderror:any='';\n  // public uploadOutputval:any;\n  fileservername:any=[];\n\n  /*@Input()\n  set uploadOutput(uploadOutput: any){\n    this.uploadOutputval = uploadOutput;\n    console.log('this.uploadOutput');\n    console.log(this.uploadOutput);\n  }*/\n  constructor(private _http: HttpClient,\n              private _authHttp: HttpClient,\n\n              ) {\n    this.options = { concurrency: 10, maxUploads: 10 };\n    this.files = []; // local uploading files array\n    this.uploadInput = new EventEmitter<UploadInput>(); // input events, we use this to emit data to ngx-uploader\n    this.humanizeBytes = humanizeBytes;\n    //console.log('this.domain');\n    //console.log(this.domain);\n  }\n\n  onUploadOutput(uploadOutput: UploadOutput, arrayvalue: any, uploadtypec: any, uploadpath: any): void {\n    // this.uploaderInput.nativeElement.value = '';\n    if (uploadOutput.type === 'allAddedToQueue') {\n      const event: UploadInput = {\n        type: 'uploadAll',\n        url: 'http://developmentapi.audiodeadline.com:7031/uploads',\n        method: 'POST',\n        data: { path: uploadpath }\n      };\n      this.uploadInput.emit(event);\n    } else if (uploadOutput.type === 'addedToQueue' && typeof uploadOutput.file !== 'undefined') {\n      if (uploadOutput.file.response != '') {\n        this.files = [];\n        this.files.push(uploadOutput.file);\n        console.log('this.files*********');\n        console.log(this.files);\n        this.lengthis = this.files.length;\n        this.percentageis = this.files[0].progress.data.percentage;\n      }\n    } else if (uploadOutput.type === 'uploading' && typeof uploadOutput.file !== 'undefined') {\n      const index = this.files.findIndex(file => typeof uploadOutput.file !== 'undefined' && file.id === uploadOutput.file.id);\n      this.files[index] = uploadOutput.file;\n      this.lengthis = this.files.length;\n      if(this.files[0]!=null && this.files[0].progress!=null)\n        this.percentageis = this.files[0].progress.data.percentage;\n      console.log('this.files==================');\n      console.log(this.files);\n    } else if (uploadOutput.type === 'removed') {\n      this.files = this.files.filter((file: UploadFile) => file !== uploadOutput.file);\n    } else if (uploadOutput.type === 'dragOver') {\n      this.dragOver = true;\n    } else if (uploadOutput.type === 'dragOut') {\n      this.dragOver = false;\n    } else if (uploadOutput.type === 'drop') {\n      this.dragOver = false;\n    }\n    console.log('files');\n    console.log(this.files);\n    if(this.files[0]!=null && this.files[0].progress!=null) {\n      if(this.progress[arrayvalue]==null)this.progress[arrayvalue]=0;\n      this.inprogress=true;\n      console.log('file upload progressing');\n      console.log(this.files[0].progress.data.percentage);\n      this.progress[arrayvalue] = (this.files[0].progress.data.percentage);\n      if(this.progress[arrayvalue]==100) {\n        this.progress[arrayvalue]=null;\n        this.inprogress=null;\n      }\n      console.log('this.uploadtype in api service');\n      console.log(uploadtypec);\n    }\n    if (uploadtypec=='single'){\n      // this.fileservername = [];\n      if(this.fileservername[arrayvalue] == null) this.fileservername[arrayvalue]=[];\n      this.fileservername[arrayvalue]=[];\n      if(this.files[0].response!=null) this.fileservername[arrayvalue].push(this.files[0].response);\n    }\n    if (uploadtypec == 'multiple') {\n      console.log('this.files[0].response');\n      // console.log(this.files[0].response);\n      console.log(this.files.length);\n      console.log(this.files);\n      if (this.fileservername[arrayvalue] == null) this.fileservername[arrayvalue] = [];\n      // if(this.files[0].response!=null){\n      if(this.files.length==1) {\n        if(this.files[0] && this.files[0].response!=null && this.files[0].response.error_code==null ) {\n          this.fileservername[arrayvalue].push(this.files[0].response);\n          this.files = [];\n          this.uploaderror='';\n        }\n        if(this.files[0] !=null && this.files[0].response!=null && this.files[0].response.error_code!=null){\n          this.uploaderror='error occured on uploading !!!';\n        }\n      }\n      if(this.files.length>1)\n      {\n        console.log('sdfdsf==== in multiple length ');\n        for(let b in this.files){\n          if(this.files[b].response!=null && this.files[b].response.error_code==null) {\n            this.fileservername[arrayvalue].push(this.files[b].response);\n          }\n        }\n        this.files=[];\n      }\n      //}\n    }\n    console.log('this.fileservername');\n    console.log(this.fileservername);\n    console.log(this.uploaderror);\n    //this.uploaderservice.filenamevalc1=this.fileservername;\n    //UploaderComponent.filenamevalc1=87;\n    //console.log(classval);\n\n  }\n  isTokenExpired() {\n\n    // const helper = new JwtHelperService();\n    // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n    // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n    // console.log('refresh_token',localStorage.getItem('refresh_token'))\n    // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n    // console.log('id_token isExpired:',isIdTokenExpired)\n    // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n\n\n\n  }\n\n  getclientip() {\n\n    console.log('endpoint');\n\n    // this.isTokenExpired()\n    var result = this._http.get(\"http://ipinfo.io/?format=json&token=9797c42b93078a\").pipe(map(res => res));\n\n    return result;\n  }\n\n\n\n  getEndpoint(endpoint: any) {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization': ''\n      })\n    };\n    console.log('endpoint');\n    console.log(endpoint);\n    console.log('httpOptions');\n    console.log(httpOptions);\n    console.log('');\n\n    // this.isTokenExpired()\n    var result = this._http.post('' + endpoint.source, {}, httpOptions).pipe(map(res => res));\n\n    return result;\n  }\n\n  getData(endpoint: any) {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization': ''\n      })\n    };\n    console.log('endpoint');\n    console.log(endpoint);\n    console.log('httpOptions');\n    console.log(httpOptions);\n    console.log('');\n\n    // this.isTokenExpired()\n    var result = this._http.post('' + 'datalist', endpoint, httpOptions).pipe(map(res => res));\n\n    return result;\n  }\n\n  // getData end\n\n  postData(endpoint:any, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization': data.token\n      })\n    };\n    console.log('');\n    console.log('endpoint');\n    console.log(endpoint);\n    console.log('httpOptions');\n    console.log(httpOptions);\n    var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\n    return result;\n  }\n  postDatawithoutToken(endpoint:any, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n    console.log('');\n    console.log('endpoint');\n    console.log(endpoint);\n    var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  postlogin(endpoint:any, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n    console.log('');\n    console.log('endpoint');\n    console.log(endpoint);\n    var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\n    return result;\n  } // postData end\n\n\n\n\n  postSearch( link,token,source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': token\n      })\n    };\n    console.log('------ ');\n    console.log(\"link in postSearch\");\n    console.log(link);\n    console.log(source);\n    var result = this._http.post(link, source, httpOptions).pipe(map(res => res));\n    return result;\n  }\npostSearch1( link,source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': source.token\n      })\n    };\n    console.log('------ ');\n    console.log(\"link\");\n    console.log(link);\n    var result = this._http.post(link, source).pipe(map(res => res));\n    return result;\n  }\n\n\n\n\n\n  putData(endpoint:any, data, id:any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': ''\n      })\n    };\n    console.log('');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    var result = this._http.put(this.getEndpointUrl(endpoint)+'/'+id, JSON.stringify(data), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n\n  deteOneData(endpoint:any, data,token,source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': token\n      })\n    };\n    console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);\n    let dataval:any;\n    dataval={source:source,id:data._id}\n    var result = this._http.post(endpoint,dataval, httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n    togglestatus(endpoint:any, data,token,source) {\n      console.log(endpoint);\n      console.log(data);\n      console.log(token);\n      console.log(source);\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': token\n      })\n    };\n    console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);\n    let dataval:any;\n    dataval={source:source,data:data}\n    var result = this._http.post(endpoint,dataval, httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  deteManyData(endpoint:any, data,token,source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': token\n      })\n    };\n    console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);\n    let dataval:any;\n    dataval={source:source,ids:data}\n    var result = this._http.post(endpoint+'many',dataval, httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n    togglestatusmany(endpoint:any, data,val,token,source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': token\n      })\n    };\n    console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);\n    let dataval:any;\n    dataval={source:source,data:{ids:data,val:val}};\n    var result = this._http.post(endpoint+'many',dataval, httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n\n\n  private getEndpointUrl(endpoint: string) {\n      return '' + endpoint;\n  }\n\n}\n","// import {Component, OnInit, ViewChild, Input, Inject,\n//   ComponentFactoryResolver,\n//   ComponentRef,\n//   Directive,\n//   ViewContainerRef} from '@angular/core';\n// import {MatSort, MatTableDataSource,MatPaginator} from '@angular/material';\n// import {SelectionModel} from '@angular/cdk/collections';\n// import { ApiService } from './api.service';\n// import {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\n// import {MatBottomSheet, MatBottomSheetRef,MAT_BOTTOM_SHEET_DATA} from '@angular/material';\n// import {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\n// import {NavigationCancel, NavigationEnd, NavigationError, NavigationStart, Router, Event} from \"@angular/router\";\n// import {Observable} from 'rxjs';\n// import {startWith, map} from 'rxjs/operators';\n// import {HttpClient} from \"@angular/common/http\";\n// import { DomSanitizer} from '@angular/platform-browser';\n// declare var $:any;\n// import * as momentImported from 'moment';\n// const moment = momentImported;\n\n// @Component({\n//   selector: 'lib-listing',\n//   templateUrl: './listing.module.html',\n//   styleUrls: ['./listing.module.css']\n// })\n// export class ListingComponent implements OnInit {\n\n//   myControl = new FormControl();\n\n\n//   datasourceval:any;\n//   search_settingsval:any;\n//   click_to_add_ananother_pageval:any;\n//   grab_linkval:any;\n//   date_search_sourceval:any;\n//   date_search_endpointval:any;\n//   urlval:any;\n//   searchendpointval:any;\n//   searchListval:any;\n//   pdf_link_val:any;\n//   statusarrval:any;\n//   skipval:any;\n//   errormg:any;\n//   jwttokenval:any;\n//   detail_datatypeval:any;\n//   detail_skip_arrayval:any;\n//   deleteendpointval:any;\n//   editrouteval:any;\n//   apiurlval:any;\n//   updateendpointval:any;\n//   modify_header_arrayval:any;\n//   selection :any;\n//   sourcedataval :any;\n//   emailarrayval :any;\n//   columns :any=[];\n//   olddata :any=[];\n//   tsearch :any=[];\n//   autosearch :any=[];\n//   public x :any;\n//   public custombuttonval :any;\n//   public result :any = {};\n//   public sh :any = false;\n//   public art :any = false;\n//   public aud2 :any = false;\n//   public aud :any = false;\n\n//   /* this variable for artist xp preview */\n//   previewFlug: any = false;\n\n\n//   @Input()\n//   set search_settings(search_settings: any) {\n//     this.search_settingsval = search_settings;\n//     console.log('this.search_settingsval');\n//     console.log(this.search_settingsval);\n//     /*for (let i= 0; i<= this.search_settingsval.search.length; i++) {\n//       console.log(this.search_settingsval.search[i].label);\n//     }*/\n\n//   /*  console.log(this.search_settingsval.selectsearch);\n//     console.log(this.search_settingsval.selectsearch[0].label);\n//     console.log(this.search_settingsval.selectsearch[0].values);\n//     console.log(this.search_settingsval.datesearch);*/\n//   }\n\n//   @Input()\n//   set click_to_add_ananother_page(click_to_add_ananother_page: any) {\n//     this.click_to_add_ananother_pageval = click_to_add_ananother_page;\n//     console.log('this.click_to_add_ananother_pageval');\n//     console.log(this.click_to_add_ananother_pageval);\n//   }\n\n//   @Input()\n//   set grab_link(grab_link: any) {\n//     this.grab_linkval = grab_link;\n//     console.log('this.grab_linkval');\n//     console.log(this.grab_linkval);\n//   }\n//   @Input()\n//   set custombutton(custombutton: any) {\n//     this.custombuttonval = custombutton;\n//     console.log('this.custombuttonval');\n//     console.log(this.custombuttonval);\n//   }\n\n//   @Input()\n//   set date_search_source(date_search_source: any) {\n//     this.date_search_sourceval = date_search_source;\n//     console.log('this.date_search_sourceval');\n//     console.log(this.date_search_sourceval);\n//   }\n\n//   @Input()\n//   set date_search_endpoint(date_search_endpoint: any) {\n//     this.date_search_endpointval = date_search_endpoint;\n//     console.log('this.date_search_endpointval');\n//     console.log(this.date_search_endpointval);\n//   }\n//    @Input()\n//   set url(url: any) {\n//     this.urlval = url;\n//     console.log('this.urlval');\n//     console.log(this.urlval);\n//   }\n//     @Input()\n//   set searchendpoint(searchendpoint: any) {\n//     this.searchendpointval = searchendpoint;\n//     console.log('this.searchendpointval');\n//     console.log(this.searchendpointval);\n//   }\n//    @Input()\n//   set pdf_link(pdf_link: any) {\n//     this.pdf_link_val = pdf_link;\n//     console.log('this.pdf_link_val');\n//     console.log(this.pdf_link_val);\n//   }\n//   @Input()\n//   set searchList(searchList: any) {\n//     this.searchListval = searchList;\n//     console.log('this.searchListval');\n//     console.log(this.searchListval);\n//   }\n//   @Input()\n//   set datasource(datasource: any) {\n//     this.datasourceval = datasource;\n//     console.log('this.datasourceval');\n//     console.log(this.datasourceval);\n//   }\n\n//   @Input()\n//   set skip(skip: any) {\n//     this.skipval = skip;\n//     console.log('this.skipval');\n//     console.log(this.skipval);\n//   }\n//   @Input()\n//   set detail_datatype(detail_datatype: any) {\n//     this.detail_datatypeval = detail_datatype;\n//     console.log('this.detail_datatypeval');\n//     console.log(this.detail_datatypeval);\n//   }\n//  @Input()\n//   set detail_skip_array(detail_skip_array: any) {\n//     this.detail_skip_arrayval = detail_skip_array;\n//     console.log('this.detail_skip_arrayval');\n//     console.log(this.detail_skip_arrayval);\n//   }\n\n// @Input()\n//   set sourcedata(sourcedata: any) {\n//     this.sourcedataval = sourcedata;\n//     console.log('this.sourcedataval');\n//     console.log(this.sourcedataval);\n//   }\n\n//   @Input()\n//   set modify_header_array(modify_header_array: any) {\n//     this.modify_header_arrayval = modify_header_array;\n//     console.log('this.modify_header_arrayval');\n//     console.log(this.modify_header_arrayval);\n//   }\n\n//   @Input()\n//     set deleteendpoint(deleteendpointval: any) {\n//       this.deleteendpointval = deleteendpointval;\n//       console.log('this.deleteendpointval');\n//       console.log(this.deleteendpointval);\n//     }\n\n//  @Input()\n//     set updateendpoint(updateendpoint: any) {\n//       this.updateendpointval = updateendpoint;\n//       console.log('this.updateendpointval');\n//       console.log(this.updateendpointval);\n//     }\n//     @Input()\n//     set apiurl(apiurl: any) {\n//       this.apiurlval = apiurl;\n//       console.log('this.apiurlval');\n//       console.log(this.apiurlval);\n//     }\n\n// @Input()\n//     set jwttoken(jwttoken: any) {\n//       this.jwttokenval = jwttoken;\n//       console.log('this.jwttokenval');\n//       console.log(this.jwttokenval);\n//     }\n\n//     @Input()\n//     set statusarr(statusarr: any) {\n//       this.statusarrval = statusarr;\n//       console.log('this.statusarrval');\n//       console.log(this.statusarrval);\n//     }\n\n//     @Input()\n//     set emailarray(emailarray: any) {\n//       this.emailarrayval = emailarray;\n//       console.log('this.emailarrayval');\n//       console.log(this.emailarrayval);\n//     }\n\n//   @Input()\n//   set editroute(editroute: any) {\n//     console.log('editroute');\n//     console.log(editroute);\n//     this.editrouteval = editroute;\n//     console.log('this.editrouteval');\n//     console.log(this.editrouteval);\n//   }\n\n\n//   /* artistxp preview start */\n//   @Input()\n//   set preview_artistxp(flug: any) {\n//     this.previewFlug = true;\n//   }\n//   /* artistxp preview end */\n\n\n//   stateGroups: string[] = this.searchListval;\n//   stateGroup: Observable<string[]>;\n\n//   displayedColumns: string[] = [];\n//   datacolumns: string[] = [];\n//   displayedColumnsheader: string[] = [];\n//   formarray: any = [];\n//   start_date: any ;\n//   dateSearch_condition: any ={};\n//   selectSearch_condition: any ={};\n//   autoSearch_condition: any ={};\n//   textSearch_condition: any ={};\n//   end_date: any ;\n//   public i: any ;\n//   loading: any = false ;\n//   public preresult: any={};\n//   //dataSource = new MatTableDataSource(this.datasourceval);\n//   dataSource = new MatTableDataSource;\n\n//   @ViewChild(MatSort, {static: true}) sort: MatSort;\n//   @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n//   // options: FormGroup;\n//   myForm:any;\n//   // myForm:any;\n\n//   constructor(public _apiService: ApiService,public dialog: MatDialog,private bottomSheet: MatBottomSheet,public fb: FormBuilder,private router: Router, private resolver: ComponentFactoryResolver,\n//               private container: ViewContainerRef, public _http: HttpClient, public sanitizer:DomSanitizer) {\n\n//     this.router.events.subscribe((event: Event) => {\n//         switch (true) {\n//           case event instanceof NavigationStart: {\n//             this.loading = true;\n//             break;\n//           }\n//           case event instanceof NavigationEnd:\n//           case event instanceof NavigationCancel:\n//           case event instanceof NavigationError: {\n//             this.loading = false;\n//             break;\n//           }\n//           default: {\n//             break;\n//           }\n//         }\n//       });\n\n\n\n//    /* this.myForm = this.fb.group({\n//       email: ['', Validators.compose([Validators.required, Validators.pattern(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/)])],\n//       password: ['', Validators.required]\n//     });*/\n\n\n\n//   }\n//   /*@Directive({\n//     selector: '[Listing]'\n//   })*/\n\n\n\n\n\n\n//   inputblur(val:any){\n//     console.log('on blur .....');\n//     this.myForm.controls[val].markAsUntouched();\n//   }\n//   ngOnInit() {\n\n//     if (this.search_settingsval !=null && this.search_settingsval.search != null && this.search_settingsval.search != '') {\n//       console.log('----------------');\n//       let source: any;\n//       let condition: any = {};\n//       source = {\n//         source: this.date_search_sourceval,\n//         condition: condition\n//       };\n//       let link = this.apiurlval + '' + this.date_search_endpointval;\n//       this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n//         console.log(res);\n//         this.result = res;\n//         console.log(this.result);\n//         this.preresult = this.result.res;\n//         console.log(this.preresult);\n//       });\n\n//     }\n\n//     // this._service.success(this.columns[0].date,'dndnnd',this.options);\n//    /* this.stateGroupOptions = this.myControl.valueChanges\n//         .pipe(\n//             startWith(''),\n//             map(value => this._filterGroup(value))\n//         );*/\n\n//     this.stateGroup = this.myControl.valueChanges\n//         .pipe(\n//             startWith(''),\n//             map(value => this._filter(value))\n//         );\n\n//     /*const factory = this.resolver.resolveComponentFactory(\n//         componentMapper[this.field.type]\n//     );\n//     this.componentRef = this.container.createComponent(factory);\n//     this.componentRef.instance.field = this.field;\n//     this.componentRef.instance.group = this.group;\n// */\n\n//     this.x = this.datasourceval;\n//     let x=this.x;\n\n//     let temp = []\n//     let keys = x[0]\n//     temp = Object.keys(keys)    /*by Object.keys() we can find the fieldnames(or keys) in an object, i.e, in temp object field names are saved*/\n\n//     let coldef_list = [];\n//     let header_list = [];\n//     for (let i = 0; i < temp.length; i++) {\n//       coldef_list.push(temp[i].replace(/\\s/g, \"_\"));      /*to replace spaces in field name by \"_\", we use \"replace(/\\s/g, \"_\")\"*/\n//       header_list.push(temp[i])\n//     }\n//     //coldef_list.push('Actions');\n//     //header_list.push('Actions')\n//     console.log('coldef_list',coldef_list);\n//     console.log('header_list',header_list);\n\n//     for (let i = 0; i < coldef_list.length; i++) {\n//       let ff = `row.${coldef_list[i]}`\n//       var tt = { columnDef: `${coldef_list[i]}`,    header: `${header_list[i].replace(/_/g,\" \")}`,  cell: (row) => eval(ff) ,objlength:header_list.length  };\n//       // console.log('tt.columnDef');\n//       // console.log(tt.columnDef);\n//       for (let b in this.modify_header_arrayval){\n//         if(b==tt.header) tt.header=this.modify_header_arrayval[b];\n//       }\n\n//       if(this.skipval.indexOf(tt.columnDef)==-1)\n//       this.columns.push(tt);\n//       // console.log('this.columns');\n//       // console.log(this.columns);\n//     }\n//     let displayedcols= this.columns.map(x => x.columnDef);\n//     displayedcols.push('Actions');\n\n//     this.displayedColumns =displayedcols;\n//     this.displayedColumns.unshift('select');        /*adds select column in table by unshift function*/\n\n//     let data_list = [];\n//     for (let i = 0; i < this.x.length; i++) {\n//       data_list.push(this.createData(x[i]));\n//     }\n//     this.olddata=data_list;\n//     console.log(data_list)\n//     this.dataSource = new MatTableDataSource(data_list);\n//     this.selection = new SelectionModel(true, []);\n//     this.dataSource.paginator = this.paginator;\n//     this.dataSource.sort = this.sort;\n//   }\n\n\n//   onSubmit() {\n//     let x: any;\n//     this.errormg = '';\n//     let data = this.myForm.value;\n//     console.log('data');\n//     console.log(data);\n//     console.log(this.myForm.valid);\n//     for (x in this.myForm.controls) {\n//       this.myForm.controls[x].markAsTouched();\n//     }\n//   }\n//   dateSearch(val: any) {\n//     console.log(\"start date\");\n//     console.log(this.start_date);\n//     console.log(this.end_date);\n//     let sd = moment(this.start_date).unix();\n//     let ed = moment(this.end_date).unix();\n//     console.log(moment(this.start_date).unix());\n//     console.log(moment(this.end_date).unix());\n//     console.log(new Date(this.end_date).getTime());\n//     let link = this.apiurlval + ''+ this.date_search_endpointval;\n//     console.log(link);\n//     if(moment(this.end_date).unix()!=null && moment(this.start_date).unix()!=null ) {\n\n\n//       let source:any;\n//       let condition: any;\n//       condition = {};\n\n//       condition[val] = {\n//         $lte: new Date(this.end_date).getTime(),\n//             $gte: new Date(this.start_date).getTime(),\n//       };\n//       this.dateSearch_condition = {};\n//       this.dateSearch_condition = condition;\n//       let conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n//           source= {\n//             source: this.date_search_sourceval,\n//             condition: conditionobj,\n//           };\n//       console.log(source);\n//       this._apiService.postSearch(link,this.jwttokenval, source).subscribe(res => {\n//         console.log(res);\n//         let result: any = {};\n//         result = res;\n//         console.log(result.res);\n//         this.dataSource = new MatTableDataSource(result.res);\n//         this.dataSource.paginator = this.paginator;\n//         this.dataSource.sort = this.sort;\n//       })\n\n//       /*this._http.post(link, {source:this.date_search_sourceval,\n//         condition: {\n//           'created_at': {\n//             $lte: new Date(this.end_date).getTime(),\n//             $gte: new Date(this.start_date).getTime(),\n//           }\n//         },token: this.jwttokenval,\n//       }).subscribe( res =>{\n//         let result: any ={};\n//         result = res;\n//         console.log(\"ok\");\n//         console.log(res);\n//         console.log(result.res);\n//         let newdata = result.res;\n//         this.dataSource = new MatTableDataSource(result.res);\n//         this.dataSource.paginator = this.paginator;\n//         this.dataSource.sort = this.sort;\n//       })*/\n//     }else\n//       console.log(\"error\");\n//   }\n\n\n\n//   selectSearch (value:any,type:any){\n//     console.log('type');\n//     console.log(type);\n//     let link = this.apiurlval + ''+ this.date_search_endpointval;\n//     console.log(link);\n//     let source:any;\n//     let condition: any;\n//     condition = {};\n//     condition[type.field]=value;\n//     this.selectSearch_condition = {};\n//     this.selectSearch_condition = condition;\n//     let conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n//     source= {\n//       source: this.date_search_sourceval,\n//       condition: conditionobj\n//     };\n//     if(value !=null ) {\n//       this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n//         console.log(res);\n//         let result: any = {};\n//         result = res;\n//         console.log(\"ok\");\n//         console.log(res);\n//         console.log(result.res);\n//         let newdata = result.res;\n//         this.dataSource = new MatTableDataSource(result.res);\n//         this.dataSource.paginator = this.paginator;\n//         this.dataSource.sort = this.sort;\n//       });\n//     } else\n//     {\n//       console.log('oops');\n//     }\n//   console.log(\"error\");\n//   }\n//   autosearchfunction (value: any) {\n//     console.log(value);\n//     let val:any=this.autosearch[value];\n//     console.log(val);\n//     let source:any;\n//     let condition: any={};\n//     if(this.autosearch[value].length>0 && {$or:[this.autosearch[value].toLowerCase(),this.autosearch[value].toUpperCase(),this.autosearch[value]]})condition[value+'_regex']=val;\n//     this.autoSearch_condition = {};\n//     this.autoSearch_condition = condition;\n//     let conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n//     source= {\n//       source: this.date_search_sourceval,\n//       condition: conditionobj\n//     };\n//     let link = this.apiurlval + ''+ this.date_search_endpointval;\n//     this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n//       console.log(res);\n//       // let result:any={};\n//       this.result = res;\n//       console.log(this.result);\n//       console.log(this.result.res);\n//       this.dataSource = new MatTableDataSource(this.result.res);\n//       this.dataSource.paginator = this.paginator;\n//       this.dataSource.sort = this.sort;\n\n//     });\n//   }\n\n//   textsearchfunction (value:any){\n//     console.log('value');\n//     console.log(value);\n//     console.log(value.toLowerCase());\n//     console.log(this.tsearch[value]);\n//     let link = this.apiurlval + ''+ this.date_search_endpointval;\n//     console.log(link);\n//     let source:any;\n//     let condition: any={};\n//     //condition = {};\n//     let val:any =this.tsearch[value].toLowerCase();\n//     // condition={$or:[this.tsearch[value].toLowerCase(),this.tsearch[value].toUpperCase()]};\n//     if(this.tsearch[value].length>1 && {$or:[this.tsearch[value].toLowerCase(),this.tsearch[value].toUpperCase()]})condition[value+'_regex']=val;\n//     this.textSearch_condition = {};\n//     this.textSearch_condition = condition;\n//     //condition[value]=\"/222/\";\n//     //condition={email:{$regx:'/222/i'}};\n//     let conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n//     source= {\n//       source: this.date_search_sourceval,\n//       condition: conditionobj\n//     };\n//     console.log('source');\n//     console.log(source);\n//     //add loader\n//     this.loading = true;\n//     if(value !=null  ) {\n//       this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n//         console.log(res);\n//         let result: any = {};\n//         result = res;\n//         //close loader\n//         this.loading = false;\n//         console.log(\"ok\");\n//         console.log(res);\n//         console.log(result.res);\n//         let newdata = result.res;\n//         this.dataSource = new MatTableDataSource(result.res);\n//         this.dataSource.paginator = this.paginator;\n//         this.dataSource.sort = this.sort;\n//       });\n//     } else\n//     {\n//       console.log('oops');\n//     }\n//   console.log(\"error\");\n//   }\n\n\n\n//   private _filter(value: string): string[] {\n//     const filterValue = value.toLowerCase();\n\n//     return this.searchListval.filter(option => option.toLowerCase().includes(filterValue));\n//   }\n\n//   /*private _filterGroup(value: string): StateGroup[] {\n//    /!* if (value) {\n//       return this.searchListval\n//           .map(group => ({names: _filter(group.names, value)}))\n//           .filter(group => group.names.length > 0);\n//     }\n\n//     return this.searchListval;*!/\n//     const filterValue = value.toLowerCase();\n\n//     return this.searchListval.filter(option => option.toLowerCase().includes(filterValue));\n//   }*/\n\n//   getstatus(val:any){\n//     // console.log('val');\n//     // console.log(val);\n//     for(let b in this.statusarrval){\n//       if(this.statusarrval[b].val==val)\n//         return this.statusarrval[b].name;\n//       // console.log(this.statusarrval[b].name);\n//     }\n//     return \"N/A\";\n//   }\n//   hi(val: any){\n//     // console.log('hi  val');\n//     // console.log(val);\n//     if (val.shatterblok_agreement_date != null && val.audiodeadline_agreement_date ==null ){\n//       // console.log('shatter blok');\n//       this.sh = true;\n//       this.aud = false;\n//     }\n//     if (val.shatterblok_agreement_date != null && val.audiodeadline_agreement_date !=null) {\n//       this.sh = true;\n//       this.aud = true;\n//     }\n//     if (val.shatterblok_agreement_date == null && val.audiodeadline_agreement_date ==null) {\n//       this.sh = false;\n//       this.aud = false;\n//     }\n//   }\n//   grapurl(val: any){\n//     //  for all row checking\n// // console.log(val)\n//     if (val != null) {\n//       this.art = true;\n//       this.aud2 = true;\n//     }\n//     if (val == null) {\n//       this.art = false;\n//       this.aud2 = false;\n//     }\n//     // console.log(this.sh);\n//     // console.log(this.aud);\n//   }\n\n//     copyText(row: any, val: string){\n//     console.log('row in copyText');\n//     console.log(row);\n//     console.log('val in copyText');\n//     console.log(val)\n//       let fullurl = val+''+row;\n//     console.log(fullurl);\n//         let selBox = document.createElement('textarea');\n//         selBox.style.position = 'fixed';\n//         selBox.style.left = '0';\n//         selBox.style.top = '0';\n//         selBox.style.opacity = '0';\n//         selBox.value = fullurl;\n//         document.body.appendChild(selBox);\n//         selBox.focus();\n//         selBox.select();\n//         document.execCommand('copy');\n//         document.body.removeChild(selBox);\n//     }\n\n//   clickurl(val: any , url: any) {\n//     let i\n//     console.log('ok');\n//     console.log(val);\n//     console.log(val._id);\n//     console.log(url);\n//     console.log(url + '' +val._id + '' + this.pdf_link_val);\n//     let link= url + '' +val._id + '' + this.pdf_link_val;\n//     window.open(link, \"_blank\");\n//   }\n\n\n//   /** Whether the number of selected elements matches the total number of rows. */\n//   isAllSelected() {\n//     const numSelected = this.selection.selected.length;\n//     const numRows = this.dataSource.data.length;\n//     return numSelected === numRows;\n//   }\n\n//   /** Selects all rows if they are not all selected; otherwise clear selection. */\n//   masterToggle() {\n//     this.isAllSelected() ?\n//         this.selection.clear() :\n//         this.dataSource.data.forEach(row => this.selection.select(row));\n//   }\n\n//   /** The label for the checkbox on the passed row */\n//   checkboxLabel(row?: any): string {\n//     if (!row) {\n//       return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n//     }\n//     return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n//   }\n\n\n//   createData(point:any){\n//     let data = {};\n//     Object.keys(point).forEach(function (key) {\n//       data[key.replace(/\\s/g, \"_\")] = point[key];\n//     });\n//     return data\n//   }\n\n//   applyFilter(filterValue: string) {\n//     console.log(filterValue)\n//     console.log(this.dataSource);\n//     // console.log(this.dataSource[name])\n//     this.dataSource.filter = filterValue.trim().toLowerCase();\n\n//     if (this.dataSource.paginator) {\n//       this.dataSource.paginator.firstPage();\n//     }\n//   }\n//   /*applyFilter1(filterValue: string, val: any) {\n//     console.log(filterValue);\n//     console.log(val.value);\n//     let value= new MatTableDataSource(val.value);\n\n//     value.filter = filterValue.trim().toLowerCase();\n//     console.log(value);\n//     /!* this.dataSource.filterPredicate = function(data, filter: string): boolean {\n//       // return data.name.toLowerCase().includes(filter);\n//     };\n//     if (this.dataSource.paginator) {\n//       this.dataSource.paginator.firstPage();\n//     }*!/\n//   }*/\n\n//   styleCell(col_name,row){\n\n//     /*\n//      if (col_name['columnDef']=='progress' && row['progress']=='100'){\n//      return {'color' : 'red'}\n//      } else {\n//      return {}\n//      }\n//      */\n\n\n//     return {}\n//   }\n\n\n//   viewdata(data1:any){\n//     let data:any;\n//     data=data1;\n//     let data2:any=[];\n//     console.log('data');\n//     console.log(data);\n\n//       for (let key in data) {\n//           if (data.hasOwnProperty(key)) {\n//               console.log(key + \" -> \" + data[key]+\"--->\"+typeof (data[key]));\n//               if(typeof (data[key])=='boolean') {\n//                   if(data[key]==true) data[key]='Yes';\n//                   if(data[key]==false) data[key]='No';\n//               }\n\n\n//               console.log(key)\n\n//               if(typeof (data[key])=='object') {\n//                   let tempdata:any=[];\n//                   for(let k in data[key]){\n//                       console.log('key');\n//                       console.log(key);\n//                       console.log(this.detail_datatypeval);\n//                       for(let p in this.detail_datatypeval){\n//                           console.log('p');\n//                           console.log(p);\n//                           console.log(key);\n//                           console.log(data[key][k]);\n//                           if(this.detail_datatypeval[p].key==key && this.detail_datatypeval[p].value=='image'){\n\n//                               let imgval:any=this.detail_datatypeval[p].fileurl+data[key][k].replace(/'/g, '');\n//                               console.log('imgval');\n//                               console.log('imgval');\n//                               console.log(imgval);\n//                               console.log(data[key][k].replace(/'/g, ''));\n//                               tempdata.push(\"<img mat-card-image src=\"+imgval+\"><br/>\");\n//                              // tempdata.push(\"<span>\"+data[key][k]+\"</span><br/>\")\n\n\n//                           }\n//                           if(this.detail_datatypeval[p].key==key && this.detail_datatypeval[p].value!='image'){\n//                               //tempdata.push(\"<img mat-card-image src=\"+data[key][k]+\"><br/>\")\n//                               tempdata.push(\"<span>\"+data[key][k]+\"</span><br/>\");\n\n\n//                           }\n//                       }\n\n//                   }\n//                   data[key]=tempdata;\n//               }\n//           }\n//       }\n\n//       console.log('data');\n//       console.log(data);\n//       for(let n in data){\n//         if(data[n]!=null && data[n]!=''){\n//           data2[n]=data[n];\n//         }\n//       }\n\n//     for(let v in this.detail_skip_arrayval){\n//       //data2[this.detail_skip_arrayval[v]]='';\n//       delete data2[this.detail_skip_arrayval[v]];\n//       console.log('this.detail_skip_arrayval[v]');\n//       console.log(this.detail_skip_arrayval[v]);\n//     }\n//       let res = Object.entries(data2);\n//     console.log('this.detail_skip_array');\n//     console.log(this.detail_skip_arrayval);\n//     console.log(this.detail_datatypeval);\n\n//     console.log('res');\n//     console.log(res);\n\n\n\n//     const dialogRef = this.dialog.open(Confirmdialog, {\n//       height: 'auto',\n//       panelClass: 'custom-modalbox',\n//       data: {isconfirmation:false,data:res}\n//     });\n\n//   }\n//   managestatus(data:any){\n//     console.log('data');\n//     console.log(data);\n//     let bs=this.bottomSheet.open(BottomSheet,{panelClass: 'custom-bottomsheet',data:{items:this.statusarrval}});\n\n//     bs.afterDismissed().subscribe(result => {\n//       console.log('The bottom sheet was closed');\n//       console.log(result);\n//       if(result!=null){\n//         data.status = result.val;\n//         data.id = data._id;\n//       this._apiService.togglestatus(this.apiurlval + 'statusupdate', data, this.jwttokenval, this.sourcedataval).subscribe(res => {\n//         let result: any = {};\n//         result = res;\n//         if (result.status == 'success') {\n//           for (let c in this.olddata) {\n//             //this.olddata = this.olddata.filter(olddata => olddata._id != ids[c]);\n//             if (this.olddata[c]._id == data._id) {\n//               console.log('in data update');\n//               console.log(data);\n//               this.olddata[c].status = data.status;\n//             }\n//           }\n//           this.dataSource = new MatTableDataSource(this.olddata);\n//           this.selection = new SelectionModel(true, []);\n//           this.dataSource.paginator = this.paginator;\n//           this.dataSource.sort = this.sort;\n\n//           let dialogRef = this.dialog.open(Confirmdialog, {\n//             panelClass: 'custom-modalbox',\n//             data: {message: 'Status updated successfully!!', isconfirmation: false}\n//           });\n\n//         }\n\n//       }, error => {\n//         console.log('Oooops!');\n//       });\n//     }\n//       //this.animal = result;\n//     });\n\n//   }\n\n// // for tree view in modal\n//   custombuttonfunc(data:any){\n//     console.log('data');\n//     console.log(data);    // row data\n//     console.log(this.custombuttonval);    // object from where the library has been used\n//     let unsafeurl:any=this.custombuttonval.url;   //iframe url\n//     for(let b in this.custombuttonval.fields){\n//       unsafeurl=unsafeurl+'/'+data[this.custombuttonval.fields[b]];\n//     }\n//     console.log('unsafeurl');\n//     console.log(unsafeurl);\n//     unsafeurl=this.sanitizer.bypassSecurityTrustResourceUrl(unsafeurl);   //for sanitizing the url for security, otherwise it won't be able to show the page in iframe, hence modal\n\n//     const dialogRef = this.dialog.open(Confirmdialog, {       // for opening the modal\n//       height: 'auto',\n//       panelClass: 'custom-data-modal',\n//       data: {isconfirmation:false,data:[{data:data,customdata:unsafeurl}]}\n//     });\n\n\n//   }\n\n\n\n//   managestatusmultiple(){\n\n//     let ids:any=[];\n//     let c:any;\n//     for(c in this.selection.selected){\n\n//       ids.push(this.selection.selected[c]._id);\n//     }\n//     console.log('ids');\n//     console.log(ids);\n//     //console.log('data');\n//     //console.log(data);\n//     let bs=this.bottomSheet.open(BottomSheet,{data:{items:this.statusarrval}});\n\n//     bs.afterDismissed().subscribe(result => {\n//       console.log('The bottom sheet was closed');\n//       console.log(result);\n//       if(result!=null){\n//         //data.status = result.val;\n//         //data.id = data._id;\n//         let newstatus:any=result.val;\n//       this._apiService.togglestatusmany(this.apiurlval + 'statusupdate', ids,result.val, this.jwttokenval, this.sourcedataval).subscribe(res => {\n//         let result: any = {};\n//         result = res;\n//         if (result.status == 'success') {\n//           for (let c in this.olddata) {\n//             //this.olddata = this.olddata.filter(olddata => olddata._id != ids[c]);\n//             if (ids.indexOf(this.olddata[c]._id)>-1) {\n//               console.log('in data update');\n//               //console.log(data);\n//               this.olddata[c].status = newstatus;\n//             }\n//           }\n//           this.dataSource = new MatTableDataSource(this.olddata);\n//           this.selection = new SelectionModel(true, []);\n//           this.dataSource.paginator = this.paginator;\n//           this.dataSource.sort = this.sort;\n\n//           let dialogRef = this.dialog.open(Confirmdialog, {\n//             panelClass: 'custom-modalbox',\n//             data: {message: 'Status updated successfully!!', isconfirmation: false}\n//           });\n\n//         }\n\n//       }, error => {\n//         console.log('Oooops!');\n//       });\n//     }\n//       //this.animal = result;\n//     });\n\n//   }\n\n//   deletemultiple(){\n//     console.log('this.selection.selected.length');\n//     console.log(this.selection.selected.length);\n//     console.log(this.selection);\n//     console.log(this.selection.selected);\n\n//     const dialogRef = this.dialog.open(Confirmdialog, {\n//       panelClass: 'custom-modalbox',\n//       data: {message: 'Are you sure you want to delete the selected records?'}\n//     });\n//     let ids:any=[];\n//     let c:any;\n//     for(c in this.selection.selected){\n\n//       ids.push(this.selection.selected[c]._id);\n//     }\n//     console.log('ids');\n//     console.log(ids);\n\n//     dialogRef.afterClosed().subscribe(result => {\n//       console.log('The dialog was closed');\n//       console.log(result);\n//       if(result=='yes'){\n//         this._apiService.deteManyData(this.apiurlval+this.deleteendpointval,ids,this.jwttokenval,this.sourcedataval).subscribe(res => {\n//           let result: any = {};\n//           result = res;\n//           if(result.status=='success'){\n//             for(let c in ids){\n//               this.olddata = this.olddata.filter(olddata => olddata._id != ids[c]);\n//             }\n//             console.log('this.olddata');\n//             console.log(this.olddata);\n//             this.dataSource = new MatTableDataSource(this.olddata);\n//             this.selection = new SelectionModel(true, []);\n//             this.dataSource.paginator = this.paginator;\n//             this.dataSource.sort = this.sort;\n\n//             let dialogRef = this.dialog.open(Confirmdialog, {\n//               panelClass: 'custom-modalbox',\n//               data: {message: 'Record(s)  deleted successfully !!',isconfirmation:false}\n//             });\n\n//           }\n\n//         }, error => {\n//           console.log('Oooops!');\n//         });\n\n//       }\n//       //this.animal = result;\n//     });\n//   }\n//   deletedata(data:any){\n//     //alert(5);\n//     //this._apiService.deteOneData(this.apiurlval+this.deleteendpointval,data,this.jwttokenval);\n//     console.log('data 889 ---');\n//     console.log(data);\n//     console.log('jwttokenval');\n//     console.log(this.jwttokenval);\n\n\n//     const dialogRef = this.dialog.open(Confirmdialog, {\n//       panelClass: 'custom-modalbox',\n//       height: 'auto',\n//       data: {message: 'Are you sure to delete this record ??'}\n//     });\n\n//     dialogRef.afterClosed().subscribe(result => {\n//       console.log('The dialog was closed');\n//       console.log(result);\n//       if(result=='yes'){\n//         this._apiService.deteOneData(this.apiurlval+this.deleteendpointval,data,this.jwttokenval,this.sourcedataval).subscribe(res => {\n//           let result: any = {};\n//           result = res;\n//           if(result.status=='success'){\n//             console.log('this.olddata');\n//             console.log(this.olddata);\n//             console.log(this.olddata._id);\n//             this.olddata = this.olddata.filter(olddata => olddata._id != data._id)\n//             this.dataSource = new MatTableDataSource(this.olddata);\n//             this.selection = new SelectionModel(true, []);\n//             this.dataSource.paginator = this.paginator;\n//             this.dataSource.sort = this.sort;\n//             let dialogRef = this.dialog.open(Confirmdialog, {\n//               panelClass: 'custom-modalbox',\n//               data: {message: 'Record  deleted successfully !!',isconfirmation:false}\n//             });\n//           }\n\n//         }, error => {\n//           console.log('Oooops!');\n//         });\n\n//       }\n//       //this.animal = result;\n//     });\n\n//   }\n\n//  editdata(data:any){\n//     console.log('data');\n//     console.log(data);\n//     console.log(this.editrouteval);\n//     console.log(this.editrouteval+data._id);\n//     console.log(this.jwttokenval);\n//    this.router.navigate([this.editrouteval,data._id]);\n//     //this.na\n\n\n//   }\n\n//   /* artistxp preview button click function start */\n//   artistxpPreview(singleData: any) {\n//     let link = 'http://developmentapi.audiodeadline.com:3090/' + 'datalist';\n//     /******* not completed ******/\n//     let data: any = { \"source\": \"blockchainuser_view\", \"condition\": { \"posts_id_object\": singleData._id }, \"token\": this.jwttokenval };\n//     /******** not completed *****/\n//     this._apiService.postData(link, data).subscribe(response => {\n//       let restlt: any = response;\n//       /* open dialog */\n//       const dialogRef = this.dialog.open(Confirmdialog, {\n//         panelClass: 'custom-modalbox-artistxp-preview',\n//         height: 'auto',\n//         data: { preview: true, previewData: restlt }\n//       });\n//     });\n//   }\n//   /* artistxp preview button click function end */\n\n\n\n// }\n\n\n// @Component({\n//   selector: 'confirmdialog',\n//   templateUrl: 'confirm-dialog.html',\n// })\n// export class Confirmdialog {\n\n//   constructor(\n//       public dialogRef: MatDialogRef<Confirmdialog>,\n//       @Inject(MAT_DIALOG_DATA) public data: any ,public sanitizer:DomSanitizer) {\n//     console.log('my data ...');\n//     console.log(this.data);\n//   }\n\n//   onNoClick(): void {\n//     this.dialogRef.close();\n//   }\n//   sanitizeUrl(unsafeurl:any,data:any,rowdata:any){\n//     for(let b in data){\n//       unsafeurl=unsafeurl+'/'+rowdata[data[b]];\n\n//     }\n//     console.log('unsafeurl');\n//     console.log(unsafeurl);\n//     console.log(data);\n//     console.log(rowdata);\n//     return this.sanitizer.bypassSecurityTrustResourceUrl(unsafeurl);\n//   }\n\n// }\n\n\n\n\n// @Component({\n//   selector: 'bottom-sheet',\n//   templateUrl: 'bottom-sheet.html',\n// })\n// export class BottomSheet {\n//   constructor(private bottomSheetRef: MatBottomSheetRef<BottomSheet>,@Inject(MAT_BOTTOM_SHEET_DATA) public data:any) {}\n\n//   openLink(val:any): void {\n//     console.log('bottomsheet data');\n//     console.log(val);\n//     this.bottomSheetRef.dismiss(val);\n//     //event.preventDefault();\n//   }\n// }\n\n\nimport {Component, OnInit, ViewChild, Input, Inject,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ViewContainerRef} from '@angular/core';\nimport {MatSort, MatTableDataSource,MatPaginator} from '@angular/material';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport { ApiService } from './api.service';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\nimport {MatBottomSheet, MatBottomSheetRef,MAT_BOTTOM_SHEET_DATA} from '@angular/material';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {NavigationCancel, NavigationEnd, NavigationError, NavigationStart, Router, Event} from \"@angular/router\";\nimport {Observable} from 'rxjs';\nimport {startWith, map} from 'rxjs/operators';\nimport {HttpClient} from \"@angular/common/http\";\nimport { DomSanitizer} from '@angular/platform-browser';\ndeclare var $:any;\nimport * as momentImported from 'moment';\nconst moment = momentImported;\n\n@Component({\n  selector: 'lib-listing',\n  templateUrl: './listing.module.html',\n  styleUrls: ['./listing.module.css']\n})\nexport class ListingComponent implements OnInit {\n\n  myControl = new FormControl();\n\n\n  datasourceval:any;\n  search_settingsval:any;\n  click_to_add_ananother_pageval:any;\n  grab_linkval:any;\n  date_search_sourceval:any;\n  date_search_endpointval:any;\n  urlval:any;\n  searchendpointval:any;\n  searchListval:any;\n  pdf_link_val:any;\n  statusarrval:any;\n  skipval:any;\n  errormg:any;\n  jwttokenval:any;\n  detail_datatypeval:any;\n  detail_skip_arrayval:any;\n  deleteendpointval:any;\n  editrouteval:any;\n  apiurlval:any;\n  updateendpointval:any;\n  modify_header_arrayval:any;\n  selection :any;\n  sourcedataval :any;\n  emailarrayval :any;\n  columns :any=[];\n  olddata :any=[];\n  tsearch :any=[];\n  autosearch :any=[];\n  public x :any;\n  public custombuttonval :any;\n  public result :any = {};\n  public sh :any = false;\n  public art :any = false;\n  public aud2 :any = false;\n  public aud :any = false;\n\n  /* this variable for artist xp preview */\n  previewFlug: any = false;\n\n\n  @Input()\n  set search_settings(search_settings: any) {\n    this.search_settingsval = search_settings;\n    console.log('this.search_settingsval');\n    console.log(this.search_settingsval);\n    /*for (let i= 0; i<= this.search_settingsval.search.length; i++) {\n      console.log(this.search_settingsval.search[i].label);\n    }*/\n\n  /*  console.log(this.search_settingsval.selectsearch);\n    console.log(this.search_settingsval.selectsearch[0].label);\n    console.log(this.search_settingsval.selectsearch[0].values);\n    console.log(this.search_settingsval.datesearch);*/\n  }\n\n  @Input()\n  set click_to_add_ananother_page(click_to_add_ananother_page: any) {\n    this.click_to_add_ananother_pageval = click_to_add_ananother_page;\n    console.log('this.click_to_add_ananother_pageval');\n    console.log(this.click_to_add_ananother_pageval);\n  }\n\n  @Input()\n  set grab_link(grab_link: any) {\n    this.grab_linkval = grab_link;\n    console.log('this.grab_linkval');\n    console.log(this.grab_linkval);\n  }\n  @Input()\n  set custombutton(custombutton: any) {\n    this.custombuttonval = custombutton;\n    console.log('this.custombuttonval');\n    console.log(this.custombuttonval);\n  }\n\n  @Input()\n  set date_search_source(date_search_source: any) {\n    this.date_search_sourceval = date_search_source;\n    console.log('this.date_search_sourceval');\n    console.log(this.date_search_sourceval);\n  }\n\n  @Input()\n  set date_search_endpoint(date_search_endpoint: any) {\n    this.date_search_endpointval = date_search_endpoint;\n    console.log('this.date_search_endpointval');\n    console.log(this.date_search_endpointval);\n  }\n   @Input()\n  set url(url: any) {\n    this.urlval = url;\n    console.log('this.urlval');\n    console.log(this.urlval);\n  }\n    @Input()\n  set searchendpoint(searchendpoint: any) {\n    this.searchendpointval = searchendpoint;\n    console.log('this.searchendpointval');\n    console.log(this.searchendpointval);\n  }\n   @Input()\n  set pdf_link(pdf_link: any) {\n    this.pdf_link_val = pdf_link;\n    console.log('this.pdf_link_val');\n    console.log(this.pdf_link_val);\n  }\n  @Input()\n  set searchList(searchList: any) {\n    this.searchListval = searchList;\n    console.log('this.searchListval');\n    console.log(this.searchListval);\n  }\n  @Input()\n  set datasource(datasource: any) {\n    this.datasourceval = datasource;\n    console.log('this.datasourceval');\n    console.log(this.datasourceval);\n  }\n\n  @Input()\n  set skip(skip: any) {\n    this.skipval = skip;\n    console.log('this.skipval');\n    console.log(this.skipval);\n  }\n  @Input()\n  set detail_datatype(detail_datatype: any) {\n    this.detail_datatypeval = detail_datatype;\n    console.log('this.detail_datatypeval');\n    console.log(this.detail_datatypeval);\n  }\n @Input()\n  set detail_skip_array(detail_skip_array: any) {\n    this.detail_skip_arrayval = detail_skip_array;\n    console.log('this.detail_skip_arrayval');\n    console.log(this.detail_skip_arrayval);\n  }\n\n@Input()\n  set sourcedata(sourcedata: any) {\n    this.sourcedataval = sourcedata;\n    console.log('this.sourcedataval');\n    console.log(this.sourcedataval);\n  }\n\n  @Input()\n  set modify_header_array(modify_header_array: any) {\n    this.modify_header_arrayval = modify_header_array;\n    console.log('this.modify_header_arrayval');\n    console.log(this.modify_header_arrayval);\n  }\n\n  @Input()\n    set deleteendpoint(deleteendpointval: any) {\n      this.deleteendpointval = deleteendpointval;\n      console.log('this.deleteendpointval');\n      console.log(this.deleteendpointval);\n    }\n\n @Input()\n    set updateendpoint(updateendpoint: any) {\n      this.updateendpointval = updateendpoint;\n      console.log('this.updateendpointval');\n      console.log(this.updateendpointval);\n    }\n    @Input()\n    set apiurl(apiurl: any) {\n      this.apiurlval = apiurl;\n      console.log('this.apiurlval');\n      console.log(this.apiurlval);\n    }\n\n@Input()\n    set jwttoken(jwttoken: any) {\n      this.jwttokenval = jwttoken;\n      console.log('this.jwttokenval');\n      console.log(this.jwttokenval);\n    }\n\n    @Input()\n    set statusarr(statusarr: any) {\n      this.statusarrval = statusarr;\n      console.log('this.statusarrval');\n      console.log(this.statusarrval);\n    }\n\n    @Input()\n    set emailarray(emailarray: any) {\n      this.emailarrayval = emailarray;\n      console.log('this.emailarrayval');\n      console.log(this.emailarrayval);\n    }\n\n  @Input()\n  set editroute(editroute: any) {\n    console.log('editroute');\n    console.log(editroute);\n    this.editrouteval = editroute;\n    console.log('this.editrouteval');\n    console.log(this.editrouteval);\n  }\n\n\n  /* artistxp preview start */\n  @Input()\n  set preview_artistxp(flug: any) {\n    this.previewFlug = true;\n  }\n  /* artistxp preview end */\n\n\n  stateGroups: string[] = this.searchListval;\n  stateGroup: Observable<string[]>;\n\n  displayedColumns: string[] = [];\n  datacolumns: string[] = [];\n  displayedColumnsheader: string[] = [];\n  formarray: any = [];\n  start_date: any ;\n  dateSearch_condition: any ={};\n  selectSearch_condition: any ={};\n  autoSearch_condition: any ={};\n  textSearch_condition: any ={};\n  end_date: any ;\n  public i: any ;\n  loading: any = false ;\n  public preresult: any={};\n  //dataSource = new MatTableDataSource(this.datasourceval);\n  dataSource = new MatTableDataSource;\n\n  @ViewChild(MatSort,{static: true}) sort: MatSort;\n  @ViewChild(MatPaginator,{static: true}) paginator: MatPaginator;\n  // options: FormGroup;\n  myForm:any;\n  // myForm:any;\n\n  constructor(public _apiService: ApiService,public dialog: MatDialog,private bottomSheet: MatBottomSheet,public fb: FormBuilder,private router: Router, private resolver: ComponentFactoryResolver,\n              private container: ViewContainerRef, public _http: HttpClient, public sanitizer:DomSanitizer) {\n\n    this.router.events.subscribe((event: Event) => {\n        switch (true) {\n          case event instanceof NavigationStart: {\n            this.loading = true;\n            break;\n          }\n          case event instanceof NavigationEnd:\n          case event instanceof NavigationCancel:\n          case event instanceof NavigationError: {\n            this.loading = false;\n            break;\n          }\n          default: {\n            break;\n          }\n        }\n      });\n\n\n\n   /* this.myForm = this.fb.group({\n      email: ['', Validators.compose([Validators.required, Validators.pattern(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/)])],\n      password: ['', Validators.required]\n    });*/\n\n\n\n  }\n  /*@Directive({\n    selector: '[Listing]'\n  })*/\n\n\n\n\n\n\n  inputblur(val:any){\n    console.log('on blur .....');\n    this.myForm.controls[val].markAsUntouched();\n  }\n  ngOnInit() {\n\n    if (this.search_settingsval !=null && this.search_settingsval.search != null && this.search_settingsval.search != '') {\n      console.log('----------------');\n      let source: any;\n      let condition: any = {};\n      source = {\n        source: this.date_search_sourceval,\n        condition: condition\n      };\n      let link = this.apiurlval + '' + this.date_search_endpointval;\n      this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n        console.log(res);\n        this.result = res;\n        console.log(this.result);\n        this.preresult = this.result.res;\n        console.log(this.preresult);\n      });\n\n    }\n\n    // this._service.success(this.columns[0].date,'dndnnd',this.options);\n   /* this.stateGroupOptions = this.myControl.valueChanges\n        .pipe(\n            startWith(''),\n            map(value => this._filterGroup(value))\n        );*/\n\n    this.stateGroup = this.myControl.valueChanges\n        .pipe(\n            startWith(''),\n            map(value => this._filter(value))\n        );\n\n    /*const factory = this.resolver.resolveComponentFactory(\n        componentMapper[this.field.type]\n    );\n    this.componentRef = this.container.createComponent(factory);\n    this.componentRef.instance.field = this.field;\n    this.componentRef.instance.group = this.group;\n*/\n\n    this.x = this.datasourceval;\n    let x=this.x;\n\n    let temp = []\n    let keys = x[0]\n    temp = Object.keys(keys)    /*by Object.keys() we can find the fieldnames(or keys) in an object, i.e, in temp object field names are saved*/\n\n    let coldef_list = [];\n    let header_list = [];\n    for (let i = 0; i < temp.length; i++) {\n      coldef_list.push(temp[i].replace(/\\s/g, \"_\"));      /*to replace spaces in field name by \"_\", we use \"replace(/\\s/g, \"_\")\"*/\n      header_list.push(temp[i])\n    }\n    //coldef_list.push('Actions');\n    //header_list.push('Actions')\n    console.log('coldef_list',coldef_list);\n    console.log('header_list',header_list);\n\n    for (let i = 0; i < coldef_list.length; i++) {\n      let ff = `row.${coldef_list[i]}`\n      var tt = { columnDef: `${coldef_list[i]}`,    header: `${header_list[i].replace(/_/g,\" \")}`,  cell: (row) => eval(ff) ,objlength:header_list.length  };\n      // console.log('tt.columnDef');\n      // console.log(tt.columnDef);\n      for (let b in this.modify_header_arrayval){\n        if(b==tt.header) tt.header=this.modify_header_arrayval[b];\n      }\n\n      if(this.skipval.indexOf(tt.columnDef)==-1)\n      this.columns.push(tt);\n      // console.log('this.columns');\n      // console.log(this.columns);\n    }\n    let displayedcols= this.columns.map(x => x.columnDef);\n    displayedcols.push('Actions');\n\n    this.displayedColumns =displayedcols;\n    this.displayedColumns.unshift('select');        /*adds select column in table by unshift function*/\n\n    let data_list = [];\n    for (let i = 0; i < this.x.length; i++) {\n      data_list.push(this.createData(x[i]));\n    }\n    this.olddata=data_list;\n    console.log(data_list)\n    this.dataSource = new MatTableDataSource(data_list);\n    this.selection = new SelectionModel(true, []);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n\n  onSubmit() {\n    let x: any;\n    this.errormg = '';\n    let data = this.myForm.value;\n    console.log('data');\n    console.log(data);\n    console.log(this.myForm.valid);\n    for (x in this.myForm.controls) {\n      this.myForm.controls[x].markAsTouched();\n    }\n  }\n  dateSearch(val: any) {\n    console.log(\"start date\");\n    console.log(this.start_date);\n    console.log(this.end_date);\n    let sd = moment(this.start_date).unix();\n    let ed = moment(this.end_date).unix();\n    console.log(moment(this.start_date).unix());\n    console.log(moment(this.end_date).unix());\n    console.log(new Date(this.end_date).getTime());\n    let link = this.apiurlval + ''+ this.date_search_endpointval;\n    console.log(link);\n    if(moment(this.end_date).unix()!=null && moment(this.start_date).unix()!=null ) {\n\n\n      let source:any;\n      let condition: any;\n      condition = {};\n\n      condition[val] = {\n        $lte: new Date(this.end_date).getTime(),\n            $gte: new Date(this.start_date).getTime(),\n      };\n      this.dateSearch_condition = {};\n      this.dateSearch_condition = condition;\n      let conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n          source= {\n            source: this.date_search_sourceval,\n            condition: conditionobj,\n          };\n      console.log(source);\n      this._apiService.postSearch(link,this.jwttokenval, source).subscribe(res => {\n        console.log(res);\n        let result: any = {};\n        result = res;\n        console.log(result.res);\n        this.dataSource = new MatTableDataSource(result.res);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      })\n\n      /*this._http.post(link, {source:this.date_search_sourceval,\n        condition: {\n          'created_at': {\n            $lte: new Date(this.end_date).getTime(),\n            $gte: new Date(this.start_date).getTime(),\n          }\n        },token: this.jwttokenval,\n      }).subscribe( res =>{\n        let result: any ={};\n        result = res;\n        console.log(\"ok\");\n        console.log(res);\n        console.log(result.res);\n        let newdata = result.res;\n        this.dataSource = new MatTableDataSource(result.res);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      })*/\n    }else\n      console.log(\"error\");\n  }\n\n\n\n  selectSearch (value:any,type:any){\n    console.log('type');\n    console.log(type);\n    let link = this.apiurlval + ''+ this.date_search_endpointval;\n    console.log(link);\n    let source:any;\n    let condition: any;\n    condition = {};\n    condition[type.field]=value;\n    this.selectSearch_condition = {};\n    this.selectSearch_condition = condition;\n    let conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    source= {\n      source: this.date_search_sourceval,\n      condition: conditionobj\n    };\n    if(value !=null ) {\n      this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n        console.log(res);\n        let result: any = {};\n        result = res;\n        console.log(\"ok\");\n        console.log(res);\n        console.log(result.res);\n        let newdata = result.res;\n        this.dataSource = new MatTableDataSource(result.res);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      });\n    } else\n    {\n      console.log('oops');\n    }\n  console.log(\"error\");\n  }\n  autosearchfunction (value: any) {\n    console.log(value);\n    let val:any=this.autosearch[value];\n    console.log(val);\n    let source:any;\n    let condition: any={};\n    if(this.autosearch[value].length>0 && {$or:[this.autosearch[value].toLowerCase(),this.autosearch[value].toUpperCase(),this.autosearch[value]]})condition[value+'_regex']=val;\n    this.autoSearch_condition = {};\n    this.autoSearch_condition = condition;\n    let conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    source= {\n      source: this.date_search_sourceval,\n      condition: conditionobj\n    };\n    let link = this.apiurlval + ''+ this.date_search_endpointval;\n    this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n      console.log(res);\n      // let result:any={};\n      this.result = res;\n      console.log(this.result);\n      console.log(this.result.res);\n      this.dataSource = new MatTableDataSource(this.result.res);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n\n    });\n  }\n\n  textsearchfunction (value:any){\n    console.log('value');\n    console.log(value);\n    console.log(value.toLowerCase());\n    console.log(this.tsearch[value]);\n    let link = this.apiurlval + ''+ this.date_search_endpointval;\n    console.log(link);\n    let source:any;\n    let condition: any={};\n    //condition = {};\n    let val:any =this.tsearch[value].toLowerCase();\n    // condition={$or:[this.tsearch[value].toLowerCase(),this.tsearch[value].toUpperCase()]};\n    if(this.tsearch[value].length>1 && {$or:[this.tsearch[value].toLowerCase(),this.tsearch[value].toUpperCase()]})condition[value+'_regex']=val;\n    this.textSearch_condition = {};\n    this.textSearch_condition = condition;\n    //condition[value]=\"/222/\";\n    //condition={email:{$regx:'/222/i'}};\n    let conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    source= {\n      source: this.date_search_sourceval,\n      condition: conditionobj\n    };\n    console.log('source');\n    console.log(source);\n    //add loader\n    this.loading = true;\n    if(value !=null  ) {\n      this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n        console.log(res);\n        let result: any = {};\n        result = res;\n        //close loader\n        this.loading = false;\n        console.log(\"ok\");\n        console.log(res);\n        console.log(result.res);\n        let newdata = result.res;\n        this.dataSource = new MatTableDataSource(result.res);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      });\n    } else\n    {\n      console.log('oops');\n    }\n  console.log(\"error\");\n  }\n\n\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n\n    return this.searchListval.filter(option => option.toLowerCase().includes(filterValue));\n  }\n\n  /*private _filterGroup(value: string): StateGroup[] {\n   /!* if (value) {\n      return this.searchListval\n          .map(group => ({names: _filter(group.names, value)}))\n          .filter(group => group.names.length > 0);\n    }\n\n    return this.searchListval;*!/\n    const filterValue = value.toLowerCase();\n\n    return this.searchListval.filter(option => option.toLowerCase().includes(filterValue));\n  }*/\n\n  getstatus(val:any){\n    // console.log('val');\n    // console.log(val);\n    for(let b in this.statusarrval){\n      if(this.statusarrval[b].val==val)\n        return this.statusarrval[b].name;\n      // console.log(this.statusarrval[b].name);\n    }\n    return \"N/A\";\n  }\n  hi(val: any){\n    // console.log('hi  val');\n    // console.log(val);\n    if (val.shatterblok_agreement_date != null && val.audiodeadline_agreement_date ==null ){\n      // console.log('shatter blok');\n      this.sh = true;\n      this.aud = false;\n    }\n    if (val.shatterblok_agreement_date != null && val.audiodeadline_agreement_date !=null) {\n      this.sh = true;\n      this.aud = true;\n    }\n    if (val.shatterblok_agreement_date == null && val.audiodeadline_agreement_date ==null) {\n      this.sh = false;\n      this.aud = false;\n    }\n  }\n  grapurl(val: any){\n    //  for all row checking\n// console.log(val)\n    if (val != null) {\n      this.art = true;\n      this.aud2 = true;\n    }\n    if (val == null) {\n      this.art = false;\n      this.aud2 = false;\n    }\n    // console.log(this.sh);\n    // console.log(this.aud);\n  }\n\n    copyText(row: any, val: string){\n    console.log('row in copyText');\n    console.log(row);\n    console.log('val in copyText');\n    console.log(val)\n      let fullurl = val+''+row;\n    console.log(fullurl);\n        let selBox = document.createElement('textarea');\n        selBox.style.position = 'fixed';\n        selBox.style.left = '0';\n        selBox.style.top = '0';\n        selBox.style.opacity = '0';\n        selBox.value = fullurl;\n        document.body.appendChild(selBox);\n        selBox.focus();\n        selBox.select();\n        document.execCommand('copy');\n        document.body.removeChild(selBox);\n    }\n\n  clickurl(val: any , url: any) {\n    let i\n    console.log('ok');\n    console.log(val);\n    console.log(val._id);\n    console.log(url);\n    console.log(url + '' +val._id + '' + this.pdf_link_val);\n    let link= url + '' +val._id + '' + this.pdf_link_val;\n    window.open(link, \"_blank\");\n  }\n\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n\n\n  createData(point:any){\n    let data = {};\n    Object.keys(point).forEach(function (key) {\n      data[key.replace(/\\s/g, \"_\")] = point[key];\n    });\n    return data\n  }\n\n  applyFilter(filterValue: string) {\n    console.log(filterValue)\n    console.log(this.dataSource);\n    // console.log(this.dataSource[name])\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  /*applyFilter1(filterValue: string, val: any) {\n    console.log(filterValue);\n    console.log(val.value);\n    let value= new MatTableDataSource(val.value);\n\n    value.filter = filterValue.trim().toLowerCase();\n    console.log(value);\n    /!* this.dataSource.filterPredicate = function(data, filter: string): boolean {\n      // return data.name.toLowerCase().includes(filter);\n    };\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }*!/\n  }*/\n\n  styleCell(col_name,row){\n\n    /*\n     if (col_name['columnDef']=='progress' && row['progress']=='100'){\n     return {'color' : 'red'}\n     } else {\n     return {}\n     }\n     */\n\n\n    return {}\n  }\n\n\n  viewdata(data1:any){\n    let data:any;\n    data=data1;\n    let data2:any=[];\n    console.log('data');\n    console.log(data);\n\n      for (let key in data) {\n        let flagk:any='';\n          if (data.hasOwnProperty(key)) {\n              console.log(key + \" -> \" + data[key]+\"--->\"+typeof (data[key]));\n              if(typeof (data[key])=='boolean') {\n                  if(data[key]==true) data[key]='Yes';\n                  if(data[key]==false) data[key]='No';\n              }\n\n              if(typeof (data[key])=='object') {\n                  let tempdata:any=[];\n                  for(let k in data[key]){\n                      console.log('key');\n                      console.log(key);\n                      console.log(this.detail_datatypeval);\n                      for(let p in this.detail_datatypeval){\n                          console.log('p');\n                          console.log(p);\n                          console.log(key);\n                          console.log(data[key][k]);\n                          if(this.detail_datatypeval[p].key==key && this.detail_datatypeval[p].value=='image'){\n\n                              let imgval:any=this.detail_datatypeval[p].fileurl+data[key][k].replace(/'/g, '');\n                              console.log('imgval');\n                              console.log('imgval');\n                              console.log(imgval);\n                              console.log(data[key][k].replace(/'/g, ''));\n                              tempdata.push(\"<img mat-card-image src=\"+imgval+\"><br/>\");\n                             // tempdata.push(\"<span>\"+data[key][k]+\"</span><br/>\")\n\n\n                          }\n                          if(this.detail_datatypeval[p].key==key && this.detail_datatypeval[p].value!='image'){\n                              //tempdata.push(\"<img mat-card-image src=\"+data[key][k]+\"><br/>\")\n                              tempdata.push(\"<span>\"+data[key][k]+\"</span><br/>\");\n\n\n                          }\n                      }\n\n                  }\n                  data[key]=tempdata;\n              }\n          }\n      }\n\n      console.log('data');\n      console.log(data);\n      for(let n in data){\n        if(data[n]!=null && data[n]!=''){\n          data2[n]=data[n];\n        }\n      }\n\n    for(let v in this.detail_skip_arrayval){\n      //data2[this.detail_skip_arrayval[v]]='';\n      delete data2[this.detail_skip_arrayval[v]];\n      console.log('this.detail_skip_arrayval[v]');\n      console.log(this.detail_skip_arrayval[v]);\n    }\n      let res = Object.entries(data2);\n    console.log('this.detail_skip_array');\n    console.log(this.detail_skip_arrayval);\n    console.log(this.detail_datatypeval);\n\n    console.log('res');\n    console.log(res);\n\n\n\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      height: 'auto',\n      panelClass: 'custom-modalbox',\n      data: {isconfirmation:false,data:res}\n    });\n\n  }\n  managestatus(data:any){\n    console.log('data');\n    console.log(data);\n    let bs=this.bottomSheet.open(BottomSheet,{panelClass: 'custom-bottomsheet',data:{items:this.statusarrval}});\n\n    bs.afterDismissed().subscribe(result => {\n      console.log('The bottom sheet was closed');\n      console.log(result);\n      if(result!=null){\n        data.status = result.val;\n        data.id = data._id;\n      this._apiService.togglestatus(this.apiurlval + 'statusupdate', data, this.jwttokenval, this.sourcedataval).subscribe(res => {\n        let result: any = {};\n        result = res;\n        if (result.status == 'success') {\n          for (let c in this.olddata) {\n            //this.olddata = this.olddata.filter(olddata => olddata._id != ids[c]);\n            if (this.olddata[c]._id == data._id) {\n              console.log('in data update');\n              console.log(data);\n              this.olddata[c].status = data.status;\n            }\n          }\n          this.dataSource = new MatTableDataSource(this.olddata);\n          this.selection = new SelectionModel(true, []);\n          this.dataSource.paginator = this.paginator;\n          this.dataSource.sort = this.sort;\n\n          let dialogRef = this.dialog.open(Confirmdialog, {\n            panelClass: 'custom-modalbox',\n            data: {message: 'Status updated successfully!!', isconfirmation: false}\n          });\n\n        }\n\n      }, error => {\n        console.log('Oooops!');\n      });\n    }\n      //this.animal = result;\n    });\n\n  }\n\n// for tree view in modal\n  custombuttonfunc(data:any){\n    console.log('data');\n    console.log(data);    // row data\n    console.log(this.custombuttonval);    // object from where the library has been used\n    let unsafeurl:any=this.custombuttonval.url;   //iframe url\n    for(let b in this.custombuttonval.fields){\n      unsafeurl=unsafeurl+'/'+data[this.custombuttonval.fields[b]];\n    }\n    console.log('unsafeurl');\n    console.log(unsafeurl);\n    unsafeurl=this.sanitizer.bypassSecurityTrustResourceUrl(unsafeurl);   //for sanitizing the url for security, otherwise it won't be able to show the page in iframe, hence modal\n\n    const dialogRef = this.dialog.open(Confirmdialog, {       // for opening the modal\n      height: 'auto',\n      panelClass: 'custom-data-modal',\n      data: {isconfirmation:false,data:[{data:data,customdata:unsafeurl}]}\n    });\n\n\n  }\n\n\n\n  managestatusmultiple(){\n\n    let ids:any=[];\n    let c:any;\n    for(c in this.selection.selected){\n\n      ids.push(this.selection.selected[c]._id);\n    }\n    console.log('ids');\n    console.log(ids);\n    //console.log('data');\n    //console.log(data);\n    let bs=this.bottomSheet.open(BottomSheet,{data:{items:this.statusarrval}});\n\n    bs.afterDismissed().subscribe(result => {\n      console.log('The bottom sheet was closed');\n      console.log(result);\n      if(result!=null){\n        //data.status = result.val;\n        //data.id = data._id;\n        let newstatus:any=result.val;\n      this._apiService.togglestatusmany(this.apiurlval + 'statusupdate', ids,result.val, this.jwttokenval, this.sourcedataval).subscribe(res => {\n        let result: any = {};\n        result = res;\n        if (result.status == 'success') {\n          for (let c in this.olddata) {\n            //this.olddata = this.olddata.filter(olddata => olddata._id != ids[c]);\n            if (ids.indexOf(this.olddata[c]._id)>-1) {\n              console.log('in data update');\n              //console.log(data);\n              this.olddata[c].status = newstatus;\n            }\n          }\n          this.dataSource = new MatTableDataSource(this.olddata);\n          this.selection = new SelectionModel(true, []);\n          this.dataSource.paginator = this.paginator;\n          this.dataSource.sort = this.sort;\n\n          let dialogRef = this.dialog.open(Confirmdialog, {\n            panelClass: 'custom-modalbox',\n            data: {message: 'Status updated successfully!!', isconfirmation: false}\n          });\n\n        }\n\n      }, error => {\n        console.log('Oooops!');\n      });\n    }\n      //this.animal = result;\n    });\n\n  }\n\n  deletemultiple(){\n    console.log('this.selection.selected.length');\n    console.log(this.selection.selected.length);\n    console.log(this.selection);\n    console.log(this.selection.selected);\n\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      panelClass: 'custom-modalbox',\n      data: {message: 'Are you sure you want to delete the selected records?'}\n    });\n    let ids:any=[];\n    let c:any;\n    for(c in this.selection.selected){\n\n      ids.push(this.selection.selected[c]._id);\n    }\n    console.log('ids');\n    console.log(ids);\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      console.log(result);\n      if(result=='yes'){\n        this._apiService.deteManyData(this.apiurlval+this.deleteendpointval,ids,this.jwttokenval,this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if(result.status=='success'){\n            for(let c in ids){\n              this.olddata = this.olddata.filter(olddata => olddata._id != ids[c]);\n            }\n            console.log('this.olddata');\n            console.log(this.olddata);\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            let dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: 'custom-modalbox',\n              data: {message: 'Record(s)  deleted successfully !!',isconfirmation:false}\n            });\n\n          }\n\n        }, error => {\n          console.log('Oooops!');\n        });\n\n      }\n      //this.animal = result;\n    });\n  }\n  deletedata(data:any){\n    //alert(5);\n    //this._apiService.deteOneData(this.apiurlval+this.deleteendpointval,data,this.jwttokenval);\n    console.log('data 889 ---');\n    console.log(data);\n    console.log('jwttokenval');\n    console.log(this.jwttokenval);\n\n\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      panelClass: 'custom-modalbox',\n      height: 'auto',\n      data: {message: 'Are you sure to delete this record ??'}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      console.log(result);\n      if(result=='yes'){\n        this._apiService.deteOneData(this.apiurlval+this.deleteendpointval,data,this.jwttokenval,this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if(result.status=='success'){\n            console.log('this.olddata');\n            console.log(this.olddata);\n            console.log(this.olddata._id);\n            this.olddata = this.olddata.filter(olddata => olddata._id != data._id)\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            let dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: 'custom-modalbox',\n              data: {message: 'Record  deleted successfully !!',isconfirmation:false}\n            });\n          }\n\n        }, error => {\n          console.log('Oooops!');\n        });\n\n      }\n      //this.animal = result;\n    });\n\n  }\n\n editdata(data:any){\n    console.log('data');\n    console.log(data);\n    console.log(this.editrouteval);\n    console.log(this.editrouteval+data._id);\n    console.log(this.jwttokenval);\n   this.router.navigate([this.editrouteval,data._id]);\n    //this.na\n\n\n  }\n\n  /* artistxp preview button click function start */\n  artistxpPreview(singleData: any) {\n    let link = 'http://developmentapi.audiodeadline.com:3090/' + 'datalist';\n    /******* not completed ******/\n    let data: any = { \"source\": \"blockchainuser_view\", \"condition\": { \"posts_id_object\": singleData._id }, \"token\": this.jwttokenval };\n    /******** not completed *****/\n    this._apiService.postData(link, data).subscribe(response => {\n      let restlt: any = response;\n      /* open dialog */\n      const dialogRef = this.dialog.open(Confirmdialog, {\n        panelClass: 'custom-modalbox-artistxp-preview',\n        height: 'auto',\n        data: { preview: true, previewData: restlt }\n      });\n    });\n  }\n  /* artistxp preview button click function end */\n\n\n\n}\n\n\n@Component({\n  selector: 'confirmdialog',\n  templateUrl: 'confirm-dialog.html',\n})\nexport class Confirmdialog {\n\n  constructor(\n      public dialogRef: MatDialogRef<Confirmdialog>,\n      @Inject(MAT_DIALOG_DATA) public data: any ,public sanitizer:DomSanitizer) {\n    console.log('my data ...');\n    console.log(this.data);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  sanitizeUrl(unsafeurl:any,data:any,rowdata:any){\n    for(let b in data){\n      unsafeurl=unsafeurl+'/'+rowdata[data[b]];\n\n    }\n    console.log('unsafeurl');\n    console.log(unsafeurl);\n    console.log(data);\n    console.log(rowdata);\n    return this.sanitizer.bypassSecurityTrustResourceUrl(unsafeurl);\n  }\n\n}\n\n\n\n\n@Component({\n  selector: 'bottom-sheet',\n  templateUrl: 'bottom-sheet.html',\n})\nexport class BottomSheet {\n  constructor(private bottomSheetRef: MatBottomSheetRef<BottomSheet>,@Inject(MAT_BOTTOM_SHEET_DATA) public data:any) {}\n\n  openLink(val:any): void {\n    console.log('bottomsheet data');\n    console.log(val);\n    this.bottomSheetRef.dismiss(val);\n    //event.preventDefault();\n  }\n}","/**\n * Created by debasiskar on 01/04/19.\n */\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {NgModule} from '@angular/core';\nimport { CommonModule } from \"@angular/common\";\n// import { MatMomentDateModule } from \"@angular/material-moment-adapter\";\nimport {\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    // MatMomentDateModule,\n} from '@angular/material';\n\n@NgModule({\n    exports: [\n        A11yModule,\n        CdkStepperModule,\n        CdkTableModule,\n        CdkTreeModule,\n        DragDropModule,\n        MatAutocompleteModule,\n        MatBadgeModule,\n        MatBottomSheetModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatStepperModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatDividerModule,\n        MatExpansionModule,\n        MatGridListModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatNativeDateModule,\n        MatPaginatorModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRadioModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatTableModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatTreeModule,\n        PortalModule,\n        ScrollingModule,\n        // MatMomentDateModule,\n    ]\n})\nexport class DemoMaterialModule {}\n\n\n/**  Copyright 2019 Google Inc. All Rights Reserved.\n Use of this source code is governed by an MIT-style license that\n can be found in the LICENSE file at http://angular.io/license */","import {NgModule, Component, CUSTOM_ELEMENTS_SCHEMA} from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {ListingComponent, Confirmdialog,BottomSheet} from './listing.component';\nimport {DemoMaterialModule} from './materialmodules';\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\nimport { ApiService } from './api.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {CommonModule} from \"@angular/common\";\n//import { FooterComponent } from './footer/footer.component';\n//import { MyfromComponent } from './myfrom/myfrom.component';\n//import {DynamicFieldDirective} from \"./myfrom/dynamic-field.directive\";\n//import { MatFileUploadModule } from 'angular-material-fileupload';\n//import {NgxUploaderModule} from \"ngx-uploader\";\n//import {RouterModule} from \"@angular/router\";\n// import { FieldConfig } from './myfrom/field.interface';\n// import { DynamicFieldDirective } from './myfrom/dynamic-field.directive';\n// import { DynamicFormBuilderComponent } from '../lib/dynamic-form-builder/dynamic-form-builder.component';\n/*\nimport { FieldBuilderComponent } from '../lib/dynamic-form-builder/field-builder/field-builder.component';\nimport { TextBoxComponent } from '../lib/dynamic-form-builder/atoms/textbox';\nimport { DropDownComponent } from '../lib/dynamic-form-builder/atoms/dropdown';\nimport { FileComponent } from '../lib/dynamic-form-builder/atoms/file';\nimport { CheckBoxComponent } from '../lib/dynamic-form-builder/atoms/checkbox';\nimport { RadioComponent } from '../lib/dynamic-form-builder/atoms/radio';\n*/\nimport { MomentModule } from 'ngx-moment';\nimport {RouterModule} from \"@angular/router\";\n//import { SinglepostComponent } from './singlepost/singlepost.component';\n\n\n\n@NgModule({\n  declarations: [ListingComponent,Confirmdialog,BottomSheet],\n    imports: [\n        CommonModule,\n        BrowserModule, BrowserAnimationsModule,\n        DemoMaterialModule,\n        FormsModule, ReactiveFormsModule,\n         RouterModule,\n        MomentModule\n        // DynamicFieldDirective,\n\n    ],\n    schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\n  exports: [ListingComponent,\n      //MyfromComponent,\n      ],\n  providers: [ApiService],\n  entryComponents:[Confirmdialog,BottomSheet],\n})\nexport class ListingModule {\n  // field: FieldConfig;\n  // group: FormGroup;\n\n}\n"]}