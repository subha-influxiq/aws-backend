{"version":3,"file":"login.umd.js.map","sources":["ng://login/lib/login.service.ts","ng://login/lib/api.service.ts","ng://login/lib/login.component.ts","ng://login/lib/material-module.ts","ng://login/lib/sign-up/sign-up.component.ts","ng://login/lib/forget-password/forget-password.component.ts","ng://login/lib/reset-password/reset-password.component.ts","ng://login/lib/login.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor() { }\n}\n","import { ElementRef, EventEmitter, Injectable, Input, ViewChild } from '@angular/core';\nimport { switchMap, map, takeWhile } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n// for setting observables to get serverurl and endpointurl from app\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport{CookieService} from 'ngx-cookie-service';\n\n\n@Injectable({   \n  providedIn: 'root'\n})\nexport class ApiService {\n\n  public lengthis;\n  public percentageis;\n  public inprogress;\n  public progress: any = [];\n  public uploadtype;\n  public uploaderror: any = '';\n  public accesstoken:any=this.cookieService.get('jwtToken');\n  // public accesstoken:any='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIiLCJleHAiOjE1NjgzNTgyMTAsImlhdCI6MTU2ODI3MTgxMH0.2ltvxVKwfX1uwMOwQ2Zzgp1K2jiaCDj051Wyho0Iw-Q';\n  fileservername: any = [];\n  serverUrl: any;\n  addendpointUrl: any;\n  uploadEndpointUrl:any; //souresh\n  updateendpointUrl: any;\n  deletesingle_endpointUrl: any;\n  updatestatus_single_endpointUrl: any;\n  deletemultiple_endpointUrl: any;\n  updatestatus_multiple_endpointUrl: any;\n  getdata_endpointUrl: any;\n  private subjectForServerUrl = new Subject<any>();\n  private subjectForaddEndpointUrl = new Subject<any>();\n  private subjectForuploadEndpointUrl = new Subject<any>();  //added by souresh\n  private subjectForupdateEndpointUrl = new Subject<any>();\n  private subjectFordeletesingleEndpointUrl = new Subject<any>();\n  private subjectForupdatestatusSingleEndpointUrl = new Subject<any>();\n  private subjectForGetdataEndpointUrl = new Subject<any>();\n  public subscriptionServer: Subscription;\n  public subscriptionaddEndpoint: Subscription;\n  public subscriptionuploadEndpoint: Subscription;   //added by souresh\n  public subscriptionupdateEndpoint: Subscription;\n  public subscriptiondeletesingleEndpoint: Subscription;\n  public subscriptionupdatestatusSingleEndpoint: Subscription;\n  public subscriptionGetdataEndpoint: Subscription;\n\n  constructor(private _http: HttpClient,\n    private _authHttp: HttpClient,private cookieService :CookieService) {\n    this.subscriptionServer = this.getServerUrl().subscribe(message => {\n     let result: any;\n      result = message;\n      if (result != null) {\n        this.serverUrl = result;\n      } else {\n        this.serverUrl = null;\n      }\n    });\n    this.subscriptionaddEndpoint = this.getaddEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.addendpointUrl = result;\n      } else {\n        this.addendpointUrl = null;\n      }\n    });\n    /*********added by souresh***********/\n    this.subscriptionuploadEndpoint=this.getuploadEndpoint().subscribe(message=>{\n      let result:any;\n      result=message;\n        if(result!=null){\n          this.uploadEndpointUrl = result;\n        } else{\n          this.uploadEndpointUrl = null;\n        }\n    })\n    /************souresh end here**************/\n    this.subscriptionupdateEndpoint = this.getupdateEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.updateendpointUrl = result;\n      } else {\n        this.updateendpointUrl = null;\n      }\n    });\n    this.subscriptiondeletesingleEndpoint = this.getdeletesingleEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.deletesingle_endpointUrl = result;\n      } else {\n        this.deletesingle_endpointUrl = null;\n      }\n    });\n    this.subscriptionupdatestatusSingleEndpoint = this.getupdatestatus_singleEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.updatestatus_single_endpointUrl = result;\n      } else {\n        this.updatestatus_single_endpointUrl = null;\n      }\n    });\n    this.subscriptionGetdataEndpoint = this.getdataEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.getdata_endpointUrl = result;\n      } else {\n        this.getdata_endpointUrl = null;\n      }\n    });\n\n    \n  }\n\n  setServerUrl(value: any) {\n    this.subjectForServerUrl.next(value);\n  }\n  public clearServerUrl() {\n    this.subjectForServerUrl.next(null);\n  }\n  public getServerUrl(): Observable<any> {\n    return this.subjectForServerUrl.asObservable();\n  }\n\n  setaddEndpoint(value: any) {\n    this.subjectForaddEndpointUrl.next(value);\n  }\n  public clearaddEndpoint() {\n    this.subjectForaddEndpointUrl.next(null);\n  }\n  public getaddEndpoint(): Observable<any> {\n    return this.subjectForaddEndpointUrl.asObservable();\n  }\n/*****added by souresh******/\n  setuploadEndpont(value:any){\n    this.subjectForuploadEndpointUrl.next(value);\n  }\n  public clearuploadEndpoint(){\n    this.subjectForuploadEndpointUrl.next(null);\n  }\n  public getuploadEndpoint(): Observable <any> {\n    return this.subjectForuploadEndpointUrl.asObservable();\n  }\n   /********souresh end here********/\n\n\n  setupdateEndpoint(value: any) {\n    this.subjectForupdateEndpointUrl.next(value);\n  }\n  public clearupdateEndpoint() {\n    this.subjectForupdateEndpointUrl.next(null);\n  }\n  public getupdateEndpoint(): Observable<any> {\n    return this.subjectForupdateEndpointUrl.asObservable();\n  }\n\n  setdeletesingleEndpoint(value: any) {\n    this.subjectFordeletesingleEndpointUrl.next(value);\n  }\n  public cleardeletesingleEndpoint() {\n    this.subjectFordeletesingleEndpointUrl.next(null);\n  }\n  public getdeletesingleEndpoint(): Observable<any> {\n    return this.subjectFordeletesingleEndpointUrl.asObservable();\n  }\n\n  setupdatestatus_singleEndpoint(value: any) {\n    this.subjectForupdatestatusSingleEndpointUrl.next(value);\n  }\n  public clearupdatestatus_singleEndpoint() {\n    this.subjectForupdatestatusSingleEndpointUrl.next(null);\n  }\n  public getupdatestatus_singleEndpoint(): Observable<any> {\n    return this.subjectForupdatestatusSingleEndpointUrl.asObservable();\n  }\n\n  setgetdataEndpoint(value: any) {\n    this.subjectForGetdataEndpointUrl.next(value);\n  }\n  public cleargetdataEndpoint() {\n    this.subjectForGetdataEndpointUrl.next(null);\n  }\n  public getdataEndpoint(): Observable<any> {\n    return this.subjectForGetdataEndpointUrl.asObservable();\n  }\n\n\n\n  isTokenExpired() {\n\n    // const helper = new JwtHelperService();\n    // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n    // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n    // console.log('refresh_token',localStorage.getItem('refresh_token'))\n    // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n    // console.log('id_token isExpired:',isIdTokenExpired)\n    // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n  }\n\n  addData(requestdata: any) {\n    console.log('in adddata apiservice');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken          //hard code written access-token(temp)\n      })\n    };\n\n    // console.log('httpoptions',httpOptions,this.serverUrl,requestdata);\n    var result = this._http.post(this.serverUrl + this.addendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n  /*******added by souresh************/\n  uploadFile(requestdata:any){\n    const httpOptions={\n        headers: new HttpHeaders({\n          'Content-Type':'application/json',\n          'access-token':this.accesstoken          //hard code written access-token(temp)\n        })\n    };\n    var result=this._http.post(this.serverUrl + this.uploadEndpointUrl,JSON.stringify(requestdata),httpOptions).pipe(map(res=>res));\n    return result;\n  }\n  /*******souresh end here********/\n  UpdateData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'access-token': this.accesstoken          //hard code written access-token(temp)\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.updateendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  getData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.getdata_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n/*************** Added by himadri start here ***************/ \n  addLogin(requestdata: any) {\n    console.log('in addLogin apiservice');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n        // 'Authorization': this.accesstoken          //hard code written access-token(temp)\n      })\n    };\n\n    // console.log(this.serverUrl,requestdata);\n    var result = this._http.post(this.serverUrl + this.addendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n  /*************** Added by himadri end here ***************/ \n\n/*************** Added by himadri start here ***************/ \nforgetPassword(requestdata: any) {\n  console.log('in forgetPassword apiservice');\n  const httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n      // 'Authorization': this.accesstoken          //hard code written access-token(temp)\n    })\n  };\n\n  // console.log(this.serverUrl,requestdata);\n  var result = this._http.post(this.serverUrl + this.addendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n  return result;\n}\n/*************** Added by himadri end here ***************/ \n\n\n  deleteSingleData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'access-token': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.deletesingle_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  deleteMultipleData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'access-token': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.deletesingle_endpointUrl+'many', JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateStatusForSingleData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'access-token': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.updatestatus_single_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateStatusForMultipleData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'access-token': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.updatestatus_single_endpointUrl+'many', JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n  CustomRequest(requestdata: any, endpoint:any ) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'access-token': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl +endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n\n\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators, MinLengthValidator, FormGroupDirective } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { ApiService } from './api.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n\n\n\n@Component({\n  selector: 'lib-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  public message: any = '';\n  //   FormGroupDirective: It is a directive that binds an existing FormGroup to a DOM element.\n  @ViewChild(FormGroupDirective) formDirective: FormGroupDirective;\n\n  public fromTitleValue: any = '';\n  public serverURL: any = '';\n  public signUpRouteingUrlValue: any = '';\n  public forgetRouteingUrlValue: any = '';\n  public routerStatusValue: any = '';\n  public endpointValue: any;\n  public logoValue: any = '';\n  public cookieSetValue: any = '';\n  public buttonNameValue: any = '';\n\n  @Input()         // Set the project name\n  set fromTitle(fromTitleVal: any) {\n    this.fromTitleValue = (fromTitleVal) || '<no name set>';\n    this.fromTitleValue = fromTitleVal;\n\n  }\n  @Input()      // set the from logo\n\nset logo(logoVal : any) {\n  this.logoValue = logoVal;\n}\n@Input()\nset buttonName (buttonNameVal :any){\n  this.buttonNameValue = (buttonNameVal) || '<no name set>';\n  this.buttonNameValue = buttonNameVal\n}\n\n  @Input()        // setting the server url from project\n  set fullUrl(fullUrlVal: any) {\n    this.serverURL = (fullUrlVal) || '<no name set>';\n    this.serverURL = fullUrlVal;\n\n  }\n  @Input()\n\n  set endpoint(endpointVal: any) {\n    this.endpointValue = endpointVal;\n  }\n\n@Input()\n\npublic set cookieSet(v : any) {\n  this.cookieSetValue = v;\n  // console.log(this.cookieSetValue.cookie);\n  // for (const key in this.cookieSetValue.cookie) {\n            \n  //   console.log(this.cookieSetValue.cookie[key]);\n  // }\n\n}\n\n\n\n  @Input()          // setting the navigate By Sign Up Url from project\n  set signUpRouteingUrl(routeingUrlval: any) {\n    this.signUpRouteingUrlValue = (routeingUrlval) || '<no name set>';\n    this.signUpRouteingUrlValue = routeingUrlval;\n    console.log(this.signUpRouteingUrlValue)\n  }\n\n\n  @Input()          // setting the navigate By Forget Password Url from project\n  set forgetRouteingUrl(routeingUrlval: any) {\n    this.forgetRouteingUrlValue = (routeingUrlval) || '<no name set>';\n    this.forgetRouteingUrlValue = routeingUrlval;\n    console.log(this.forgetRouteingUrlValue)\n  }\n\n  @Input()          // setting the navigate By Forget Password Url from project\n  set routerStatus(routerStatusval: any) {\n    this.routerStatusValue = (routerStatusval) || '<no name set>';\n    this.routerStatusValue = routerStatusval;\n    // console.log(this.routerStatusValue);\n    // console.log(this.routerStatusValue.data.length);\n  }\n\n\n\n\n  public loginForm: FormGroup;\n  public project_name: any = '';\n\n  constructor(public fb: FormBuilder, public http: HttpClient, public router: Router, public apiService: ApiService, public cookieService: CookieService) {\n    this.loginForm = this.fb.group({\n      email: ['', Validators.compose([Validators.required, Validators.pattern(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/)])],\n      password: ['', Validators.required]\n    })\n  }\n\n  ngOnInit() {\n    this.apiService.clearServerUrl();       // Clear the server url\n    setTimeout(() => {\n      this.apiService.setServerUrl(this.serverURL);       // set the server url \n    }, 50);\n    // console.log(this.serverURL);\n\n\n    this.apiService.clearaddEndpoint();       // clear the endpoint \n    setTimeout(() => {\n      this.apiService.setaddEndpoint(this.endpointValue);       // set the endpoint\n    }, 50);\n    // console.log(this.addEndpointData.endpoint);\n\n  }\n\n/********* Login Form Submit start here*********/ \n  loginFormSubmit() {\n    let x: any;\n/****************** test*******************/ \n// for (const key in this.cookieSetValue.cookie) {\n//   console.log(this.cookieSetValue.cookie[key].type);\n//   if (result.token == this.cookieSetValue.cookie[key].type) {\n//     console.log('+++++++++++++++');\n//   }\n// }\n\n\n    // use for validation checking\n\n    for (x in this.loginForm.controls) {\n      this.loginForm.controls[x].markAsTouched();\n    }\n\n    if (this.loginForm.valid) {\n      let data: any = this.loginForm.value;\n      this.apiService.addLogin(data).subscribe((response) => {\n        // console.log(response);\n        let result: any = {};\n        result = response;\n      //   let cookiekeyarr:any = [];\n      //   let cookievaluearr:any = [];\n      //   for(let j in result.item){\n      //     // console.log(Object.values(result.item[j]));\n      //     // cookiekeyarr = Object.keys(result.item[j]);\n      //     // cookievaluearr = Object.values(result.item[j]);\n      //     cookievaluearr.push(Object.keys(result.item[j]), Object.values(result.item[j]));\n      //   }\n      //   // console.log('cookiekeyarr'+cookiekeyarr);\n      //   console.log(cookievaluearr);\n      // //   setTimeout(()=>{\n      //   // for (let key in cookiekeyarr){\n      //     for(let value in cookievaluearr[0]){\n      //       console.log('hi'+value);\n      //       // this.cookieService.set(cookiekeyarr[key],cookievaluearr[value]);\n      //     }\n      //   // }\n      // // },2000);\n      //   // setTimeout(()=>{\n      //   //   console.log(this.cookieService.getAll());\n      //   // },4000);\n        \n\n        if (result.status == \"success\") {\n          // for (const key in this.cookieSetValue.cookie) {\n          //   console.log(this.cookieSetValue.cookie[key].type);\n          //   if (result == this.cookieSetValue.cookie[key].type) {\n          //     console.log('+++++++++++++++');\n          //   }\n          // }\n          this.cookieService.set('user_details', JSON.stringify(result.item[0]));\n          this.cookieService.set('jwtToken', result.token);\n\n          setTimeout(() => {\n            // console.log(this.cookieService.getAll());\n          }, 1000);\n\n          // console.log('result')\n          // console.log(result.item[0].type)\n          for (const key in this.routerStatusValue.data) {\n            // console.log(this.routerStatusValue.data[key].type);\n\n            if (result.item[0].type === this.routerStatusValue.data[key].type) {\n              this.router.navigateByUrl('/' + this.routerStatusValue.data[key].routerNav)     // navigate to dashboard url \n            }\n          }\n\n\n          // this is use for reset the from\n          this.formDirective.resetForm();\n          this.message = '';\n        } else {\n          // display error message on html\n          this.message = result.msg;\n        }\n      });\n    }\n\n  }\n\n\n  inputUntouched(val: any) {\n    this.loginForm.controls[val].markAsUntouched();\n  }\n\n  // This is use for navigate this component to forget component \n  forgetpassword() {\n    this.router.navigateByUrl('/' + this.forgetRouteingUrlValue.path);\n  }\n\n  // This is use for navigate this component to sign-Up component \n  signup() {\n    this.router.navigateByUrl('/' + this.signUpRouteingUrlValue.path);\n  }\n\n  customFunction(link: any) {\n    this.router.navigateByUrl('/'+ link);\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\n\n@NgModule({\n  exports: [\n    A11yModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n  ]\n})\nexport class DemoMaterialModule {}\n\n\n/**  Copyright 2019 Google Inc. All Rights Reserved.\n Use of this source code is governed by an MIT-style license that\n can be found in the LICENSE file at http://angular.io/license */\n","import { Component, OnInit, Input, Inject, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormGroupDirective } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material';\nimport { ApiService } from '../api.service';\n\n\n\nexport interface DialogData {\n  value: string;\n  Url: any;\n}\n\n@Component({\n  selector: 'lib-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit {\n  public value: any='';\n  public link: any='';\n  public Url: any='';\n  public message: any = '';\n\n  //   FormGroupDirective: It is a directive that binds an existing FormGroup to a DOM element.\n  @ViewChild(FormGroupDirective) formDirective: FormGroupDirective;\n\n  public formTitleValue: any = '';\n  public serverUrlValue: any = '';\n  public forgetRouteingUrlValue: any = '';\n  public loginRouteingUrlValue: any = '';\n  public addEndpointValue: any = '';\n  public logoValue: any = '';\n  public typevalue: any = '';\n\n  @Input()         // Set the Form name\n  set formTitle(formTitleVal: any) {\n    this.formTitleValue = (formTitleVal) || '<no name set>';\n    this.formTitleValue = formTitleVal;\n    // console.log(this.formTitleValue);\n\n  }\n\n  @Input()        // setting the server url from project\n  set serverUrl(serverUrlVal: any) {\n    this.serverUrlValue = (serverUrlVal) || '<no name set>';\n    this.serverUrlValue = serverUrlVal;\n    // console.log(this.serverUrlValue);\n\n  }\n@Input()      // set the from logo\n\nset logo(logoVal : any) {\n  this.logoValue = logoVal;\n}\n\n@Input()      // set the from logo\n\nset modaleLogo(modaleLogoVal : any) {\n  this.link = modaleLogoVal;\n}\n\n@Input()\nset userType(typeval: any) {\n  this.typevalue = typeval;\n}\n\n\n  @Input()        // set the endpoint And source\n  public set addEndpoint(addEndpointVal: any) {\n    this.addEndpointValue = addEndpointVal;\n    console.log(this.addEndpointValue)\n  }\n\n\n  @Input()          // setting the navigate By Forget Password Url from project\n  set forgetRouteingUrl(routeingUrlval: any) {\n    this.forgetRouteingUrlValue = (routeingUrlval) || '<no name set>';\n    this.forgetRouteingUrlValue = routeingUrlval;\n    // console.log(this.forgetRouteingUrlValue);\n  }\n\n  @Input()          // setting the navigate By login Url from project\n  set loginRouteingUrl(routeingUrlval: any) {\n    this.loginRouteingUrlValue = (routeingUrlval) || '<no name set>';\n    this.loginRouteingUrlValue = routeingUrlval;\n    // console.log(this.loginRouteingUrlValue);\n  }\n\n\n\n  public signUpForm: FormGroup;\n\n  constructor(public fb: FormBuilder, public http: HttpClient, public router: Router, public dialog: MatDialog, public apiService: ApiService) {\n    this.signUpForm = this.fb.group({\n      email: ['', Validators.compose([Validators.required, Validators.pattern(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/)])],\n      firstname: ['', Validators.required],\n      lastname: ['', Validators.required],\n      password: ['', Validators.required]\n    })\n  }\n\n  ngOnInit() {\n    this.apiService.clearServerUrl();       //  Clear the server url\n    setTimeout(() => {\n      this.apiService.setServerUrl(this.serverUrlValue);        //  set the server url\n    }, 50);\n    // console.log(this.serverURL);\n\n\n    this.apiService.clearaddEndpoint();       //  Clear the endpoint\n    setTimeout(() => {\n      this.apiService.setaddEndpoint(this.addEndpointValue.endpoint);   //  set the endpoint\n    }, 50);\n  }\n\n\n/********* Sign Up Form Submit start here*********/ \n  signUpFormSubmit() {\n    // use for validation checking\n    for (let x in this.signUpForm.controls) {\n      this.signUpForm.controls[x].markAsTouched();\n    }\n    if (this.signUpForm.valid) {\n      // let link: any = this.fullUrlValue;\n      let allData: any = this.signUpForm.value;\n      allData.type = this.typevalue;\n      console.log(allData);\n\n      let data: any = {\n        'data': allData,\n        \"source\": this.addEndpointValue.source\n      };\n      console.log(data);\n      this.apiService.addData(data).subscribe((response) => {\n        let result: any = {};\n        result = response;\n        console.log(result);\n\n        if (result.status == \"success\") {\n          const dialogRef = this.dialog.open(successModalComponent, {\n            width: '250px',\n            data: {value: result.status, Url: this.link}\n          });\n          // this.router.navigateByUrl('/' + )     // navigate to dashboard url \n\n\n          // this is use for reset the from\n          this.formDirective.resetForm();\n        } else {\n          // display error message on html\n          this.message = result.msg;\n        }\n      })\n\n    }\n  }\n\n\n/********* Sign Up Form Submit end here*********/ \n\n  // This is use for navigate this component to forget component \n  forgetpassword() {\n    this.router.navigateByUrl('/' + this.forgetRouteingUrlValue);\n  }\n\n\n  // This is use for navigate this component to forget component \n  login() {\n    this.router.navigateByUrl('/' + this.loginRouteingUrlValue);\n  }\n\n  inputUntouched(val: any) {\n    this.signUpForm.controls[val].markAsUntouched();\n  }\n}\n\n\n@Component({\n  selector: 'successModal',\n  templateUrl: '../successModal.html',\n\n})\nexport class successModalComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef<successModalComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {\n      console.log(data)\n     }\n\n    \n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n\n\n","import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormGroupDirective } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ApiService } from '../api.service';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'lib-forget-password',\n  templateUrl: './forget-password.component.html',\n  styleUrls: ['./forget-password.component.css']\n})\nexport class ForgetPasswordComponent implements OnInit {\n  public message: any = '';\n  public buttonNameValue: any = '';\n\n  //   FormGroupDirective: It is a directive that binds an existing FormGroup to a DOM element.\n  @ViewChild(FormGroupDirective) formDirective: FormGroupDirective;\n\n  public forgetPasswordForm: FormGroup;\n  public formTitleValue: any = '';          // This is From title\n  public serverUrlValue: any = '';          //  This is Server url\n  public signUpRouteingUrlValue: any = '';  // setting the navigate By Sign Up Url from project\n  public loginRouteingUrlValue: any = '';  // setting the navigate By login Url from project\n  private domanUrlValue: any = '';          // This is reset password url\n  public addEndpointValue: any = '';        // This is endpoint url\n  public logoValue: any = '';               // This is from logo url\n  public durationInSeconds = 5;             // This is SnackBar set time\n\n\n  @Input()\nset buttonName (buttonNameVal :any){\n  this.buttonNameValue = (buttonNameVal) || '<no name set>';\n  this.buttonNameValue = buttonNameVal\n}\n\n  @Input()         // Set the project email Doman URL\n  set domanUrl(domanUrlVal: any) {\n    this.domanUrlValue = (domanUrlVal) || '<no name set>';\n    this.domanUrlValue = domanUrlVal;\n    // console.log(this.domanUrlValue);\n  }\n  @Input()         // Set the project name\n  set formTitle(formTitleVal: any) {\n    this.formTitleValue = (formTitleVal) || '<no name set>';\n    this.formTitleValue = formTitleVal;\n\n  }\n\n  @Input()        // setting the server url from project\n  set serverUrl(serverUrlVal: any) {\n    this.serverUrlValue = (serverUrlVal) || '<no name set>';\n    this.serverUrlValue = serverUrlVal;\n\n  }\n\n  @Input()      // set the from logo\n\n  set logo(logoVal: any) {\n    this.logoValue = logoVal;\n  }\n\n  @Input()          // set the endpoint and source\n\n  set addEndpoint(addEndpointval: any) {\n    this.addEndpointValue = addEndpointval;\n  }\n\n\n  @Input()          // setting the navigate By Sign Up Url from project\n  set signUpRouteingUrl(routeingUrlval: any) {\n    this.signUpRouteingUrlValue = (routeingUrlval) || '<no name set>';\n    this.signUpRouteingUrlValue = routeingUrlval;\n    // console.log(this.signUpRouteingUrlValue)\n  }\n\n  @Input()          // setting the navigate By Sign Up Url from project\n  set loginRouteingUrl(routeingUrlval: any) {\n    this.loginRouteingUrlValue = (routeingUrlval) || '<no name set>';\n    this.loginRouteingUrlValue = routeingUrlval;\n    // console.log(this.loginRouteingUrlValue)\n  }\n\n  constructor(\n    public fb: FormBuilder,\n    public router: Router,\n    public apiService: ApiService,\n    private snackBar: MatSnackBar\n  ) {\n\n\n\n    this.forgetPasswordForm = this.fb.group({\n      email: ['', Validators.compose([Validators.required, Validators.pattern(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/)])],\n\n    });\n\n\n\n\n  }\n\n  ngOnInit() {\n    this.apiService.clearServerUrl();       //  Clear the server url\n    setTimeout(() => {\n      this.apiService.setServerUrl(this.serverUrlValue);        //  set the server url\n    }, 50);\n    // console.log(this.serverURL);\n\n\n    this.apiService.clearaddEndpoint();       //  Clear the endpoint\n    setTimeout(() => {\n      this.apiService.setaddEndpoint(this.addEndpointValue.endpoint);   //  set the endpoint\n    }, 50);\n  }\n\n  /********* Forget password  Form Submit start here*********/\n  forgetPasswordSubmit() {\n    let x: any;\n\n    //  This for-loop use for from blank or properly validated checking  \n    for (x in this.forgetPasswordForm.controls) {\n      this.forgetPasswordForm.controls[x].markAsTouched();\n    }\n    if (this.forgetPasswordForm.valid) {    //    validation checking\n\n      this.openSnackBar();              // open snack-bar function\n\n      let link: any = this.serverUrlValue;\n      let data: any = this.forgetPasswordForm.value;\n\n      data.domanUrl = this.domanUrlValue;\n\n      this.apiService.forgetPassword(data).subscribe((response) => {\n        // console.log(response);\n        let result: any = {};\n        result = response;\n\n        if (result.status == \"success\") {\n          this.openSnackBar();             // open snack-bar function\n          // this is use for reset the from\n          this.formDirective.resetForm();\n          this.message = '';         // clear the from\n        } else {\n\n          // display error message on html\n          this.message = result.msg;      // show the error message\n\n        }\n      });\n    }\n  }\n\n  /********* Forget password  Form Submit end here*********/\n\n\n  /********* openSnackBar function open start here*********/\n\n\n  openSnackBar() {\n    this.snackBar.openFromComponent(snackBarComponent, {\n      duration: this.durationInSeconds * 1000,\n    });\n  }\n /********* openSnackBar function open end here*********/\n\n\n  // This is use for navigate this component to sign-Up component \n  signup() {\n    this.router.navigateByUrl('/' + this.signUpRouteingUrlValue);\n  }\n\n    // This is use for navigate this component to login component \n    login() {\n      this.router.navigateByUrl('/' + this.loginRouteingUrlValue);\n    }\n\n  inputUntouched(val: any) {\n    this.forgetPasswordForm.controls[val].markAsUntouched();\n  }\n\n\n  customFunction(link: any) {\n    this.router.navigateByUrl('/'+ link);\n  }\n\n\n}\n\n\n@Component({\n  selector: 'snack-bar-modale',\n  templateUrl: 'forget-passwordModale.html',\n  styles: [`\n    .example {\n      color: aliceblue;\n      background-color: yellowgreen;\n    }\n  `],\n})\nexport class snackBarComponent { }\n","import { Component, OnInit, Input, ViewChild, Inject } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup, FormGroupDirective } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'lib-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\n\n\n\nexport class ResetPasswordComponent implements OnInit {\n  //   FormGroupDirective: It is a directive that binds an existing FormGroup to a DOM element.\n  @ViewChild(FormGroupDirective) formDirective: FormGroupDirective;\n  public resetPasswordForm: FormGroup;\n  public fromTitleNameValue: any = '';\n  public serverUrlValue: any = '';\n  public message: any = '';\n  public addEndpointValue: any = '';\n\n  public logoValue: any = '';\n  // public signUpRouteingUrlValue: any = '';\n\n\n  @Input()         // Set the Form name\n  set fromTitleName(fromTitleNameVal: any) {\n    this.fromTitleNameValue = (fromTitleNameVal) || '<no name set>';\n    this.fromTitleNameValue = fromTitleNameVal;\n    console.log(this.fromTitleNameValue);\n\n  }\n\n\n  @Input()        // setting the server url from project\n  set serverUrl(serverUrlVal: any) {\n    this.serverUrlValue = (serverUrlVal) || '<no name set>';\n    this.serverUrlValue = serverUrlVal;\n    console.log(this.serverUrlValue);\n\n  }\n\n  @Input()        // set the endpoint and source\n\n  public set addEndpoint(addEndpointVal: any) {\n    this.addEndpointValue = addEndpointVal;\n  }\n\n  @Input()      // set the from logo\n\nset logo(logoVal : any) {\n  this.logoValue = logoVal;\n}\n\n\n  // @Input()          // setting the navigate By Sign Up Url from project\n  // set signUpRouteingUrl(routeingUrlval: any) {\n  //   this.signUpRouteingUrlValue = (routeingUrlval) || '<no name set>';\n  //   this.signUpRouteingUrlValue = routeingUrlval;\n  //   console.log(this.signUpRouteingUrlValue);\n  // }\n  public accesscode: string;\n\n  constructor(public fb: FormBuilder, public http: HttpClient, public router: Router, public route: ActivatedRoute, public apiService: ApiService) {\n\n    this.route.params.subscribe(params => {\n\n      this.accesscode = params['token'];\n      console.log(this.accesscode);\n    })\n\n    this.resetPasswordForm = this.fb.group({\n      // password: ['',  Validators.compose([Validators.required, Validators.minLength(4)])],\n      password: ['', Validators.required],\n      confirmPassword: ['', Validators.required],\n    }, {\n      validator: this.machpassword('password', 'confirmPassword')\n    })\n  }\n\n  ngOnInit() {\n    this.apiService.clearServerUrl();       // Clear the server url\n    setTimeout(() => {\n      this.apiService.setServerUrl(this.serverUrlValue);       // set the server url \n    }, 50);\n    // console.log(this.serverURL);\n\n\n    this.apiService.clearaddEndpoint();       // clear the endpoint \n    setTimeout(() => {\n      this.apiService.setaddEndpoint(this.addEndpointValue.endpoint);       // set the endpoint\n    }, 50);\n    // console.log(this.addEndpointData.endpoint);\n\n  }\n  //  this function is use for mach password and confirm Password \n\n  machpassword(passwordkye: string, confirmpasswordkye: string) {\n    return (group: FormGroup) => {\n      let passwordInput = group.controls[passwordkye],\n        confirmpasswordInput = group.controls[confirmpasswordkye];\n      if (passwordInput.value !== confirmpasswordInput.value) {\n        return confirmpasswordInput.setErrors({ notEquivalent: true });\n      }\n      else {\n        return confirmpasswordInput.setErrors(null);\n      }\n    };\n  }\n\n\n\n/********* Reset Password Form Submit start here*********/ \n  resetPasswordSubmit() {\n    console.log(this.resetPasswordForm.value);\n    let x: any;\n    for (x in this.resetPasswordForm.controls) {\n      this.resetPasswordForm.controls[x].markAsTouched();\n    }\n    if (this.resetPasswordForm.valid) {\n      let data1: any = { \"password\": this.resetPasswordForm.value.password, \"accesscode\": this.accesscode }\n      let data: any = {\n        'data': data1,\n        \"source\": this.addEndpointValue.source\n      }\n\n\n      // data.accesscode = this.accesscode;\n\n      this.apiService.addData(data).subscribe((response) => {\n        let result: any = {};\n        result = response;\n        console.log(result);\n        if (result.status == \"success\") {\n          this.formDirective.resetForm();       // Use for reset the form\n        } else {\n          this.message = result.msg;\n        }\n\n      })\n    }\n  }\n\n\n/********* Reset Password Form Submit end here*********/ \n\n\n  inputUntouched(val: any) {\n    this.resetPasswordForm.controls[val].markAsUntouched();\n  }\n\n\n\n\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { LoginComponent } from './login.component';\nimport { DemoMaterialModule } from './material-module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SignUpComponent, successModalComponent } from './sign-up/sign-up.component';\nimport { ForgetPasswordComponent, snackBarComponent } from './forget-password/forget-password.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { ApiService } from './api.service';\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    SignUpComponent,\n    ForgetPasswordComponent,\n    ResetPasswordComponent,\n    successModalComponent,\n    snackBarComponent,\n    // commonModalComponent\n\n  ],\n  imports: [\n    DemoMaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    CommonModule,\n    HttpClientModule\n  ],\n  exports: [LoginComponent, SignUpComponent, ForgetPasswordComponent, ResetPasswordComponent],\n  providers: [ApiService],\n  bootstrap: [],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  entryComponents: [ successModalComponent, snackBarComponent]\n})\nexport class LoginModule { }\n"],"names":["Injectable","Subject","HttpHeaders","map","HttpClient","CookieService","router","Validators","Component","FormBuilder","Router","ViewChild","FormGroupDirective","Input","NgModule","A11yModule","CdkStepperModule","CdkTableModule","CdkTreeModule","DragDropModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","PortalModule","ScrollingModule","dialog","MatDialog","MatDialogRef","Inject","MAT_DIALOG_DATA","snackBar","MatSnackBar","ActivatedRoute","FormsModule","ReactiveFormsModule","BrowserAnimationsModule","CommonModule","HttpClientModule","CUSTOM_ELEMENTS_SCHEMA"],"mappings":"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"}
