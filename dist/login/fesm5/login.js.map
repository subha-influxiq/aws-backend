{"version":3,"file":"login.js.map","sources":["ng://login/lib/login.service.ts","ng://login/lib/api.service.ts","ng://login/lib/login.component.ts","ng://login/lib/material-module.ts","ng://login/lib/sign-up/sign-up.component.ts","ng://login/lib/forget-password/forget-password.component.ts","ng://login/lib/reset-password/reset-password.component.ts","ng://login/lib/login.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor() { }\n}\n","import { ElementRef, EventEmitter, Injectable, Input, ViewChild } from '@angular/core';\nimport { switchMap, map, takeWhile } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n// for setting observables to get serverurl and endpointurl from app\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport{CookieService} from 'ngx-cookie-service';\n\n\n@Injectable({   \n  providedIn: 'root'\n})\nexport class ApiService {\n\n  public lengthis;\n  public percentageis;\n  public inprogress;\n  public progress: any = [];\n  public uploadtype;\n  public uploaderror: any = '';\n  public accesstoken:any=this.cookieService.get('jwtToken');\n  // public accesstoken:any='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIiLCJleHAiOjE1NjgzNTgyMTAsImlhdCI6MTU2ODI3MTgxMH0.2ltvxVKwfX1uwMOwQ2Zzgp1K2jiaCDj051Wyho0Iw-Q';\n  fileservername: any = [];\n  serverUrl: any;\n  addendpointUrl: any;\n  uploadEndpointUrl:any; //souresh\n  updateendpointUrl: any;\n  deletesingle_endpointUrl: any;\n  updatestatus_single_endpointUrl: any;\n  deletemultiple_endpointUrl: any;\n  updatestatus_multiple_endpointUrl: any;\n  getdata_endpointUrl: any;\n  private subjectForServerUrl = new Subject<any>();\n  private subjectForaddEndpointUrl = new Subject<any>();\n  private subjectForuploadEndpointUrl = new Subject<any>();  //added by souresh\n  private subjectForupdateEndpointUrl = new Subject<any>();\n  private subjectFordeletesingleEndpointUrl = new Subject<any>();\n  private subjectForupdatestatusSingleEndpointUrl = new Subject<any>();\n  private subjectForGetdataEndpointUrl = new Subject<any>();\n  public subscriptionServer: Subscription;\n  public subscriptionaddEndpoint: Subscription;\n  public subscriptionuploadEndpoint: Subscription;   //added by souresh\n  public subscriptionupdateEndpoint: Subscription;\n  public subscriptiondeletesingleEndpoint: Subscription;\n  public subscriptionupdatestatusSingleEndpoint: Subscription;\n  public subscriptionGetdataEndpoint: Subscription;\n\n  constructor(private _http: HttpClient,\n    private _authHttp: HttpClient,private cookieService :CookieService) {\n    this.subscriptionServer = this.getServerUrl().subscribe(message => {\n     let result: any;\n      result = message;\n      if (result != null) {\n        this.serverUrl = result;\n      } else {\n        this.serverUrl = null;\n      }\n    });\n    this.subscriptionaddEndpoint = this.getaddEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.addendpointUrl = result;\n      } else {\n        this.addendpointUrl = null;\n      }\n    });\n    /*********added by souresh***********/\n    this.subscriptionuploadEndpoint=this.getuploadEndpoint().subscribe(message=>{\n      let result:any;\n      result=message;\n        if(result!=null){\n          this.uploadEndpointUrl = result;\n        } else{\n          this.uploadEndpointUrl = null;\n        }\n    })\n    /************souresh end here**************/\n    this.subscriptionupdateEndpoint = this.getupdateEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.updateendpointUrl = result;\n      } else {\n        this.updateendpointUrl = null;\n      }\n    });\n    this.subscriptiondeletesingleEndpoint = this.getdeletesingleEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.deletesingle_endpointUrl = result;\n      } else {\n        this.deletesingle_endpointUrl = null;\n      }\n    });\n    this.subscriptionupdatestatusSingleEndpoint = this.getupdatestatus_singleEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.updatestatus_single_endpointUrl = result;\n      } else {\n        this.updatestatus_single_endpointUrl = null;\n      }\n    });\n    this.subscriptionGetdataEndpoint = this.getdataEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.getdata_endpointUrl = result;\n      } else {\n        this.getdata_endpointUrl = null;\n      }\n    });\n\n    \n  }\n\n  setServerUrl(value: any) {\n    this.subjectForServerUrl.next(value);\n  }\n  public clearServerUrl() {\n    this.subjectForServerUrl.next(null);\n  }\n  public getServerUrl(): Observable<any> {\n    return this.subjectForServerUrl.asObservable();\n  }\n\n  setaddEndpoint(value: any) {\n    this.subjectForaddEndpointUrl.next(value);\n  }\n  public clearaddEndpoint() {\n    this.subjectForaddEndpointUrl.next(null);\n  }\n  public getaddEndpoint(): Observable<any> {\n    return this.subjectForaddEndpointUrl.asObservable();\n  }\n/*****added by souresh******/\n  setuploadEndpont(value:any){\n    this.subjectForuploadEndpointUrl.next(value);\n  }\n  public clearuploadEndpoint(){\n    this.subjectForuploadEndpointUrl.next(null);\n  }\n  public getuploadEndpoint(): Observable <any> {\n    return this.subjectForuploadEndpointUrl.asObservable();\n  }\n   /********souresh end here********/\n\n\n  setupdateEndpoint(value: any) {\n    this.subjectForupdateEndpointUrl.next(value);\n  }\n  public clearupdateEndpoint() {\n    this.subjectForupdateEndpointUrl.next(null);\n  }\n  public getupdateEndpoint(): Observable<any> {\n    return this.subjectForupdateEndpointUrl.asObservable();\n  }\n\n  setdeletesingleEndpoint(value: any) {\n    this.subjectFordeletesingleEndpointUrl.next(value);\n  }\n  public cleardeletesingleEndpoint() {\n    this.subjectFordeletesingleEndpointUrl.next(null);\n  }\n  public getdeletesingleEndpoint(): Observable<any> {\n    return this.subjectFordeletesingleEndpointUrl.asObservable();\n  }\n\n  setupdatestatus_singleEndpoint(value: any) {\n    this.subjectForupdatestatusSingleEndpointUrl.next(value);\n  }\n  public clearupdatestatus_singleEndpoint() {\n    this.subjectForupdatestatusSingleEndpointUrl.next(null);\n  }\n  public getupdatestatus_singleEndpoint(): Observable<any> {\n    return this.subjectForupdatestatusSingleEndpointUrl.asObservable();\n  }\n\n  setgetdataEndpoint(value: any) {\n    this.subjectForGetdataEndpointUrl.next(value);\n  }\n  public cleargetdataEndpoint() {\n    this.subjectForGetdataEndpointUrl.next(null);\n  }\n  public getdataEndpoint(): Observable<any> {\n    return this.subjectForGetdataEndpointUrl.asObservable();\n  }\n\n\n\n  isTokenExpired() {\n\n    // const helper = new JwtHelperService();\n    // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n    // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n    // console.log('refresh_token',localStorage.getItem('refresh_token'))\n    // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n    // console.log('id_token isExpired:',isIdTokenExpired)\n    // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n  }\n\n  addData(requestdata: any) {\n    console.log('in adddata apiservice');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken          //hard code written access-token(temp)\n      })\n    };\n\n    // console.log('httpoptions',httpOptions,this.serverUrl,requestdata);\n    var result = this._http.post(this.serverUrl + this.addendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n  /*******added by souresh************/\n  uploadFile(requestdata:any){\n    const httpOptions={\n        headers: new HttpHeaders({\n          'Content-Type':'application/json',\n          'access-token':this.accesstoken          //hard code written access-token(temp)\n        })\n    };\n    var result=this._http.post(this.serverUrl + this.uploadEndpointUrl,JSON.stringify(requestdata),httpOptions).pipe(map(res=>res));\n    return result;\n  }\n  /*******souresh end here********/\n  UpdateData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'access-token': this.accesstoken          //hard code written access-token(temp)\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.updateendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  getData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.getdata_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n/*************** Added by himadri start here ***************/ \n  addLogin(requestdata: any) {\n    console.log('in addLogin apiservice');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n        // 'Authorization': this.accesstoken          //hard code written access-token(temp)\n      })\n    };\n\n    // console.log(this.serverUrl,requestdata);\n    var result = this._http.post(this.serverUrl + this.addendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n  /*************** Added by himadri end here ***************/ \n\n/*************** Added by himadri start here ***************/ \nforgetPassword(requestdata: any) {\n  console.log('in forgetPassword apiservice');\n  const httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n      // 'Authorization': this.accesstoken          //hard code written access-token(temp)\n    })\n  };\n\n  // console.log(this.serverUrl,requestdata);\n  var result = this._http.post(this.serverUrl + this.addendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n  return result;\n}\n/*************** Added by himadri end here ***************/ \n\n\n  deleteSingleData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'access-token': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.deletesingle_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  deleteMultipleData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'access-token': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.deletesingle_endpointUrl+'many', JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateStatusForSingleData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'access-token': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.updatestatus_single_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateStatusForMultipleData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'access-token': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.updatestatus_single_endpointUrl+'many', JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n  CustomRequest(requestdata: any, endpoint:any ) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'access-token': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl +endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n\n\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators, MinLengthValidator, FormGroupDirective } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { ApiService } from './api.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n\n\n\n@Component({\n  selector: 'lib-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  public message: any = '';\n  //   FormGroupDirective: It is a directive that binds an existing FormGroup to a DOM element.\n  @ViewChild(FormGroupDirective) formDirective: FormGroupDirective;\n\n  public fromTitleValue: any = '';\n  public serverURL: any = '';\n  public signUpRouteingUrlValue: any = '';\n  public forgetRouteingUrlValue: any = '';\n  public routerStatusValue: any = '';\n  public endpointValue: any;\n  public logoValue: any = '';\n  public cookieSetValue: any = '';\n  public buttonNameValue: any = '';\n\n  @Input()         // Set the project name\n  set fromTitle(fromTitleVal: any) {\n    this.fromTitleValue = (fromTitleVal) || '<no name set>';\n    this.fromTitleValue = fromTitleVal;\n\n  }\n  @Input()      // set the from logo\n\nset logo(logoVal : any) {\n  this.logoValue = logoVal;\n}\n@Input()\nset buttonName (buttonNameVal :any){\n  this.buttonNameValue = (buttonNameVal) || '<no name set>';\n  this.buttonNameValue = buttonNameVal\n}\n\n  @Input()        // setting the server url from project\n  set fullUrl(fullUrlVal: any) {\n    this.serverURL = (fullUrlVal) || '<no name set>';\n    this.serverURL = fullUrlVal;\n\n  }\n  @Input()\n\n  set endpoint(endpointVal: any) {\n    this.endpointValue = endpointVal;\n  }\n\n@Input()\n\npublic set cookieSet(v : any) {\n  this.cookieSetValue = v;\n  // console.log(this.cookieSetValue.cookie);\n  // for (const key in this.cookieSetValue.cookie) {\n            \n  //   console.log(this.cookieSetValue.cookie[key]);\n  // }\n\n}\n\n\n\n  @Input()          // setting the navigate By Sign Up Url from project\n  set signUpRouteingUrl(routeingUrlval: any) {\n    this.signUpRouteingUrlValue = (routeingUrlval) || '<no name set>';\n    this.signUpRouteingUrlValue = routeingUrlval;\n    console.log(this.signUpRouteingUrlValue)\n  }\n\n\n  @Input()          // setting the navigate By Forget Password Url from project\n  set forgetRouteingUrl(routeingUrlval: any) {\n    this.forgetRouteingUrlValue = (routeingUrlval) || '<no name set>';\n    this.forgetRouteingUrlValue = routeingUrlval;\n    console.log(this.forgetRouteingUrlValue)\n  }\n\n  @Input()          // setting the navigate By Forget Password Url from project\n  set routerStatus(routerStatusval: any) {\n    this.routerStatusValue = (routerStatusval) || '<no name set>';\n    this.routerStatusValue = routerStatusval;\n    // console.log(this.routerStatusValue);\n    // console.log(this.routerStatusValue.data.length);\n  }\n\n\n\n\n  public loginForm: FormGroup;\n  public project_name: any = '';\n\n  constructor(public fb: FormBuilder, public http: HttpClient, public router: Router, public apiService: ApiService, public cookieService: CookieService) {\n    this.loginForm = this.fb.group({\n      email: ['', Validators.compose([Validators.required, Validators.pattern(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/)])],\n      password: ['', Validators.required]\n    })\n  }\n\n  ngOnInit() {\n    this.apiService.clearServerUrl();       // Clear the server url\n    setTimeout(() => {\n      this.apiService.setServerUrl(this.serverURL);       // set the server url \n    }, 50);\n    // console.log(this.serverURL);\n\n\n    this.apiService.clearaddEndpoint();       // clear the endpoint \n    setTimeout(() => {\n      this.apiService.setaddEndpoint(this.endpointValue);       // set the endpoint\n    }, 50);\n    // console.log(this.addEndpointData.endpoint);\n\n  }\n\n/********* Login Form Submit start here*********/ \n  loginFormSubmit() {\n    let x: any;\n/****************** test*******************/ \n// for (const key in this.cookieSetValue.cookie) {\n//   console.log(this.cookieSetValue.cookie[key].type);\n//   if (result.token == this.cookieSetValue.cookie[key].type) {\n//     console.log('+++++++++++++++');\n//   }\n// }\n\n\n    // use for validation checking\n\n    for (x in this.loginForm.controls) {\n      this.loginForm.controls[x].markAsTouched();\n    }\n\n    if (this.loginForm.valid) {\n      let data: any = this.loginForm.value;\n      this.apiService.addLogin(data).subscribe((response) => {\n        // console.log(response);\n        let result: any = {};\n        result = response;\n      //   let cookiekeyarr:any = [];\n      //   let cookievaluearr:any = [];\n      //   for(let j in result.item){\n      //     // console.log(Object.values(result.item[j]));\n      //     // cookiekeyarr = Object.keys(result.item[j]);\n      //     // cookievaluearr = Object.values(result.item[j]);\n      //     cookievaluearr.push(Object.keys(result.item[j]), Object.values(result.item[j]));\n      //   }\n      //   // console.log('cookiekeyarr'+cookiekeyarr);\n      //   console.log(cookievaluearr);\n      // //   setTimeout(()=>{\n      //   // for (let key in cookiekeyarr){\n      //     for(let value in cookievaluearr[0]){\n      //       console.log('hi'+value);\n      //       // this.cookieService.set(cookiekeyarr[key],cookievaluearr[value]);\n      //     }\n      //   // }\n      // // },2000);\n      //   // setTimeout(()=>{\n      //   //   console.log(this.cookieService.getAll());\n      //   // },4000);\n        \n\n        if (result.status == \"success\") {\n          // for (const key in this.cookieSetValue.cookie) {\n          //   console.log(this.cookieSetValue.cookie[key].type);\n          //   if (result == this.cookieSetValue.cookie[key].type) {\n          //     console.log('+++++++++++++++');\n          //   }\n          // }\n          this.cookieService.set('user_details', JSON.stringify(result.item[0]));\n          this.cookieService.set('jwtToken', result.token);\n\n          setTimeout(() => {\n            // console.log(this.cookieService.getAll());\n          }, 1000);\n\n          // console.log('result')\n          // console.log(result.item[0].type)\n          for (const key in this.routerStatusValue.data) {\n            // console.log(this.routerStatusValue.data[key].type);\n\n            if (result.item[0].type === this.routerStatusValue.data[key].type) {\n              this.router.navigateByUrl('/' + this.routerStatusValue.data[key].routerNav)     // navigate to dashboard url \n            }\n          }\n\n\n          // this is use for reset the from\n          this.formDirective.resetForm();\n          this.message = '';\n        } else {\n          // display error message on html\n          this.message = result.msg;\n        }\n      });\n    }\n\n  }\n\n\n  inputUntouched(val: any) {\n    this.loginForm.controls[val].markAsUntouched();\n  }\n\n  // This is use for navigate this component to forget component \n  forgetpassword() {\n    this.router.navigateByUrl('/' + this.forgetRouteingUrlValue.path);\n  }\n\n  // This is use for navigate this component to sign-Up component \n  signup() {\n    this.router.navigateByUrl('/' + this.signUpRouteingUrlValue.path);\n  }\n\n  customFunction(link: any) {\n    this.router.navigateByUrl('/'+ link);\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\n\n@NgModule({\n  exports: [\n    A11yModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n  ]\n})\nexport class DemoMaterialModule {}\n\n\n/**  Copyright 2019 Google Inc. All Rights Reserved.\n Use of this source code is governed by an MIT-style license that\n can be found in the LICENSE file at http://angular.io/license */\n","import { Component, OnInit, Input, Inject, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormGroupDirective } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material';\nimport { ApiService } from '../api.service';\n\n\n\nexport interface DialogData {\n  value: string;\n  Url: any;\n}\n\n@Component({\n  selector: 'lib-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit {\n  public value: any='';\n  public link: any='';\n  public Url: any='';\n  public message: any = '';\n\n  //   FormGroupDirective: It is a directive that binds an existing FormGroup to a DOM element.\n  @ViewChild(FormGroupDirective) formDirective: FormGroupDirective;\n\n  public formTitleValue: any = '';\n  public serverUrlValue: any = '';\n  public forgetRouteingUrlValue: any = '';\n  public loginRouteingUrlValue: any = '';\n  public addEndpointValue: any = '';\n  public logoValue: any = '';\n  public typevalue: any = '';\n\n  @Input()         // Set the Form name\n  set formTitle(formTitleVal: any) {\n    this.formTitleValue = (formTitleVal) || '<no name set>';\n    this.formTitleValue = formTitleVal;\n    // console.log(this.formTitleValue);\n\n  }\n\n  @Input()        // setting the server url from project\n  set serverUrl(serverUrlVal: any) {\n    this.serverUrlValue = (serverUrlVal) || '<no name set>';\n    this.serverUrlValue = serverUrlVal;\n    // console.log(this.serverUrlValue);\n\n  }\n@Input()      // set the from logo\n\nset logo(logoVal : any) {\n  this.logoValue = logoVal;\n}\n\n@Input()      // set the from logo\n\nset modaleLogo(modaleLogoVal : any) {\n  this.link = modaleLogoVal;\n}\n\n@Input()\nset userType(typeval: any) {\n  this.typevalue = typeval;\n}\n\n\n  @Input()        // set the endpoint And source\n  public set addEndpoint(addEndpointVal: any) {\n    this.addEndpointValue = addEndpointVal;\n    console.log(this.addEndpointValue)\n  }\n\n\n  @Input()          // setting the navigate By Forget Password Url from project\n  set forgetRouteingUrl(routeingUrlval: any) {\n    this.forgetRouteingUrlValue = (routeingUrlval) || '<no name set>';\n    this.forgetRouteingUrlValue = routeingUrlval;\n    // console.log(this.forgetRouteingUrlValue);\n  }\n\n  @Input()          // setting the navigate By login Url from project\n  set loginRouteingUrl(routeingUrlval: any) {\n    this.loginRouteingUrlValue = (routeingUrlval) || '<no name set>';\n    this.loginRouteingUrlValue = routeingUrlval;\n    // console.log(this.loginRouteingUrlValue);\n  }\n\n\n\n  public signUpForm: FormGroup;\n\n  constructor(public fb: FormBuilder, public http: HttpClient, public router: Router, public dialog: MatDialog, public apiService: ApiService) {\n    this.signUpForm = this.fb.group({\n      email: ['', Validators.compose([Validators.required, Validators.pattern(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/)])],\n      firstname: ['', Validators.required],\n      lastname: ['', Validators.required],\n      password: ['', Validators.required]\n    })\n  }\n\n  ngOnInit() {\n    this.apiService.clearServerUrl();       //  Clear the server url\n    setTimeout(() => {\n      this.apiService.setServerUrl(this.serverUrlValue);        //  set the server url\n    }, 50);\n    // console.log(this.serverURL);\n\n\n    this.apiService.clearaddEndpoint();       //  Clear the endpoint\n    setTimeout(() => {\n      this.apiService.setaddEndpoint(this.addEndpointValue.endpoint);   //  set the endpoint\n    }, 50);\n  }\n\n\n/********* Sign Up Form Submit start here*********/ \n  signUpFormSubmit() {\n    // use for validation checking\n    for (let x in this.signUpForm.controls) {\n      this.signUpForm.controls[x].markAsTouched();\n    }\n    if (this.signUpForm.valid) {\n      // let link: any = this.fullUrlValue;\n      let allData: any = this.signUpForm.value;\n      allData.type = this.typevalue;\n      console.log(allData);\n\n      let data: any = {\n        'data': allData,\n        \"source\": this.addEndpointValue.source\n      };\n      console.log(data);\n      this.apiService.addData(data).subscribe((response) => {\n        let result: any = {};\n        result = response;\n        console.log(result);\n\n        if (result.status == \"success\") {\n          const dialogRef = this.dialog.open(successModalComponent, {\n            width: '250px',\n            data: {value: result.status, Url: this.link}\n          });\n          // this.router.navigateByUrl('/' + )     // navigate to dashboard url \n\n\n          // this is use for reset the from\n          this.formDirective.resetForm();\n        } else {\n          // display error message on html\n          this.message = result.msg;\n        }\n      })\n\n    }\n  }\n\n\n/********* Sign Up Form Submit end here*********/ \n\n  // This is use for navigate this component to forget component \n  forgetpassword() {\n    this.router.navigateByUrl('/' + this.forgetRouteingUrlValue);\n  }\n\n\n  // This is use for navigate this component to forget component \n  login() {\n    this.router.navigateByUrl('/' + this.loginRouteingUrlValue);\n  }\n\n  inputUntouched(val: any) {\n    this.signUpForm.controls[val].markAsUntouched();\n  }\n}\n\n\n@Component({\n  selector: 'successModal',\n  templateUrl: '../successModal.html',\n\n})\nexport class successModalComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef<successModalComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {\n      console.log(data)\n     }\n\n    \n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n\n\n","import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormGroupDirective } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ApiService } from '../api.service';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'lib-forget-password',\n  templateUrl: './forget-password.component.html',\n  styleUrls: ['./forget-password.component.css']\n})\nexport class ForgetPasswordComponent implements OnInit {\n  public message: any = '';\n  public buttonNameValue: any = '';\n\n  //   FormGroupDirective: It is a directive that binds an existing FormGroup to a DOM element.\n  @ViewChild(FormGroupDirective) formDirective: FormGroupDirective;\n\n  public forgetPasswordForm: FormGroup;\n  public formTitleValue: any = '';          // This is From title\n  public serverUrlValue: any = '';          //  This is Server url\n  public signUpRouteingUrlValue: any = '';  // setting the navigate By Sign Up Url from project\n  public loginRouteingUrlValue: any = '';  // setting the navigate By login Url from project\n  private domanUrlValue: any = '';          // This is reset password url\n  public addEndpointValue: any = '';        // This is endpoint url\n  public logoValue: any = '';               // This is from logo url\n  public durationInSeconds = 5;             // This is SnackBar set time\n\n\n  @Input()\nset buttonName (buttonNameVal :any){\n  this.buttonNameValue = (buttonNameVal) || '<no name set>';\n  this.buttonNameValue = buttonNameVal\n}\n\n  @Input()         // Set the project email Doman URL\n  set domanUrl(domanUrlVal: any) {\n    this.domanUrlValue = (domanUrlVal) || '<no name set>';\n    this.domanUrlValue = domanUrlVal;\n    // console.log(this.domanUrlValue);\n  }\n  @Input()         // Set the project name\n  set formTitle(formTitleVal: any) {\n    this.formTitleValue = (formTitleVal) || '<no name set>';\n    this.formTitleValue = formTitleVal;\n\n  }\n\n  @Input()        // setting the server url from project\n  set serverUrl(serverUrlVal: any) {\n    this.serverUrlValue = (serverUrlVal) || '<no name set>';\n    this.serverUrlValue = serverUrlVal;\n\n  }\n\n  @Input()      // set the from logo\n\n  set logo(logoVal: any) {\n    this.logoValue = logoVal;\n  }\n\n  @Input()          // set the endpoint and source\n\n  set addEndpoint(addEndpointval: any) {\n    this.addEndpointValue = addEndpointval;\n  }\n\n\n  @Input()          // setting the navigate By Sign Up Url from project\n  set signUpRouteingUrl(routeingUrlval: any) {\n    this.signUpRouteingUrlValue = (routeingUrlval) || '<no name set>';\n    this.signUpRouteingUrlValue = routeingUrlval;\n    // console.log(this.signUpRouteingUrlValue)\n  }\n\n  @Input()          // setting the navigate By Sign Up Url from project\n  set loginRouteingUrl(routeingUrlval: any) {\n    this.loginRouteingUrlValue = (routeingUrlval) || '<no name set>';\n    this.loginRouteingUrlValue = routeingUrlval;\n    // console.log(this.loginRouteingUrlValue)\n  }\n\n  constructor(\n    public fb: FormBuilder,\n    public router: Router,\n    public apiService: ApiService,\n    private snackBar: MatSnackBar\n  ) {\n\n\n\n    this.forgetPasswordForm = this.fb.group({\n      email: ['', Validators.compose([Validators.required, Validators.pattern(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/)])],\n\n    });\n\n\n\n\n  }\n\n  ngOnInit() {\n    this.apiService.clearServerUrl();       //  Clear the server url\n    setTimeout(() => {\n      this.apiService.setServerUrl(this.serverUrlValue);        //  set the server url\n    }, 50);\n    // console.log(this.serverURL);\n\n\n    this.apiService.clearaddEndpoint();       //  Clear the endpoint\n    setTimeout(() => {\n      this.apiService.setaddEndpoint(this.addEndpointValue.endpoint);   //  set the endpoint\n    }, 50);\n  }\n\n  /********* Forget password  Form Submit start here*********/\n  forgetPasswordSubmit() {\n    let x: any;\n\n    //  This for-loop use for from blank or properly validated checking  \n    for (x in this.forgetPasswordForm.controls) {\n      this.forgetPasswordForm.controls[x].markAsTouched();\n    }\n    if (this.forgetPasswordForm.valid) {    //    validation checking\n\n      this.openSnackBar();              // open snack-bar function\n\n      let link: any = this.serverUrlValue;\n      let data: any = this.forgetPasswordForm.value;\n\n      data.domanUrl = this.domanUrlValue;\n\n      this.apiService.forgetPassword(data).subscribe((response) => {\n        // console.log(response);\n        let result: any = {};\n        result = response;\n\n        if (result.status == \"success\") {\n          this.openSnackBar();             // open snack-bar function\n          // this is use for reset the from\n          this.formDirective.resetForm();\n          this.message = '';         // clear the from\n        } else {\n\n          // display error message on html\n          this.message = result.msg;      // show the error message\n\n        }\n      });\n    }\n  }\n\n  /********* Forget password  Form Submit end here*********/\n\n\n  /********* openSnackBar function open start here*********/\n\n\n  openSnackBar() {\n    this.snackBar.openFromComponent(snackBarComponent, {\n      duration: this.durationInSeconds * 1000,\n    });\n  }\n /********* openSnackBar function open end here*********/\n\n\n  // This is use for navigate this component to sign-Up component \n  signup() {\n    this.router.navigateByUrl('/' + this.signUpRouteingUrlValue);\n  }\n\n    // This is use for navigate this component to login component \n    login() {\n      this.router.navigateByUrl('/' + this.loginRouteingUrlValue);\n    }\n\n  inputUntouched(val: any) {\n    this.forgetPasswordForm.controls[val].markAsUntouched();\n  }\n\n\n  customFunction(link: any) {\n    this.router.navigateByUrl('/'+ link);\n  }\n\n\n}\n\n\n@Component({\n  selector: 'snack-bar-modale',\n  templateUrl: 'forget-passwordModale.html',\n  styles: [`\n    .example {\n      color: aliceblue;\n      background-color: yellowgreen;\n    }\n  `],\n})\nexport class snackBarComponent { }\n","import { Component, OnInit, Input, ViewChild, Inject } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup, FormGroupDirective } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'lib-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\n\n\n\nexport class ResetPasswordComponent implements OnInit {\n  //   FormGroupDirective: It is a directive that binds an existing FormGroup to a DOM element.\n  @ViewChild(FormGroupDirective) formDirective: FormGroupDirective;\n  public resetPasswordForm: FormGroup;\n  public fromTitleNameValue: any = '';\n  public serverUrlValue: any = '';\n  public message: any = '';\n  public addEndpointValue: any = '';\n\n  public logoValue: any = '';\n  // public signUpRouteingUrlValue: any = '';\n\n\n  @Input()         // Set the Form name\n  set fromTitleName(fromTitleNameVal: any) {\n    this.fromTitleNameValue = (fromTitleNameVal) || '<no name set>';\n    this.fromTitleNameValue = fromTitleNameVal;\n    console.log(this.fromTitleNameValue);\n\n  }\n\n\n  @Input()        // setting the server url from project\n  set serverUrl(serverUrlVal: any) {\n    this.serverUrlValue = (serverUrlVal) || '<no name set>';\n    this.serverUrlValue = serverUrlVal;\n    console.log(this.serverUrlValue);\n\n  }\n\n  @Input()        // set the endpoint and source\n\n  public set addEndpoint(addEndpointVal: any) {\n    this.addEndpointValue = addEndpointVal;\n  }\n\n  @Input()      // set the from logo\n\nset logo(logoVal : any) {\n  this.logoValue = logoVal;\n}\n\n\n  // @Input()          // setting the navigate By Sign Up Url from project\n  // set signUpRouteingUrl(routeingUrlval: any) {\n  //   this.signUpRouteingUrlValue = (routeingUrlval) || '<no name set>';\n  //   this.signUpRouteingUrlValue = routeingUrlval;\n  //   console.log(this.signUpRouteingUrlValue);\n  // }\n  public accesscode: string;\n\n  constructor(public fb: FormBuilder, public http: HttpClient, public router: Router, public route: ActivatedRoute, public apiService: ApiService) {\n\n    this.route.params.subscribe(params => {\n\n      this.accesscode = params['token'];\n      console.log(this.accesscode);\n    })\n\n    this.resetPasswordForm = this.fb.group({\n      // password: ['',  Validators.compose([Validators.required, Validators.minLength(4)])],\n      password: ['', Validators.required],\n      confirmPassword: ['', Validators.required],\n    }, {\n      validator: this.machpassword('password', 'confirmPassword')\n    })\n  }\n\n  ngOnInit() {\n    this.apiService.clearServerUrl();       // Clear the server url\n    setTimeout(() => {\n      this.apiService.setServerUrl(this.serverUrlValue);       // set the server url \n    }, 50);\n    // console.log(this.serverURL);\n\n\n    this.apiService.clearaddEndpoint();       // clear the endpoint \n    setTimeout(() => {\n      this.apiService.setaddEndpoint(this.addEndpointValue.endpoint);       // set the endpoint\n    }, 50);\n    // console.log(this.addEndpointData.endpoint);\n\n  }\n  //  this function is use for mach password and confirm Password \n\n  machpassword(passwordkye: string, confirmpasswordkye: string) {\n    return (group: FormGroup) => {\n      let passwordInput = group.controls[passwordkye],\n        confirmpasswordInput = group.controls[confirmpasswordkye];\n      if (passwordInput.value !== confirmpasswordInput.value) {\n        return confirmpasswordInput.setErrors({ notEquivalent: true });\n      }\n      else {\n        return confirmpasswordInput.setErrors(null);\n      }\n    };\n  }\n\n\n\n/********* Reset Password Form Submit start here*********/ \n  resetPasswordSubmit() {\n    console.log(this.resetPasswordForm.value);\n    let x: any;\n    for (x in this.resetPasswordForm.controls) {\n      this.resetPasswordForm.controls[x].markAsTouched();\n    }\n    if (this.resetPasswordForm.valid) {\n      let data1: any = { \"password\": this.resetPasswordForm.value.password, \"accesscode\": this.accesscode }\n      let data: any = {\n        'data': data1,\n        \"source\": this.addEndpointValue.source\n      }\n\n\n      // data.accesscode = this.accesscode;\n\n      this.apiService.addData(data).subscribe((response) => {\n        let result: any = {};\n        result = response;\n        console.log(result);\n        if (result.status == \"success\") {\n          this.formDirective.resetForm();       // Use for reset the form\n        } else {\n          this.message = result.msg;\n        }\n\n      })\n    }\n  }\n\n\n/********* Reset Password Form Submit end here*********/ \n\n\n  inputUntouched(val: any) {\n    this.resetPasswordForm.controls[val].markAsUntouched();\n  }\n\n\n\n\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { LoginComponent } from './login.component';\nimport { DemoMaterialModule } from './material-module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SignUpComponent, successModalComponent } from './sign-up/sign-up.component';\nimport { ForgetPasswordComponent, snackBarComponent } from './forget-password/forget-password.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { ApiService } from './api.service';\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    SignUpComponent,\n    ForgetPasswordComponent,\n    ResetPasswordComponent,\n    successModalComponent,\n    snackBarComponent,\n    // commonModalComponent\n\n  ],\n  imports: [\n    DemoMaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    CommonModule,\n    HttpClientModule\n  ],\n  exports: [LoginComponent, SignUpComponent, ForgetPasswordComponent, ResetPasswordComponent],\n  providers: [ApiService],\n  bootstrap: [],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  entryComponents: [ successModalComponent, snackBarComponent]\n})\nexport class LoginModule { }\n"],"names":[],"mappings":"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"}
