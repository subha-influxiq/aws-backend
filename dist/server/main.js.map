{"version":3,"sources":["webpack/bootstrap","./node_modules/@angular/material/autocomplete/typings/index.d.ts.MatAutocomplete.html","./node_modules/@angular/material/bottom-sheet/typings/index.d.ts.MatBottomSheetContainer.html","./node_modules/@angular/material/button/typings/index.d.ts.MatButton.html","./node_modules/@angular/material/button/typings/index.d.ts.MatAnchor.html","./node_modules/@angular/material/card/typings/index.d.ts.MatCard.html","./node_modules/@angular/material/card/typings/index.d.ts.MatCardHeader.html","./node_modules/@angular/material/card/typings/index.d.ts.MatCardTitleGroup.html","./node_modules/@angular/material/checkbox/typings/index.d.ts.MatCheckbox.html","./node_modules/@angular/material/core/typings/index.d.ts.MatOption.html","./node_modules/@angular/material/core/typings/index.d.ts.MatOptgroup.html","./node_modules/@angular/material/datepicker/typings/index.d.ts.MatCalendarHeader.html","./node_modules/@angular/material/datepicker/typings/index.d.ts.MatCalendar.html","./node_modules/@angular/material/datepicker/typings/index.d.ts.MatCalendarBody.html","./node_modules/@angular/material/datepicker/typings/index.d.ts.MatDatepickerContent.html","./node_modules/@angular/material/datepicker/typings/index.d.ts.MatDatepickerToggle.html","./node_modules/@angular/material/datepicker/typings/index.d.ts.MatMonthView.html","./node_modules/@angular/material/datepicker/typings/index.d.ts.MatYearView.html","./node_modules/@angular/material/datepicker/typings/index.d.ts.MatMultiYearView.html","./node_modules/@angular/material/dialog/typings/index.d.ts.MatDialogContainer.html","./node_modules/@angular/material/form-field/typings/index.d.ts.MatFormField.html","./node_modules/@angular/material/icon/typings/index.d.ts.MatIcon.html","./node_modules/@angular/material/list/typings/index.d.ts.MatNavList.html","./node_modules/@angular/material/list/typings/index.d.ts.MatList.html","./node_modules/@angular/material/list/typings/index.d.ts.MatListItem.html","./node_modules/@angular/material/list/typings/index.d.ts.MatListOption.html","./node_modules/@angular/material/list/typings/index.d.ts.MatSelectionList.html","./node_modules/@angular/material/menu/typings/index.d.ts._MatMenu.html","./node_modules/@angular/material/menu/typings/index.d.ts.MatMenuItem.html","./node_modules/@angular/material/paginator/typings/index.d.ts.MatPaginator.html","./node_modules/@angular/material/progress-bar/typings/index.d.ts.MatProgressBar.html","./node_modules/@angular/material/progress-spinner/typings/index.d.ts.MatProgressSpinner.html","./node_modules/@angular/material/progress-spinner/typings/index.d.ts.MatSpinner.html","./node_modules/@angular/material/select/typings/index.d.ts.MatSelect.html","./node_modules/@angular/material/snack-bar/typings/index.d.ts.MatSnackBarContainer.html","./node_modules/@angular/material/snack-bar/typings/index.d.ts.SimpleSnackBar.html","./node_modules/@angular/material/sort/typings/index.d.ts.MatSortHeader.html","./node_modules/@angular/material/table/typings/index.d.ts.MatTable.html","./node_modules/@angular/material/table/typings/index.d.ts.MatHeaderRow.html","./node_modules/@angular/material/table/typings/index.d.ts.MatFooterRow.html","./node_modules/@angular/material/table/typings/index.d.ts.MatRow.html","./node_modules/@angular/material/table/typings/index.d.ts.MatTextColumn.html","./node_modules/@angular/material/tabs/typings/index.d.ts.MatTabGroup.html","./node_modules/@angular/material/tabs/typings/index.d.ts.MatTabBody.html","./node_modules/@angular/material/tabs/typings/index.d.ts.MatTabHeader.html","./node_modules/@angular/material/tabs/typings/index.d.ts.MatTab.html","./node_modules/@angular/material/tabs/typings/index.d.ts.MatTabNav.html","./node_modules/@angular/material/toolbar/typings/index.d.ts.MatToolbar.html","./node_modules/@angular/material/tooltip/typings/index.d.ts.TooltipComponent.html","./node_modules/@angular/router/router.d.ts.ɵangular_packages_router_router_l.html","./node_modules/file-upload-lib-influxiq/file-upload-lib-influxiq.d.ts.FileUploadComponent.html","./node_modules/file-upload-lib-influxiq/file-upload-lib-influxiq.d.ts.ɵb.html","./node_modules/file-upload-lib-influxiq/file-upload-lib-influxiq.d.ts.ɵc.html","./node_modules/file-upload-lib-influxiq/file-upload-lib-influxiq.d.ts.ɵd.html","./node_modules/listing-angular7/listing-angular7.d.ts.ListingComponent.html","./node_modules/listing-angular7/listing-angular7.d.ts.Confirmdialog.html","./node_modules/listing-angular7/listing-angular7.d.ts.BottomSheet.html","./node_modules/login-lib-influxiq/login-lib-influxiq.d.ts.LoginComponent.html","./node_modules/login-lib-influxiq/login-lib-influxiq.d.ts.ɵb.html","./node_modules/login-lib-influxiq/login-lib-influxiq.d.ts.ɵc.html","./node_modules/login-lib-influxiq/login-lib-influxiq.d.ts.ɵd.html","./node_modules/login-lib-influxiq/login-lib-influxiq.d.ts.ɵe.html","./node_modules/login-lib-influxiq/login-lib-influxiq.d.ts.ɵf.html","./node_modules/login-lib-influxiq/login-lib-influxiq.d.ts.ɵg.html","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app.server.module.ts","./src/app/class/common/common-function.ts","./src/app/class/common/loader.interceptor.ts","./src/app/components/admin/admin-dashboard/add-edit-patient/add-edit-patient.component.html","./src/app/components/admin/admin-dashboard/add-edit-patient/add-edit-patient.component.ts","./src/app/components/admin/admin-dashboard/admin-dashboard.component.html","./src/app/components/admin/admin-dashboard/admin-dashboard.component.ts","./src/app/components/admin/admin-dashboard/download-details/download-details.component.html","./src/app/components/admin/admin-dashboard/download-details/download-details.component.ts","./src/app/components/admin/admin-dashboard/edit-patient-record/edit-patient-record.component.html","./src/app/components/admin/admin-dashboard/edit-patient-record/edit-patient-record.component.ts","./src/app/components/admin/admin-footer/admin-footer.component.html","./src/app/components/admin/admin-footer/admin-footer.component.ts","./src/app/components/admin/admin-header/admin-header.component.html","./src/app/components/admin/admin-header/admin-header.component.ts","./src/app/components/admin/admin-management/add-edit/add-edit.component.html","./src/app/components/admin/admin-management/add-edit/modal.html","./src/app/components/admin/admin-management/add-edit/add-edit.component.ts","./src/app/components/admin/admin-management/manage-admin-list/manage-admin-list.component.html","./src/app/components/admin/admin-management/manage-admin-list/manage-admin-list.component.ts","./src/app/components/admin/biller-management/add-edit-biller/add-edit-biller.component.html","./src/app/components/admin/biller-management/add-edit-biller/modal.html","./src/app/components/admin/biller-management/add-edit-biller/add-edit-biller.component.ts","./src/app/components/admin/biller-management/listing-biller/listing-biller.component.html","./src/app/components/admin/biller-management/listing-biller/listing-biller.component.ts","./src/app/components/admin/booked-appoinments/booked-appoinments.component.html","./src/app/components/admin/booked-appoinments/booked-appoinments.component.ts","./src/app/components/admin/doctor-management/addedit-doctor/addedit-doctor.component.html","./src/app/components/admin/doctor-management/addedit-doctor/modal.html","./src/app/components/admin/doctor-management/addedit-doctor/addedit-doctor.component.ts","./src/app/components/admin/doctor-management/list-doctor/list-doctor.component.html","./src/app/components/admin/doctor-management/list-doctor/list-doctor.component.ts","./src/app/components/admin/doctor-office-management/add-edit-doctor-ofc/add-edit-doctor-ofc.component.html","./src/app/components/admin/doctor-office-management/add-edit-doctor-ofc/modal.html","./src/app/components/admin/doctor-office-management/add-edit-doctor-ofc/add-edit-doctor-ofc.component.ts","./src/app/components/admin/doctor-office-management/doctor-office-management.component.html","./src/app/components/admin/doctor-office-management/doctor-office-management.component.ts","./src/app/components/admin/report-not-process/report-not-process.component.html","./src/app/components/admin/report-not-process/report-not-process.component.ts","./src/app/components/admin/tech-management/add-edit-tech/add-edit-tech.component.html","./src/app/components/admin/tech-management/add-edit-tech/modal.html","./src/app/components/admin/tech-management/add-edit-tech/add-edit-tech.component.ts","./src/app/components/admin/tech-management/listing-tech/listing-tech.component.html","./src/app/components/admin/tech-management/listing-tech/listing-tech.component.ts","./src/app/components/admin/user-management/user-add-edit/user-add-edit.component.html","./src/app/components/admin/user-management/user-add-edit/user-add-edit.component.ts","./src/app/components/auth/forgetpassword/forgetpassword.component.html","./src/app/components/auth/forgetpassword/forgetpassword.component.ts","./src/app/components/auth/login/login.component.html","./src/app/components/auth/login/login.component.ts","./src/app/components/auth/logout/logout.component.html","./src/app/components/auth/logout/logout.component.ts","./src/app/components/auth/resetpassword/resetpassword.component.html","./src/app/components/auth/resetpassword/resetpassword.component.ts","./src/app/components/biller/biller-dashboard/biller-dashboard.component.html","./src/app/components/biller/biller-dashboard/biller-dashboard.component.ts","./src/app/components/biller/biller-header/biller-header.component.html","./src/app/components/biller/biller-header/biller-header.component.ts","./src/app/components/biller/download-superbiller/download-superbiller.component.html","./src/app/components/biller/download-superbiller/download-superbiller.component.ts","./src/app/components/common/account-settings/account-settings.component.html","./src/app/components/common/account-settings/account-settings.component.ts","./src/app/components/common/account-settings/change-password/change-password.component.html","./src/app/components/common/account-settings/change-password/change-password.component.ts","./src/app/components/common/dialog-box/dialog-box.component.html","./src/app/components/common/dialog-box/dialog-box.component.ts","./src/app/components/common/http-loader/http-loader.component.html","./src/app/components/common/http-loader/http-loader.component.ts","./src/app/components/common/not-found-error/not-found-error.component.html","./src/app/components/common/not-found-error/not-found-error.component.ts","./src/app/components/common/password-dialog-box/password-dialog-box.component.html","./src/app/components/common/password-dialog-box/password-dialog-box.component.ts","./src/app/components/common/upload-dialog-box/upload-dialog-box.component.html","./src/app/components/common/upload-dialog-box/upload-dialog-box.component.ts","./src/app/components/doctor-office/doctor-office-account-settings/doctor-office-account-settings.component.html","./src/app/components/doctor-office/doctor-office-account-settings/doctor-office-account-settings.component.ts","./src/app/components/doctor-office/doctor-office-change-password/doctor-office-change-password.component.html","./src/app/components/doctor-office/doctor-office-change-password/doctor-office-change-password.component.ts","./src/app/components/doctor-office/doctor-office-dashboard/doctor-office-dashboard.component.html","./src/app/components/doctor-office/doctor-office-dashboard/doctor-office-dashboard.component.ts","./src/app/components/doctor-office/doctor-office-footer/doctor-office-footer.component.html","./src/app/components/doctor-office/doctor-office-footer/doctor-office-footer.component.ts","./src/app/components/doctor-office/doctor-office-header/doctor-office-header.component.html","./src/app/components/doctor-office/doctor-office-header/doctor-office-header.component.ts","./src/app/components/doctor/doctor-dashboard/doctor-dashboard.component.html","./src/app/components/doctor/doctor-dashboard/doctor-dashboard.component.ts","./src/app/components/doctor/doctor-dashboard/patient-report-view/health-risk-analysis/health-risk-analysis.component.html","./src/app/components/doctor/doctor-dashboard/patient-report-view/health-risk-analysis/health-risk-analysis.component.ts","./src/app/components/doctor/doctor-dashboard/patient-report-view/healthrisk-system-encounter/healthrisk-system-encounter.component.html","./src/app/components/doctor/doctor-dashboard/patient-report-view/healthrisk-system-encounter/healthrisk-system-encounter.component.ts","./src/app/components/doctor/doctor-dashboard/patient-report-view/patient-report-view.component.html","./src/app/components/doctor/doctor-dashboard/patient-report-view/patient-report-view.component.ts","./src/app/components/doctor/doctor-dashboard/patient-report-view/system-superbill/system-superbill.component.html","./src/app/components/doctor/doctor-dashboard/patient-report-view/system-superbill/system-superbill.component.ts","./src/app/components/doctor/doctor-header/doctor-header.component.html","./src/app/components/doctor/doctor-header/doctor-header.component.ts","./src/app/components/doctor/signature-management/signature-management.component.html","./src/app/components/doctor/signature-management/signature-management.component.ts","./src/app/components/tech/patient-management/bulk-upload/bulk-upload.component.html","./src/app/components/tech/patient-management/bulk-upload/bulk-upload.component.ts","./src/app/components/tech/report-details/report-details.component.html","./src/app/components/tech/report-details/report-details.component.ts","./src/app/components/tech/tech-dashboard/manage-calender/manage-schedule/manage-schedule.component.html","./src/app/components/tech/tech-dashboard/manage-calender/manage-schedule/manage-schedule.component.ts","./src/app/components/tech/tech-dashboard/manage-calender/my-appointments/list/list.component.html","./src/app/components/tech/tech-dashboard/manage-calender/my-appointments/list/list.component.ts","./src/app/components/tech/tech-dashboard/tech-dashboard.component.html","./src/app/components/tech/tech-dashboard/doctorview.component.html","./src/app/components/tech/tech-dashboard/tech-dashboard.component.ts","./src/app/components/tech/tech-header/tech-header.component.html","./src/app/components/tech/tech-header/tech-header.component.ts","./src/app/components/test/test.component.html","./src/app/components/test/test.component.ts","./src/app/modules/app-routing.module.ts","./src/app/modules/materialModule.ts","./src/app/services/authguard.service.ts","./src/app/services/http-loader.service.ts","./src/app/services/http-service.service.ts","./src/app/services/resolve.service.ts","./src/environments/environment.ts","./src/main.server.ts","external \"@angular/animations\"","external \"@angular/animations/browser\"","external \"@angular/cdk/a11y\"","external \"@angular/cdk/accordion\"","external \"@angular/cdk/bidi\"","external \"@angular/cdk/drag-drop\"","external \"@angular/cdk/keycodes\"","external \"@angular/cdk/layout\"","external \"@angular/cdk/observers\"","external \"@angular/cdk/overlay\"","external \"@angular/cdk/platform\"","external \"@angular/cdk/portal\"","external \"@angular/cdk/scrolling\"","external \"@angular/cdk/stepper\"","external \"@angular/cdk/table\"","external \"@angular/cdk/text-field\"","external \"@angular/cdk/tree\"","external \"@angular/common\"","external \"@angular/common/http\"","external \"@angular/core\"","external \"@angular/forms\"","external \"@angular/material\"","external \"@angular/material-moment-adapter\"","external \"@angular/material/autocomplete\"","external \"@angular/material/badge\"","external \"@angular/material/bottom-sheet\"","external \"@angular/material/button\"","external \"@angular/material/button-toggle\"","external \"@angular/material/card\"","external \"@angular/material/checkbox\"","external \"@angular/material/chips\"","external \"@angular/material/core\"","external \"@angular/material/datepicker\"","external \"@angular/material/dialog\"","external \"@angular/material/divider\"","external \"@angular/material/expansion\"","external \"@angular/material/form-field\"","external \"@angular/material/grid-list\"","external \"@angular/material/icon\"","external \"@angular/material/input\"","external \"@angular/material/list\"","external \"@angular/material/menu\"","external \"@angular/material/paginator\"","external \"@angular/material/progress-bar\"","external \"@angular/material/progress-spinner\"","external \"@angular/material/radio\"","external \"@angular/material/select\"","external \"@angular/material/sidenav\"","external \"@angular/material/slide-toggle\"","external \"@angular/material/slider\"","external \"@angular/material/snack-bar\"","external \"@angular/material/sort\"","external \"@angular/material/stepper\"","external \"@angular/material/table\"","external \"@angular/material/tabs\"","external \"@angular/material/toolbar\"","external \"@angular/material/tooltip\"","external \"@angular/material/tree\"","external \"@angular/platform-browser\"","external \"@angular/platform-browser/animations\"","external \"@angular/platform-server\"","external \"@angular/router\"","external \"@ng-toolkit/universal\"","external \"@nguniversal/common\"","external \"@nguniversal/module-map-ngfactory-loader\"","external \"@ngx-meta/core\"","external \"file-upload-lib-influxiq\"","external \"listing-angular7\"","external \"login-lib-influxiq\"","external \"moment\"","external \"ngx-cookie-service\"","external \"ngx-device-detector\"","external \"ngx-moment\"","external \"rxjs\"","external \"rxjs/operators\""],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0DClFa,oZAA2F,kBAAY,iDAAlG,wCAA8B,EAA0B,mBAAsB,aAAnF,YAA2F,EAAtF,SAA8B,EAA0B,SAAsB,mDAAhC,mBAAS,KAA5D,YAA2F,EAAxC,SAAS;uIAAzE,kEAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+GCAb,wNAA6B,yBAAhB,kBAAe,EAA5B,YAA6B,EAAhB,SAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0FCA5B,4GAAiC,mBAAY,IAAoB,icAA6N,IAAM,iHAAsC,kDAAtH,mBAAkC,eAA5E,mBAAyC,sBAAoC,mBAAsC,oBAA5N,YAA6N,EAA1E,SAAkC,EAA5E,SAAyC,EAAoC,SAAsC,mDAAnL,yCAA+D,gBAAxG,sDAA6N,EAApL,SAA+D,EAAxG,SAA6N;;;;;;;;;0FCA9R,4GAAiC,mBAAY,IAAoB,icAA6N,IAAM,iHAAsC,kDAAtH,mBAAkC,eAA5E,mBAAyC,sBAAoC,mBAAsC,oBAA5N,YAA6N,EAA1E,SAAkC,EAA5E,SAAyC,EAAoC,SAAsC,mDAAnL,yCAA+D,gBAAxG,sDAA6N,EAApL,SAA+D,EAAxG,SAA6N;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iDCA9R,eAAY,GAAa,eAAqC;;;;;;;;;uDCA9D,eAAwD,IAAa,6GAAkC,mBAE9D,GAAmB,eAAY;;;;;;;;;4DCFxE,4EAAK,mBAEoC,GAAmB,eAAyB,GAAa,eAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yICF9G,oIAA+D,iLAAgK,gdAAub,YAAvE;;wBAAsC;MAAC;;wBAA+B;MAAtb,wBAAub,sdAA8M,GAA5C,6BAA2C,MAAC,0IAA+D,KAAY,2GAAgC,KAAM,iHAAqC,4NAA6G,2MAAoG,KAAM,gHAAoC,KAAkB,+LAA2F,YAA3C;;wBAA0C;MAA1F,kKAA2F,6GAA2B,wCAAM,KAAO,eAAY,iDAAznB,qBAA0B,EAAjD,mBAAsB,EAA4B,kCAA2C,GAAvI,oBAAyC,sBAApE,8BAA0B,GAArE,YAA8M,EAAvE,UAA0B,EAAjD,UAAsB,EAA4B,UAA2C,EAAvI,UAAyC,EAApE,UAA0B,mDAAptB,mBAAoB,UAA3B,YAA+D,EAAxD,SAAoB,GAA8E,gEAAqH,uBAA/J,YAAgK,EAAtH,SAAqH,GAA8E,mBAAc,UAAC,mBAAqB,WAAC,mBAAmB,UAAC,mBAAoB,QAAC,mBAAqB,WAAC,mBAAkB,OAAC,mBAAqB,WAAC,mBAA+B,gBAAC,uCAAqC,GAAC,oBAAuC,iBAAC,oBAAuC,oBAA/W,eAA6E,SAAc,EAAC,SAAqB,EAAC,SAAmB,EAAC,SAAoB,EAAC,SAAqB,EAAC,SAAkB,EAAC,SAAqB,EAAC,SAA+B,EAAC,UAAqC,EAAC,UAAuC,EAAC,UAAuC,CAAwE,sEAA8M;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oDCAp2B,wfAAmI,iDAA1D,8CAAmC,GAAC,mBAAqB,WAAlI,YAAmI,EAA1D,SAAmC,EAAC,SAAqB,2BAAlI;6NAAmI,IAAsB,yGAA8B,mBAAY,IAAoB,6XAAiI,iDAAnU,mBAAgB,WAArC,YAAmI,EAA9G,SAAgB,GAAmQ,oCAA+C,iBAAtF,mBAAsC,oBAAhF,YAAiI,EAAhD,SAA+C,EAAtF,SAAsC,2BAAhF,iEAAiI;;;;;;;;;;;;;;;sDCAxV,uHAAkD,qCAAW,oBAAY,GAAqB,eAA8C,uDAA1G,mBAAe,WAAjD,YAAkD,EAAhB,SAAe,GAAC,kDAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4DCA7D,6GAAiC,oHAAmC,8TAAgK,YAA5F;;wBAAgC;MAApG,kVAAgK,iCAAoB,4IAA8F,KAAe,4GAAiC,IAAM,eAAY,IAAa,qSAA2K,YAAhE;;wBAA2B;MAAtI,kNAA2K,IAAU,kSAA+J,YAA5D;;wBAAuB;MAA1H,kNAA+J,iDAA1iB,wBAAoB,EAA/J,YAAgK,EAArB,SAAoB,GAA6Q,oBAA+B,oBAA1G,aAA2K,EAAhG,SAA+B,GAAkJ,qBAA2B,gBAAlG,aAA+J,EAAxF,UAA2B,mDAAnhB,mBAAqC,oBAA1I,qIAAgK,EAA3D,SAAqC,EAA1I,oBAAgK,gEAAoB,GAAgC,oDAA6D,GAA7F,YAA8F,EAA9D,SAA6D,GAAuN,mBAAmC,kBAA1K,uIAA2K,EAApC,SAAmC,EAA1K,oBAA2K,GAAqI,oBAAmC,kBAA9J,0IAA+J,EAApC,UAAmC,EAA9J,sBAA+J;;;;;;;;;;sDCAplB,0MAAgQ,YAAxN;;wBAA2B;MAAiH;;wBAAwC;MAAC;;wBAAkC;MAA/P,qeAAgQ,mDAAxN,mBAA2B,aAAC,mBAAqB,WAA+C,mBAAmB,UAAvC,mBAAmB,UAA7C,mBAAyB,aAAyC,mBAAuB,YAAnL,YAAgQ,EAAxN,SAA2B,EAAC,SAAqB,EAA+C,SAAmB,EAAvC,SAAmB,EAA7C,SAAyB,EAAyC,SAAuB;sDAA8F,wMAAiQ,YAA3N;;wBAA2B;MAAyF;;wBAAkD;MAAC;;wBAAmD;MAAhQ,mcAAiQ,mDAA3N,mBAA2B,aAAC,mBAAqB,WAA+C,mBAAmB,UAAvC,mBAAmB,UAA7C,mBAAyB,aAAjH,YAAiQ,EAA3N,SAA2B,EAAC,SAAqB,EAA+C,SAAmB,EAAvC,SAAmB,EAA7C,SAAyB;sDAAgK,6MAA+Q,YAA7N;;wBAA2B;MAAyF;;wBAAqD;MAAC;;wBAAkD;MAA9Q,sbAA+Q,mDAA7N,mBAA2B,aAAC,mBAAqB,WAA+C,mBAAmB,UAAvC,mBAAmB,UAA7C,mBAAyB,aAA7H,YAA+Q,EAA7N,SAA2B,EAAC,SAAqB,EAA+C,SAAmB,EAAvC,SAAmB,EAA7C,SAAyB;oLAAp0B,yMAAuD,IAAc,qVAAgG,qNAAgQ,IAAiB,kNAAiQ,IAAgB,kNAA+Q,iDAAz8B,mBAAyC,wBAAtD,YAAuD,EAA1C,SAAyC,GAAiD,mBAAwB,cAA1D,YAAgG,EAA9D,SAAwB,GAAsD,uBAAuB,EAAvC,YAAgQ,EAAhP,SAAuB,GAAyP,sBAAsB,EAArC,aAAiQ,EAAlP,SAAsB,GAAiQ,4BAA4B,EAAjD,aAA+Q,EAA1P,SAA4B;;;;;;;;;0DCAxvB,kGAAuE,wLAAoI,qCAAS,yDAAzG,mBAAwB,UAAC,mBAAiC,eAAC,mBAAoC,eAAnI,YAAoI,EAAhG,SAAwB,EAAC,SAAiC,EAAC,SAAoC,GAAC,kDAAS;0DAAwE,4MAAyM,qCAAyD,yDAAjK,mBAAgC,kBAAC,mBAAiC,eAAC,mBAAoC,eAAxM,YAAyM,EAAxG,SAAgC,EAAC,SAAiC,EAAC,SAAoC,GAAC,8GAAyD;0DAAK,uaAA+jB,YAA7I;;wBAA4B;MAA9c,4QAA+jB,sMAA0K,qCAAqB,2BAA3rB,wCAA8B,EAAC,mBAA2B,+BAA7H,YAA+jB,EAA5f,SAA8B,EAAC,UAA2B,mDAAC,0FAAuD,IAAC,mBAAkD,4BAAC,6DAAoE,iBAAC,kBAAkC,8BAAC,sDAA4C,GAAC,yCAAmD,2BAA8B,mBAA0B,aAAC,mBAAiC,eAAe,mBAAoC,eAA9jB,YAA+jB,EAAjc,SAAuD,EAAC,SAAkD,EAAC,SAAoE,EAAC,SAAkC,EAAC,SAA4C,EAAC,SAAmD,EAA8B,SAA0B,EAAC,SAAiC,EAAe,SAAoC,GAA6C,0CAAiE,2BAAC,uCAA2D,2BAAzK,YAA0K,EAA9H,UAAiE,EAAC,UAA2D,GAAC,4EAAqB;0DAAnkC,0FAA8D,oLAAyM,IAA8D,6MAA+jB,iDAAl0B,gDAAyC,mBAA7C,YAAyM,EAArM,SAAyC,GAA8N,kBAA8C,oBAAlD,YAA+jB,EAA3jB,SAA8C;0DAArlB,+KAAuE,IAAuJ,6MAA8D,iDAAxR,0CAA+C,yBAAnD,YAAuE,EAAnE,SAA+C,GAA+K,mBAA8C,OAAlD,YAA8D,EAA1D,SAA8C;;;;;;;;;wGCAhR,kTAAukB,YAArL;;wBAA4C;MAAC;;wBAA+C;MAAC;;wBAAiD;MAAC;;wBAAqC;MAAtkB,85BAAukB,mDAAvhB,mBAAiC,wBAAjF,YAAukB,EAAvhB,SAAiC,GAAnE,kBAAY,EAA1B,YAAukB,EAAzjB,SAAY,GAAgO,mBAAsD,qCAA9N,mBAA8B,qBAAC,mBAAkC,uBAA8J,mBAAiC,uBAA9L,mBAA+B,sBAAC,mBAA+B,sBAAC,oBAAqC,yBAA0F,oBAAkC,uBAArX,YAAukB,EAA7U,SAAsD,EAA9N,SAA8B,EAAC,SAAkC,EAA8J,SAAiC,EAA9L,SAA+B,EAAC,SAA+B,EAAC,UAAqC,EAA0F,UAAkC,mDAA1V,mBAAoB,gBAAuU,uBAA2B,EAAjZ,YAAukB,EAA5iB,SAAoB,EAAuU,SAA2B;;;;;;;;;;;;;;;;;;8DCA1I,mPAA0J,mOAA+I;qGAAhjB,uSAAuQ,YAAxB;;wBAAuB;MAAtQ,yQAAuQ,oLAA0J,GAAqJ,YAA+C,iDAA5a,mBAAqB,WAAC,mBAA+B,gBAA9O,YAAuQ,EAA9E,SAAqB,EAAC,SAA+B,GAA8B,oBAAoB,cAAzB,YAA0J,EAArJ,SAAoB,mDAAlP,iDAAmD,GAAC,mBAA2C,0BAAC,6CAA0C,YAAxL,qIAAuQ,EAAzN,SAAmD,EAAC,SAA2C,EAAC,SAA0C,EAAxL,oBAAuQ;;;;;;;;;;;;uDCApK,6GAA2E,qCAAc,iCAA3C,kBAA4B,yBAA1E,YAA2E,EAA7B,SAA4B,GAAC,oEAAc;uGAA5L,uIAAsD,yHAAyC,gFAAI,+MAA2E,IAAwB,2EAAI,yKAA6E,KAAkB,yQAAsS,YAA7F;;wBAA6C;MAAC;;wBAA8C;MAArS,oYAAsS,mDAA5d,mBAA6B,YAA7C,YAA2E,EAA3D,SAA6B,GAAkL,mBAAqB,cAAC,mBAAe,SAAC,mBAAyB,aAAC,mBAA+B,gBAAC,iBAA2B,EAAC,6DAAmD,GAAxM,YAAsS,EAA7Q,SAAqB,EAAC,SAAe,EAAC,SAAyB,EAAC,SAA+B,EAAC,SAA2B,EAAC,SAAmD;;;;;;;;;sGCAjf,uIAAsD,yHAAyC,gFAAI,gJAA0D,KAAkB,yQAA8U,YAA9F;;wBAA8C;MAAC;;wBAA8C;MAA7U,scAA8U,mDAArT,mBAAoB,aAAC,mBAAgB,UAAC,mBAA0B,cAAC,mBAAgC,iBAAC,iBAA2B,EAAC,iBAAa,EAA2B,6CAAgD,cAA1E,sBAAyB,GAA9L,YAA8U,EAArT,SAAoB,EAAC,SAAgB,EAAC,SAA0B,EAAC,SAAgC,EAAC,SAA2B,EAAC,SAAa,EAA2B,SAAgD,EAA1E,SAAyB;;;;;;;;;2GCA7W,uIAAsD,yHAAyC,gFAAI,gJAA0D,KAAkB,yQAAwQ,YAA7F;;wBAA6C;MAAC;;wBAA8C;MAAvQ,4XAAwQ,mDAA/O,mBAAe,SAAC,mBAAyB,aAAC,mBAA+B,gBAAC,iBAAa,EAA2B,mBAA+B,mBAAzD,sBAAyB,GAA1I,YAAwQ,EAA/O,SAAe,EAAC,SAAyB,EAAC,SAA+B,EAAC,SAAa,EAA2B,SAA+B,EAAzD,SAAyB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0GCAzT,mNAA6B,yBAAhB,kBAAe,EAA5B,YAA6B,EAAhB,SAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uDCAuI,6EAA8C,oHAAoC,0HAA0C,KAAM,mHAAwC,KAAM,mHAAwC,KAAY,4IAAiE,0HAA0C,KAAM,mHAAwC,KAAM,mHAAwC;uDAA2B,8GAAkE,mBAAiC;uDAAylB,6EAAoC,mBAAqC,IAAa,6EAAM,+JAAwB;sDAAsB,eAAoD;uDAAa,0KAAgK,oCAAM;uDAAj0B,0VAAgd,YAA5a;;wBAAwC;MAA5E,4QAAgd,wNAAoC,IAAsG,kNAAoD,IAAa,4KAAgK,iDAApY,mBAAwB,cAA/c,YAAgd,EAAzB,SAAwB,GAAlY,4CAAqD,GAAlI,YAAgd,EAAnY,SAAqD,GAA4V,qBAAqB,EAAnC,YAAoC,EAAtB,SAAqB,GAAsI,qBAAoB,EAAnD,YAAoD,EAArB,UAAoB,GAAuG,4EAAsE,qBAA/J,YAAgK,EAAvE,UAAsE,mDAAvrB,mBAAe,WAAC,mBAAwB,cAAC,mBAA8B,cAAC,2CAAyD,sBAAC,2CAAoE,sBAAC,sCAAsC,GAAC,oCAAkC,GAAnZ,YAAgd,EAA7U,SAAe,EAAC,SAAwB,EAAC,SAA8B,EAAC,SAAyD,EAAC,SAAoE,EAAC,SAAsC,EAAC,SAAkC;uDAA0c,8GAAkE,mBAAiC;uDAAyB,uIAAiF,gKAA8G,wDAA1E,sCAAsC,GAAC,oCAAkC,GAA7G,YAA8G,EAA1E,SAAsC,EAAC,SAAkC;uDAAiG,wGAA8E,mBAA+B,uDAAhF,mBAAgD,2BAA7E,YAA8E,EAAjD,SAAgD;wDAAoK,2GAA4D,qCAAa,yDAAlD,mBAAmB,eAA1C,YAA4D,EAArC,SAAmB,GAAkB,sDAAa;wDAA1L,gJAAiH,kLAA4D,GAAmB,eAAiD,IAAa,mHAAwC,IAAM,eAA2C,iDAAjO,mBAAiB,YAAtB,YAA4D,EAAvD,SAAiB,mDAAvE,mBAAgD,2BAAhH,YAAiH,EAAjD,SAAgD;kPAA7zE,gHAAoC,sMAA+H,YAAzE;;wBAAwE;MAA9H,wBAA+H,iLAA8C,IAAwZ,4KAAkE,IAAoD,yIAAkD,mBAAY,IAAa,uHAA2C,kLAAgd,IAA6Y,6KAAkE,IAA0D,6KAAiF,IAA2H,8MAAmF,uNAA8E,IAAkD,oNAAiH,iDAA7oE,4CAA+B,GAA7C,YAA8C,EAAhC,SAA+B,GAA4b,mBAA8B,yBAAjE,YAAkE,EAA/B,SAA8B,GAAskB,mBAA2B,sBAAtb,aAAgd,EAArD,SAA2B,GAA0c,mBAA8B,yBAAjE,aAAkE,EAA/B,SAA8B,GAA4G,4CAA+B,GAAhF,aAAiF,EAAhC,SAA+B,GAA0K,mBAAoC,0BAAlF,aAAmF,EAArC,SAAoC,GAAM,uBAAuB,EAA5B,aAA8E,EAAzE,SAAuB,GAA6I,sBAAsB,EAA/D,aAAiH,EAAxE,SAAsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iDCA5wE,eAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oDCAZ,eAAY;;;;;;;;;iDCAZ,eAAY;;;;;;;;;sDCAZ,8GAAmC,qYAA8H,GAAM,eAAwF,IAAa,sGAA2B,mBAA2C,GAAmB,eAAY,iDAA1P,mBAAyC,sBAAhF,mBAAsC,oBAAnF,YAA8H,EAA1C,SAAyC,EAAhF,SAAsC,2BAAnF,iEAA8H;;;;;;;;;6FCAjK,sJAAuG,qYAA8H,IAAM,meAAwF,IAAsB,uHAAiC,mBAAY,GAAmB,eAAwF,iDAAtT,mBAAyC,sBAAhF,mBAAsC,oBAAnF,YAA8H,EAA1C,SAAyC,EAAhF,SAAsC,GAAsE,uDAA4C,GAAC,mBAAqB,WAAvF,YAAwF,EAAnE,SAA4C,EAAC,SAAqB,mDAA/R,gDAAmE,GAAtG,YAAuG,EAApE,SAAmE,GAAC,iEAA8H,GAAM,yRAAwF;;;;;;;;;;;;;;;;;;0DCAnU,eAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mDCAC,0SAA2R,YAAxO;;wBAAkC;MAAC;;wBAA8B;MAAyC;;wBAAkD;MAAC;;wBAAgD;MAAhQ,4QAA2R,6GAA8B,mBAAY,iDAAhU,gCAAsB,EAAC,mBAAsB,aAAlD,YAA2R,EAAtR,SAAsB,EAAC,SAAsB,mDAAmE,mBAAuC,uBAA5J,YAA2R,EAAtK,SAAuC;8FAAzK,2DAAa;;;;;;;;;qDCAb,eAAY,IAAa,2XAA8H,iDAAvF,yCAA+C,YAAC,mBAAsC,oBAA7H,YAA8H,EAAvF,SAA+C,EAAC,SAAsC,2BAA7H,iEAA8H;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uDCAkU;;;;;;uPAA8F,iCAAkB,2BAA3C,kBAAwB,oBAA7F,YAA8F,EAAzB,SAAwB,2BAA7F,+bAA8F,gEAAkB;uDAAlX,4mDAAoH;;;;;;;;wBAA8I;MAAlD;;wBAAiD;MAA7I,kwBAA8I,6MAA8F,iDAAnS,oBAAe,QAA5E,YAAoH,EAAvD,UAAe,GAAuE,oBAAqB,WAAxC,oBAAkB,WAAuB,oBAAsC,0BAA3F,aAA8I,EAA/G,UAAqB,EAAxC,UAAkB,EAAuB,UAAsC,GAA+D,oBAAwD,4BAApE,aAA8F,EAAlF,UAAwD,2BAAtU,u8CAAoH,07BAA8I;uDAA2J,4EAAmD,mJAAY;uDAAnmB,gHAA2D,2HAA2C,qCAA2B,MAAM,4KAAoH,IAAyS,4KAAmD,iDAAhc,yDAA4C,GAA5D,YAAoH,EAApG,SAA4C,GAAsW,0DAA6C,GAAlD,YAAmD,EAA9C,SAA6C,mDAAhf,oEAA2B;uDAAwnB;;;;;;;;wBAAsU;MAAzP;;wBAAqB;MAAlG,glBAAsU,mKAAsE,0JAAsE,uFAAjN,mBAAuC,6BAAxS,YAAsU,EAArE,SAAuC,GAAtE,uBAA8B,EAAhF,mBAAiD,6BAArF,mBAAmC,uBAA/K,YAAsU,EAApG,SAA8B,EAAhF,SAAiD,EAArF,SAAmC,mDAA5E,mBAAwC,uBAA3I,qIAAsU,EAAnO,SAAwC,EAA3I,oBAAsU;uDAA6gC;;;;;;;;wBAA0T;MAA9O;;wBAAoB;MAAhG,glBAA0T,mKAAsE,0JAAsE,uFAA7M,mBAAmC,yBAA5R,YAA0T,EAAjE,SAAmC,GAAlE,uBAA8B,EAA5E,mBAA6C,yBAAhF,mBAAkC,sBAA3K,YAA0T,EAAhG,SAA8B,EAA5E,SAA6C,EAAhF,SAAkC,mDAA1E,mBAAuC,sBAAxI,qIAA0T,EAAzN,SAAuC,EAAxI,oBAA0T;uDAAt9E,uHAA2C,sHAAqC,iLAA2D,IAAojB,qHAAyC,uHAAuC,qCAAoD,MAAM,4KAAsU,IAA4J;;;;;;;;wBAAqT;MAArO;;wBAAwB;MAAxG,klBAAqT,oKAAsE,8IAAyD,KAAgB;;;;;;;;wBAA6R;MAAjN;;wBAAoB;MAAhG,klBAA6R,oKAAsE,+IAA0D,KAAgB,6KAA0T,iDAAj2E,oBAAqB,eAA1D,YAA2D,EAAtB,SAAqB,GAAw+B,mBAA4B,uBAArU,YAAsU,EAA7B,SAA4B,GAA0a,mBAAuC,6BAApT,aAAqT,EAAxC,SAAuC,GAAtE,uBAA8B,EAAhF,mBAAiD,6BAAxF,mBAAsC,0BAA3L,aAAqT,EAAvE,SAA8B,EAAhF,SAAiD,EAAxF,SAAsC,GAAkgB,oBAAmC,yBAA5R,aAA6R,EAApC,UAAmC,GAAlE,wBAA8B,EAA5E,oBAA6C,yBAAhF,oBAAkC,sBAA3K,aAA6R,EAAnE,UAA8B,EAA5E,UAA6C,EAAhF,UAAkC,GAA+hB,oBAA4B,uBAAzT,aAA0T,EAA7B,UAA4B,mDAAtsD,yGAAoD,GAAilB,mBAA2C,0BAApJ,uIAAqT,EAA5M,SAA2C,EAApJ,oBAAqT,GAAgP,oBAAuC,sBAAxI,0IAA6R,EAA5L,UAAuC,EAAxI,sBAA6R;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yGCA5gE,8MAA4G,uFAAM,+LAA6F,6HAA6B,KAAiB,mIAAoE,KAAM,oVAA6F,IAAM,wYAAsI,IAAM,mKAAuF,kDAAxQ,mBAA8B,qBAA5F,YAA6F,EAA/B,SAA8B,GAA4F,mBAA+B,sBAApH,aAAsI,EAAjD,SAA+B,mDAAna,mBAAoB,gBAA7B,YAA6F,EAApF,SAAoB,GAAoH,mBAAiC,sBAAvC,YAAoE,EAA9D,SAAiC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6DCAhH,+OAAkS,wDAAnP,mBAAwB,gBAAC,4DAAyE,YAAC,mBAAgD,oBAAC,mBAAkD,uBAAC,mBAA2C,qBAAjS,YAAkS,EAAnP,SAAwB,EAAC,SAAyE,EAAC,SAAgD,EAAC,SAAkD,EAAC,SAA2C;6DAAU,kNAAyN,wDAAzK,mBAAwB,gBAAC,mBAAgD,oBAAC,mBAAkD,uBAAC,mBAA2C,qBAAxN,YAAyN,EAAzK,SAAwB,EAAC,SAAgD,EAAC,SAAkD,EAAC,SAA2C;6DAAvrB,4RAAoL,4NAAkS,IAAS,wNAAyN,iDAA1iB,6CAAqC,GAAnL,YAAoL,EAAtC,SAAqC,GAAS,oBAAoB,EAA5B,YAAkS,EAA1R,SAAoB,GAAuR,qBAAqB,EAA7B,YAAyN,EAAjN,SAAqB,mDAAvf,mBAA2B,WAAC,mBAA4B,WAAC,mBAAyB,WAAvF,YAAoL,EAA/K,SAA2B,EAAC,SAA4B,EAAC,SAAyB;;;;;;;;;qDCA6F,+OAAkS,wDAAnP,mBAAwB,gBAAC,4DAAyE,YAAC,mBAAgD,oBAAC,mBAAkD,uBAAC,mBAA2C,qBAAjS,YAAkS,EAAnP,SAAwB,EAAC,SAAyE,EAAC,SAAgD,EAAC,SAAkD,EAAC,SAA2C;qDAAU,kNAAyN,wDAAzK,mBAAwB,gBAAC,mBAAgD,oBAAC,mBAAkD,uBAAC,mBAA2C,qBAAxN,YAAyN,EAAzK,SAAwB,EAAC,SAAgD,EAAC,SAAkD,EAAC,SAA2C;qDAAvrB,4RAAoL,oNAAkS,IAAS,gNAAyN,iDAA1iB,6CAAqC,GAAnL,YAAoL,EAAtC,SAAqC,GAAS,oBAAoB,EAA5B,YAAkS,EAA1R,SAAoB,GAAuR,qBAAqB,EAA7B,YAAyN,EAAjN,SAAqB,mDAAvf,mBAA2B,WAAC,mBAA4B,WAAC,mBAAyB,WAAvF,YAAoL,EAA/K,SAA2B,EAAC,SAA4B,EAAC,SAAyB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oDCAuF,gHAA0D,oKAA2B;oDAA+F,6EAAuB,qKAA4B;mDAAO,eAA6D;oDAA9M,kMAAuF,oLAAuB,IAAmC,+MAA6D,iDAApJ,qBAA4B,gBAAtF,YAAuF,EAA7B,SAA4B,GAAmG,oBAAoB,EAA5D,YAA6D,EAArB,SAAoB;oDAAsmB,0IAAyD,uQAA+U,YAA9L;;wBAAuE;MAAoF;;wBAAkC;MAA9U,4QAA+U,kBAAY,iDAA/U,sFAA+C,GAAC,mBAAsB,aAAlF,YAA+U,EAAnU,SAA+C,EAAC,SAAsB,mDAAxG,yBAAqB,EAAxD,YAAyD,EAAtB,SAAqB,GAAoF,8DAA6D,GAAyE,mBAA0C,mBAAC,mBAAuC,mBAA3S,YAA+U,EAA5P,SAA6D,EAAyE,SAA0C,EAAC,SAAuC;0KAAl6C,wOAA6H,YAAvD;;wBAAkB;MAAxF,kHAA6H,gMAAiD,mNAA0D,IAAmC,gNAAuF,IAAiJ,kHAAsC,+GAA8B,KAAkB,gGAAqf,YAAtE;;wBAAyB;MAAC;;wBAAwB;MAAC;;wBAAkB;MAApf,ggBAAqf,mDAAn6B,mBAAkB,QAAhD,YAAiD,EAAnB,SAAkB,GAAsC,oBAAoB,EAAzD,YAA0D,EAArB,SAAoB,GAAwE,qBAAqB,EAAzD,aAAuF,EAAnD,SAAqB,GAAie,6BAAoC,GAAuC,mBAA2C,aAAqD,mBAAuC,WAA3F,wDAAmD,sBAApS,kDAAmE,EAAC,mBAAqD,kBAAsC,mBAAqC,YAAnO,mBAA8B,EAA9D,mBAA+B,EAAlE,aAAqf,EAAzR,SAAoC,EAAuC,SAA2C,EAAqD,SAAuC,EAA3F,SAAmD,EAApS,SAAmE,EAAC,SAAqD,EAAsC,SAAqC,EAAnO,UAA8B,EAA9D,UAA+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4GCA3oB,qNAA6B,yBAAhB,kBAAe,EAA5B,YAA6B,EAAhB,SAAe;;;;;;;;;;;;yDCAC,mHAA0D,gNAAsC,YAAnB;;wBAAkB;MAArC,wLAAsC,iCAAe,yDAArD,2JAAsC,2DAAe;yDAA5I,6EAAM,qCAAgB,MAAO,8KAA0D,iDAAlB,mBAAiB,YAAzD,YAA0D,EAAlB,SAAiB,mDAAhF,yDAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wDCAiY,4RAA4S,YAAtH;;wBAA0D;MAAC;;wBAA0D;MAA3S,wBAA4S,kHAAkC,KAAM,qIAAgF,+IAAqF,KAAM,4IAAuF,KAAM,uHAA4C,wDAA9kB,mBAAsC,uBAAC,mBAAuC,uBAAC,mBAA4C,4BAArL,YAA4S,EAAlP,SAAsC,EAAC,SAAuC,EAAC,SAA4C,GAAsM,mBAAwC,4BAA/E,YAAgF,EAAzC,SAAwC,GAA2C,mBAA0C,4BAApF,YAAqF,EAA3C,SAA0C,GAAkD,mBAA2C,4BAAtF,YAAuF,EAA5C,SAA2C;wDAA5+B,iMAAwJ,qPAA6N,YAAlF;;wBAAwC;MAAC;;wBAAwC;MAA5N,wBAA6N,mBAAY,IAAsB,6KAA4S,iDAAzQ,mBAAsB,iBAAzD,YAA4S,EAAzQ,SAAsB,mDAAza,mBAA4C,cAAC,8CAAmE,GAAvJ,YAAwJ,EAAjH,SAA4C,EAAC,SAAmE,GAAsD,0CAAuC,GAAC,6CAA6C,MAA1I,YAA6N,EAAxK,SAAuC,EAAC,SAA6C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4LCChS,eAA6B,IAC7B,2LAA8B,IAC9B,yLAAwB,IACxB,2LAA8B;;;;;;;;;uDCJhC,uKAA4B;;;;;;;;;uDCA5B,uKAA4B;;;;;;;;;iDCA5B,uKAA4B;;;;;;;;;wDCEtB,4QAAmE,sCAEnE,yDAFsC,mBAA4B,UAAlE,YAAmE,EAA7B,SAA4B,GAAC,uDAEnE;wDACA,oPAAiE,sCAEjE,yDAFoC,mBAA4B,UAAhE,YAAiE,EAA7B,SAA4B,GAAC,yFAEjE;+KANF,maAA2B,KACzB,+NAAmE,KAGnE,6MAAiE,0BAJrD,kBAAY,EAA1B,YAA2B,EAAb,SAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sDCDs2B,wMAAmD,8DAAtC,kBAAqC,yCAAlD,YAAmD,EAAtC,SAAqC;sDAAsE,+IAAiB;sDAA71B,sjBAAyoB,YAA1C;;wBAAyC;MAAxoB,iaAAyoB,kHAAmC,gLAAwC,IAA+E,2KAAyC,iDAAjS,sDAAmD,iBAA9lB,YAAyoB,EAA9F,UAAmD,GAA7E,mBAAyB,6BAA1iB,YAAyoB,EAAxH,UAAyB,GAA+I,mBAA0B,kCAAvC,YAAwC,EAA3B,UAA0B,GAA6F,oBAA2B,kCAAxC,YAAyC,EAA5B,UAA2B,mDAAvsB,qCAAwB,iBAAC,yDAAsC,iBAAC,qCAA4B,GAAC,mBAAkC,eAAC,uCAA0C,iBAAC,wCAAyC,iBAAC,uDAAyC,GAAC,sIAA2F,GAAC,wCAAiD,iBAAhhB,+IAAoI,SAAwB,EAAC,SAAsC,EAAC,SAA4B,EAAC,SAAkC,EAAC,SAA0C,EAAC,SAAyC,EAAC,SAAyC,EAAC,SAA2F,EAAC,SAAiD,EAAhhB,iCAAyoB;sDAAuX,6RAA8Y,YAAhG;;wBAA6C;MAAC;;wBAAiD;MAA7Y,4VAA8Y,mDAAhN,kBAAuB,4BAA2B,kBAAqB,2BAAC,mBAAuC,oBAAvF,kBAAyB,6BAA/O,YAA8Y,EAAhN,SAAuB,EAA2B,SAAqB,EAAC,SAAuC,EAAvF,SAAyB,mDAAxK,uCAA0B,iBAAC,qCAA0C,iBAAC,wCAAgD,iBAA7L,YAA8Y,EAAvU,SAA0B,EAAC,SAA0C,EAAC,SAAgD;+IAA72C,iSAAgL,YAArF;;wBAAsC;MAAC;;wBAA6C;MAA/K,wcAAgL,4MAAyoB,IAA+P,0KAAwH,8MAA8Y,iDAAniD,mBAA+B,gBAAC,mBAA+B,gBAA1F,YAAgL,EAArJ,SAA+B,EAAC,SAA+B,GAAiL,mBAAwC,QAAnI,YAAyoB,EAA9iB,SAAwC,GAA25B,mBAAwC,QAAtE,YAA8Y,EAAhX,SAAwC,mDAAtvC,2JAAgL,GAA06B,wDAAqE,GAAvG,YAAwH,EAAtF,SAAqE;;;;;;;;;;gGCA/pC,+OAGyH,YAAjH;;wBAAsD;MAAC;;wBAAyD;MAHxH,wBAGyH,IAH9E,sEAGpC,MAAkH,uOAA4B,mDAH1G,8DAGpC,sBAHP,YAGyH,EAH9E,SAGpC;;;;;;;;;uRCHP,uaAA6X,YAArH;;wBAAyC;MAAC;;wBAA6C;MAAC;;wBAA4B;MAA5X,qNAA6X,8HAA+C,KAAY,mMAA0F,YAAnC;;wBAAkC;MAAzF,wBAA0F,qPAAkK,YAA1C;;wBAAyC;MAAjK,kKAAkK,8GAA4B,mBAAY,IAAmB,mSAAa,IAA0B,maAAoX,YAAnH;;wBAA4C;MAAC;;wBAAwC;MAAC;;wBAA4B;MAAnX,sNAAoX,+HAA+C,kDAA/iC,gDAA2D,iBAArM,YAA6X,EAAnP,SAA2D,GAAstB,+CAA0D,iBAA/L,aAAoX,EAA/O,SAA0D,mDAA/wB,mBAAiE,uBAAvQ,sDAA6X,EAAvL,SAAiE,EAAvQ,SAA6X,GAAwL,wDAAqE,GAAxG,YAAkK,EAA/H,SAAqE,GAAqH,+FAAa,GAA0N,mBAAgE,sBAAhQ,wDAAoX,EAApL,SAAgE,EAAhQ,SAAoX;;;;;;;;;gDCA7nC,eAAY;iGAAzB,yDAAa;;;;;;;;;oRCAb,uaAA6X,YAArH;;wBAAyC;MAAC;;wBAA6C;MAAC;;wBAA4B;MAA5X,qNAA6X,8HAA+C,KAAY,kMAAyF,YAAnC;;wBAAkC;MAAxF,wBAAyF,8LAA6E,YAA1C;;wBAAyC;MAA5E,kKAA6E,6GAA2B,mBAAY,IAAmB,mSAAa,IAA0B,maAAoX,YAAnH;;wBAA4C;MAAC;;wBAAwC;MAAC;;wBAA4B;MAAnX,sNAAoX,+HAA+C,kDAAx9B,gDAA2D,iBAArM,YAA6X,EAAnP,SAA2D,GAA+nB,+CAA0D,iBAA/L,aAAoX,EAA/O,SAA0D,mDAAxrB,mBAAiE,uBAAvQ,sDAA6X,EAAvL,SAAiE,EAAvQ,SAA6X,GAA2R,+FAAa,GAA0N,mBAAgE,sBAAhQ,wDAAoX,EAApL,SAAgE,EAAhQ,SAAoX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oDCAnjC,eAAY,GAAa,eAAqC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2DCA9D,uOAA+M,YAA1E;;wBAAkC;MAAC;;wBAAsC;MAA9M,4QAA+M,GAA7J,mDAA2D,KAAkG,gCAAW,mDAArN,6BAAmB,EAAC,mBAAwB,eAAjD,YAA+M,EAA1M,SAAmB,EAAC,SAAwB,mDAAC,uIAA2D,WAAC,mBAAsB,cAApI,YAA+M,EAA7J,SAA2D,EAAC,SAAsB,GAA2E,oDAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4ECA1N,6SAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8DCOU,6EAAuD,mCAAC;8DADrE,6EAAmE,sCACtD,yLAAuD,sFAAzC,6CAAwC,4BAAtD,YAAuD,EAAzC,SAAwC,2BADA,6DACtD;8DAOzB,qGAAmD,KAC/C,4PAA+E,YAAvB;;wBAAsB;MAA9E,2MAA+E,wCAAU,MACzF,yPAA4E,YAAvB;;wBAAsB;MAA3E,2MAA4E,wCAAU,2BAD5D,yBAAe,EAAzC,YAA+E,EAArD,SAAe,GACf,sBAAY,EAAtC,YAA4E,EAAlD,SAAY,2BADtC,2JAA+E,GAC/E,2JAA4E;8DAOpE,8JAAuF,YAArD;;wBAA0B;MAA5D,wBAAuF,KAAC,uHAA4C,kOAA+B;8DACnK,6MAAyH,YAA7B;;wBAA0B;MAAtH,uFAAyH,+BAAxE,kBAAoB,mCAAC,iFAAqB,GAA3F,YAAyH,EAAxE,SAAoB,EAAC,SAAqB;8DAMnF,6EAA6C,6PAE7C;8DACA,6EAA8C,oPAE9C;8DAEJ,gMAAoE,wJACpE;+DAIA,whBAC8C,yBAA1C,mGAAyC,GAD3B,6BAAkB,EAApC,YAC8C,EAA1C,SAAyC,EAD3B,SAAkB,2BAApC,qQAC8C;+DAC9C,qgBAA+E,yBAA7D,+BAAoB,EAAtC,YAA+E,EAA7D,SAAoB,2BAAtC,qQAA+E;+DAM/E;;;;;;;;wBAEgD;MAAxB;;wBAAuB;MAF/C,0hBAEgD,oCAAM,gEAF5B,yBAAe,EAAzC,YAEgD,EAFtB,SAAe,GACiC,wBAAmB,EAD7F,YAEgD,EAD0B,SAAmB,2BAD7F,2JAEgD;+DAChD,6XAA0F,6CAAe,2BAAjE,kBAAQ,EAAhD,YAA0F,EAAlD,SAAQ,2BAAhD,2JAA0F;8DAhCtG,8QAA0E,IACtE,qGAA6B,KACzB,mLAAuF,IACvF,mLAAyH,IAE7H,sGAA6B,KACzB,iOAAiB,IACb,gLAAgB,qCAAe,MAC/B,yMAA2C,mDACvC,0LAA6C,IAG7C,oLAA8C,IAIlD,iLAAoE,IAIxE,yLAAkB,IACd,qLAC8C,IAC9C,qLAA+E,IAGnF,8NAAkB,IAGd,qLAEgD,IAChD,qLAA0F,IAE1F;;;;;;;;wBAC8B;MAA1B;;wBAAyB;MAD7B,4hBAC8B,oCAAM,2BAjCnC,qDAA4B,GAAjC,YAAuF,EAAlF,SAA4B,GACb,qDAA4B,GAAhD,YAAyH,EAArG,SAA4B,GAM1B,yDAA8B,GAA5C,aAA6C,EAA/B,SAA8B,GAG9B,0DAA+B,GAA7C,aAA8C,EAAhC,SAA+B,GAIhB,2DAAkC,GAAnE,aAAoE,EAAnC,SAAkC,GAK9B,iEAAwC,GAA7E,aAC8C,EADT,SAAwC,GAEtC,gEAAuC,GAA9E,aAA+E,EAAxC,SAAuC,GAO1E,kHAAqE,IADzE,aAEgD,EAD5C,UAAqE,GAExB,kEAAwC,GAAzF,aAA0F,EAAzC,UAAwC,GAEjD,uBAAY,EAApD,aAC8B,EADU,UAAY,GAAC,yBAAmB,EAAxE,aAC8B,EADuB,UAAmB,2BAlCpF,6FAA0E,GAO9C,mEAAe,GACY,mEACvC,GAiBR,6EAAkB,GAQd,kKAC8B;4IAvD9C;;;;;;;;wBAA+G;MAA9E;;wBAA2B;MAAa;;wBAAqC;MAA9G,wGAA+G,MAC3G,mMAA0F,YAArD;;wBAA2C;MAAhF,wBAA0F,KAC1F,0GAA+B,KAC3B,2EAAI,qDAAmB,MACvB,0EAAG,qDACC,wNAAmE,IAIvE,2EAAG,qEAA0D,IAIrE,oLAAmD,IAKnD,oGAAwB,KAEpB,kNAA0E,iDAfpD,mBAAoD,oBAAlE,aAAmE,EAArD,SAAoD,GAQpD,qCAAwB,GAAlD,aAAmD,EAAzB,SAAwB,GAOf,mBAA0C,QAAzE,aAA0E,EAA3C,SAA0C,mDApB7E,qHAA+G,GASpG,kIAA0D;;;;;;;;;6CCVrE,6GAAkC,uDAElC;;;;;;;;;6CCFA,gQAAqB,gDAAe,MACpC,0MAAwB,IACtB;;wBAAkF;MAAtB;;wBAAqB;MAAjF,gWAAkF,uCAAS,MAC3F;;;wWAA2E,iCAAG,2BAHhF,YAAqB,GAEA,wBAAa,EAAC,qBAA0B,EAA3D,YAAkF,EAA/D,SAAa,EAAC,SAA0B,GACxC,yBAAa,EAAC,qBAAyB,EAA1D,aAA2E,EAAxD,UAAa,EAAC,UAAyB,2BAH5D,0DAAqB,GAEnB,0QAAkF,GAClF,gRAA2E;;;;;;;;;6CCD3E,yMAAsE,uDAAlD,mBAAwB,cAA5C,YAAsE,EAAlD,SAAwB;6CAF9C,gQAAqB,6CAAY,MACjC,4MAA2C,IACzC,kKAAsE,IAExE,+MAAgC,IAC9B;;;wWAAkD,oCAAM,mDAL1D,YAAqB,GAE0B,mBAAwB,cAArE,YAAsE,EAAzB,SAAwB,GAGlD,wBAAa,EAAC,kBAAgB,EAAjD,aAAkD,EAA/B,SAAa,EAAC,SAAgB,2BALnD,0DAAqB,GAKnB,8QAAkD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2DCMhD,8kDAAqF,MAEnF;;;;;;;;;;;;;;;;;;;;wBAAkK;MAAlJ;;wBAAyC;MAAC;;wBAAwC;MAAC;;wBAAiC;MAApI,i4BAAkK,KAClK,8JAAgB,qHAAsC,0CAEtD,MAAI,oCAAO,mDAHwF,+BAAiC,2BAApI,aAAkK,EAA/D,UAAiC,GAAC,4EAA4B,GAAjK,aAAkK,EAA7B,UAA4B,2BAFnK,u8CAAqF,IAEnF,o/BAAkK;2DAHlK,oGAAqG,KACvG,8MAAqF,iDAArE,mBAAkD,gCAAlE,YAAqF,EAArE,SAAkD;2DAa/D;;;;;wBAA4H;MAAzC;;wBAAwC;MAA3H,iPAA4H,mCAE7H,2BAFuD,uCAA4B,kCAAlF,YAA4H,EAAtE,SAA4B,2BAAlF,+bAA4H,mGAE7H;2DALJ,okDAAgE,MAC9D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yBAAuH;MAA9D;;yBAAoC;MAA7F,mvCAAuH,KACvH,ieAA4C,MACzC,4MAA4H,GAAhH,mDAAyC,kDAFsC,+BAAwB,GAAtH,aAAuH,EAAzB,UAAwB,GAA7D,kCAAoC,2BAA7F,aAAuH,EAA9D,UAAoC,GAA1E,4EAA4B,GAAxC,uBAAW,EAAlB,aAAuH,EAApG,UAA4B,EAAxC,UAAW,GAEH,iEAAyC,eAArD,aAA4H,EAAhH,UAAyC,2BAH1D,u8CAAgE,IAC9D,kuDAAuH;2DAF3H,4GAAyG,KACvG,8MAAgE,iDAA/C,mBAA8C,4BAA/D,YAAgE,EAA/C,SAA8C;2DAsCrD;;;;;wBAAsH;MAA9C;;wBAA6C;MAArH,iPAAsH,mCAEtH,2BAFoD,kBAAmB,oBAAvE,YAAsH,EAAlE,SAAmB,2BAAvE,+bAAsH,qEAEtH;2DALJ,okDAA4E,MAC1E,0JAAW,qCAAgB,MAC3B;;;;;;;;;kqBAAY,KACV,4MAAsH,yBADxH,aAAY,GACE,mBAAuC,2BAAnD,aAAsH,EAA1G,UAAuC,2BAHvD,u8CAA4E,IAC/D,sEAAgB,GAC3B,s7BAAY;2DAHhB,6EAA6F,KAC3F,8MAA4E,sFAA5D,mBAA2D,kCAA3E,YAA4E,EAA5D,SAA2D;4DAY3E,8EAAgE,KAChE,okDAAiB,MACf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yBAA+H;MAA1B;;yBAAwB;MAA7H,i0CAA+H,KAC/H;;;6VAAiD,IACjD,kXAAwB,IAE1B,skDAAgB,MACd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yBAA2H;MAAxB;;yBAAsB;MAAzH,i0CAA2H,KAC3H;;;6VAAiD,IACjD,mXAA0B,IAE5B,kQAAgG,YAAnC;;wBAAkC;MAA/F,4MAAgG,kCAAiB,mDAT/F,+BAAwB,GAAxC,aAA+H,EAA/G,UAAwB,GAA6D,oBAAwB,aAA7H,aAA+H,EAA1B,UAAwB,GAAjE,qFAAuC,GAAnG,aAA+H,EAAnE,UAAuC,GAClE,+BAAc,GAA/C,aAAiD,EAAhB,UAAc,GAI/B,+BAAyB,GAAzC,aAA2H,EAA3G,UAAyB,GAA0D,oBAAsB,WAAzH,aAA2H,EAAxB,UAAsB,GAA5D,mFAAqC,GAAlG,aAA2H,EAA9D,UAAqC,GACjE,gCAAe,GAAhD,aAAiD,EAAhB,WAAe,GAGxB,2BAAe,EAAzC,aAAgG,EAAtE,WAAe,2BAVzC,u8CAAiB,IACf,2gDAA+H,IAC/H,6WAAiD,GAGnD,k/CAAgB,IACd,2gDAA2H,IAC3H,+WAAiD,GAGnD,sKAAgG,4EAAiB;2DAZnH,6EAAgI,KAC9H,+MAAgE,sFAA1D,mBAAyD,gCAA/D,YAAgE,EAA1D,SAAyD;4DAiBjE,6EAAoD,KAClD;;;gXAA4G,iCAAG,mDAArF,yBAAe,EAAzC,YAA4G,EAAlF,SAAe,GAAoB,mBAA6C,iCAA1G,YAA4G,EAA/C,SAA6C,2BAA1G,2JAA4G;4DAMhH,6EAAqF,KACnF,uHAA4C,KAE5C,kNAAqD,YAA3B;;wBAA0B;MAApD,wLAAqD,sCAAQ,MAC7D,kNAA2D,YAAjC;;wBAAgC;MAA1D,wLAA2D,6CAAe,iCAD1E,2JAAqD,GACrD,2JAA2D;4DAWzD,yPAAsC,IACpC,+XAEyE,YAF3D;;wBAAyC;MAAvD,4bAEyE,mDAD3D,gDAAmD,mBACnD,iDAA0D,mBAFxE,YAEyE,EAD3D,SAAmD,EACnD,SAA0D,2BAFxE,mZAEyE;4DAG3E,2PAAuD,IACrD,gZAEoD,YAFtC;;wBAAkC;MAClC;;wBAAgD;MAD9D,uZAEoD,mDAAtC,2CAAqC,qBAFnD,YAEoD,EAAtC,SAAqC,2BAFnD,mZAEoD;4DAMtD;;;;;;;;;sVAA+E,iCAAiB,2BAA1D,kBAAe,EAArD,YAA+E,EAAzC,SAAe,2BAArD,wIAA+E,8EAAiB;4DAE9F,6EAA0C,6TAA+C;4DACzF,6EAA0C,mLAAsB;4DAChE,6EAA2F,+MAAiD;4DAI1I,gGAA8F,KAC5F,sKAA4F,YAA7D;;wBAAqC;MAApE,wBAA4F,gDAAc,yDAAvG,oEAA2B,GAA9B,YAA4F,EAAzF,SAA2B;4DAIhC,6EAAiF,KAC/E,sKAA4F,YAA7D;;wBAAqC;MAApE,wBAA4F,gDAAc,yDAAvG,oEAA2B,GAA9B,YAA4F,EAAzF,SAA2B;4DAQlC,gGAA0H,KACtH,2MAA2F,YAAxE;;wBAAuE;MAA1F,wLAA2F,iCAAyB,yDAApH,2JAA2F,qEAAyB;4DAKxH,6EAA0G,KACtG,2MAA2F,YAAxE;;wBAAuE;MAA1F,wLAA2F,iCAAyB,yDAApH,2JAA2F,qEAAyB;4DA5B1H,wcAA6H,IAC3H,iLAA0C,IAC1C,iLAA0C,IAC1C,iLAA2F,IAC3F,4EAAI,KAGF,kLAA8F,IAK9F,kLAAiF,IASnF,kLAA0H,GAApH,aAAoG,IAG1G,4EAAI,KAGJ,kLAA0G,GAApG,aAAmG,iDA3BxE,6DAAiC,qBAApE,YAA6H,EAA1F,SAAiC,GAC5D,kEAAmC,GAAzC,YAA0C,EAApC,SAAmC,GACnC,kEAAmC,GAAzC,YAA0C,EAApC,SAAmC,GACnC,mHAAoF,GAA1F,YAA2F,EAArF,SAAoF,GAIlF,0HAAwE,IAA9E,aAA8F,EAAxF,SAAwE,GAKxE,2HAA0E,IAAhF,aAAiF,EAA3E,SAA0E,GAS5E,6JAAoG,eAA1G,aAA0H,EAApH,SAAoG,GAMpG,6JAAmG,eAAzG,aAA0G,EAApG,SAAmG,2BA3BtC,mFAA8B,GAAnG,YAA6H,EAAxD,SAA8B;4DAFrG,2aAAgF,KAC9E,8NAA+E,KAC/E,6MAA6H,0BAFlF,kBAAiC,8BAA9E,YAAgF,EAAnC,SAAiC;4DAgD5E,0QAAgE,wCAAO;4DA6BnE,8JAA8F,YAAjC;;wBAA+B;MAA5F,wBAA8F,KAC5F,+GAAoC,8CAEpC;4DAIF,8JAAwF,YAA/B;;wBAA8B;MAAvF,wBAAwF,KACtF,qGAA0B,4CAAU;4DAnCxC,8EAA8E,KAC5E,oJAA8C,YAAzB;;wBAAuB;MAA5C,wBAA8C,KAC5C,qGAA0B,wCAE1B,MAIF,oJAAgD,YAA3B;;wBAAyB;MAA9C,wBAAgD,KAC9C,qGAA0B,kDAE1B,MAIF,oJAA8C,YAAzB;;wBAAuB;MAA5C,wBAA8C,KAC5C,qGAA0B,kDAE1B,MAIF,qJAAkD,YAA7B;;wBAA2B;MAAhD,wBAAkD,KAChD,sGAA0B,8CAE1B,MAEF,kLAA8F,IAO9F,kLAAwF,iDAPlF,4CAA6B,GAAnC,aAA8F,EAAxF,SAA6B,GAO7B,wCAAyB,GAA/B,aAAwF,EAAlF,SAAyB;4DAnCnC,wNAAoH,EAAhH;;wBAAkC;MAAtC,iHAAoH,IAClH,iLAA8E,iDAAxE,+FAAuE,IAA7E,YAA8E,EAAxE,SAAuE;4DAiDjF,yTAAuD;4DACvD,6QAA6D;4DAM/D,0sBAAsC;wIAnO1C,mGAAuB,KAGrB,4QAA6B,IAC3B,4LAAmC,IACnC,ukDAAkC,MAEhC;;;;;;;;wBAAgF;MAAhE;;wBAA0C;MAA1D,yVAAgF,KAGhF,iLAAqG,IAU3G,iLAAyG,IAmCnG,iLAA6F,IAY7F,iLAAgI,IAkBhI,kLAAoD,IAOtD,+KAAqF,IAUrF,oGAA0B,KAExB,mtBAA4E,MAE5E,6aAAoC,KAClC,+NAAsC,KAMtC,6MAAuD,KAQzD,gNAAgF,IA+ChF,6aAAqC,KACnC,+NAAgE,KAChE,6MAAoH,KAkDtH,wQAAuD,KACvD,sPAA6D,KAK/D,yYAA6F,GAA5D,aAAsC,IACvE,+KAAsC,iDA5NuB,yBAAoB,EAA/E,aAAgF,EAArB,UAAoB,GAGtD,gGAA2E,IAApG,aAAqG,EAA5E,UAA2E,GAUzE,4FAAuE,IAAxG,aAAyG,EAAxE,UAAuE,GAmCnF,kGAA6E,IAA5F,aAA6F,EAA9E,UAA6E,GAY9E,8IAAiH,IAA/H,aAAgI,EAAlH,UAAiH,GAkBzH,4DAA6C,GAAnD,aAAoD,EAA9C,UAA6C,GAOvC,+FAAsE,IAApF,aAAqF,EAAvE,UAAsE,GAYlF,aAA4E,GAA3D,oBAAyB,aAA1C,aAA4E,EAA3D,UAAyB,GAE5B,yBAAqB,EAAnC,aAAoC,EAAtB,UAAqB,GAerB,oBAA8B,UAA5C,aAAgF,EAAlE,UAA8B,GA+C9B,0BAAsB,EAApC,aAAqC,EAAvB,UAAsB,GAoDjB,oBAAmC,mBAAtD,aAAuD,EAApC,UAAmC,GAC1C,oBAAgD,mBAA5D,aAA6D,EAAjD,UAAgD,GAK7B,kDAAsC,GAAC,mBAAoB,EAA5F,aAA6F,EAA5D,UAAsC,EAAC,UAAoB,GAC/E,qCAAuB,GAApC,aAAsC,EAAzB,UAAuB,2BAhOtC,6FAA6B,GAE3B,y8CAAkC,IAEhC,ykBAAgF;;;;;;;;;wDCHlF,gQAA+D,sCAAK,2BAApE,iGAA+D;wDAC/D,gQAAiF,yCAAQ,2BAAzF,iGAAiF;wDAE7E,0EAA4C,uJAAgB;wDAOxD,6QAA+D,IAC3D,uOAA4C,IAExC,8KAAgB,oCAAW,MAG/B,8LAA6C,IACzC,2FAAyB,gCAPjC,6FAA+D,GAC1C,kFAA0B,GAA3C,YAA4C,EAA3B,SAA0B,GAEvB,gEAAW,GAGb,kFAA0B,GAA5C,YAA6C,EAA3B,SAA0B,GACrC,sCAAqB,GAAxB,YAAyB,EAAtB,SAAqB;wDAXpC,4EAA2C,KAIvC,2MAA+D,iDAAhC,mBAA+B,YAA9D,YAA+D,EAAhC,SAA+B;wDAgBlE,4EAAoG,KAEhG,yIAA+E,wDAAjC,+BAA+B,cAA7E,YAA+E,EAAjC,SAA+B;wDA7BzF,oGAAqD,KACjD,6KAA+D,IAC/D,6KAAiF,IACjF,0MAAwB,IACpB,6KAA4C,IAG5C,8KAA2C,IAoB3C,8KAAoG,iDA1BnF,gEAAwC,IAA7D,YAA+D,EAA1C,SAAwC,GACxC,6FAA2D,IAAhF,YAAiF,EAA5D,SAA2D,GAEzE,gEAAwC,IAA3C,YAA4C,EAAzC,SAAwC,GAGtC,6DAAqC,IAA1C,aAA2C,EAAtC,SAAqC,GAoBrC,wIAA8F,IAAnG,aAAoG,EAA/F,SAA8F;wDAU3G,4EAAkC,KAC9B,oGAAkE,wDAAlD,0CAAuC,SAAvD,YAAkE,EAAlD,SAAuC;yDAQvD,2MAA0G,YAAtB;;wBAAqB;MAAzG,wLAA0G,uCAAS,iCAAnH,2JAA0G;wDAD9G,0MAAqD,IACjD,8KAA0G,IAC1G;;;mVAA0D,gCAAE,mDADzC,uFAAgE,IAAnF,YAA0G,EAAvF,SAAgE,GAChE,qBAAsB,EAAzC,YAA0D,EAAvC,SAAsB,2BAAzC,0QAA0D;wDAjD9D,mGAAwB,KAExB,6KAAqD,IAqCrD,6KAAkC,IAQlC,6KAAqD,iDA7C7B,yCAA4B,GAApD,YAAqD,EAA7B,SAA4B,GAqC/C,yCAA4B,GAAjC,YAAkC,EAA7B,SAA4B,GAQT,yCAA4B,GAApD,YAAqD,EAA7B,SAA4B;;;;;;;;;sDC3ChD,sPAA4E,YAAzB;;wBAAwB;MAA3E,0TAA4E,MACxE,+KAAe,oCAAa,iCADhC,sKAA4E,GACzD,kEAAa;sDAJpC,gQAA8B,IAG1B,sMAA4E,iDAAzE,mBAAgC,aAAnC,YAA4E,EAAzE,SAAgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yDCF/B,qGAAkD,KAC9C,uFAAuB,wDAAlB,mBAAiB,YAAtB,YAAuB,EAAlB,SAAiB;yDAG1B,2EAAiC,0JAAmB;yDAGhD,sMAA8C,oCAAW,yDAAzD,0DAA8C,uDAAW;yDAKrD,oMACqI,wDAC3G,iCAF1B,0DACqI;yDAIzI,gMAAsG,4DACxE,iCAD9B,0DAAsG;yDAMlG,qMAC8I,2DACjH,iCAF7B,0DAC8I;yDAMlJ,sWAAwE,iCAAmB,2BAAnC,yBAAe,EAAvE,YAAwE,EAAhB,SAAe,mDAAvE,2JAAwE,+DAAmB;yDAC3F,sWAAwE,mCAAK,2BAArB,yBAAe,EAAvE,YAAwE,EAAhB,SAAe,2BAAvE,2JAAwE;yDAKpE,8HACuB,YAAnB;;wBAAkB;MADtB,wBACuB,4KAAqC;0DAE5D,8HACgE,YAA5D;;wBAA2D;MAD/D,wBACgE,4KAAqC;0DAErG,sFACmD,qCAAqC,yDAApF,mBAA8C,mCADlD,YACmD,EAA/C,SAA8C,GAAC,8EAAqC;0DAExF,8HACuB,YAAnB;;wBAAkB;MADtB,wBACuB,yCAAO;0DAE9B,8HAC+B,YAA3B;;wBAA0B;MAD9B,wBAC+B,4KAAqC;0DAEpE,8HACgE,YAA5D;;wBAA2D;MAD/D,wBACgE,4KAAqC;0DAErG,sFAC8C,qCAAqC,yDAA/E,mBAAyC,mCAD7C,YAC8C,EAA1C,SAAyC,GAAC,8EAAqC;0DAGnF,8HAC+B,YAA3B;;wBAA0B;MAD9B,wBAC+B,iDAAe;sGA9D9D,kGAAsB,KAElB,sQAAuB,IACnB,2KAAkD,IAIlD,2KAAiC,IAEjC;;;;;wBAAkG;MAA1C;;wBAA8B;MAAtF,wZAAkG,IAC9F,+KAA8C,IAE9C,8jDAAgB,MACZ;;;;;;;;;;;;;;;;;;;;wBACqC;MAAjC;;wBAAgC;MADpC,m8BACqC,KACrC,4KACqI,IAIzI,+KAAsG,IAGtG,skDAAgB,MACZ;;;;;;;;;;;;;;;;;;;;wBACwC;MAApC;;wBAAmC;MADvC,q8BACwC,KACxC,4KAC8I,IAMlJ,+KAAwE,IACxE,+KAAwE,IAIxE,wGAA2B,KACvB,+KACuB,IAEvB,gLACgE,IAEhE,gLACmD,IAEnD,gLACuB,IAEvB,gLAC+B,IAE/B,gLACgE,IAEhE,gLAC8C,IAG9C,gLAC+B,iDA3Db,oCAAuB,GAAjD,YAAkD,EAAxB,SAAuB,GAI7C,yCAA4B,GAAhC,YAAiC,EAA7B,SAA4B,GAEA,oBAAuB,YAAvD,aAAkG,EAAlE,UAAuB,GAC1B,mCAAoB,GAA7C,aAA8C,EAArB,UAAoB,GAGO,wBAAuB,EAAvE,aACqC,EADW,UAAuB,GAA3C,wBAAmB,EAA/B,uBAAW,EAA3B,aACqC,EADT,UAAmB,EAA/B,UAAW,GAGvB,+IAAgI,YADpI,aACqI,EAAjI,UAAgI,GAI7H,2FAA0F,oBAArG,aAAsG,EAA3F,UAA0F,GAI1C,2BAA0B,EAAjF,aACwC,EADe,UAA0B,GAAjE,2BAAsB,EAAC,2BAAe,EAAtD,aACwC,EADxB,UAAsB,EAAC,UAAe,GAGlD,wJAAyI,YAD7I,aAC8I,EAA1I,UAAyI,GAMvH,2CAA6B,GAAvD,aAAwE,EAA9C,UAA6B,GAC7B,2CAA6B,GAAvD,aAAwE,EAA9C,UAA6B,GAKhD,iKAAkI,IAArI,aACuB,EADpB,UAAkI,GAGlI,6JAA6H,IAAhI,aACgE,EAD7D,WAA6H,GAG7H,+MAAsK,IAAzK,aACmD,EADhD,WAAsK,GAGtK,gHAAwF,IAA3F,aACuB,EADpB,WAAwF,GAGxF,kKAAiI,IAApI,aAC+B,EAD5B,WAAiI,GAGjI,6JAA6H,IAAhI,aACgE,EAD7D,WAA6H,GAG7H,4JAA2H,IAA9H,aAC8C,EAD3C,WAA2H,GAI3H,gHAAwF,IAA3F,aAC+B,EAD5B,WAAwF,2BA3DvG,6FAAuB,GAOnB,waAAkG,GAG9F,k/CAAgB,IACZ,o/BACqC,IASzC,k/CAAgB,IACZ,o/BACwC;;;;;;;;;6CCpBlD,qGAAmD,KAC/C,uFAAwB,wDAAlB,mBAAiB,YAAvB,YAAwB,EAAlB,SAAiB;6CAG7B,2EAAiC,0JAAmB;6CAMlD,sMAA+C,oCAAW,yDAA1D,0DAA+C,uDAAW;6CAGxD,oMACkJ,mEAC/G,iCAFnC,0DACkJ;6CAOlJ,qMAC+I,kEAC7G,iCAFlC,0DAC+I;6CAM/I,qMACsI,8DACxG,iCAF9B,0DACsI;6CAEtI,qMAAwG,mDAC7F,iCADX,0DAAwG;6CAQxG,qMAC+I,iEAC9G,iCAFjC,0DAC+I;6CAOjJ,sWAAwE,iCAAmB,2BAAnC,yBAAe,EAAvE,YAAwE,EAAhB,SAAe,mDAAvE,2JAAwE,+DAAmB;8CAC3F,sWAAwE,qCAAO,2BAAvB,yBAAe,EAAvE,YAAwE,EAAhB,SAAe,2BAAvE,2JAAwE;8CAKtE,8HAAoJ,YAAlB;;wBAAiB;MAAnJ,wBAAoJ,2KAAoC;8CAExL,sFAAqK,qCAAoC,yDAA7E,mBAAwC,kCAApK,YAAqK,EAAzC,SAAwC,GAAC,6EAAoC;8CAE/L,8HAAyL,YAA3D;;wBAA0D;MAAxL,wBAAyL,2KAAoC;8CAE5O,8HAA4G,YAAlB;;wBAAiB;MAA3G,wBAA4G,uCAAK;8CAEtG,8HAAgK,YAA3B;;wBAA0B;MAA/J,wBAAgK,4KAAqC;8CAEzM,8HAA6L,YAA5D;;wBAA2D;MAA5L,wBAA6L,4KAAqC;8CAElO,sFAAyK,qCAAqC,yDAA/E,mBAAyC,mCAAxK,YAAyK,EAA1C,SAAyC,GAAC,8EAAqC;8CAG9M,8HAAuH,YAA3B;;wBAA0B;MAAtH,wBAAuH,iDAAe;0FAzEhJ,mGAAsB,KAIpB,uQAAuB,IACnB,+JAAmD,IAIrD,+JAAiC,IAGjC;;;;;wBAAoG;MAA3C;;wBAA+B;MAAxF,wZAAoG,IAGlG,mKAA+C,IAC/C,8jDAAgB,MACd;;;;;;;;;;;;;;;;;;;;wBAAsH;MAArC;;wBAAoC;MAArH,m8BAAsH,KACtH,gKACkJ,IAKpJ,skDAAgB,MACd;;;;;;;;;;;;;;;;;;;;wBAAmH;MAApC;;wBAAmC;MAAlH,q8BAAmH,KACnH,gKAC+I,IAIjJ,skDAAgB,MACd;;;;;;;;;;;;;;;;;;;;wBAAyG;MAAjC;;wBAAgC;MAAxG,q8BAAyG,KACzG,gKACsI,IAEtI,gKAAwG,IAM1G,skDAAgB,MACd;;;;;;;;;;;;;;;;;;;;wBAAsH;MAApC;;wBAAmC;MAArH,q8BAAsH,KACtH,iKAC+I,IAOjJ,oKAAwE,IACxE,qKAAwE,IAIxE,yGAA2B,KACzB,qKAAoJ,IAEpJ,qKAAqK,IAE3J,qKAAyL,IAExM,qKAA4G,IAEjG,qKAAgK,IAEpK,qKAA6L,IAE7L,qKAAyK,IAGzK,qKAAuH,iDApEjG,oCAAuB,GAAjD,YAAmD,EAAzB,SAAuB,GAI/C,yCAA4B,GAAhC,YAAiC,EAA7B,SAA4B,GAGA,oBAAwB,aAAxD,aAAoG,EAApE,UAAwB,GAG7B,mCAAqB,GAA9C,aAA+C,EAAtB,UAAqB,GAES,4BAA2B,EAAhF,aAAsH,EAAjE,UAA2B,GAApD,6BAAwB,EAApC,uBAAW,EAA3B,aAAsH,EAA1F,UAAwB,EAApC,UAAW,GAEzB,8JAA+I,YADjJ,aACkJ,EAAhJ,UAA+I,GAM7F,2BAA0B,EAA9E,aAAmH,EAA/D,UAA0B,GAAlD,4BAAuB,EAAnC,uBAAW,EAA3B,aAAmH,EAAvF,UAAuB,EAAnC,UAAW,GAEzB,2JAA4I,YAD9I,aAC+I,EAA7I,UAA4I,GAK9F,yBAAuB,EAAvE,aAAyG,EAAzD,WAAuB,GAA3C,yBAAmB,EAA/B,wBAAW,EAA3B,aAAyG,EAA7E,WAAmB,EAA/B,WAAW,GAEzB,mJAAmI,YADrI,aACsI,EAApI,WAAmI,GAE1H,8FAA4F,oBAAvG,aAAwG,EAA7F,WAA4F,GAOhD,4BAA0B,EAAjF,aAAsH,EAA/D,WAA0B,GAAjE,4BAAsB,EAAC,4BAAe,EAAtD,aAAsH,EAAtG,WAAsB,EAAC,WAAe,GAEpD,4JAA4I,YAD9I,cAC+I,EAA7I,WAA4I,GAOtH,4CAA6B,GAAvD,cAAwE,EAA9C,WAA6B,GAC7B,4CAA6B,GAAvD,cAAwE,EAA9C,WAA6B,GAKlD,+JAA8H,IAAjI,cAAoJ,EAAjJ,WAA8H,GAE9H,yJAAwH,IAA3H,cAAqK,EAAlK,WAAwH,GAE9G,0JAA0H,IAA7H,cAAyL,EAAtL,WAA0H,GAEzI,8GAAsF,IAAzF,cAA4G,EAAzG,WAAsF,GAE3E,kKAAiI,IAApI,cAAgK,EAA7J,WAAiI,GAErI,6JAA6H,IAAhI,cAA6L,EAA1L,WAA6H,GAE7H,4JAA2H,IAA9H,cAAyK,EAAtK,WAA2H,GAG3H,gHAAwF,IAA3F,cAAuH,EAApH,WAAwF,2BArEnG,6FAAuB,GAQrB,waAAoG,GAIlG,k/CAAgB,IACd,o/BAAsH,IAOxH,k/CAAgB,IACd,o/BAAmH,IAMrH,shDAAgB,IACd,ohCAAyG,IAU3G,8hDAAgB,IACd,ohCAAsH;;;;;;;;;6CC1C9H,4GAA0D,KACxD,uIAAkE,wDAAjB,mBAAgB,WAAjE,YAAkE,EAAjB,SAAgB;6CAIjE,0EAAkC,oFAAkD;6CACpF,0EAAkC,qJAAc;6CANlD,kKAA0D,IAI1D,0MAAwB,IACtB,kKAAkC,IAClC,kKAAkC,IAGpC,0MAAwB,IACtB;;;mTAAyD,gCAAE,mDAV3B,mCAAsB,GAAxD,YAA0D,EAAxB,SAAsB,GAKnD,2CAA8B,GAAjC,YAAkC,EAA/B,SAA8B,GAC9B,2CAA8B,GAAjC,YAAkC,EAA/B,SAA8B,GAIjC,uTAAyD;;;;;;;;;6CCRrD,qGAAmD,KAC/C,uFAAwB,wDAAlB,mBAAiB,YAAvB,YAAwB,EAAlB,SAAiB;6CAG7B,2EAAiC,0JAAmB;6CAIxD,sMAA8C,oCAAW,yDAAzD,0DAA8C,uDAAW;6CAIjD,oMAC8J,wDACtI,iCAFxB,0DAC8J;6CAE9J,oMAC+G,4DAClF,iCAF7B,0DAC+G;6CAGvH,sWAAwE,iCAAmB,2BAAnC,yBAAe,EAAvE,YAAwE,EAAhB,SAAe,mDAAvE,2JAAwE,+DAAmB;6CAC/E,sWAAwE,mCAAK,2BAArB,yBAAe,EAAvE,YAAwE,EAAhB,SAAe,2BAAvE,2JAAwE;6CAE9E,8HAAoJ,YAAlB;;wBAAiB;MAAnJ,wBAAoJ,2KAAoC;6CAExL,sFAAqK,qCAAoC,yDAA7E,mBAAwC,kCAApK,YAAqK,EAAzC,SAAwC,GAAC,6EAAoC;8CAE/L,8HAAyL,YAA3D;;wBAA0D;MAAxL,wBAAyL,2KAAoC;8CAE5O,8HAA4G,YAAlB;;wBAAiB;MAA3G,wBAA4G,uCAAK;8CAEhH,8HAAwJ,YAAnB;;wBAAkB;MAAvJ,wBAAwJ,4KAAqC;8CAE/K,8HAA6L,YAA5D;;wBAA2D;MAA5L,wBAA6L,4KAAqC;8CAElO,sFAAyK,qCAAqC,yDAA/E,mBAAyC,mCAAxK,YAAyK,EAA1C,SAAyC,GAAC,8EAAqC;8CAG9M,8HAA+G,YAAnB;;wBAAkB;MAA9G,wBAA+G,yCAAO;0FAxCtI,kGAAsB,KAEpB,sQAAuB,IACnB,+JAAmD,IAIrD,+JAAiC,IAGjC;;;;;wBAAgH;MAA/C;;wBAAmC;MAApG,wZAAgH,IACpH,mKAA8C,IAExC,8jDAAgB,MACd;;;;;;;;;;;;;;;;;;;;wBAA0G;MAAjC;;wBAAgC;MAAzG,m8BAA0G,KAC1G,gKAC8J,IAE9J,gKAC+G,IAGvH,mKAAwE,IAC5D,mKAAwE,IAC9E,wGAA2B,KAC3B,mKAAoJ,IAEpJ,mKAAqK,IAE3J,oKAAyL,IAExM,oKAA4G,IAE3G,oKAAwJ,IAE1I,oKAA6L,IAE7L,oKAAyK,IAGzK,oKAA+G,iDArC/F,oCAAuB,GAAjD,YAAmD,EAAzB,SAAuB,GAI/C,yCAA4B,GAAhC,YAAiC,EAA7B,SAA4B,GAGA,oBAAgC,qBAAhE,aAAgH,EAAhF,UAAgC,GAC3C,mCAAoB,GAA7C,aAA8C,EAArB,UAAoB,GAGY,wBAAuB,EAAxE,aAA0G,EAAzD,UAAuB,GAA5C,wBAAmB,EAA/B,uBAAW,EAA3B,aAA0G,EAA9E,UAAmB,EAA/B,UAAW,GAEzB,0KAA2J,YAD7J,aAC8J,EAA5J,UAA2J,GAG3J,6GAA4G,oBAD9G,aAC+G,EAA7G,UAA4G,GAG5F,2CAA6B,GAAvD,aAAwE,EAA9C,UAA6B,GACjB,2CAA6B,GAAvD,aAAwE,EAA9C,UAA6B,GAE1D,8JAA8H,IAAjI,aAAoJ,EAAjJ,UAA8H,GAE9H,wJAAwH,IAA3H,aAAqK,EAAlK,UAAwH,GAE9G,yJAA0H,IAA7H,aAAyL,EAAtL,UAA0H,GAEzI,6GAAsF,IAAzF,aAA4G,EAAzG,UAAsF,GAErF,iKAAiI,IAApI,aAAwJ,EAArJ,UAAiI,GAEnH,4JAA6H,IAAhI,aAA6L,EAA1L,UAA6H,GAE7H,2JAA2H,IAA9H,aAAyK,EAAtK,UAA2H,GAG3H,+GAAwF,IAA3F,aAA+G,EAA5G,UAAwF,2BAtCzG,6FAAuB,GAQrB,waAAgH,GAG9G,k/CAAgB,IACd,o/BAA0G;;;;;;;;;6CCdlH,iGAAsB,8EAEpB;;;;;;;;;6CCCI,qGAAmD,KAC/C,uFAAwB,wDAAlB,mBAAiB,YAAvB,YAAwB,EAAlB,SAAiB;6CAG7B,2EAAqC,8JAAuB;6CAIhE,sMAA8C,oCAAW,yDAAzD,0DAA8C,uDAAW;6CAKjD,oMACoK,iEACnI,iCAFjC,0DACoK;6CAOpK,qMACyL,yEAChJ,iCAFzC,0DACyL;6CAGzL,qMAAiI,yDAAwB,iCAAzJ,0DAAiI;0FA5BzI,kGAAsB,KAEpB,sQAAuB,IACnB,+JAAmD,IAIrD,+JAAqC,IAGrC;;;;;wBAA8G;MAA9C;;wBAAkC;MAAlG,wZAA8G,IAClH,mKAA8C,IAExC,8jDAAgB,MACd;;;;;;;;;;;;;;;;;;;;wBACoC;MAApC;;wBAAmC;MADnC,m8BACoC,KACpC,gKACoK,IAKtK,skDAAgB,MACd;;;;;;;;;;;;;;;;;;;;wBAAiJ;MAA3C;;wBAA0C;MAAhJ,q8BAAiJ,KACjJ,gKACyL,IAGzL,gKAAiI,IAGnI,wWAA0C,6CAAe,mDA5B/B,oCAAuB,GAAjD,YAAmD,EAAzB,SAAuB,GAI/C,6CAAgC,GAApC,YAAqC,EAAjC,SAAgC,GAGJ,oBAA+B,oBAA/D,aAA8G,EAA9E,UAA+B,GAC1C,mCAAoB,GAA7C,aAA8C,EAArB,UAAoB,GAG4B,2BAA0B,EAA3F,aACoC,EAD6B,UAA0B,GAA3E,qCAAgC,EAAC,2BAAe,EAAhE,aACoC,EADpB,UAAgC,EAAC,UAAe,GAG9D,gLAAiK,YADnK,aACoK,EAAlK,UAAiK,GAM/F,kCAAiC,EAArG,aAAiJ,EAA7E,UAAiC,GAArF,uCAAkC,EAAC,2BAAe,EAAlE,aAAiJ,EAAjI,UAAkC,EAAC,UAAe,GAEhE,qMAAsL,YADxL,aACyL,EAAvL,UAAsL,GAG7K,8HAAqH,YAAhI,aAAiI,EAAtH,UAAqH,GAGxG,0BAAe,EAAzC,aAA0C,EAAhB,UAAe,2BA7B7C,6FAAuB,GAQrB,waAA8G,GAG5G,k/CAAgB,IACd,o/BACoC,IAOtC,k/CAAgB,IACd,o/BAAiJ,IAQnJ,kKAA0C;;;;;;;;;6CC/BhD,0DAA6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uDCA7B,0GAA+C,KAC3C,2fAA0B,yBAAb,sBAAY,EAAzB,YAA0B,EAAb,SAAY,2BAAzB,+KAA0B;uDAG9B,6SAAkC;uDAJlC,4KAA+C,IAI/C,4KAAkC,IAElC,oJAA+C,YAAhC;;wBAA+B;MAA9C,6NAA+C,mDAN1C,mBAAe,UAApB,YAA+C,EAA1C,SAAe,GAIH,oBAAgB,UAAjC,YAAkC,EAAjB,SAAgB,GAEjC,YAA+C;;;;;;;;;;;;;;;;;;;;ACJ/C,+EAOyB;AAEzB,MAKa,YAAY;IAMvB,YAAoB,aAA4B,EAAU,MAAc;QAApD,kBAAa,GAAb,aAAa,CAAe;QAAU,WAAM,GAAN,MAAM,CAAQ;QAJxE,UAAK,GAAG,aAAa,CAAC;QACf,YAAO,GAAY,KAAK,CAAC;QACzB,iBAAY,GAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,aAAa,EAAE,CAAC;QAGrE,kCAAkC;QAClC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,KAAY,EAAE,EAAE;YAC5C,QAAQ,IAAI,EAAE;gBACZ,KAAK,KAAK,YAAY,wBAAe,CAAC,CAAC;oBACrC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;oBACpB,MAAM;iBACP;gBAED,KAAK,KAAK,YAAY,sBAAa,CAAC;gBACpC,KAAK,KAAK,YAAY,yBAAgB,CAAC;gBACvC,KAAK,KAAK,YAAY,wBAAe,CAAC,CAAC;oBACrC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACrB,MAAM;iBACP;gBACD,OAAO,CAAC,CAAC;oBACP,MAAM;iBACP;aACF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wCAAwC;IAExC,UAAU,CAAC,KAAK;QACd,MAAM,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;IACvB,CAAC;CAIA;AAzCD,oCAyCC;;;;;;;;;;;;;;;AC1BD,uFAAqE;AAkFrE,MAyGa,SAAS;IAEpB,YAAmB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QACjC,yEAAyE;QACzE,wBAAwB;QACxB,sBAAsB;QACtB,QAAQ;IACV,CAAC;CAEF;AAlHD,8BAkHC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvND,MASa,eAAe;CAAG;AAT/B,0CAS+B;;;;;;;;;;;;;;;ACJ/B,MAEa,cAAc;IAEvB,YAAmB,kBAAsC,EAAmB,IAAiB,EAAS,MAAqB,EAAS,MAAc,EAAS,WAA2B;QAAnK,uBAAkB,GAAlB,kBAAkB,CAAoB;QAAmB,SAAI,GAAJ,IAAI,CAAa;QAAS,WAAM,GAAN,MAAM,CAAe;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,gBAAW,GAAX,WAAW,CAAgB;IAAI,CAAC;IAE3L,gBAAgB;QACZ,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;QAC1B,IAAI,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC5B,IAAI,KAAK,GAAG,EAAE,CAAC;QACf,KAAK,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE;YAC7C,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;YAC9C,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;YAC5C,QAAQ,MAAM,CAAC,IAAI,CAAC,EAAE;gBAClB,KAAK,OAAO;oBACR,MAAM;gBACV,KAAK,MAAM;oBACP,MAAM;gBACV,KAAK,QAAQ;oBACT,MAAM;gBACV,KAAK,eAAe;oBAChB,MAAM;gBACV,KAAK,MAAM;oBACP,MAAM;gBACV,KAAK,KAAK;oBACN,KAAK,GAAG,KAAK,GAAG,eAAe,CAAC;oBAChC,MAAM;gBACV,KAAK,aAAa;oBACd,KAAK,GAAG,KAAK,GAAG,uBAAuB,CAAC;oBACxC,MAAM;gBACV,KAAK,iBAAiB;oBAClB,KAAK,GAAG,KAAK,GAAG,oBAAoB,CAAC;oBACrC,MAAM;gBACV,KAAK,MAAM;oBACP,KAAK,GAAG,KAAK,GAAG,kBAAkB,CAAC;oBACnC,IAAI,GAAG,MAAM,CAAC,MAAM;oBACpB,MAAM;gBACV;oBACI,KAAK,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC;oBAC5B,MAAM;aACb;SACJ;QAED,IAAI,QAAQ,GAAY,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QAEtD,IAAI,QAAQ,EAAE;YACV,IAAI,UAAU,GAAQ,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;YAC3C,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;YACnD,QAAQ,MAAM,CAAC,CAAC,CAAC,EAAE;gBACf,KAAK,eAAe;oBAChB,KAAK,GAAG,KAAK,GAAG,IAAI,GAAG,QAAQ,CAAC,UAAU,GAAG,gBAAgB,CAAC;oBAC9D,MAAM;gBACV;oBACI,KAAK,GAAG,KAAK,GAAG,IAAI,GAAG,QAAQ,CAAC,SAAS,GAAG,GAAG,GAAG,QAAQ,CAAC,QAAQ,GAAG,gBAAgB,CAAC;oBACvF,MAAM;aACb;SACJ;aAAM;YACH,KAAK,GAAG,2BAA2B,GAAG,KAAK,CAAC;SAC/C;QAED,mBAAmB;QACnB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAC1B,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE,yBAAyB,CAAC,CAAC;QAC9D,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,yBAAyB,CAAC,CAAC;QACxD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;QACvC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;IAChD,CAAC;IAED,SAAS,CAAC,GAAG;QACT,IAAI,QAAQ,GAAG,GAAG,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC5C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACtC,8FAA8F;YAC9F,8BAA8B;YAC9B,QAAQ,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;SAChF;QACD,oCAAoC;QACpC,OAAO,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC9B,CAAC;IAED,YAAY,CAAC,MAAM;QACf,IAAI,MAAM,GAAa,EAAE,CAAC;QAC1B,IAAI,UAAU,GAAS,gEAAgE,CAAC;QACxF,IAAI,gBAAgB,GAAG,UAAU,CAAC,MAAM,CAAC;QACzC,KAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAG;YAChC,MAAM,IAAI,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,gBAAgB,CAAC,CAAC,CAAC;SAC5E;QACD,OAAO,MAAM,CAAC;IACjB,CAAC;CAEL;AAzFD,wCAyFC;;;;;;;;;;;;;;;ACpGD,uFAO8B;AAC9B,uDAAkC;AAGlC,MACa,iBAAiB;IAG1B,YAAoB,aAAgC;QAAhC,kBAAa,GAAb,aAAa,CAAmB;QAF5C,aAAQ,GAAuB,EAAE,CAAC;IAEc,CAAC;IAEzD,aAAa,CAAC,GAAqB;QAC/B,MAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,IAAI,CAAC,EAAE;YACR,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAC9B;QACD,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAChE,CAAC;IAED,SAAS,CAAC,GAAqB,EAAE,IAAiB;QAE9C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAExB,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxC,OAAO,iBAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE;YAChC,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;iBAChC,SAAS,CACN,KAAK,CAAC,EAAE;gBACJ,IAAI,KAAK,YAAY,mBAAY,EAAE;oBAC/B,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;oBACxB,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBACxB;YACL,CAAC,EACD,GAAG,CAAC,EAAE;gBACF,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;gBAC7B,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;gBACxB,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACxB,CAAC,EACD,GAAG,EAAE;gBACD,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;gBACxB,QAAQ,CAAC,QAAQ,EAAE,CAAC;YACxB,CAAC,CAAC,CAAC;YACX,2CAA2C;YAC3C,OAAO,GAAG,EAAE;gBACR,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;gBACxB,YAAY,CAAC,WAAW,EAAE,CAAC;YAC/B,CAAC,CAAC;QACN,CAAC,CAAC,CAAC;IACP,CAAC;CACJ;AA5CD,8CA4CC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kEC/Be,mMAAyL,8DAA6B,iCAAtN,0DAAyL;kEAW3L,+LAA0K,6DAA4B,iCAAtM,0DAA0K;kEAUxK,oMAAmL,6DAA4B,iCAA/M,0DAAmL;kEASjL;;;;;;kPAA+E,mCAC/E,2BADyD,yEAAqB,GAA9E,YAA+E,EAAtB,SAAqB,2BAA9E,+bAA+E,6EAC/E;kEAGF,oMAAmL,iDAAgB,iCAAnM,0DAAmL;kEASjL;;;;;;kPAA4E,mCAC5E,2BADkD,6EAAyB,GAA3E,YAA4E,EAA1B,SAAyB,2BAA3E,+bAA4E,qEAC5E;kEAGF,oMAA6K,+CAAc,iCAA3L,0DAA6K;kEAY/K,+LAAgL,4DAA2B,iCAA3M,0DAAgL;kEAWhL,+LAA2M,sEAAqC,iCAAhP,0DAA2M;mEAqBzM,oMAAuK,gDAAe,iCAAtL,0DAAuK;mEAoBvK,oMAA6K,kDAAiB,iCAA9L,0DAA6K;mEAmB7K,qMAA8J,6CAAY,iCAA1K,0DAA8J;mEAmB5J,qMAAuK,gDAAe,iCAAtL,0DAAuK;mEAmBzK,qMAAoK,gDAAe,iCAAnL,0DAAoK;mEAmBpK,qMAAuK,iDAAgB,iCAAvL,0DAAuK;mEAmBvK,qMAA6K,mDAAkB,iCAA/L,0DAA6K;mEAmB7K,qMAA0K,kDAAiB,iCAA3L,0DAA0K;mEAmB1K,qMAA6K,mDAAkB,iCAA/L,0DAA6K;mEAmB7K,qMAA8J,6CAAY,iCAA1K,0DAA8J;mEAkB9J,qMAAuK,gDAAe,iCAAtL,0DAAuK;mEAmBvK,qMAAuK,mDAAkB,iCAAzL,0DAAuK;mEAmBvK,qMAAuK,gDAAe,iCAAtL,0DAAuK;mEAmBvK,qMAAuK,gDAAe,iCAAtL,0DAAuK;mEAmBvK,qMAAoK,kDAAiB,iCAArL,0DAAoK;mEAmBpK,qMAAoK,gDAAe,iCAAnL,0DAAoK;mEAmBpK,qMAAoK,+CAAc,iCAAlL,0DAAoK;mEAkBpK,qMAAuK,gDAAe,iCAAtL,0DAAuK;mEAmBvK,qMAAiK,8CAAa,iCAA9K,0DAAiK;mEAmBjK,qMAA+L,yDAAwB,iCAAvN,0DAA+L;mEAuBjM,qMAAsL,2EAA0C,iCAAhO,0DAAsL;+GAnfpM,sQAAkB,IAClB,iRAAgC,IAC9B,kMAAwC,sCAExC,MAEA,iGAAyB,KACvB,mGAAwB,KACtB;;;mLAAuC,GAApC,aAAmC,IAAC,8CAAiB,MAAI,yCAC9D,MAGF,2QAA2B,IACzB,yLAAkB,IAChB;;;;;wBAC0C;MAAxC;;wBAAuC;MADzC,yZAC0C,IAExC,+GAAiC,KAC/B,yGAA6B,uDAAqB,MAElD,kHAAoC,KAClC,0LAAkB,IAChB,+EAAO,8CAAY,MACnB,2jDAAgB,MACd;;;;;;;;;;;;;;;;;;;;wBAAmI;MAAxD;;wBAAuD;MAAlI,83BAAmI,KACnI,sLAAyL,IAI7L,0LAAkB,IAChB,+EAAO,gDAAc,MACrB,yGAA4B,KAC1B;;;;;;;;;;;;;;;;;;ozBAAuF,sCACvF;;;;;;;;;;;;;;;;;;ozBAAyF,wCAC3F,MAEA,yLAA0K,IAG5K,0LAAkB,IAChB,+EAAO,gDAAc,MACrB,mkDAAgB,MACd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;o0CAAqG,KACrG;;;gWAAmD,IACnD,yXAA2B,IAE3B,uLAAmL,IAIvL,4LAAkB,IAChB,gFAAO,oDAAkB,MACzB,qkDAAgB,MACd;;;;;;;;wBAAkJ;MAA/C;;wBAA8C;MAAjJ,iiCAAkJ,KAChJ;;;;;;iOAAY,6CAAe,MAC3B,qNAA+E,IAIjF,uLAAmL,IAIvL,4LAAkB,IAChB,gFAAO,6CAAW,MAClB,qkDAAgB,MACd;;;;;;;;;qgCAA+F,KAC7F;;;;;;iOAAY,2CAAa,MACzB,qNAA4E,IAI9E,uLAA6K,IAIjL,4LAAkB,IAChB,gFAAO,4CAAU,MACjB,qkDAAgB,MACd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;w0CAAyG,KACzG;;;gWAAwD,IACxD,8XAAgC,IAGlC,0LAAgL,IAGlL,4LAAkB,IAChB,gFAAO,iDAAe,MACtB,qkDAAgB,MACd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;w0CAA2H,KAC3H;;;gWAAiE,IACjE,uYAAyC,IAG3C,0LAA2M,IAKjN,6EAAI,KAEJ,iHAAiC,KAC/B,0GAA6B,qDAAmB,MAChD,gHAAgC,KAE9B,4LAAkB,IAChB,gFAAO,uCAAK,MACZ,qkDAAgB,MACd;;;;;;;;wBAAiJ;MAAhF;;wBAAiD;MAAlH,+/BAAiJ,KAC/I;;;;;;iOAAY,6CAAe,MAC3B;;;;;;oPAAsB,qCAAO,MAC7B;;;;;;oPAAsB,uCAAS,MAC/B;;;;;;oPAAsB,8CAAgB,MAGxC,wLAAuK,IAGzK,8kDAAiC,MAC/B;;;;;;;;;;;;;;;;;;;;;y6BAAuG,KACvG,+PAAwB,IAAC,iFAAQ,iDAAe,MAKpD,4LAAkB,IAChB,gFAAO,2CAAS,MAChB,qkDAAgB,MACd;;;;;;;;wBAAqJ;MAAlF;;wBAAmD;MAAtH,+/BAAqJ,KACnJ;;;;;;iOAAY,6CAAe,MAC3B;;;;;;oPAAsB,qCAAO,MAC7B;;;;;;oPAAsB,uCAAS,MAC/B;;;;;;oPAAsB,8CAAgB,MAGxC,wLAA6K,IAG/K,qlDAAiC,MAC/B;;;;;;;;;;;;;;;;;;;;;y6BAA2G,KAK/G,4LAAkB,IAChB,gFAAO,sCAAI,MACX,8kDAAgB,MACd;;;;;;;;wBAA2I;MAA7E;;wBAA8C;MAA5G,ogCAA2I,KACzI;;;;;;kOAAY,6CAAe,MAC3B;;;;;;qPAAsB,qCAAO,MAC7B;;;;;;qPAAsB,uCAAS,MAC/B;;;;;;qPAAsB,8CAAgB,MAGxC,wLAA8J,IAGhK,ulDAAiC,MAC/B;;;;;;;;;;;;;;;;;;;;;26BAAiG,KAKrG,4LAAkB,IAChB,gFAAO,wCAAM,mFAAI,8CAAY,MAC3B,8kDAAgB,MACd;;;;;;;;wBAAiJ;MAAhF;;wBAAiD;MAAlH,ogCAAiJ,KAC/I;;;;;;kOAAY,6CAAe,MAC3B;;;;;;qPAAsB,qCAAO,MAC7B;;;;;;qPAAsB,uCAAS,MAC/B;;;;;;qPAAsB,8CAAgB,MAGxC,wLAAuK,IAGzK,ulDAAiC,MAC/B;;;;;;;;;;;;;;;;;;;;;26BAAuG,KAK7G,4LAAkB,IAChB,gFAAO,wCAAM,mFAAI,6CAAW,MAC5B,8kDAAgB,MACd;;;;;;;;wBAA+I;MAA/E;;wBAAgD;MAAhH,ogCAA+I,KAC7I;;;;;;kOAAY,6CAAe,MAC3B;;;;;;qPAAsB,qCAAO,MAC7B;;;;;;qPAAsB,uCAAS,MAC/B;;;;;;qPAAsB,8CAAgB,MAGxC,wLAAoK,IAGtK,ulDAAiC,MAC/B;;;;;;;;;;;;;;;;;;;;;26BAAqG,KAKzG,4LAAkB,IAChB,gFAAO,0CAAQ,mFAAI,+CAAa,MAChC,8kDAAgB,MACd;;;;;;;;wBAAiJ;MAAhF;;wBAAiD;MAAlH,ogCAAiJ,KAC/I;;;;;;kOAAY,6CAAe,MAC3B;;;;;;qPAAsB,qCAAO,MAC7B;;;;;;qPAAsB,uCAAS,MAC/B;;;;;;qPAAsB,8CAAgB,MAGxC,wLAAuK,IAGzK,ulDAAiC,MAC/B;;;;;;;;;;;;;;;;;;;;;26BAAuG,KAK3G,4LAAkB,IAChB,gFAAO,4CAAU,mFAAI,mDAAiB,MACtC,8kDAAgB,MACd;;;;;;;;wBAAqJ;MAAlF;;wBAAmD;MAAtH,ogCAAqJ,KACnJ;;;;;;kOAAY,6CAAe,MAC3B;;;;;;qPAAsB,qCAAO,MAC7B;;;;;;qPAAsB,uCAAS,MAC/B;;;;;;qPAAsB,8CAAgB,MAGxC,wLAA6K,IAG/K,ulDAAiC,MAC/B;;;;;;;;;;;;;;;;;;;;;26BAA4G,KAKhH,4LAAkB,IAChB,gFAAO,2CAAS,MAChB,8kDAAgB,MACd;;;;;;;;wBAAmJ;MAAjF;;wBAAkD;MAApH,ogCAAmJ,KACjJ;;;;;;kOAAY,6CAAe,MAC3B;;;;;;qPAAsB,qCAAO,MAC7B;;;;;;qPAAsB,uCAAS,MAC/B;;;;;;qPAAsB,8CAAgB,MAGxC,wLAA0K,IAG5K,ulDAAiC,MAC/B;;;;;;;;;;;;;;;;;;;;;26BAAyG,KAK7G,4LAAkB,IAChB,gFAAO,4CAAU,mFAAI,kDAAgB,MACrC,8kDAAgB,MACd;;;;;;;;wBAAqJ;MAAlF;;wBAAmD;MAAtH,ogCAAqJ,KACnJ;;;;;;kOAAY,6CAAe,MAC3B;;;;;;qPAAsB,qCAAO,MAC7B;;;;;;qPAAsB,uCAAS,MAC/B;;;;;;qPAAsB,8CAAgB,MAGxC,wLAA6K,IAG/K,ulDAAiC,MAC/B;;;;;;;;;;;;;;;;;;;;;26BAA4G,KAKhH,4LAAkB,IAChB,gFAAO,sCAAI,MACX,8kDAAgB,MACd;;;;;;;;wBAA2I;MAA7E;;wBAA8C;MAA5G,ogCAA2I,KACzI;;;;;;kOAAY,6CAAe,MAC3B;;;;;;qPAAsB,qCAAO,MAC7B;;;;;;qPAAsB,uCAAS,MAC/B;;;;;;qPAAsB,8CAAgB,MAGxC,wLAA8J,IAGhK,ulDAAiC,MAC/B;;;;;;;;;;;;;;;;;;;;;26BAAuG,KAI3G,4LAAkB,IAChB,gFAAO,wCAAM,mFAAI,0CAAQ,MACzB,8kDAAgB,MACd;;;;;;;;wBAAiJ;MAAhF;;wBAAiD;MAAlH,ogCAAiJ,KAC/I;;;;;;kOAAY,6CAAe,MAC3B;;;;;;qPAAsB,qCAAO,MAC7B;;;;;;qPAAsB,uCAAS,MAC/B;;;;;;qPAAsB,8CAAgB,MAGxC,wLAAuK,IAGzK,ulDAAiC,MAC/B;;;;;;;;;;;;;;;;;;;;;26BAAuG,KAK3G,4LAAkB,IAChB,gFAAO,4CAAU,MACjB,8kDAAgB,MACd;;;;;;;;wBAAkJ;MAAjF;;wBAAkD;MAAnH,ogCAAkJ,KAChJ;;;;;;kOAAY,6CAAe,MAC3B;;;;;;qPAAsB,qCAAO,MAC7B;;;;;;qPAAsB,uCAAS,MAC/B;;;;;;qPAAsB,8CAAgB,MAGxC,wLAAuK,IAGzK,ulDAAiC,MAC/B;;;;;;;;;;;;;;;;;;;;;26BAAqG,KAKzG,4LAAkB,IAChB,gFAAO,yCAAO,MACd,8kDAAgB,MACd;;;;;;;;wBAAiJ;MAAhF;;wBAAiD;MAAlH,ogCAAiJ,KAC/I;;;;;;kOAAY,6CAAe,MAC3B;;;;;;qPAAsB,qCAAO,MAC7B;;;;;;qPAAsB,uCAAS,MAC/B;;;;;;qPAAsB,8CAAgB,MAGxC,wLAAuK,IAGzK,ulDAAiC,MAC/B;;;;;;;;;;;;;;;;;;;;;+6BAAuG,KAK3G,8LAAkB,IAChB,iFAAO,yCAAO,MACd,glDAAgB,MACd;;;;;;;;wBAAiJ;MAAhF;;wBAAiD;MAAlH,ugCAAiJ,KAC/I;;;;;;mOAAY,6CAAe,MAC3B;;;;;;sPAAsB,qCAAO,MAC7B;;;;;;sPAAsB,uCAAS,MAC/B;;;;;;sPAAsB,8CAAgB,MAGxC,yLAAuK,IAGzK,ylDAAiC,MAC/B;;;;;;;;;;;;;;;;;;;;;+6BAAuG,KAK3G,8LAAkB,IAChB,iFAAO,2CAAS,MAChB,glDAAgB,MACd;;;;;;;;wBAA+I;MAA/E;;wBAAgD;MAAhH,ugCAA+I,KAC7I;;;;;;mOAAY,6CAAe,MAC3B;;;;;;sPAAsB,qCAAO,MAC7B;;;;;;sPAAsB,uCAAS,MAC/B;;;;;;sPAAsB,8CAAgB,MAGxC,yLAAoK,IAGtK,ylDAAiC,MAC/B;;;;;;;;;;;;;;;;;;;;;+6BAAqG,KAKzG,8LAAkB,IAChB,iFAAO,yCAAO,MACd,glDAAgB,MACd;;;;;;;;wBAA+I;MAA/E;;wBAAgD;MAAhH,ugCAA+I,KAC7I;;;;;;mOAAY,6CAAe,MAC3B;;;;;;sPAAsB,qCAAO,MAC7B;;;;;;sPAAsB,uCAAS,MAC/B;;;;;;sPAAsB,8CAAgB,MAGxC,yLAAoK,IAGtK,ylDAAiC,MAC/B;;;;;;;;;;;;;;;;;;;;;+6BAAqG,KAKzG,8LAAkB,IAChB,iFAAO,uCAAK,MACZ,glDAAgB,MACd;;;;;;;;wBAA+I;MAA/E;;wBAAgD;MAAhH,ugCAA+I,KAC7I;;;;;;mOAAY,6CAAe,MAC3B;;;;;;sPAAsB,qCAAO,MAC7B;;;;;;sPAAsB,uCAAS,MAC/B;;;;;;sPAAsB,8CAAgB,MAGxC,yLAAoK,IAGtK,ylDAAiC,MAC/B;;;;;;;;;;;;;;;;;;;;;+6BAAqG,KAIzG,8LAAkB,IAChB,iFAAO,yCAAO,MACd,glDAAgB,MACd;;;;;;;;wBAAiJ;MAAhF;;wBAAiD;MAAlH,ugCAAiJ,KAC/I;;;;;;mOAAY,6CAAe,MAC3B;;;;;;sPAAsB,qCAAO,MAC7B;;;;;;sPAAsB,uCAAS,MAC/B;;;;;;sPAAsB,8CAAgB,MAGxC,yLAAuK,IAGzK,ylDAAiC,MAC/B;;;;;;;;;;;;;;;;;;;;;+6BAAuG,KAK3G,8LAAkB,IAChB,iFAAO,qCAAG,oFAAI,+DAA6B,MAC3C,glDAAgB,MACd;;;;;;;;wBAA6I;MAA9E;;wBAA+C;MAA9G,ugCAA6I,KAC3I;;;;;;mOAAY,6CAAe,MAC3B;;;;;;sPAAsB,qCAAO,MAC7B;;;;;;sPAAsB,uCAAS,MAC/B;;;;;;sPAAsB,8CAAgB,MAGxC,yLAAiK,IAGnK,ylDAAiC,MAC/B;;;;;;;;;;;;;;;;;;;;;+6BAAmG,KAKvG,8LAAkB,IAChB,iFAAO,gDAAc,oFAAI,iEAA+B,MACxD,glDAAgB,MACd;;;;;;;;wBAAiK;MAAxF;;wBAAyD;MAAlI,ugCAAiK,KAC/J;;;;;;mOAAY,6CAAe,MAC3B;;;;;;sPAAsB,qCAAO,MAC7B;;;;;;sPAAsB,uCAAS,MAC/B;;;;;;sPAAsB,8CAAgB,MAGxC,yLAA+L,IAGjM,ylDAAiC,MAC/B;;;;;;;;;;;;;;;;;;;;;+6BAAwH,KAOhI,8EAAI,KAEJ,gHAAiC,KAC/B,2GAA6B,kDAAgB,MAE7C,8EAAI,KAEJ,+GAAgC,KAC9B,iFAAO,4DAA0B,MACjC,mmDAA2C,MAEzC;;;;;;;;;;;;;;;;;;;;wBAAkK;MAAvD;;wBAAsD;MAAjK,y6BAAkK,KAClK,yLAAsL,IAI1L,wGAA0B,KACxB,qVAAqC,oCAAM,MAC3C,sVAAsC,sCAA2B,MAU7E,iOAAkB,iDAngBlB,YAAkB,GAQT,iDAAmC,GAAtC,aAAuC,EAApC,SAAmC,GAMkC,oBAAgC,qBAAxG,aAC0C,EAD8B,UAAgC,GAU9E,8DAA0D,GAA1E,aAAmI,EAAnH,UAA0D,GAA1E,aAAmI,GACxH,oLAA6K,oBAAxL,aAAyL,EAA9K,UAA6K,GAOpK,uBAAY,EAAhC,aAAuF,EAAnE,UAAY,GAAC,yDAAqD,GAAtF,aAAuF,EAAtD,UAAqD,GAClE,yBAAc,EAAlC,aAAyF,EAArE,UAAc,GAAC,yDAAqD,GAAxF,aAAyF,EAAtD,UAAqD,GAG/E,qKAA8J,oBAAzK,aAA0K,EAA/J,UAA8J,GAMvJ,iCAA2B,GAA3C,aAAqG,EAArF,WAA2B,GAAC,6DAAwD,GAApG,aAAqG,EAAzD,WAAwD,GAApG,aAAqG,GACpE,iCAAiB,GAAlD,cAAmD,EAAlB,WAAiB,GAGvC,+KAAuK,oBAAlL,cAAmL,EAAxK,WAAuK,GAOtK,6DAAwD,GAApE,cAAkJ,EAAtI,WAAwD,GAAC,mCAA6B,EAAlG,cAAkJ,EAA7E,WAA6B,GAEpF,qBAA4C,qBAAxD,cAA+E,EAAnE,WAA4C,GAI/C,+KAAuK,oBAAlL,cAAmL,EAAxK,WAAuK,GAOtK,2DAAsD,GAAlE,cAA+F,EAAnF,WAAsD,GAAC,iCAA2B,EAA9F,cAA+F,EAA5B,WAA2B,GAEhF,qBAAqC,mBAAjD,cAA4E,EAAhE,WAAqC,GAIxC,yKAAiK,oBAA5K,cAA6K,EAAlK,WAAiK,GAO5J,iCAAgC,GAAhD,cAAyG,EAAzF,WAAgC,GAAC,4DAAuD,GAAxG,cAAyG,EAAxD,WAAuD,GAAxG,cAAyG,GACxE,iCAAsB,GAAvD,cAAwD,EAAvB,WAAsB,GAI9C,4KAAoK,oBAA/K,cAAgL,EAArK,WAAoK,GAM7J,iCAAyC,GAAzD,cAA2H,EAA3G,WAAyC,GAAC,qEAAgE,GAA1H,cAA2H,EAAjE,WAAgE,GAA1H,cAA2H,GAC1F,iCAA+B,GAAhE,cAAiE,EAAhC,WAA+B,GAIvD,uMAA+L,oBAA1M,cAA2M,EAAhM,WAA+L,GAc5L,yDAAoD,GAAhE,cAAiJ,EAArI,WAAoD,GAAmD,mCAA6B,EAAhJ,cAAiJ,EAA9B,WAA6B,GAElI,qBAAS,EAArB,cAAsB,EAAV,WAAS,GACT,qBAAS,EAArB,cAAsB,EAAV,WAAS,GACT,qBAAS,EAArB,cAAsB,EAAV,WAAS,GAGZ,mKAA2J,oBAAtK,cAAuK,EAA5J,WAA2J,GAItJ,+DAA0D,GAA1E,cAAuG,EAAvF,WAA0D,GAAC,+BAAyB,EAApG,cAAuG,EAA5B,WAAyB,GAC1F,yBAAa,EAAvB,cAAwB,EAAd,WAAa,GAQX,2DAAsD,GAAlE,cAAqJ,EAAzI,WAAsD,GAAqD,mCAA6B,EAApJ,cAAqJ,EAA9B,WAA6B,GAEtI,qBAAS,EAArB,cAAsB,EAAV,WAAS,GACT,qBAAS,EAArB,cAAsB,EAAV,WAAS,GACT,qBAAS,EAArB,cAAsB,EAAV,WAAS,GAGZ,yKAAiK,oBAA5K,cAA6K,EAAlK,WAAiK,GAI5J,iEAA4D,GAA5E,cAA2G,EAA3F,WAA4D,GAAC,iCAA2B,EAAxG,cAA2G,EAA9B,WAA2B,GAQ5F,sDAAiD,GAA7D,cAA2I,EAA/H,WAAiD,GAAgD,mCAA6B,EAA1I,cAA2I,EAA9B,WAA6B,GAE5H,qBAAS,EAArB,cAAsB,EAAV,WAAS,GACT,qBAAS,EAArB,cAAsB,EAAV,WAAS,GACT,qBAAS,EAArB,cAAsB,EAAV,WAAS,GAGZ,0JAAkJ,oBAA7J,cAA8J,EAAnJ,WAAkJ,GAI7I,4DAAuD,GAAvE,cAAiG,EAAjF,WAAuD,GAAC,4BAAsB,EAA9F,cAAiG,EAAzB,WAAsB,GAQhF,yDAAoD,GAAhE,cAAiJ,EAArI,WAAoD,GAAmD,mCAA6B,EAAhJ,cAAiJ,EAA9B,WAA6B,GAElI,qBAAS,EAArB,cAAsB,EAAV,WAAS,GACT,qBAAS,EAArB,cAAsB,EAAV,WAAS,GACT,qBAAS,EAArB,cAAsB,EAAV,WAAS,GAGZ,mKAA2J,oBAAtK,cAAuK,EAA5J,WAA2J,GAItJ,+DAA0D,GAA1E,cAAuG,EAAvF,WAA0D,GAAC,+BAAyB,EAApG,cAAuG,EAA5B,WAAyB,GAQ1F,wDAAmD,GAA/D,cAA+I,EAAnI,WAAmD,GAAkD,mCAA6B,EAA9I,cAA+I,EAA9B,WAA6B,GAEhI,qBAAS,EAArB,cAAsB,EAAV,WAAS,GACT,qBAAS,EAArB,cAAsB,EAAV,WAAS,GACT,qBAAS,EAArB,cAAsB,EAAV,WAAS,GAGZ,gKAAwJ,oBAAnK,cAAoK,EAAzJ,WAAwJ,GAInJ,8DAAyD,GAAzE,cAAqG,EAArF,WAAyD,GAAC,8BAAwB,EAAlG,cAAqG,EAA3B,WAAwB,GAQtF,yDAAoD,GAAhE,cAAiJ,EAArI,WAAoD,GAAmD,mCAA6B,EAAhJ,cAAiJ,EAA9B,WAA6B,GAElI,sBAAS,EAArB,cAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,cAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,cAAsB,EAAV,YAAS,GAGZ,oKAA2J,oBAAtK,cAAuK,EAA5J,YAA2J,GAItJ,gEAA0D,GAA1E,cAAuG,EAAvF,YAA0D,GAAC,gCAAyB,EAApG,cAAuG,EAA5B,YAAyB,GAQxF,4DAAsD,GAAlE,cAAqJ,EAAzI,YAAsD,GAAqD,oCAA6B,EAApJ,cAAqJ,EAA9B,YAA6B,GAEtI,sBAAS,EAArB,cAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,cAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,cAAsB,EAAV,YAAS,GAGZ,0KAAiK,oBAA5K,cAA6K,EAAlK,YAAiK,GAI5J,kEAA4D,GAA5E,cAA4G,EAA5F,YAA4D,GAAC,mCAA4B,EAAzG,cAA4G,EAA/B,YAA4B,GAQ7F,2DAAqD,GAAjE,cAAmJ,EAAvI,YAAqD,GAAoD,oCAA6B,EAAlJ,cAAmJ,EAA9B,YAA6B,GAEpI,sBAAS,EAArB,cAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,cAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,cAAsB,EAAV,YAAS,GAGZ,uKAA8J,oBAAzK,cAA0K,EAA/J,YAA8J,GAIzJ,iEAA2D,GAA3E,cAAyG,EAAzF,YAA2D,GAAC,iCAA0B,EAAtG,cAAyG,EAA7B,YAA0B,GAQ1F,4DAAsD,GAAlE,cAAqJ,EAAzI,YAAsD,GAAqD,oCAA6B,EAApJ,cAAqJ,EAA9B,YAA6B,GAEtI,sBAAS,EAArB,cAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,cAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,cAAsB,EAAV,YAAS,GAGZ,0KAAiK,oBAA5K,cAA6K,EAAlK,YAAiK,GAI5J,kEAA4D,GAA5E,cAA4G,EAA5F,YAA4D,GAAC,mCAA4B,EAAzG,cAA4G,EAA/B,YAA4B,GAQ7F,uDAAiD,GAA7D,cAA2I,EAA/H,YAAiD,GAAgD,oCAA6B,EAA1I,cAA2I,EAA9B,YAA6B,GAE5H,sBAAS,EAArB,cAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,cAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,cAAsB,EAAV,YAAS,GAGZ,2JAAkJ,oBAA7J,cAA8J,EAAnJ,YAAkJ,GAI7I,6DAAuD,GAAvE,cAAuG,EAAvF,YAAuD,GAAC,mCAA4B,EAApG,cAAuG,EAA/B,YAA4B,GAOxF,0DAAoD,GAAhE,cAAiJ,EAArI,YAAoD,GAAmD,oCAA6B,EAAhJ,cAAiJ,EAA9B,YAA6B,GAElI,sBAAS,EAArB,cAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,cAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,cAAsB,EAAV,YAAS,GAGZ,oKAA2J,oBAAtK,cAAuK,EAA5J,YAA2J,GAItJ,gEAA0D,GAA1E,cAAuG,EAAvF,YAA0D,GAAC,gCAAyB,EAApG,cAAuG,EAA5B,YAAyB,GAQxF,0DAAoD,GAAhE,cAAkJ,EAAtI,YAAoD,GAAoD,oCAA6B,EAAjJ,cAAkJ,EAA9B,YAA6B,GAEnI,sBAAS,EAArB,cAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,cAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,cAAsB,EAAV,YAAS,GAGZ,oKAA2J,oBAAtK,cAAuK,EAA5J,YAA2J,GAItJ,gEAA0D,GAA1E,cAAqG,EAArF,YAA0D,GAAC,gCAAyB,EAApG,cAAqG,EAA1B,YAAyB,GAQxF,0DAAoD,GAAhE,cAAiJ,EAArI,YAAoD,GAAmD,oCAA6B,EAAhJ,cAAiJ,EAA9B,YAA6B,GAElI,sBAAS,EAArB,cAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,cAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,cAAsB,EAAV,YAAS,GAGZ,oKAA2J,oBAAtK,cAAuK,EAA5J,YAA2J,GAItJ,gEAA0D,GAA1E,eAAuG,EAAvF,YAA0D,GAAC,gCAAyB,EAApG,eAAuG,EAA5B,YAAyB,GAQxF,0DAAoD,GAAhE,eAAiJ,EAArI,YAAoD,GAAmD,oCAA6B,EAAhJ,eAAiJ,EAA9B,YAA6B,GAElI,sBAAS,EAArB,eAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,eAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,eAAsB,EAAV,YAAS,GAGZ,oKAA2J,oBAAtK,eAAuK,EAA5J,YAA2J,GAItJ,gEAA0D,GAA1E,eAAuG,EAAvF,YAA0D,GAAC,gCAAyB,EAApG,eAAuG,EAA5B,YAAyB,GAQxF,yDAAmD,GAA/D,eAA+I,EAAnI,YAAmD,GAAkD,oCAA6B,EAA9I,eAA+I,EAA9B,YAA6B,GAEhI,sBAAS,EAArB,eAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,eAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,eAAsB,EAAV,YAAS,GAGZ,iKAAwJ,oBAAnK,eAAoK,EAAzJ,YAAwJ,GAInJ,+DAAyD,GAAzE,eAAqG,EAArF,YAAyD,GAAC,+BAAwB,EAAlG,eAAqG,EAA3B,YAAwB,GAQtF,yDAAmD,GAA/D,eAA+I,EAAnI,YAAmD,GAAkD,oCAA6B,EAA9I,eAA+I,EAA9B,YAA6B,GAEhI,sBAAS,EAArB,eAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,eAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,eAAsB,EAAV,YAAS,GAGZ,iKAAwJ,oBAAnK,eAAoK,EAAzJ,YAAwJ,GAInJ,+DAAyD,GAAzE,eAAqG,EAArF,YAAyD,GAAC,+BAAwB,EAAlG,eAAqG,EAA3B,YAAwB,GAQtF,yDAAmD,GAA/D,eAA+I,EAAnI,YAAmD,GAAkD,oCAA6B,EAA9I,eAA+I,EAA9B,YAA6B,GAEhI,sBAAS,EAArB,eAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,eAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,eAAsB,EAAV,YAAS,GAGZ,iKAAwJ,oBAAnK,eAAoK,EAAzJ,YAAwJ,GAInJ,+DAAyD,GAAzE,eAAqG,EAArF,YAAyD,GAAC,+BAAwB,EAAlG,eAAqG,EAA3B,YAAwB,GAOtF,0DAAoD,GAAhE,eAAiJ,EAArI,YAAoD,GAAmD,oCAA6B,EAAhJ,eAAiJ,EAA9B,YAA6B,GAElI,sBAAS,EAArB,eAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,eAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,eAAsB,EAAV,YAAS,GAGZ,oKAA2J,oBAAtK,eAAuK,EAA5J,YAA2J,GAItJ,gEAA0D,GAA1E,eAAuG,EAAvF,YAA0D,GAAC,gCAAyB,EAApG,eAAuG,EAA5B,YAAyB,GAQxF,wDAAkD,GAA9D,eAA6I,EAAjI,YAAkD,GAAiD,oCAA6B,EAA5I,eAA6I,EAA9B,YAA6B,GAE9H,sBAAS,EAArB,eAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,eAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,eAAsB,EAAV,YAAS,GAGZ,8JAAqJ,oBAAhK,eAAiK,EAAtJ,YAAqJ,GAIhJ,8DAAwD,GAAxE,eAAmG,EAAnF,YAAwD,GAAC,8BAAuB,EAAhG,eAAmG,EAA1B,YAAuB,GAQpF,kEAA4D,GAAxE,eAAiK,EAArJ,YAA4D,GAA2D,oCAA6B,EAAhK,eAAiK,EAA9B,YAA6B,GAElJ,sBAAS,EAArB,eAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,eAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,eAAsB,EAAV,YAAS,GAGZ,4LAAmL,oBAA9L,eAA+L,EAApL,YAAmL,GAI9K,wEAAkE,GAAlF,eAAwH,EAAxG,YAAkE,GAAC,yCAAkC,EAArH,eAAwH,EAArC,YAAkC,GAkBtE,+DAAyD,GAA1G,eAAkK,EAAjH,YAAyD,GAAvF,oCAA6B,EAAhD,eAAkK,EAA/I,YAA6B,GACrC,mLAA0K,oBAArL,eAAsL,EAA3K,YAA0K,GAgBnM,eAAkB,mDAlgBlB,6FAAgC,GACU,4DAExC,GAII,iHAAuC,GAAqB,0DAC9D,GAGF,+FAA2B,GAEvB,ibAC0C,GAQlC,k/CAAgB,IACd,o/BAAmI,IAQnI,ubAAuF,GACvF,ubAAyF,GAQ3F,k/CAAgB,IACd,ojDAAqG,IACrG,4XAAmD,GASrD,qjDAAgB,IACd,o6CAAkJ,IAChJ,ifAAY,GAWhB,qjDAAgB,IACd,o6CAA+F,IAC7F,ifAAY,GAWhB,qjDAAgB,IACd,klDAAyG,IACzG,4XAAwD,GAS1D,qjDAAgB,IACd,klDAA2H,IAC3H,4XAAiE,GAiBnE,qjDAAgB,IACd,o6CAAiJ,IAC/I,ifAAY,GACZ,ifAAsB,GACtB,ifAAsB,GACtB,ifAAsB,GAM1B,qjDAAiC,IAC/B,siCAAuG,IACvG,yKAAwB,GAO1B,qjDAAgB,IACd,o6CAAqJ,IACnJ,ifAAY,GACZ,ifAAsB,GACtB,ifAAsB,GACtB,ifAAsB,GAM1B,qjDAAiC,IAC/B,siCAA2G,IAO7G,qjDAAgB,IACd,o6CAA2I,IACzI,ifAAY,GACZ,ifAAsB,GACtB,ifAAsB,GACtB,ifAAsB,GAM1B,qjDAAiC,IAC/B,siCAAiG,IAOjG,qjDAAgB,IACd,o6CAAiJ,IAC/I,ifAAY,GACZ,ifAAsB,GACtB,ifAAsB,GACtB,ifAAsB,GAM1B,qjDAAiC,IAC/B,siCAAuG,IAO3G,qjDAAgB,IACd,o6CAA+I,IAC7I,ifAAY,GACZ,ifAAsB,GACtB,ifAAsB,GACtB,ifAAsB,GAM1B,qjDAAiC,IAC/B,siCAAqG,IAOvG,qjDAAgB,IACd,o6CAAiJ,IAC/I,+fAAY,GACZ,igBAAsB,GACtB,igBAAsB,GACtB,igBAAsB,GAM1B,imDAAiC,IAC/B,skCAAuG,IAOzG,imDAAgB,IACd,g9CAAqJ,IACnJ,igBAAY,GACZ,igBAAsB,GACtB,igBAAsB,GACtB,igBAAsB,GAM1B,imDAAiC,IAC/B,skCAA4G,IAO9G,imDAAgB,IACd,g9CAAmJ,IACjJ,igBAAY,GACZ,igBAAsB,GACtB,igBAAsB,GACtB,igBAAsB,GAM1B,imDAAiC,IAC/B,skCAAyG,IAO3G,imDAAgB,IACd,g9CAAqJ,IACnJ,igBAAY,GACZ,igBAAsB,GACtB,igBAAsB,GACtB,igBAAsB,GAM1B,imDAAiC,IAC/B,skCAA4G,IAO9G,imDAAgB,IACd,g9CAA2I,IACzI,igBAAY,GACZ,igBAAsB,GACtB,igBAAsB,GACtB,igBAAsB,GAM1B,imDAAiC,IAC/B,skCAAuG,IAMzG,imDAAgB,IACd,g9CAAiJ,IAC/I,igBAAY,GACZ,igBAAsB,GACtB,igBAAsB,GACtB,igBAAsB,GAM1B,imDAAiC,IAC/B,skCAAuG,IAOzG,imDAAgB,IACd,g9CAAkJ,IAChJ,igBAAY,GACZ,igBAAsB,GACtB,igBAAsB,GACtB,igBAAsB,GAM1B,imDAAiC,IAC/B,skCAAqG,IAOvG,imDAAgB,IACd,g9CAAiJ,IAC/I,igBAAY,GACZ,igBAAsB,GACtB,igBAAsB,GACtB,igBAAsB,GAM1B,imDAAiC,IAC/B,wlCAAuG,IAOzG,wnDAAgB,IACd,w+CAAiJ,IAC/I,0gBAAY,GACZ,0gBAAsB,GACtB,0gBAAsB,GACtB,0gBAAsB,GAM1B,wnDAAiC,IAC/B,wlCAAuG,IAOzG,wnDAAgB,IACd,w+CAA+I,IAC7I,0gBAAY,GACZ,0gBAAsB,GACtB,0gBAAsB,GACtB,0gBAAsB,GAM1B,wnDAAiC,IAC/B,wlCAAqG,IAOvG,wnDAAgB,IACd,w+CAA+I,IAC7I,0gBAAY,GACZ,0gBAAsB,GACtB,0gBAAsB,GACtB,0gBAAsB,GAM1B,wnDAAiC,IAC/B,wlCAAqG,IAOvG,wnDAAgB,IACd,w+CAA+I,IAC7I,0gBAAY,GACZ,0gBAAsB,GACtB,0gBAAsB,GACtB,0gBAAsB,GAM1B,wnDAAiC,IAC/B,wlCAAqG,IAMvG,wnDAAgB,IACd,w+CAAiJ,IAC/I,0gBAAY,GACZ,0gBAAsB,GACtB,0gBAAsB,GACtB,0gBAAsB,GAM1B,wnDAAiC,IAC/B,wlCAAuG,IAOzG,wnDAAgB,IACd,w+CAA6I,IAC3I,0gBAAY,GACZ,0gBAAsB,GACtB,0gBAAsB,GACtB,0gBAAsB,GAM1B,wnDAAiC,IAC/B,wlCAAmG,IAOrG,wnDAAgB,IACd,w+CAAiK,IAC/J,0gBAAY,GACZ,0gBAAsB,GACtB,0gBAAsB,GACtB,0gBAAsB,GAM1B,wnDAAiC,IAC/B,wlCAAwH,IAgB5H,wnDAA2C,IAEzC,wlCAAkK,IAMpK,gLAAqC,GACrC,gLAAsC,4EAA2B;;;;;;;;;;;;;;;;;;;;ACzf7E,yEAAkF;AAClF,4EAAqG;AAMrG,qFAA6E;AAC7E,4KAAqF;AASrF,MAQa,uBAAuB;IAqBlC,YAAmB,EAAe,EAAS,WAA2B,EAC7D,MAAc,EAAS,WAA+B,EAAU,QAAkB,EAClF,MAAqB,EAAS,OAAqB,EAAS,MAAiB,EAC7E,cAA8B;QAHpB,OAAE,GAAF,EAAE,CAAa;QAAS,gBAAW,GAAX,WAAW,CAAgB;QAC7D,WAAM,GAAN,MAAM,CAAQ;QAAS,gBAAW,GAAX,WAAW,CAAoB;QAAU,aAAQ,GAAR,QAAQ,CAAU;QAClF,WAAM,GAAN,MAAM,CAAe;QAAS,YAAO,GAAP,OAAO,CAAc;QAAS,WAAM,GAAN,MAAM,CAAW;QAC7E,mBAAc,GAAd,cAAc,CAAgB;QApBhC,aAAQ,GAAQ;YACrB,GAAG,EAAE,aAAa;YAClB,MAAM,EAAC,qBAAqB;YAC5B,UAAU,EAAE,QAAQ;SACrB,CAAC;QAKF,YAAO,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/B,YAAO,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QAY7B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;QACvC,IAAI,CAAC,UAAU,CAAC,YAAY,GAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;QAEzE,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACtC,WAAW,EAAW,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3E,MAAM,EAAgB,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,SAAS,EAAa,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,SAAS,EAAa,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,OAAO,EAAe,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,QAAQ,EAAc,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,iBAAiB,EAAK,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YAEjD,KAAK,EAAiB,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,WAAW,EAAW,CAAC,EAAE,EAAE,EAAE,CAAC;YAC9B,OAAO,EAAe,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,aAAa,EAAS,CAAC,EAAE,EAAE,EAAE,CAAC;YAC9B,EAAE,EAAoB,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,QAAQ,EAAc,CAAC,EAAE,EAAE,EAAE,CAAC;YAC9B,KAAK,EAAiB,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,WAAW,EAAW,CAAC,EAAE,EAAE,EAAE,CAAC;YAC9B,IAAI,EAAkB,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,UAAU,EAAY,CAAC,EAAE,EAAE,EAAE,CAAC;YAC9B,KAAK,EAAiB,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,WAAW,EAAW,CAAC,EAAE,EAAE,EAAE,CAAC;YAC9B,OAAO,EAAe,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,aAAa,EAAS,CAAC,EAAE,EAAE,EAAE,CAAC;YAC9B,MAAM,EAAgB,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,YAAY,EAAU,CAAC,EAAE,EAAE,EAAE,CAAC;YAC9B,OAAO,EAAe,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,aAAa,EAAS,CAAC,EAAE,EAAE,EAAE,CAAC;YAC9B,EAAE,EAAoB,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,QAAQ,EAAc,CAAC,EAAE,EAAE,EAAE,CAAC;YAC9B,KAAK,EAAiB,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,WAAW,EAAW,CAAC,EAAE,EAAE,EAAE,CAAC;YAC9B,KAAK,EAAiB,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,WAAW,EAAW,CAAC,EAAE,EAAE,EAAE,CAAC;YAC9B,KAAK,EAAiB,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,WAAW,EAAW,CAAC,EAAE,EAAE,EAAE,CAAC;YAC9B,KAAK,EAAiB,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,WAAW,EAAW,CAAC,EAAE,EAAE,EAAE,CAAC;YAC9B,IAAI,EAAkB,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,UAAU,EAAY,CAAC,EAAE,EAAE,EAAE,CAAC;YAC9B,IAAI,EAAkB,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,UAAU,EAAY,CAAC,EAAE,EAAE,EAAE,CAAC;YAC9B,IAAI,EAAkB,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,UAAU,EAAY,CAAC,EAAE,EAAE,EAAE,CAAC;YAC9B,KAAK,EAAiB,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,WAAW,EAAW,CAAC,EAAE,EAAE,EAAE,CAAC;YAC9B,GAAG,EAAmB,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,SAAS,EAAa,CAAC,EAAE,EAAE,EAAE,CAAC;YAC9B,aAAa,EAAS,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,mBAAmB,EAAG,CAAC,EAAE,EAAE,EAAE,CAAC;YAE9B,UAAU,EAAY,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,cAAc,EAAQ,CAAC,EAAE,EAAE,EAAE,CAAC;YAC9B,eAAe,EAAO,CAAC,EAAE,EAAE,EAAE,CAAC;YAC9B,MAAM,EAAgB,CAAC,CAAC,EAAE,EAAE,CAAC;YAC7B,WAAW,EAAW,CAAC,SAAS,EAAE,EAAE,CAAC;YACrC,QAAQ,EAAc,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,GAAG,EAAE,EAAE,CAAC;SAC7D,CAAC,CAAC;IACL,CAAC;IAEH,QAAQ;IACR,CAAC;IAED,gBAAgB;QACd,IAAI,IAAI,GAAG;YACT,QAAQ,EAAE,wBAAwB;YAClC,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ;SAClC;QACD,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAClE,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,QAAQ,CAAC,GAAG,CAAC;QACzC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW,CAAC,QAAgB;QAC1B,IAAI,IAAI,GAAG;YACT,QAAQ,EAAE,mBAAmB;YAC7B,WAAW,EAAE;gBACT,YAAY,EAAE,QAAQ;aACzB;YACD,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ;SAClC;QACD,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;YACpE,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC;QACvC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wBAAwB;QACtB,IAAI,CAAM,CAAC;QACX,KAAK,CAAC,IAAI,IAAI,CAAC,kBAAkB,CAAC,QAAQ,EAAE;YAC1C,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,aAAa,EAAE,CAAC;SACrD;QAED,IAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE;YAChC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;YACzH,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;YACvH,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,iBAAiB,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,iBAAiB,EAAE,YAAY,CAAC,CAAC;YACzI,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;YAE/G,gDAAgD;YAChD,MAAM,aAAa,GAAG,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,mBAAmB,CAAC,KAAK,CAAC;YACjF,MAAM,iBAAiB,GAAG,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACnD,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;YACpF,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;YACrF,OAAO,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,mBAAmB,CAAC;YAEzD,IAAI,IAAI,GAAQ;gBACd,QAAQ,EAAG,oBAAoB;gBAC/B,MAAM,EAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK;gBACtC,WAAW,EAAE,CAAC,WAAW,EAAC,SAAS,CAAC;gBACpC,OAAO,EAAG,IAAI,CAAC,UAAU,CAAC,QAAQ;aACnC;YAED,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,iBAAiB,EAAC,IAAI,CAAC,CAAC,SAAS,CAAC,QAAQ,GAAE;gBACvE,IAAG,QAAQ,CAAC,MAAM,GAAC,SAAS,EAAC;oBAC3B,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;oBAC/B,gBAAgB;oBAChB,IAAI,IAAI,GAAQ;wBACd,KAAK,EAAE,OAAO;wBACd,IAAI,EAAE;4BACJ,MAAM,EAAE,SAAS;4BACjB,OAAO,EAAE,2BAA2B;4BACpC,OAAO,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;4BAC3B,OAAO,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE;yBAC9B;qBACF;oBACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;iBACvB;YACH,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;SACtC;IACH,CAAC;IAED,UAAU,CAAC,IAAI;QACb,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yCAAkB,EAAE,IAAI,CAAC,CAAC;QAC5D,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC9C,QAAO,MAAM,EAAE;gBACb,KAAK,QAAQ;oBACX,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC;oBAC7C,MAAM;gBACR,KAAK,UAAU;oBACb,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;oBAC/B,MAAM;aACT;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,YAAY,CAAC,IAAS,EAAE,GAAQ;QAC9B,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,eAAe,EAAE,CAAC;IACvC,CAAC;CAEF;AA5LD,0DA4LC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kECoIO,uPAAsC,sCAAK;kEAC3C,+NAAuD,sIAAa;kEAIpE,uPAAsC,gDAAe;kEACrD,+PAAiE,gJAA2B;kEAI5F,uPAAsC,6CAAY;kEAClD,+QAAqG,+BAArC,gFAAoC,GAApG,YAAqG,EAArC,SAAoC;kEAIpG,uPAAsC,6CAAY;kEAClD,8PAAgE,+IAA0B;kEAF5F,uaAAyF,KACvF,iOAAsC,KACtC,gNAAgE,0BAFpD,4BAAyB,EAAvC,YAAyF,EAA3E,SAAyB;mEAMrC,uPAAsC,6CAAY;mEAClD,8PAAgE,gJAA2B;mEAK3F,uPAAsC,sDAAqB;mEAC3D,uQAAyE,sOAAyC;mEAFpH,uaAAiG,KAC/F,kOAAsC,KACtC,iNAAyE,0BAF7D,oCAAiC,EAA/C,YAAiG,EAAnF,SAAiC;mEAM7C,uPAAsC,2CAAU;mEAChD,4PAA8D,6IAAwB;mEAItF,uPAAsC,+CAAc;mEACpD,iQAAmE,gOAAmC;mEAFxG,uaAA2F,KACzF,kOAAsC,KACtC,iNAAmE,0BAFvD,8BAA2B,EAAzC,YAA2F,EAA7E,SAA2B;mEAMvC,uPAAsC,4CAAW;mEACjD,6PAA+D,8IAAyB;mEAF1F,uaAAwF,KACtF,kOAAsC,KACtC,iNAA+D,0BAFnD,2BAAwB,EAAtC,YAAwF,EAA1E,SAAwB;mEAMpC,uPAAsC,4CAAW;mEACjD,uPAAyD,qNAA+B;mEAIxF,uPAAsC,wCAAO;mEAE3C,6EAAuE,iDAAe;mEACtF,6EAA4G,wJAA2B;mEAFzI,yPAA2D,IACzD,wLAAuE,IACvE,wLAA4G,yBAD9F,oEAAwD,4BAAtE,YAAuE,EAAzD,SAAwD,GACxD,uHAA6F,6BAA3G,YAA4G,EAA9F,SAA6F;mEAK7G,uPAAsC,yCAAQ;mEAG1C;;;6NAAqN,GAArD,YAAoD,GAApN,qHAAqN,kCAAI,2BAAzD,yDAAoD,gCAApN,YAAqN,EAArD,SAAoD,2BAApN,2JAAqN;mEACrN,wPAA6J,YAA5C;;wBAA2C;MAA5J,mLAA6J,qCAAO,iCAApK,2JAA6J;mEAC7J;;;6NAA4M,GAA1D,YAAyD,GAA3M,qHAA4M,kCAAI,2BAA9D,8DAAyD,gCAA3M,YAA4M,EAA1D,SAAyD,2BAA3M,2JAA4M;mEAC5M,2WAAyH,wCAAU,iCAAnI,2JAAyH;mEACzH,oQAA+H,YAAnC;;wBAAkC;MAA9H,mLAA+H,sCAAQ,iCAAvI,2JAA+H;mEANnI,gOAAuD,IACrD,qGAAyB,KACvB,wLAAqN,IACrN,wLAA6J,IAC7J,wLAA4M,IAC5M,yLAAyH,IACzH,yLAA+H,IAC/H,qQAAwG,YAAxC;;wBAAuC;MAAvG,oLAAwG,oCAAM,mDAL7E,uHAA6F,6BAA9H,YAAqN,EAApL,SAA6F,GAC7F,2DAA8C,GAA/E,YAA6J,EAA5H,SAA8C,GAC9C,uHAA6F,6BAA9H,YAA4M,EAA3K,SAA6F,GAC7F,oEAAwD,4BAAzF,aAAyH,EAAxF,SAAwD,GACxD,iDAA2B,GAA5D,aAA+H,EAA9F,SAA2B,2BAC5D,8JAAwG;mEAK9G,sTAAqD;mEACrD,0QAAwE;gMA1Z9E,2QAAkB,IAElB,+QAAgC,IAC9B,qMAA0C,IAExC,qMAAsC,IACpC,+FAAmB,KACjB,sIAA0D,KAE5D,mGAAuB,KACrB,kGAAsB,uCAAsC,MAC5D,oGAAwB,kDAAgB,kFAAI,yCAAO,MAErD,yGAA6B,KAC3B;;;8NAA+D,GAA5C,aAA2C,GAA9D,sHAA+D,0CAAY,MAI/E,sMAAsC,IACpC,+FAAmB,KACjB,sIAA0D,KAE5D,mGAAuB,KACrB,kGAAsB,uCAAsC,MAC5D,oGAAwB,iDAAe,kFAAI,0CAAQ,MAErD,yGAA6B,KAC3B;;;8NAAoE,GAA5C,aAA2C,GAAnE,sHAAoE,0CAAY,MAIpF,sMAAsC,IACpC,+FAAmB,KACjB,sIAA0D,KAE5D,mGAAuB,KACrB,kGAAsB,uCAAoC,MAC1D,oGAAwB,kDAAgB,kFAAI,uCAAK,MAEnD,yGAA6B,KAC3B;;;8NAAkE,GAA1C,aAAyC,GAAjE,sHAAkE,0CAAY,MAQpF,uMAA0C,IAExC,sMAAsC,IACpC,+FAAmB,KACjB,qIAAyD,KAE3D,mGAAuB,KACrB,kGAAsB,uCAAuC,MAC7D,oGAAwB,8CAAY,kFAAI,iDAAe,MAEzD,yGAA6B,KAC3B;;;8NAA+D,GAA5C,aAA2C,GAA9D,sHAA+D,0CAAY,MAI/E,sMAAsC,IACpC,+FAAmB,KACjB,qIAAyD,KAE3D,mGAAuB,KACrB,kGAAsB,uCAA8C,MACpE,oGAAwB,oDAAkB,kFAAI,0CAAQ,MAExD,yGAA6B,KAC3B;;;8NAAoE,GAA5C,aAA2C,GAAnE,sHAAoE,0CAAY,MAIpF,sMAAsC,IACpC,+FAAmB,KACjB,qIAAyD,KAE3D,oGAAuB,KACrB,mGAAsB,wCAAgD,MACtE,qGAAwB,oDAAkB,mFAAI,4CAAU,MAE1D,0GAA6B,KAC3B;;;+NAAkE,GAA1C,cAAyC,GAAjE,uHAAkE,0CAAY,MAQpF,gNAAiD,IAC/C,6EAAI,0DAAwB,MAC5B,2MAAyC,IAEvC,4MAA0C,IACxC,0GAA6B,KAC3B,kMAAiC,IAC/B,kIAAqD,KAIzD,6GAAgC,KAC9B,4EAAG,8CAAY,mFAAI,kDAEnB,MACA,6EAAI,yCAA8C,MAClD,kNAAkF,YAA1D;;wBAAyD;MAAjF,qLAAkF,sCAAQ,MAI9F,4MAA0C,IACxC,0GAA6B,KAC3B,kMAAiC,IAC/B,kIAAqD,KAIzD,6GAAgC,KAC9B,4EAAG,8CAAY,mFAAI,gDAEnB,MACA,6EAAI,yCAA2C,MAC/C,kNAA+E,YAAvD;;wBAAsD;MAA9E,qLAA+E,sCAAQ,MAS/F,gNAAiD,IAC/C,6EAAI,iEAA+B,MACnC,2MAAyC,IAEvC,4MAA0C,IACxC,0GAA6B,KAC3B,kMAAiC,IAC/B,kIAAqD,KAIzD,8GAAgC,KAC9B,4EAAG,8CAAY,mFAAI,wDAEnB,MACA,6EAAI,yCAAgD,MACpD;;;yVAA+D,sCAAQ,MAI3E,4MAA0C,IACxC,0GAA6B,KAC3B,kMAAiC,IAC/B,kIAAqD,KAIzD,8GAAgC,KAC9B,4EAAG,8CAAY,mFAAI,wDAEnB,MACA,6EAAI,yCAA+C,MACnD;;;yVAA+D,sCAAQ,MAI3E,6MAA2C,IACzC,0GAA6B,KAC3B,kMAAiC,IAC/B,kIAAqD,KAIzD,8GAAgC,KAC9B,4EAAG,8CAAY,mFAAI,uDAEnB,MACA,6EAAI,yCAA+C,MACnD;;;yVAA8D,sCAAQ,MAQ9E,qOAAsE,IACpE,6EAAI,kEAAgC,MACpC,2MAAyC,IAEvC,4MAA0C,IACxC,0GAA6B,KAC3B,kMAAiC,IAC/B,kIAAqD,KAIzD,6GAAgC,KAC9B,4EAAG,8CAAY,mFAAI,oDAEnB,MACA,6EAAI,yCAAuC,MAC3C,kNAA4E,YAApD;;wBAAmD;MAA3E,qLAA4E,sCAAQ,MAIxF,4MAA0C,IACxC,0GAA6B,KAC3B,kMAAiC,IAC/B,kIAAqD,KAIzD,6GAAgC,KAC9B,4EAAG,8CAAY,mFAAI,oDAEnB,MACA,6EAAI,yCAA2C,MAC/C,kNAA4E,YAApD;;wBAAmD;MAA3E,qLAA4E,sCAAQ,MAIxF,4MAA0C,IACxC,0GAA6B,KAC3B,kMAAiC,IAC/B,kIAAqD,KAGzD,6GAAgC,KAC9B,4EAAG,8CAAY,mFAAI,iDAEnB,MACA,6EAAI,yCAAsC,MAC1C,kNAAyE,YAAjD;;wBAAgD;MAAxE,qLAAyE,sCAAQ,MAIrF,4MAA0C,IACxC,0GAA6B,KAC3B,kMAAiC,IAC/B,kIAAqD,KAGzD,6GAAgC,KAC9B,4EAAG,2CAAS,mFAAI,0CAEhB,MACA,6EAAI,yCAAmD,MACvD,kNAAsE,YAA9C;;wBAA6C;MAArE,qLAAsE,sCAAQ,MAIlF,4MAA0C,IACxC,0GAA6B,KAC3B,kMAAiC,IAC/B,kIAAqD,KAGzD,6GAAgC,KAC9B,4EAAG,sDAAoB,MACvB,6EAAI,yCAA+C,MACnD,kNAAyE,YAAjD;;wBAAgD;MAAxE,qLAAyE,sCAAQ,MAIrF,4MAA0C,IACxC,0GAA6B,KAC3B,kMAAiC,IAC/B,kIAAqD,KAGzD,6GAAgC,KAC9B,4EAAG,wDAAsB,MACzB,6EAAI,yCAAyC,MAC7C,kNAAgF,YAAxD;;wBAAuD;MAA/E,qLAAgF,sCAAQ,MAShG,wMAAwC,IAEtC,2XAAgC,MAC9B,0EAAI,yCAA2B,MAC/B;;;yVAA8E,0DACpE,MAGZ,6XAAgC,MAC9B,+jDAAgB,MACd;;;;;;;;wBAAsH;MAAvE;;wBAAsE;MAArH,0VAAsH,KAGxH,okDAAgB,MACd;;;;;;;;wBAC0E;MAAxE;;wBAAuE;MADzE,4VAC0E,KAG5E,+kDAAmC,MACjC;;;;;;;;wBAAiH;MAAtE;;wBAAqE;MAAhH,6tBAAiH,KAC/G;;;;;;yPAAoB,6CAAe,MACnC;;;;;;yPAA4C,qDAAuB,MACnE;;;;;;yPAAkC,2CAAa,MAC/C;;;;;;yPAAmC,4CAAc,MACjD;;;;;;yPAA0B,mCAAK,MAC/B;;;;;;yPAA4B,qCAAO,MAIvC,6EAAc,KACZ,uGAAyB,KACvB,ukDAAgB,MACd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yBAA2F;MAAxB;;yBAAuB;MAA1F,s0CAA2F,KAC3F;;;iWAAiD,IACjD,uXAAyB,IAG3B,ukDAAgB,MACd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yBAAuF;MAAtB;;yBAAqB;MAAtF,s0CAAuF,KACvF;;;iWAAiD,IACjD,uXAAyB,IAG7B,mQAAyF,YAA5B;;wBAA2B;MAAxF,wMAAyF,oCAAM,MAKnG,+oBAAmF,MACjF,2aAAgC,KAC9B,mOAAsC,KACtC,iNAAuD,KAGzD,2aAA6C,KAC3C,mOAAsC,KACtC,iNAAiE,KAGnE,2aAAwC,KACtC,mOAAsC,KACtC,iNAAqG,KAGvG,yLAAyF,IAKzF,2aAAyC,KACvC,oOAAsC,KACtC,kNAAgE,KAIlE,0LAAiG,IAKjG,2aAAsC,KACpC,oOAAsC,KACtC,kNAA8D,KAGhE,0LAA2F,IAK3F,0LAAwF,IAKxF,2aAAkC,KAChC,oOAAsC,KACtC,kNAAyD,KAG3D,2aAAoC,KAClC,oOAAsC,KACtC,kNAA2D,KAM7D,2aAAwC,KACtC,oOAAsC,KACtC,kNAAuD,KAYzD,6QAAqD,KACrD,2PAAwE,KAG1E,2TAAuD,GAAxC,cAAuC,IAK1D,+NAAkB,iDAlalB,YAAkB,GAcS,yDAA2C,GAA9D,aAA+D,EAA5C,SAA2C,GAatC,yDAA2C,GAAnE,aAAoE,EAA5C,SAA2C,GAa3C,wDAAyC,GAAjE,aAAkE,EAA1C,UAAyC,GAmB9C,0DAA2C,GAA9D,aAA+D,EAA5C,UAA2C,GAatC,0DAA2C,GAAnE,aAAoE,EAA5C,UAA2C,GAa3C,yDAAyC,GAAjE,cAAkE,EAA1C,UAAyC,GAiEvC,4CAAsC,EAA9D,cAA+D,EAAvC,UAAsC,GAgBtC,4CAAsC,EAA9D,cAA+D,EAAvC,UAAsC,GAgBtC,2CAAqC,EAA7D,cAA8D,EAAtC,UAAqC,GA6G9B,gDAA0C,EAA7E,cAA8E,EAA3C,UAA0C,GAM3D,oCAA8B,EAA9C,cAAsH,EAAtG,WAA8B,GAI9B,qCAA+B,EAA/C,cAC0E,EAD1D,WAA+B,GAKnC,oCAA8B,EAA1C,cAAiH,EAArG,WAA8B,GAC5B,qBAAO,EAAnB,cAAoB,EAAR,WAAO,GACP,2CAA+B,EAA3C,cAA4C,EAAhC,WAA+B,GAC/B,iCAAqB,EAAjC,cAAkC,EAAtB,WAAqB,GACrB,kCAAsB,EAAlC,cAAmC,EAAvB,WAAsB,GACtB,yBAAa,EAAzB,cAA0B,EAAd,WAAa,GACb,2BAAe,EAA3B,cAA4B,EAAhB,WAAe,GAOT,iCAAyB,GAAzC,cAA2F,EAA3E,WAAyB,GAA0B,qBAAuB,YAA1F,cAA2F,EAAxB,WAAuB,GAAhD,8BAAwB,EAAlE,cAA2F,EAAjD,WAAwB,GACjC,iCAAe,GAAhD,cAAiD,EAAhB,WAAe,GAKhC,iCAAyB,GAAzC,cAAuF,EAAvE,WAAyB,GAAwB,qBAAqB,UAAtF,cAAuF,EAAtB,WAAqB,GAA5C,4BAAsB,EAAhE,cAAuF,EAA7C,WAAsB,GAC/B,iCAAe,GAAhD,cAAiD,EAAhB,WAAe,GAI1B,2BAAe,EAAzC,cAAyF,EAA/D,WAAe,GAK5B,qBAA4B,gBAA7C,cAAmF,EAAlE,WAA4B,GAC7B,sBAAiB,EAA/B,cAAgC,EAAlB,WAAiB,GAKjB,mCAA8B,EAA5C,cAA6C,EAA/B,WAA8B,GAK9B,8BAAyB,EAAvC,cAAwC,EAA1B,WAAyB,GAKC,+DAAgD,GAAxF,cAAyF,EAAjD,WAAgD,GAK1E,+BAA0B,EAAxC,cAAyC,EAA3B,WAA0B,GAMQ,+DAAgD,GAAhG,cAAiG,EAAjD,WAAgD,GAKlF,4BAAuB,EAArC,cAAsC,EAAxB,WAAuB,GAKK,+DAAgD,GAA1F,cAA2F,EAAjD,WAAgD,GAKnD,+DAAgD,GAAvF,cAAwF,EAAjD,WAAgD,GAKzE,wBAAmB,EAAjC,cAAkC,EAApB,WAAmB,GAKnB,0BAAqB,EAAnC,cAAoC,EAAtB,WAAqB,GAQrB,8BAAyB,EAAvC,cAAwC,EAA1B,WAAyB,GAcpB,qBAAiC,iBAApD,cAAqD,EAAlC,WAAiC,GACxC,qBAA2D,iBAAvE,cAAwE,EAA5D,WAA2D,GAG1D,mDAAuC,GAAtD,cAAuD,EAAxC,WAAuC,GAK1D,cAAkB,mDAhalB,6FAAgC,GAQF,6EAAsC,GAI5D,8JAA+D,GASzC,6EAAsC,GAI5D,8JAAoE,GAS9C,2EAAoC,GAI1D,kKAAkE,GAe5C,gFAAuC,GAI7D,kKAA+D,GASzC,uFAA8C,GAIpE,kKAAoE,GAS9C,0FAAgD,GAItE,qKAAkE,GAuB5D,uFAA8C,GAClD,qKAAkF,GAe9E,oFAA2C,GAC/C,qKAA+E,GAwB3E,yFAAgD,GACpD,qKAA+D,GAe3D,wFAA+C,GACnD,qKAA+D,GAe3D,wFAA+C,GACnD,qKAA8D,GAuB1D,gFAAuC,GAC3C,qKAA4E,GAexE,oFAA2C,GAC/C,qKAA4E,GAcxE,+EAAsC,GAC1C,qKAAyE,GAcrE,4FAAmD,GACvD,qKAAsE,GAYlE,wFAA+C,GACnD,qKAAyE,GAYrE,kFAAyC,GAC7C,qKAAgF,GAWtF,kKAAgC,GAC1B,oEAA2B,GAC/B,qKAA8E,GAIhF,kKAAgC,GAC9B,ygDAAgB,IACd,olBAAsH,GAGxH,qjDAAgB,IACd,smBAC0E,GAG5E,qjDAAmC,IACjC,q+BAAiH,IAC/G,ifAAoB,GACpB,ifAA4C,GAC5C,ifAAkC,GAClC,ifAAmC,GACnC,ifAA0B,GAC1B,ifAA4B,GAM5B,qjDAAgB,IACd,klDAA2F,IAC3F,4XAAiD,GAInD,qjDAAgB,IACd,klDAAuF,IACvF,4XAAiD,GAIrD,yKAAyF;;;;;;;;;;;;;;;;;;;;AC1UjG,yEAA6D;AAI7D,yKAAkF;AAClF,0GAA2D;AAC3D,8FAA6D;AAC7D,qFAA6E;AAC7E,2MAAyF;AAGzF,mEAAyC;AACzC,MAAM,MAAM,GAAG,cAAc,CAAC;AAG9B,MAMa,uBAAuB;IA0BlC,YAAoB,MAAc,EAAS,aAA4B,EAAU,IAAwB,EAAS,cAA8B,EACvI,MAAiB,EAAS,aAAoC,EAAU,WAAwB;QADrF,WAAM,GAAN,MAAM,CAAQ;QAAS,kBAAa,GAAb,aAAa,CAAe;QAAU,SAAI,GAAJ,IAAI,CAAoB;QAAS,mBAAc,GAAd,cAAc,CAAgB;QACvI,WAAM,GAAN,MAAM,CAAW;QAAS,kBAAa,GAAb,aAAa,CAAuB;QAAU,gBAAW,GAAX,WAAW,CAAa;QAzBlG,kBAAa,GAAQ,EAAE,CAAC;QACxB,aAAQ,GAAW,EAAE,CAAC;QACtB,aAAQ,GAAQ;YACrB,UAAU,EAAE,iBAAiB;SAC9B,CAAC;QAEK,mBAAc,GAAQ,EAAE,CAAC;QACzB,wBAAmB,GAAQ,EAAE,CAAC;QAC9B,yBAAoB,GAAQ,EAAE,CAAC;QAC/B,sBAAiB,GAAQ,EAAE,CAAC;QAC5B,sBAAiB,GAAQ,EAAE,CAAC;QAU5B,gBAAW,GAAQ,EAAE,CAAC;QAO3B,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC;QACnF,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,GAAG,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAE7D,oBAAoB;QACtB,IAAI,CAAC,QAAQ,GAAG,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAE9C,sBAAsB;QACtB,IAAI,CAAC,cAAc,GAAG,CAAC,IAAI,EAAE,UAAU,EAAE,aAAa,EAAC,YAAY,EAAE,iBAAiB,EAAE,QAAQ,EAAE,MAAM,EAAE,YAAY,CAAC,CAAC;QAExH,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE;YAC/C,IAAI,CAAC,cAAc,GAAG,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC;YACjD,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC;YAClD,IAAI,CAAC,aAAa,GAAG,IAAI,0BAAkB,CAAC,OAAO,CAAC,CAAC;YACrD,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC;QACnD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;IACR,CAAC;IAED,eAAe;IACf,CAAC;IAED,YAAY,CAAC,GAAW,EAAE,KAAa;QACrC,IAAI,UAAU,GAAQ,EAAE,CAAC;QACzB,UAAU,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QAEtC,IAAI,IAAI,GAAG;YACT,QAAQ,EAAE,4BAA4B;YACtC,WAAW,EAAE,UAAU;YACvB,OAAO,EAAE,IAAI,CAAC,QAAQ;SACvB;QACD,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACzD,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,GAAG,CAAC;QACpC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,cAAc,CAAC,GAAW,EAAE,KAAU;QACpC,IAAI,UAAU,GAAQ,EAAE,CAAC;QACzB,UAAU,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QACtC,IAAI,IAAI,GAAG;YACT,QAAQ,EAAE,4BAA4B;YACtC,WAAW,EAAE,UAAU;YACvB,OAAO,EAAE,IAAI,CAAC,QAAQ;SACvB;QAED,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,IAAI,CAAC;aACpC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACpB,IAAI,MAAM,GAAQ,QAAQ,CAAC,GAAG,CAAC;YAC/B,2BAA2B;QAC7B,CAAC,CAAC,CAAC;IAEP,CAAC;IAED,eAAe;QACb,IAAI,IAAI,GAAG;YACT,QAAQ,EAAE,4BAA4B;YACtC,WAAW,EAAE;gBACX,MAAM,EAAG;oBACP,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC;oBAC/C,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC;iBAClD;aACF;YACD,OAAO,EAAE,IAAI,CAAC,QAAQ;SACvB;QACD,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;YAC7D,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,GAAG,CAAC;QACpC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sBAAsB;QACpB,IAAI,IAAI,GAAG;YACT,QAAQ,EAAE,+BAA+B;YACzC,WAAW,EAAE;gBACX,YAAY,EAAE;oBACZ,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC;oBAC/C,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC;iBAClD;gBACD,MAAM,EAAE,IAAI,CAAC,UAAU;aAC1B;YACC,OAAO,EAAE,IAAI,CAAC,QAAQ;SACvB;QACD,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;YAC7D,iCAAiC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kBAAkB;QAChB,IAAI,IAAI,GAAG;YACT,WAAW,EAAE;gBACX,WAAW,EAAE;oBACX,QAAQ,EAAE,SAAS;iBACpB;gBACD,YAAY,EAAE;oBACZ,QAAQ,EAAE,yBAAyB;iBACpC;gBACD,YAAY,EAAE;oBACZ,QAAQ,EAAE,eAAe;iBAC1B;gBACD,YAAY,EAAE;oBACZ,QAAQ,EAAE,OAAO;iBAClB;gBACD,YAAY,EAAE;oBACZ,QAAQ,EAAE,gBAAgB;iBAC3B;gBACD,YAAY,EAAE;oBACZ,aAAa,EAAE,MAAM;iBACtB;aACF;SACF;QACD,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,IAAI,CAAC;aACvC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAEpB,IAAI,MAAW,CAAC;YAChB,MAAM,GAAG,QAAQ,CAAC;YAElB,IAAI,CAAC,mBAAmB,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;YAC/C,IAAI,CAAC,oBAAoB,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;YAChD,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;YAC7C,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QAC/C,CAAC,CAAC;IACN,CAAC;IAGD,qBAAqB,CAAC,IAAY;QAChC,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC;QAChC,IAAI,cAAc,GAAQ,EAAE,CAAC;QAE7B,IAAI,CAAC,cAAc,GAAG,CAAC,IAAI,EAAE,UAAU,EAAE,aAAa,EAAC,YAAY,EAAE,iBAAiB,EAAE,QAAQ,EAAE,MAAM,EAAC,YAAY,CAAC,CAAC;QACvH,sBAAsB;QAEtB,QAAQ,IAAI,EAAE;YACZ,2BAA2B;YAC3B,KAAK,uBAAuB;gBAC1B,cAAc,GAAG;oBACf,QAAQ,EAAE,4BAA4B;oBACtC,WAAW,EAAE;wBACX,aAAa,EAAE,SAAS;qBACzB;oBACD,OAAO,EAAE,IAAI,CAAC,QAAQ;iBACvB;gBACD,MAAM;YACR,KAAK,oBAAoB;gBACrB,cAAc,GAAG;oBACf,QAAQ,EAAE,4BAA4B;oBACtC,WAAW,EAAE;wBACX,aAAa,EAAE,MAAM;qBACtB;oBACD,OAAO,EAAE,IAAI,CAAC,QAAQ;iBACvB;gBACD,MAAM;YACV,2BAA2B;YAC3B,KAAK,kBAAkB;gBACrB,cAAc,GAAG;oBACf,QAAQ,EAAE,4BAA4B;oBACtC,OAAO,EAAE,IAAI,CAAC,QAAQ;iBACvB;gBACD,MAAM;YACR,KAAK,kBAAkB;gBACrB,cAAc,GAAG;oBACf,QAAQ,EAAE,4BAA4B;oBACtC,WAAW,EAAE;wBACX,QAAQ,EAAE,EAAE,OAAO,EAAC,IAAI,EAAE;wBAC1B,QAAQ,EAAE,EAAE,OAAO,EAAC,IAAI,EAAE;wBAC1B,QAAQ,EAAE,EAAE,OAAO,EAAC,IAAI,EAAE;wBAC1B,QAAQ,EAAE,EAAE,OAAO,EAAC,IAAI,EAAE;wBAC1B,QAAQ,EAAE,EAAE,OAAO,EAAC,IAAI,EAAE;wBAC1B,QAAQ,EAAE,EAAE,OAAO,EAAC,IAAI,EAAE;wBAC1B,QAAQ,EAAE,EAAE,OAAO,EAAC,IAAI,EAAE;qBAC3B;oBACD,OAAO,EAAE,IAAI,CAAC,QAAQ;iBACvB;gBACD,MAAM;YACR,KAAK,eAAe;gBAClB,IAAI,CAAC,cAAc,GAAG,CAAC,IAAI,EAAE,oBAAoB,EAAE,UAAU,EAAE,cAAc,EAAE,YAAY,EAAE,aAAa,EAAC,YAAY,EAAE,WAAW,EAAE,iBAAiB,EAAE,QAAQ,EAAE,MAAM,EAAE,YAAY,CAAC,CAAC;gBAEzL,cAAc,GAAG;oBACf,QAAQ,EAAE,4BAA4B;oBACtC,WAAW,EAAE;wBACX,kBAAkB,EAAE,EAAE,OAAO,EAAC,IAAI,EAAE;qBACrC;oBACD,OAAO,EAAE,IAAI,CAAC,QAAQ;iBACvB;gBACD,MAAM;YACR,KAAK,YAAY;gBACf,IAAI,CAAC,cAAc,GAAG,CAAC,IAAI,EAAE,oBAAoB,EAAE,UAAU,EAAE,cAAc,EAAE,YAAY,EAAE,aAAa,EAAC,YAAY,EAAE,WAAW,EAAE,iBAAiB,EAAE,QAAQ,EAAE,MAAM,EAAE,YAAY,CAAC,CAAC;gBAEzL,yCAAyC;gBACzC,yCAAyC;gBACzC,yCAAyC;gBACzC,cAAc,GAAG;oBACf,QAAQ,EAAE,4BAA4B;oBACtC,WAAW,EAAE;wBACX,kBAAkB,EAAE,EAAE,OAAO,EAAC,IAAI,EAAE;qBACrC;oBACD,OAAO,EAAE,IAAI,CAAC,QAAQ;iBACvB;gBACD,MAAM;YACR,KAAK,eAAe;gBAClB,IAAI,CAAC,cAAc,GAAG,CAAC,IAAI,EAAE,oBAAoB,EAAE,UAAU,EAAE,cAAc,EAAE,YAAY,EAAE,aAAa,EAAC,YAAY,EAAE,WAAW,EAAE,iBAAiB,EAAE,QAAQ,EAAE,MAAM,EAAE,YAAY,CAAC,CAAC;gBAEzL,cAAc,GAAG;oBACf,QAAQ,EAAE,4BAA4B;oBACtC,WAAW,EAAE;wBACX,gBAAgB,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;qBACpC;oBACD,OAAO,EAAE,IAAI,CAAC,QAAQ;iBACvB;gBACD,MAAM;YACR,KAAK,sBAAsB;gBACzB,cAAc,GAAG;oBACf,QAAQ,EAAE,4BAA4B;oBACtC,WAAW,EAAE;wBACX,kBAAkB,EAAE,EAAE,OAAO,EAAC,KAAK,EAAE;qBACtC;oBACD,OAAO,EAAE,IAAI,CAAC,QAAQ;iBACvB;gBACD,MAAM;YACR;gBACE,MAAM;SACT;QAED,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;YACvE,IAAI,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC;YAC3B,IAAI,CAAC,aAAa,GAAG,IAAI,0BAAkB,CAAC,OAAO,CAAC,CAAC;YACrD,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC;QACnD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU;QACR,IAAI,CAAC,GAAG,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QACzC,IAAI,CAAC,CAAC,KAAK,CAAC,OAAO,KAAK,MAAM,EAAE;YAC9B,CAAC,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;SAC3B;aAAM;YACL,CAAC,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;SAC1B;IACH,CAAC;IAED,iBAAiB;IACjB,SAAS;QACP,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,8BAA8B,CAAC,CAAC;IAC5D,CAAC;IAED,cAAc,CAAC,MAAW;QACxB,IAAG,OAAM,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,WAAW,EAAE;YAC/C,MAAM,CAAC,cAAc,GAAG,CAAC,CAAC;SAC3B;aAAM;YACL,MAAM,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,GAAG,CAAC,CAAC;SACnD;QAED,kDAAkD;QAClD,IAAI,UAAU,GAAQ,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC;QACzD,UAAU,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;QACvD,UAAU,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;QACvD,UAAU,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;QAEzD,gCAAgC;QAChC,IAAI,WAAW,GAAG;YAChB,EAAE,EAAE,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,GAAG;YACvC,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI;SAC3C,CAAC;QAEF,IAAI,QAAQ,GAAQ;YAClB,QAAQ,EAAE,iBAAiB;YAC3B,MAAM,EAAE;gBACN,WAAW,EAAE,MAAM,CAAC,GAAG;gBACvB,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,GAAG;gBAChD,SAAS,EAAE,MAAM,CAAC,OAAO;gBACzB,WAAW,EAAE,MAAM,CAAC,SAAS;gBAC7B,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE;gBACtB,kBAAkB,EAAE,CAAC;gBACrB,wBAAwB,EAAE,WAAW;gBACrC,oBAAoB,EAAE,UAAU;aACjC;YACD,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,EAAE,SAAS,EAAE,WAAW,CAAC;YAC/D,gBAAgB,EAAE,MAAM,CAAC,cAAc;YACvC,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,QAAQ;SACrC,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,QAAQ,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACtE,IAAG,QAAQ,CAAC,MAAM,IAAI,SAAS,EAAE;gBAC/B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,oBAAoB,EAAE,IAAI,EAAE;oBAChD,QAAQ,EAAE,IAAI;iBACf,CAAC,CAAC;gBACH,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;gBAExC,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACxB,IAAI,CAAC,qBAAqB,CAAC,eAAe,CAAC,CAAC;aAC7C;iBAAM;gBACL,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,sCAAsC,EAAE,IAAI,EAAE;oBAClE,QAAQ,EAAE,IAAI;iBACf,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gBAAgB;QACd,IAAI,QAAQ,GAAQ;YAClB,MAAM,EAAE,4BAA4B;YACpC,SAAS,EAAE;gBACT,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,GAAG;aAC/C;SACF,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,QAAQ,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACtE,IAAG,QAAQ,CAAC,MAAM,IAAI,SAAS,EAAE;gBAC/B,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,IAAI,CAAC;gBACpC,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC;gBAClD,IAAI,CAAC,aAAa,GAAG,IAAI,0BAAkB,CAAC,OAAO,CAAC,CAAC;gBACrD,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC;aAClD;iBAAM;gBACL,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,gBAAgB,EAAE,EAAE,EAAE;oBAC1C,QAAQ,EAAE,IAAI;iBACf,CAAC,CAAC;gBAEH,UAAU,CAAC,GAAG,EAAE;oBACd,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBAC1B,CAAC,EAAE,IAAI,CAAC,CAAC;aACV;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,YAAY,CAAC,KAAU,EAAE,KAAa;QACpC,IAAI,IAAI,GAAQ;YACd,KAAK,EAAE,OAAO;YACd,IAAI,EAAE;gBACJ,MAAM,EAAE,OAAO;gBACf,OAAO,EAAE,qCAAqC;gBAC9C,OAAO,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE;gBACvB,OAAO,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE;aACzB;SACF;QAED,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yCAAkB,EAAE,IAAI,CAAC,CAAC;QAC5D,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC9C,QAAO,MAAM,EAAE;gBACb,KAAK,IAAI;oBACP,MAAM;gBACR,KAAK,KAAK;oBACR,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;oBACjC,MAAM;aACT;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,aAAa,CAAC,KAAU,EAAE,KAAa;QACrC,IAAI,cAAc,GAAG;YACnB,QAAQ,EAAE,oBAAoB;YAC9B,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,IAAI,CAAC,QAAQ;SACvB;QACD,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,kBAAkB,EAAE,cAAc,CAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;YAC/E,IAAG,QAAQ,CAAC,MAAM,IAAI,SAAS,EAAE;gBAC/B,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gBACrD,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC;gBAClD,IAAI,CAAC,aAAa,GAAG,IAAI,0BAAkB,CAAC,OAAO,CAAC,CAAC;gBAErD,IAAI,IAAI,GAAQ;oBACd,KAAK,EAAE,OAAO;oBACd,IAAI,EAAE;wBACJ,MAAM,EAAE,SAAS;wBACjB,OAAO,EAAE,sBAAsB;wBAC/B,OAAO,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE;wBACvB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;qBACtB;iBACF;gBAED,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yCAAkB,EAAE,IAAI,CAAC,CAAC;aAC7D;iBAAM;gBACL,IAAI,IAAI,GAAQ;oBACd,KAAK,EAAE,OAAO;oBACd,IAAI,EAAE;wBACJ,MAAM,EAAE,OAAO;wBACf,OAAO,EAAE,oCAAoC;wBAC7C,OAAO,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;wBAC3B,OAAO,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE;qBAC3B;iBACF;gBAED,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yCAAkB,EAAE,IAAI,CAAC,CAAC;gBAC5D,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;oBAC9C,QAAO,MAAM,EAAE;wBACb,KAAK,OAAO;4BACV,MAAM;wBACR,KAAK,QAAQ;4BACX,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;4BACjC,MAAM;qBACT;gBACH,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mBAAmB,CAAC,EAAO;QACzB,IAAI,IAAI,GAAQ;YACd,KAAK,EAAE,OAAO;YACd,IAAI,EAAE;gBACJ,SAAS,EAAE,EAAE;aACd;SACF,CAAC;QACF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qDAAwB,EAAE,IAAI,CAAC,CAAC;IACpE,CAAC;CAEF;AArbD,0DAqbC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mEClcD,ggBAAsD,yBAApC,+BAAoB,EAAtC,YAAsD,EAApC,SAAoB,2BAAtC,qQAAsD;mEAWtC,uPAAsC,sCAAK;mEAC3C,+NAAuD,sIAAa;mEAKpE,uPAAsC,6CAAY;mEAClD,+NAAuC,uIAAkB;mEAKzD,uPAAsC,mDAAkB;mEACxD,+NAAuC,0JAAqC;mEAK5E,uPAAsC,0CAAS;mEAC/C,+NAAuC,+JAA0C;oEAKjF,uPAAsC,yCAAQ;oEAE1C,6EAAkE,wCAAM;oEACxE,6EAAkE,wCAAM;oEACxE,6EAAmE,yCAAO;oEAH9E,+NAAuC,IACnC,yLAAkE,IAClE,yLAAkE,IAClE,yLAAmE,yBAFrD,yEAAmD,GAAjE,YAAkE,EAApD,SAAmD,GACnD,yEAAmD,GAAjE,YAAkE,EAApD,SAAmD,GACnD,0EAAoD,GAAlE,YAAmE,EAArD,SAAoD;oEAMtE,uPAAsC,mDAAkB;oEACxD,+NAAuC,qJAAgC;oEAKvE,uPAAsC,8CAAa;oEACnD,+NAAuC,uNAAkC;oEAG7E,oTAAuD;oEACvD,wQAA6D;4GA1DzE,6PAAqB,wDAAuB,MAE5C,wLAAsD,IAEtD,6MAA2C,IACvC,6HAAgD,KAC5C,qpBAAyF,MAMrF,qaAAsC,KAClC,kOAAsC,KACtC,gNAAuD,KAI3D,saAAwC,KACpC,kOAAsC,KACtC,gNAAuC,KAI3C,waAAgC,KAC5B,mOAAsC,KACtC,iNAAuC,KAI3C,waAAqC,KACjC,mOAAsC,KACtC,iNAAuC,KAI3C,waAAoC,KAChC,oOAAsC,KACtC,kNAAuC,KAQ3C,waAA8C,KAC1C,oOAAsC,KACtC,kNAAuC,KAI3C,waAAuC,KACnC,qOAAsC,KACtC,mNAAuC,KAG3C,6QAAuD,KACvD,2PAA6D,KAMzE,kNAAgC,IAC5B;;;sWAAoD,mCAAK,mDAjE7D,YAAqB,GAEkB,mBAAc,SAArD,YAAsD,EAAf,SAAc,GAI5B,mBAAyB,aAA1C,aAAyF,EAAxE,SAAyB,GAMxB,0BAAuB,EAArC,aAAsC,EAAxB,SAAuB,GAMvB,4BAAyB,EAAvC,aAAwC,EAA1B,SAAyB,GAMzB,oBAAiB,EAA/B,aAAgC,EAAlB,SAAiB,GAMjB,yBAAsB,EAApC,aAAqC,EAAvB,SAAsB,GAMtB,wBAAqB,EAAnC,aAAoC,EAAtB,SAAqB,GAUrB,kCAA+B,EAA7C,aAA8C,EAAhC,SAA+B,GAM/B,2BAAwB,EAAtC,aAAuC,EAAzB,SAAwB,GAKnB,oBAAmC,mBAAtD,cAAuD,EAApC,UAAmC,GAC1C,oBAAgD,mBAA5D,cAA6D,EAAjD,UAAgD,GAOjD,0BAAe,EAAlC,cAAoD,EAAjC,UAAe,GAAC,mBAAgB,EAAnD,cAAoD,EAAjB,UAAgB,2BAjEvD,0DAAqB,GAiEjB,4RAAoD;;;;;;;;;;;;;;;;;;;;ACjExD,yEAA0D;AAG1D,+EAAyD;AAGzD,8FAA6D;AAC7D,qFAA6E;AAM7E,MAMa,wBAAwB;IAOnC,YAAmB,SAAiD,EAClC,UAAsB,EAAS,MAAc,EACtE,aAA4B,EAAU,IAAwB;QAFpD,cAAS,GAAT,SAAS,CAAwC;QAClC,eAAU,GAAV,UAAU,CAAY;QAAS,WAAM,GAAN,MAAM,CAAQ;QACtE,kBAAa,GAAb,aAAa,CAAe;QAAU,SAAI,GAAJ,IAAI,CAAoB;QANhE,WAAM,GAAY,IAAI,CAAC;QACvB,qBAAgB,GAAG,CAAC,UAAU,EAAE,YAAY,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,kBAAkB,EAAE,WAAW,CAAC,CAAC;QAM/G,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC;QAE5B,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACrD,CAAC;IAED,QAAQ;IACR,CAAC;IAED,wBAAwB,CAAC,QAAgB;QACvC,IAAI,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAClD,IAAI,IAAI,GAAG;YACT,QAAQ,EAAE,iBAAiB;YAC3B,WAAW,EAAE,EAAE,kBAAkB,EAAG,QAAQ,EAAC;YAC7C,OAAO,EAAE,QAAQ;SAClB;QACD,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAC3D,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,CAAC,UAAU,GAAG,IAAI,0BAAkB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QACzD,CAAC,CAAC,CAAC;IACL,CAAC;CAEF;AArCD,4DAqCC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qEC7CC,kNAA0G,IACxG,oMAAuC,IAErC,4LAAgC,IAC9B,uFAAgF,KAElF,gOAAmE,YAAjC;;wBAAgC;MAAlE,mLAAmE,kCAC9D,MAAU,iOAAgE,YAA9B;;wBAA6B;MAA/D,oLAAgE,kCAC/E,yDAJO,6EAA0E,qBAA/E,YAAgF,EAA3E,SAA0E,GAEjF,2JAAmE,GACpD,8JAAgE;qEAqBnE,mMAAyL,8DAA6B,iCAAtN,0DAAyL;qEAW3L,+LAA0K,6DAA4B,iCAAtM,0DAA0K;qEAUxK,oMAAmL,6DAA4B,iCAA/M,0DAAmL;qEASjL;;;;;;kPAA+E,mCAC/E,2BADyD,yEAAqB,GAA9E,YAA+E,EAAtB,SAAqB,2BAA9E,+bAA+E,6EAC/E;qEAGF,oMAAmL,iDAAgB,iCAAnM,0DAAmL;qEASjL;;;;;;kPAA4E,mCAC5E,2BADkD,6EAAyB,GAA3E,YAA4E,EAA1B,SAAyB,2BAA3E,+bAA4E,qEAC5E;qEAGF,oMAA6K,+CAAc,iCAA3L,0DAA6K;sEAY/K,+LAAgL,4DAA2B,iCAA3M,0DAAgL;sEAWhL,+LAA2M,sEAAqC,iCAAhP,0DAA2M;sEAqBzM,oMAAuK,gDAAe,iCAAtL,0DAAuK;sEAoBvK,oMAA6K,kDAAiB,iCAA9L,0DAA6K;sEAmB7K,qMAA8J,6CAAY,iCAA1K,0DAA8J;sEAmB5J,qMAAuK,gDAAe,iCAAtL,0DAAuK;sEAmBzK,qMAAoK,gDAAe,iCAAnL,0DAAoK;sEAmBpK,qMAAuK,iDAAgB,iCAAvL,0DAAuK;sEAmBvK,qMAA6K,mDAAkB,iCAA/L,0DAA6K;sEAmB7K,qMAA0K,kDAAiB,iCAA3L,0DAA0K;sEAmB1K,qMAA6K,mDAAkB,iCAA/L,0DAA6K;sEAmB7K,qMAA8J,6CAAY,iCAA1K,0DAA8J;sEAkB9J,qMAAuK,gDAAe,iCAAtL,0DAAuK;sEAmBvK,qMAAuK,mDAAkB,iCAAzL,0DAAuK;sEAmBvK,qMAAuK,gDAAe,iCAAtL,0DAAuK;sEAmBvK,qMAAuK,gDAAe,iCAAtL,0DAAuK;sEAmBvK,qMAAoK,kDAAiB,iCAArL,0DAAoK;sEAmBpK,qMAAoK,gDAAe,iCAAnL,0DAAoK;sEAmBpK,qMAAoK,+CAAc,iCAAlL,0DAAoK;sEAkBpK,qMAAuK,gDAAe,iCAAtL,0DAAuK;sEAmBvK,qMAAiK,8CAAa,iCAA9K,0DAAiK;sEAmBjK,qMAA+L,yDAAwB,iCAAvN,0DAA+L;sEAuBjM,qMAAsL,2EAA0C,iCAAhO,0DAAsL;qEA3epM,4YAC2G,GADtD,+BAA8E,KAAnI,4DAC2G,IAGzG,0QAA2B,IACzB,sLAAkB,IAChB;;;;;wBACwC;MAAxC;;wBAAuC;MADvC,yZACwC,IAEtC,+GAAiC,KAC/B,yGAA6B,uDAAqB,MAElD,kHAAoC,KAClC,yLAAkB,IAChB,+EAAO,8CAAY,MACnB,0jDAAgB,MACd;;;;;;;;;;;;;;;;;;;;wBAAmI;MAAxD;;wBAAuD;MAAlI,83BAAmI,KACnI,yLAAyL,IAI7L,wMAAyC,IACvC,+EAAO,gDAAc,MACrB,yGAA4B,KAC1B;;;;;;;;;;;;;;;;;;ozBAAuF,sCACvF;;;;;;;;;;;;;;;;;;ozBAAyF,wCAC3F,MAEA,4LAA0K,IAG5K,yLAAkB,IAChB,+EAAO,gDAAc,MACrB,kkDAAgB,MACd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;m0CAAqG,KACrG;;;8VAAmD,IACnD,uXAA2B,IAE3B,yLAAmL,IAIvL,2LAAkB,IAChB,gFAAO,oDAAkB,MACzB,okDAAgB,MACd;;;;;;;;wBAAkJ;MAA/C;;wBAA8C;MAAjJ,giCAAkJ,KAChJ;;;;;;iOAAY,6CAAe,MAC3B,wNAA+E,IAIjF,0LAAmL,IAIvL,2LAAkB,IAChB,gFAAO,6CAAW,MAClB,okDAAgB,MACd;;;;;;;;;ogCAA+F,KAC7F;;;;;;iOAAY,2CAAa,MACzB,wNAA4E,IAI9E,0LAA6K,IAIjL,2LAAkB,IAChB,gFAAO,4CAAU,MACjB,okDAAgB,MACd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;w0CAAyG,KACzG;;;gWAAwD,IACxD,8XAAgC,IAGlC,8LAAgL,IAGlL,2LAAkB,IAChB,gFAAO,iDAAe,MACtB,okDAAgB,MACd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;w0CAA2H,KAC3H;;;gWAAiE,IACjE,uYAAyC,IAG3C,8LAA2M,IAKjN,6EAAI,KAEJ,iHAAiC,KAC/B,0GAA6B,qDAAmB,MAChD,gHAAgC,KAE9B,2LAAkB,IAChB,gFAAO,uCAAK,MACZ,okDAAgB,MACd;;;;;;;;wBAAiJ;MAAhF;;wBAAiD;MAAlH,8/BAAiJ,KAC/I;;;;;;iOAAY,6CAAe,MAC3B;;;;;;oPAAsB,qCAAO,MAC7B;;;;;;oPAAsB,uCAAS,MAC/B;;;;;;oPAAsB,8CAAgB,MAGxC,2LAAuK,IAGzK,6kDAAiC,MAC/B;;;;;;;;;;;;;;;;;;;;;y6BAAuG,KACvG,+PAAwB,IAAC,iFAAQ,iDAAe,MAKpD,2LAAkB,IAChB,gFAAO,2CAAS,MAChB,okDAAgB,MACd;;;;;;;;wBAAqJ;MAAlF;;wBAAmD;MAAtH,8/BAAqJ,KACnJ;;;;;;iOAAY,6CAAe,MAC3B;;;;;;oPAAsB,qCAAO,MAC7B;;;;;;oPAAsB,uCAAS,MAC/B;;;;;;oPAAsB,8CAAgB,MAGxC,2LAA6K,IAG/K,olDAAiC,MAC/B;;;;;;;;;;;;;;;;;;;;;y6BAA2G,KAK/G,2LAAkB,IAChB,gFAAO,sCAAI,MACX,6kDAAgB,MACd;;;;;;;;wBAA2I;MAA7E;;wBAA8C;MAA5G,mgCAA2I,KACzI;;;;;;kOAAY,6CAAe,MAC3B;;;;;;qPAAsB,qCAAO,MAC7B;;;;;;qPAAsB,uCAAS,MAC/B;;;;;;qPAAsB,8CAAgB,MAGxC,2LAA8J,IAGhK,slDAAiC,MAC/B;;;;;;;;;;;;;;;;;;;;;26BAAiG,KAKrG,2LAAkB,IAChB,gFAAO,wCAAM,mFAAI,8CAAY,MAC3B,6kDAAgB,MACd;;;;;;;;wBAAiJ;MAAhF;;wBAAiD;MAAlH,mgCAAiJ,KAC/I;;;;;;kOAAY,6CAAe,MAC3B;;;;;;qPAAsB,qCAAO,MAC7B;;;;;;qPAAsB,uCAAS,MAC/B;;;;;;qPAAsB,8CAAgB,MAGxC,2LAAuK,IAGzK,slDAAiC,MAC/B;;;;;;;;;;;;;;;;;;;;;26BAAuG,KAK7G,2LAAkB,IAChB,gFAAO,wCAAM,mFAAI,6CAAW,MAC5B,6kDAAgB,MACd;;;;;;;;wBAA+I;MAA/E;;wBAAgD;MAAhH,mgCAA+I,KAC7I;;;;;;kOAAY,6CAAe,MAC3B;;;;;;qPAAsB,qCAAO,MAC7B;;;;;;qPAAsB,uCAAS,MAC/B;;;;;;qPAAsB,8CAAgB,MAGxC,2LAAoK,IAGtK,slDAAiC,MAC/B;;;;;;;;;;;;;;;;;;;;;26BAAqG,KAKzG,2LAAkB,IAChB,gFAAO,0CAAQ,mFAAI,+CAAa,MAChC,6kDAAgB,MACd;;;;;;;;wBAAiJ;MAAhF;;wBAAiD;MAAlH,mgCAAiJ,KAC/I;;;;;;kOAAY,6CAAe,MAC3B;;;;;;qPAAsB,qCAAO,MAC7B;;;;;;qPAAsB,uCAAS,MAC/B;;;;;;qPAAsB,8CAAgB,MAGxC,2LAAuK,IAGzK,slDAAiC,MAC/B;;;;;;;;;;;;;;;;;;;;;26BAAuG,KAK3G,2LAAkB,IAChB,gFAAO,4CAAU,mFAAI,mDAAiB,MACtC,6kDAAgB,MACd;;;;;;;;wBAAqJ;MAAlF;;wBAAmD;MAAtH,mgCAAqJ,KACnJ;;;;;;kOAAY,6CAAe,MAC3B;;;;;;qPAAsB,qCAAO,MAC7B;;;;;;qPAAsB,uCAAS,MAC/B;;;;;;qPAAsB,8CAAgB,MAGxC,2LAA6K,IAG/K,slDAAiC,MAC/B;;;;;;;;;;;;;;;;;;;;;26BAA4G,KAKhH,2LAAkB,IAChB,gFAAO,2CAAS,MAChB,6kDAAgB,MACd;;;;;;;;wBAAmJ;MAAjF;;wBAAkD;MAApH,mgCAAmJ,KACjJ;;;;;;kOAAY,6CAAe,MAC3B;;;;;;qPAAsB,qCAAO,MAC7B;;;;;;qPAAsB,uCAAS,MAC/B;;;;;;qPAAsB,8CAAgB,MAGxC,2LAA0K,IAG5K,slDAAiC,MAC/B;;;;;;;;;;;;;;;;;;;;;26BAAyG,KAK7G,2LAAkB,IAChB,gFAAO,4CAAU,mFAAI,kDAAgB,MACrC,6kDAAgB,MACd;;;;;;;;wBAAqJ;MAAlF;;wBAAmD;MAAtH,mgCAAqJ,KACnJ;;;;;;kOAAY,6CAAe,MAC3B;;;;;;qPAAsB,qCAAO,MAC7B;;;;;;qPAAsB,uCAAS,MAC/B;;;;;;qPAAsB,8CAAgB,MAGxC,2LAA6K,IAG/K,slDAAiC,MAC/B;;;;;;;;;;;;;;;;;;;;;26BAA4G,KAKhH,2LAAkB,IAChB,gFAAO,sCAAI,MACX,6kDAAgB,MACd;;;;;;;;wBAA2I;MAA7E;;wBAA8C;MAA5G,mgCAA2I,KACzI;;;;;;kOAAY,6CAAe,MAC3B;;;;;;qPAAsB,qCAAO,MAC7B;;;;;;qPAAsB,uCAAS,MAC/B;;;;;;qPAAsB,8CAAgB,MAGxC,2LAA8J,IAGhK,slDAAiC,MAC/B;;;;;;;;;;;;;;;;;;;;;26BAAuG,KAI3G,2LAAkB,IAChB,gFAAO,wCAAM,mFAAI,0CAAQ,MACzB,6kDAAgB,MACd;;;;;;;;wBAAiJ;MAAhF;;wBAAiD;MAAlH,mgCAAiJ,KAC/I;;;;;;kOAAY,6CAAe,MAC3B;;;;;;qPAAsB,qCAAO,MAC7B;;;;;;qPAAsB,uCAAS,MAC/B;;;;;;qPAAsB,8CAAgB,MAGxC,2LAAuK,IAGzK,slDAAiC,MAC/B;;;;;;;;;;;;;;;;;;;;;26BAAuG,KAK3G,2LAAkB,IAChB,gFAAO,4CAAU,MACjB,6kDAAgB,MACd;;;;;;;;wBAAkJ;MAAjF;;wBAAkD;MAAnH,mgCAAkJ,KAChJ;;;;;;kOAAY,6CAAe,MAC3B;;;;;;qPAAsB,qCAAO,MAC7B;;;;;;qPAAsB,uCAAS,MAC/B;;;;;;qPAAsB,8CAAgB,MAGxC,2LAAuK,IAGzK,slDAAiC,MAC/B;;;;;;;;;;;;;;;;;;;;;26BAAqG,KAKzG,2LAAkB,IAChB,gFAAO,yCAAO,MACd,6kDAAgB,MACd;;;;;;;;wBAAiJ;MAAhF;;wBAAiD;MAAlH,mgCAAiJ,KAC/I;;;;;;kOAAY,6CAAe,MAC3B;;;;;;qPAAsB,qCAAO,MAC7B;;;;;;qPAAsB,uCAAS,MAC/B;;;;;;qPAAsB,8CAAgB,MAGxC,2LAAuK,IAGzK,slDAAiC,MAC/B;;;;;;;;;;;;;;;;;;;;;+6BAAuG,KAK3G,6LAAkB,IAChB,iFAAO,yCAAO,MACd,+kDAAgB,MACd;;;;;;;;wBAAiJ;MAAhF;;wBAAiD;MAAlH,sgCAAiJ,KAC/I;;;;;;mOAAY,6CAAe,MAC3B;;;;;;sPAAsB,qCAAO,MAC7B;;;;;;sPAAsB,uCAAS,MAC/B;;;;;;sPAAsB,8CAAgB,MAGxC,4LAAuK,IAGzK,wlDAAiC,MAC/B;;;;;;;;;;;;;;;;;;;;;+6BAAuG,KAK3G,6LAAkB,IAChB,iFAAO,2CAAS,MAChB,+kDAAgB,MACd;;;;;;;;wBAA+I;MAA/E;;wBAAgD;MAAhH,sgCAA+I,KAC7I;;;;;;mOAAY,6CAAe,MAC3B;;;;;;sPAAsB,qCAAO,MAC7B;;;;;;sPAAsB,uCAAS,MAC/B;;;;;;sPAAsB,8CAAgB,MAGxC,4LAAoK,IAGtK,wlDAAiC,MAC/B;;;;;;;;;;;;;;;;;;;;;+6BAAqG,KAKzG,6LAAkB,IAChB,iFAAO,yCAAO,MACd,+kDAAgB,MACd;;;;;;;;wBAA+I;MAA/E;;wBAAgD;MAAhH,sgCAA+I,KAC7I;;;;;;mOAAY,6CAAe,MAC3B;;;;;;sPAAsB,qCAAO,MAC7B;;;;;;sPAAsB,uCAAS,MAC/B;;;;;;sPAAsB,8CAAgB,MAGxC,4LAAoK,IAGtK,wlDAAiC,MAC/B;;;;;;;;;;;;;;;;;;;;;+6BAAqG,KAKzG,6LAAkB,IAChB,iFAAO,uCAAK,MACZ,+kDAAgB,MACd;;;;;;;;wBAA+I;MAA/E;;wBAAgD;MAAhH,sgCAA+I,KAC7I;;;;;;mOAAY,6CAAe,MAC3B;;;;;;sPAAsB,qCAAO,MAC7B;;;;;;sPAAsB,uCAAS,MAC/B;;;;;;sPAAsB,8CAAgB,MAGxC,4LAAoK,IAGtK,wlDAAiC,MAC/B;;;;;;;;;;;;;;;;;;;;;+6BAAqG,KAIzG,6LAAkB,IAChB,iFAAO,yCAAO,MACd,+kDAAgB,MACd;;;;;;;;wBAAiJ;MAAhF;;wBAAiD;MAAlH,sgCAAiJ,KAC/I;;;;;;mOAAY,6CAAe,MAC3B;;;;;;sPAAsB,qCAAO,MAC7B;;;;;;sPAAsB,uCAAS,MAC/B;;;;;;sPAAsB,8CAAgB,MAGxC,4LAAuK,IAGzK,wlDAAiC,MAC/B;;;;;;;;;;;;;;;;;;;;;+6BAAuG,KAK3G,6LAAkB,IAChB,iFAAO,qCAAG,oFAAI,+DAA6B,MAC3C,+kDAAgB,MACd;;;;;;;;wBAA6I;MAA9E;;wBAA+C;MAA9G,sgCAA6I,KAC3I;;;;;;mOAAY,6CAAe,MAC3B;;;;;;sPAAsB,qCAAO,MAC7B;;;;;;sPAAsB,uCAAS,MAC/B;;;;;;sPAAsB,8CAAgB,MAGxC,4LAAiK,IAGnK,wlDAAiC,MAC/B;;;;;;;;;;;;;;;;;;;;;+6BAAmG,KAKvG,6LAAkB,IAChB,iFAAO,gDAAc,oFAAI,iEAA+B,MACxD,+kDAAgB,MACd;;;;;;;;wBAAiK;MAAxF;;wBAAyD;MAAlI,sgCAAiK,KAC/J;;;;;;mOAAY,6CAAe,MAC3B;;;;;;sPAAsB,qCAAO,MAC7B;;;;;;sPAAsB,uCAAS,MAC/B;;;;;;sPAAsB,8CAAgB,MAGxC,4LAA+L,IAGjM,wlDAAiC,MAC/B;;;;;;;;;;;;;;;;;;;;;+6BAAwH,KAOhI,8EAAI,KAEJ,gHAAiC,KAC/B,2GAA6B,kDAAgB,MAE7C,8EAAI,KAEJ,+GAAgC,KAC9B,iFAAO,4DAA0B,MACjC,kmDAA2C,MAEzC;;;;;;;;;;;;;;;;;;;;wBAAkK;MAAvD;;wBAAsD;MAAjK,y6BAAkK,KAClK,4LAAsL,iDA3elL,4CAAkC,EAAC,kFAA8E,IAAnI,YAC2G,EADzF,SAAkC,EAAC,SAA8E,GAMrD,oBAAgC,qBAAxG,aACwC,EADgC,UAAgC,GAU9E,8DAA0D,GAA1E,aAAmI,EAAnH,UAA0D,GAA1E,aAAmI,GACxH,oLAA6K,oBAAxL,aAAyL,EAA9K,UAA6K,GAOpK,uBAAY,EAAhC,aAAuF,EAAnE,UAAY,GAAC,yDAAqD,GAAtF,aAAuF,EAAtD,UAAqD,GAClE,yBAAc,EAAlC,aAAyF,EAArE,UAAc,GAAC,yDAAqD,GAAxF,aAAyF,EAAtD,UAAqD,GAG/E,qKAA8J,oBAAzK,aAA0K,EAA/J,UAA8J,GAMvJ,gCAA2B,GAA3C,aAAqG,EAArF,WAA2B,GAAC,6DAAwD,GAApG,aAAqG,EAAzD,WAAwD,GAApG,aAAqG,GACpE,gCAAiB,GAAlD,aAAmD,EAAlB,WAAiB,GAGvC,+KAAuK,oBAAlL,aAAmL,EAAxK,WAAuK,GAOtK,6DAAwD,GAApE,cAAkJ,EAAtI,WAAwD,GAAC,mCAA6B,EAAlG,cAAkJ,EAA7E,WAA6B,GAEpF,qBAA4C,qBAAxD,cAA+E,EAAnE,WAA4C,GAI/C,+KAAuK,oBAAlL,cAAmL,EAAxK,WAAuK,GAOtK,2DAAsD,GAAlE,cAA+F,EAAnF,WAAsD,GAAC,iCAA2B,EAA9F,cAA+F,EAA5B,WAA2B,GAEhF,qBAAqC,mBAAjD,cAA4E,EAAhE,WAAqC,GAIxC,yKAAiK,oBAA5K,cAA6K,EAAlK,WAAiK,GAO5J,iCAAgC,GAAhD,cAAyG,EAAzF,WAAgC,GAAC,4DAAuD,GAAxG,cAAyG,EAAxD,WAAuD,GAAxG,cAAyG,GACxE,iCAAsB,GAAvD,cAAwD,EAAvB,WAAsB,GAI9C,4KAAoK,oBAA/K,cAAgL,EAArK,WAAoK,GAM7J,iCAAyC,GAAzD,cAA2H,EAA3G,WAAyC,GAAC,qEAAgE,GAA1H,cAA2H,EAAjE,WAAgE,GAA1H,cAA2H,GAC1F,iCAA+B,GAAhE,cAAiE,EAAhC,WAA+B,GAIvD,uMAA+L,oBAA1M,cAA2M,EAAhM,WAA+L,GAc5L,yDAAoD,GAAhE,cAAiJ,EAArI,WAAoD,GAAmD,mCAA6B,EAAhJ,cAAiJ,EAA9B,WAA6B,GAElI,qBAAS,EAArB,cAAsB,EAAV,WAAS,GACT,qBAAS,EAArB,cAAsB,EAAV,WAAS,GACT,qBAAS,EAArB,cAAsB,EAAV,WAAS,GAGZ,mKAA2J,oBAAtK,cAAuK,EAA5J,WAA2J,GAItJ,+DAA0D,GAA1E,cAAuG,EAAvF,WAA0D,GAAC,+BAAyB,EAApG,cAAuG,EAA5B,WAAyB,GAC1F,yBAAa,EAAvB,cAAwB,EAAd,WAAa,GAQX,2DAAsD,GAAlE,cAAqJ,EAAzI,WAAsD,GAAqD,mCAA6B,EAApJ,cAAqJ,EAA9B,WAA6B,GAEtI,qBAAS,EAArB,cAAsB,EAAV,WAAS,GACT,qBAAS,EAArB,cAAsB,EAAV,WAAS,GACT,qBAAS,EAArB,cAAsB,EAAV,WAAS,GAGZ,yKAAiK,oBAA5K,cAA6K,EAAlK,WAAiK,GAI5J,iEAA4D,GAA5E,cAA2G,EAA3F,WAA4D,GAAC,iCAA2B,EAAxG,cAA2G,EAA9B,WAA2B,GAQ5F,sDAAiD,GAA7D,cAA2I,EAA/H,WAAiD,GAAgD,mCAA6B,EAA1I,cAA2I,EAA9B,WAA6B,GAE5H,qBAAS,EAArB,cAAsB,EAAV,WAAS,GACT,qBAAS,EAArB,cAAsB,EAAV,WAAS,GACT,qBAAS,EAArB,cAAsB,EAAV,WAAS,GAGZ,0JAAkJ,oBAA7J,cAA8J,EAAnJ,WAAkJ,GAI7I,4DAAuD,GAAvE,cAAiG,EAAjF,WAAuD,GAAC,4BAAsB,EAA9F,cAAiG,EAAzB,WAAsB,GAQhF,yDAAoD,GAAhE,cAAiJ,EAArI,WAAoD,GAAmD,mCAA6B,EAAhJ,cAAiJ,EAA9B,WAA6B,GAElI,qBAAS,EAArB,cAAsB,EAAV,WAAS,GACT,qBAAS,EAArB,cAAsB,EAAV,WAAS,GACT,qBAAS,EAArB,cAAsB,EAAV,WAAS,GAGZ,mKAA2J,oBAAtK,cAAuK,EAA5J,WAA2J,GAItJ,+DAA0D,GAA1E,cAAuG,EAAvF,WAA0D,GAAC,+BAAyB,EAApG,cAAuG,EAA5B,WAAyB,GAQ1F,wDAAmD,GAA/D,cAA+I,EAAnI,WAAmD,GAAkD,mCAA6B,EAA9I,cAA+I,EAA9B,WAA6B,GAEhI,qBAAS,EAArB,cAAsB,EAAV,WAAS,GACT,qBAAS,EAArB,cAAsB,EAAV,WAAS,GACT,qBAAS,EAArB,cAAsB,EAAV,WAAS,GAGZ,gKAAwJ,oBAAnK,cAAoK,EAAzJ,WAAwJ,GAInJ,8DAAyD,GAAzE,cAAqG,EAArF,WAAyD,GAAC,8BAAwB,EAAlG,cAAqG,EAA3B,WAAwB,GAQtF,yDAAoD,GAAhE,cAAiJ,EAArI,WAAoD,GAAmD,mCAA6B,EAAhJ,cAAiJ,EAA9B,WAA6B,GAElI,sBAAS,EAArB,cAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,cAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,cAAsB,EAAV,YAAS,GAGZ,oKAA2J,oBAAtK,cAAuK,EAA5J,YAA2J,GAItJ,gEAA0D,GAA1E,cAAuG,EAAvF,YAA0D,GAAC,gCAAyB,EAApG,cAAuG,EAA5B,YAAyB,GAQxF,4DAAsD,GAAlE,cAAqJ,EAAzI,YAAsD,GAAqD,oCAA6B,EAApJ,cAAqJ,EAA9B,YAA6B,GAEtI,sBAAS,EAArB,cAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,cAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,cAAsB,EAAV,YAAS,GAGZ,0KAAiK,oBAA5K,cAA6K,EAAlK,YAAiK,GAI5J,kEAA4D,GAA5E,cAA4G,EAA5F,YAA4D,GAAC,mCAA4B,EAAzG,cAA4G,EAA/B,YAA4B,GAQ7F,2DAAqD,GAAjE,cAAmJ,EAAvI,YAAqD,GAAoD,oCAA6B,EAAlJ,cAAmJ,EAA9B,YAA6B,GAEpI,sBAAS,EAArB,cAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,cAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,cAAsB,EAAV,YAAS,GAGZ,uKAA8J,oBAAzK,cAA0K,EAA/J,YAA8J,GAIzJ,iEAA2D,GAA3E,cAAyG,EAAzF,YAA2D,GAAC,iCAA0B,EAAtG,cAAyG,EAA7B,YAA0B,GAQ1F,4DAAsD,GAAlE,cAAqJ,EAAzI,YAAsD,GAAqD,oCAA6B,EAApJ,cAAqJ,EAA9B,YAA6B,GAEtI,sBAAS,EAArB,cAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,cAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,cAAsB,EAAV,YAAS,GAGZ,0KAAiK,oBAA5K,cAA6K,EAAlK,YAAiK,GAI5J,kEAA4D,GAA5E,cAA4G,EAA5F,YAA4D,GAAC,mCAA4B,EAAzG,cAA4G,EAA/B,YAA4B,GAQ7F,uDAAiD,GAA7D,cAA2I,EAA/H,YAAiD,GAAgD,oCAA6B,EAA1I,cAA2I,EAA9B,YAA6B,GAE5H,sBAAS,EAArB,cAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,cAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,cAAsB,EAAV,YAAS,GAGZ,2JAAkJ,oBAA7J,cAA8J,EAAnJ,YAAkJ,GAI7I,6DAAuD,GAAvE,cAAuG,EAAvF,YAAuD,GAAC,mCAA4B,EAApG,cAAuG,EAA/B,YAA4B,GAOxF,0DAAoD,GAAhE,cAAiJ,EAArI,YAAoD,GAAmD,oCAA6B,EAAhJ,cAAiJ,EAA9B,YAA6B,GAElI,sBAAS,EAArB,cAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,cAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,cAAsB,EAAV,YAAS,GAGZ,oKAA2J,oBAAtK,cAAuK,EAA5J,YAA2J,GAItJ,gEAA0D,GAA1E,cAAuG,EAAvF,YAA0D,GAAC,gCAAyB,EAApG,cAAuG,EAA5B,YAAyB,GAQxF,0DAAoD,GAAhE,cAAkJ,EAAtI,YAAoD,GAAoD,oCAA6B,EAAjJ,cAAkJ,EAA9B,YAA6B,GAEnI,sBAAS,EAArB,cAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,cAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,cAAsB,EAAV,YAAS,GAGZ,oKAA2J,oBAAtK,cAAuK,EAA5J,YAA2J,GAItJ,gEAA0D,GAA1E,cAAqG,EAArF,YAA0D,GAAC,gCAAyB,EAApG,cAAqG,EAA1B,YAAyB,GAQxF,0DAAoD,GAAhE,cAAiJ,EAArI,YAAoD,GAAmD,oCAA6B,EAAhJ,cAAiJ,EAA9B,YAA6B,GAElI,sBAAS,EAArB,cAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,cAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,cAAsB,EAAV,YAAS,GAGZ,oKAA2J,oBAAtK,cAAuK,EAA5J,YAA2J,GAItJ,gEAA0D,GAA1E,eAAuG,EAAvF,YAA0D,GAAC,gCAAyB,EAApG,eAAuG,EAA5B,YAAyB,GAQxF,0DAAoD,GAAhE,eAAiJ,EAArI,YAAoD,GAAmD,oCAA6B,EAAhJ,eAAiJ,EAA9B,YAA6B,GAElI,sBAAS,EAArB,eAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,eAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,eAAsB,EAAV,YAAS,GAGZ,oKAA2J,oBAAtK,eAAuK,EAA5J,YAA2J,GAItJ,gEAA0D,GAA1E,eAAuG,EAAvF,YAA0D,GAAC,gCAAyB,EAApG,eAAuG,EAA5B,YAAyB,GAQxF,yDAAmD,GAA/D,eAA+I,EAAnI,YAAmD,GAAkD,oCAA6B,EAA9I,eAA+I,EAA9B,YAA6B,GAEhI,sBAAS,EAArB,eAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,eAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,eAAsB,EAAV,YAAS,GAGZ,iKAAwJ,oBAAnK,eAAoK,EAAzJ,YAAwJ,GAInJ,+DAAyD,GAAzE,eAAqG,EAArF,YAAyD,GAAC,+BAAwB,EAAlG,eAAqG,EAA3B,YAAwB,GAQtF,yDAAmD,GAA/D,eAA+I,EAAnI,YAAmD,GAAkD,oCAA6B,EAA9I,eAA+I,EAA9B,YAA6B,GAEhI,sBAAS,EAArB,eAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,eAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,eAAsB,EAAV,YAAS,GAGZ,iKAAwJ,oBAAnK,eAAoK,EAAzJ,YAAwJ,GAInJ,+DAAyD,GAAzE,eAAqG,EAArF,YAAyD,GAAC,+BAAwB,EAAlG,eAAqG,EAA3B,YAAwB,GAQtF,yDAAmD,GAA/D,eAA+I,EAAnI,YAAmD,GAAkD,oCAA6B,EAA9I,eAA+I,EAA9B,YAA6B,GAEhI,sBAAS,EAArB,eAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,eAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,eAAsB,EAAV,YAAS,GAGZ,iKAAwJ,oBAAnK,eAAoK,EAAzJ,YAAwJ,GAInJ,+DAAyD,GAAzE,eAAqG,EAArF,YAAyD,GAAC,+BAAwB,EAAlG,eAAqG,EAA3B,YAAwB,GAOtF,0DAAoD,GAAhE,eAAiJ,EAArI,YAAoD,GAAmD,oCAA6B,EAAhJ,eAAiJ,EAA9B,YAA6B,GAElI,sBAAS,EAArB,eAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,eAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,eAAsB,EAAV,YAAS,GAGZ,oKAA2J,oBAAtK,eAAuK,EAA5J,YAA2J,GAItJ,gEAA0D,GAA1E,eAAuG,EAAvF,YAA0D,GAAC,gCAAyB,EAApG,eAAuG,EAA5B,YAAyB,GAQxF,wDAAkD,GAA9D,eAA6I,EAAjI,YAAkD,GAAiD,oCAA6B,EAA5I,eAA6I,EAA9B,YAA6B,GAE9H,sBAAS,EAArB,eAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,eAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,eAAsB,EAAV,YAAS,GAGZ,8JAAqJ,oBAAhK,eAAiK,EAAtJ,YAAqJ,GAIhJ,8DAAwD,GAAxE,eAAmG,EAAnF,YAAwD,GAAC,8BAAuB,EAAhG,eAAmG,EAA1B,YAAuB,GAQpF,kEAA4D,GAAxE,eAAiK,EAArJ,YAA4D,GAA2D,oCAA6B,EAAhK,eAAiK,EAA9B,YAA6B,GAElJ,sBAAS,EAArB,eAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,eAAsB,EAAV,YAAS,GACT,sBAAS,EAArB,eAAsB,EAAV,YAAS,GAGZ,4LAAmL,oBAA9L,eAA+L,EAApL,YAAmL,GAI9K,wEAAkE,GAAlF,eAAwH,EAAxG,YAAkE,GAAC,yCAAkC,EAArH,eAAwH,EAArC,YAAkC,GAkBtE,+DAAyD,GAA1G,eAAkK,EAAjH,YAAyD,GAAvF,oCAA6B,EAAhD,eAAkK,EAA/I,YAA6B,GACrC,mLAA0K,oBAArL,eAAsL,EAA3K,YAA0K,2BAvejM,6FAA2B,GAEvB,waACwC,GAQhC,k/CAAgB,IACd,o/BAAmI,IAQnI,ubAAuF,GACvF,ubAAyF,GAQ3F,k/CAAgB,IACd,qiDAAqG,IACrG,qXAAmD,GASrD,qjDAAgB,IACd,o6CAAkJ,IAChJ,ifAAY,GAWhB,qjDAAgB,IACd,o6CAA+F,IAC7F,ifAAY,GAWhB,qjDAAgB,IACd,klDAAyG,IACzG,4XAAwD,GAS1D,qjDAAgB,IACd,klDAA2H,IAC3H,4XAAiE,GAiBnE,qjDAAgB,IACd,o6CAAiJ,IAC/I,ifAAY,GACZ,ifAAsB,GACtB,ifAAsB,GACtB,ifAAsB,GAM1B,qjDAAiC,IAC/B,siCAAuG,IACvG,yKAAwB,GAO1B,qjDAAgB,IACd,o6CAAqJ,IACnJ,ifAAY,GACZ,ifAAsB,GACtB,ifAAsB,GACtB,ifAAsB,GAM1B,qjDAAiC,IAC/B,siCAA2G,IAO7G,qjDAAgB,IACd,o6CAA2I,IACzI,ifAAY,GACZ,ifAAsB,GACtB,ifAAsB,GACtB,ifAAsB,GAM1B,qjDAAiC,IAC/B,siCAAiG,IAOjG,qjDAAgB,IACd,o6CAAiJ,IAC/I,ifAAY,GACZ,ifAAsB,GACtB,ifAAsB,GACtB,ifAAsB,GAM1B,qjDAAiC,IAC/B,siCAAuG,IAO3G,qjDAAgB,IACd,o6CAA+I,IAC7I,ifAAY,GACZ,ifAAsB,GACtB,ifAAsB,GACtB,ifAAsB,GAM1B,qjDAAiC,IAC/B,siCAAqG,IAOvG,qjDAAgB,IACd,o6CAAiJ,IAC/I,ufAAY,GACZ,igBAAsB,GACtB,igBAAsB,GACtB,igBAAsB,GAM1B,imDAAiC,IAC/B,skCAAuG,IAOzG,imDAAgB,IACd,g9CAAqJ,IACnJ,igBAAY,GACZ,igBAAsB,GACtB,igBAAsB,GACtB,igBAAsB,GAM1B,imDAAiC,IAC/B,skCAA4G,IAO9G,imDAAgB,IACd,g9CAAmJ,IACjJ,igBAAY,GACZ,igBAAsB,GACtB,igBAAsB,GACtB,igBAAsB,GAM1B,imDAAiC,IAC/B,skCAAyG,IAO3G,imDAAgB,IACd,g9CAAqJ,IACnJ,igBAAY,GACZ,igBAAsB,GACtB,igBAAsB,GACtB,igBAAsB,GAM1B,imDAAiC,IAC/B,skCAA4G,IAO9G,imDAAgB,IACd,g9CAA2I,IACzI,igBAAY,GACZ,igBAAsB,GACtB,igBAAsB,GACtB,igBAAsB,GAM1B,imDAAiC,IAC/B,skCAAuG,IAMzG,imDAAgB,IACd,g9CAAiJ,IAC/I,igBAAY,GACZ,igBAAsB,GACtB,igBAAsB,GACtB,igBAAsB,GAM1B,imDAAiC,IAC/B,skCAAuG,IAOzG,imDAAgB,IACd,g9CAAkJ,IAChJ,igBAAY,GACZ,igBAAsB,GACtB,igBAAsB,GACtB,igBAAsB,GAM1B,imDAAiC,IAC/B,skCAAqG,IAOvG,imDAAgB,IACd,g9CAAiJ,IAC/I,igBAAY,GACZ,igBAAsB,GACtB,igBAAsB,GACtB,igBAAsB,GAM1B,imDAAiC,IAC/B,ulCAAuG,IAOzG,wnDAAgB,IACd,w+CAAiJ,IAC/I,0gBAAY,GACZ,0gBAAsB,GACtB,0gBAAsB,GACtB,0gBAAsB,GAM1B,wnDAAiC,IAC/B,wlCAAuG,IAOzG,wnDAAgB,IACd,w+CAA+I,IAC7I,0gBAAY,GACZ,0gBAAsB,GACtB,0gBAAsB,GACtB,0gBAAsB,GAM1B,wnDAAiC,IAC/B,wlCAAqG,IAOvG,wnDAAgB,IACd,w+CAA+I,IAC7I,0gBAAY,GACZ,0gBAAsB,GACtB,0gBAAsB,GACtB,0gBAAsB,GAM1B,wnDAAiC,IAC/B,wlCAAqG,IAOvG,wnDAAgB,IACd,w+CAA+I,IAC7I,0gBAAY,GACZ,0gBAAsB,GACtB,0gBAAsB,GACtB,0gBAAsB,GAM1B,wnDAAiC,IAC/B,wlCAAqG,IAMvG,wnDAAgB,IACd,w+CAAiJ,IAC/I,0gBAAY,GACZ,0gBAAsB,GACtB,0gBAAsB,GACtB,0gBAAsB,GAM1B,wnDAAiC,IAC/B,wlCAAuG,IAOzG,wnDAAgB,IACd,w+CAA6I,IAC3I,0gBAAY,GACZ,0gBAAsB,GACtB,0gBAAsB,GACtB,0gBAAsB,GAM1B,wnDAAiC,IAC/B,wlCAAmG,IAOrG,wnDAAgB,IACd,w+CAAiK,IAC/J,0gBAAY,GACZ,0gBAAsB,GACtB,0gBAAsB,GACtB,0gBAAsB,GAM1B,wnDAAiC,IAC/B,wlCAAwH,IAgB5H,wnDAA2C,IAEzC,wlCAAkK;kHA1flL,4QAAkB,IAGlB,0MAA8C,IAE5C,2LAA0G,IAW1G,2LAC2G,IAyf7G,8XAAmC,MACjC,yUAAqC,oCAAM,MAC3C,kOAA2E,YAArC;;wBAAoC;MAA1E,oLAA2E,sCAAQ,MAGrF,6NAAkB,iDA/gBlB,YAAkB,GAKqC,iEAAoD,GAAzG,YAA0G,EAArD,SAAoD,GAYvG,2HAAwG,IAD1G,YAC2G,EAAzG,SAAwG,GA8f5G,aAAkB,2BALlB,0JAAmC,GACjC,8JAAqC,GACrC,8JAA2E;;;;;;;;;;;;;;;;;;;;AC5gB7E,yEAAmF;AACnF,4EAEwB;AAMxB,qFAA6E;AAC7E,4KAAqF;AAGrF,kIAA8F;AAG9F,gFAAgF;AAChF,6FAA6F;AAC7F,iGAAiG;AACjG,2BAA2B;AAC3B,4DAAkC;AAClC,gDAAgD;AAChD,6DAAkD;AAElD,MAAM,MAAM,GAAG,gBAAa,IAAI,OAAO,CAAC;AAK3B,kBAAU,GAAG;IACxB,KAAK,EAAE;QACL,SAAS,EAAE,IAAI;KAChB;IACD,OAAO,EAAE;QACP,SAAS,EAAE,IAAI;QACf,cAAc,EAAE,UAAU;QAC1B,aAAa,EAAE,IAAI;QACnB,kBAAkB,EAAE,WAAW;KAChC;CACF,CAAC;WAWyC,iDAAuB;;AATlE,MAaa,0BAA0B;IAqBrC,YAAmB,EAAe,EAAS,WAA2B,EAC7D,MAAc,EAAS,WAA+B,EAAU,QAAkB,EAClF,MAAqB,EAAS,OAAoB,EAAS,MAAiB,EAC5E,cAA8B;QAHpB,OAAE,GAAF,EAAE,CAAa;QAAS,gBAAW,GAAX,WAAW,CAAgB;QAC7D,WAAM,GAAN,MAAM,CAAQ;QAAS,gBAAW,GAAX,WAAW,CAAoB;QAAU,aAAQ,GAAR,QAAQ,CAAU;QAClF,WAAM,GAAN,MAAM,CAAe;QAAS,YAAO,GAAP,OAAO,CAAa;QAAS,WAAM,GAAN,MAAM,CAAW;QAC5E,mBAAc,GAAd,cAAc,CAAgB;QAnBhC,aAAQ,GAAQ;YACrB,GAAG,EAAE,aAAa;YAClB,MAAM,EAAC,qBAAqB;YAC5B,UAAU,EAAE,QAAQ;SACrB,CAAC;QAIK,cAAS,GAAG,EAAE,CAAC;QAqOf,gBAAW,GAAW,CAAC,CAAC;QAxN7B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC;QAErD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;QACvC,IAAI,CAAC,UAAU,CAAC,YAAY,GAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;QACzE,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAExB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACtC,EAAE,EAAoB,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YAC5D,WAAW,EAAW,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3E,MAAM,EAAgB,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,SAAS,EAAa,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,SAAS,EAAa,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,OAAO,EAAe,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,QAAQ,EAAc,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,iBAAiB,EAAK,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YAEjD,KAAK,EAAiB,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,WAAW,EAAW,CAAC,EAAE,EAAE,EAAE,CAAC;YAC9B,OAAO,EAAe,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,aAAa,EAAS,CAAC,EAAE,EAAE,EAAE,CAAC;YAC9B,EAAE,EAAoB,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,QAAQ,EAAc,CAAC,EAAE,EAAE,EAAE,CAAC;YAC9B,KAAK,EAAiB,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,WAAW,EAAW,CAAC,EAAE,EAAE,EAAE,CAAC;YAC9B,IAAI,EAAkB,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,UAAU,EAAY,CAAC,EAAE,EAAE,EAAE,CAAC;YAC9B,KAAK,EAAiB,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,WAAW,EAAW,CAAC,EAAE,EAAE,EAAE,CAAC;YAC9B,OAAO,EAAe,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,aAAa,EAAS,CAAC,EAAE,EAAE,EAAE,CAAC;YAC9B,MAAM,EAAgB,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,YAAY,EAAU,CAAC,EAAE,EAAE,EAAE,CAAC;YAC9B,OAAO,EAAe,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,aAAa,EAAS,CAAC,EAAE,EAAE,EAAE,CAAC;YAC9B,EAAE,EAAoB,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,QAAQ,EAAc,CAAC,EAAE,EAAE,EAAE,CAAC;YAC9B,KAAK,EAAiB,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,WAAW,EAAW,CAAC,EAAE,EAAE,EAAE,CAAC;YAC9B,KAAK,EAAiB,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,WAAW,EAAW,CAAC,EAAE,EAAE,EAAE,CAAC;YAC9B,KAAK,EAAiB,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,WAAW,EAAW,CAAC,EAAE,EAAE,EAAE,CAAC;YAC9B,KAAK,EAAiB,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,WAAW,EAAW,CAAC,EAAE,EAAE,EAAE,CAAC;YAC9B,IAAI,EAAkB,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,UAAU,EAAY,CAAC,EAAE,EAAE,EAAE,CAAC;YAC9B,IAAI,EAAkB,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,UAAU,EAAY,CAAC,EAAE,EAAE,EAAE,CAAC;YAC9B,IAAI,EAAkB,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,UAAU,EAAY,CAAC,EAAE,EAAE,EAAE,CAAC;YAC9B,KAAK,EAAiB,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,WAAW,EAAW,CAAC,EAAE,EAAE,EAAE,CAAC;YAC9B,GAAG,EAAmB,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,SAAS,EAAa,CAAC,EAAE,EAAE,EAAE,CAAC;YAC9B,aAAa,EAAS,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,mBAAmB,EAAG,CAAC,EAAE,EAAE,EAAE,CAAC;YAE9B,UAAU,EAAY,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjD,cAAc,EAAQ,CAAC,EAAE,EAAE,EAAE,CAAC;YAC9B,eAAe,EAAO,CAAC,EAAE,EAAE,EAAE,CAAC;YAC9B,MAAM,EAAgB,CAAC,CAAC,EAAE,EAAE,CAAC;YAC7B,WAAW,EAAW,CAAC,SAAS,EAAE,EAAE,CAAC;YACrC,QAAQ,EAAc,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,GAAG,EAAE,EAAE,CAAC;SAC7D,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,gBAAgB;QACd,IAAI,IAAI,GAAG;YACT,QAAQ,EAAE,wBAAwB;YAClC,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ;SAClC;QACD,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAClE,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,QAAQ,CAAC,GAAG,CAAC;QACzC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW,CAAC,QAAgB;QAC1B,IAAI,IAAI,GAAG;YACT,QAAQ,EAAE,mBAAmB;YAC7B,WAAW,EAAE;gBACT,YAAY,EAAE,QAAQ;aACzB;YACD,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ;SAClC;QACD,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;YACpE,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC;QACvC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;YACrC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC;YAChD,IAAI,cAAc,GAAQ,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC;YAE/C,IAAI,CAAC,SAAS,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;YAC1C,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;YAE9C,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;YAC1F,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;YAChF,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;YACtF,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;YAElF,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;YAE1F,gBAAgB;YAChB,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;YAC7G,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;YAC3G,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,iBAAiB,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,iBAAiB,EAAE,YAAY,CAAC,CAAC;YAC7H,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;YAEnG,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YAC9E,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;YAC1F,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;YAClF,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC;YAC9F,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YACxE,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;YACpF,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YAC9E,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;YAC1F,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YAC5E,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;YACxF,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YAC9E,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;YAC1F,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;YAClF,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC;YAC9F,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;YAChF,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;YAC5F,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;YAClF,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC;YAC9F,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YACxE,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;YACpF,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YAC9E,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;YAC1F,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YAC9E,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;YAC1F,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YAC9E,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;YAC1F,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YAC9E,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;YAC1F,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YAC9E,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;YAC1F,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YAC5E,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;YACxF,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YAC5E,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;YACxF,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YAC5E,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;YACxF,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YAC9E,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;YAC1F,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAC1E,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;YACtF,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC;YAC9F,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,cAAc,GAAG,GAAG,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC;YAC/I,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;QAC1F,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wBAAwB;QACtB,IAAI,CAAM,CAAC;QACX,KAAK,CAAC,IAAI,IAAI,CAAC,kBAAkB,CAAC,QAAQ,EAAE;YAC1C,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,aAAa,EAAE,CAAC;SACrD;QAED,IAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE;YAChC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;YACzH,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;YACvH,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,iBAAiB,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,iBAAiB,EAAE,YAAY,CAAC,CAAC;YACzI,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;YAE/G,gDAAgD;YAChD,MAAM,aAAa,GAAG,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,mBAAmB,CAAC,KAAK,CAAC;YACjF,MAAM,iBAAiB,GAAG,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACnD,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;YACpF,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;YACrF,OAAO,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,mBAAmB,CAAC;YAEzD,IAAI,IAAI,GAAQ;gBACd,QAAQ,EAAG,oBAAoB;gBAC/B,MAAM,EAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK;gBACtC,WAAW,EAAE,CAAC,WAAW,EAAC,SAAS,CAAC;gBACpC,OAAO,EAAG,IAAI,CAAC,UAAU,CAAC,QAAQ;aACnC;YAED,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,iBAAiB,EAAC,IAAI,CAAC,CAAC,SAAS,CAAC,QAAQ,GAAE;gBACvE,IAAG,QAAQ,CAAC,MAAM,GAAC,SAAS,EAAE;oBAC5B,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;oBAC/B,gBAAgB;oBAChB,IAAI,IAAI,GAAQ;wBACd,KAAK,EAAE,OAAO;wBACd,IAAI,EAAE;4BACJ,MAAM,EAAE,SAAS;4BACjB,OAAO,EAAE,uBAAuB;4BAChC,OAAO,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE;4BACvB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;yBACtB;qBACF;oBACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;iBACvB;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,UAAU,CAAC,IAAI;QACb,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yCAAkB,EAAE,IAAI,CAAC,CAAC;QAC5D,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC9C,QAAO,MAAM,EAAE;gBACb,KAAK,IAAI;oBACP,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC;oBAC7C,MAAM;aACT;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,UAAU,CAAC,MAAc;QACvB,QAAQ,MAAM,EAAE;YACd,KAAK,SAAS;gBACZ,IAAI,IAAI,CAAC,WAAW,IAAI,CAAC,EAAE;oBACzB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;iBAC9C;qBAAM;oBACL,IAAI,CAAC,WAAW,EAAE,CAAC;iBACpB;gBACD,MAAM;YACR,KAAK,MAAM;gBACT,IAAI,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACjD,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;iBACtB;qBAAM;oBACL,IAAI,CAAC,WAAW,EAAE,CAAC;iBACpB;gBACD,MAAM;SACT;IACH,CAAC;IAED,YAAY,CAAC,IAAS,EAAE,GAAQ;QAC9B,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,eAAe,EAAE,CAAC;IACvC,CAAC;CAEF;AAvRD,gEAuRC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+DChUD,sMAAyC,IACrC,wGAA6B,KAE3B,2LAA+B,IAC7B,sFAAW,gDAAc,MACzB,sFAAW,qDAAmB,MAEhC,0EAAG,wGAAiE;;;;;;;;;;;;;;;;;;;;ACP1E,yEAAkD;AAElD,MAKa,oBAAoB;IAE/B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;AAZD,oDAYC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+DCdD,oeAA4E,GAAlC,wBAAiC,KAA3E,2IAA4E,MACxE,oMAAyC,IACvC;;;2LAAiE,GAAtC,aAAqC,IAC9D,uHAA2C,KAG7C,0OAAqE,YAA5C;;wBAAwB;MAAjD,sLAAqE,uGAA0B,wCAAM,MACrG,ubAA+E,IAC3E,2PAAc,IACV;;;8NAA+E,GAApC,aAAmC,GAA9E,6gBAA+E,2CAAW,MAC1F;;;8NAAuF,GAAtE,aAA2C,GAA5D,+gBAAuF,+CAAe,MACtG;;;+NAAuF,GAAtE,aAA2C,GAA5D,khBAAuF,+CAAe,MACtG;;;+NAAqF,GAApE,aAAyC,GAA1D,khBAAqF,6CAAa,MAClG;;;+NAAsF,GAArE,aAA0C,GAA3D,khBAAsF,8CAAc,MACpG;;;+NAA8F,GAA7E,aAAkD,GAAnE,khBAA8F,gDAAgB,MAC9G;;;+NAAwF,GAAvE,aAA4C,GAA7D,khBAAwF,oDAAoB,MAKpH,0MAA0C,IACxC,weAA6B,KAC3B;;;;;;;;;qOAAiE,GAA3C,cAA0C,GAAhE,gJAAiE,IAC/D,yXAAU,4CAAc,MAAW,4CACrC,MAEA;;;;;;;;;qOAAiF,GAA3D,cAA0D,GAAhF,gJAAiF,IAC/E,yXAAU,qCAAO,MAAW,2CAC9B,MAEA;;;;;wBAAyC;MAAnB;;wBAAkB;MAAxC,oNAAyC,IAAC,yXAAU,gDAAkB,MAAW,kCAAQ,MAE3F,oGAAuB,4CAA8C,MACrE;;;;;;;;;uaAAsD,IACpD,qGAA2B,KACzB,4XAAU,4CAAc,MACxB,uGAA0B,uDAE1B,mDAtCC,sCAA4B,EAAC,iCAAiC,YAA3E,YAA4E,EAA/D,SAA4B,EAAC,SAAiC,GAE1C,iDAAqC,GAAhE,YAAiE,EAAtC,SAAqC,GAK9C,2BAAiB,EAAE,kDAAyC,GAA9E,aAA+E,EAA7D,SAAiB,EAAE,SAAyC,GAE3B,kDAAmC,GAA9E,aAA+E,EAApC,UAAmC,GAA7D,yBAAyB,EAA1C,aAA+E,EAA9D,UAAyB,GACzB,0DAA2C,GAA5D,aAAuF,EAAtE,UAA2C,GAAC,yBAAyB,EAAtF,aAAuF,EAA1B,UAAyB,GACrE,0DAA2C,GAA5D,aAAuF,EAAtE,UAA2C,GAAC,yBAAyB,EAAtF,aAAuF,EAA1B,UAAyB,GACrE,wDAAyC,GAA1D,aAAqF,EAApE,UAAyC,GAAC,yBAAyB,EAApF,aAAqF,EAA1B,UAAyB,GACnE,yDAA0C,GAA3D,aAAsF,EAArE,UAA0C,GAAC,yBAAyB,EAArF,aAAsF,EAA1B,UAAyB,GACpE,iEAAkD,GAAnE,aAA8F,EAA7E,UAAkD,GAAC,yBAAyB,EAA7F,aAA8F,EAA1B,UAAyB,GAC5E,2DAA4C,GAA7D,aAAwF,EAAvE,UAA4C,GAAC,yBAAyB,EAAvF,aAAwF,EAA1B,UAAyB,GAM7F,cAA6B,GACL,0DAA0C,GAAhE,cAAiE,EAA3C,UAA0C,GAC9D,cAAU,GAGU,0EAA0D,GAAhF,cAAiF,EAA3D,UAA0D,GAC9E,cAAU,GAG8B,cAAU,GAG9B,gCAA6B,GAArD,cAAsD,EAA9B,UAA6B,GAEjD,cAAU,mDAnCtB,wJAA4E,GAMtE,8JAAqE,GAG7D,qRAA+E,GAC/E,uRAAuF,GACvF,uRAAuF,GACvF,uRAAqF,GACrF,uRAAsF,GACtF,uRAA8F,GAC9F,uRAAwF,GAO5F,iYAAiE,GAC/D,6NAAU,GAGZ,iYAAiF,GAC/E,6NAAU,GAGZ,iYAAyC,GAAC,6NAAU,GAE/B,yHAA8C,GACrE,uOAAsD,GAElD,6NAAU;;;;;;;;;;;;;;;;;;;;ACnCtB,yEAAgE;AAEhE,+EAAyD;AAIzD,MAMa,oBAAoB;IAO/B,YAAmB,OAAsB,EAAS,MAAc,EAAS,cAA8B;QAApF,YAAO,GAAP,OAAO,CAAe;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,mBAAc,GAAd,cAAc,CAAgB;QALvG,WAAM,GAAY,IAAI,CAAC;QAChB,cAAS,GAAQ,EAAE,CAAC;QACpB,WAAM,GAAY,IAAI,CAAC;QAiC7B,iBAAiB;QACjB,aAAQ,GAAY,KAAK,CAAC;QA9BzB,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACpB,IAAI,OAAO,GAAQ,EAAE,CAAC;QACtB,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;QAChC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QAClD,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IAC7C,CAAC;IAED,QAAQ;QACN,mBAAmB;QACnB,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,CAAC;IACzC,CAAC;IAED,gCAAgC;IAChC,MAAM;QACJ,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAChC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QACpC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;QACzB,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QACtC,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;IACD,8BAA8B;IAE9B,uCAAuC;IACvC,YAAY;QACV,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;IAE7B,CAAC;CAUF;AAnDD,oDAmDC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2DC7BO,mMACwE,mEACrC,iCAFnC,0DACwE;2DAQxE,oMACuE,4DAC3C,iCAF5B,0DACuE;2DAQvE,oMACqE,yDAC5C,iCAFzB,0DACqE;2DAEnE,oMAC6H,oDAC3G,iCAFlB,0DAC6H;2DAW/H,oMACqE,qEAChC,iCAFrC,0DACqE;2DAerE,oMAC4H,iEAC3F,iCAFjC,0DAC4H;2DAM5H,oMAC0I,0DAChH,iCAF1B,0DAC0I;2DAZ5I,8EAAkC,KAClC,4nDAAqD,MACnD;;;;;;;;;;;;;;;;;;;;;u6BACkE,KAClE,+KAC4H,IAG9H,8nDAAqD,MACnD;;;;;;;;;;;;;;;;;;;;;u6BACyE,KACzE,+KAC0I,iDAXzG,uBAAiB,EAApD,YAAqD,EAAlB,UAAiB,GAEhD,mEAA+D,GADjE,aACkE,EAAhE,UAA+D,GADjD,2BAAsB,EAAC,2BAAe,EAAtD,aACkE,EADlD,UAAsB,EAAC,UAAe,GAGpD,kIAAyH,YAD3H,aAC4H,EAA1H,UAAyH,GAG1F,uBAAiB,EAApD,aAAqD,EAAlB,UAAiB,GAEhD,0EAAsE,GADxE,aACyE,EAAvE,UAAsE,GADxD,mCAA8B,EAAC,2BAAe,EAA9D,aACyE,EADzD,UAA8B,EAAC,UAAe,GAG5D,gJAAuI,YADzI,aAC0I,EAAxI,UAAuI,2BAX3I,u8CAAqD,IACnD,o/BACkE,IAKpE,k/CAAqD,IACnD,o/BACyE;2DAiBzE,6EAAiC,KAC/B,oOAAiE,YAA3B;;wBAAwB;MAA9D,uLAAiE,+CAAiB,iCAAlF,2JAAiE;wGApG3E,4QAAkB,IAClB,+QAAgC,IAEhC,kMAAwC,uCAExC,MAGA,kGAAyB,KACvB,oGAAwB,KACtB;;;sLAAuC,GAApC,aAAmC,IAAC,8CAAiB,MAAI,oCAC5D;;;sLAA8C,GAA3C,aAA0C,IAAC,iDAAoB,MAAI,0CAExE,MAGF,yQAA2B,IAGzB,qMAAuC,IACrC;;;;;wBACuF;MAA5C;;wBAA2C;MADtF,mZACuF,IAErF,2mDAAkC,MAChC,uJAAW,iDAAgB,MAC3B;;;;;;;;;;;;;;;;;;;;wBACgE;MAA9D;;wBAA6D;MAD/D,44BACgE,KAChE,+KACwE,IAI1E,mnDAAkC,MAChC,yJAAW,gDAAe,MAC1B;;;;;;;;;;;;;;;;;;;;wBAC+D;MAA7D;;wBAA4D;MAD9D,84BAC+D,KAC/D,+KACuE,IAIzE,mnDAAkC,MAChC,yJAAW,8CAAa,MACxB;;;;;;;;;;;;;;;;;;;;wBAC4D;MAA1D;;wBAAyD;MAD3D,84BAC4D,KAC5D,gLACqE,IAEnE,gLAC6H,IAOjI,qnDAAkC,MAChC,2JAAW,uCAAM,MACjB;;;;;;;;;;;;;;;;;;;;wBAC4D;MAA1D;;wBAAyD;MAD3D,k5BAC4D,KAC5D,gLACqE,IAIvE,gkDAAgB,MACd,2JAAW,qCAAI,MACf;;;;;;;;;;;;;;;;;;;;;86BAA4F,KAC5F;;;2XAA2D,IAC3D,uXAA0B,IAG5B,mLAAkC,IAiBlC,osCAAoF,oCAAM,MAM1F,wGAA0B,KACxB,sOAAmE,YAA7B;;wBAA4B;MAAlE,yLAAmE,mCAAK,MACxE,kVAAqC,oCAAM,MAC3C,mVAAuC,oCAA0B,MACjE,mLAAiC,IAWzC,+NAAkB,iDA9GlB,YAAkB,GAUX,iDAAmC,GAAtC,aAAuC,EAApC,SAAmC,GACnC,wDAA0C,GAA7C,aAA8C,EAA3C,SAA0C,GAU3C,oBAAwC,6BAD1C,aACuF,EAArF,UAAwC,GAExB,uBAAiB,EAAjC,aAAkC,EAAlB,UAAiB,GAEU,oEAAgE,GAAzG,aACgE,EADvB,UAAgE,GAAzF,6BAAwB,EAAxC,aACgE,EADhD,UAAwB,GAE7B,sMAC4D,oBADvE,aACwE,EAD7D,UAC4D,GAIzD,uBAAiB,EAAjC,aAAkC,EAAlB,UAAiB,GAES,mEAA+D,GAAvG,aAC+D,EADvB,UAA+D,GAAvF,6BAAuB,EAAvC,aAC+D,EAD/C,WAAuB,GAE5B,oMAC2D,oBADtE,aACuE,EAD5D,WAC2D,GAIxD,wBAAiB,EAAjC,aAAkC,EAAlB,WAAiB,GAEa,iEAA4D,GAAxG,aAC4D,EADhB,WAA4D,GAAxF,iCAA2B,EAA3C,aAC4D,EAD5C,WAA2B,GAEhC,2LACyD,oBADpE,cACqE,EAD1D,WACyD,GAGlE,8HAA4H,oBAD5H,cAC6H,EAA7H,WAA4H,GAOhH,wBAAiB,EAAjC,cAAkC,EAAlB,WAAiB,GAEK,iEAA4D,GAAhG,cAC4D,EADxB,WAA4D,GAAhF,yBAAmB,EAAnC,cAC4D,EAD5C,WAAmB,GAExB,2LACyD,oBADpE,cACqE,EAD1D,WACyD,GAM/B,iCAA0B,GAAxD,qBAAoB,aAAwD,oBAAQ,EAA3F,cAA4F,EAAvD,WAA0B,EAAxD,WAAoB,EAAwD,kCAAQ,EAA3B,wBAAkB,EAA3E,qBAAoB,aAA3B,cAA4F,EAAT,WAAQ,EAA3B,WAAkB,EAA3E,WAAoB,GACM,iCAAgB,GAAC,oBAAQ,EAA1D,cAA2D,EAA1B,WAAgB,EAAC,WAAQ,GAI9C,sBAAmB,YAAjC,cAAkC,EAApB,WAAmB,GAiB2C,oBAAO,EAAnF,cAAoF,EAAR,WAAO,GAArE,kEAA6D,GAA3E,cAAoF,EAAtE,WAA6D,GAU3D,qBAAkB,YAAhC,cAAiC,EAAnB,WAAkB,GAWxC,cAAkB,mDA7GlB,6FAAgC,GAEQ,4DAExC,GAKI,iHAAuC,GACvC,iHAA8C,GAAwB,0DAExE,GAGF,+FAA2B,GAIvB,ubACuF,GAErF,k/CAAkC,IAEhC,o/BACgE,IAMlE,k/CAAkC,IAEhC,o/BAC+D,IAMjE,8hDAAkC,IAEhC,ohCAC4D,IAY9D,qjDAAkC,IAEhC,siCAC4D,IAM9D,qjDAAgB,IAEd,mpCAA4F,IAC5F,4XAA2D,GAqB7D,63BAAoF,IAOlF,yKAAmE,GACnE,yKAAqC,GACrC,yKAAuC,yEAA0B;;;;;;;;;mECvFzD,mMACiD,2DACpB,iCAF7B,0DACiD;mEAMjD,oMACkH,0DACtF,iCAF5B,0DACkH;mEAnBlI,yQAA2B,IACvB,6PAAqB,gDAAe,MAEpC;;;;;wBAC4C;MAAxC;;wBAAuC;MAD3C,4YAC4C,IACxC,+MAA2C,IAGvC,qjDAAgB,MACZ;;;;;;;;;;;;;;;;;;;;;q6BACmD,KACnD,uLACiD,IAEnC,4EAAI,KACtB,8jDAAgB,MACZ;;;;;;;;;;;;;;;;;;;;;u6BAC0D,KAC1D,uLACkH,IAGrG,4EAAI,KAErB,sGAA0B,KACtB;;;uWAAwD,sCAAQ,MAChE;;;uWAAgF,sCAAQ,mDAzBpG,YAAqB,GAE8C,mBAA2B,gBAA9F,YAC4C,EADuB,SAA2B,GAOlF,sDAAkD,GADlD,aACmD,EAAnD,UAAkD,GADlC,2BAAsB,EAAC,2BAAe,EAAtD,aACmD,EADnC,UAAsB,EAAC,UAAe,GAE3C,4JACqC,oBADhD,aACiD,EADtC,UACqC,GAKhD,6DAAyD,GADzD,aAC0D,EAA1D,UAAyD,GADzC,mCAA8B,EAAC,2BAAe,EAA9D,aAC0D,EAD1C,UAA8B,EAAC,UAAe,GAG1D,sHAA6G,YADjH,aACkH,EAA9G,UAA6G,GAMxE,yBAAa,EAA9B,mBAAgB,EAAxC,aAAwD,EAAf,UAAa,EAA9B,UAAgB,GAChB,0BAAa,EAAC,sBAAyB,EAA/D,aAAgF,EAAxD,WAAa,EAAC,WAAyB,2BA1B/E,6FAA2B,GACvB,0DAAqB,GAErB,iaAC4C,GAIpC,k/CAAgB,IACZ,o/BACmD,IAKvD,k/CAAgB,IACZ,o/BAC0D,IAQ1D,uRAAwD,GACxD,+RAAgF;;;;;;;;;;;;;;;;;;;;AC3BhG,yEAAmE;AACnE,4EAAsH;AAMtH,qFAA6E;AAC7E,8HAAsE;AAOtE,MAMa,gBAAgB;IAa3B,YAAmB,EAAe,EAAU,QAAkB,EAAS,WAA+B,EAAS,MAAqB,EAAS,MAAc,EAAS,QAAqB,EAAS,WAA2B,EAAS,MAAiB;QAApO,OAAE,GAAF,EAAE,CAAa;QAAU,aAAQ,GAAR,QAAQ,CAAU;QAAS,gBAAW,GAAX,WAAW,CAAoB;QAAS,WAAM,GAAN,MAAM,CAAe;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,aAAQ,GAAR,QAAQ,CAAa;QAAS,gBAAW,GAAX,WAAW,CAAgB;QAAS,WAAM,GAAN,MAAM,CAAW;QAVvP,SAAI,GAAG,IAAI,mBAAW,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;QAEnC,mBAAc,GAAG,IAAI,mBAAW,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;QAItD,aAAQ,GAAQ,EAAE,MAAM,EAAE,eAAe,EAAE,GAAG,EAAE,WAAW,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;QAClF,YAAO,GAAQ,wBAAwB,CAAC;QACxC,eAAU,GAAK,EAAE,CAAC;QAGvB,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACzC,IAAG,IAAI,CAAC,SAAS,EAAE;YACjB,IAAI,CAAC,gBAAgB,EAAE,CAAC;SACzB;aAAM;YACL,IAAI,CAAC,eAAe,EAAE,CAAC;SACxB;IACH,CAAC;IAED,QAAQ;QACN,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAE;YACxC,IAAI,CAAC,OAAO,GAAG,sBAAsB,CAAC;YACtC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,mBAAmB,CAAC;YAC3C,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,YAAY,CAAC;YACjC,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,QAAQ,CAAC;YACpC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC;YACtD,IAAI,CAAC,oBAAoB,EAAE,CAAC;SAC7B;IACH,CAAC;IAED,eAAe;QACb,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;QACvD,IAAI,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,EAAE,YAAY,CAAC,CAAC;QACnE,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9C,SAAS,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YACpC,QAAQ,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YACnC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,KAAK,EAAE,kBAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;YACjF,KAAK,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YAChC,IAAI,EAAE,CAAC,UAAU,CAAC;YAClB,IAAI,EAAE,CAAC,OAAO,CAAC;YACf,SAAS,EAAG,EAAE;YACd,MAAM,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YACjC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,kBAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YACxF,eAAe,EAAE,EAAE;SACpB,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,iBAAiB,CAAC,EAAE,CAAC;IACrE,CAAC;IAED,qBAAqB,CAAC,OAAwB;QAC5C,OAAO,CAAC,OAAwB,EAAE,EAAE;YAClC,OAAO,IAAI,CAAC,WAAW,CAAC,sBAAsB,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;gBAC9E,IAAG,GAAG,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;oBACvB,OAAO,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC;iBAC9B;qBAAM;oBACL,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC;iBAC7B;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;IACJ,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;QACvD,IAAI,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,EAAE,YAAY,CAAC,CAAC;QACnE,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9C,SAAS,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YACpC,QAAQ,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YACnC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,KAAK,EAAE,kBAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;YACjF,KAAK,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YAChC,IAAI,EAAE,CAAC,UAAU,CAAC;YAClB,IAAI,EAAE,CAAC,OAAO,CAAC;YACf,SAAS,EAAG,EAAE;YACd,MAAM,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;SAClC,CAAC;IAEJ,CAAC;IAED,YAAY,CAAC,WAAmB,EAAE,kBAA0B;QAC1D,OAAO,CAAC,KAAgB,EAAE,EAAE;YAC1B,IAAI,aAAa,GAAG,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,EAC7C,oBAAoB,GAAG,KAAK,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;YAC5D,IAAI,aAAa,CAAC,KAAK,KAAK,oBAAoB,CAAC,KAAK,EAAE;gBACtD,OAAO,oBAAoB,CAAC,SAAS,CAAC,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC;aAChE;iBACI;gBACH,OAAO,oBAAoB,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;aAC7C;QACH,CAAC,CAAC;IACJ,CAAC;IAED,2BAA2B;IAC3B,oBAAoB;QAClB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;YACrC,IAAI,eAAoB;YACxB,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC;YAC3C,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;YAC/F,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;YAC7F,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YACvF,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YACvF,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;YACzF,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;QAC/F,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4BAA4B;IAC5B,YAAY,CAAC,IAAS,EAAE,GAAQ;QAC9B,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,eAAe,EAAE,CAAC;IACvC,CAAC;IAED,4BAA4B;IAC5B,gBAAgB;QACd,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;IACjC,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,yBAAyB,CAAC,CAAC;IACvD,CAAC;IAED,UAAU,CAAC,CAAM;QACf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,wBAAwB,EAAE;YAC1D,IAAI,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,EAAE;SAC3C,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;QAChD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4BAA4B;QAC1B,IAAI,CAAM,CAAC;QACX,KAAK,CAAC,IAAI,IAAI,CAAC,0BAA0B,CAAC,QAAQ,EAAE;YAClD,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,aAAa,EAAE,CAAC;SAC7D;QACD,IAAI,IAAI,CAAC,0BAA0B,CAAC,KAAK,EAAE;YACzC,IAAI,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,MAAM;gBAC9C,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;;gBAE7D,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;YAC7D,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,SAAS,GAAC,IAAI,CAAC,UAAU,CAAC;YAClE,6DAA6D;YAC7D,OAAO,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,eAAe,CAAC;YAC7D,SAAS;YACT,IAAI,IAAI;YACR,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,IAAI,GAAG;oBACL,QAAQ,EAAE,OAAO;oBACjB,MAAM,EAAE;wBACN,EAAE,EAAE,IAAI,CAAC,SAAS;wBAClB,SAAS,EAAE,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,SAAS;wBAC1D,QAAQ,EAAE,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,QAAQ;wBACxD,KAAK,EAAE,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,KAAK;wBAClD,KAAK,EAAE,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,KAAK;wBAClD,IAAI,EAAE,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,IAAI;wBAChD,QAAQ,EAAE,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,QAAQ;wBACxD,MAAM,EAAE,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,MAAM;qBACrD;oBACD,OAAO,EAAE,IAAI,CAAC,UAAU;iBACzB;aACF;iBAAM;gBACL,IAAI,GAAG;oBACL,QAAQ,EAAE,OAAO;oBACjB,MAAM,EAAE,IAAI,CAAC,0BAA0B,CAAC,KAAK;oBAC7C,OAAO,EAAE,IAAI,CAAC,UAAU;oBACxB,WAAW,EAAG,yBAAW,CAAC,WAAW,GAAG,gBAAgB;iBACzD;aACF;YAED,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,iBAAiB,EAAE,IAAI,CAAC;iBAClD,SAAS,CAAC,QAAQ,CAAC,EAAE;gBACpB,IAAI,MAAM,GAAG,IAAI,CAAC;gBAClB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE;oBACvC,QAAQ,EAAE,IAAI;iBACf,CAAC,CAAC;gBACH,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;YACjC,CAAC,CAAC,CAAC;SACN;IACH,CAAC;CACF;AAtLD,4CAsLC;AAED,MAKa,wBAAwB;IAOnC,YAAmB,SAAiD,EAC3D,EAAe,EAAS,WAA+B,EAAS,MAAqB,EACrF,WAA2B,EAAkC,IAAgB;QAFnE,cAAS,GAAT,SAAS,CAAwC;QAC3D,OAAE,GAAF,EAAE,CAAa;QAAS,gBAAW,GAAX,WAAW,CAAoB;QAAS,WAAM,GAAN,MAAM,CAAe;QACrF,gBAAW,GAAX,WAAW,CAAgB;QAAkC,SAAI,GAAJ,IAAI,CAAY;QAP/E,kBAAa,GAAQ,iBAAS,CAAC;QAQpC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC;QAEzB,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACjC,QAAQ,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YACnC,eAAe,EAAE,EAAE;SACpB,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,iBAAiB,CAAC,EAAE,CAAC;IAEvE,CAAC;IAED,aAAa,CAAC,WAAmB,EAAE,kBAA0B;QAC3D,OAAO,CAAC,KAAgB,EAAE,EAAE;YAC1B,IAAI,aAAa,GAAG,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,EAC7C,oBAAoB,GAAG,KAAK,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;YAC5D,IAAI,aAAa,CAAC,KAAK,KAAK,oBAAoB,CAAC,KAAK,EAAE;gBACtD,OAAO,oBAAoB,CAAC,SAAS,CAAC,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC;aAChE;iBACI;gBACH,OAAO,oBAAoB,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;aAC7C;QACH,CAAC,CAAC;IACJ,CAAC;IAED,wBAAwB;QACtB,IAAI,CAAM,CAAC;QACX,KAAK,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE;YACrC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,aAAa,EAAE,CAAC;SAChD;QACD,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE;YAC5B,OAAO,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,eAAe;YAC/C,IAAI,IAAI,GAAG;gBACT,KAAK,EAAE,IAAI,CAAC,SAAS;gBACrB,WAAW,EAAE,CAAC;gBACd,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,QAAQ;aACjD;YACD,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,gBAAgB,EAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAC,EAAE;gBACxE,OAAO,CAAC,GAAG,CAAC,UAAU,EAAC,QAAQ,CAAC,CAAC;YACnC,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;CACF;AAvDD,4DAuDC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mECxOG,62BAKsC,sFAApC,mBAAmC,kBADQ,mBAA0C,sBAArF,mBAA0C,oBAJyB,mBAAmC,uBACtG,mBAAyB,mBAAC,mBAAuC,oBACG,mBAAwB,YAA5F,mBAAiD,4BAC+B,mBAAiC,iBAAnE,mBAAiC,iBAD7B,oBAAiB,SACnE,oBAAwB,cAAC,oBAAoB,SADgD,oBAAqB,UAFpH,eAKE,SAAmC,EADQ,SAA0C,EAArF,SAA0C,EAJyB,SAAmC,EACtG,SAAyB,EAAC,SAAuC,EACG,SAAwB,EAA5F,SAAiD,EAC+B,SAAiC,EAAnE,SAAiC,EAD7B,UAAiB,EACnE,UAAwB,EAAC,UAAoB,EADgD,UAAqB,CAG9E;mEAEtC,2EAA6C,kDAAgB;mEA5BjE,2QAAkB,IAGlB,+QAAgC,IAE9B,mMAAwC,IACtC,wXAAgC,MAC9B,wEAAI,gDAAc,MAGpB,sGAAyB,KAGvB,oGAAwB;;;mLAAuC,GAApC,aAAmC,IAAC,8CAAiB,MAAI,iDAAoB,MACxG;;;gOAAuE,GAA/C,aAA8C,GAAtE,yHAAuE,uCAAS,MAOlF,0LAKsC,IAEtC,0LAA6C,IAMjD,6NAAkB,iDAlClB,YAAkB,GAae,iDAAmC,GAAtC,aAAuC,EAApC,SAAmC,GACtC,4DAA8C,GAAtE,aAAuE,EAA/C,SAA8C,GAOzC,oDAAqC,GAApE,aAKsC,EALP,SAAqC,GAOhE,sDAAwC,GAA5C,aAA6C,EAAzC,UAAwC,GAMhD,aAAkB,2BA/BlB,6FAAgC,GAG5B,wJAAgC,GAON,iHAAuC,GAC/D,8JAAuE;;;;;;;;;;;;;;;;;;;;ACf7E,yEAAkD;AAClD,+EAAyD;AAIzD,MAKa,wBAAwB;IAgCnC,YAAmB,cAA8B,EAAS,MAAqB,EACtE,WAA+B;QADrB,mBAAc,GAAd,cAAc,CAAgB;QAAS,WAAM,GAAN,MAAM,CAAe;QACtE,gBAAW,GAAX,WAAW,CAAoB;QA/BjC,yBAAoB,GAAQ,EAAE,CAAC;QAC/B,qBAAgB,GAAQ,CAAC,iBAAiB,EAAE,YAAY,EAAE,UAAU;YACzE,YAAY,EAAE,KAAK,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,MAAM,EAAE,WAAW;YACvE,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,UAAU,EAAC,KAAK,EAAC,MAAM,EAAC,OAAO,CAAC,CAAC;QAC/D,YAAO,GAAQ,6BAA6B,CAAC;QAC7C,8BAAyB,GAAQ;YACtC,WAAW,EAAE,YAAY,EAAE,UAAU,EAAE,WAAW;YAClD,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,cAAc,EAAE,MAAM,EAAE,MAAM;YAC1D,QAAQ,EAAE,QAAQ,EAAC,SAAS,EAAE,SAAS;YACvC,cAAc,EAAE,MAAM;SACvB,CAAC;QAEK,mBAAc,GAAQ,iBAAiB,CAAC;QACxC,mBAAc,GAAQ,kBAAkB,CAAC;QACzC,sBAAiB,GAAO,CAAC,KAAK,EAAC,cAAc,CAAC,CAAC;QAC/C,cAAS,GAAQ,OAAO,CAAC;QAEzB,WAAM,GAAQ,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,CAAC;QAC7E,sBAAiB,GAAQ,UAAU,CAAC;QACpC,wBAAmB,GAAQ,kBAAkB,CAAC;QAC9C,oBAAe,GACpB;YACE,YAAY,EAAE,CAAC,EAAE,KAAK,EAAE,kBAAkB,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC;YACnF,UAAU,EAAE,CAAC,EAAE,KAAK,EAAE,gBAAgB,EAAE,KAAK,EAAE,UAAU,EAAE;gBAC3D,EAAE,KAAK,EAAE,kBAAkB,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC;SAE/C,CAAC;QAOF,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC1C,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC,OAAO,CAAC;IAEpC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;YACxC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC;QAC5D,CAAC,CAAC;IAGJ,CAAC;CAGF;AAtDD,4DAsDC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iEC7BO,mMACyE,mEACtC,iCAFnC,0DACyE;iEAQzE,oMACwE,kEACtC,iCAFlC,0DACwE;iEAQxE,oMACsE,yDAC7C,iCAFzB,0DACsE;iEAEtE,oMACiI,oDAC7G,iCAFpB,0DACiI;iEAQjI,oMACsE,qEACjC,iCAFrC,0DACsE;iEAOtE,oMAC4E,qEACvC,iCAFrC,0DAC4E;iEAQ5E,oMACwE,gEACxC,iCAFhC,0DACwE;iEAQtE;;;;;;kPAAmE,iCAAgB,2BAAzC,0EAAwB,GAAlE,YAAmE,EAAzB,SAAwB,2BAAlE,+bAAmE,qEAAgB;iEAQnF;;;;;;kPAA4D,iCAAU,2BAA7B,qEAAkB,GAA3D,YAA4D,EAAnB,SAAkB,2BAA3D,+bAA4D,gEAAU;kEAUxE,oMACkE,4DACtC,iCAF5B,0DACkE;kEAgBlE,qMAC8H,iEAC7F,iCAFjC,0DAC8H;kEAQ9H,qMAC4I,0DAClH,iCAF1B,0DAC4I;kEAf9I,8EAAkC,KAClC,ooDAAqD,MACnD;;;;;;;;;;;;;;;;;;;;wBAEgE;MAA9D;;wBAA6D;MAF/D,o6BAEgE,KAChE,sLAC8H,IAIhI,uoDAAqD,MACnD;;;;;;;;;;;;;;;;;;;;wBAEuE;MAArE;;wBAAoE;MAFtE,q6BAEuE,KACvE,sLAC4I,iDAd3G,uBAAiB,EAApD,YAAqD,EAAlB,UAAiB,GAEhD,oEAAgE,GADlE,aAEgE,EAD9D,UAAgE,GADlD,2BAAsB,EAAC,2BAAe,EAAtD,aAEgE,EAFhD,UAAsB,EAAC,UAAe,GAIpD,oIAA2H,YAD7H,aAC8H,EAA5H,UAA2H,GAI5F,uBAAiB,EAApD,aAAqD,EAAlB,UAAiB,GAEhD,2EAAuE,GADzE,aAEuE,EADrE,UAAuE,GADzD,mCAA8B,EAAC,2BAAe,EAA9D,aAEuE,EAFvD,UAA8B,EAAC,UAAe,GAI5D,kJAAyI,YAD3I,aAC4I,EAA1I,UAAyI,2BAd7I,u8CAAqD,IACnD,o/BAEgE,IAMlE,k/CAAqD,IACnD,o/BAEuE;kEAYvE,6EAAiC,KAC7B,oOAAiE,YAA3B;;wBAAwB;MAA9D,uLAAiE,+CAAiB,iCAAlF,2JAAiE;8GA7I7E,4QAAkB,IAClB,+QAAgC,IAEhC,kMAAwC,uCAExC,MAGA,kGAAyB,KACvB,oGAAwB,KACtB;;;sLAAuC,GAApC,aAAmC,IAAC,8CAAiB,MAAI,qCAC5D;;;sLAA+C,GAA5C,aAA2C,IAAC,kDAAqB,MAAI,0CAE1E,MAKF,yQAA2B,IAGzB,qMAAuC,IACrC;;;;;wBACyF;MAA7C;;wBAA4C;MADxF,mZACyF,IAEvF,2mDAAkC,MAChC,uJAAW,iDAAgB,MAC3B;;;;;;;;;;;;;;;;;;;;wBACiE;MAA/D;;wBAA8D;MADhE,84BACiE,KACjE,qLACyE,IAI3E,mnDAAkC,MAChC,yJAAW,gDAAe,MAC1B;;;;;;;;;;;;;;;;;;;;wBACgE;MAA9D;;wBAA6D;MAD/D,g5BACgE,KAChE,qLACwE,IAI1E,mnDAAkC,MAChC,yJAAW,8CAAa,MACxB;;;;;;;;;;;;;;;;;;;;wBAC6D;MAA3D;;wBAA0D;MAD5D,g5BAC6D,KAC7D,sLACsE,IAEtE,sLACiI,IAInI,qnDAAkC,MAChC,2JAAW,uCAAM,MACjB;;;;;;;;;;;;;;;;;;;;wBAC6D;MAA3D;;wBAA0D;MAD5D,o5BAC6D,KAC7D,sLACsE,IAGxE,qnDAAkC,MAChC,2JAAW,8CAAa,MACxB;;;;;;;;;;;;;;;;;;;;wBACmE;MAAjE;;wBAAgE;MADlE,o5BACmE,KACnE,sLAC4E,IAI9E,qnDAAkC,MAChC,2JAAW,wCAAO,MAClB;;;;;;;;;;;;;;;;;;;;wBAC+D;MAA7D;;wBAA4D;MAD9D,o5BAC+D,KAC/D,sLACwE,IAI1E,goDAAqD,MACnD,2JAAW,sCAAK,MAChB;;;;;;;;wBAA+E;MAA3C;;wBAA0C;MAA9E,wgCAA+E,KAC7E;;;;;;oPAAsB,+CAAiB,MACvC,oNAAmE,IAIvE,goDAAqD,MACnD,2JAAW,qCAAI,MACf;;;;;;;;;4+BAAmC,KACjC;;;;;;oPAAoB,+CAAiB,MACrC,oNAA4D,IAMhE,qnDAAkC,MAChC,2JAAW,oCAAG,MACd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wBAC2D;MAAzD;;yBAAwD;MAD1D,4iCAC2D,KAC3D,uLACkE,IAIpE,gkDAAgB,MACd,2JAAW,qCAAI,MACf;;;;;;;;;;;;;;;;;;;;;k7BAA4F,KAC5F;;;2XAA2D,IAC3D,uXAA0B,IAG5B,0LAAkC,IAmBlC,osCAAqF,oCAAM,MAE3F,wGAA0B,KACtB,sOAAmE,YAA7B;;wBAA4B;MAAlE,yLAAmE,mCAAK,MAC1E,kVAAqC,oCAAM,MAC3C,mVAAuC,oCAA0B,MACjE,0LAAiC,IAWzC,+NAAkB,iDAvJlB,YAAkB,GAUX,iDAAmC,GAAtC,aAAuC,EAApC,SAAmC,GACnC,yDAA2C,GAA9C,aAA+C,EAA5C,SAA2C,GAY5C,oBAAyC,8BAD3C,aACyF,EAAvF,UAAyC,GAEzB,uBAAiB,EAAjC,aAAkC,EAAlB,UAAiB,GAEU,qEAAiE,GAA1G,aACiE,EADxB,UAAiE,GAA1F,6BAAwB,EAAxC,aACiE,EADjD,UAAwB,GAE7B,yMAC6D,oBADxE,aACyE,EAD9D,UAC6D,GAI1D,uBAAiB,EAAjC,aAAkC,EAAlB,UAAiB,GAES,oEAAgE,GAAxG,aACgE,EADxB,UAAgE,GAAxF,6BAAuB,EAAvC,aACgE,EADhD,WAAuB,GAE5B,uMAC4D,oBADvE,aACwE,EAD7D,WAC4D,GAIzD,wBAAiB,EAAjC,aAAkC,EAAlB,WAAiB,GAEa,kEAA6D,GAAzG,aAC6D,EADjB,WAA6D,GAAzF,iCAA2B,EAA3C,aAC6D,EAD7C,WAA2B,GAEhC,8LAC0D,oBADrE,cACsE,EAD3D,WAC0D,GAGnE,gIAA8H,oBADhI,cACiI,EAA/H,WAA8H,GAIlH,wBAAiB,EAAjC,cAAkC,EAAlB,WAAiB,GAEK,kEAA6D,GAAjG,cAC6D,EADzB,WAA6D,GAAjF,yBAAmB,EAAnC,cAC6D,EAD7C,WAAmB,GAExB,8LAC0D,oBADrE,cACsE,EAD3D,WAC0D,GAGvD,wBAAiB,EAAjC,cAAkC,EAAlB,WAAiB,GAEY,wEAAmE,GAA9G,cACmE,EADxB,WAAmE,GAA9F,gCAA0B,EAA1C,cACmE,EADnD,WAA0B,GAE/B,gNACgE,oBAD3E,cAC4E,EADjE,WACgE,GAI7D,wBAAiB,EAAjC,cAAkC,EAAlB,WAAiB,GAEO,oEAA+D,GAArG,cAC+D,EADzB,WAA+D,GAArF,2BAAqB,EAArC,cAC+D,EAD/C,WAAqB,GAE1B,oMAC4D,oBADvE,cACwE,EAD7D,WAC4D,GAItC,wBAAiB,EAApD,cAAqD,EAAlB,WAAiB,GAEtC,yBAAuB,EAAnC,cAA+E,EAAnE,WAAuB,GAAnC,cAA+E,GACjE,mBAAS,EAArB,cAAsB,EAAV,WAAS,GACT,qBAA6B,SAAzC,cAAmE,EAAvD,WAA6B,GAIV,wBAAiB,EAApD,cAAqD,EAAlB,WAAiB,GAEtC,wBAAsB,EAAlC,cAAmC,EAAvB,WAAsB,GAAlC,cAAmC,GACrB,qBAAO,EAAnB,cAAoB,EAAR,WAAO,GACP,qBAA4B,SAAxC,cAA4D,EAAhD,WAA4B,GAM5B,wBAAiB,EAAjC,cAAkC,EAAlB,WAAiB,GAEiB,gEAA2D,GAA3G,cAC2D,EADX,WAA2D,GAA7E,uBAAiB,EAAxC,0BAAa,EAApB,cAC2D,EAD7B,WAAiB,EAAxC,WAAa,GAET,wLACsD,oBADjE,cACkE,EADvD,WACsD,GAM5B,iCAA0B,GAAxD,qBAAoB,aAAwD,oBAAQ,EAA3F,cAA4F,EAAvD,WAA0B,EAAxD,WAAoB,EAAwD,kCAAQ,EAA3B,wBAAkB,EAA3E,qBAAoB,aAA3B,cAA4F,EAAT,WAAQ,EAA3B,WAAkB,EAA3E,WAAoB,GACM,iCAAgB,GAAC,oBAAQ,EAA1D,cAA2D,EAA1B,WAAgB,EAAC,WAAQ,GAI9C,sBAAmB,YAAjC,cAAkC,EAApB,WAAmB,GAmB4C,oBAAO,EAApF,cAAqF,EAAR,WAAO,GAAtE,mEAA8D,GAA5E,cAAqF,EAAvE,WAA8D,GAM5D,qBAAkB,YAAhC,cAAiC,EAAnB,WAAkB,GAWxC,cAAkB,mDAtJlB,6FAAgC,GAEQ,4DAExC,GAKI,iHAAuC,GACvC,iHAA+C,GAAyB,0DAE1E,GAKF,+FAA2B,GAIvB,ubACyF,GAEvF,k/CAAkC,IAEhC,o/BACiE,IAMnE,k/CAAkC,IAEhC,o/BACgE,IAMlE,8hDAAkC,IAEhC,ohCAC6D,IAS/D,qjDAAkC,IAEhC,siCAC6D,IAK/D,qjDAAkC,IAEhC,siCACmE,IAMrE,qjDAAkC,IAEhC,siCAC+D,IAMjE,qjDAAqD,IAEnD,o6CAA+E,IAC7E,ifAAsB,GAK1B,qjDAAqD,IAEnD,o6CAAmC,IACjC,ifAAoB,GAOxB,qjDAAkC,IAEhC,siCAC2D,IAM7D,qjDAAgB,IAEd,mpCAA4F,IAC5F,4XAA2D,GAuB7D,63BAAqF,IAGjF,yKAAmE,GACrE,yKAAqC,GACrC,yKAAuC,yEAA0B;;;;;;;;;8DChIzD,mMACiD,2DACpB,iCAF7B,0DACiD;8DAMjD,oMACkH,0DACtF,iCAF5B,0DACkH;8DAnBlI,yQAA2B,IACvB,6PAAqB,gDAAe,MAEpC;;;;;wBAC4C;MAAxC;;wBAAuC;MAD3C,4YAC4C,IACxC,+MAA2C,IAGvC,qjDAAgB,MACZ;;;;;;;;;;;;;;;;;;;;;u6BACmD,KACnD,kLACiD,IAEnC,4EAAI,KACtB,8jDAAgB,MACZ;;;;;;;;;;;;;;;;;;;;;y6BAC0D,KAC1D,kLACkH,IAGrG,4EAAI,KAErB,sGAA0B,KACtB;;;uWAAwD,sCAAQ,MAChE;;;uWAAgF,sCAAQ,mDAzBpG,YAAqB,GAE8C,mBAA2B,gBAA9F,YAC4C,EADuB,SAA2B,GAOlF,sDAAkD,GADlD,aACmD,EAAnD,UAAkD,GADlC,2BAAsB,EAAC,2BAAe,EAAtD,aACmD,EADnC,UAAsB,EAAC,UAAe,GAE3C,4JACqC,oBADhD,aACiD,EADtC,UACqC,GAKhD,6DAAyD,GADzD,aAC0D,EAA1D,UAAyD,GADzC,mCAA8B,EAAC,2BAAe,EAA9D,aAC0D,EAD1C,UAA8B,EAAC,UAAe,GAG1D,sHAA6G,YADjH,aACkH,EAA9G,UAA6G,GAMxE,yBAAa,EAA9B,mBAAgB,EAAxC,aAAwD,EAAf,UAAa,EAA9B,UAAgB,GAChB,0BAAa,EAAC,sBAAyB,EAA/D,aAAgF,EAAxD,WAAa,EAAC,WAAyB,2BA1B/E,6FAA2B,GACvB,0DAAqB,GAErB,iaAC4C,GAIpC,k/CAAgB,IACZ,o/BACmD,IAKvD,k/CAAgB,IACZ,o/BAC0D,IAQ1D,uRAAwD,GACxD,+RAAgF;;;;;;;;;;;;;;;;;;;;AC3BhG,yEAAmE;AACnE,4EAAoG;AAMpG,qFAA6E;AAC7E,8HAAsE;AAOtE,MAMa,sBAAsB;IAiBjC,YAAmB,EAAe,EAAU,QAAkB,EAAS,WAA+B,EAAS,MAAqB,EAAS,MAAc,EACjJ,QAAqB,EAAS,WAA2B,EAAS,MAAiB;QAD1E,OAAE,GAAF,EAAE,CAAa;QAAU,aAAQ,GAAR,QAAQ,CAAU;QAAS,gBAAW,GAAX,WAAW,CAAoB;QAAS,WAAM,GAAN,MAAM,CAAe;QAAS,WAAM,GAAN,MAAM,CAAQ;QACjJ,aAAQ,GAAR,QAAQ,CAAa;QAAS,gBAAW,GAAX,WAAW,CAAgB;QAAS,WAAM,GAAN,MAAM,CAAW;QAb7F,SAAI,GAAG,IAAI,mBAAW,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;QAM5B,aAAQ,GAAQ,EAAE,MAAM,EAAE,gBAAgB,EAAE,GAAG,EAAE,YAAY,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;QAEpF,YAAO,GAAQ,wBAAwB,CAAC;QAC/C,mBAAc,GAAG,IAAI,mBAAW,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;QACtD,eAAU,GAAQ,EAAE,CAAC;QAK1B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC;QACtD,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAExB,IAAG,IAAI,CAAC,SAAS,EAAE;YACjB,IAAI,CAAC,gBAAgB,EAAE,CAAC;SACzB;aAAM;YACL,IAAI,CAAC,eAAe,EAAE,CAAC;SACxB;IACH,CAAC;IAED,QAAQ;QACN,IAAG,IAAI,CAAC,SAAS,EAAC;YAChB,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,oBAAoB,CAAC;YAC5C,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,aAAa,CAAC;YAClC,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,QAAQ,CAAC;YACpC,IAAI,CAAC,OAAO,GAAG,sBAAsB;YACrC,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;IACH,CAAC;IAED,eAAe;QACb,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;QACvD,IAAI,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,EAAE,YAAY,CAAC,CAAC;QACnE,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC/C,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACtC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACrC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,KAAK,EAAE,kBAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;YAC/E,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YAClC,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACpC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YAChC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YACd,KAAK,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YACf,IAAI,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC;YACtB,IAAI,EAAE,CAAC,QAAQ,EAAE,EAAE,CAAC;YACpB,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YAChB,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,kBAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YACxF,eAAe,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;SAC1B,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,iBAAiB,CAAC,EAAE,CAAC;IACvE,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;QACvD,IAAI,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,EAAE,YAAY,CAAC,CAAC;QACnE,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC/C,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACtC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACrC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,KAAK,EAAE,kBAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;YACjF,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YAClC,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACpC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YAChC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YAClC,IAAI,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC;YACtB,IAAI,EAAG,CAAC,QAAQ,EAAE,EAAE,CAAC;YACrB,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;SACjB,CAAC;IACJ,CAAC;IAED,aAAa;QACX,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;YACrC,IAAI,aAAkB,CAAC;YACvB,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC;YAC1C,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YAC7C,CAAC,EAAE,GAAG,CAAC,CAAC;YACR,IAAI,CAAC,2BAA2B,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;YAC9F,IAAI,CAAC,2BAA2B,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;YAC5F,IAAI,CAAC,2BAA2B,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YACtF,IAAI,CAAC,2BAA2B,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YACtF,IAAI,CAAC,2BAA2B,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;YAClG,IAAI,CAAC,2BAA2B,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;YAC1F,IAAI,CAAC,2BAA2B,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAClF,IAAI,CAAC,2BAA2B,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YACpF,IAAI,CAAC,2BAA2B,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YACtF,IAAI,CAAC,2BAA2B,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QAC1F,CAAC,CAAC,CAAC;IACL,CAAC;IAED,aAAa,CAAC,WAAmB,EAAE,kBAA0B;QAC3D,OAAO,CAAC,KAAgB,EAAE,EAAE;YAC1B,IAAI,aAAa,GAAG,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,EAC7C,oBAAoB,GAAG,KAAK,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;YAC5D,IAAI,aAAa,CAAC,KAAK,KAAK,oBAAoB,CAAC,KAAK,EAAE;gBACtD,OAAO,oBAAoB,CAAC,SAAS,CAAC,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC;aAChE;iBACI;gBACH,OAAO,oBAAoB,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;aAC7C;QACH,CAAC,CAAC;IACJ,CAAC;IAED,4BAA4B;IAC5B,YAAY,CAAC,IAAS,EAAE,GAAQ;QAC9B,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,eAAe,EAAE,CAAC;IACvC,CAAC;IAED,4BAA4B;IAC5B,yDAAyD;IACzD,gBAAgB;QACd,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,8BAA8B,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACvF,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;YACvB,wBAAwB;QAC1B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,6BAA6B,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACtF,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,IAAG,IAAI,CAAC,SAAS,EAAC;gBAChB,IAAI,CAAC,aAAa,EAAE,CAAC;aACtB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wDAAwD;IACxD,OAAO,CAAC,KAAK;QACX,IAAI,GAAG,GAAG,KAAK,CAAC;QAChB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IACpC,CAAC;IAED,aAAa,CAAC,SAAS;QACrB,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC;QACtB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;IAC1C,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;IACjC,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,yBAAyB,CAAC,CAAC;IACvD,CAAC;IAED,UAAU,CAAC,CAAM;QACf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAmB,EAAE;YACrD,IAAI,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,EAAE;SAC3C,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;QAChD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6BAA6B;QAC3B,IAAI,CAAM,CAAC;QACX,KAAK,CAAC,IAAI,IAAI,CAAC,2BAA2B,CAAC,QAAQ,EAAE;YACnD,IAAI,CAAC,2BAA2B,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,aAAa,EAAE,CAAC;SAC9D;QACD,IAAI,IAAI,CAAC,2BAA2B,CAAC,KAAK,EAAE;YAC1C,IAAI,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC,MAAM;gBAC/C,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;;gBAE9D,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;YAC9D,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;YACrE,OAAO,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC,eAAe,CAAC;YAE9D,IAAI,IAAS,CAAC;YACd,IAAG,IAAI,CAAC,SAAS,EAAE;gBACjB,IAAI,GAAG;oBACL,MAAM,EAAG;wBACP,EAAE,EAAE,IAAI,CAAC,SAAS;wBAClB,SAAS,EAAE,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC,SAAS;wBAC3D,QAAQ,EAAE,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC,QAAQ;wBACzD,KAAK,EAAE,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC,KAAK;wBACnD,KAAK,EAAE,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC,KAAK;wBACnD,WAAW,EAAE,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC,WAAW;wBAC/D,OAAO,EAAE,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC,OAAO;wBACvD,GAAG,EAAE,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC,GAAG;wBAC/C,IAAI,EAAE,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC,IAAI;wBACjD,KAAK,EAAE,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC,KAAK;wBACnD,IAAI,EAAE,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC,IAAI;wBACjD,MAAM,EAAE,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC,MAAM;qBACtD;oBACD,QAAQ,EAAG,OAAO;oBAClB,OAAO,EAAI,IAAI,CAAC,UAAU;iBAC3B;aACF;iBAAM;gBACL,IAAI,GAAG;oBACL,MAAM,EAAE,IAAI,CAAC,2BAA2B,CAAC,KAAK;oBAC9C,QAAQ,EAAE,OAAO;oBACjB,WAAW,EAAG,yBAAW,CAAC,WAAW,GAAG,gBAAgB;oBACxD,OAAO,EAAE,IAAI,CAAC,UAAU;iBACzB;aACF;YAED,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;gBACvE,IAAG,QAAQ,CAAC,MAAM,IAAI,SAAS,EAAE;oBAC/B,IAAI,MAAM,GAAG,IAAI,CAAC;oBAClB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE;wBACvC,QAAQ,EAAE,IAAI;qBACf,CAAC,CAAC;oBACH,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;iBAChC;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,EAAE;wBACnC,QAAQ,EAAE,IAAI;qBACf,CAAC,CAAC;iBACJ;YACH,CAAC,CAAC,CAAC;SACN;IACH,CAAC;CACF;AAjOD,wDAiOC;AAED,MAKa,mBAAmB;IAQ9B,YAAmB,SAA4C,EACtD,EAAe,EAAS,WAA+B,EAAS,MAAqB,EACrF,WAA2B,EAAkC,IAAgB;QAFnE,cAAS,GAAT,SAAS,CAAmC;QACtD,OAAE,GAAF,EAAE,CAAa;QAAS,gBAAW,GAAX,WAAW,CAAoB;QAAS,WAAM,GAAN,MAAM,CAAe;QACrF,gBAAW,GAAX,WAAW,CAAgB;QAAkC,SAAI,GAAJ,IAAI,CAAY;QAP/E,kBAAa,GAAQ,iBAAS,CAAC;QASpC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACjC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,kBAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YACxF,eAAe,EAAE,EAAE;SACpB,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,iBAAiB,CAAC,EAAE,CAAC,CAAC;IAExE,CAAC;IAED,aAAa,CAAC,WAAmB,EAAE,kBAA0B;QAC3D,OAAO,CAAC,KAAgB,EAAE,EAAE;YAC1B,IAAI,aAAa,GAAG,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,EAC7C,oBAAoB,GAAG,KAAK,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;YAC5D,IAAI,aAAa,CAAC,KAAK,KAAK,oBAAoB,CAAC,KAAK,EAAE;gBACtD,OAAO,oBAAoB,CAAC,SAAS,CAAC,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC;aAChE;iBACI;gBACH,OAAO,oBAAoB,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;aAC7C;QACH,CAAC,CAAC;IACJ,CAAC;IAED,wBAAwB;QACtB,IAAI,CAAM,CAAC;QACX,KAAK,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE;YACrC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,aAAa,EAAE,CAAC;SAChD;QACD,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE;YAC5B,OAAO,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,eAAe;YAC/C,IAAI,IAAI,GAAG;gBACT,KAAK,EAAE,IAAI,CAAC,SAAS;gBACrB,WAAW,EAAE,CAAC;gBACd,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,QAAQ;aACjD;YACD,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,gBAAgB,EAAC,IAAI,CAAC,CAAC,SAAS,CAAC,QAAQ,GAAE;gBACtE,OAAO,CAAC,GAAG,CAAC,UAAU,EAAC,QAAQ,CAAC,CAAC;YACnC,CAAC,CAAC,CAAC;SACJ;IAEH,CAAC;CACF;AAzDD,kDAyDC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iEC1RD,62BAG4H,sFAApC,mBAAmC,kBAA9E,mBAA0C,sBAArF,mBAA0C,oBAHkB,mBAA4B,gBAAC,mBAAyB,mBAChE,mBAA8C,2BAAmB,mBAAwB,YAA3I,mBAAiD,4BAC+B,mBAAiC,iBAAnE,mBAAiC,iBADkB,oBAAiB,SAClH,oBAAwB,cAAC,oBAAoB,SAD+F,oBAAqB,UADnK,eAGwF,SAAmC,EAA9E,SAA0C,EAArF,SAA0C,EAHkB,SAA4B,EAAC,SAAyB,EAChE,SAA8C,EAAmB,SAAwB,EAA3I,SAAiD,EAC+B,SAAiC,EAAnE,SAAiC,EADkB,UAAiB,EAClH,UAAwB,EAAC,UAAoB,EAD+F,UAAqB,CAEvC;iEAE5H,2EAAsC,kDAAgB;iEArBtD,2QAAkB,IAClB,+QAAgC,IAEhC,mMAAwC,IACtC,wXAAgC,MAC9B,wEAAI,iDAAe,MAGvB,sGAAyB,KAEvB,oGAAwB;;;mLAAuC,GAApC,aAAmC,IAAC,8CAAiB,MAAI,kDAAqB,MACzG;;;gOAAwE,GAAhD,aAA+C,GAAvE,yHAAwE,wCAAU,MAKpF,wLAG4H,IAE5H,wLAAsC,IAKtC,6NAAkB,iDA1BlB,YAAkB,GAUW,iDAAmC,GAAtC,aAAuC,EAApC,SAAmC,GACtC,6DAA+C,GAAvE,aAAwE,EAAhD,SAA+C,GAK1C,6CAA8B,GAA7D,aAG4H,EAH7F,SAA8B,GAKzD,+CAAiC,GAArC,aAAsC,EAAlC,UAAiC,GAKrC,aAAkB,2BAzBlB,6FAAgC,GAG9B,wJAAgC,GAMR,iHAAuC,GAC/D,8JAAwE;;;;;;;;;;;;;;;;;;;;ACZ1E,yEAAkD;AAIlD,MAKa,sBAAsB;IA6BjC,YAAmB,WAA2B,EAAS,MAAqB,EACnE,WAAgC;QADtB,gBAAW,GAAX,WAAW,CAAgB;QAAS,WAAM,GAAN,MAAM,CAAe;QACnE,gBAAW,GAAX,WAAW,CAAqB;QA7BpC,kBAAa,GAAK,EAAE,CAAC;QACrB,qBAAgB,GAAQ,CAAC,iBAAiB,EAAE,UAAU;YAC7D,YAAY,EAAC,IAAI,EAAC,YAAY,EAAE,KAAK,EAAC,MAAM,EAAC,SAAS,EAAC,WAAW,EAAC,UAAU,EAAC,MAAM,EAAC,OAAO,EAAC,KAAK,CAAC,CAAC;QAC3F,YAAO,GAAQ,8BAA8B,CAAC;QAC9C,8BAAyB,GAAQ;YACtC,WAAW,EAAE,YAAY,EAAE,UAAU,EAAE,WAAW;YAClD,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,cAAc,EAAE,MAAM,EAAE,YAAY;YAChE,QAAQ,EAAE,QAAQ,EAAC,SAAS,EAAG,SAAS,EAAC,aAAa,EAAC,cAAc;YACrE,cAAc,EAAC,MAAM;SACtB,CAAC;QAEK,mBAAc,GAAQ,iBAAiB,CAAC;QACxC,mBAAc,GAAQ,kBAAkB,CAAC;QAEzC,cAAS,GAAQ,OAAO,CAAC;QAChC,6BAAwB,GAAQ,CAAC,KAAK,EAAC,cAAc,CAAC,CAAC;QAEhD,WAAM,GAAQ,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,CAAC;QAC7E,sBAAiB,GAAQ,UAAU,CAAC;QACpC,wBAAmB,GAAM,mBAAmB,CAAC;QAC7C,oBAAe,GACpB;YACE,YAAY,EAAE,CAAC,EAAE,KAAK,EAAE,kBAAkB,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC;YACnF,UAAU,EAAE,CAAC,EAAE,KAAK,EAAE,gBAAgB,EAAE,KAAK,EAAE,UAAU,EAAE;gBAC3D,EAAE,KAAK,EAAE,kBAAkB,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC;SAE/C,CAAC;QAKF,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC1C,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC,OAAO,CAAC;IACpC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IACD,gBAAgB;QACd,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;YACrC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC;QAC3C,CAAC,CAAC;IACJ,CAAC;CACF;AAjDD,wDAiDC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qECUO,uPAAsC,sCAAK;qEAC3C,+NAAuC,uIAAgB;qEAGvD,uPAAsC,mDAAkB;qEACxD,+NAAuC,kJAA2B;qEAKlE,uPAAsC,oDAAmB;qEACzD,+NAAuC,mJAA4B;qEAKnE,uPAAsC,kDAAiB;qEACvD,+NAAuC,mJAA4B;qEAKnE,uPAAsC,kDAAiB;sEACvD,+NAAuC,mJAA4B;sEAGnE,uPAAsC,2CAAU;sEAChD,+NAAuC,6IAAsB;sEAG7D,uPAAsC,8CAAa;sEACnD,+NAAuC,+IAAwB;sEAG/D,uPAAsC,+CAAc;sEACpD,+NAAuC,gJAAyB;sEAGhE,uPAAsC,yCAAQ;sEAC9C,+NAAuC,2IAAoB;sEAG7D,oTAAuD;sEACvD,wQAA6D;8GAzGnE,sQAAkB,IAClB,gRAAgC,IAG9B,iGAAyB,KAEvB,mGAAwB;;;kLAAuC,GAApC,YAAmC,IAAC,8CAAiB,MAAI,uDACvE,MAEhB,yEAAI,KAEH,wNAA0D,IAExD,0XAAgC,MAC9B,yEAAI,sDAAoB,MAI1B,2XAAgC,MAE9B,6jDAAgB,MACd;;;;;;;;wBACsE;MAApE;;wBAAmE;MADrE,yVACsE,KAExE,mkDAAgB,MACd;;;;;;;;wBACwE;MAAtE;;wBAAqE;MADvE,2VACwE,KAiB1E,mGAAyB,KACvB,skDAAgB,MACd;;;;;;;;;;;;;;;;;;;;;01BAAmE,KACnE;;;+VAAiD,IACjD,sXAAyB,IAG3B,skDAAgB,MACd;;;;;;;;;;;;;;;;;;;;;01BAAiE,KACjE;;;+VAAiD,IACjD,sXAAyB,IAK/B,inBAA2C,MAGzC,2aAAgC,KAC9B,sOAAsC,KACtC,oNAAuC,KAEzC,2aAA2C,KACzC,sOAAsC,KACtC,oNAAuC,KAIzC,2aAA4C,KAC1C,sOAAsC,KACtC,oNAAuC,KAIzC,2aAA4C,KAC1C,sOAAsC,KACtC,oNAAuC,KAIzC,2aAA4C,KAC1C,sOAAsC,KACtC,qNAAuC,KAEzC,2aAAsC,KACpC,uOAAsC,KACtC,qNAAuC,KAEzC,2aAAwC,KACtC,uOAAsC,KACtC,qNAAuC,KAEzC,2aAAyC,KACvC,uOAAsC,KACtC,qNAAuC,KAEzC,2aAAoC,KAClC,uOAAsC,KACtC,qNAAuC,KAGzC,gRAAuD,KACvD,8PAA6D,KAG/D,oYAAoE,GAArD,cAA+B,IAIlD,+NAAkB,iDAhHlB,YAAkB,GAMa,gDAAmC,GAAtC,YAAuC,EAApC,SAAmC,GAe1C,mCAA8B,EAA9C,aACsE,EADtD,UAA8B,GAI9B,oCAA+B,EAA/C,aACwE,EADxD,UAA+B,GAoB7B,gCAAyB,GAAzC,aAAmE,EAAnD,WAAyB,GAAC,8BAAwB,EAAlE,aAAmE,EAAzB,WAAwB,GACjC,gCAAe,GAAhD,aAAiD,EAAhB,WAAe,GAKhC,gCAAyB,GAAzC,aAAiE,EAAjD,WAAyB,GAAC,4BAAsB,EAAhE,aAAiE,EAAvB,WAAsB,GAC/B,gCAAe,GAAhD,aAAiD,EAAhB,WAAe,GAMrC,qBAAyB,aAA1C,cAA2C,EAA1B,WAAyB,GAG1B,sBAAiB,EAA/B,cAAgC,EAAlB,WAAiB,GAIjB,iCAA4B,EAA1C,cAA2C,EAA7B,WAA4B,GAM5B,kCAA6B,EAA3C,cAA4C,EAA9B,WAA6B,GAM7B,kCAA6B,EAA3C,cAA4C,EAA9B,WAA6B,GAM7B,kCAA6B,EAA3C,cAA4C,EAA9B,WAA6B,GAI7B,4BAAuB,EAArC,cAAsC,EAAxB,WAAuB,GAIvB,8BAAyB,EAAvC,cAAwC,EAA1B,WAAyB,GAIzB,+BAA0B,EAAxC,cAAyC,EAA3B,WAA0B,GAI1B,0BAAqB,EAAnC,cAAoC,EAAtB,WAAqB,GAKhB,qBAAmC,mBAAtD,cAAuD,EAApC,WAAmC,GAC1C,qBAAgD,mBAA5D,cAA6D,EAAjD,WAAgD,GAG/C,2CAA+B,GAAC,oBAAoB,EAAnE,cAAoE,EAArD,WAA+B,EAAC,WAAoB,GAIvE,cAAkB,2BA/GlB,6FAAgC,GAKJ,8GAAuC,GAO/D,2JAAgC,GAKhC,2JAAgC,GAE9B,8+CAAgB,IACd,ykBACsE,GAExE,k/CAAgB,IACd,ykBACwE,GAkBxE,k/CAAgB,IACd,inCAAmE,IACnE,qXAAiD,GAInD,8hDAAgB,IACd,6nCAAiE,IACjE,qXAAiD;;;;;;;;;;;;;;;;;;;;ACrD3D,yEAA6D;AAK7D,qFAAuD;AACvD,0GAAyD;AAezD,MAKa,0BAA0B;IAUrC,YAAmB,IAAyB,EAAS,aAA4B;QAA9D,SAAI,GAAJ,IAAI,CAAqB;QAAS,kBAAa,GAAb,aAAa,CAAe;QAR1E,qBAAgB,GACtB,CAAC,IAAI,EAAC,eAAe,EAAE,gBAAgB,EAAC,gBAAgB,EAAC,gBAAgB,EAAC,UAAU,EAAC,YAAY;YACjG,aAAa,EAAC,QAAQ,CAAC,CAAC;QAExB,eAAU,GAAG,IAAI,6BAAkB,CAAkB,YAAY,CAAC,CAAC;QAKjE,oBAAoB;QACpB,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IACjD,CAAC;IAEF,QAAQ;QAEN,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IAE7C,CAAC;IACD,cAAc,CAAC,GAAY,EAAG,KAAc;QAC3C,IAAI,UAAU,GAAS,EAAE,CAAC;QAC1B,UAAU,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QACrC,IAAI,IAAI,GAAG;YACT,QAAQ,EAAE,+BAA+B;YACzC,WAAW,EAAE,UAAU;YACvB,OAAO,EAAG,IAAI,CAAC,SAAS;SACzB;QACD,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,IAAI,CAAC;aACtC,SAAS,CAAC,QAAQ,GAAE;YACnB,IAAI,MAAM,GAAK,QAAQ,CAAC,GAAG,CAAC;YAC5B,IAAI,CAAC,UAAU,GAAC,MAAM,CAAC;QACzB,CAAC,CAAC;IACJ,CAAC;CACF;AAvCD,gEAuCC;AAED,MAAM,YAAY,GAAsB;IACtC,EAAC,EAAE,EAAE,CAAC,EAAE,aAAa,EAAE,UAAU,EAAE,cAAc,EAAE,aAAa,EAAE,cAAc,EAAE,UAAU,EAAE,cAAc,EAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAC,UAAU,EAAC,KAAK,EAAE,WAAW,EAAE,OAAO,EAAG,MAAM,EAAE,EAAE,EAAE;IACxL,EAAC,EAAE,EAAE,CAAC,EAAE,aAAa,EAAE,UAAU,EAAE,cAAc,EAAE,aAAa,EAAE,cAAc,EAAE,UAAU,EAAE,cAAc,EAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAC,UAAU,EAAC,KAAK,EAAE,WAAW,EAAE,OAAO,EAAG,MAAM,EAAE,EAAE,EAAE;IACxL,EAAC,EAAE,EAAE,CAAC,EAAE,aAAa,EAAE,UAAU,EAAE,cAAc,EAAE,aAAa,EAAE,cAAc,EAAE,UAAU,EAAE,cAAc,EAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAC,UAAU,EAAC,KAAK,EAAE,WAAW,EAAE,OAAO,EAAG,MAAM,EAAE,EAAE,EAAE;IACxL,EAAC,EAAE,EAAE,CAAC,EAAE,aAAa,EAAE,UAAU,EAAE,cAAc,EAAE,aAAa,EAAE,cAAc,EAAE,UAAU,EAAE,cAAc,EAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAC,UAAU,EAAC,KAAK,EAAE,WAAW,EAAE,OAAO,EAAG,MAAM,EAAE,EAAE,EAAE;IACxL,EAAC,EAAE,EAAE,CAAC,EAAE,aAAa,EAAE,UAAU,EAAE,cAAc,EAAE,aAAa,EAAE,cAAc,EAAE,UAAU,EAAE,cAAc,EAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAC,UAAU,EAAC,KAAK,EAAE,WAAW,EAAE,OAAO,EAAG,MAAM,EAAE,EAAE,EAAE;CACzL,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iECnCQ,mMACsD,6DACzB,iCAF7B,0DACsD;iEActD,oMACqD,4DACzB,iCAF5B,0DACqD;iEAoBrD,oMAA6G,oDACzF,iCADpB,0DAA6G;iEAE7G,oMAA8G,oDAC1F,iCADpB,0DAA8G;iEAY9G,oMACqD,sDAAqB,iCAD1E,0DACqD;iEAJvD,inDAAwD,MACtD,yJAAW,yCAAQ,MACnB;;;;;;;;;;;;;;;;;;;;;u7BAAmF,KACnF,qLACqD,iDAJvC,uBAAiB,EAAjC,YAAwD,EAAxC,UAAiB,GAEyB,2BAA0B,EAAlF,aAAmF,EAA3B,UAA0B,GAAlD,4BAAuB,EAAvC,2BAAe,EAA/B,aAAmF,EAAnD,UAAuB,EAAvC,UAAe,GACpB,uNACyC,qBADpD,aACqD,EAD1C,UACyC,2BAJtD,u8CAAwD,IAEtD,o/BAAmF;iEAajF,oMAC0D,sDAAqB,iCAD/E,0DAC0D;kEAC1D,oMACgH,yEACvE,iCAFzC,0DACgH;iEANlH,inDAAwD,MACtD,yJAAW,iDAAgB,MAC3B;;;;;;;;;;;;;;;;;;;;;u7BAA2F,KAC3F,qLAC0D,IAC1D,sLACgH,iDANlG,uBAAiB,EAAjC,YAAwD,EAAxC,UAAiB,GAE0B,kCAAiC,EAA1F,aAA2F,EAAlC,UAAiC,GAA1D,6BAAwB,EAAjD,2BAAe,EAAtB,aAA2F,EAA3D,UAAwB,EAAjD,UAAe,GACX,mPAC8C,qBADzD,aAC0D,EAD/C,UAC8C,GAEvD,sHAA6G,YAD/G,aACgH,EAA9G,UAA6G,2BANjH,u8CAAwD,IAEtD,o/BAA2F;iEAH/F,6EAAiC,KAC/B,uLAAwD,sFAAtB,oCAAqB,GAAvD,YAAwD,EAAtB,SAAqB;kEAkBvD,oMACkD,wDAC1B,iCAFxB,0DACkD;kEAQlD,oMACgD,sDAC1B,iCAFtB,0DACgD;kEAahD,oMACyD,gEACzB,iCAFhC,0DACyD;kEAgBvD;;;;;;oPAAuE,kCACvE,2BAD+C,0EAAuB,GAAtE,YAAuE,EAAxB,SAAuB,2BAAtE,+bAAuE,qEACvE;kEAWF,oMACgD,uDACzB,iCAFvB,0DACgD;kEAgBhD,oMACoD,0DAC1B,iCAF1B,0DACoD;kEAUlD;;;;;;qPAAmE,iCAAgB,2BAAzC,0EAAwB,GAAlE,YAAmE,EAAzB,SAAwB,2BAAlE,+bAAmE,qEAAgB;kEAUnF;;;;;;qPAA4D,iCAAU,2BAA7B,qEAAkB,GAA3D,YAA4D,EAAnB,SAAkB,2BAA3D,+bAA4D,gEAAU;kEAUtE;;;;;;qPAAkE,uCAClE,2BAD2C,yEAAsB,GAAjE,YAAkE,EAAvB,SAAsB,2BAAjE,+bAAkE,sIAClE;kEAUA;;;;;;qPAAwE,sCACjD,2BADwB,yEAAwB,GAAvE,YAAwE,EAAzB,SAAwB,2BAAvE,+bAAwE,sIACjD;kEASvB;;;;;;qPAAwE,kCACxE,2BADkD,yEAAqB,GAAvE,YAAwE,EAAtB,SAAqB,2BAAvE,+bAAwE,2EACxE;kEAQF,qMACgD,sDAC1B,iCAFtB,0DACgD;kEAyBhD,6EAAgC,KAC9B,oOAA+D,YAAzB;;wBAAwB;MAA9D,uLAA+D,+CAAiB,iCAAhF,2JAA+D;iEA3Q3E,4QAAkB,IAGlB,+QAAgC,IAC9B,kMAAwC,sCAExC,MAGA,kGAAyB,KACvB,oGAAwB,KACtB;;;sLAAuC,GAApC,aAAmC,IAAC,8CAAiB,MAAI,qCAC5D;;;sLAA+C,GAA5C,aAA2C,IAAC,kDAAqB,MAAI,0CAE1E,MAIF,yQAA2B,IAIzB,qMAAuC,IACrC;;;;;wBAAkG;MAAxB;;wBAAuB;MAAjG,+YAAkG,IAKhG,0mDAAkC,MAChC,uJAAW,2CAAU,MACrB;;;;;;;;;;;;;;;;;;;;wBACmD;MAAjD;;wBAAgD;MADlD,45BACmD,KAEnD,qLACsD,IAUxD,mnDAAkC,MAChC,yJAAW,0CAAS,MACpB;;;;;;;;;;;;;;;;;;;;wBACkD;MAAhD;;wBAA+C;MADjD,85BACkD,KAClD,qLACqD,IAgBvD,mnDAAkC,MAChC,yJAAW,sCAAK,MAChB;;;;;;;;;;;;;;;;;;;;wBAC+C;MAA7C;;wBAA4C;MAD9C,i7BAC+C,KAC/C,qLAA6G,IAE7G,sLAA8G,IAShH,yLAAwD,IAWxD,yLAAiC,IAgBjC,qnDAAkC,MAChC,2JAAW,sCAAK,MAChB;;;;;;;;;;;;;;;;;;;;wBAA8G;MAA7C;;wBAA4C;MAA7G,k6BAA8G,KAC9G,uLACkD,IAKpD,qnDAAkC,MAChC,2JAAW,oCAAG,MACd;;;;;;;;;;;;;;;;;;;;wBAA4G;MAA3C;;wBAA0C;MAA3G,k6BAA4G,KAC5G,uLACgD,IASlD,qnDAAkC,MAChC,2JAAW,8CAAa,MACxB;;;;;;;;;;;;;;;;;;;;wBACsD;MAApD;;wBAAmD;MADrD,k6BACsD,KACtD,uLACyD,IAY3D,qnDAAkC,MAChC,2JAAW,kDAAiB,MAC5B;;;;;;;;;qgCAAiD,KAC/C;;;;;;sPAAsB,2CAAa,MACnC,qNAAuE,IAS3E,qnDAAkC,MAChC,2JAAW,qCAAI,MACf;;;;;;;;;;;;;;;;;;;;wBAA0G;MAA3C;;wBAA0C;MAAzG,k6BAA0G,KAC1G,uLACgD,IAYlD,wnDAAkC,MAChC,2JAAW,wCAAO,MAClB;;;;;;;;;;;;;;;;;;;;wBACiD;MAA/C;;wBAA8C;MADhD,k6BACiD,KACjD,uLACoD,IAMtD,8nDAAkC,MAChC,6JAAW,sCAAK,MAChB;;;;;;;;wBAA+E;MAA3C;;wBAA0C;MAA9E,6gCAA+E,KAC7E;;;;;;uPAAsB,+CAAiB,MACvC,qNAAmE,IAMvE,8nDAAkC,MAChC,6JAAW,qCAAI,MACf;;;;;;;;;i/BAAmC,KACjC;;;;;;uPAAsB,+CAAiB,MACvC,qNAA4D,IAMhE,8nDAAkC,MAChC,6JAAW,4CAAW,MACtB;;;;;;;;;0gCAA4C,KAC1C;;;;;;uPAAsB,2CAAa,MACnC,qNAAkE,IAOtE,8nDAAkC,MAChC,6JAAW,8CAAa,MACxB;;;;;;;;;0gCAA8C,KAC5C;;;;;;uPAAsB,6CAAe,MACrC,qNAAwE,IAM5E,8nDAAkC,MAChC,6JAAW,uDAAsB,MACjC;;;;;;;;;i/BAAgD,KAC9C;;;;;;uPAAsB,sDAAwB,MAC9C,qNAAwE,IAM5E,8nDAAkC,MAChC,6JAAW,oCAAG,MACd;;;;;;;;;;;;;;;;;;;;wBAAsG;MAA3C;;wBAA0C;MAArG,o6BAAsG,KACtG,uLACgD,IAalD,0GAA6B,KAC3B,2sCAAuC,oCAAM,MAO/C,wGAA0B,KACxB,sOAAmE,YAA7B;;wBAA4B;MAAlE,yLAAmE,mCAAK,MACxE,kVAAqC,mCAAK,MAC1C,mVAAsC,qCAA2B,MACjE,0LAAgC,iDA1Q1C,YAAkB,GAWT,iDAAmC,GAAtC,aAAuC,EAApC,SAAmC,GACnC,yDAA2C,GAA9C,aAA+C,EAA5C,SAA2C,GAWA,oBAA2B,gBAAzE,aAAkG,EAApD,UAA2B,GAKvD,uBAAiB,EAAjC,aAAkC,EAAlB,UAAiB,GAEK,4BAA2B,EAA/D,aACmD,EADf,UAA2B,GAA/C,wBAAmB,EAAnC,aACmD,EADnC,UAAmB,GAGxB,+JAC0C,oBADrD,aACsD,EAD3C,UAC0C,GAUvC,uBAAiB,EAAjC,aAAkC,EAAlB,UAAiB,GAEQ,2BAA0B,EAAjE,aACkD,EADX,UAA0B,GAAjD,4BAAsB,EAAtC,aACkD,EADlC,WAAsB,GAE3B,6JACyC,oBADpD,aACqD,EAD1C,WACyC,GAgBtC,wBAAiB,EAAjC,aAAkC,EAAlB,WAAiB,GAEgC,yBAAuB,EAAtF,aAC+C,EADgB,WAAuB,GAAzD,uCAAiC,EAA9C,yBAAY,EAA5B,aAC+C,EADlB,WAAiC,EAA9C,WAAY,GAEjB,mGAAiG,oBAA5G,aAA6G,EAAlG,WAAiG,GAEjG,oGAAkG,oBAA7G,cAA8G,EAAnG,WAAkG,GAS7E,sCAAqB,GAAvD,cAAwD,EAAtB,WAAqB,GAWzC,sBAAkB,YAAhC,cAAiC,EAAnB,WAAkB,GAgBhB,wBAAiB,EAAjC,cAAkC,EAAlB,WAAiB,GAEU,yBAAuB,EAAhE,cAA8G,EAArE,WAAuB,GAAhD,8BAAwB,EAAxC,cAA8G,EAA9F,WAAwB,GAC7B,oJACsC,oBADjD,cACkD,EADvC,WACsC,GAKnC,wBAAiB,EAAjC,cAAkC,EAAlB,WAAiB,GAEY,uBAAqB,EAAhE,cAA4G,EAAjE,WAAqB,GAAhD,gCAA0B,EAA1C,cAA4G,EAA5F,WAA0B,GAC/B,8IACoC,oBAD/C,cACgD,EADrC,WACoC,GASjC,wBAAiB,EAAjC,cAAkC,EAAlB,WAAiB,GAEQ,gCAA8B,EAArE,cACsD,EADf,WAA8B,GAArD,4BAAsB,EAAtC,cACsD,EADtC,WAAsB,GAE3B,yKAC6C,oBADxD,cACyD,EAD9C,WAC6C,GAY1C,wBAAiB,EAAjC,cAAkC,EAAlB,WAAiB,GAEnB,6BAA2B,EAAvC,cAAiD,EAArC,WAA2B,GAAC,oBAAQ,EAAhD,cAAiD,EAAT,WAAQ,GAClC,mBAAS,EAArB,cAAsB,EAAV,WAAS,GACT,qBAAkC,eAA9C,cAAuE,EAA3D,WAAkC,GASlC,wBAAiB,EAAjC,cAAkC,EAAlB,WAAiB,GAEU,uBAAqB,EAA9D,cAA0G,EAAjE,WAAqB,GAA9C,8BAAwB,EAAxC,cAA0G,EAA1F,WAAwB,GAC7B,8IACoC,oBAD/C,cACgD,EADrC,WACoC,GAYjC,wBAAiB,EAAjC,cAAkC,EAAlB,WAAiB,GAEuB,2BAAyB,EAA/E,cACiD,EADK,WAAyB,GAA5D,wCAAkC,EAArD,cACiD,EAD9B,WAAkC,GAE1C,0JACwC,oBADnD,cACoD,EADzC,WACwC,GAMrC,wBAAiB,EAAjC,cAAkC,EAAlB,WAAiB,GAEnB,yBAAuB,EAAnC,cAA+E,EAAnE,WAAuB,GAAnC,cAA+E,GACjE,mBAAS,EAArB,cAAsB,EAAV,WAAS,GACT,qBAA6B,SAAzC,cAAmE,EAAvD,WAA6B,GAM7B,wBAAiB,EAAjC,cAAkC,EAAlB,WAAiB,GAEnB,wBAAsB,EAAlC,cAAmC,EAAvB,WAAsB,GAAlC,cAAmC,GACrB,mBAAS,EAArB,cAAsB,EAAV,WAAS,GACT,qBAA4B,SAAxC,cAA4D,EAAhD,WAA4B,GAM5B,wBAAiB,EAAjC,cAAkC,EAAlB,WAAiB,GAEnB,wBAAsB,EAAlC,cAA4C,EAAhC,WAAsB,GAAC,oBAAQ,EAA3C,cAA4C,EAAT,WAAQ,GAC7B,mBAAS,EAArB,cAAsB,EAAV,WAAS,GACT,qBAA8B,WAA1C,cAAkE,EAAtD,WAA8B,GAO9B,wBAAiB,EAAjC,cAAkC,EAAlB,WAAiB,GAEnB,0BAAwB,EAApC,cAA8C,EAAlC,WAAwB,GAAC,oBAAQ,EAA7C,cAA8C,EAAT,WAAQ,GAC/B,mBAAS,EAArB,cAAsB,EAAV,WAAS,GACT,qBAAkC,aAA9C,cAAwE,EAA5D,WAAkC,GAMlC,wBAAiB,EAAjC,cAAkC,EAAlB,WAAiB,GAEnB,qCAAmC,EAA/C,cAAgD,EAApC,WAAmC,GAA/C,cAAgD,GAClC,mBAAS,EAArB,cAAsB,EAAV,WAAS,GACT,qBAAqC,mBAAjD,cAAwE,EAA5D,WAAqC,GAMrC,wBAAiB,EAAjC,cAAkC,EAAlB,WAAiB,GAEM,uBAAqB,EAA1D,cAAsG,EAAjE,WAAqB,GAA1C,0BAAoB,EAApC,cAAsG,EAAtF,WAAoB,GACzB,8IACoC,oBAD/C,cACgD,EADrC,WACoC,GAcjC,0BAAwB,EAAtC,cAAuC,EAAzB,WAAwB,GAWxB,qBAAiB,YAA/B,cAAgC,EAAlB,WAAiB,mDAvQzC,6FAAgC,GACU,4DAExC,GAKI,gHAAuC,GACvC,iHAA+C,GAAyB,0DAE1E,GAIF,+FAA2B,GAKvB,ubAAkG,GAKhG,k/CAAkC,IAEhC,o/BACmD,IAarD,k/CAAkC,IAEhC,o/BACkD,IAkBpD,8hDAAkC,IAEhC,ohCAC+C,IAuCjD,qjDAAkC,IAEhC,siCAA8G,IAOhH,qjDAAkC,IAEhC,siCAA4G,IAW9G,qjDAAkC,IAEhC,siCACsD,IAcxD,qjDAAkC,IAEhC,o6CAAiD,IAC/C,ifAAsB,GAU1B,qjDAAkC,IAEhC,siCAA0G,IAc5G,qjDAAkC,IAEhC,siCACiD,IAQnD,qjDAAkC,IAEhC,o6CAA+E,IAC7E,ifAAsB,GAO1B,qjDAAkC,IAEhC,o6CAAmC,IACjC,ifAAsB,GAO1B,qjDAAkC,IAEhC,o6CAA4C,IAC1C,ifAAsB,GAQ1B,qjDAAkC,IAEhC,o6CAA8C,IAC5C,ifAAsB,GAO1B,qjDAAkC,IAEhC,o6CAAgD,IAC9C,ifAAsB,GAO1B,qjDAAkC,IAEhC,siCAAsG,IAgBtG,63BAAuC,IAQvC,yKAAmE,GACnE,yKAAqC,GACrC,yKAAsC,yEAA2B;;;;;;;;;oEC7PzD,mMACiD,2DACpB,iCAF7B,0DACiD;oEAMjD,oMACkH,0DACtF,iCAF5B,0DACkH;oEAnBpI,yQAA2B,IACrB,6PAAqB,gDAAe,MAEpC;;;;;wBAC4C;MAAxC;;wBAAuC;MAD3C,4YAC4C,IACxC,+MAA2C,IAGvC,qjDAAgB,MACZ;;;;;;;;;;;;;;;;;;;;;q6BACmD,KACnD,wLACiD,IAEnC,4EAAI,KACtB,8jDAAgB,MACZ;;;;;;;;;;;;;;;;;;;;;u6BAC0D,KAC1D,wLACkH,IAGrG,4EAAI,KAErB,sGAA0B,KACtB;;;uWAAwD,sCAAQ,MAChE;;;uWAAgF,sCAAQ,mDAzBpG,YAAqB,GAE8C,mBAA2B,gBAA9F,YAC4C,EADuB,SAA2B,GAOlF,sDAAkD,GADlD,aACmD,EAAnD,UAAkD,GADlC,2BAAsB,EAAC,2BAAe,EAAtD,aACmD,EADnC,UAAsB,EAAC,UAAe,GAE3C,4JACqC,oBADhD,aACiD,EADtC,UACqC,GAKhD,6DAAyD,GADzD,aAC0D,EAA1D,UAAyD,GADzC,mCAA8B,EAAC,2BAAe,EAA9D,aAC0D,EAD1C,UAA8B,EAAC,UAAe,GAG1D,sHAA6G,YADjH,aACkH,EAA9G,UAA6G,GAMxE,yBAAa,EAA9B,mBAAgB,EAAxC,aAAwD,EAAf,UAAa,EAA9B,UAAgB,GAChB,0BAAa,EAAC,sBAAyB,EAA/D,aAAgF,EAAxD,WAAa,EAAC,WAAyB,2BA1BjF,6FAA2B,GACrB,0DAAqB,GAErB,iaAC4C,GAIpC,k/CAAgB,IACZ,o/BACmD,IAKvD,k/CAAgB,IACZ,o/BAC0D,IAQ1D,uRAAwD,GACxD,+RAAgF;;;;;;;;;;;;;;;;;;;;AC3BlG,yEAA0D;AAC1D,4EAA4F;AAG5F,iGAAoF;AAGpF,qFAAiE;AAEjE,8HAAsE;AAQtE,MAKa,sBAAsB;IAqEjC,YAAoB,WAAwB,EAAU,IAAwB,EACpE,aAA4B,EAAS,MAAiB,EAAU,MAAc,EAC/E,aAA6B,EAAS,QAAqB;QAFhD,gBAAW,GAAX,WAAW,CAAa;QAAU,SAAI,GAAJ,IAAI,CAAoB;QACpE,kBAAa,GAAb,aAAa,CAAe;QAAS,WAAM,GAAN,MAAM,CAAW;QAAU,WAAM,GAAN,MAAM,CAAQ;QAC/E,kBAAa,GAAb,aAAa,CAAgB;QAAS,aAAQ,GAAR,QAAQ,CAAa;QArE7D,YAAO,GAAQ,wBAAwB,CAAC;QAGxC,kBAAa,GAAQ,CAAC,iBAAiB,EAAE,sBAAsB,EAAE,cAAc;YACpF,YAAY,EAAE,WAAW,EAAE,mBAAmB,EAAE,eAAe,EAAE,iBAAiB,EAAE,YAAY,EAAE,QAAQ,CAAC,CAAC;QAEvG,mBAAc,GAAQ,gCAAgC,CAAC;QACvD,eAAU,GAAQ,EAAE,CAAC;QACrB,aAAQ,GAAQ,EAAE,MAAM,EAAE,gBAAgB,EAAE,GAAG,EAAE,YAAY,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;QASpF,aAAQ,GAAQ,EAAE,CAAC;QACnB,eAAU,GAAQ,EAAE,CAAC;QACrB,cAAS,GAAQ,EAAE,CAAC;QACpB,gBAAW,GAAQ,EAAE,CAAC;QACtB,qBAAgB,GAAQ,EAAE,CAAC;QAGlC,iBAAY,GAAQ;YAClB;gBACE,IAAI,EAAE,iBAAiB;gBACvB,KAAK,EAAE,iBAAiB;aACzB;YACD;gBACE,IAAI,EAAE,sBAAsB;gBAC5B,KAAK,EAAE,sBAAsB;aAC9B;YACD;gBACE,IAAI,EAAE,cAAc;gBACpB,KAAK,EAAE,cAAc;aACtB;YACD;gBACE,IAAI,EAAE,YAAY;gBAClB,KAAK,EAAE,YAAY;aACpB;YACD;gBACE,IAAI,EAAE,WAAW;gBACjB,KAAK,EAAE,WAAW;aACnB;YACD;gBACE,IAAI,EAAE,mBAAmB;gBACzB,KAAK,EAAE,mBAAmB;aAC3B;YACD;gBACE,IAAI,EAAE,eAAe;gBACrB,KAAK,EAAE,eAAe;aACvB;YACD;gBACE,IAAI,EAAE,iBAAiB;gBACvB,KAAK,EAAE,iBAAiB;aACzB;YACD;gBACE,IAAI,EAAE,YAAY;gBAClB,KAAK,EAAE,YAAY;aACpB;YACD;gBACE,IAAI,EAAE,QAAQ;gBACd,KAAK,EAAE,QAAQ;aAChB;SACF,CAAC;QAMA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC;QACxD,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,gBAAgB,EAAE,CAAC;SACzB;aAAM;YACL,IAAI,CAAC,eAAe,EAAE,CAAC;SACxB;QACD,IAAI,CAAC,UAAU,GAAG,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAChD,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC3C,IAAI,MAAM,CAAC,KAAK,CAAC,IAAI,IAAI,EAAE;gBACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;gBACrB,IAAI,CAAC,SAAS,GAAG,EAAE,EAAE,EAAE,MAAM,CAAC,GAAG,EAAE,CAAC;gBACpC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE;oBAC9C,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC7C,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACL,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;aACrB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QAEN,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAExB,2BAA2B;QAC3B,QAAQ;QACR,QAAQ,IAAI,CAAC,MAAM,EAAE;YACnB,KAAK,KAAK;gBACR,iBAAiB;gBACjB,MAAM;YACR,KAAK,MAAM;gBACT,iBAAiB;gBACjB,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,oBAAoB,CAAC;gBAC5C,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,aAAa,CAAC;gBAClC,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,QAAQ,CAAC;gBACpC,IAAI,CAAC,cAAc,GAAG,iBAAiB,CAAC;gBACxC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBACvC,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;gBAC9C,UAAU,CAAC,GAAG,EAAE;oBACd,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;gBAC7C,CAAC,EAAE,IAAI,CAAC,CAAC;gBACT,MAAM;SACT;IACH,CAAC;IAED,YAAY,CAAC,IAAS,EAAE,GAAQ;QAC9B,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,eAAe,EAAE,CAAC;IACvC,CAAC;IAED,eAAe,CAAC,YAAY;QAC1B,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC;YAC5B,SAAS,EAAE,YAAY,CAAC,SAAS;YACjC,QAAQ,EAAE,YAAY,CAAC,QAAQ;YAC/B,KAAK,EAAE,YAAY,CAAC,KAAK;YACzB,QAAQ,EAAE,YAAY,CAAC,QAAQ;YAC/B,eAAe,EAAE,YAAY,CAAC,QAAQ;YACtC,KAAK,EAAE,YAAY,CAAC,KAAK;YACzB,YAAY,EAAE,YAAY,CAAC,YAAY;YACvC,SAAS,EAAE,YAAY,CAAC,SAAS;YACjC,GAAG,EAAE,YAAY,CAAC,GAAG;YACrB,GAAG,EAAE,YAAY,CAAC,GAAG;YACrB,OAAO,EAAE,YAAY,CAAC,OAAO;YAC7B,IAAI,EAAE,YAAY,CAAC,IAAI;YACvB,KAAK,EAAE,YAAY,CAAC,KAAK;YACzB,IAAI,EAAE,YAAY,CAAC,IAAI;YACvB,MAAM,EAAE,YAAY,CAAC,MAAM;YAC3B,iBAAiB,EAAE,YAAY,CAAC,iBAAiB;YACjD,GAAG,EAAE,YAAY,CAAC,GAAG;YACrB,MAAM,EAAE,YAAY,CAAC,MAAM;YAC3B,UAAU,EAAE,YAAY,CAAC,UAAU;SACpC,CAAC,CAAC;IACL,CAAC;IACD,yFAAyF;IAGzF,qEAAqE;IACrE,eAAe;QACb,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC1C,wCAAwC;YACxC,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACtC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACrC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,OAAO,CAAC,0EAA0E,CAAC,CAAC,CAAC;YAClI,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YAClC,YAAY,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACzC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YAChC,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACpC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YAChC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YACd,KAAK,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YACf,IAAI,EAAE,CAAC,QAAQ,EAAE,EAAE,CAAC;YACpB,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YAChC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YAChB,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YACd,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YAChB,iBAAiB,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YAC3B,SAAS,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YAEnB,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,kBAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YACxF,eAAe,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;SAC1B,EAAE;YACD,UAAU,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,iBAAiB,CAAC;SAC9D,CAAC,CAAC;IACL,CAAC;IAED,gBAAgB;QAEd,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC1C,wCAAwC;YACxC,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACtC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACrC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,OAAO,CAAC,0EAA0E,CAAC,CAAC,CAAC;YAClI,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YAClC,YAAY,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACzC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YAChC,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACpC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YAChC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YACd,KAAK,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YACf,IAAI,EAAE,CAAC,QAAQ,EAAE,EAAE,CAAC;YACpB,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YAChC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YAChB,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YACd,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YAChB,iBAAiB,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YAC3B,SAAS,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;SACpB,CAAC,CAAC;IACL,CAAC;IAED,qEAAqE;IACrE,aAAa,CAAC,WAAmB,EAAE,kBAA0B;QAC3D,OAAO,CAAC,KAAgB,EAAE,EAAE;YAC1B,IAAI,aAAa,GAAG,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,EAC7C,oBAAoB,GAAG,KAAK,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;YAC5D,IAAI,aAAa,CAAC,KAAK,KAAK,oBAAoB,CAAC,KAAK,EAAE;gBACtD,OAAO,oBAAoB,CAAC,SAAS,CAAC,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC;aAChE;iBAAM;gBACL,OAAO,oBAAoB,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;aAC7C;QACH,CAAC,CAAC;IACJ,CAAC;IAKD,qGAAqG;IACrG,UAAU,CAAC,CAAM;QACf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yBAAyB,EAAE;YAC3D,IAAI,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,EAAE;SAC3C,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;QAChD,CAAC,CAAC,CAAC;IACL,CAAC;IACD,wGAAwG;IAGxG,gBAAgB;QACd,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,yBAAyB,CAAC,CAAC;IACvD,CAAC;IAED,yDAAyD;IACzD,gBAAgB;QACd,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,8BAA8B,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAChF,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;YACvB,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;gBAC1B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aACxC;QAEH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,6BAA6B,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAC/E,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;gBAC1B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aACxC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,wDAAwD;IAExD,OAAO,CAAC,KAAU;QAChB,IAAI,GAAG,GAAG,KAAK,CAAC;QAChB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IACpC,CAAC;IAED,aAAa,CAAC,SAAS;QACrB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;IAC1C,CAAC;IAED,qCAAqC;IACrC,cAAc;QACZ,IAAI,IAAI,GAAG;YACT,QAAQ,EAAE,OAAO;YACjB,WAAW,EAAE;gBACX,MAAM,EAAE,MAAM;aACf;YACD,OAAO,EAAE,IAAI,CAAC,UAAU;SACzB;QACD,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,IAAI,CAAC;aACpC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACpB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC;QAE/B,CAAC,CAAC;IACN,CAAC;IAED,sBAAsB;QACpB,IAAI,IAAI,GAAG;YACT,QAAQ,EAAE,OAAO;YACjB,WAAW,EAAE;gBACX,MAAM,EAAE,eAAe;aACxB;YACD,OAAO,EAAE,IAAI,CAAC,UAAU;SACzB;QACD,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,IAAI,CAAC;aACpC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACpB,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,GAAG,CAAC;QACvC,CAAC,CAAC;IACN,CAAC;IAGD,iCAAiC;IACjC,gBAAgB;QACd,IAAI,IAAI,GAAG;YACT,QAAQ,EAAE,OAAO;YACjB,WAAW,EAAE;gBACX,MAAM,EAAE,QAAQ;aACjB;YACD,OAAO,EAAE,IAAI,CAAC,UAAU;SACzB;QACD,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAC3D,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,GAAG,CAAC;QACjC,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,qEAAqE;IACrE,QAAQ;QACN,IAAI,CAAM,CAAC;QACX,KAAK,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE;YACrC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,aAAa,EAAE,CAAC;SAChD;QAED,kCAAkC;QAClC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE;YAC7B,sCAAsC;YACtC,qBAAqB;YACrB,4BAA4B;YAC5B,YAAY;YACZ,UAAU;SACX;aAAM;YAEL,OAAO,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,eAAe,CAAC;YAChD,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,EAAE;gBACnC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;aACjD;iBAAM;gBACL,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;gBAAA,CAAC;aAClD;YAED,oCAAoC;YACpC,IAAI,QAAQ,GAAQ;gBAClB,QAAQ,EAAE,OAAO;gBACjB,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC;gBAC/D,WAAW,EAAE,yBAAW,CAAC,WAAW,GAAG,gBAAgB;gBACvD,WAAW,EAAE,CAAC,mBAAmB,CAAC;gBAClC,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC;aAC5C,CAAC;YAEF,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;gBAC7E,IAAI,QAAQ,CAAC,MAAM,IAAI,SAAS,EAAE;oBAChC,IAAI,MAAM,GAAG,IAAI,CAAC;oBAClB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE;wBACvC,QAAQ,EAAE,IAAI;qBACf,CAAC,CAAC;iBACJ;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,EAAE;wBACnC,QAAQ,EAAE,IAAI;qBACf,CAAC,CAAC;iBACJ;YACH,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE;gBACX,KAAK,CAAC,wCAAwC,CAAC,CAAC;YAClD,CAAC,CAAC,CAAC;SAEJ;IAGH,CAAC;IAED,SAAS,CAAC,KAAK;QACb,OAAO,KAAK,CAAC;IACf,CAAC;CACF;AAjXD,wDAiXC;AAKD,yGAAyG;AACzG,eAAe;AACf,2BAA2B;AAC3B,+BAA+B;AAC/B,KAAK;AAEL,uBAAuB;AAEvB,iBAAiB;AACjB,6CAA6C;AAC7C,4DAA4D;AAE5D,wBAAwB;AACxB,8BAA8B;AAC9B,MAAM;AAEN,IAAI;AACJ,yGAAyG;AAEzG,MAKa,yBAAyB;IAOpC,YAAmB,SAAkD,EAC5D,EAAe,EAAS,WAA+B,EAAS,MAAqB,EACrF,WAA2B,EAAkC,IAAgB;QAFnE,cAAS,GAAT,SAAS,CAAyC;QAC5D,OAAE,GAAF,EAAE,CAAa;QAAS,gBAAW,GAAX,WAAW,CAAoB;QAAS,WAAM,GAAN,MAAM,CAAe;QACrF,gBAAW,GAAX,WAAW,CAAgB;QAAkC,SAAI,GAAJ,IAAI,CAAY;QAP/E,kBAAa,GAAQ,iBAAS,CAAC;QAQpC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC;QAEzB,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACjC,QAAQ,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YACnC,eAAe,EAAE,EAAE;SACpB,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,iBAAiB,CAAC,EAAE,CAAC;IAEvE,CAAC;IAED,aAAa,CAAC,WAAmB,EAAE,kBAA0B;QAC3D,OAAO,CAAC,KAAgB,EAAE,EAAE;YAC1B,IAAI,aAAa,GAAG,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,EAC7C,oBAAoB,GAAG,KAAK,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;YAC5D,IAAI,aAAa,CAAC,KAAK,KAAK,oBAAoB,CAAC,KAAK,EAAE;gBACtD,OAAO,oBAAoB,CAAC,SAAS,CAAC,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC;aAChE;iBAAM;gBACL,OAAO,oBAAoB,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;aAC7C;QACH,CAAC,CAAC;IACJ,CAAC;IAED,wBAAwB;QACtB,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE;YACzC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,aAAa,EAAE,CAAC;SAChD;QAED,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE;YAC5B,OAAO,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,eAAe;YAC/C,IAAI,IAAI,GAAG;gBACT,KAAK,EAAE,IAAI,CAAC,SAAS;gBACrB,WAAW,EAAE,CAAC;gBACd,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,QAAQ;aACjD;YAED,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAC1E,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;CAEF;AAvDD,8DAuDC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8DChcG,62BAI8E,sFAApC,mBAAmC,kBAA3E,mBAAuC,mBAD6B,mBAA0C,oBAHxD,mBAAsB,UAAC,mBAAqB,eAC3B,mBAAuC,oBAAhE,mBAAwB,YAAtE,mBAA6C,wBAEX,mBAAiC,iBAAnE,mBAAiC,iBADjC,oBAAiB,SAAuB,oBAAwB,cAAC,oBAAoB,SAAnE,oBAAqB,UAFzC,eAI0C,SAAmC,EAA3E,SAAuC,EAD6B,SAA0C,EAHxD,SAAsB,EAAC,SAAqB,EAC3B,SAAuC,EAAhE,SAAwB,EAAtE,SAA6C,EAEX,SAAiC,EAAnE,SAAiC,EADjC,UAAiB,EAAuB,UAAwB,EAAC,UAAoB,EAAnE,UAAqB,CAEqC;8DAI9E,2EAAgC,kDAAgB;8DAxBpD,2QAAkB,IAElB,+QAAgC,IAE9B,mMAAwC,IACtC,wXAAgC,MAC9B,wEAAI,iDAAe,MAGrB,2XAAgC,MAC9B,iGAAwB;;;mLAAuC,GAApC,aAAmC,IAAC,8CAAiB,MAAI,kDAAqB,MACzG;;;gOAAwE,GAAhD,aAA+C,GAAvE,yHAAwE,wCAAU,MAKpF,qLAI8E,IAI9E,qLAAgC,IAKpC,6NAAkB,iDA7BlB,YAAkB,GAUe,iDAAmC,GAAtC,aAAuC,EAApC,SAAmC,GACtC,8DAA+C,GAAvE,aAAwE,EAAhD,UAA+C,GAK1C,wCAAwB,GAAvD,aAI8E,EAJ/C,UAAwB,GAQnD,yCAA2B,GAA/B,aAAgC,EAA5B,UAA2B,GAKnC,aAAkB,2BA3BlB,6FAAgC,GAG5B,wJAAgC,GAIhC,2JAAgC,GACN,iHAAuC,GAC/D,8JAAwE;;;;;;;;;;;;;;;;;;;;ACZ9E,yEAAkD;AAKlD,MAKa,mBAAmB;IA+B9B,uEAAuE;IAEvE,YAAoB,IAAwB,EAAU,aAA4B,EACxE,MAAc,EAAQ,cAA+B;QAD3C,SAAI,GAAJ,IAAI,CAAoB;QAAU,kBAAa,GAAb,aAAa,CAAe;QACxE,WAAM,GAAN,MAAM,CAAQ;QAAQ,mBAAc,GAAd,cAAc,CAAiB;QAhC/D,uEAAuE;QAC/D,YAAO,GAAQ,EAAE,CAAC;QACnB,iBAAY,GAAQ,CAAC,KAAK,EAAE,YAAY,EAAE,UAAU,EAAE,iBAAiB;YAC7E,YAAY,EAAC,UAAU,EAAC,iBAAiB,EAAC,cAAc,EAAC,SAAS,EAAC,MAAM,EAAC,UAAU,EAAC,SAAS;YAC9F,WAAW,EAAC,mBAAmB,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;QACnD,0BAAqB,GAAQ;YAClC,WAAW,EAAE,YAAY,EAAE,UAAU,EAAE,WAAW,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;YACtF,cAAc,EAAE,eAAe,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,WAAW,EAAE,YAAY;YAC7F,cAAc,EAAC,aAAa,EAAC,QAAQ,EAAG,aAAa;YACrD,MAAM,EAAE,WAAW,EAAC,MAAM,EAAG,MAAM;SACpC,CAAC;QAEK,sBAAiB,GAAQ,CAAC,KAAK,EAAE,SAAS,EAAE,WAAW,EAAC,YAAY,EAAC,cAAc,CAAC,CAAC;QACrF,cAAS,GAAQ,OAAO,CAAC;QACzB,mBAAc,GAAQ,iBAAiB,CAAC;QACxC,mBAAc,GAAQ,kBAAkB,CAAC;QAEzC,sBAAiB,GAAK,UAAU,CAAC;QACjC,qBAAgB,GAAK,wBAAwB;QAC7C,YAAO,GAAO,8BAA8B,CAAC;QAE7C,WAAM,GAAQ,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,CAAC;QAC7E,oBAAe,GACpB;YACE,YAAY,EAAE,CAAC,EAAE,KAAK,EAAE,kBAAkB,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC;YACnF,UAAU,EAAE,CAAC,EAAE,KAAK,EAAE,gBAAgB,EAAE,KAAK,EAAE,UAAU,EAAE;gBAC3D,kDAAkD;gBAClD,EAAE,KAAK,EAAE,kBAAkB,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC;SAC/C,CAAC;QAMF,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACjD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;IAC7B,CAAC;IAGD,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE;YAC/C,IAAI,CAAC,OAAO,GAAG,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC;QACtC,CAAC,CAAC,CAAC;IACL,CAAC;CAGF;AArDD,kDAqDC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oEC7BS,mMAC0E,oEACtC,iCAFpC,0DAC0E;oEAU1E,oMACsE,+DACvC,iCAF/B,0DACsE;oEAEtE,oMACyH,oDACrG,iCAFpB,0DACyH;oEAQzH,oMACsE,qEACjC,iCAFrC,0DACsE;oEAQtE,oMACwE,gEACxC,iCAFhC,0DACwE;oEAOtE;;;;;;kPAAmE,iCAAgB,2BAAzC,0EAAwB,GAAlE,YAAmE,EAAzB,SAAwB,2BAAlE,+bAAmE,qEAAgB;oEAQnF;;;;;;kPAA4D,iCAAU,2BAA7B,qEAAkB,GAA3D,YAA4D,EAAnB,SAAkB,2BAA3D,+bAA4D,gEAAU;oEAQtE;;;;;;kPAAmE,sCAC/C,2BADyB,yEAAqB,GAAlE,YAAmE,EAAtB,SAAqB,2BAAlE,+bAAmE,sIAC/C;oEAStB,oMACoE,4DAExC,iCAH5B,0DACoE;qEAkBlE,oMACsH,iEACrF,iCAFjC,0DACsH;qEAOtH,qMACoI,0DAC1G,iCAF1B,0DACoI;qEAbxI,8EAAiC,KAC/B,ykDAAmC,MACjC;;;;;;;;;;;;;;;;;;;;;y6BAC+D,KAC/D,yLACsH,IAIxH,klDAAmC,MACjC;;;;;;;;;;;;;;;;;;;;;26BACsE,KACtE,yLACoI,iDAVlI,gEAA4D,GAD9D,aAC+D,EAA7D,UAA4D,GAD9C,2BAAsB,EAAC,2BAAe,EAAtD,aAC+D,EAD/C,UAAsB,EAAC,UAAe,GAGpD,4HAAmH,YADrH,aACsH,EAApH,UAAmH,GAMnH,uEAAmE,GADrE,aACsE,EAApE,UAAmE,GADrD,mCAA8B,EAAC,2BAAe,EAA9D,aACsE,EADtD,UAA8B,EAAC,UAAe,GAG5D,0IAAiI,YADnI,aACoI,EAAlI,UAAiI,2BAZrI,u8CAAmC,IACjC,o/BAC+D,IAMjE,k/CAAmC,IACjC,o/BACsE;qEAexE,6EAAgC,KAC9B,oOAA+D,YAAzB;;wBAAwB;MAA9D,uLAA+D,+CAAiB,iCAAhF,2JAA+D;iHAxI3E,4QAAkB,IAClB,+QAAgC,IAE9B,kMAAwC,sCAExC,MACA,kGAAyB,KAEvB,oGAAwB,KACtB;;;sLAAuC,GAApC,aAAmC,IAAC,8CAAiB,MAAI,qCAC5D;;;sLAAsD,GAAnD,aAAkD,IAAC,yDAA4B,MAAI,0CAExF,MAGF,yQAA2B,IAKzB,qMAAuC,IACrC;;;;;wBACmD;MAAjD;;wBAAgD;MADlD,mZACmD,IAEjD,2mDAAkC,MAChC,uJAAW,kDAAiB,MAC5B;;;;;;;;;;;;;;;;;;;;wBAC8D;MAA5D;;wBAA2D;MAD7D,84BAC8D,KAC9D,wLAC0E,IAM5E,mnDAAkC,MAChC,yJAAW,8CAAa,MACxB;;;;;;;;;;;;;;;;;;;;wBACyD;MAAvD;;wBAAsD;MADxD,g5BACyD,KACzD,wLACsE,IAEtE,wLACyH,IAI3H,mnDAAkC,MAChC,yJAAW,uCAAM,MACjB;;;;;;;;;;;;;;;;;;;;wBACyD;MAAvD;;wBAAsD;MADxD,g5BACyD,KACzD,yLACsE,IAIxE,qnDAAkC,MAChC,2JAAW,wCAAO,MAClB;;;;;;;;;;;;;;;;;;;;wBAC2D;MAAzD;;wBAAwD;MAD1D,o5BAC2D,KAC3D,yLACwE,IAG1E,goDAAqD,MACnD,2JAAW,sCAAK,MAChB;;;;;;;;wBAA+E;MAA3C;;wBAA0C;MAA9E,wgCAA+E,KAC7E;;;;;;oPAAsB,+CAAiB,MACvC,uNAAmE,IAIvE,goDAAqD,MACnD,2JAAW,qCAAI,MACf;;;;;;;;;4+BAAmC,KACjC;;;;;;oPAAsB,2CAAa,MACnC,uNAA4D,IAIhE,goDAAqD,MACnD,2JAAW,kDAAiB,MAC5B;;;;;;;;;qgCAA4C,KAC1C;;;;;;oPAAsB,2CAAa,MACnC,uNAAmE,IAMvE,qnDAAkC,MAChC,2JAAW,oCAAG,MACd;;;;;;;;;;;;;;;;;;;;wBACuD;MAArD;;wBAAoD;MADtD,o5BACuD,KACvD,yLACoE,IAMtE,gkDAAgB,MACd,2JAAW,qCAAI,MACf;;;;;;;;;;;;;;;;;;;;;k7BAA4F,KAC5F;;;2XAA2D,IAC3D,uXAA0B,IAI5B,6LAAiC,IAkBjC,osCAAiF,oCAAM,MAGvF,wGAA0B,KACxB,sOAAmE,YAA7B;;wBAA4B;MAAlE,yLAAmE,mCAAK,MAExE,kVAAqC,oCAAM,MAC3C,mVAAsC,qCAA2B,MACjE,6LAAgC,IAQ1C,+NAAkB,iDA/IlB,YAAkB,GAST,iDAAmC,GAAtC,aAAuC,EAApC,SAAmC,GACnC,gEAAkD,GAArD,aAAsD,EAAnD,SAAkD,GAWwB,oBAAqC,0BAAlH,aACmD,EAD0B,UAAqC,GAGhG,uBAAiB,EAAjC,aAAkC,EAAlB,UAAiB,GAEU,kEAA8D,GAAvG,aAC8D,EADrB,UAA8D,GAAvF,6BAAwB,EAAxC,aAC8D,EAD9C,UAAwB,GAE7B,gMAC8D,oBADzE,aAC0E,EAD/D,UAC8D,GAM3D,uBAAiB,EAAjC,aAAkC,EAAlB,UAAiB,GAEa,6DAAyD,GAArG,aACyD,EADb,UAAyD,GAArF,iCAA2B,EAA3C,aACyD,EADzC,WAA2B,GAEhC,kLAC0D,oBADrE,aACsE,EAD3D,WAC0D,GAGnE,wHAAsH,oBADxH,aACyH,EAAvH,WAAsH,GAI1G,wBAAiB,EAAjC,aAAkC,EAAlB,WAAiB,GAEK,8DAAyD,GAA7F,aACyD,EADrB,WAAyD,GAA7E,yBAAmB,EAAnC,aACyD,EADzC,WAAmB,GAExB,kLAC0D,oBADrE,cACsE,EAD3D,WAC0D,GAIvD,wBAAiB,EAAjC,cAAkC,EAAlB,WAAiB,GAEU,gEAA2D,GAApG,cAC2D,EADlB,WAA2D,GAAjF,2BAAqB,EAAxC,cAC2D,EADxC,WAAqB,GAE7B,wLAC4D,oBADvE,cACwE,EAD7D,WAC4D,GAGtC,wBAAiB,EAApD,cAAqD,EAAlB,WAAiB,GAEtC,yBAAuB,EAAnC,cAA+E,EAAnE,WAAuB,GAAnC,cAA+E,GACjE,mBAAS,EAArB,cAAsB,EAAV,WAAS,GACT,qBAA6B,SAAzC,cAAmE,EAAvD,WAA6B,GAIV,wBAAiB,EAApD,cAAqD,EAAlB,WAAiB,GAEtC,wBAAsB,EAAlC,cAAmC,EAAvB,WAAsB,GAAlC,cAAmC,GACrB,mBAAS,EAArB,cAAsB,EAAV,WAAS,GACT,qBAA4B,SAAxC,cAA4D,EAAhD,WAA4B,GAIT,wBAAiB,EAApD,cAAqD,EAAlB,WAAiB,GAEtC,wBAAsB,EAAlC,cAA4C,EAAhC,WAAsB,GAAC,oBAAQ,EAA3C,cAA4C,EAAT,WAAQ,GAC7B,mBAAS,EAArB,cAAsB,EAAV,WAAS,GACT,qBAAgC,cAA5C,cAAmE,EAAvD,WAAgC,GAMhC,wBAAiB,EAAjC,cAAkC,EAAlB,WAAiB,GAEG,4DAAuD,GAAzF,cACuD,EADrB,WAAuD,GAAzE,uBAAiB,EAAjC,cACuD,EADvC,WAAiB,GAEtB,4KACwD,oBADnE,cACoE,EADzD,WACwD,GAQ9B,iCAA0B,GAAxD,qBAAoB,aAAwD,oBAAQ,EAA3F,cAA4F,EAAvD,WAA0B,EAAxD,WAAoB,EAAwD,kCAAQ,EAA3B,wBAAkB,EAA3E,qBAAoB,aAA3B,cAA4F,EAAT,WAAQ,EAA3B,WAAkB,EAA3E,WAAoB,GACM,iCAAgB,GAAC,oBAAQ,EAA1D,cAA2D,EAA1B,WAAgB,EAAC,WAAQ,GAK9C,sBAAkB,YAAhC,cAAiC,EAAnB,WAAkB,GAkByC,oBAAO,EAAhF,cAAiF,EAAR,WAAO,GAAlE,+DAA0D,GAAxE,cAAiF,EAAnE,WAA0D,GAQxD,qBAAiB,YAA/B,cAAgC,EAAlB,WAAiB,GAQzC,cAAkB,mDA9IlB,6FAAgC,GAEU,4DAExC,GAII,iHAAuC,GACvC,iHAAsD,GAAgC,0DAExF,GAGF,+FAA2B,GAMvB,ubACmD,GAEjD,k/CAAkC,IAEhC,o/BAC8D,IAQhE,k/CAAkC,IAEhC,o/BACyD,IAS3D,8hDAAkC,IAEhC,ohCACyD,IAM3D,qjDAAkC,IAEhC,siCAC2D,IAK7D,qjDAAqD,IAEnD,o6CAA+E,IAC7E,ifAAsB,GAK1B,qjDAAqD,IAEnD,o6CAAmC,IACjC,ifAAsB,GAK1B,qjDAAqD,IAEnD,o6CAA4C,IAC1C,ifAAsB,GAO1B,qjDAAkC,IAEhC,siCACuD,IAQzD,qjDAAgB,IAEd,mpCAA4F,IAC5F,4XAA2D,GAuB7D,63BAAiF,IAI/E,yKAAmE,GAEnE,yKAAqC,GACrC,yKAAsC,yEAA2B;;;;;;;;;0EC3HvD,mMACiD,2DACpB,iCAF7B,0DACiD;0EAMjD,oMACkH,0DACtF,iCAF5B,0DACkH;0EAnBtI,yQAA2B,IACnB,6PAAqB,gDAAe,MAEpC;;;;;wBAC4C;MAAxC;;wBAAuC;MAD3C,4YAC4C,IACxC,+MAA2C,IAGvC,qjDAAgB,MACZ;;;;;;;;;;;;;;;;;;;;;u6BACmD,KACnD,8LACiD,IAEnC,4EAAI,KACtB,8jDAAgB,MACZ;;;;;;;;;;;;;;;;;;;;;y6BAC0D,KAC1D,8LACkH,IAGrG,4EAAI,KAErB,sGAA0B,KACtB;;;uWAAwD,sCAAQ,MAChE;;;uWAAgF,sCAAQ,mDAzBpG,YAAqB,GAE8C,mBAA2B,gBAA9F,YAC4C,EADuB,SAA2B,GAOlF,sDAAkD,GADlD,aACmD,EAAnD,UAAkD,GADlC,2BAAsB,EAAC,2BAAe,EAAtD,aACmD,EADnC,UAAsB,EAAC,UAAe,GAE3C,4JACqC,oBADhD,aACiD,EADtC,UACqC,GAKhD,6DAAyD,GADzD,aAC0D,EAA1D,UAAyD,GADzC,mCAA8B,EAAC,2BAAe,EAA9D,aAC0D,EAD1C,UAA8B,EAAC,UAAe,GAG1D,sHAA6G,YADjH,aACkH,EAA9G,UAA6G,GAMxE,yBAAa,EAA9B,mBAAgB,EAAxC,aAAwD,EAAf,UAAa,EAA9B,UAAgB,GAChB,0BAAa,EAAC,sBAAyB,EAA/D,aAAgF,EAAxD,WAAa,EAAC,WAAyB,2BA1BnF,6FAA2B,GACnB,0DAAqB,GAErB,iaAC4C,GAIpC,k/CAAgB,IACZ,o/BACmD,IAKvD,k/CAAgB,IACZ,o/BAC0D,IAQ1D,uRAAwD,GACxD,+RAAgF;;;;;;;;;;;;;;;;;;;;AC3BpG,yEAAqE;AACrE,4EAAqG;AAMrG,qFAA6E;AAC7E,8HAAsE;AAKrE,MAKY,yBAAyB;IAmBpC,YAAmB,EAAe,EAAS,WAA2B,EAC7D,MAAc,EAAS,WAA+B,EAAU,QAAkB,EAClF,MAAqB,EAAS,QAAqB,EAAS,MAAiB;QAFnE,OAAE,GAAF,EAAE,CAAa;QAAS,gBAAW,GAAX,WAAW,CAAgB;QAC7D,WAAM,GAAN,MAAM,CAAQ;QAAS,gBAAW,GAAX,WAAW,CAAoB;QAAU,aAAQ,GAAR,QAAQ,CAAU;QAClF,WAAM,GAAN,MAAM,CAAe;QAAS,aAAQ,GAAR,QAAQ,CAAa;QAAS,WAAM,GAAN,MAAM,CAAW;QApB/E,YAAO,GAAQ,wBAAwB,CAAC;QAExC,aAAQ,GAAQ,EAAE,MAAM,EAAE,mBAAmB,EAAE,GAAG,EAAE,mBAAmB,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;QAIrG,SAAI,GAAG,IAAI,mBAAW,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;QAEnC,mBAAc,GAAG,IAAI,mBAAW,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;QAItD,cAAS,GAAQ,EAAE,CAAC;QAIpB,gBAAW,GAAK,EAAE,CAAC;QAKtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC;QACxD,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAG,IAAI,CAAC,SAAS,EAAC;YAChB,IAAI,CAAC,gBAAgB,EAAE,CAAC;SACzB;aAAI;YACJ,IAAI,CAAC,eAAe,EAAE,CAAC;SACvB;IAEH,CAAC;IAED,QAAQ;QACN,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,4BAA4B,CAAC;YACpD,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,qBAAqB,CAAC;YAC1C,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,QAAQ,CAAC;YACpC,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;IACH,CAAC;IACD,cAAc;QACZ,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;YACrC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;YAC/B,IAAI,WAAgB,CAAC;YACrB,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;YAC5B,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YAC3C,CAAC,EAAE,GAAG,CAAC,CAAC;YACR,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;YAC1F,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YAChF,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YAChF,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;YACpF,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YAChF,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YAC9E,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YAC9E,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAC5E,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QAEpF,CAAC,CAAC;IACJ,CAAC;IACD,eAAe;QACb,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;QACvD,IAAI,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,EAAE,YAAY,CAAC,CAAC;QACnE,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC3C,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACvC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,KAAK,EAAE,kBAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;YACjF,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YAClC,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACpC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YACd,KAAK,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YACf,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YAChC,IAAI,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC;YACtB,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YAChB,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YACd,IAAI,EAAE,CAAC,eAAe,EAAE,EAAE,CAAC;YAC3B,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,kBAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YACxF,eAAe,EAAE,EAAE;SACpB,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,iBAAiB,CAAC,EAAE,CAAC;IACvE,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;QACvD,IAAI,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,EAAE,YAAY,CAAC,CAAC;QACnE,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC3C,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACvC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,KAAK,EAAE,kBAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;YACjF,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YAClC,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACpC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YACd,KAAK,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YACf,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YACd,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YAChC,IAAI,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC;YACtB,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YAChB,IAAI,EAAE,CAAC,eAAe,EAAE,EAAE,CAAC;SAC5B,CAAC,CAAC;IACL,CAAC;IAED,aAAa,CAAC,WAAmB,EAAE,kBAA0B;QAC3D,OAAO,CAAC,KAAgB,EAAE,EAAE;YAC1B,IAAI,aAAa,GAAG,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,EAC7C,oBAAoB,GAAG,KAAK,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;YAC5D,IAAI,aAAa,CAAC,KAAK,KAAK,oBAAoB,CAAC,KAAK,EAAE;gBACtD,OAAO,oBAAoB,CAAC,SAAS,CAAC,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC;aAChE;iBACI;gBACH,OAAO,oBAAoB,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;aAC7C;QACH,CAAC,CAAC;IACJ,CAAC;IAED,UAAU,CAAC,CAAM;QACf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,+BAA+B,EAAE;YAEjE,IAAI,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,EAAE;SAC3C,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;QAChD,CAAC,CAAC,CAAC;IACL,CAAC;IACD,4BAA4B;IAC5B,YAAY,CAAC,IAAS,EAAE,GAAQ;QAE9B,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,eAAe,EAAE,CAAC;IACvC,CAAC;IACD,4BAA4B;IAC5B,yDAAyD;IACzD,gBAAgB;QACd,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,8BAA8B,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACvF,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;QACzB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,6BAA6B,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACtF,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,IAAG,IAAI,CAAC,SAAS,EAAC;gBAChB,IAAI,CAAC,cAAc,EAAE,CAAC;aACvB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,wDAAwD;IAExD,OAAO,CAAC,KAAK;QACX,IAAI,GAAG,GAAG,KAAK,CAAC;QAChB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QAClB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IACpC,CAAC;IACD,gBAAgB;QACd,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,iCAAiC,CAAC,CAAC;IAC/D,CAAC;IACC,qCAAqC;IACrC,cAAc;QACZ,IAAI,IAAI,GAAG;YACT,QAAQ,EAAE,OAAO;YACjB,WAAW,EAAE;gBACX,MAAM,EAAE,MAAM;aACf;YACD,OAAO,EAAE,IAAI,CAAC,UAAU;SACzB;QACD,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,UAAU,EAAE,IAAI,CAAC;aAC3C,SAAS,CAAC,QAAQ,CAAC,EAAE;YACpB,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,GAAG,CAAC;QAClC,CAAC,CAAC,CAAC;IACP,CAAC;IACH,aAAa,CAAC,SAAS;QACrB,OAAO,CAAC,GAAG,CAAC,WAAW,EAAC,SAAS,CAAC;QAClC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QACxC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;IAC1B,CAAC;IAED,iCAAiC;QAC/B,IAAI,CAAM,CAAC;QACX,KAAK,CAAC,IAAI,IAAI,CAAC,uBAAuB,CAAC,QAAQ,EAAE;YAC/C,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,aAAa,EAAE,CAAC;SAC1D;QACA,IAAG,IAAI,CAAC,SAAS,EAAC;YACjB,OAAO,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,QAAQ,CAAC;YACnD,OAAO,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,eAAe,CAAC;SAC1D;QACF,IAAI,IAAI,CAAC,uBAAuB,CAAC,KAAK,EAAE;YACtC,IAAI,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,MAAM;gBAC3C,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;;gBAE1D,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;YAE5D,OAAO,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,eAAe,CAAC;YAE1D,IAAI,IAAS,CAAC;YACd,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,IAAI,GAAG;oBACL,QAAQ,EAAE,OAAO;oBACjB,MAAM,EAAE;wBACN,EAAE,EAAE,IAAI,CAAC,SAAS;wBAClB,UAAU,EAAE,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,UAAU;wBACzD,KAAK,EAAE,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,KAAK;wBAC/C,KAAK,EAAE,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,KAAK;wBAC/C,OAAO,EAAE,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,OAAO;wBACnD,IAAI,EAAE,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,IAAI;wBAC7C,KAAK,EAAE,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,KAAK;wBAC/C,IAAI,EAAE,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,IAAI;wBAC7C,GAAG,EAAE,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,GAAG;wBAC3C,MAAM,EAAE,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,MAAM;qBAClD;oBACD,OAAO,EAAE,IAAI,CAAC,UAAU;iBACzB,CAAC;aACJ;iBAAM;gBACJ,IAAI,GAAG;oBACL,QAAQ,EAAE,OAAO;oBACjB,MAAM,EAAE,IAAI,CAAC,uBAAuB,CAAC,KAAK;oBAC1C,WAAW,EAAG,yBAAW,CAAC,WAAW,GAAG,gBAAgB;oBACxD,OAAO,EAAE,IAAI,CAAC,UAAU;iBACzB;aACF;YACD,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,iBAAiB,EAAE,IAAI,CAAC;iBAClD,SAAS,CAAC,QAAQ,CAAC,EAAE;gBACpB,IAAI,MAAM,GAAG,IAAI,CAAC;gBAClB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE;oBACvC,QAAQ,EAAE,IAAI;iBACf,CAAC,CAAC;gBACH,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;gBAC/B,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,iCAAiC,CAAC,CAAC;YAC/D,CAAC,CAAC;SACL;aAAI;YACH,KAAK,CAAC,OAAO,CAAC,CAAC;SAChB;IACH,CAAC;CACF;AAvOA,8DAuOA;AAED,MAKa,+BAA+B;IAO1C,YAAmB,SAAwD,EAClE,EAAe,EAAS,WAA+B,EAAS,MAAqB,EACrF,WAA2B,EAAkC,IAAgB;QAFnE,cAAS,GAAT,SAAS,CAA+C;QAClE,OAAE,GAAF,EAAE,CAAa;QAAS,gBAAW,GAAX,WAAW,CAAoB;QAAS,WAAM,GAAN,MAAM,CAAe;QACrF,gBAAW,GAAX,WAAW,CAAgB;QAAkC,SAAI,GAAJ,IAAI,CAAY;QAP/E,kBAAa,GAAQ,iBAAS,CAAC;QAQpC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC;QAEzB,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACjC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,kBAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YACxF,eAAe,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;SAC1B,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,iBAAiB,CAAC,EAAE,CAAC;IAEvE,CAAC;IAED,aAAa,CAAC,WAAmB,EAAE,kBAA0B;QAC3D,OAAO,CAAC,KAAgB,EAAE,EAAE;YAC1B,IAAI,aAAa,GAAG,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,EAC7C,oBAAoB,GAAG,KAAK,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;YAC5D,IAAI,aAAa,CAAC,KAAK,KAAK,oBAAoB,CAAC,KAAK,EAAE;gBACtD,OAAO,oBAAoB,CAAC,SAAS,CAAC,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC;aAChE;iBACI;gBACH,OAAO,oBAAoB,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;aAC7C;QACH,CAAC,CAAC;IACJ,CAAC;IAED,wBAAwB;QACtB,IAAI,CAAM,CAAC;QACX,KAAK,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE;YACrC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,aAAa,EAAE,CAAC;SAChD;QACD,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE;YAC5B,OAAO,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,eAAe;YAC/C,IAAI,IAAI,GAAG;gBACT,KAAK,EAAE,IAAI,CAAC,SAAS;gBACrB,WAAW,EAAE,CAAC;gBACd,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,QAAQ;aACjD;YACD,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,gBAAgB,EAAC,IAAI,CAAC,CAAC,SAAS,CAAC,QAAQ,GAAE;gBACtE,OAAO,CAAC,GAAG,CAAC,UAAU,EAAC,QAAQ,CAAC,CAAC;YACnC,CAAC,CAAC,CAAC;SACJ;IAEH,CAAC;CACF;AAxDD,0EAwDC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0EC3RG,62BAKiF,sFAApC,mBAAmC,kBAA9E,mBAA0C,sBADR,mBAA0C,oBAJV,mBAAkC,sBACpG,mBAAiC,2BAAC,mBAAuC,oBACG,mBAAwB,YAApG,mBAAyD,oCAEzD,mBAAiC,iBADmC,mBAAiC,iBAD3C,oBAAiB,SACrD,oBAAwB,cAAC,oBAAoB,SAAnE,oBAAqB,UAHvB,eAK6C,SAAmC,EAA9E,SAA0C,EADR,SAA0C,EAJV,SAAkC,EACpG,SAAiC,EAAC,SAAuC,EACG,SAAwB,EAApG,SAAyD,EAEzD,SAAiC,EADmC,SAAiC,EAD3C,UAAiB,EACrD,UAAwB,EAAC,UAAoB,EAAnE,UAAqB,CAE0D;0EAEjF,+FAA4D,kDAAgB;0EAzBhF,2QAAkB,IAIlB,+QAAgC,IAE9B,mMAAwC,IACtC,wXAAgC,MAC9B,wEAAI,yDAAuB,MAG7B,sGAAyB,KAEvB,oGAAwB;;;mLAAuC,GAApC,aAAmC,IAAC,8CAAiB,MAAI,2DAC5E,MACR;;;gOAA+E,GAAvD,aAAsD,GAA9E,yHAA+E,gDAAkB,MAGnG,iMAKiF,IAEjF,iMAA4D,IAIhE,6NAAkB,iDA7BlB,YAAkB,GAae,iDAAmC,GAAtC,aAAuC,EAApC,SAAmC,GAEtC,oEAAsD,GAA9E,aAA+E,EAAvD,SAAsD,GAGjD,mDAAoC,GAAnE,aAKiF,EALlD,SAAoC,GAO/C,qDAAuC,GAA3D,aAA4D,EAAxC,UAAuC,GAI/D,aAAkB,2BAzBlB,6FAAgC,GAG5B,wJAAgC,GAMN,iHAAuC,GAE/D,8JAA+E;;;;;;;;;;;;;;;;;;;;AChBrF,yEAAkD;AAMlD,MAKa,+BAA+B;IA6B1C,YAAmB,cAA+B,EACzC,MAAqB,EAAS,IAAgB,EAC9C,WAA+B;QAFrB,mBAAc,GAAd,cAAc,CAAiB;QACzC,WAAM,GAAN,MAAM,CAAe;QAAS,SAAI,GAAJ,IAAI,CAAY;QAC9C,gBAAW,GAAX,WAAW,CAAoB;QA9BnC,wBAAmB,GAAO,EAAE,CAAC;QAG7B,6BAAwB,GAAQ,CAAC,UAAU,EAAC,KAAK,EAAC,MAAM,EAAC,QAAQ,EAAC,YAAY,EAAC,WAAW,EAAC,MAAM;YACxG,OAAO,EAAC,MAAM,EAAC,KAAK,CAAC,CAAC;QACb,YAAO,GAAQ,qCAAqC,CAAC;QACrD,sCAAiC,GAAQ;YAC9C,gBAAgB,EAAC,aAAa,EAAC,OAAO,EAAC,QAAQ,EAAC,OAAO,EAAC,OAAO,EAAC,SAAS,EAAC,SAAS;YACnF,MAAM,EAAC,YAAY,EAAC,QAAQ,EAAC,QAAQ,EAAC,UAAU,EAAC,WAAW,EAAC,WAAW,EAAE,YAAY;SACvF,CAAC;QACK,sBAAiB,GAAO,CAAC,KAAK,EAAC,QAAQ,EAAC,gBAAgB,CAAC,CAAC;QAE1D,mBAAc,GAAQ,iBAAiB,CAAC;QACxC,mBAAc,GAAQ,kBAAkB,CAAC;QAEzC,cAAS,GAAQ,OAAO,CAAC;QAEzB,WAAM,GAAQ,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,CAAC;QAC7E,sBAAiB,GAAQ,UAAU,CAAC;QACpC,wBAAmB,GAAO,yBAAyB,CAAC;QACpD,oBAAe,GACpB;YACE,YAAY,EAAE,CAAC,EAAE,KAAK,EAAE,kBAAkB,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC;YACnF,UAAU,EAAE,CAAC,EAAE,KAAK,EAAE,uBAAuB,EAAE,KAAK,EAAE,YAAY,EAAE;gBACpE,EAAE,KAAK,EAAE,kBAAkB,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC;SAE/C,CAAC;QAMF,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC1C,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC,OAAO,CAAE;IACjC,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;YACxC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;QAC3C,CAAC,CAAC;IACJ,CAAC;CAEF;AAhDD,0EAgDC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oECrCG,62BAcsC,sFAApC,mBAAmC,kBADnC,mBAA0C,sBAD1C,mBAA0C,oBAX1C,mBAA6B,iBAC7B,mBAAyB,mBACzB,mBAAuC,oBAGvC,mBAAwB,YAFxB,mBAAiD,4BAOjD,mBAAiC,iBADjC,mBAAiC,iBALjC,oBAAiB,SAGjB,oBAAwB,cACxB,oBAAoB,SAFpB,oBAAqB,UAPvB,eAcE,SAAmC,EADnC,SAA0C,EAD1C,SAA0C,EAX1C,SAA6B,EAC7B,SAAyB,EACzB,SAAuC,EAGvC,SAAwB,EAFxB,SAAiD,EAOjD,SAAiC,EADjC,SAAiC,EALjC,UAAiB,EAGjB,UAAwB,EACxB,UAAoB,EAFpB,UAAqB,CAOe;oEAGtC,+FAAuD,kDAAgB;oEAjC3E,2QAAkB,IAGlB,+QAAgC,IAE9B,mMAAwC,IACtC,wXAAgC,MAC9B,wEAAI,sDAAoB,MAG1B,qGAAyB,KACvB,oGAAwB;;;mLAAuC,GAApC,aAAmC,IAAC,8CAAiB,MAAI,iDAAoB,MAK1G,2LAcsC,IAGtC,2LAAuD,IAQ3D,6NAAkB,iDAzClB,YAAkB,GAWe,iDAAmC,GAAtC,aAAuC,EAApC,SAAmC,GAKjC,8CAA+B,GAA9D,aAcsC,EAdP,SAA+B,GAiB1C,+CAAkC,GAAtD,aAAuD,EAAnC,SAAkC,GAQ1D,aAAkB,2BAtClB,6FAAgC,GAG5B,wJAAgC,GAKN,iHAAuC;;;;;;;;;;;;;;;;;;;;ACZrE,yEAAkD;AAClD,+EAAyD;AAIzD,MAMa,yBAAyB;IA8BpC,YAAmB,cAA8B,EAAS,MAAqB,EACtE,WAA+B;QADrB,mBAAc,GAAd,cAAc,CAAgB;QAAS,WAAM,GAAN,MAAM,CAAe;QACtE,gBAAW,GAAX,WAAW,CAAoB;QA7BjC,mBAAc,GAAQ,EAAE,CAAC;QACzB,qBAAgB,GAAQ,CAAC,WAAW,EAAE,SAAS,EAAE,aAAa,EAAE,QAAQ,EAAE,aAAa,EAAE,KAAK,EAAE,oBAAoB,EAAE,QAAQ,EAAE,oBAAoB,EAAE,cAAc,EAAE,WAAW,EAAE,aAAa,EAAE,MAAM,EAAE,uBAAuB,CAAC,CAAC;QACnO,YAAO,GAAQ,6BAA6B,CAAC;QAC7C,8BAAyB,GAAQ;YACtC,WAAW,EAAE,YAAY,EAAE,UAAU,EAAE,WAAW;YAClD,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,cAAc,EAAE,MAAM,EAAE,MAAM;YAC1D,QAAQ,EAAE,QAAQ,EAAC,SAAS,EAAE,SAAS;YACvC,cAAc,EAAE,MAAM;SACvB,CAAC;QAEK,mBAAc,GAAQ,iBAAiB,CAAC;QACxC,mBAAc,GAAQ,kBAAkB,CAAC;QACzC,sBAAiB,GAAO,CAAC,KAAK,EAAC,cAAc,CAAC,CAAC;QAC/C,cAAS,GAAQ,OAAO,CAAC;QAEzB,WAAM,GAAQ,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,CAAC;QAC7E,sBAAiB,GAAQ,UAAU,CAAC;QACpC,wBAAmB,GAAQ,kBAAkB,CAAC;QAC9C,oBAAe,GACpB;YACE,YAAY,EAAE,CAAC,EAAE,KAAK,EAAE,kBAAkB,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC;YACnF,UAAU,EAAE,CAAC,EAAE,KAAK,EAAE,gBAAgB,EAAE,KAAK,EAAE,UAAU,EAAE;gBAC3D,EAAE,KAAK,EAAE,kBAAkB,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC;SAE/C,CAAC;QAOF,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC1C,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC,OAAO,CAAC;IAEpC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,EAAE;YAC/C,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC;YACxC,IAAI,CAAC,cAAc,GAAG,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC;QAC7C,CAAC,CAAC,CAAC;IACL,CAAC;CACF;AAlDD,8DAkDC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+DCvBS,mMACqE,mEAClC,iCAFnC,0DACqE;+DAQrE,oMACoE,kEAClC,iCAFlC,0DACoE;+DAQpE,oMACkE,+DACnC,iCAF/B,0DACkE;+DAElE,oMAC6H,oDACzG,iCAFpB,0DAC6H;+DAQ7H,oMACkE,qEAC7B,iCAFrC,0DACkE;+DAQlE,oMACoE,gEACpC,iCAFhC,0DACoE;+DAOlE;;;;;;kPAAmE,iCAAgB,2BAAzC,0EAAwB,GAAlE,YAAmE,EAAzB,SAAwB,2BAAlE,+bAAmE,qEAAgB;+DAQnF;;;;;;kPAA4D,iCAAU,2BAA7B,qEAAkB,GAA3D,YAA4D,EAAnB,SAAkB,2BAA3D,+bAA4D,gEAAU;+DAUxE,oMACgE,4DAEpC,iCAH5B,0DACgE;gEAkB9D,oMAC0H,iEACzF,iCAFjC,0DAC0H;gEAO1H,qMACwI,0DAC9G,iCAF1B,0DACwI;gEAb5I,8EAAiC,KAC/B,ukDAAmC,MACjC;;;;;;;;;;;;;;;;;;;;;y6BACiE,KACjE,oLAC0H,IAI5H,ilDAAmC,MACjC;;;;;;;;;;;;;;;;;;;;;06BACwE,KACxE,oLACwI,iDAVtI,kEAA8D,GADhE,aACiE,EAA/D,UAA8D,GADhD,2BAAsB,EAAC,2BAAe,EAAtD,aACiE,EADjD,UAAsB,EAAC,UAAe,GAGpD,gIAAuH,YADzH,aAC0H,EAAxH,UAAuH,GAMvH,yEAAqE,GADvE,aACwE,EAAtE,UAAqE,GADvD,mCAA8B,EAAC,2BAAe,EAA9D,aACwE,EADxD,UAA8B,EAAC,UAAe,GAG5D,8IAAqI,YADvI,aACwI,EAAtI,UAAqI,2BAZzI,u8CAAmC,IACjC,o/BACiE,IAMnE,k/CAAmC,IACjC,o/BACwE;gEAe1E,6EAAgC,KAC9B,oOAA+D,YAAzB;;wBAAwB;MAA9D,uLAA+D,+CAAiB,iCAAhF,2JAA+D;4GA1I3E,4QAAkB,IAClB,+QAAgC,IAE9B,kMAAwC,sCAExC,MAGA,kGAAyB,KAEvB,oGAAwB,KACtB;;;sLAAuC,GAApC,aAAmC,IAAC,8CAAiB,MAAI,qCAC5D;;;sLAA6C,GAA1C,aAAyC,IAAC,gDAAmB,MAAI,0CAEtE,MAIF,yQAA2B,IAKzB,qMAAuC,IACrC;;;;;wBACyF;MAA/C;;wBAA8C;MADxF,mZACyF,IAEvF,2mDAAkC,MAChC,uJAAW,iDAAgB,MAC3B;;;;;;;;;;;;;;;;;;;;wBAC+D;MAA7D;;wBAA4D;MAD9D,84BAC+D,KAC/D,mLACqE,IAIvE,mnDAAkC,MAChC,yJAAW,gDAAe,MAC1B;;;;;;;;;;;;;;;;;;;;wBAC8D;MAA5D;;wBAA2D;MAD7D,g5BAC8D,KAC9D,mLACoE,IAItE,mnDAAkC,MAChC,yJAAW,8CAAa,MACxB;;;;;;;;;;;;;;;;;;;;wBAC2D;MAAzD;;wBAAwD;MAD1D,g5BAC2D,KAC3D,oLACkE,IAElE,oLAC6H,IAI/H,qnDAAkC,MAChC,2JAAW,uCAAM,MACjB;;;;;;;;;;;;;;;;;;;;wBAC2D;MAAzD;;wBAAwD;MAD1D,o5BAC2D,KAC3D,oLACkE,IAIpE,qnDAAkC,MAChC,2JAAW,wCAAO,MAClB;;;;;;;;;;;;;;;;;;;;wBAC6D;MAA3D;;wBAA0D;MAD5D,o5BAC6D,KAC7D,oLACoE,IAGtE,goDAAqD,MACnD,2JAAW,sCAAK,MAChB;;;;;;;;wBAA+E;MAA3C;;wBAA0C;MAA9E,wgCAA+E,KAC7E;;;;;;oPAAsB,4CAAc,MACpC,kNAAmE,IAIvE,goDAAqD,MACnD,2JAAW,qCAAI,MACf;;;;;;;;;4+BAAmC,KACjC;;;;;;oPAAsB,+CAAiB,MACvC,kNAA4D,IAMhE,qnDAAkC,MAChC,2JAAW,oCAAG,MACd;;;;;;;;;;;;;;;;;;;;wBACyD;MAAvD;;wBAAsD;MADxD,o5BACyD,KACzD,oLACgE,IAMlE,gkDAAgB,MACd,2JAAW,qCAAI,MACf;;;;;;;;;;;;;;;;;;;;;43BAAmF,KACnF;;;2XAA2D,IAC3D,uXAA0B,IAI5B,wLAAiC,IAkBjC,osCAAmF,oCAAM,MAIzF,wGAA0B,KACxB,sOAAmE,YAA7B;;wBAA4B;MAAlE,yLAAmE,mCAAK,MACxE,kVAAqC,oCAAM,MAC3C,mVAAsC,qCAA2B,MACjE,wLAAgC,IAY1C,+NAAkB,iDArJlB,YAAkB,GAWT,iDAAmC,GAAtC,aAAuC,EAApC,SAAmC,GACnC,uDAAyC,GAA5C,aAA6C,EAA1C,SAAyC,GAa1C,oBAAuC,4BADzC,aACyF,EAAvF,UAAuC,GAEvB,uBAAiB,EAAjC,aAAkC,EAAlB,UAAiB,GAEU,mEAA+D,GAAxG,aAC+D,EADtB,UAA+D,GAAxF,6BAAwB,EAAxC,aAC+D,EAD/C,UAAwB,GAE7B,mMACyD,oBADpE,aACqE,EAD1D,UACyD,GAItD,uBAAiB,EAAjC,aAAkC,EAAlB,UAAiB,GAES,kEAA8D,GAAtG,aAC8D,EADtB,UAA8D,GAAtF,6BAAuB,EAAvC,aAC8D,EAD9C,WAAuB,GAE5B,iMACwD,oBADnE,aACoE,EADzD,WACwD,GAIrD,wBAAiB,EAAjC,aAAkC,EAAlB,WAAiB,GAEa,gEAA2D,GAAvG,aAC2D,EADf,WAA2D,GAAvF,iCAA2B,EAA3C,aAC2D,EAD3C,WAA2B,GAEhC,wLACsD,oBADjE,cACkE,EADvD,WACsD,GAG/D,4HAA0H,oBAD5H,cAC6H,EAA3H,WAA0H,GAI9G,wBAAiB,EAAjC,cAAkC,EAAlB,WAAiB,GAEK,gEAA2D,GAA/F,cAC2D,EADvB,WAA2D,GAA/E,yBAAmB,EAAnC,cAC2D,EAD3C,WAAmB,GAExB,wLACsD,oBADjE,cACkE,EADvD,WACsD,GAInD,wBAAiB,EAAjC,cAAkC,EAAlB,WAAiB,GAEU,kEAA6D,GAAtG,cAC6D,EADpB,WAA6D,GAAnF,2BAAqB,EAAxC,cAC6D,EAD1C,WAAqB,GAE7B,8LACwD,oBADnE,cACoE,EADzD,WACwD,GAGlC,wBAAiB,EAApD,cAAqD,EAAlB,WAAiB,GAEtC,yBAAuB,EAAnC,cAA+E,EAAnE,WAAuB,GAAnC,cAA+E,GACjE,mBAAS,EAArB,cAAsB,EAAV,WAAS,GACT,qBAA6B,SAAzC,cAAmE,EAAvD,WAA6B,GAIV,wBAAiB,EAApD,cAAqD,EAAlB,WAAiB,GAEtC,wBAAsB,EAAlC,cAAmC,EAAvB,WAAsB,GAAlC,cAAmC,GACrB,mBAAS,EAArB,cAAsB,EAAV,WAAS,GACT,qBAA4B,SAAxC,cAA4D,EAAhD,WAA4B,GAM5B,wBAAiB,EAAjC,cAAkC,EAAlB,WAAiB,GAEG,8DAAyD,GAA3F,cACyD,EADvB,WAAyD,GAA3E,uBAAiB,EAAjC,cACyD,EADzC,WAAiB,GAEtB,kLACoD,oBAD/D,cACgE,EADrD,WACoD,GAQ1B,iCAA0B,GAAxD,qBAAoB,aAA3B,cAAmF,EAA9C,WAA0B,EAAxD,WAAoB,GAAqC,wBAAkB,EAA3E,qBAAoB,aAA3B,cAAmF,EAAnB,WAAkB,EAA3E,WAAoB,GACM,iCAAgB,GAAC,oBAAQ,EAA1D,cAA2D,EAA1B,WAAgB,EAAC,WAAQ,GAK9C,sBAAkB,YAAhC,cAAiC,EAAnB,WAAkB,GAkB2C,oBAAO,EAAlF,cAAmF,EAAR,WAAO,GAApE,iEAA4D,GAA1E,cAAmF,EAArE,WAA4D,GAQ1D,qBAAiB,YAA/B,cAAgC,EAAlB,WAAiB,GAYzC,cAAkB,mDApJlB,6FAAgC,GAEU,4DAExC,GAMI,iHAAuC,GACvC,iHAA6C,GAAuB,0DAEtE,GAIF,+FAA2B,GAMvB,ubACyF,GAEvF,k/CAAkC,IAEhC,o/BAC+D,IAMjE,k/CAAkC,IAEhC,o/BAC8D,IAMhE,8hDAAkC,IAEhC,ohCAC2D,IAS7D,qjDAAkC,IAEhC,siCAC2D,IAM7D,qjDAAkC,IAEhC,siCAC6D,IAK/D,qjDAAqD,IAEnD,o6CAA+E,IAC7E,ifAAsB,GAK1B,qjDAAqD,IAEnD,o6CAAmC,IACjC,ifAAsB,GAO1B,qjDAAkC,IAEhC,siCACyD,IAQ3D,qjDAAgB,IAEd,mpCAAmF,IACnF,4XAA2D,GAuB7D,63BAAmF,IAKjF,yKAAmE,GACnE,yKAAqC,GACrC,yKAAsC,yEAA2B;;;;;;;;;qDC7H3D,mMACiD,2DACpB,iCAF7B,0DACiD;qDAMjD,oMACkH,0DACtF,iCAF5B,0DACkH;qDAnBlI,yQAA2B,IACvB,6PAAqB,gDAAe,MAEpC;;;;;wBAC4C;MAAxC;;wBAAuC;MAD3C,4YAC4C,IACxC,+MAA2C,IAGvC,qjDAAgB,MACZ;;;;;;;;;;;;;;;;;;;;;u6BACmD,KACnD,yKACiD,IAEnC,4EAAI,KACtB,8jDAAgB,MACZ;;;;;;;;;;;;;;;;;;;;;y6BAC0D,KAC1D,yKACkH,IAGrG,4EAAI,KAErB,sGAA0B,KACtB;;;uWAAwD,sCAAQ,MAChE;;;uWAAgF,sCAAQ,mDAzBpG,YAAqB,GAE8C,mBAA2B,gBAA9F,YAC4C,EADuB,SAA2B,GAOlF,sDAAkD,GADlD,aACmD,EAAnD,UAAkD,GADlC,2BAAsB,EAAC,2BAAe,EAAtD,aACmD,EADnC,UAAsB,EAAC,UAAe,GAE3C,4JACqC,oBADhD,aACiD,EADtC,UACqC,GAKhD,6DAAyD,GADzD,aAC0D,EAA1D,UAAyD,GADzC,mCAA8B,EAAC,2BAAe,EAA9D,aAC0D,EAD1C,UAA8B,EAAC,UAAe,GAG1D,sHAA6G,YADjH,aACkH,EAA9G,UAA6G,GAMxE,yBAAa,EAA9B,mBAAgB,EAAxC,aAAwD,EAAf,UAAa,EAA9B,UAAgB,GAChB,0BAAa,EAAC,sBAAyB,EAA/D,aAAgF,EAAxD,WAAa,EAAC,WAAyB,2BA1B/E,6FAA2B,GACvB,0DAAqB,GAErB,iaAC4C,GAIpC,k/CAAgB,IACZ,o/BACmD,IAKvD,k/CAAgB,IACZ,o/BAC0D,IAQ1D,uRAAwD,GACxD,+RAAgF;;;;;;;;;;;;;;;;;;;;AC3BhG,yEAAqE;AACrE,4EAAqG;AAOrG,qFAA6E;AAC7E,8HAAsE;AAOtE,MAMa,oBAAoB;IAoB/B,YAAmB,EAAe,EAAS,WAA2B,EAC7D,MAAc,EAAS,WAA+B,EAAU,QAAkB,EAClF,MAAqB,EAAS,QAAqB,EAAS,cAA8B,EAC1F,MAAiB;QAHP,OAAE,GAAF,EAAE,CAAa;QAAS,gBAAW,GAAX,WAAW,CAAgB;QAC7D,WAAM,GAAN,MAAM,CAAQ;QAAS,gBAAW,GAAX,WAAW,CAAoB;QAAU,aAAQ,GAAR,QAAQ,CAAU;QAClF,WAAM,GAAN,MAAM,CAAe;QAAS,aAAQ,GAAR,QAAQ,CAAa;QAAS,mBAAc,GAAd,cAAc,CAAgB;QAC1F,WAAM,GAAN,MAAM,CAAW;QAlBnB,YAAO,GAAQ,wBAAwB,CAAC;QAG/C,SAAI,GAAG,IAAI,mBAAW,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;QAEnC,mBAAc,GAAG,IAAI,mBAAW,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;QACtD,cAAS,GAAQ,EAAE,CAAC;QAKpB,aAAQ,GAAQ,EAAE,MAAM,EAAE,oBAAoB,EAAE,GAAG,EAAE,UAAU,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;QAEtF,eAAU,GAAQ,EAAE,CAAC;QACrB,eAAU,GAAQ,gBAAgB,CAAC;QAKxC,mBAAmB;QACnB,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,CAAC;QAEvC,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC;QACtD,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,gBAAgB,EAAE,CAAC;SACzB;aAAM;YACL,IAAI,CAAC,eAAe,EAAE,CAAC;SACxB;IACH,CAAC;IAED,eAAe;QACb,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;QACvD,IAAI,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,EAAE,YAAY,CAAC,CAAC;QAEnE,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC7C,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACtC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACrC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,KAAK,EAAE,kBAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;YACjF,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YAClC,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACpC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YAClC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YAChC,IAAI,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC;YACtB,IAAI,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC;YAClB,kBAAkB;YAClB,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YAChB,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,kBAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YACxF,eAAe,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;SAC3C,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,iBAAiB,CAAC,EAAE,CAAC,CAAC;IACxE,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;QACvD,IAAI,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,EAAE,YAAY,CAAC,CAAC;QAEnE,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC7C,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACtC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACrC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,KAAK,EAAE,kBAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;YACjF,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YAClC,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACpC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YACjC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YAClC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YAChC,IAAI,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC;YACtB,IAAI,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC;YAClB,kBAAkB;YAClB,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;SACjB,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,wBAAwB,CAAC;YAChD,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,iBAAiB,CAAC;YACtC,IAAI,CAAC,UAAU,GAAG,iBAAiB,CAAC;YACpC,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,QAAQ,CAAC;YACpC,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;IACH,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;YACrC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;YACnC,IAAI,WAAW,GAAQ,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;YACzC,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YAC3C,CAAC,EAAE,GAAG,CAAC,CAAC;YACR,IAAI,CAAC,yBAAyB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;YAC1F,IAAI,CAAC,yBAAyB,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;YACxF,IAAI,CAAC,yBAAyB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YAClF,IAAI,CAAC,yBAAyB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YAClF,IAAI,CAAC,yBAAyB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;YACtF,IAAI,CAAC,yBAAyB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YAChF,IAAI,CAAC,yBAAyB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YAClF,IAAI,CAAC,yBAAyB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAC9E,IAAI,CAAC,yBAAyB,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QACtF,CAAC,CAAC;IACJ,CAAC;IAED,aAAa,CAAC,WAAmB,EAAE,kBAA0B;QAC3D,OAAO,CAAC,KAAgB,EAAE,EAAE;YAC1B,IAAI,aAAa,GAAG,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,EAC7C,oBAAoB,GAAG,KAAK,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;YAC5D,IAAI,aAAa,CAAC,KAAK,KAAK,oBAAoB,CAAC,KAAK,EAAE;gBACtD,OAAO,oBAAoB,CAAC,SAAS,CAAC,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC;aAChE;iBAAM;gBACL,OAAO,oBAAoB,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;aAC7C;QACH,CAAC,CAAC;IACJ,CAAC;IAED,UAAU,CAAC,CAAM;QACf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE;YAC5C,IAAI,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,EAAE;SAC3C,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;QAChD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4BAA4B;IAC5B,YAAY,CAAC,IAAS,EAAE,GAAQ;QAC9B,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,eAAe,EAAE,CAAC;IACvC,CAAC;IACD,4BAA4B;IAE5B,oCAAoC;IACpC,YAAY;QACV,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;IACjC,CAAC;IACD,oCAAoC;IACpC,yDAAyD;IACzD,gBAAgB;QACd,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,8BAA8B,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACvF,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;YACvB,yBAAyB;QAC3B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,6BAA6B,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACtF,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,IAAG,IAAI,CAAC,SAAS,EAAC;gBAChB,IAAI,CAAC,cAAc,EAAE,CAAC;aACvB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,wDAAwD;IAExD,OAAO,CAAC,KAAK;QACX,IAAI,GAAG,GAAG,KAAK,CAAC;QAChB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IACpC,CAAC;IAED,aAAa,CAAC,SAAS;QACrB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;IAC1C,CAAC;IACD,gBAAgB;QACd,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,uBAAuB,CAAC,CAAC;IACrD,CAAC;IAED,+BAA+B;QAE7B,IAAI,CAAM,CAAC;QACX,KAAK,CAAC,IAAI,IAAI,CAAC,yBAAyB,CAAC,QAAQ,EAAE;YACjD,IAAI,CAAC,yBAAyB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,aAAa,EAAE,CAAC;SAC5D;QAED,IAAI,IAAI,CAAC,yBAAyB,CAAC,KAAK,EAAE;YACxC,IAAI,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,MAAM;gBAC7C,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;;gBAE5D,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;YAC9D,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;YAEjE,OAAO,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,eAAe,CAAC;YAC5D,IAAI,IAAS,CAAC;YACd,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,IAAI,GAAG;oBACL,QAAQ,EAAE,OAAO;oBACjB,MAAM,EAAE;wBACN,EAAE,EAAE,IAAI,CAAC,SAAS;wBAClB,SAAS,EAAE,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,SAAS;wBACzD,QAAQ,EAAE,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,QAAQ;wBACvD,KAAK,EAAE,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,KAAK;wBACjD,KAAK,EAAE,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,KAAK;wBACjD,OAAO,EAAE,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,OAAO;wBACrD,IAAI,EAAE,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,IAAI;wBAC/C,KAAK,EAAE,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,KAAK;wBACjD,GAAG,EAAE,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,GAAG;wBAC7C,MAAM,EAAE,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,MAAM;qBACpD;oBACD,OAAO,EAAE,IAAI,CAAC,UAAU;iBACzB,CAAC;aACH;iBAAM;gBACL,IAAI,GAAG;oBACL,QAAQ,EAAE,OAAO;oBACjB,MAAM,EAAE,IAAI,CAAC,yBAAyB,CAAC,KAAK;oBAC5C,WAAW,EAAG,yBAAW,CAAC,WAAW,GAAG,gBAAgB;oBACxD,OAAO,EAAE,IAAI,CAAC,UAAU;iBACzB;aACF;YAED,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;gBACzE,IAAI,QAAQ,CAAC,MAAM,IAAI,SAAS,EAAE;oBAChC,IAAI,MAAM,GAAG,IAAI,CAAC;oBAClB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE;wBACvC,QAAQ,EAAE,IAAI;qBACf,CAAC,CAAC;iBACJ;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,EAAE;wBACnC,QAAQ,EAAE,IAAI;qBACf,CAAC,CAAC;iBACJ;YACD,CAAC,CAAC,CAAC;SACN;aAAM;SACN;IACH,CAAC;CAEF;AAvOD,oDAuOC;AACD,iEAAiE;AACjE,MAKa,UAAU;IAOrB,YAAmB,SAAmC,EAC7C,EAAe,EAAS,WAA+B,EAAS,MAAqB,EACrF,WAA2B,EAAkC,IAAgB;QAFnE,cAAS,GAAT,SAAS,CAA0B;QAC7C,OAAE,GAAF,EAAE,CAAa;QAAS,gBAAW,GAAX,WAAW,CAAoB;QAAS,WAAM,GAAN,MAAM,CAAe;QACrF,gBAAW,GAAX,WAAW,CAAgB;QAAkC,SAAI,GAAJ,IAAI,CAAY;QAP/E,kBAAa,GAAQ,iBAAS,CAAC;QAQpC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC;QAEzB,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACjC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,kBAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YACxF,eAAe,EAAE,EAAE;SACpB,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,iBAAiB,CAAC,EAAE,CAAC;IAEvE,CAAC;IAED,aAAa,CAAC,WAAmB,EAAE,kBAA0B;QAC3D,OAAO,CAAC,KAAgB,EAAE,EAAE;YAC1B,IAAI,aAAa,GAAG,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,EAC7C,oBAAoB,GAAG,KAAK,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;YAC5D,IAAI,aAAa,CAAC,KAAK,KAAK,oBAAoB,CAAC,KAAK,EAAE;gBACtD,OAAO,oBAAoB,CAAC,SAAS,CAAC,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC;aAChE;iBACI;gBACH,OAAO,oBAAoB,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;aAC7C;QACH,CAAC,CAAC;IACJ,CAAC;IAED,wBAAwB;QACtB,IAAI,CAAM,CAAC;QACX,KAAK,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE;YACrC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,aAAa,EAAE,CAAC;SAChD;QACD,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE;YAC5B,OAAO,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,eAAe;YAC/C,IAAI,IAAI,GAAG;gBACT,KAAK,EAAE,IAAI,CAAC,SAAS;gBACrB,WAAW,EAAE,CAAC;gBACd,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,QAAQ;aACjD;YACD,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,gBAAgB,EAAC,IAAI,CAAC,CAAC,SAAS,CAAC,QAAQ,GAAE;gBACtE,OAAO,CAAC,GAAG,CAAC,UAAU,EAAC,QAAQ,CAAC,CAAC;YACnC,CAAC,CAAC,CAAC;SACJ;IAEH,CAAC;CACF;AAxDD,gCAwDC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+DC/RD,62BAcsC,sFAApC,mBAAmC,kBADnC,mBAA0C,sBAD1C,mBAA0C,oBAX1C,mBAAmC,uBACnC,mBAAyB,mBACzB,mBAA8C,2BAG9C,mBAAwB,YAFxB,mBAAiD,4BAOjD,mBAAiC,iBADjC,mBAAiC,iBALjC,oBAAiB,SAGjB,oBAAwB,cACxB,oBAAoB,SAFpB,oBAAqB,UAPvB,eAcE,SAAmC,EADnC,SAA0C,EAD1C,SAA0C,EAX1C,SAAmC,EACnC,SAAyB,EACzB,SAA8C,EAG9C,SAAwB,EAFxB,SAAiD,EAOjD,SAAiC,EADjC,SAAiC,EALjC,UAAiB,EAGjB,UAAwB,EACxB,UAAoB,EAFpB,UAAqB,CAOe;+DAEtC,2EAA6C,kDAAgB;+DAjC7D,2QAAkB,IAElB,+QAAgC,IAE9B,mMAAwC,IACtC,wXAAgC,MAC9B,wEAAI,qDAAmB,MAG3B,sGAAyB,KAEzB,oGAAwB;;;mLAAuC,GAApC,aAAmC,IAAC,8CAAiB,MAAI,gDAAmB,MACvG;;;gOAAsE,GAA9C,aAA6C,GAArE,yHAAsE,sCAAQ,MAKhF,sLAcsC,IAEtC,sLAA6C,IAe7C,6NAAkB,iDAhDlB,YAAkB,GAWW,iDAAmC,GAAtC,aAAuC,EAApC,SAAmC,GACtC,2DAA6C,GAArE,aAAsE,EAA9C,SAA6C,GAKxC,oDAAqC,GAApE,aAcsC,EAdP,SAAqC,GAgBhE,sDAAwC,GAA5C,aAA6C,EAAzC,UAAwC,GAe5C,aAAkB,2BA9ClB,6FAAgC,GAG5B,wJAAgC,GAMV,iHAAuC,GAC/D,8JAAsE;;;;;;;;;;;;;;;;;;;;ACbxE,yEAAkD;AAIlD,+EAAyD;AAGzD,MAKa,oBAAoB;IA6B/B,YAAmB,MAAqB,EAAS,IAAgB,EACxD,WAA+B,EAAS,cAA8B,EACrE,cAA8B;QAFrB,WAAM,GAAN,MAAM,CAAe;QAAS,SAAI,GAAJ,IAAI,CAAY;QACxD,gBAAW,GAAX,WAAW,CAAoB;QAAS,mBAAc,GAAd,cAAc,CAAgB;QACrE,mBAAc,GAAd,cAAc,CAAgB;QA9BjC,gBAAW,GAAQ,EAAE,CAAC;QACtB,qBAAgB,GAAQ,CAAC,KAAK,EAAE,YAAY,EAAC,UAAU,EAAC,IAAI;YACnE,YAAY,EAAC,MAAM,EAAC,SAAS,EAAC,WAAW,EAAC,UAAU,EAAC,MAAM,EAAC,OAAO,EAAC,KAAK,CAAC,CAAC;QACpE,YAAO,GAAQ,4BAA4B,CAAC;QAC5C,8BAAyB,GAAQ;YACtC,WAAW,EAAE,YAAY,EAAE,UAAU,EAAE,WAAW;YAClD,OAAO,EAAE,QAAQ,EAAG,SAAS,EAAE,SAAS,EAAC,QAAQ,EAAE,QAAQ,EAAC,OAAO,EAAC,cAAc;YACjF,MAAM,EAAC,YAAY,EAAC,cAAc,EAAE,MAAM;SAC5C,CAAC;QACK,6BAAwB,GAAQ,CAAC,KAAK,EAAC,cAAc,CAAC,CAAC;QAEvD,mBAAc,GAAQ,iBAAiB,CAAC;QACxC,mBAAc,GAAQ,kBAAkB,CAAC;QAEzC,cAAS,GAAQ,OAAO,CAAC;QAEzB,WAAM,GAAQ,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,CAAC;QAC7E,sBAAiB,GAAQ,UAAU,CAAC;QACpC,wBAAmB,GAAO,iBAAiB,CAAC;QAC5C,oBAAe,GACpB;YACE,YAAY,EAAE,CAAC,EAAE,KAAK,EAAE,kBAAkB,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC;YACnF,UAAU,EAAE,CAAC,EAAE,KAAK,EAAE,gBAAgB,EAAE,KAAK,EAAE,UAAU,EAAE;gBAC3D,EAAE,KAAK,EAAE,kBAAkB,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC;SAE/C,CAAC;QAEG,yBAAoB,GAAQ,EAAE,CAAC;QAKlC,mBAAmB;QACrB,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,CAAC;QAErC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC1C,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC,OAAO,CAAE;IAErC,CAAC;IAEH,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;YACxC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC;QAEzD,CAAC,CAAC;IACJ,CAAC;CAEF;AArDD,oDAqDC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+DC5DD,8XAA0C,MACxC,oLAAiB,IACf,sGAA2B,KACzB,sHAA2C,KAI7C,gMAAoC,IAClC,0EAAG,qHAAyE,MAUlF,yQAA2B,IAEzB,yEAAI,qDAAmB,MAiGrB,sLAAkB,IAChB,+EAAO,8CAAY,MACnB,0jDAAiB,MACf;;;;;;;;;+TAAgB,KAIpB,sLAAkB,IAChB,+EAAO,gDAAc,MACrB,qqBAAc,kCAAI,MAClB,qqBAAc,oCAAM,MAGtB,sLAAkB,IAChB,+EAAO,sCAAI,MACX,kkDAAgB,MACd;;;;;;;;;;;;;;;;;;;;;0zBAA2C,KAC3C;;;+VAAgD,IAChD,oXAAwB,IAI5B,sLAAkB,IAChB,+EAAO,oDAAkB,MACzB,kkDAAiB,MACf;;;;;;;;;iUAAgB,KAKxB,2GAAgC,KAE9B,yLAAkB,IAChB,+EAAO,4CAAU,MACjB,kkDAAgB,MACd;;;;;;;;;;;;;;;;;;;;;4zBAA4C,KAC5C;;;iWAAiD,IACjD,uXAAyB,IAI7B,2LAAkB,IAChB,gFAAO,iDAAe,MACtB,okDAAgB,MACd;;;;;;;;;;;;;;;;;;;;;4zBAA4C,KAC5C;;;iWAAiD,IACjD,uXAAyB,IAG7B,6EAAI,KACJ,6EAAI,KACJ,2LAAkB,IAChB,gFAAO,yCAAO,MACd,okDAAgB,MACd;;;;;;;;;kUAAgB,KAIpB,2LAAkB,IAChB,gFAAO,2CAAS,MAChB,okDAAgB,MACd;;;;;;;;;kUAAiB,KAKrB,2LAAkB,IAChB,gFAAO,sCAAI,MACX,okDAAgB,MACd;;;;;;;;;kUAAiB,KAIrB,2LAAkB,IAChB,gFAAO,wCAAM,mFAAI,8CAAY,MAC7B,okDAAgB,MACd;;;;;;;;;kUAAiB,KAIrB,2LAAkB,IAChB,gFAAO,wCAAM,mFAAI,6CAAW,MAC5B,okDAAgB,MACd;;;;;;;;;kUAAiB,KAIrB,2LAAkB,IAChB,gFAAO,0CAAS,mFAAI,+CAAa,MACjC,wkDAAgB,MACd;;;;;;;;;kUAAiB,KAIrB,2LAAkB,IAChB,gFAAO,4CAAW,mFAAI,oDACV,MACZ,6kDAAgB,MACd;;;;;;;;;oUAAiB,KAKvB,2LAAkB,IAChB,gFAAO,2CAAS,MAChB,6kDAAgB,MACd;;;;;;;;;oUAAiB,KAGrB,2LAAkB,IAChB,gFAAO,4CAAW,mFAAI,kDAAgB,MACtC,6kDAAgB,MACd;;;;;;;;;oUAAiB,KAGrB,2LAAkB,IAChB,gFAAO,sCAAI,MACX,6kDAAgB,MACd;;;;;;;;;oUAAiB,KAKrB,2LAAkB,IAChB,gFAAO,wCAAM,mFAAI,0CAAQ,MACzB,6kDAAgB,MACd;;;;;;;;;oUAAiB,KAIrB,2LAAkB,IAChB,gFAAO,4CAAU,MACjB,6kDAAgB,MACd;;;;;;;;;oUAAiB,KAIrB,2LAAkB,IAChB,gFAAO,yCAAO,MACd,6kDAAgB,MACd;;;;;;;;;oUAAiB,KAKrB,2LAAkB,IAChB,gFAAO,yCAAO,MACd,6kDAAgB,MACd;;;;;;;;;oUAAiB,KAIrB,2LAAkB,IAChB,gFAAO,2CAAS,MAChB,6kDAAgB,MACd;;;;;;;;;oUAAiB,KAIrB,2LAAkB,IAChB,gFAAO,yCAAO,MACd,6kDAAgB,MACd;;;;;;;;;oUAAiB,KAKrB,2LAAkB,IAChB,gFAAO,uCAAK,MACZ,6kDAAgB,MACd;;;;;;;;;oUAAiB,KAIrB,2LAAkB,IAChB,gFAAO,yCAAO,MACd,6kDAAgB,MACd;;;;;;;;;oUAAiB,KAIrB,2LAAkB,IAChB,gFAAO,qCAAG,mFAAI,+DACC,MACf,6kDAAgB,MACd;;;;;;;;;oUAAiB,KAIrB,2LAAkB,IAChB,gFAAO,gDACG,mFAAI,iEAEH,MACX,6kDAAgB,MACd;;;;;;;;;oUAAiB,KAKpB,2GAAgC,KAC7B,gFAAO,4DAA0B,MACjC,gmDAA4C,MACxC;;;;;;;;;mWAAiD,KAGxD,oGAA0B,KACvB,kNAAiD,YAAzB;;wBAAwB;MAAhD,yLAAiD,oCAAM,MACvD,mVAAsC,qCAAkB,2BA7MpD,aAAgB,GAaA,+BAAwB,GAAxC,aAA2C,EAA3B,UAAwB,GAAxC,aAA2C,GACV,+BAAc,GAA/C,aAAgD,EAAf,UAAc,GAQ/C,aAAgB,GAUF,iCAAyB,GAAzC,cAA4C,EAA5B,WAAyB,GAAzC,cAA4C,GACX,iCAAe,GAAhD,cAAiD,EAAhB,WAAe,GAQhC,iCAAyB,GAAzC,cAA4C,EAA5B,WAAyB,GAAzC,cAA4C,GACX,iCAAe,GAAhD,cAAiD,EAAhB,WAAe,GAShD,cAAgB,GAOhB,cAAiB,GAQjB,cAAiB,GAOjB,cAAiB,GAOjB,cAAiB,GAOjB,cAAiB,GAQjB,cAAiB,GAQnB,cAAiB,GAMjB,cAAiB,GAMjB,cAAiB,GAQjB,cAAiB,GAOjB,cAAiB,GAOjB,cAAiB,GAQjB,cAAiB,GAOjB,cAAiB,GAOjB,cAAiB,GAQjB,cAAiB,GAOjB,cAAiB,GAQjB,cAAiB,GAUjB,cAAiB,GAQM,mCAA6B,EAAhD,cAAiD,EAA9B,WAA6B,mDAhUxD,wJAA0C,GAkB1C,+FAA2B,GAqGrB,o+CAAiB,IACf,ykBAAgB,GAMlB,waAAc,GACd,waAAc,GAKd,k/CAAgB,IACd,imCAA2C,IAC3C,6WAAgD,GAOlD,0gDAAiB,IACf,2lBAAgB,GASpB,8hDAAgB,IACd,mpCAA4C,IAC5C,4XAAiD,GAOnD,qjDAAgB,IACd,mpCAA4C,IAC5C,4XAAiD,GAQnD,qjDAAgB,IACd,smBAAgB,GAMlB,qjDAAgB,IACd,smBAAiB,GAOnB,qjDAAgB,IACd,smBAAiB,GAMnB,qjDAAgB,IACd,smBAAiB,GAMnB,qjDAAgB,IACd,smBAAiB,GAMnB,qjDAAgB,IACd,smBAAiB,GAOnB,qjDAAgB,IACd,smBAAiB,GAOrB,qjDAAgB,IACd,smBAAiB,GAKnB,qjDAAgB,IACd,smBAAiB,GAKnB,qjDAAgB,IACd,smBAAiB,GAOnB,qjDAAgB,IACd,smBAAiB,GAMnB,qjDAAgB,IACd,smBAAiB,GAMnB,qjDAAgB,IACd,smBAAiB,GAOnB,qjDAAgB,IACd,smBAAiB,GAMnB,qjDAAgB,IACd,smBAAiB,GAMnB,qjDAAgB,IACd,smBAAiB,GAOnB,qjDAAgB,IACd,smBAAiB,GAMnB,qjDAAgB,IACd,smBAAiB,GAOnB,qjDAAgB,IACd,smBAAiB,GASnB,qjDAAgB,IACd,smBAAiB,GAOjB,qjDAA4C,IACxC,smBAAiD,GAIrD,yKAAiD,GACjD,yKAAsC,gEAAkB;;;;;;;;;;;;;;;;;;;;ACrU5D,yEAAkD;AAClD,4EAAiF;AAMjF,MAKa,oBAAoB;IAa/B,YAAmB,EAAe,EAAS,WAA2B,EAC7D,MAAc,EAAS,WAA+B,EAAU,QAAkB,EAClF,MAAqB;QAFX,OAAE,GAAF,EAAE,CAAa;QAAS,gBAAW,GAAX,WAAW,CAAgB;QAC7D,WAAM,GAAN,MAAM,CAAQ;QAAS,gBAAW,GAAX,WAAW,CAAoB;QAAU,aAAQ,GAAR,QAAQ,CAAU;QAClF,WAAM,GAAN,MAAM,CAAe;QAb9B,SAAI,GAAG,IAAI,mBAAW,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;QAEnC,mBAAc,GAAG,IAAI,mBAAW,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;QACtD,cAAS,GAAQ,EAAE,CAAC;QAKpB,eAAU,GAAQ,QAAQ,CAAC;QAMhC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;QACvD,IAAI,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,EAAE,YAAY,CAAC,CAAC;QACnE,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC;QAEtD,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC7C,SAAS,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YACpC,QAAQ,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YACnC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,KAAK,EAAE,kBAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;YACjF,OAAO,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YAClC,OAAO,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YAClC,IAAI,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YAC/B,KAAK,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YAChC,GAAG,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YAC9B,IAAI,EAAE,CAAC,UAAU,CAAC;YAClB,MAAM,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;SAClC,CAAC;IAEJ,CAAC;IAxBsB,CAAC;IA0BxB,QAAQ;QACN,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;YAC3B,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;IACH,CAAC;IACD,sBAAsB;IACtB,cAAc;QACZ,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;YACrC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;YACnC,IAAI,WAAgB,CAAC;YACrB,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;YAChC,IAAI,CAAC,yBAAyB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;YAC1F,IAAI,CAAC,yBAAyB,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;YACxF,IAAI,CAAC,yBAAyB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YAClF,IAAI,CAAC,yBAAyB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;YACtF,IAAI,CAAC,yBAAyB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;YACtF,IAAI,CAAC,yBAAyB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YAChF,IAAI,CAAC,yBAAyB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YAClF,IAAI,CAAC,yBAAyB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAC9E,IAAI,CAAC,yBAAyB,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QACtF,CAAC,CAAC;IACJ,CAAC;IACD,4BAA4B;IAC5B,YAAY,CAAC,IAAS,EAAE,GAAQ;QAE9B,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,eAAe,EAAE,CAAC;IACvC,CAAC;IACD,4BAA4B;IAE5B,oCAAoC;IACpC,YAAY;QAEV,IAAI,CAAC,yBAAyB,CAAC,KAAK,EAAE,CAAC;IACzC,CAAC;IACD,oCAAoC;IAEpC,yDAAyD;IACzD,gBAAgB;QACd,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,8BAA8B,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACvF,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;YACvB,IAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,6BAA6B,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACtF,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,IAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,wDAAwD;IAExD,OAAO,CAAC,KAAK;QACX,IAAI,GAAG,GAAG,KAAK,CAAC;QAChB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IACpC,CAAC;IAED,+BAA+B;QAC7B,IAAI,CAAM,CAAC;QACX,KAAK,CAAC,IAAI,IAAI,CAAC,yBAAyB,CAAC,QAAQ,EAAE;YACjD,IAAI,CAAC,yBAAyB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,aAAa,EAAE,CAAC;SAC5D;QACD,IAAI,IAAI,CAAC,yBAAyB,CAAC,KAAK,EAAE;YACxC,IAAI,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,MAAM;gBAC7C,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;;gBAE5D,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;YAC9D,IAAI,IAAS,CAAC;YACd,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,IAAI,GAAG;oBACL,QAAQ,EAAE,iBAAiB;oBAC3B,MAAM,EAAE;wBACN,EAAE,EAAE,IAAI,CAAC,SAAS;wBAClB,SAAS,EAAE,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,SAAS;wBACzD,QAAQ,EAAE,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,QAAQ;wBACvD,OAAO,EAAE,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,OAAO;wBACrD,KAAK,EAAE,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,KAAK;wBACjD,OAAO,EAAE,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,OAAO;wBACrD,IAAI,EAAE,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,IAAI;wBAC/C,KAAK,EAAE,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,KAAK;wBACjD,GAAG,EAAE,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,GAAG;wBAC7C,MAAM,EAAE,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,MAAM;qBACpD;oBACD,OAAO,EAAE,IAAI,CAAC,UAAU;iBACzB,CAAC;aAEH;iBAAM;gBACL,IAAI,GAAG;oBACL,QAAQ,EAAE,iBAAiB;oBAC3B,MAAM,EAAE,IAAI,CAAC,yBAAyB,CAAC,KAAK;oBAC5C,OAAO,EAAE,IAAI,CAAC,UAAU;iBACzB;aACF;SAEF;QACD,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,iBAAiB,EAAE,IAAI,CAAC;aAClD,SAAS,CAAC,GAAG,CAAC,EAAE;YACf,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC;YAC/C,CAAC,EAAE,GAAG,CAAC,CAAC;QAEV,CAAC,CACA;IAGL,CAAC;CAEF;AArJD,oDAqJC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kEC5JD,uGAA2B,KAEzB,2QAAgC,IAE9B,oLAAkB,IAChB,wGAA6B,KAC3B,sGAA2B,KACzB,6GAAkC,KAEpC,2EAAI,oDAAkB,MAEtB,iGAAqB,mSAEsC,MAQ3D,uaAOG,iDADH,mBAAyB,aAHzB,mBAAuB,YAFvB,mBAAuB,YAGvB,mBAA2B,cAF3B,mBAAuC,oBAGvC,mBAAqC,mBALrC,aAOG,EADH,SAAyB,EAHzB,SAAuB,EAFvB,SAAuB,EAGvB,SAA2B,EAF3B,SAAuC,EAGvC,SAAqC,2BAxB3C,6FAAgC;;;;;;;;;;;;;;;;;;;;ACFlC,yEAAkD;AAElD,2HAAmE;AAEnE,MAKa,uBAAuB;IA2BlC,YAAmB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QA1BjD,wCAAwC;QAEjC,SAAI,GAAQ,0BAA0B,CAAC;QAC9C,6CAA6C;QACtC,cAAS,GAAO,yBAAW,CAAC,UAAU,CAAC;QACvC,gBAAW,GAAQ;YACxB,QAAQ,EAAC,gBAAgB;SAC1B,CAAC;QAEK,qBAAgB,GAAQ;YAC7B,kBAAkB;YAClB,MAAM,EAAC,EAAE;YACT,YAAY,EAAC,OAAO;YACpB,YAAY,EAAC,QAAQ;YACrB,WAAW,EAAC,EAAE;SACf,CAAC;QAEK,sBAAiB,GAAQ;YAC9B,MAAM,EAAC,EAAE;YACT,YAAY,EAAC,EAAE;SAChB,CAAC;QAEK,eAAU,GAAQ,gBAAgB,CAAC;QAEnC,cAAS,GAAS,yBAAW,CAAC,WAAW,GAAG,iBAAiB,CAAC;QAInE,mBAAmB;QACnB,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,CAAC;IACzC,CAAC;IAED,QAAQ;IACR,CAAC;CAEF;AAzCD,0DAyCC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yDC7CD,sGAA2B,KACzB,qGAA0B,KACxB,0QAAgC,IAE9B,mLAAkB,IAChB,wGAA6B,KAE3B,geAOgB,iDANd,mBAAuB,YAMvB,mBAAa,OALb,mBAAmB,UAInB,mBAAqB,WAFrB,mBAAuC,oBADvC,mBAAuC,oBAEvC,mBAA6B,eAL/B,YAOgB,EANd,SAAuB,EAMvB,SAAa,EALb,SAAmB,EAInB,SAAqB,EAFrB,SAAuC,EADvC,SAAuC,EAEvC,SAA6B,2BAVrC,6FAAgC;;;;;;;;;;;;;;;;;;;;ACFpC,yEAAkD;AAGlD,2HAAmE;AAEnE,MAKa,cAAc;IAsBzB,YAAmB,OAAsB,EAAS,cAA8B;QAA7D,YAAO,GAAP,OAAO,CAAe;QAAS,mBAAc,GAAd,cAAc,CAAgB;QApBzE,SAAI,GAAQ,0BAA0B,CAAC;QACvC,cAAS,GAAQ,YAAY,CAAC,CAAI,uBAAuB;QACzD,YAAO,GAAQ,yBAAW,CAAC,UAAU,CAAC,CAAE,aAAa;QACrD,aAAQ,GAAQ,OAAO,CAAC;QACxB,eAAU,GAAQ,cAAc,CAAC;QAEjC,sBAAiB,GAAQ;YAC9B,MAAM,EAAE,EAAE;YACV,oBAAoB;YACpB,YAAY,EAAE,EAAE;SAEjB,CAAC;QACK,sBAAiB,GAAQ;YAC9B,MAAM,EAAE,EAAE;YACV,YAAY,EAAE,iBAAiB;YAC/B,YAAY,EAAE,kBAAkB;SACjC,CAAC;QAMA,mBAAmB;QACnB,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,CAAC;QAEvC,IAAI,CAAC,YAAY,GAAG;YAClB,MAAM,EAAE;gBACN;oBACE,MAAM,EAAE,OAAO;oBACf,WAAW,EAAE,iBAAiB;iBAC/B;gBACD;oBACE,MAAM,EAAE,QAAQ;oBAChB,WAAW,EAAE,kBAAkB;iBAChC;gBACD;oBACE,MAAM,EAAE,MAAM;oBACd,WAAW,EAAE,gBAAgB;iBAC9B;gBACD;oBACE,MAAM,EAAE,QAAQ;oBAChB,WAAW,EAAE,kBAAkB;iBAChC;gBACD;oBACE,MAAM,EAAE,eAAe;oBACvB,WAAW,EAAE,yBAAyB;iBACvC;aACF;SACF;IACH,CAAC;IAED,QAAQ;IACR,CAAC;CAEF;AA7DD,wCA6DC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0DClED,mKAAwF,KACpF,4EAAK,iDAAe;;;;;;;;;;;;;;;;;;;;ACDxB,yEAAkD;AAElD,+EAAyD;AAIzD,MAKa,eAAe;IAO1B,YAAmB,OAAsB,EAAS,MAAc,EAAS,cAA8B;QAApF,YAAO,GAAP,OAAO,CAAe;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,mBAAc,GAAd,cAAc,CAAgB;QALvG,WAAM,GAAY,IAAI,CAAC;QAChB,cAAS,GAAQ,EAAE,CAAC;QACpB,WAAM,GAAY,IAAI,CAAC;QAI5B,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAChC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QACpC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IAC9B,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAChC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QACpC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QAC5B,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;YACnC,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAC,GAAG,CAAC;QAC3B,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;CAEF;AA9BD,0CA8BC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iECpCD,sGAA2B,KACzB,qGAA0B,KACxB,0QAAgC,IAE9B,mLAAkB,IAChB,wGAA6B,KAE3B,2WAIgB,iDAHd,mBAA+B,gBAC/B,mBAAuB,YACvB,mBAA2B,cAC3B,mBAAa,OAJf,YAIgB,EAHd,SAA+B,EAC/B,SAAuB,EACvB,SAA2B,EAC3B,SAAa,2BATrB,6FAAgC;;;;;;;;;;;;;;;;;;;;ACFpC,yEAAkD;AAElD,2HAAmE;AAEnE,MAMa,sBAAsB;IAUjC,YAAmB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QAR1C,kBAAa,GAAQ,2BAA2B,CAAC;QACjD,SAAI,GAAQ,0BAA0B,CAAC;QACvC,cAAS,GAAQ,yBAAW,CAAC,UAAU,CAAC;QACxC,gBAAW,GAAQ;YACxB,QAAQ,EAAC,eAAe;YACxB,MAAM,EAAC,OAAO;SACf,CAAC;QAIA,mBAAmB;QACnB,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,CAAC;IACzC,CAAC;IAED,QAAQ;IACR,CAAC;CAEF;AAzBD,wDAyBC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mECgFS;;;;;;;;;+UAAsD,4CAAc,2BAA9B,kBAAe,EAArD,YAAsD,EAAhB,SAAe,2BAArD,wIAAsD;mEACtD,+NAAuC,gJAAyB;mEAKhE;;;;;;;;;+UAAsD,uCAAS,2BAAzB,kBAAe,EAArD,YAAsD,EAAhB,SAAe,2BAArD,wIAAsD;mEACtD,+NAAuC,6IAAwB;mEAK/D;;;;;;;;;+UAAsD,2CAAa,2BAA7B,kBAAe,EAArD,YAAsD,EAAhB,SAAe,2BAArD,wIAAsD;mEACtD,gPAA4E,+BAArC,gFAAoC,GAA3E,YAA4E,EAArC,SAAoC;mEAK3E;;;;;;;;;+UAAsD,8CAAgB,2BAAhC,kBAAe,EAArD,YAAsD,EAAhB,SAAe,2BAArD,wIAAsD;mEACtD,+NAAuC,iJAA4B;mEAKnE;;;;;;;;;+UAAsD,oDAAsB,2BAAtC,kBAAe,EAArD,YAAsD,EAAhB,SAAe,2BAArD,wIAAsD;oEACtD,+NAAuC,uJAAkC;oEAIzE;;;;;;;;;+UAAsD,yCAAW,2BAA3B,kBAAe,EAArD,YAAsD,EAAhB,SAAe,2BAArD,wIAAsD;oEACtD,+NAAuC,gJAA2B;oEAKlE,uPAAsC,uCAAM;oEAC5C,+NAAuC,gJAA2B;oEAKlE,uPAAsC,uCAAM;oEAC5C,+NAAuC,IAAC,6EAAM,KAC1C,2UAAsC,mCAAK,MAC3C,gPAAqF,YAAnC;;wBAAkC;MAApF,mLAAqF,wCACrF,iCAFA,2JAAsC,GACtC,2JAAqF;oEAK3F,sTAAuD;oEACvD,0QAA6D;gJA/JrE,4PAAmB,IAEnB,gSAAiD,IAuB/C,4MAAiD,IAE/C,uMAAyC,IACvC,iNAAiD,IAC/C,yGAA6B,KAC3B,gMAAiC,IAC/B,iIAAqD,KAIzD,4GAAgC,KAC9B,2EAAG,0CAAQ,MACX,4EAAI,uCAAoF,MACxF,iNAAoD,YAA5B;;wBAA2B;MAAnD,oLAAoD,sCAAQ,MAIhE,iNAAiD,IAC/C,yGAA6B,KAC3B,gMAAiC,IAC/B,iIAAqD,KAIzD,4GAAgC,KAC9B,2EAAG,kDACH,MACA,4EAAI,wCAAyC,MAC7C,iNAAsE,YAA9C;;wBAA6C;MAArE,oLAAsE,sCAAQ,MAGlF,mNAAmD,IACjD,yGAA6B,KAC3B,gMAAiC,IAC/B,iIAAqD,KAIzD,4GAAgC,KAC9B,2EAAG,oDAAkB,MACrB,4EAAI,wCAA4C,MAChD,iNAAoE,YAA5C;;wBAA2C;MAAnE,oLAAoE,sCAAQ,MAQpF,+MAAiD,IAC/C,6MAA6C,IAC3C,4EAAI,uCAA+B,MACnC,sGAAyB,KACvB,wGAA2B,KACzB,snDAAqC,MACnC;;;;;;;;;;;;;;;;;;;;wBAA8F;MAArD;;wBAAuB;MAAhE,k1BAA8F,KAE9F,qXAAwB,IAE1B,gFAAQ,2GAA0B,0CAAQ,MAG5C,wGAA2B,KACzB,6nDAAqC,MACnC;;;;;;;;;iWAA+C,KAEjD,gFAAQ,2GAA0B,0CAAQ,MAG5C,yGAA2B,KACzB,+nDAAqC,MACnC;;;;;;;;;kWAAgD,KAElD,iFAAQ,4GAA0B,0CAAQ,MAKhD,6GAA8B,KAE5B,8tBAAsF,MAGpF,2aAA0C,KACxC,oOAAsD,KACtD,kNAAuC,KAIzC,2aAAuC,KACrC,oOAAsD,KACtD,kNAAuC,KAIzC,2aAAyC,KACvC,oOAAsD,KACtD,kNAA4E,KAI9E,2aAA4C,KAC1C,oOAAsD,KACtD,kNAAuC,KAIzC,2aAAkD,KAChD,oOAAsD,KACtD,mNAAuC,KAGzC,2aAAyC,KACvC,qOAAsD,KACtD,mNAAuC,KAIzC,2aAAoC,KAClC,qOAAsC,KACtC,mNAAuC,KAIzC,2aAAoC,KAClC,qOAAsC,KACtC,mNAAuC,KAOzC,8QAAuD,KACvD,4PAA6D,KAG/D,oYAAgF,GAAjE,cAA2C,IAMhE,+NAAkB,iDAxKlB,YAAmB,GA+EO,0BAAoB,EAApC,aAAqC,EAArB,UAAoB,GAClB,+BAAwB,GAAxC,aAA8F,EAA9E,UAAwB,GAAyB,iCAA4B,EAA7F,aAA8F,EAA7B,UAA4B,GAQ/E,0BAAoB,EAApC,aAAqC,EAArB,UAAoB,GAClB,mCAA8B,EAA9C,aAA+C,EAA/B,UAA8B,GAMhC,2BAAoB,EAApC,cAAqC,EAArB,WAAoB,GAClB,qCAA+B,EAA/C,cAAgD,EAAhC,WAA+B,GASrD,cAAsF,GAAlC,qBAAyB,aAA7E,cAAsF,EAAlC,WAAyB,GAG7D,gCAA2B,EAAzC,cAA0C,EAA5B,WAA2B,GAM3B,6BAAwB,EAAtC,cAAuC,EAAzB,WAAwB,GAMxB,+BAA0B,EAAxC,cAAyC,EAA3B,WAA0B,GAM1B,kCAA6B,EAA3C,cAA4C,EAA9B,WAA6B,GAM7B,wCAAmC,EAAjD,cAAkD,EAApC,WAAmC,GAKnC,+BAA0B,EAAxC,cAAyC,EAA3B,WAA0B,GAM1B,0BAAqB,EAAnC,cAAoC,EAAtB,WAAqB,GAMrB,0BAAqB,EAAnC,cAAoC,EAAtB,WAAqB,GAShB,qBAAmC,mBAAtD,cAAuD,EAApC,WAAmC,GAC1C,qBAAgD,mBAA5D,cAA6D,EAAjD,WAAgD,GAG/C,uDAA2C,GAAC,oBAAoB,EAA/E,cAAgF,EAAjE,WAA2C,EAAC,WAAoB,GAMrF,cAAkB,mDAtKlB,6FAAiD,GAmCnC,4HAAoF,GACxF,8JAAoD,GAchD,+EAAyC,GAC7C,8JAAsE,GAYlE,kFAA4C,GAChD,8JAAoE,GAUpE,wEAA+B,GAG/B,k/CAAqC,IACnC,imCAA8F,IAQhG,k/CAAqC,IACnC,ykBAA+C,GAMjD,mhDAAqC,IACnC,smBAAgD;;;;;;;;;;;;;;;;;;;;AChG5D,yEAA6D;AAG7D,+EAAgF;AAChF,0GAA2D;AAC3D,qFAAgE;AAMhE,MAMa,wBAAwB;IAgBnC,YAAmB,IAAgB,EAAS,cAA8B,EAAS,cAA8B,EACxG,aAA4B,EAAS,WAA+B,EAAS,aAAoC,EACjH,WAAwB;QAFd,SAAI,GAAJ,IAAI,CAAY;QAAS,mBAAc,GAAd,cAAc,CAAgB;QAAS,mBAAc,GAAd,cAAc,CAAgB;QACxG,kBAAa,GAAb,aAAa,CAAe;QAAS,gBAAW,GAAX,WAAW,CAAoB;QAAS,kBAAa,GAAb,aAAa,CAAuB;QACjH,gBAAW,GAAX,WAAW,CAAa;QAhB1B,aAAQ,GAAQ;YACrB,eAAe,EAAE,iBAAiB;YAClC,EAAE,EAAE,EAAE;SACP,CAAC;QACK,kBAAa,GAAQ,EAAE,CAAC;QAI/B,qBAAgB,GAAa,CAAC,cAAc,EAAE,aAAa,EAAE,WAAW,EAAE,gBAAgB,EAAE,sBAAsB,EAAE,QAAQ,EAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;QAGtJ,yCAAyC;QACzC,eAAU,GAAG,IAAI,CAAC;QAKhB,iCAAiC;QACjC,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC;QACxF,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAEpE,oBAAoB;QACpB,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,mCAAmC,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAC3F,IAAI,CAAC,QAAQ,CAAC,EAAE,GAAG,QAAQ,CAAC,EAAE,CAAC;QACjC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE;YAC/C,IAAI,CAAC,cAAc,GAAG,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC;YAElD,kCAAkC;YAClC,IAAI,CAAC,UAAU,GAAG,IAAI,6BAAkB,CAAC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;YACzE,kCAAkC;YAClC,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,cAAc,CAAC,OAAe,iBAAiB;QAC7C,IAAI,CAAC,QAAQ,CAAC,eAAe,GAAG,IAAI,CAAC;QACrC,IAAI,IAAS,CAAC;QACd,QAAO,IAAI,EAAE;YACX,KAAK,kBAAkB;gBACrB,IAAI,GAAG;oBACL,QAAQ,EAAE,4BAA4B;oBACtC,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,QAAQ;oBACpC,WAAW,EAAE;wBACX,kBAAkB,EAAE,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,GAAG;wBACvD,gBAAgB,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;qBACpC;iBACF;gBACD,MAAM;YACR,KAAK,gBAAgB;gBACnB,IAAI,GAAG;oBACL,QAAQ,EAAE,4BAA4B;oBACtC,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,QAAQ;oBACpC,WAAW,EAAE;wBACX,kBAAkB,EAAE,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,GAAG;wBACvD,gBAAgB,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE;qBACrC;iBACF;gBACD,MAAM;YACR;gBACE,IAAI,GAAG;oBACL,QAAQ,EAAE,4BAA4B;oBACtC,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,QAAQ;oBACpC,WAAW,EAAE;wBACX,kBAAkB,EAAE,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,GAAG;qBACxD;iBACF;gBACD,MAAM;SACT;QAED,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;YACpE,kCAAkC;YAClC,IAAI,CAAC,UAAU,GAAG,IAAI,6BAAkB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YACvD,kCAAkC;YAClC,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,cAAc,CAAC,MAAW;QACxB,IAAG,OAAM,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,WAAW,EAAE;YAC/C,MAAM,CAAC,cAAc,GAAG,CAAC,CAAC;SAC3B;aAAM;YACL,MAAM,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,GAAG,CAAC,CAAC;SACnD;QAED,kDAAkD;QAClD,IAAI,UAAU,GAAQ,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC;QACzD,UAAU,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;QACvD,UAAU,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;QACvD,UAAU,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;QAEzD,gCAAgC;QAChC,IAAI,WAAW,GAAG;YAChB,EAAE,EAAE,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,GAAG;YACvC,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI;SAC3C,CAAC;QAEF,IAAI,QAAQ,GAAQ;YAClB,QAAQ,EAAE,iBAAiB;YAC3B,MAAM,EAAE;gBACN,WAAW,EAAE,MAAM,CAAC,GAAG;gBACvB,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,GAAG;gBAChD,SAAS,EAAE,MAAM,CAAC,OAAO;gBACzB,WAAW,EAAE,MAAM,CAAC,SAAS;gBAC7B,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE;gBACtB,kBAAkB,EAAE,CAAC;gBACrB,wBAAwB,EAAE,WAAW;gBACrC,oBAAoB,EAAE,UAAU;aACjC;YACD,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,EAAE,SAAS,EAAE,WAAW,CAAC;YAC/D,gBAAgB,EAAE,MAAM,CAAC,cAAc;YACvC,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,QAAQ;SACrC,CAAC;QAEF,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,iBAAiB,EAAE,QAAQ,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAC7E,IAAG,QAAQ,CAAC,MAAM,IAAI,SAAS,EAAE;gBAC/B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,oBAAoB,EAAE,IAAI,EAAE;oBAChD,QAAQ,EAAE,IAAI;iBACf,CAAC,CAAC;gBACH,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;gBAExC,IAAI,CAAC,gBAAgB,EAAE,CAAC;aACzB;iBAAM;gBACL,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,sCAAsC,EAAE,IAAI,EAAE;oBAClE,QAAQ,EAAE,IAAI;iBACf,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gBAAgB;QACd,IAAI,QAAQ,GAAQ;YAClB,MAAM,EAAE,4BAA4B;YACpC,SAAS,EAAE;gBACT,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,GAAG;aAC/C;SACF,CAAC;QACF,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,kBAAkB,EAAE,QAAQ,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAC9E,IAAG,QAAQ,CAAC,MAAM,IAAI,SAAS,EAAE;gBAC/B,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,IAAI,CAAC;gBACpC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;aACpD;iBAAM;gBACL,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,gBAAgB,EAAE,EAAE,EAAE;oBAC1C,QAAQ,EAAE,IAAI;iBACf,CAAC,CAAC;gBAEH,UAAU,CAAC,GAAG,EAAE;oBACd,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBAC1B,CAAC,EAAE,IAAI,CAAC,CAAC;aACV;QACH,CAAC,CAAC,CAAC;IACL,CAAC;CAEF;AAtKD,4DAsKC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gECjLD,8XAA0C,MACxC,qLAAiB,IACf;;;2LAAkE,GAAvC,YAAsC,IAC/D,sHAA2C,KAI7C,iMAAoC,IAClC,2EAAG,qHAAyE,MAI9E,yMAA0C,IACxC,2dAA6B,KAC3B;;;;;;;;;kOAAkE,GAA5C,aAA2C,GAAjE,2IAAkE,IAChE,uXAAU,4CAAc,MAAW,4CACrC,MACA;;;;;;;;;kOAAkF,GAA5D,aAA2D,GAAjF,2IAAkF,IAChF,uXAAU,qCAAO,MAAW,2CAC9B,MACA;;;;;wBAAyC;MAAnB;;wBAAkB;MAAxC,6MAAyC,IACvC,uXAAU,gDAAkB,MAAW,kCACzC,MAEF,mGAAuB,2CAA8C,MACrE;;;;;;;;;qaAAsD,IACpD,oGAA2B,KACzB,0XAAU,4CAAc,MACxB,sGAA0B,uDAE1B,2BA5BqB,iDAAsC,GAAjE,YAAkE,EAAvC,SAAsC,GAW/D,aAA6B,GACL,yDAA2C,GAAjE,aAAkE,EAA5C,SAA2C,GAC/D,aAAU,GAEU,0EAA2D,GAAjF,aAAkF,EAA5D,UAA2D,GAC/E,aAAU,GAGV,aAAU,GAIU,+BAA6B,GAArD,aAAsD,EAA9B,UAA6B,GAEjD,aAAU,mDA3BpB,wJAA0C,GAclC,8WAAkE,GAChE,wNAAU,GAEZ,0XAAkF,GAChF,wNAAU,GAEZ,0XAAyC,GACvC,wNAAU,GAGS,wHAA8C,GACrE,mOAAsD,GAElD,wNAAU;;;;;;;;;;;;;;;;;;;;AC3BpB,yEAAkD;AAElD,+EAAyD;AAGzD,MAMa,qBAAqB;IAMhC,YAAmB,OAAsB,EAAS,MAAc;QAA7C,YAAO,GAAP,OAAO,CAAe;QAAS,WAAM,GAAN,MAAM,CAAQ;QAJzD,cAAS,GAAQ,EAAE,CAAC;QAEpB,WAAM,GAAY,IAAI,CAAC;QAG5B,IAAI,OAAO,GAAQ,EAAE,CAAC;QACtB,OAAO,GAAG,OAAO,CAAC,MAAM,EAAE;QAC1B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QAClD,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IAC5C,CAAC;IAEF,QAAQ;IACR,CAAC;IAED,gCAAgC;IAChC,MAAM;QACJ,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAChC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QACpC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;QACzB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;IACtC,CAAC;CAGF;AA/BD,sDA+BC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uEChBG,gLAA+C,6JAAyB;uEACxE,gMAAsE,6JAAyB;uEAE/F,4nDAA4F,MAC1F;;;;;;;;;;;;;;;;;;;;wBAAsG;MAAhC;;wBAA+B;MAArG,u5BAAsG,kDAD9B,uBAAiB,EAA3F,YAA4F,EAAlB,UAAiB,GACnB,oBAA+B,oBAArG,aAAsG,EAAhC,UAA+B,GAArF,iCAA4B,EAAC,2BAAe,EAAC,mBAAQ,EAArE,aAAsG,EAAtF,UAA4B,EAAC,UAAe,EAAC,UAAQ,2BADvE,u8CAA4F,IAC1F,o/BAAsG;uEAGxG,yGAAoG,KAClG,iGAAsB,sCAA0B,MAChD,uOAAqE,YAA5B;;wBAA2B;MAApE,uLAAqE,sGAA0B,6CAAW,yDADpF,gEAA0B,GAChD,2JAAqE;uEAGvE,ooDAAmI,MACjI;;;;;;;;;;;;;;;;;;;;wBAAiG;MAAnC;;wBAAkC;MAAhG,y5BAAiG,kDADc,uBAAiB,EAAlI,YAAmI,EAAlB,UAAiB,GAClE,oBAAkC,uBAAhG,aAAiG,EAAnC,UAAkC,GAAhF,6BAAwB,EAAC,uBAAW,EAAC,mBAAQ,EAA7D,aAAiG,EAAjF,UAAwB,EAAC,UAAW,EAAC,UAAQ,2BAD/D,u8CAAmI,IACjI,o/BAAiG;uEAGnG,gPAA0G,YAAzB;;wBAAwB;MAAzG,uLAA0G,sCAAQ,iCAAlH,2JAA0G;uEAK1G;;;4VAAoG,kCAAI,2BAAlE,wBAAmB,EAAzD,YAAoG,EAA9D,SAAmB,2BAAzD,2JAAoG;uEAzCxG,kYAA0C,MACxC,sLAAiB,IACf;;;8LAAkE,GAAvC,YAAsC,IAC/D,sHAA2C,KAG7C,iMAAoC,IAClC,2EAAG,qHAAyE,MAE9E,gMAAkC,IAMtC,uMAAwC,IACtC,sMAAuC,IACrC,6LAA+B,IAC7B,sGAA0B,gDAAc,MAE1C,8LAA+C,IAC/C,8LAAsE,IAEtE,8LAA4F,IAI5F,8LAAoG,IAKpG,8LAAmI,IAInI,8LAA0G,IAK1G,8LAAoG,IAGxG,6NAAkB,iDA1Ca,iDAAsC,GAAjE,YAAkE,EAAvC,SAAsC,GAkBjD,oBAA8B,wBAA9C,aAA+C,EAA/B,SAA8B,GAC9B,mBAA6B,wBAA7C,aAAsE,EAAtD,SAA6B,GAE7B,oBAA8B,wBAA9C,aAA4F,EAA5E,SAA8B,GAIhB,kEAAqE,yBAAnG,aAAoG,EAAtE,SAAqE,GAKnF,kEAAqE,yBAArF,aAAmI,EAAnH,SAAqE,GAI7E,oBAA8B,wBAAtC,aAA0G,EAAlG,SAA8B,GAK9B,mBAA6B,wBAArC,aAAoG,EAA5F,SAA6B,GAGzC,aAAkB,2BA5ClB,wJAA0C;;;;;;;;;;;;;;;;;;;;ACA1C,yEAA6D;AAI7D,qFAA6E;AAO7E,MAKa,4BAA4B;IAgBvC,YAAoB,MAAc,EAAS,aAA4B,EAAU,IAAwB,EAChG,cAA8B,EAAS,MAAiB,EAAS,cAA8B,EAC/F,aAAoC,EAAS,WAAwB;QAF1D,WAAM,GAAN,MAAM,CAAQ;QAAS,kBAAa,GAAb,aAAa,CAAe;QAAU,SAAI,GAAJ,IAAI,CAAoB;QAChG,mBAAc,GAAd,cAAc,CAAgB;QAAS,WAAM,GAAN,MAAM,CAAW;QAAS,mBAAc,GAAd,cAAc,CAAgB;QAC/F,kBAAa,GAAb,aAAa,CAAuB;QAAS,gBAAW,GAAX,WAAW,CAAa;QAhBvE,aAAQ,GAAQ;YACrB,UAAU,EAAE,uCAAuC;YACnD,UAAU,EAAE,EAAE;YACd,WAAW,EAAE,EAAE;YACf,QAAQ,EAAE,EAAE;YACZ,qBAAqB,EAAE,CAAC;YACxB,EAAE,EAAE,EAAE;YACN,SAAS,EAAE,EAAE;YACb,YAAY,EAAE,KAAK;SACpB,CAAC;QAGK,eAAU,GAAQ,EAAE,CAAC;QAM1B,IAAI,UAAU,GAAQ,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC;QAClD,IAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;YACrC,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;SACvD;QAED,oBAAoB;QACpB,IAAI,OAAM,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,WAAW,EAAE;YAClE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SACvD;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;SACrC;QAED,mCAAmC;QACnC,IAAI,KAAK,GAAY,aAAa,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;QAClE,IAAG,KAAK,IAAI,IAAI,EAAE;YAChB,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAC/D,IAAI,CAAC,QAAQ,CAAC,qBAAqB,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;SACvF;QAED,oBAAoB;QACpB,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,mCAAmC,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACpF,IAAI,CAAC,QAAQ,CAAC,EAAE,GAAG,QAAQ,CAAC,EAAE,CAAC;QACjC,CAAC,CAAC,CAAC;QAEH,oBAAoB;QACpB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAC5D,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,QAAQ,CAAC,KAAK,CAAC;QAC3C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;IACR,CAAC;IAED,WAAW;QACT,IAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,IAAI,IAAI,CAAC,UAAU,CAAC,iBAAiB,IAAI,IAAI,CAAC,UAAU,CAAC,qBAAqB,IAAI,CAAC,CAAC;YAC9G,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,IAAI,IAAI,CAAC,UAAU,CAAC,iBAAiB,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE;YACtH,IAAI,CAAC,QAAQ,CAAC,qBAAqB,EAAE,CAAC;YAEtC,oBAAoB;YACpB,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,uBAAuB,CAAC,CAAC;YACnD,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,EAAE,CAAC;YAC5B,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,EAAE,CAAC;YAC9B,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,EAAE,CAAC;YAE/B,kDAAkD;YAClD,IAAI,UAAU,GAAQ,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC;YACzD,UAAU,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;YACvD,UAAU,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;YACvD,UAAU,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;YAEzD,gCAAgC;YAChC,IAAI,WAAW,GAAQ,EAAE,CAAC;YAC1B,IAAI,UAAU,GAAQ,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC;YAClD,IAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;gBACrC,IAAI,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;gBACvD,WAAW,CAAC,IAAI,CAAC,GAAG,YAAY,CAAC,GAAG,CAAC;gBACrC,WAAW,CAAC,MAAM,CAAC,GAAG,YAAY,CAAC,IAAI,CAAC;aACzC;iBAAM;gBACL,WAAW,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC;gBAC9C,WAAW,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC;aAChC;YAED,IAAG,OAAM,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,WAAW,EAAE;gBACxD,IAAI,CAAC,UAAU,CAAC,cAAc,GAAG,CAAC,CAAC;aACpC;iBAAM;gBACL,IAAI,CAAC,UAAU,CAAC,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,cAAc,GAAG,CAAC,CAAC;aACrE;YAED,IAAI,QAAQ,GAAQ;gBAClB,QAAQ,EAAE,iBAAiB;gBAC3B,MAAM,EAAE;oBACN,WAAW,EAAE,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG;oBACpD,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,SAAS;oBACtC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,OAAO;oBAClC,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,SAAS;oBACtC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE;oBACtB,kBAAkB,EAAE,IAAI,CAAC,QAAQ,CAAC,qBAAqB;oBACvD,wBAAwB,EAAE,WAAW;oBACrC,oBAAoB,EAAE,UAAU;iBACjC;gBACD,gBAAgB,EAAE,IAAI,CAAC,UAAU,CAAC,cAAc;gBAChD,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,EAAE,SAAS,EAAE,WAAW,CAAC;gBAC/D,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS;aACjC,CAAC;YAEF,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,QAAQ,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;gBACtE,IAAG,QAAQ,CAAC,MAAM,IAAI,SAAS,EAAE;oBAC/B,IAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC;oBAClC,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,4BAA4B,CAAC;oBACxD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;iBACxC;qBAAM;oBACL,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,sCAAsC,EAAE,IAAI,EAAE;wBAClE,QAAQ,EAAE,IAAI;qBACf,CAAC,CAAC;iBACJ;YACH,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,oBAAoB;YACpB,IAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,IAAI,EAAE,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,IAAI,IAAI,CAAC,UAAU,CAAC,iBAAiB,EAAE;gBAC9F,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,wBAAwB,EAAE,IAAI,EAAE;oBACpD,QAAQ,EAAE,IAAI;iBACf,CAAC,CAAC;aACJ;iBAAM;gBACL,IAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,IAAI,EAAE,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;oBAC7F,IAAI,CAAC,QAAQ,CAAC,qBAAqB,IAAI,CAAC,EAAE;oBACxC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,uBAAuB,EAAE,IAAI,EAAE;wBACnD,QAAQ,EAAE,IAAI;qBACf,CAAC,CAAC;iBACJ;aACF;YAED,qBAAqB;YACrB,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,EAAE,CAAC;YAC5B,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,EAAE,CAAC;YAC/B,IAAI,CAAC,QAAQ,CAAC,qBAAqB,EAAE,CAAC;YACtC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,uBAAuB,EAAE,IAAI,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAC;YAErF,wBAAwB;YACxB,IAAG,IAAI,CAAC,QAAQ,CAAC,qBAAqB,IAAI,CAAC,EAAE;gBAC3C,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;aAChE;YACD,OAAO,KAAK,CAAC;SACd;IACH,CAAC;IAED,qBAAqB;IACrB,OAAO,CAAC,QAAQ;QACd,IAAI,IAAI,GAAG;YACT,QAAQ,EAAE,oBAAoB;YAC9B,WAAW,EAAE;gBACX,KAAK,EAAE,QAAQ;aAChB;SACF;QAED,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,sBAAsB,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACvE,IAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC1B,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;aACnC;iBAAM;gBACL,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;aACrC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,aAAa,CAAC,MAAM;QAClB,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QACpE,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,EAAE,CAAC;IACjC,CAAC;CAEF;AA7KD,oEA6KC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mECvLD,2SAAgD;mEAChD,4RAAkD;mEAClD,qRAA8C;mEAC9C,+RAAkD;mEAGhD,qgBAAsD,yBAArB,+BAAoB,EAArD,YAAsD,EAArB,SAAoB,2BAArD,qQAAsD;mEAOtD,oGAA4D,KAC1D,mGAAwB;;;kLAAsC,GAAnC,YAAkC,IAAC,8CAAiB,MAAI,oDAAuB,2BAA/E,+CAAkC,GAArC,YAAsC,EAAnC,SAAkC,2BAArC,8GAAsC;mEAEhE,oGAA6D,KAC3D,mGAAwB;;;kLAAuC,GAApC,YAAmC,IAAC,8CAAiB,MAAI,oDAAuB,2BAAhF,gDAAmC,GAAtC,YAAuC,EAApC,SAAmC,2BAAtC,8GAAuC;mEAEjE,oGAA8D,KAC5D,mGAAwB;;;kLAAwC,GAArC,YAAoC,IAAC,8CAAiB,MAAI,oDAAuB,2BAAjF,iDAAoC,GAAvC,YAAwC,EAArC,SAAoC,2BAAvC,8GAAwC;mEAElE,oGAA8D,KAC5D,mGAAwB;;;kLAAwC,GAArC,YAAoC,IAAC,8CAAiB,MAAI,oDAAuB,2BAAjF,iDAAoC,GAAvC,YAAwC,EAArC,SAAoC,2BAAvC,8GAAwC;oEAc1D,oMAC+D,mEAC5B,iCAFnC,0DAC+D;oEAQ/D,qMAC8D,kEAC5B,iCAFlC,0DAC8D;oEAa9D,qMAC8D,qEACzB,iCAFrC,0DAC8D;oEAe9D,qMACwD,8DAC1B,iCAF9B,0DACwD;oEAOxD,qMAC8D,gEAC9B,iCAFhC,0DAC8D;oEAQ5D;;;;;;uPAAmE,iCAAgB,2BAAzC,0EAAwB,GAAlE,YAAmE,EAAzB,SAAwB,2BAAlE,+bAAmE,qEAAgB;oEAQnF;;;;;;uPAA4D,iCAAU,2BAA7B,qEAAkB,GAA3D,YAA4D,EAAnB,SAAkB,2BAA3D,+bAA4D,gEAAU;gHArGlF,yLAAgD,IAChD,yLAAkD,IAClD,yLAA8C,IAC9C,yLAAkD,IAElD,iRAAgC,IAC9B,uLAAsD,IAEtD,oMAAwC,kDAExC,MAGA,uLAA4D,IAG5D,uLAA6D,IAG7D,uLAA8D,IAG9D,uLAA8D,IAK9D,0QAA2B,IACzB,4FAAmB,qDAAmB,MACtC,qMAAuC,IACrC;;;;;wBAC2C;MAAzC;;wBAAwC;MAD1C,yZAC2C,IAEzC,mnDAAkC,MAChC,wJAAW,iDAAgB,MAC3B;;;;;;;;;;;;;;;;;;;;wBACyD;MAAvD;;wBAAsD;MADxD,+5BACyD,KACzD,wLAC+D,IAIjE,2nDAAkC,MAChC,0JAAW,gDAAe,MAC1B;;;;;;;;;;;;;;;;;;;;wBACwD;MAAtD;;wBAAqD;MADvD,i6BACwD,KACxD,wLAC8D,IAIhE,2nDAAkC,MAChC,0JAAW,8CAAa,MACxB;;;;;;;;;iZAAgG,KAGlG,6nDAAkC,MAChC,4JAAW,uCAAM,MACjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wBACuD;MAArD;;yBAAoD;MADtD,+jCACuD,KACvD,yLAC8D,IAIhE,6nDAAkC,MAChC,4JAAW,qCAAI,MACf;;;;;;;;;;;;;;;;;;;;;s4BAAmF,KACnF;;;4XAA2D,IAC3D,yXAA0B,IAG5B,6nDAAkC,MAChC,4JAAW,oCAAG,MACd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wBACmD;MAAjD;;yBAAgD;MADlD,+jCACmD,KACnD,yLACwD,IAG1D,6nDAAkC,MAChC,4JAAW,wCAAO,MAClB;;;;;;;;;;;;;;;;;;;;wBACyD;MAAvD;;wBAAoD;MADtD,q6BACyD,KACzD,yLAC8D,IAIhE,woDAAqD,MACnD,4JAAW,sCAAK,MAChB;;;;;;;;wBAA+E;MAA3C;;wBAA0C;MAA9E,uhCAA+E,KAC7E;;;;;;yPAAsB,+CAAiB,MACvC,uNAAmE,IAIvE,woDAAqD,MACnD,4JAAW,qCAAI,MACf;;;;;;;;;2/BAAmC,KACjC;;;;;;yPAAoB,+CAAiB,MACrC,uNAA4D,IAIhE,uGAA0B,KACxB,sOAA4E,YAAtC;;wBAAqC;MAA3E,0LAA4E,sCAAQ,MACpF,6WAA8E,sCAAQ,MAOhG,+NAAkB,iDAlHA,0CAA6B,GAA/C,YAAgD,EAA9B,SAA6B,GAC5B,2CAA8B,GAAjD,YAAkD,EAA/B,SAA8B,GAChC,yCAA4B,GAA7C,YAA8C,EAA7B,SAA4B,GAC1B,2CAA8B,GAAjD,YAAkD,EAA/B,SAA8B,GAG7B,mBAAc,SAAhC,aAAsD,EAApC,SAAc,GAOP,+CAAkC,GAA3D,aAA4D,EAAnC,SAAkC,GAGlC,gDAAmC,GAA5D,aAA6D,EAApC,SAAmC,GAGnC,iDAAoC,GAA7D,aAA8D,EAArC,SAAoC,GAGpC,iDAAoC,GAA7D,aAA8D,EAArC,SAAoC,GAQgB,oBAAiC,sBAA1G,aAC2C,EAD8B,UAAiC,GAGxF,uBAAiB,EAAjC,aAAkC,EAAlB,UAAiB,GAEU,6DAAyD,GAAlG,aACyD,EADhB,UAAyD,GAAlF,6BAAwB,EAAxC,aACyD,EADzC,UAAwB,GAE7B,iLACmD,oBAD9D,aAC+D,EADpD,UACmD,GAIhD,uBAAiB,EAAjC,aAAkC,EAAlB,UAAiB,GAES,6DAAwD,GAAhG,aACwD,EADhB,WAAwD,GAAhF,6BAAuB,EAAvC,aACwD,EADxC,WAAuB,GAE5B,+KACkD,oBAD7D,aAC8D,EADnD,WACkD,GAI/C,wBAAiB,EAAjC,aAAkC,EAAlB,WAAiB,GAEa,sBAAiB,EAA7C,iCAA2B,EAAmB,wEAA+B,GAA7F,aAAgG,EAApD,WAAiB,EAA7C,WAA2B,EAAmB,WAA+B,GAG/E,wBAAiB,EAAjC,cAAkC,EAAlB,WAAiB,GAEmB,4DAAuD,GAAzG,cACuD,EADL,WAAuD,GAA3E,yBAAmB,EAA1C,0BAAa,EAApB,cACuD,EADzB,WAAmB,EAA1C,WAAa,GAET,4KACkD,oBAD7D,cAC8D,EADnD,WACkD,GAI/C,wBAAiB,EAAjC,cAAkC,EAAlB,WAAiB,GAEM,iCAA0B,GAAxD,qBAAoB,aAA3B,cAAmF,EAA9C,WAA0B,EAAxD,WAAoB,GAAqC,wBAAkB,EAA3E,qBAAoB,aAA3B,cAAmF,EAAnB,WAAkB,EAA3E,WAAoB,GACM,iCAAgB,GAAC,oBAAQ,EAA1D,cAA2D,EAA1B,WAAgB,EAAC,WAAQ,GAI5C,wBAAiB,EAAjC,cAAkC,EAAlB,WAAiB,GAEiB,wDAAmD,GAAnG,cACmD,EADH,WAAmD,GAArE,uBAAiB,EAAxC,0BAAa,EAApB,cACmD,EADrB,WAAiB,EAAxC,WAAa,GAET,gKAC4C,oBADvD,cACwD,EAD7C,WAC4C,GAGzC,wBAAiB,EAAjC,cAAkC,EAAlB,WAAiB,GAEO,4DAAuD,GAA7F,cACyD,EADnB,WAAuD,GAA7E,2BAAqB,EAArC,cACyD,EADzC,WAAqB,GAE1B,4KACkD,oBAD7D,cAC8D,EADnD,WACkD,GAI5B,wBAAiB,EAApD,cAAqD,EAAlB,WAAiB,GAEtC,yBAAuB,EAAnC,cAA+E,EAAnE,WAAuB,GAAnC,cAA+E,GACjE,mBAAS,EAArB,cAAsB,EAAV,WAAS,GACT,qBAA6B,SAAzC,cAAmE,EAAvD,WAA6B,GAIV,wBAAiB,EAApD,cAAqD,EAAlB,WAAiB,GAEtC,wBAAsB,EAAlC,cAAmC,EAAvB,WAAsB,GAAlC,cAAmC,GACrB,qBAAO,EAAnB,cAAoB,EAAR,WAAO,GACP,qBAA4B,SAAxC,cAA4D,EAAhD,WAA4B,GAMJ,sBAAuC,4BAA7E,cAA8E,EAAxC,WAAuC,GAOvF,cAAkB,2BA7GlB,8FAAgC,GAsB9B,iGAA2B,GAGvB,ubAC2C,GAEzC,k/CAAkC,IAEhC,o/BACyD,IAM3D,k/CAAkC,IAEhC,o/BACwD,IAM1D,8hDAAkC,IAEhC,2lBAAgG,GAGlG,qjDAAkC,IAEhC,siCACuD,IAMzD,qjDAAkC,IAEhC,mpCAAmF,IACnF,4XAA2D,GAI7D,qjDAAkC,IAEhC,siCACmD,IAKrD,qjDAAkC,IAEhC,siCACyD,IAM3D,qjDAAqD,IAEnD,o6CAA+E,IAC7E,ifAAsB,GAK1B,qjDAAqD,IAEnD,o6CAAmC,IACjC,ifAAoB,GAMtB,yKAA4E,GAC5E,yKAA8E;;;;;;;;;;;;;;;;;;;;AC5GxF,yEAA4D;AAC5D,4EAAoG;AAQpG,MAMa,wBAAwB;IAkBnC,YAAmB,EAAe,EAAU,QAAkB,EACrD,WAA+B,EAAS,MAAqB,EAAS,MAAc,EAAS,QAAqB,EAAS,WAA2B,EAAS,cAA8B;QADnL,OAAE,GAAF,EAAE,CAAa;QAAU,aAAQ,GAAR,QAAQ,CAAU;QACrD,gBAAW,GAAX,WAAW,CAAoB;QAAS,WAAM,GAAN,MAAM,CAAe;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,aAAQ,GAAR,QAAQ,CAAa;QAAS,gBAAW,GAAX,WAAW,CAAgB;QAAS,mBAAc,GAAd,cAAc,CAAgB;QAhBtM,SAAI,GAAG,IAAI,mBAAW,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;QAEnC,mBAAc,GAAG,IAAI,mBAAW,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;QAItD,YAAO,GAAQ,sBAAsB,CAAC;QAMtC,WAAM,GAAQ,KAAK,CAAC;QACpB,eAAU,GAAW,IAAI,CAAC;QAK/B,gBAAgB;QAChB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAExD,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,UAAe,CAAC;QACpB,UAAU,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;QAE7B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;QACvD,OAAO,CAAC,GAAG,CAAC,eAAe,EAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC;QAEvC,mBAAmB;QACnB,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,CAAC;QAEvC,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAExB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;QAEvD,IAAI,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,EAAE,YAAY,CAAC,CAAC;QACnE,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC,KAAK,CAAC;YAClC,SAAS,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YACpC,QAAQ,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YACnC,OAAO,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YAClC,OAAO,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YAClC,GAAG,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YAC9B,IAAI,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YAC/B,KAAK,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YAChC,IAAI,EAAE,CAAC,UAAU,CAAC;SACnB,CAAC;IACJ,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IACD,4BAA4B;IAC5B,YAAY,CAAC,IAAS,EAAE,GAAQ;QAC9B,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,eAAe,EAAE,CAAC;IACvC,CAAC;IACD,4BAA4B;IAE5B,YAAY;QACV,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAC7C,CAAC,EAAE,GAAG,CAAC,CAAC;QACR,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QACtF,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QACpF,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAChF,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QAC1E,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAClF,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAC9E,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAC9E,CAAC;IAED,yDAAyD;IACzD,gBAAgB;QACd,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,8BAA8B,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACvF,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;YACvB,IAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,6BAA6B,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACtF,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,IAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wDAAwD;IACxD,OAAO,CAAC,KAAK;QACX,IAAI,GAAG,GAAG,KAAK,CAAC;QAChB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IACpC,CAAC;IAED,aAAa,CAAC,SAAS;QACrB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;IAC1C,CAAC;IAED,yBAAyB;QACvB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC;IAChD,CAAC;IAED,yBAAyB;QACvB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAM,CAAC;QACX,KAAK,CAAC,IAAI,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE;YAC3C,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,aAAa,EAAE,CAAC;SACtD;QACD,IAAI,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE;YAClC,IAAI,IAAS,CAAC;YACd,IAAI,GAAG;gBACL,QAAQ,EAAE,OAAO;gBACjB,MAAM,EAAE;oBACN,EAAE,EAAE,IAAI,CAAC,UAAU;oBACnB,SAAS,EAAE,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,SAAS;oBACnD,QAAQ,EAAE,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,QAAQ;oBACjD,OAAO,EAAE,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,OAAO;oBAC/C,IAAI,EAAE,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,IAAI;oBACzC,GAAG,EAAE,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,GAAG;oBACvC,OAAO,EAAE,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,OAAO;oBAC/C,IAAI,EAAE,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,IAAI;oBACzC,KAAK,EAAE,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,KAAK;iBAC5C;gBACD,OAAO,EAAE,IAAI,CAAC,UAAU;aACzB;YACD,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;gBACvE,IAAI,iBAAiB,GAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC;gBACzE,IAAI,IAAI,GAAQ,iBAAiB,CAAC,IAAI,CAAC;gBACvC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;gBAEnC,iBAAiB,CAAC,SAAS,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,SAAS,CAAC;gBACvE,iBAAiB,CAAC,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,QAAQ,CAAC;gBACrE,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC;gBACtD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACpB,IAAI,MAAM,GAAQ,IAAI,CAAC;gBACvB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE;oBACvC,QAAQ,EAAE,IAAI;iBACf,CAAC,CAAC;gBAEH,UAAU,CAAC,GAAG,EAAE;oBACd,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,cAAc,EAAE,iBAAiB,CAAC,CAAC;gBACrD,CAAC,EAAE,IAAI,CAAC,CAAC;gBAET,UAAU,CAAC,GAAG,EAAE;oBACd,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,GAAG,YAAY,CAAC,CAAC;gBACjD,CAAC,EAAE,IAAI,CAAC,CAAC;YACX,CAAC,CAAC;SACL;IAEH,CAAC;CAEF;AA5JD,4DA4JC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kECnKD,2SAAgD;kEAEhD,4RAAkD;kEAElD,qRAA8C;kEAE9C,+RAAkD;kEAIlD,qgBAAsD,yBAArB,+BAAoB,EAArD,YAAsD,EAArB,SAAoB,2BAArD,qQAAsD;kEAqBtC,oMACoH,iEACjF,iCAFnC,0DACoH;kEAQpH,qMACoH,iEACjF,iCAFnC,0DACoH;kEAQpH,qMAC4H,0DAChG,iCAF5B,0DAC4H;+GAlD5I,wLAAgD,IAEhD,wLAAkD,IAElD,wLAA8C,IAE9C,wLAAkD,IAIlD,yLAAsD,IACtD,iRAAgC,IAChC,oMAAwC,mDAExC,MAGA,kGAAyB,KACrB,oGAAwB;;;mLAAuC,GAApC,aAAmC,IAAC,8CAAiB,MAAI,oDAAuB,MAI/G,yQAA2B,IACvB,yEAAI,iDAAe,MACnB,oMAAuC,IACnC;;;;;wBAC4C;MAAxC;;wBAAuC;MAD3C,yZAC4C,IAExC,ykDAAmC,MAC/B;;;;;;;;;;;;;;;;;;;;wBACuH;MAAxD;;wBAAuD;MADtH,k7BACuH,KACvH,sLACoH,IAIxH,ilDAAmC,MAC/B;;;;;;;;;;;;;;;;;;;;wBAE4D;MAAxD;;wBAAuD;MAF3D,o7BAE4D,KAC5D,sLACoH,IAIxH,ilDAAmC,MAC/B;;;;;;;;;;;;;;;;;;;;wBAEgE;MAA5D;;wBAA2D;MAF/D,o7BAEgE,KAChE,sLAC4H,IAIhI,sGAA0B,KACtB,qOAA4E,YAAtC;;wBAAqC;MAA3E,yLAA4E,sCAAQ,MACpF,oVAAuC,sCAAQ,MAO/D,+NAAkB,iDA/DA,0CAA6B,GAA/C,YAAgD,EAA9B,SAA6B,GAE5B,2CAA8B,GAAjD,YAAkD,EAA/B,SAA8B,GAEhC,yCAA4B,GAA7C,YAA8C,EAA7B,SAA4B,GAE1B,2CAA8B,GAAjD,YAAkD,EAA/B,SAA8B,GAI/B,mBAAc,SAAhC,aAAsD,EAApC,SAAc,GAQD,iDAAmC,GAAtC,aAAuC,EAApC,SAAmC,GAOc,oBAAgC,qBAAxG,aAC4C,EAD4B,UAAgC,GAK5F,8DAA0D,GAD9D,aACuH,EAAnH,UAA0D,GAD9C,wCAAmC,EAAC,2BAAe,EAAnE,aACuH,EADvG,UAAmC,EAAC,UAAe,GAG/D,wHAA+G,YADnH,aACoH,EAAhH,UAA+G,GAM/G,8DAA0D,GAD9D,aAE4D,EADxD,UAA0D,GAD9C,oCAA+B,EAAC,4BAAe,EAA/D,aAE4D,EAF5C,UAA+B,EAAC,WAAe,GAI3D,yHAA+G,YADnH,aACoH,EAAhH,WAA+G,GAM/G,mEAA8D,GADlE,aAEgE,EAD5D,WAA8D,GADlD,uCAAiC,EAAC,4BAAe,EAAjE,aAEgE,EAFhD,WAAiC,EAAC,WAAe,GAI7D,iIAAuH,YAD3H,aAC4H,EAAxH,WAAuH,GAa3I,cAAkB,2BApDlB,+FAAgC,GAOJ,iHAAuC,GAInE,+FAA2B,GAGnB,ubAC4C,GAExC,k/CAAmC,IAC/B,o/BACuH,IAM3H,k/CAAmC,IAC/B,o/BAE4D,IAMhE,8hDAAmC,IAC/B,ohCAEgE,IAOhE,sKAA4E,GAC5E,yKAAuC;;;;;;;;;;;;;;;;;;;;AC1DvD,yEAA4D;AAC5D,4EAAoG;AAQpG,MAMa,uBAAuB;IAclC,YAAmB,EAAe,EAAS,MAAqB,EAAS,MAAc,EAAS,QAAqB,EAAS,WAA2B,EAAS,WAA+B,EAAS,cAA8B;QAArN,OAAE,GAAF,EAAE,CAAa;QAAS,WAAM,GAAN,MAAM,CAAe;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,aAAQ,GAAR,QAAQ,CAAa;QAAS,gBAAW,GAAX,WAAW,CAAgB;QAAS,gBAAW,GAAX,WAAW,CAAoB;QAAS,mBAAc,GAAd,cAAc,CAAgB;QAHjO,WAAM,GAAQ,KAAK,CAAC;QACpB,eAAU,GAAW,IAAI,CAAC;QAI/B,mBAAmB;QACnB,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,CAAC;QAEvC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QACxD,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,UAAe,CAAC;QACpB,UAAU,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;QAC7B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;QACvD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC;QAEvC,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC,KAAK,CAAC;YACjC,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,kBAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3F,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,kBAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3F,eAAe,EAAE,EAAE;SACpB,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,iBAAiB,CAAC,EAAE,CAAC;IACxE,CAAC;IAED,QAAQ;IACR,CAAC;IACH,4BAA4B;IAC5B,YAAY,CAAC,IAAS,EAAE,GAAQ;QAC9B,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,eAAe,EAAE,CAAC;IACvC,CAAC;IACD,4BAA4B;IAC1B,YAAY,CAAC,cAAsB,EAAE,kBAA0B;QAC7D,OAAO,CAAC,KAAgB,EAAE,EAAE;YAC1B,IAAI,aAAa,GAAG,KAAK,CAAC,QAAQ,CAAC,cAAc,CAAC,EAChD,oBAAoB,GAAG,KAAK,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;YAC5D,IAAI,aAAa,CAAC,KAAK,KAAK,oBAAoB,CAAC,KAAK,EAAE;gBACtD,OAAO,oBAAoB,CAAC,SAAS,CAAC,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC;aAChE;iBACI;gBACH,OAAO,oBAAoB,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;aAC7C;QACH,CAAC,CAAC;IACJ,CAAC;IAID,yBAAyB;QACvB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC;IAChD,CAAC;IAED,wBAAwB;QACtB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QAEnB,IAAI,CAAM,CAAC;QACX,KAAK,CAAC,IAAI,IAAI,CAAC,kBAAkB,CAAC,QAAQ,EAAE;YAC1C,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,aAAa,EAAE,CAAC;SACrD;QAED,IAAI,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE;YACjC,OAAO,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,eAAe,CAAC;YACrD,IAAI,IAAI,GAAG;gBACT,GAAG,EAAE,IAAI,CAAC,UAAU;gBACpB,SAAS,EAAE,CAAC;gBACZ,WAAW,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,WAAW;gBACtD,WAAW,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,WAAW;aACvD;YACD,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,gBAAgB,EAAE,IAAI,CAAC;iBACjD,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;gBACtB,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;gBAC/B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACpB,IAAI,QAAQ,CAAC,MAAM,IAAI,IAAI,EAAE;oBAC3B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,EAAE;wBACzC,QAAQ,EAAE,IAAI;qBACf,CAAC,CAAC;oBACH,UAAU,CAAC,GAAG,EAAE;wBACd,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC;oBAChD,CAAC,EAAE,IAAI,CAAC,CAAC;iBACV;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,EAAE;wBACzC,QAAQ,EAAE,IAAI;qBACf,CAAC,CAAC;iBACJ;YAEH,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE;gBACV,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACpB,KAAK,CAAC,sCAAsC,CAAC,CAAC;YAChD,CAAC,CAAC,CAAC;SACN;IAEH,CAAC;CAEF;AA1GD,0DA0GC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6DCnHD,8FAAmB,KACf,6PAAqB,oCAAiB,MACtC,yMAAwB,IACpB,0EAAG,qCAAkB,MAG7B,yMAAwB,IACpB,4MAAuC,YAApB;;wBAAmB;MAAtC,oLAAuC,kCAAuB,MAC9D,qOAAuD,YAApC;;wBAAmB;MAAtC,oLAAuD,kCAAuB,2BAP9E,yHAAqB,2DAAiB,GAE/B,yDAAkB,GAIzB,8JAAuC,kEAAuB,GAC9D,8JAAuD,kEAAuB;;;;;;;;;;;;;;;;;;;;ACRlF,yEAA0D;AAC1D,qFAA6E;AAC7E,+EAAyD;AASzD,MAMa,kBAAkB;IAI7B,YAAmB,SAA2C,EAC5B,UAAsB,EAAS,MAAc;QAD5D,cAAS,GAAT,SAAS,CAAkC;QAC5B,eAAU,GAAV,UAAU,CAAY;QAAS,WAAM,GAAN,MAAM,CAAQ;QAC7E,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;IACzB,CAAC;IAED,QAAQ;IACR,CAAC;IAED,OAAO;QACL,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC/C,CAAC;IAED,OAAO;QACL,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC/C,CAAC;CAEF;AA1BD,gDA0BC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8DCrCD,0GAA2D,KACvD,2fAA0B,yBAAb,sBAAY,EAAzB,YAA0B,EAAb,SAAY,2BAAzB,+KAA0B;8DAD9B,mLAA2D,iDAAtD,wCAA2B,GAAhC,YAA2D,EAAtD,SAA2B;;;;;;;;;;;;;;;;;;;;ACAhC,yEAAkD;AAIlD,MAMa,mBAAmB;IAI9B,YAAoB,aAAgC,EAAS,cAA8B,EAAS,MAAc;QAA9F,kBAAa,GAAb,aAAa,CAAmB;QAAS,mBAAc,GAAd,cAAc,CAAgB;QAAS,WAAM,GAAN,MAAM,CAAQ;QAChH,IAAI,MAAM,GAAQ,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC7C,mCAAmC;QACjC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;YAC3C,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;QACL,IAAI;IACN,CAAC;IAED,QAAQ;IACR,CAAC;CAEF;AAtBD,kDAsBC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iEC1BD,6EAAkD,KAChD,2SAAkB;iEAGpB,6EAAiD,KAC/C,oRAAiB;iEAGnB,6EAAmD,KACjD,6RAAmB;iEAGrB,6EAAmD,KACjD,+RAAmB;iEAbrB,uLAAkD,IAIlD,uLAAiD,IAIjD,uLAAmD,IAInD,uLAAmD,IAInD,qMAAuC,IACrC,mGAAuB,KACrB,6HAAiD,KAEnD,4MAA6C,IAC3C,2IAAyD,KAEzD,4EAAI,6CAAW,MACf,4EAAI,yDAAuB,MAC3B,wPAAyE,YAAtB;;wBAAqB;MAAxE,yLAAyE,0CAAY,MAMzF,yMAAyC,IACvC,yGAA6B,KAE3B,8LAA+B,IAC7B,uFAAW,gDAAc,MACzB,uFAAW,qDAAmB,MAEhC,2EAAG,wGAAiE,mDAtC1D,gDAAmC,GAAjD,YAAkD,EAApC,SAAmC,GAInC,+CAAkC,GAAhD,YAAiD,EAAnC,SAAkC,GAIlC,iDAAoC,GAAlD,YAAmD,EAArC,SAAoC,GAIpC,iDAAoC,GAAlD,YAAmD,EAArC,SAAoC,2BAa9C,8JAAyE;;;;;;;;;;;;;;;;;;;;ACzB7E,yEAAkD;AAIlD,MAKa,sBAAsB;IAGjC,YAAmB,MAAsB,EAAS,cAA8B,EAAS,MAAc;QAApF,WAAM,GAAN,MAAM,CAAgB;QAAS,mBAAc,GAAd,cAAc,CAAgB;QAAS,WAAM,GAAN,MAAM,CAAQ;QACrG,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACxC,IAAI,UAAe,CAAC;QACpB,UAAU,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;QAC7B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;QACvD,OAAO,CAAC,GAAG,CAAC,YAAY,EAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAClD,CAAC;IAED,QAAQ;IACR,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,YAAY,CAAC,CAAC;IACxE,CAAC;CAEF;AAvBD,wDAuBC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qEC3BD,0EAAG,4DAA0B;;;;;;;;;;;;;;;;;;;;ACA7B,yEAAkD;AAElD,MAKa,0BAA0B;IAErC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;AAZD,gEAYC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mECHe,mMAC8C,kEACV,iCAFpC,0DAC8C;mEAZ9D,sQAA2B,IACvB;;;;;wBACwC;MAApC;;wBAAmC;MADvC,4YACwC,IACpC,4MAA2C,IAGvC,oGAAyB,sCAAU,MACnC,+EAAO,8CAAY,MACnB,ujDAAgB,MACZ;;;;;;;;;;;;;;;;;;;;wBACiD;MAD2B;;wBAAkB;MAC1F;;wBAA4C;MADhD,45BACiD,KACjD,uLAC8C,IAIlD,sGAA0B,KACtB;;wBAAwF;MAAjC;;wBAAgC;MAAvF,8VAAwF,sCAAQ,MAChG;;;oWAAgF,sCAAQ,mDAjB5B,mBAA4B,iBAApG,YACwC,EADgC,SAA4B,GAQ5D,mDAA+C,GAAC,oBAAkB,OAA9F,aACiD,EADrB,UAA+C,EAAC,UAAkB,GAA9F,aACiD,GACtC,mJACkC,oBAD7C,aAC8C,EADnC,UACkC,GAKJ,yBAAa,EAA9B,mBAAgB,EAAxC,aAAwF,EAA/C,UAAa,EAA9B,UAAgB,GAChB,yBAAa,EAAC,qBAAyB,EAA/D,aAAgF,EAAxD,UAAa,EAAC,UAAyB,mDAlB/E,6FAA2B,GACvB,iaACwC,GAIP,kDAAU,GAEnC,k/CAAgB,IACZ,o/BACiD,IAOjD,uRAAwF,GACxF,uRAAgF;;;;;;;;;;;;;;;;;;;;AClBhG,yEAAkD;AAElD,4EAAiF;AACjF,+EAAyD;AAKzD,MAMa,wBAAwB;IAoBnC,YAAmB,MAAiB,EAAS,EAAe,EAAS,MAAqB,EACjF,IAAwB,EAAS,QAAqB,EAAQ,MAAe;QADnE,WAAM,GAAN,MAAM,CAAW;QAAS,OAAE,GAAF,EAAE,CAAa;QAAS,WAAM,GAAN,MAAM,CAAe;QACjF,SAAI,GAAJ,IAAI,CAAoB;QAAS,aAAQ,GAAR,QAAQ,CAAa;QAAQ,WAAM,GAAN,MAAM,CAAS;QAnB/E,SAAI,GAAW,EAAE,CAAC;QAIlB,mBAAc,GAAQ,EAAE,CAAC;QAEzB,eAAU,GAAQ;YACvB,OAAO,EAAE,2BAA2B;YACpC,QAAQ,EAAE,SAAS;YACnB,IAAI,EAAE,OAAO;YACb,MAAM,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC;YACpD,IAAI,EAAE,gBAAgB;YACtB,IAAI,EAAE,gBAAgB;YACtB,MAAM,EAAE,gBAAgB;SACzB;QAMG,IAAI,UAAe,CAAC;QACpB,UAAU,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;QAC7B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;QACvD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC;QAEvC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC9B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC/B,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAExB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAClC,IAAI,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YAC/B,OAAO,EAAC,CAAC,EAAE,CAAC;SACb,CAAC;IACJ,CAAC;IAED,QAAQ;IACR,CAAC;IACD,YAAY,CAAC,IAAS,EAAE,GAAQ;QAC9B,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,eAAe,EAAE,CAAC;IACvC,CAAC;IACD,oBAAoB;QAClB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,mBAAmB,CAAC,CAAC;IACjD,CAAC;IACD,gBAAgB;QACd,IAAI,IAAI,GAAG;YACT,QAAQ,EAAE,kBAAkB;YAC5B,WAAW,EAAE;gBACX,gBAAgB,EAAE,IAAI,CAAC,UAAU;aAClC;YACD,OAAO,EAAE,IAAI,CAAC,UAAU;SACzB;QACD,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAC,IAAI,CAAC;aACnC,SAAS,CAAC,QAAQ,GAAE;YACnB,IAAI,CAAC,MAAM,GAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;YAChC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QAGxE,CAAC,CAAC;IACN,CAAC;IACD,oBAAoB;QAElB,IAAI,CAAM,CAAC;QACX,KAAK,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE;YACtC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,aAAa,EAAE,CAAC;SACjD;QACD,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAEpE,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE;YAC7B,IAAI,IAAS,CAAC;YACb,IAAG,IAAI,CAAC,MAAM,EAAC;gBACd,IAAI,GAAG;oBACL,QAAQ,EAAE,OAAO;oBACjB,WAAW,EAAE,CAAC,SAAS,CAAC;oBACxB,MAAM,EAAE;wBACN,EAAE,EAAE,IAAI,CAAC,MAAM;wBACf,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI;wBACpC,OAAO,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,OAAO;qBAC3C;oBACD,OAAO,EAAE,IAAI,CAAC,UAAU;iBACzB;aACD;iBAAI;gBACH,IAAI,GAAG;oBACN,QAAQ,EAAE,OAAO;oBACjB,MAAM,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK;oBACjC,WAAW,EAAE,CAAC,SAAS,CAAC;oBACxB,OAAO,EAAE,IAAI,CAAC,UAAU;iBACzB;aACD;YACF,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,IAAI,CAAC;iBAC3C,SAAS,CAAC,QAAQ,CAAC,EAAE;gBACpB,IAAI,QAAQ,CAAC,MAAM,GAAG,SAAS,EAAE;oBAC/B,UAAU,CAAC,GAAG,EAAE;oBAEhB,CAAC,EAAE,IAAI,CAAC,CAAC;iBAEV;qBAAM;oBACL,KAAK,CAAC,eAAe,CAAC,CAAC;iBAExB;YACH,CAAC,CAAC;SACL;IACH,CAAC;CAEF;AAhHD,4DAgHC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+ECzFe,oMACiD,yDAAwB,iCADzE,0DACiD;+EAYjD,oMAC4C,mDAAkB,iCAD9D,0DAC4C;+EAM5C,oMAC8C,qDAAoB,iCADlE,0DAC8C;+EAO1C;;;;;;kPAAmE,iCAAgB,2BAAzC,0EAAwB,GAAlE,YAAmE,EAAzB,SAAwB,2BAAlE,+bAAmE,qEAAgB;+EAUnF;;;;;;kPAA4D,iCAAU,2BAA7B,qEAAkB,GAA3D,YAA4D,EAAnB,SAAkB,2BAA3D,+bAA4D,gEAAU;+EAQ1E,oMAC0C,iDAAgB,iCAD1D,0DAC0C;+EA9E1D,mSAA0B,IAG1B,qMAAwC,mDAExC,MAEA,oGAAyB,KACrB,mGAAwB,KACpB;;;kLAA+C,GAA5C,YAA2C,IAAC,8CAAiB,MAAI,oDAAuB,MAOnG,6QAA2B,IACvB,yEAAI,mEAAiC,MACrC,qMAAuC,IAEnC;;;;;;uYAAmD,IAG/C,0jDAAgB,MACZ,uJAAW,sCAAK,MAChB;;;;;;;;;;;;;;;;;;;;;86BAAyD,KAG7D,mkDAAgB,MACZ,yJAAW,6CAAY,MACvB;;;;;;;;;;;;;;;;;;;;;u5BAA6C,KAC7C,mMACiD,IAIrD,mkDAAgB,MACZ,yJAAW,uCAAM,MACjB;;;;;;;;;;;;;;;;;;;;;u5BAAwC,KAG5C,mkDAAgB,MACZ,2JAAW,uCAAM,MACjB;;;;;;;;;;;;;;;;;;;;;25BAAwC,KACxC,oMAC4C,IAGhD,qkDAAgB,MACZ,2JAAW,yCAAQ,MACnB;;;;;;;;;;;;;;;;;;;;;25BAA0C,KAC1C,oMAC8C,IAGlD,qoDAAqD,MACjD,2JAAW,sCAAK,MAChB;;;;;;;;wBAA+E;MAA3C;;wBAA0C;MAA9E,mhCAA+E,KAC3E;;;;;;oPAAsB,+CAAiB,MACvC,kOAAmE,IAM3E,qoDAAqD,MACjD,2JAAW,qCAAI,MACf;;;;;;;;;u/BAAmC,KAC/B;;;;;;oPAAoB,2CAAa,MACjC,kOAA4D,IAKpE,qkDAAgB,MACZ,2JAAW,qCAAI,MACf;;;;;;;;;;;;;;;;;;;;;25BAAsC,KACtC,oMAC0C,IAQ9C,uGAA0B,KACtB,sOAA4E,YAAtC;;wBAAqC;MAA3E,0LAA4E,sCAAQ,MACpF,sOACoC,YADE;;wBAAoB;MAA1D,mNACoC,oCAAM,MAQ1D,4PAA0B,iDAjG1B,YAA0B,GASf,wDAA2C,GAA9C,YAA+C,EAA5C,SAA2C,GAWxC,oBAAyB,cAA/B,aAAmD,EAA7C,UAAyB,GAKP,uBAAsB,EAAtC,aAAyD,EAAzC,UAAsB,GAAC,qBAAiB,EAAxD,aAAyD,EAAlB,UAAiB,GAKxC,6BAA4B,EAA5C,aAA6C,EAA7B,UAA4B,GAA5C,aAA6C,GAClC,wGACqC,oBADhD,aACiD,EADtC,UACqC,GAMhC,yBAAuB,EAAvC,aAAwC,EAAxB,WAAuB,GAAvC,aAAwC,GAKxB,yBAAuB,EAAvC,cAAwC,EAAxB,WAAuB,GAAvC,cAAwC,GAC7B,+FACgC,oBAD3C,cAC4C,EADjC,WACgC,GAK3B,2BAAyB,EAAzC,cAA0C,EAA1B,WAAyB,GAAzC,cAA0C,GAC/B,mGACkC,oBAD7C,cAC8C,EADnC,WACkC,GAGd,wBAAiB,EAApD,cAAqD,EAAlB,WAAiB,GAEpC,yBAAuB,EAAnC,cAA+E,EAAnE,WAAuB,GAAnC,cAA+E,GAC/D,mBAAS,EAArB,cAAsB,EAAV,WAAS,GACT,qBAA6B,SAAzC,cAAmE,EAAvD,WAA6B,GAMd,wBAAiB,EAApD,cAAqD,EAAlB,WAAiB,GAEpC,wBAAsB,EAAlC,cAAmC,EAAvB,WAAsB,GAAlC,cAAmC,GACnB,qBAAO,EAAnB,cAAoB,EAAR,WAAO,GACP,qBAA4B,SAAxC,cAA4D,EAAhD,WAA4B,GAO5B,uBAAqB,EAArC,cAAsC,EAAtB,WAAqB,GAArC,cAAsC,GAC3B,2FAC8B,oBADzC,cAC0C,EAD/B,WAC8B,GAWrC,sBAA+B,oBADnC,cACoC,EAAhC,WAA+B,GAQnD,cAA0B,2BAxFlB,8GAA+C,GAOvD,+FAA2B,GAInB,2aAAmD,GAG/C,k/CAAgB,IAEZ,o/BAAyD,IAG7D,k/CAAgB,IAEZ,o/BAA6C,IAMjD,8gDAAgB,IAEZ,ohCAAwC,IAG5C,8hDAAgB,IAEZ,siCAAwC,IAK5C,qjDAAgB,IAEZ,siCAA0C,IAK9C,qjDAAqD,IAEjD,o6CAA+E,IAC3E,ifAAsB,GAO9B,qjDAAqD,IAEjD,o6CAAmC,IAC/B,ifAAoB,GAM5B,qjDAAgB,IAEZ,siCAAsC,IAWtC,yKAA4E,GAC5E,yKACoC;;;;;;;;;;;;;;;;;;;;ACzFpD,yEAAkD;AAElD,4EAAiF;AAEjF,+EAAgD;AAGhD,MAKa,oCAAoC;IAY/C,YAAmB,aAA4B,EAAU,WAAwB,EACvE,IAAwB,EAAU,MAAe,EAAW,QAAsB;QADzE,kBAAa,GAAb,aAAa,CAAe;QAAU,gBAAW,GAAX,WAAW,CAAa;QACvE,SAAI,GAAJ,IAAI,CAAoB;QAAU,WAAM,GAAN,MAAM,CAAS;QAAW,aAAQ,GAAR,QAAQ,CAAc;QALrF,YAAO,GAAU,wBAAwB,CAAC;QACjD,WAAM,GAAS,KAAK,CAAC;QAMnB,yCAAyC;QACzC,IAAI,OAAO,GAAQ,aAAa,CAAC,MAAM,EAAE,CAAC;QAC1C,IAAI,CAAC,QAAQ,GAAG,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC9C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;IACnD,CAAC;IAED,QAAQ;QACN,qBAAqB;QACrB,IAAI,CAAC,YAAY,EAAE,CAAC;QAEpB,2BAA2B;QAC3B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEpC,qBAAqB;QACpB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAGxB,UAAU,CAAC,GAAG,EAAE;YACf,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAC1C,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;IAED,YAAY;QACV,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACxC,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;YACvB,OAAO,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YAClC,UAAU,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YACrC,KAAK,EAAC,EAAE;YACR,IAAI,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YAC/B,IAAI,EAAE,EAAE;YACR,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,WAAW,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;YAC/C,KAAK,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YAChC,GAAG,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;SAC/B,CAAC,CAAC;IACL,CAAC;IAED,eAAe,CAAC,YAAY;QAC1B,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC;YAC1B,OAAO,EAAE,YAAY,CAAC,OAAO;YAC7B,UAAU,EAAE,YAAY,CAAC,UAAU;YACnC,KAAK,EAAC,YAAY,CAAC,KAAK;YACxB,IAAI,EAAE,YAAY,CAAC,IAAI;YACvB,IAAI,EAAE,YAAY,CAAC,IAAI;YACvB,KAAK,EAAE,YAAY,CAAC,KAAK;YACzB,KAAK,EAAE,YAAY,CAAC,KAAK;YACzB,MAAM,EAAE,YAAY,CAAC,MAAM;YAC3B,GAAG,EAAE,YAAY,CAAC,GAAG;SACtB,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACP,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC;QAChB,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO;YAC1B,OAAO;aACJ;YAEH,IAAI,QAAQ,GAAQ;gBAClB,QAAQ,EAAE,OAAO;gBACjB,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBAC7C,OAAO,EAAE,IAAI,CAAC,QAAQ;aACvB;YAED,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;gBAC7E,IAAI,QAAQ,CAAC,MAAM,IAAI,SAAS,EAAE;oBAChC,IAAI,iBAAiB,GAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC;oBAChF,IAAI,IAAI,GAAQ,iBAAiB,CAAC,IAAI,CAAC;oBACvC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;oBAC1C,wCAAwC;oBACxC,iBAAiB,CAAC,OAAO,GAAK,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC;oBAC7D,wCAAwC;oBAExC,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC;oBAEtD,OAAO,CAAC,GAAG,CAAC,KAAK,EAAC,iBAAiB,CAAC,CAAC;oBACrC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;oBACpB,IAAI,MAAM,GAAQ,IAAI,CAAC;oBACvB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE;wBACvC,QAAQ,EAAE,IAAI;qBACf,CAAC,CAAC;oBAEH,UAAU,CAAC,GAAG,EAAE;wBACd,6DAA6D;oBAC/D,CAAC,EAAE,IAAI,CAAC,CAAC;oBAET,UAAU,CAAC,GAAG,EAAE;wBACd,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,0BAA0B,CAAC,CAAC;oBACxD,CAAC,EAAE,IAAI,CAAC,CAAC;iBACV;qBACG;oBACF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,EAAE;wBACxC,QAAQ,EAAE,IAAI;qBACf,CAAC,CAAC;iBACJ;YAEH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAGD,yBAAyB;QACtB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,yBAAyB,CAAC,CAAC;IACxD,CAAC;IAEF,yDAAyD;IACzD,gBAAgB;QACf,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,8BAA8B,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAChF,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;QACzB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,6BAA6B,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAC/E,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wDAAwD;IACxD,OAAO,CAAC,KAAK;QACX,IAAI,GAAG,GAAG,KAAK,CAAC;QAChB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IACpC,CAAC;IAED,aAAa,CAAC,SAAS;QACrB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;IAC1C,CAAC;CAGA;AAjJD,oFAiJC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8ECpJD,2SAAgD;8EAEhD,4RAAkD;8EAElD,qRAA8C;8EAE9C,+RAAkD;8EAIlD,qgBAAsD,yBAArB,+BAAoB,EAArD,YAAsD,EAArB,SAAoB,2BAArD,qQAAsD;8EAoBtC,oMACuE,qDAAoB,iCAD3F,0DACuE;8EAMvE,qMACuE,uDACvE,iCAFA,0DACuE;8EA1CvF,sSAA0B,IAI1B,oMAAgD,IAEhD,oMAAkD,IAElD,oMAA8C,IAE9C,oMAAkD,IAIlD,qMAAsD,IAEtD,uMAAwC,mDAExC,MAGA,qGAAyB,KACrB,oGAAwB;;;mLAAuC,GAApC,aAAmC,IAAC,8CAAiB,MAAI,oDAAuB,MAI/G,4QAA2B,IACvB,yEAAI,iDAAe,MACnB,oMAAuC,IACnC;;;;;;uYAA2F,IAGvF,wkDAAmC,MAC/B;;;;;;;;;;;;;;;;;;;;;y8BAA8F,KAC9F,kMACuE,IAI3E,ilDAAmC,MAC/B;;;;;;;;;;;;;;;;;;;;;28BAA0F,KAC1F,kMACuE,IAK3E,ilDAAmC,MAC/B;;;;;;;;;;;;;;;;;;;;;28BAAoG,KAGxG,sGAA0B,KACtB,kVAAsC,sCAAQ,MAC9C,qOAAkE,YAA5B;;wBAA2B;MAAjE,yLAAkE,+CAAiB,MAMnG,+NAAkB,IAIlB,4PAA0B,iDA/D1B,YAA0B,GAIR,0CAA6B,GAA/C,YAAgD,EAA9B,SAA6B,GAE5B,2CAA8B,GAAjD,YAAkD,EAA/B,SAA8B,GAEhC,yCAA4B,GAA7C,YAA8C,EAA7B,SAA4B,GAE1B,2CAA8B,GAAjD,YAAkD,EAA/B,SAA8B,GAI/B,mBAAc,SAAhC,aAAsD,EAApC,SAAc,GAQD,iDAAmC,GAAtC,aAAuC,EAApC,SAAmC,GAOZ,oBAA4C,iCAA1F,aAA2F,EAA7C,UAA4C,GAId,0BAAyB,EAA7F,aAA8F,EAA1B,UAAyB,GAA7E,wCAAmC,EAAC,2BAAe,EAAnE,aAA8F,EAA9E,UAAmC,EAAC,UAAe,GACxD,wIAC2D,oBADtE,aACuE,EAD5D,UAC2D,GAKN,0BAAyB,EAAzF,aAA0F,EAA1B,UAAyB,GAAzE,oCAA+B,EAAC,2BAAe,EAA/D,aAA0F,EAA1E,UAA+B,EAAC,UAAe,GACpD,yIAC2D,oBADtE,aACuE,EAD5D,WAC2D,GAMJ,mCAAiC,EAAnG,aAAoG,EAAlC,WAAiC,GAAnF,uCAAiC,EAAC,4BAAe,EAAjE,aAAoG,EAApF,WAAiC,EAAC,WAAe,GAWjF,cAAkB,GAIlB,cAA0B,2BAzCE,iHAAuC,GAInE,+FAA2B,GAGnB,qbAA2F,GAGvF,k/CAAmC,IAC/B,o/BAA8F,IAMlG,k/CAAmC,IAC/B,o/BAA0F,IAO9F,8hDAAmC,IAC/B,ohCAAoG,IAIpG,sKAAsC,GACtC,sKAAkE;;;;;;;;;;;;;;;;;;;;ACrDlF,yEAAkD;AAClD,4EAAkF;AASlF,MAKa,mCAAmC;IAW9C,YAAqB,WAAyB,EAAU,WAAgC,EAC9E,QAAsB,EAAU,cAA+B,EAAW,cAA+B,EACzG,aAA6B,EAAW,MAAe;QAF5C,gBAAW,GAAX,WAAW,CAAc;QAAU,gBAAW,GAAX,WAAW,CAAqB;QAC9E,aAAQ,GAAR,QAAQ,CAAc;QAAU,mBAAc,GAAd,cAAc,CAAiB;QAAW,mBAAc,GAAd,cAAc,CAAiB;QACzG,kBAAa,GAAb,aAAa,CAAgB;QAAW,WAAM,GAAN,MAAM,CAAS;QATjE,WAAM,GAAS,KAAK,CAAC;QAUhB,mBAAmB;QACtB,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,CAAC;QAEvC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC3D,IAAI,CAAC,QAAQ,GAAG,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC9C,IAAI,UAAe,CAAC;QACpB,UAAU,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC;QACpC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;QACvD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC;IACvC,CAAC;IAEH,QAAQ;QAEN,qBAAqB;QACrB,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,YAAY;QACV,IAAI,CAAC,8BAA8B,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC3D,OAAO,EAAC,CAAE,EAAE,EAAC,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,kBAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YACtF,OAAO,EAAC,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,kBAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YACtF,eAAe,EAAC,EAAE;SACnB,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,iBAAiB,CAAC,EAAE,CAAC,CAAC;IACtE,CAAC;IAGD,4BAA4B;IAC5B,aAAa,CAAC,cAAsB,EAAE,kBAA0B;QAC9D,OAAO,CAAC,KAAgB,EAAE,EAAE;YAC1B,IAAI,aAAa,GAAG,KAAK,CAAC,QAAQ,CAAC,cAAc,CAAC,EAChD,oBAAoB,GAAG,KAAK,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;YAC5D,IAAI,aAAa,CAAC,KAAK,KAAK,oBAAoB,CAAC,KAAK,EAAE;gBACtD,OAAO,oBAAoB,CAAC,SAAS,CAAC,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC;aAChE;iBACI;gBACH,OAAO,oBAAoB,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;aAC7C;QACH,CAAC,CAAC;IACJ,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,IAAI,CAAC,8BAA8B,CAAC,KAAK,EAAE;YAC7C,OAAO,IAAI,CAAC,8BAA8B,CAAC,KAAK,CAAC,eAAe,CAAC;YACjE,IAAI,IAAI,GAAG;gBACT,GAAG,EAAE,IAAI,CAAC,UAAU;gBACpB,SAAS,EAAE,CAAC;gBACZ,WAAW,EAAE,IAAI,CAAC,8BAA8B,CAAC,KAAK,CAAC,OAAO;gBAC9D,WAAW,EAAE,IAAI,CAAC,8BAA8B,CAAC,KAAK,CAAC,OAAO;aAC/D;YACD,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,gBAAgB,EAAE,IAAI,CAAC;iBACjD,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;gBACtB,kCAAkC;gBAClC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACpB,IAAI,QAAQ,CAAC,MAAM,IAAI,IAAI,EAAE;oBAC3B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,EAAE;wBACzC,QAAQ,EAAE,IAAI;qBACf,CAAC,CAAC;oBACD,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,yBAAyB,CAAC,CAAC;iBACxD;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,EAAE;wBACzC,QAAQ,EAAE,IAAI;qBACf,CAAC,CAAC;iBACJ;YAEH,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE;gBACV,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACpB,KAAK,CAAC,wCAAwC,CAAC,CAAC;YAClD,CAAC,CAAC,CAAC;SACN;IAGH,CAAC;CAEF;AA7FD,kFA6FC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sJCvGD,mSAA0B,IAE1B,uMAA0C,IACxC,uMAA0C,IACxC,kGAAuB,sCAAK,MAC5B,2EAAG,yDAAuB,MAC1B;;;8NAAkF,GAA5C,aAA2C,GAAjF,wHAAkF,0CAAY,MAShG,2MAA4C,IAC1C,mGAAuB,qCAAG,MAC1B,2EAAG,uDAAqB,MACxB;;;8NAAgF,GAA1C,aAAyC,GAA/E,wHAAgF,0CAAY,MAmChG,0PAA0B,yBArD1B,YAA0B,GAMgB,yDAA2C,GAAjF,aAAkF,EAA5C,SAA2C,GAY3C,uDAAyC,GAA/E,aAAgF,EAA1C,SAAyC,GAmCnF,aAA0B,2BA/CtB,8JAAkF,GAYlF,8JAAgF;;;;;;;;;;;;;;;;;;;;AClBpF,yEAA6D;AAK7D,0GAA2D;AAC3D,2FAAiD;AAGjD,MAKa,8BAA8B;IAQzC,YAAoB,MAAc,EAAS,aAA4B,EAAU,IAAwB,EAAS,cAA8B,EAAS,cAA8B;QAAnK,WAAM,GAAN,MAAM,CAAQ;QAAS,kBAAa,GAAb,aAAa,CAAe;QAAU,SAAI,GAAJ,IAAI,CAAoB;QAAS,mBAAc,GAAd,cAAc,CAAgB;QAAS,mBAAc,GAAd,cAAc,CAAgB;QANvL,yCAAyC;QACzC,eAAU,GAAK,EAAE,CAAC;IAOlB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE;YAC/C,IAAI,CAAC,UAAU,GAAG,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC;YACvC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;IACL,CAAC;CAEF;AAxBD,wEAwBC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sECjCD,sMAAyC,IACvC,wGAA6B,KAEzB,2LAA+B,IAC3B,sFAAW,gDAAc,MACzB,sFAAW,qDAAmB,MAElC,0EAAG,wGAAiE;;;;;;;;;;;;;;;;;;;;ACP1E,yEAAkD;AAElD,MAKa,2BAA2B;IAEtC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;AAZD,kEAYC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sECdD,8XAA0C,MACtC,qLAAiB,IACf,sGAA2B,KACzB,kMAAqF,YAA1C;;wBAAuB;MAAlE,wBAAqF,KAIvF,gMAAoC,IAClC,0EAAG,qHAAyE,MAI9E,yMAA0C,IACxC,2dAA6B,KAC3B;;;;;;;;;kOAAyE,GAAnD,aAAkD,GAAxE,2IAAyE,IACvE,uXAAU,4CAAc,MAAW,4CACrC,MACA;;;;;;;;;kOAAyF,GAAnE,aAAkE,GAAxF,2IAAyF,IACvF,uXAAU,qCAAO,MAAW,2CAC9B,MACA;;;;;wBAAyC;MAAnB;;wBAAkB;MAAxC,6MAAyC,IAAC,uXAAU,gDAAkB,MAAW,kCAAQ,MAE3F,mGAAuB,sCAA0B,MACjD;;;;;;;;;qaAAsD,IACpD,oGAA2B,KACzB,0XAAU,4CAAc,MACxB,sGAA0B,uDAE1B,2BAfJ,aAA6B,GACL,gEAAkD,GAAxE,aAAyE,EAAnD,SAAkD,GACtE,aAAU,GAEU,iFAAkE,GAAxF,aAAyF,EAAnE,UAAkE,GACtF,aAAU,GAE8B,aAAU,GAG9B,+BAA6B,GAArD,aAAsD,EAA9B,UAA6B,GAEjD,aAAU,mDAzBtB,wJAA0C,GAchC,8WAAyE,GACvE,sNAAU,GAEZ,0XAAyF,GACvF,wNAAU,GAEZ,0XAAyC,GAAC,wNAAU,GAE/B,oEAA0B,GACjD,mOAAsD,GAElD,wNAAU;;;;;;;;;;;;;;;;;;;;ACzBtB,yEAAkD;AAElD,+EAAyD;AAGzD,MAMa,2BAA2B;IAOtC,YAAmB,OAAsB,EAAS,MAAc,EAAS,cAA8B;QAApF,YAAO,GAAP,OAAO,CAAe;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,mBAAc,GAAd,cAAc,CAAgB;QALhG,cAAS,GAAQ,EAAE,CAAC;QAEpB,WAAM,GAAY,IAAI,CAAC;QAI5B,IAAI,OAAO,GAAQ,EAAE,CAAC;QACtB,OAAO,GAAG,OAAO,CAAC,MAAM,EAAE;QAC1B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QAClD,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC7C,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IAC5C,CAAC;IAEF,QAAQ;QACN,mBAAmB;QACnB,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,CAAC;IACzC,CAAC;IAED,gCAAgC;IAChC,MAAM;QACJ,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAChC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QACpC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;QACzB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;IACtC,CAAC;IACD,8BAA8B;IAE9B,wBAAwB;IACxB,WAAW;QACT,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,0BAA0B,CAAC,CAAC;IACxD,CAAC;CAEF;AAxCD,kEAwCC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mEC6CO,uPAAsC,sCAAK;mEAC3C,+NAAuD,sIAAa;mEAIpE,uPAAsC,gDAAe;mEACrD,+PAAiE,+IAA0B;mEAI3F,uPAAsC,2CAAU;mEAChD,4PAA8D,6IAAwB;mEAItF,uPAAsC,6CAAY;mEAClD,+QAAqG,+BAArC,gFAAoC,GAApG,YAAqG,EAArC,SAAoC;oEAIpG,uPAAsC,6CAAY;oEAClD,8PAAgE,+IAA0B;mEAF5F,uaAAyF,KACvF,mOAAsC,KACtC,kNAAgE,0BAFpD,4BAAyB,EAAvC,YAAyF,EAA3E,SAAyB;oEAMrC,uPAAsC,6CAAY;oEAClD,8PAAgE,gJAA2B;oEAI3F,uPAAsC,sDAAqB;oEAC3D,uQAAyE,sOAAyC;oEAFpH,uaAAiG,KAC/F,mOAAsC,KACtC,kNAAyE,0BAF7D,oCAAiC,EAA/C,YAAiG,EAAnF,SAAiC;oEAM7C,uPAAsC,gDAAe;oEACrD,iQAAmE,gOAAmC;oEAFxG,uaAA2F,KACzF,mOAAsC,KACtC,kNAAmE,0BAFvD,8BAA2B,EAAzC,YAA2F,EAA7E,SAA2B;oEAMvC,uPAAsC,4CAAW;oEACjD,6PAA+D,8IAAyB;oEAF1F,uaAAwF,KACtF,mOAAsC,KACtC,kNAA+D,0BAFnD,2BAAwB,EAAtC,YAAwF,EAA1E,SAAwB;oEAMpC,uPAAsC,wCAAO;oEAC7C,yPAA2D,gJAA2B;oEAItF,uPAAsC,yCAAQ;oEAE5C;;;6NACgE,GAA9D,YAA6D,GAD/D,qHACgE,kCAAI,2BAAlE,iEAA6D,gCAD/D,YACgE,EAA9D,SAA6D,2BAD/D,2JACgE;oEAChE,6ZACW,kCAAI,2BAAb,kBAAQ,EADV,YACW,EAAT,SAAQ,2BADV,2JACW;oEACX,2QACqC,YAAnC;;wBAAkC;MADpC,mLACqC,sCAAQ,iCAD7C,2JACqC;oEANvC,+NAAuD,IACrD,yLACgE,IAChE,yLACW,IACX,yLACqC,yBAL7B,iDAA2B,GAAnC,YACgE,EADxD,SAA2B,GAET,iDAA2B,GAArD,YACW,EADe,SAA2B,GAE3B,iDAA2B,GAArD,YACqC,EADX,SAA2B;oEAKzD,sTAAqD;oEACrD,0QAAwE;qJAxJ9E,2PAAmB,IAEnB,+QAAgC,IAG9B,4MAAiD,IAC/C,2EAAI,kDAAgB,MACpB,yMAAyC,IACvC,iNAAiD,IAC/C,yGAA6B,KAC3B,gMAAiC,IAC/B,iIAAqD,KAIzD,4GAAgC,KAC9B,2EAAG,uDAAqB,MACxB;;;8NAAwE,GAAhD,aAA+C,GAAvE,sHAAwE,kCAAI,MAIhF,iNAAiD,IAC/C,yGAA6B,KAC3B,gMAAiC,IAC/B,iIAAqD,KAIzD,4GAAgC,KAC9B,2EAAG,gDAAc,MACjB,4EAAI,wCAA2C,MAC/C,iNAAyE,YAAjD;;wBAAgD;MAAxE,oLAAyE,sCAAQ,MAIrF,mNAAmD,IACjD,yGAA6B,KAC3B,gMAAiC,IAC/B,iIAAqD,KAGzD,4GAAgC,KAC9B,2EAAG,oDACH,MACA,4EAAI,uCAA6C,MACjD,iNAA2E,YAAnD;;wBAAkD;MAA1E,oLAA2E,sCAAQ,MAQ3F,sMAAwC,IAEtC,yXAAgC,MAC9B,yEAAI,wCAA2B,MAGjC,uGAAyB,KACvB,8jDAAgB,MACd;;;;;;;;wBAAsH;MAAtG;;wBAAgE;MAAhF,yVAAsH,KAGxH,glDAAmC,MACjC;;;;;;;;wBAAiH;MAAtE;;wBAAqE;MAAhH,4tBAAiH,KAC/G;;;;;;wPAAoB,6CAAe,MACnC;;;;;;wPAAkC,2CAAa,MAC/C;;;;;;yPAA4B,qCAAO,MAIvC,ukDAAgB,MACd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yBAA+F;MAAtD;;yBAAwB;MAAjE,s0CAA+F,KAC/F;;;iWAAgD,IAChD,4ZAAgC,IAGlC,ukDAAgB,MACd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yBAA8F;MAApD;;yBAAsB;MAAhE,s0CAA8F,KAC9F;;;iWAAiD,IACjD,6ZAAiC,IAGnC,uOAA8D,YAAvB;;wBAAsB;MAA7D,wMAA8D,yCAAW,MAG3E,+oBAAmF,MAEjF,2aAAgC,KAC9B,oOAAsC,KACtC,kNAAuD,KAGzD,2aAAyC,KACvC,oOAAsC,KACtC,kNAAiE,KAGnE,2aAAsC,KACpC,oOAAsC,KACtC,kNAA8D,KAGhE,2aAAwC,KACtC,oOAAsC,KACtC,kNAAqG,KAGvG,0LAAyF,IAKzF,2aAAyC,KACvC,qOAAsC,KACtC,mNAAgE,KAGlE,2LAAiG,IAKjG,2LAA2F,IAK3F,2LAAwF,IAKxF,2aAAoC,KAClC,qOAAsC,KACtC,mNAA2D,KAG7D,2aAAoC,KAClC,qOAAsC,KACtC,mNAAuD,KAUzD,8QAAqD,KACrD,4PAAwE,KAG1E,mTAAkD,GAAnC,cAAkC,IAIrD,+NAAkB,iDA/JlB,YAAmB,GAiBe,6DAA+C,GAAvE,aAAwE,EAAhD,SAA+C,GA4CQ,yCAAoC,EAArH,aAAsH,EAArC,UAAoC,GAIzG,mCAA8B,EAA1C,aAAiH,EAArG,UAA8B,GAC5B,oBAAO,EAAnB,aAAoB,EAAR,UAAO,GACP,iCAAqB,EAAjC,aAAkC,EAAtB,WAAqB,GACrB,2BAAe,EAA3B,cAA4B,EAAhB,WAAe,GAKb,iCAAwB,GAAxC,cAA+F,EAA/E,WAAwB,GAAC,qBAAwB,aAAjE,cAA+F,EAAtD,WAAwB,GAAC,kCAA4B,EAA9F,cAA+F,EAA7B,WAA4B,GAC7D,iCAAc,GAA/C,cAAgD,EAAf,WAAc,GAC/B,oBAAO,EAAvB,cAAgC,EAAhB,WAAO,GAIP,iCAAyB,GAAzC,cAA8F,EAA9E,WAAyB,GAAC,qBAAsB,WAAhE,cAA8F,EAApD,WAAsB,GAAC,kCAA4B,EAA7F,cAA8F,EAA7B,WAA4B,GAC5D,iCAAe,GAAhD,cAAiD,EAAhB,WAAe,GAChC,oBAAO,EAAvB,cAAiC,EAAjB,WAAO,GAGC,wBAAY,EAAtC,cAA8D,EAApC,WAAY,GAGvB,qBAA4B,gBAA7C,cAAmF,EAAlE,WAA4B,GAE7B,sBAAiB,EAA/B,cAAgC,EAAlB,WAAiB,GAKjB,+BAA0B,EAAxC,cAAyC,EAA3B,WAA0B,GAK1B,4BAAuB,EAArC,cAAsC,EAAxB,WAAuB,GAKvB,8BAAyB,EAAvC,cAAwC,EAA1B,WAAyB,GAKC,+DAAgD,GAAxF,cAAyF,EAAjD,WAAgD,GAK1E,+BAA0B,EAAxC,cAAyC,EAA3B,WAA0B,GAKQ,+DAAgD,GAAhG,cAAiG,EAAjD,WAAgD,GAKtD,+DAAgD,GAA1F,cAA2F,EAAjD,WAAgD,GAKnD,+DAAgD,GAAvF,cAAwF,EAAjD,WAAgD,GAKzE,0BAAqB,EAAnC,cAAoC,EAAtB,WAAqB,GAKrB,0BAAqB,EAAnC,cAAoC,EAAtB,WAAqB,GAYhB,qBAAiC,iBAApD,cAAqD,EAAlC,WAAiC,GACxC,qBAA2D,iBAAvE,cAAwE,EAA5D,WAA2D,GAG1D,8CAAkC,GAAjD,cAAkD,EAAnC,WAAkC,GAIrD,cAAkB,mDA7JlB,6FAAgC,GAetB,8JAAwE,GAapE,iFAA2C,GAC/C,8JAAyE,GAarE,oFAA6C,GACjD,8JAA2E,GAUjF,+JAAgC,GAC1B,mEAA2B,GAI/B,k/CAAgB,IACd,ykBAAsH,GAGxH,k/CAAmC,IACjC,s7BAAiH,IAC/G,wdAAoB,GACpB,wdAAkC,GAClC,ifAA4B,GAIhC,qjDAAgB,IACd,klDAA+F,IAC/F,4XAAgD,GAIlD,qjDAAgB,IACd,klDAA8F,IAC9F,4XAAiD,GAInD,yKAA8D;;;;;;;;;;;;;;;;;;;;ACpFpE,yEAAoE;AACpE,iGAAqF;AACrF,4MAAsG;AAItG,qFAAuD;AACvD,+EAAyD;AACzD,0GAA2D;AAG3D,yKAAkF;AAClF,mEAAyC;AACzC,MAAM,MAAM,GAAG,cAAc,CAAC;AAI9B,MAMa,wBAAwB;IAkBnC,YAAmB,MAAiB,EAAS,cAA8B,EAAS,MAAqB,EAChG,IAAwB,EAAS,cAA8B,EAAS,WAAwB,EAChG,aAAoC;QAF1B,WAAM,GAAN,MAAM,CAAW;QAAS,mBAAc,GAAd,cAAc,CAAgB;QAAS,WAAM,GAAN,MAAM,CAAe;QAChG,SAAI,GAAJ,IAAI,CAAoB;QAAS,mBAAc,GAAd,cAAc,CAAgB;QAAS,gBAAW,GAAX,WAAW,CAAa;QAChG,kBAAa,GAAb,aAAa,CAAuB;QAlBtC,aAAQ,GAAQ,EAAE,CAAC;QAEnB,aAAQ,GAAQ;YACrB,UAAU,EAAE,SAAS;YACrB,UAAU,EAAE,uBAAuB;YACnC,UAAU,EAAE,EAAE;SACf,CAAC;QAEK,mBAAc,GAAa,CAAC,oBAAoB,EAAE,cAAc,EAAE,YAAY,EAAC,aAAa,EAAE,YAAY,EAAC,aAAa,EAAC,QAAQ,EAAC,WAAW,EAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QA4MpK,qBAAgB,GAAQ,EAAE,CAAC;QAhMhC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC;QACvE,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAEnD,IAAI,aAAa,GAAG,MAAM,EAAE,CAAC;QAC7B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE;YAC7C,IAAI,CAAC,cAAc,GAAG,WAAW,CAAC,UAAU,CAAC;YAC7C,IAAI,CAAC,aAAa,GAAG,IAAI,6BAAkB,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YACpF,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;IACR,CAAC;IAED,eAAe;IACf,CAAC;IAED,aAAa;QACX,IAAI,IAAI,GAAG;YACT,QAAQ,EAAE,mBAAmB;YAC7B,WAAW,EAAE;gBACX,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE;aAC/B;YACD,OAAO,EAAE,IAAI,CAAC,QAAQ;SACvB;QAED,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;YAC7D,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,QAAQ,CAAC,GAAG,CAAC;QAC1C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU;QACR,IAAI,IAAI,GAAG;YACT,QAAQ,EAAE,4BAA4B;YACtC,WAAW,EAAE;gBACX,MAAM,EAAE;oBACN,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC;oBAChD,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC;iBACnD;aACF;YACD,OAAO,EAAE,IAAI,CAAC,QAAQ;SACvB;QAED,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,IAAI,CAAC;aACpC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACpB,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,GAAG,CAAC;QACpC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,WAAW,CAAC,GAAW,EAAE,KAAa;QACpC,IAAI,WAAW,GAAQ,EAAE,CAAC;QAC1B,WAAW,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QACvC,IAAI,IAAI,GAAG;YACT,QAAQ,EAAE,4BAA4B;YACtC,WAAW,EAAE,WAAW;YACxB,OAAO,EAAE,IAAI,CAAC,QAAQ;SACvB;QAED,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,IAAI,CAAC;aACpC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACpB,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,GAAG,CAAC;QACpC,CAAC,CAAC;IAEN,CAAC;IAED,iBAAiB,CAAC,WAAgB;QAChC,IAAI,IAAI,GAAG;YACT,QAAQ,EAAE,4BAA4B;YACtC,WAAW,EAAE,WAAW;YACxB,OAAO,EAAE,IAAI,CAAC,QAAQ;SACvB;QAED,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAC3D,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,GAAG,CAAC;QACpC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU;QACR,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sDAAwB,EAAE;YAC3D,KAAK,EAAE,QAAQ;SAChB,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;QAC3C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mBAAmB;QACjB,IAAI,IAAI,GAAG;YACT,QAAQ,EAAE,kBAAkB;YAC5B,WAAW,EAAE;gBACX,gBAAgB,EAAE,IAAI,CAAC,QAAQ;aAChC;YACD,OAAO,EAAE,IAAI,CAAC,QAAQ;SACvB;QACD,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAC3D,OAAO,CAAC,GAAG,CAAC,oBAAoB,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qBAAqB,CAAC,OAAe,IAAI;QACvC,IAAI,CAAC,cAAc,GAAG,CAAC,oBAAoB,EAAE,cAAc,EAAE,YAAY,EAAC,aAAa,EAAE,YAAY,EAAC,aAAa,EAAC,QAAQ,EAAC,WAAW,EAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QAC/J,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC;QAChC,gBAAgB;QAChB,IAAI,SAAS,GAAQ;YACnB,UAAU,EAAE,mBAAmB;YAC/B,IAAI,EAAE;gBACJ,MAAM,EAAE,SAAS;gBACjB,OAAO,EAAE,kBAAkB;gBAC3B,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;gBACrB,OAAO,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE;aACxB;SACF;QAED,QAAQ,IAAI,EAAE;YACZ,KAAK,eAAe;gBAClB,IAAG,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,KAAK,WAAW,EAAE;oBACjE,IAAI,IAAI,GAAG;wBACT,QAAQ,EAAE,4BAA4B;wBACtC,WAAW,EAAE;4BACX,kBAAkB,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;4BACrC,kBAAkB,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,GAAG;yBACnD;wBACD,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ;qBAChC;oBACD,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;wBAC3D,IAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE;4BAC1B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC;4BAC1D,IAAI,CAAC,aAAa,GAAG,IAAI,6BAAkB,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;4BACrF,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;yBAC/C;6BAAM;4BACL,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;yBAC3B;oBACH,CAAC,CAAC,CAAC;iBACJ;qBAAM;oBACL,IAAI,CAAC,aAAa,GAAG,IAAI,6BAAkB,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;oBACrF,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;iBAC/C;gBACD,MAAM;YACR,KAAK,iBAAiB;gBACpB,IAAI,CAAC,cAAc,GAAG,CAAC,YAAY,EAAC,aAAa,EAAE,aAAa,EAAC,QAAQ,EAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;gBAChG,IAAG,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,iBAAiB,KAAK,WAAW,EAAE;oBACpE,IAAI,IAAI,GAAG;wBACT,QAAQ,EAAE,4BAA4B;wBACtC,WAAW,EAAE;4BACX,kBAAkB,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE;4BACtC,kBAAkB,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,GAAG;yBACnD;wBACD,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ;qBAChC;oBACD,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;wBAC3D,IAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE;4BAC1B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,mBAAmB,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC;4BAC7D,IAAI,CAAC,aAAa,GAAG,IAAI,6BAAkB,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;4BACxF,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;yBAC/C;6BAAM;4BACL,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;yBAC3B;oBACH,CAAC,CAAC,CAAC;iBACJ;qBAAM;oBACL,IAAI,CAAC,aAAa,GAAG,IAAI,6BAAkB,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;oBACxF,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;iBAC/C;gBACD,MAAM;YACR;gBACE,IAAI,IAAI,GAAG;oBACT,QAAQ,EAAE,EAAE;oBACZ,WAAW,EAAE;wBACX,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,GAAG;qBAC5C;oBACD,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ;iBAChC;gBACD,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;oBACnE,IAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE;wBAC1B,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC;wBAC/B,IAAI,CAAC,aAAa,GAAG,IAAI,6BAAkB,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;qBACrF;gBACH,CAAC,CAAC,CAAC;gBACH,MAAM;SACT;IACH,CAAC;IAED,SAAS,CAAC,IAAI;QACZ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yCAAkB,EAAE,IAAI,CAAC,CAAC;QAC5D,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC9C,QAAQ,MAAM,EAAE;gBACd,KAAK,IAAI;oBACP,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;oBACvB,MAAM;aACT;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAKD,aAAa,CAAC,KAAa,EAAE,KAAU;QACrC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC;QAClC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC;IAC7C,CAAC;IAED,eAAe,CAAC,KAAa;QAC3B,IAAG,OAAO,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,KAAK,WAAW,EAAE;YACtD,KAAI,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE,IAAI,EAAE,EAAE;gBACnF,IAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,SAAS,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,EAAE;oBACzF,IAAI,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,SAAS,GAAG,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC;iBACrI;aACF;YAGD,IAAI,SAAS,GAAQ;gBACnB,UAAU,EAAE,mBAAmB;gBAC/B,IAAI,EAAE;oBACJ,MAAM,EAAE,SAAS;oBACjB,OAAO,EAAE,6CAA6C,GAAG,QAAQ,GAAG,IAAI;oBACxE,OAAO,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE;oBACxB,OAAO,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE;iBACxB;aACF,CAAC;YACF,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;YAE1B,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;gBAC9C,QAAQ,MAAM,EAAE;oBACd,KAAK,KAAK;wBACR,IAAI,IAAI,GAAQ;4BACd,QAAQ,EAAE,oBAAoB;4BAC9B,MAAM,EAAE;gCACN,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,GAAG;gCACnC,WAAW,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;gCACzC,QAAQ,EAAE,CAAC;6BACZ;4BACD,WAAW,EAAE,CAAC,WAAW,CAAC;4BAC1B,OAAO,EAAE,IAAI,CAAC,QAAQ;yBACvB,CAAC;wBAEF,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;wBAEjC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;4BACpE,IAAI,QAAQ,CAAC,MAAM,GAAG,SAAS,EAAE;gCAC/B,IAAI,OAAO,GAAG,mBAAmB,CAAC;gCAClC,IAAI,MAAM,GAAG,IAAI,CAAC;gCAClB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE;oCACrC,QAAQ,EAAE,IAAI;iCACf,CAAC,CAAC;6BACJ;wBACH,CAAC,CAAC,CAAC;wBACH,MAAM;oBACR,KAAK,IAAI;wBACP,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;wBACvB,MAAM;iBACT;YACH,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,SAAS,GAAQ;gBACnB,UAAU,EAAE,mBAAmB;gBAC/B,IAAI,EAAE;oBACJ,MAAM,EAAE,SAAS;oBACjB,OAAO,EAAE,yBAAyB;oBAClC,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;oBACrB,OAAO,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE;iBACxB;aACF,CAAC;YACF,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;SAC3B;IACH,CAAC;IAED,UAAU,CAAC,KAAa;QACtB,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,cAAc,CAAC,MAAW;QACxB,IAAG,OAAM,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,WAAW,EAAE;YAC/C,MAAM,CAAC,cAAc,GAAG,CAAC,CAAC;SAC3B;aAAM;YACL,MAAM,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,GAAG,CAAC,CAAC;SACnD;QAED,kDAAkD;QAClD,IAAI,UAAU,GAAQ,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC;QACzD,UAAU,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;QACvD,UAAU,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;QACvD,UAAU,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;QAEzD,gCAAgC;QAChC,IAAI,WAAW,GAAG;YAChB,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,GAAG;YAClC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI;SACtC,CAAC;QAEF,IAAI,QAAQ,GAAQ;YAClB,QAAQ,EAAE,iBAAiB;YAC3B,MAAM,EAAE;gBACN,WAAW,EAAE,MAAM,CAAC,GAAG;gBACvB,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,GAAG;gBAC3C,SAAS,EAAE,MAAM,CAAC,OAAO;gBACzB,WAAW,EAAE,MAAM,CAAC,SAAS;gBAC7B,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE;gBACtB,kBAAkB,EAAE,CAAC;gBACrB,wBAAwB,EAAE,WAAW;gBACrC,oBAAoB,EAAE,UAAU;aACjC;YACD,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,EAAE,SAAS,EAAE,WAAW,CAAC;YAC/D,gBAAgB,EAAE,MAAM,CAAC,cAAc;YACvC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ;SAChC,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,QAAQ,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACtE,IAAG,QAAQ,CAAC,MAAM,IAAI,SAAS,EAAE;gBAC/B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,oBAAoB,EAAE,IAAI,EAAE;oBAChD,QAAQ,EAAE,IAAI;iBACf,CAAC,CAAC;gBACH,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;gBAExC,IAAI,CAAC,gBAAgB,EAAE,CAAC;aACzB;iBAAM;gBACL,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,sCAAsC,EAAE,IAAI,EAAE;oBAClE,QAAQ,EAAE,IAAI;iBACf,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gBAAgB;QACd,IAAI,QAAQ,GAAQ;YAClB,MAAM,EAAE,4BAA4B;YACpC,SAAS,EAAE;gBACT,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,GAAG;aAC1C;SACF,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,kBAAkB,EAAE,QAAQ,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACvE,IAAG,QAAQ,CAAC,MAAM,IAAI,SAAS,EAAE;gBAC/B,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,IAAI,CAAC;gBACpC,4DAA4D;aAC7D;iBAAM;gBACL,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,gBAAgB,EAAE,EAAE,EAAE;oBAC1C,QAAQ,EAAE,IAAI;iBACf,CAAC,CAAC;gBAEH,UAAU,CAAC,GAAG,EAAE;oBACd,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBAC1B,CAAC,EAAE,IAAI,CAAC,CAAC;aACV;QACH,CAAC,CAAC,CAAC;IACL,CAAC;CAEF;AApXD,4DAoXC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sECrYD,2MAA6C,IACzC;;;;;;8XAA+G,IACjH,gFAAO,KACL,4EAAI,KAEF,2FAAgB,KACd,qGAAyB,qDAAmB,MAE9C,4FAAgB,KACd;;;;;;;;;;;wBACmG;MAAnG;;wBAAmE;MADnE,2kBACmG,IAIvG,4EAAI,KACF,4FAAgB,KACd,+FAAmB,4EAA0C,MAIjE,6EAAI,KACF,4FAAgB,gDACb;;;;;;;;;;;wBAC2D;MAA3D;;wBAA0D;MAD1D,2kBAC2D,IAE9D,6FAAgB,kDAAgB,qFAAO,KACrC;;;;;;;;;;;;;;;;;;+1BAA0D,qCAAI,MAC9D,+EAAO;;;;;;;;;;;;;;;;;;+1BAA4D,uCAAM,MAC3E,4FAAgB,yCACZ;;;;;;;;;;;;;;;;;;;;;w3BAA4G,IAWlH,6EAAI,KACF,6FAAgB,6CACZ,6jDAAgB,MACZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;w0CAC0C,KAC1C;;;6VAAiD,IACjD,qXAAyB,IAGjC,6FAAgB,mDACZ,skDAAgB,MACZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+0CAAqG,KACrG;;;gWAAiD,IACjD,uXAAyB,IAUnC,8EAAI,KACF,6EAAI,4CAAU,MACd,6EAAI,gDACK,MACT,6EAAI,qDAEI,MACR,6EAAI,uDAAqB,MACzB,6EAAI,gFAA8C,MAGpD,8EAAI,KACF,6EAAI,wCAAM,MACV,6EAAI,qCAAG,MACP,6EAAI;;;;;;;;;;;wBACmD;MAArD;;wBAAoD;MADlD,8kBACmD,IACvD,6EAAI,KACF,4EAAG,8NAE6D,MAElE,6EAAI,KACF,4EAAG,qPAKH,MAGJ,8EAAI,KACF,6EAAI,0CAAQ,MACZ,6EAAI,yCAAO,MACX,6EAAI;;;;;;;;;;;wBACqD;MAAvD;;wBAAsD;MADpD,8kBACqD,IACzD,6EAAI,KACF,4EAAG,iFAAG,qDAAmB,MAAI,oHACwB,MAEvD,6EAAI,KACF,4EAAG,qLAKH,MAIJ,8EAAI,KACF,6EAAI,qCAAG,MACP,6EAAI,qCAAG,MACP,6EAAI;;;;;;;;;;;wBACgD;MAAlD;;wBAAiD;MAD/C,8kBACgD,IACpD,6EAAI,KACF,4EAAG,iFAAG,kIACiC,MAAI,mIAEnB,MAE1B,6EAAI,KACF,4EAAG,2SAMH,MAKJ,8EAAI,KACF,6EAAI,iDACO,MACX,6EAAI,qCAAG,MACP,6EAAI;;;;;;;;;;;wBACmD;MAArD;;wBAAoD;MADlD,8kBACmD,IACvD,6EAAI,KACF,4EAAG,iFAAG,+DAA6B,MAAI,yKAEM,MAE/C,6EAAI,KACF,4EAAG,yLAIH,MAGJ,8EAAI,KACF,6EAAI,uCAAK,mFAAI,4CACF,MACX,6EAAI,oCAAE,MACN,6EAAI;;;;;;;;;;;wBACkD;MAApD;;wBAAmD;MADjD,8kBACkD,IACtD,6EAAI,KACF,4EAAG,iFAAG,yEAAuC,MAAI,4IAEnB,MAEhC,6EAAI,KACF,4EAAG,8IAGH,MAIJ,8EAAI,KACF,6EAAI,wCAAM,mFAAI,8CACD,MACb,6EAAI,qCAAG,MACP,6EAAI;;;;;;;;;;;wBACmD;MAArD;;wBAAoD;MADlD,8kBACmD,IACvD,6EAAI,KACF,4EAAG,kIACkC,MAEvC,6EAAI,KACF,4EAAG,iMAIH,MAGJ,8EAAI,KACF,6EAAI,0CAAQ,mFAAI,sDAEhB,MACA,6EAAI,oCAAE,MACN,6EAAI;;;;;;;;;;;wBACqD;MAAvD;;wBAAsD;MADpD,8kBACqD,IACzD,6EAAI,KACF,4EAAG,iFAAG,2DAAyB,MAAI,6OAGU,MAE/C,6EAAI,KACF,4EAAG,wLAIH,MAIJ,8EAAI,KACF,6EAAI,0CACJ,MACA,6EAAI,oCAAE,MACN,6EAAI;;;;;;;;;;;wBACoD;MAAtD;;wBAAqD;MADnD,8kBACoD,IACxD,6EAAI,KACF,4EAAG,sHAC2B,MAEhC,6EAAI,KACF,4EAAG,mHAGH,MAGJ,8EAAI,KACF,6EAAI,0CAAQ,mFAAI,kDAGhB,MACA,6EAAI,8CAAY,MAChB,6EAAI;;;;;;;;;;;wBACqD;MAAvD;;wBAAsD;MADpD,8kBACqD,IACzD,6EAAI,KACF,4EAAG,iFAAG,sDAAoB,MAAI,yHAC4B,MAE5D,6EAAI,KACF,4EAAG,8IAKH,MAIJ,8EAAI,KACF,6EAAI,qCAAG,MACP,6EAAI,wCAAM,MACV,6EAAI;;;;;;;;;;;wBACiD;MAAnD;;wBAAiD;MAD/C,8kBACiD,IACrD,6EAAI,KACF,4EAAG,2HAEH,MAEF,6EAAI,KACF,4EAAG,yMAKH,MAIJ,8EAAI,KACF,6EAAI,uCAAK,mFAAI,0CACJ,MACT,6EAAI,uCAAK,MACT,6EAAI;;;;;;;;;;;wBACmD;MAArD;;wBAAoD;MADlD,8kBACmD,IACvD,6EAAI,KACF,4EAAG,iFAAG,mEAAiC,MAAI,uGAG3C,MAEF,6EAAI,KACF,4EAAG,iGAKH,MAGJ,8EAAI,KACF,6EAAI,0CAAQ,MACZ,6EAAI,oCAAE,MACN,6EAAI;;;;;;;;;;;wBACmD;MAArD;;wBAAoD;MADlD,8kBACmD,IACvD,6EAAI,KACF,4EAAG,mHAGH,MAEF,6EAAI,KACF,4EAAG,6HAGH,MAIJ,8EAAI,KACF,6EAAI,uCAAK,MACT,6EAAI,mCAAC,MACL,6EAAI;;;;;;;;;;;wBACmD;MAArD;;wBAAoD;MADlD,8kBACmD,IACvD,6EAAI,KACF,4EAAG,mHAEH,MAEF,6EAAI,KACF,4EAAG,yDAEH,MAGJ,8EAAI,KACF,6EAAI,uCAAK,MACT,6EAAI,yCAAO,MACX,6EAAI;;;;;;;;;;;wBACmD;MAArD;;wBAAoD;MADlD,8kBACmD,IACvD,6EAAI,KACF,4EAAG,6FACH,MAEF,6EAAI,KACF,4EAAG,oIAIH,MAIJ,8EAAI,KACF,6EAAI,uCAAK,MACT,6EAAI,qCAAG,MACP,6EAAI;;;;;;;;;;;wBACkD;MAApD;;wBAAmD;MADjD,8kBACkD,IACtD,6EAAI,KACF,4EAAG,kEAAgC,MAErC,6EAAI,KACF,4EAAG,mPAKH,MAGJ,8EAAI,KACF,6EAAI,sCAAI,MACR,6EAAI,yCAAO,MACX,6EAAI;;;;;;;;;;;wBACkD;MAApD;;wBAAmD;MADjD,8kBACkD,IACtD,6EAAI,KACF,4EAAG,8LAEkD,MAEvD,6EAAI,KACF,4EAAG,gKAKH,MAGJ,8EAAI,KACF,6EAAI,uCAAK,MACT,6EAAI,yCAAO,MACX,6EAAI;;;;;;;;;;;wBACmD;MAArD;;wBAAoD;MADlD,8kBACmD,IACvD,6EAAI,KACF,4EAAG,wMAEmD,MAExD,6EAAI,KACF,4EAAG,0IAIH,MAGJ,8EAAI,KACF,6EAAI,qCAAG,mFAAI,8DAGE,MACb,6EAAI,sCAAI,MACR,6EAAI;;;;;;;;;;;wBACiD;MAAnD;;wBAAkD;MADhD,8kBACiD,IACrD,6EAAI,KACF,4EAAG,qXAKoD,MAEzD,6EAAI,KACF,4EAAG,qSAOH,MAIJ,8EAAI,KACF,6EAAI,iDAAe,mFAAI,gEAGb,MACV,6EAAI,oCAAE,MACN,6EAAI;;;;;;;;;;;wBAC2D;MAA7D;;wBAA4D;MAD1D,8kBAC2D,IAC/D,6EAAI,KACF,4EAAG,oTAIiD,MAEtD,6EAAI,KACF,4EAAG,iEAGH,MAIJ,8EAAI,KACF,6FAAgB,KACd,oGAAuB,iFAAG,4DAA0B,MACpD;;;;;;;;;;;wBAC0D;MAA1D;;wBAAyD;MADzD,8kBAC0D,IAG9D,6EAAI,KACF,6FAAgB,KACd,4EAAG,iFAAG,uZAIuF,mDA/ctB,mBAAmC,wBAA9G,YAA+G,EAApC,SAAmC,GAQnE,0EAAsE,GAA7G,aACmG,EAD5D,UAAsE,GAarE,iEAA6D,GAApG,aAC2D,EADpB,UAA6D,GAIpE,yBAAwB,EAArC,uBAAY,EAAhC,aAA0D,EAAzB,UAAwB,EAArC,UAAY,GAAC,yBAAwB,EAAzD,aAA0D,EAAzB,UAAwB,GACf,yBAAwB,EAAvC,yBAAc,EAAlC,aAA4D,EAAzB,UAAwB,EAAvC,UAAc,GAAC,yBAAwB,EAA3D,aAA4D,EAAzB,UAAwB,GAEhB,+DAA2D,GAA3G,aAA4G,EAA5D,UAA2D,GAAhF,uBAAW,EAAtC,aAA4G,EAAjF,UAAW,GAclB,gCAAyB,GAAzC,aAC0C,EAD1B,WAAyB,GACzC,4BAA0B,EAD1B,aAC0C,EAA1C,WAA0B,GAAC,4BAAa,EADxC,aAC0C,EAAf,WAAa,GACP,gCAAe,GAAhD,aAAiD,EAAhB,WAAe,GAMhC,iCAAyB,GAAzC,cAAqG,EAArF,WAAyB,GAAC,qCAAmC,EAA7E,cAAqG,EAA3D,WAAmC,GAAC,qCAAsB,EAApG,cAAqG,EAAvB,WAAsB,GACnE,iCAAe,GAAhD,cAAiD,EAAhB,WAAe,GAyBjC,4DAAuD,GAA1E,cACmD,EADhC,WAAuD,GAmBvD,8DAAyD,GAA5E,cACqD,EADlC,WAAyD,GAmBzD,yDAAoD,GAAvE,cACgD,EAD7B,WAAoD,GAwBpD,4DAAuD,GAA1E,cACmD,EADhC,WAAuD,GAmBvD,2DAAsD,GAAzE,cACkD,EAD/B,WAAsD,GAmBtD,4DAAuD,GAA1E,cACmD,EADhC,WAAuD,GAmBvD,8DAAyD,GAA5E,cACqD,EADlC,WAAyD,GAqBzD,6DAAwD,GAA3E,cACoD,EADjC,WAAwD,GAmBxD,8DAAyD,GAA5E,cACqD,EADlC,WAAyD,GAmBzD,yDAAoD,GAAvE,cACiD,EAD9B,WAAoD,GAqBpD,4DAAuD,GAA1E,cACmD,EADhC,WAAuD,GAoBvD,4DAAuD,GAA1E,cACmD,EADhC,WAAuD,GAmBvD,4DAAuD,GAA1E,cACmD,EADhC,WAAuD,GAgBvD,4DAAuD,GAA1E,cACmD,EADhC,WAAuD,GAkBvD,2DAAsD,GAAzE,cACkD,EAD/B,WAAsD,GAiBtD,2DAAsD,GAAzE,cACkD,EAD/B,WAAsD,GAmBtD,4DAAuD,GAA1E,cACmD,EADhC,WAAuD,GAqBvD,0DAAqD,GAAxE,cACiD,EAD9B,WAAqD,GA4BrD,oEAA+D,GAAlF,cAC2D,EADxC,WAA+D,GAoBrD,iEAA4D,GAA3F,cAC0D,EAD3B,WAA4D,2BArc/F,iaAA+G,GAQ3G,mbACmG,GAYlG,ubAC2D,GAG5D,ubAA0D,GACnD,ubAA4D,GAEjE,o/BAA4G,IAa5G,k/CAAgB,IACZ,qhDAC0C,IAC1C,qXAAiD,GAKrD,8hDAAgB,IACZ,klDAAqG,IACrG,4XAAiD,GAyBrD,6cACmD,GAkBnD,6cACqD,GAkBrD,6cACgD,GAuBhD,6cACmD,GAkBnD,6cACkD,GAkBlD,6cACmD,GAkBnD,6cACqD,GAoBrD,6cACoD,GAkBpD,6cACqD,GAkBrD,6cACiD,GAoBjD,6cACmD,GAmBnD,6cACmD,GAkBnD,6cACmD,GAenD,6cACmD,GAiBnD,6cACkD,GAgBlD,6cACkD,GAkBlD,6cACmD,GAoBnD,6cACiD,GA2BjD,6cAC2D,GAmB7D,6cAC0D;;;;;;;;;;;;;;;;;;;;ACvclE,yEAA2E;AAC3E,4EAAqG;AAOrG,kIAA8F;AAG9F,gFAAgF;AAChF,6FAA6F;AAC7F,iGAAiG;AACjG,2BAA2B;AAC3B,4DAAkC;AAClC,gDAAgD;AAChD,6DAAkD;AAElD,MAAM,MAAM,GAAG,gBAAa,IAAI,OAAO,CAAC;AAE3B,kBAAU,GAAG;IACxB,KAAK,EAAE;QACL,SAAS,EAAE,IAAI;KAChB;IACD,OAAO,EAAE;QACP,SAAS,EAAE,IAAI;QACf,cAAc,EAAE,UAAU;QAC1B,aAAa,EAAE,IAAI;QACnB,kBAAkB,EAAE,WAAW;KAChC;CACF,CAAC;WAWyC,iDAAuB;;AATlE,MAaa,2BAA2B;IAwBtC,6CAA6C;IAC7C,kBAAkB;IAClB,8CAA8C;IAC9C,IAAI;IAEJ,YAAmB,cAA8B,EAAS,WAA+B,EAChF,MAAqB,EAAS,EAAe,EAAS,MAAc,EAAQ,QAAmB;QADrF,mBAAc,GAAd,cAAc,CAAgB;QAAS,gBAAW,GAAX,WAAW,CAAoB;QAChF,WAAM,GAAN,MAAM,CAAe;QAAS,OAAE,GAAF,EAAE,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAQ,aAAQ,GAAR,QAAQ,CAAW;QA5BjG,sBAAiB,GAAQ,EAAE,CAAC;QAEnC,SAAI,GAAG,IAAI,mBAAW,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;QAM5B,gBAAW,GAAQ,EAAE,CAAC;QAEtB,uBAAkB,GAAQ,EAAE,CAAC;QAI7B,yBAAoB,GAAQ,EAAE,CAAC;QAItC,iBAAiB;QACjB,aAAQ,GAAY,KAAK,CAAC;QAC1B,gBAAW,GAAY,KAAK,CAAC;QAU3B,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACxC,IAAI,UAAe,CAAC;QACpB,UAAU,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;QAC7B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;QAEvD,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACzC,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YAClE,MAAM,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YACjC,SAAS,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YACpC,gBAAgB,EAAE,CAAC,EAAE,CAAC;YACtB,oBAAoB,EAAG,CAAC,EAAE,CAAC;YAC3B,QAAQ,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YACnC,IAAI,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YAC/B,iBAAiB,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YAC5C,KAAK,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YAChC,OAAO,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YAClC,EAAE,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YAC7B,KAAK,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YAChC,IAAI,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YAC/B,KAAK,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YAChC,OAAO,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YAClC,MAAM,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YACjC,OAAO,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YAClC,EAAE,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YAC7B,KAAK,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YAChC,KAAK,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YAChC,KAAK,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YAChC,KAAK,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YAChC,IAAI,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YAC/B,IAAI,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YAC/B,IAAI,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YAC/B,KAAK,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YAChC,GAAG,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YAC9B,aAAa,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YACxC,UAAU,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YACrC,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,SAAS,EAAE,CAAC,EAAE,CAAC;YACf,MAAM,EAAE,CAAC,CAAC,CAAC;YACX,OAAO,EAAE,EAAE;SAEZ,CAAC;QACF,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAC7D,IAAG,IAAI,CAAC,WAAW,CAAC,IAAI,IAAI,OAAO,EAAC;YAClC,IAAI,CAAC,qBAAqB,CAAC,OAAO,EAAE,CAAC;SACtC;IACH,CAAC;IAED,QAAQ;IACR,CAAC;IAED,4BAA4B;IAC5B,YAAY,CAAC,IAAS,EAAE,GAAQ;QAC9B,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,eAAe,EAAE,CAAC;IACvC,CAAC;IACD,4BAA4B;IAE5B,cAAc,CAAC,EAAO;QACpB,IAAI,IAAI,GAAG;YACT,QAAQ,EAAE,yBAAyB;YACnC,WAAW,EAAE;gBACX,YAAY,EAAE,EAAE;aACjB;YACD,OAAO,EAAE,IAAI,CAAC,SAAS;SACxB;QAED,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,UAAU,EAAE,IAAI,CAAC;aAC3C,SAAS,CAAC,QAAQ,CAAC,EAAE;YAEpB,IAAI,cAAc,GAAQ,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC1C,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC,GAAG,CAAC;YACtC,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;YAC1F,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,sBAAsB,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;YACnG,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;YAChF,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;YAChF,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;YAClF,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;YACxE,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;YAC9E,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;YAC5E,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;YAC9E,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;YAClF,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;YAChF,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;YAClF,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;YACxE,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;YAC9E,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;YAC9E,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;YAC9E,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;YAC9E,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;YAC5E,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;YAC5E,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;YAC9E,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;YAC1E,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;YACxF,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,QAAQ,GAAG,GAAG,GAAG,cAAc,CAAC,SAAS,CAAC,CAAC;YAC1H,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;YACtF,mDAAmD;YACnD,4CAA4C;YAC5C,8GAA8G;YAE9G,0DAA0D;YAC1D,mHAAmH;YAEnH,mEAAmE;YACnE,4HAA4H;QAC9H,CAAC,CAAC,CAAC;IACP,CAAC;CAGF;AAxJD,kEAwJC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6ECzLD,0MAAkE,IAChE;;;;;;8XAA6G,IAE3G,qGAAwB,KACtB,2EAAI,KACF,2FAAgB,KACd,+FAAmB,8DAA4B,MAInD,6EAAI,KACF,4EAAI,gDAEF;;;;;;;;;;;wBAC4D;MAA1D;;wBAAyD;MAD3D,2kBAC4D,IAG9D,6EAAI,KACF,+EAAO,KAAC;;;;;;;;;;;;;;;;;;syBAAyF,kCAAC,MAClG,+EAAO,KAAC;;;;;;;;;;;;;;;;;;syBAA2F,kCAAC,MAGtG,4EAAI,KACF,+EAAO,uCACL;;;;;;;;;;;;ilBAA6E,IAKnF,6EAAI,KACF,4EAAI,sDAEF;;;;;;;;;;;;ilBACiC,IAGnC,6FAAgB,KACd,+EAAO,yCAEL;;;;;;;;;;;;;;;;;;;;;w3BAAuF,IAK7F,6EAAI,KACF,4EAAI,6DACF;;;;;;;;;;;;;;;;;;;;;w3BACoE,IAGtE,6FAAgB,KACd,+FAAmB,0EAAwC,MAC3D,+EAAO;;;;;;gkBAAqF,6CACrF,MACP,+EAAO;;;;;;gkBAAqF,6CACrF,MACP,+EAAO;;;;;;mkBAAqF,6CACrF,MAAQ,6EAAI,KACnB,gFAAO;;;;;;mkBAAqF,6CACrF,MACP,gFAAO;;;;;;mkBAAqF,6CACrF,MAIX,8EAAI,KACF,6EAAI,KAKgB,mEAElB,kIAAyC,KAI3C,6FAAgB,KACd,gFAAO,KACL;;;;;;mkBAA8F,2DAEhG,MAMN,yMAAuC,IACrC,uGAAwB,KACtB,6EAAI,KACF,6FAAgB,KACd,kGAAqB,0IAEK,MAI9B,8EAAI,KACF,kGAAoB,KACtB,6EAAI,KACF,6EAAI;;;;;;mkBAA8E,IAClF,6EAAI,oHAAkF,MAGxF,kGAAoB,KAClB,6EAAI,KACF,6EAAI;;;;;;mkBAA6E,IACjF,6EAAI,0EAAwC,MAKhD,8EAAI,KACF,8EAAI,KACN,6EAAI,KACF,6EAAI,KAAC;;;;;;mkBAA8E,IACnF,6EAAI,4FAA0D,MAIhE,8EAAI,KACF,6EAAI,KACF,6EAAI,KAAC;;;;;;mkBAA6E,IAClF,6EAAI,oFAAkD,MAK1D,8EAAI,KACF,8EAAI,KACN,6EAAI,KACF,6EAAI,KAAC;;;;;;mkBAA8E,IACnF,6EAAI,6FAA2D,MAIjE,8EAAI,KACF,6EAAI,KACF,6EAAI,KAAC;;;;;;mkBAA6E,IAClF,6EAAI,mEAAiC,MASzC,8EAAI,KACF,6EAAI,KACN,6EAAI,KACF,6EAAI,KACJ,6EAAI,KAIN,8EAAI,KACF,6EAAI,KACF,6EAAI,KAAC;;;;;;mkBAA6E,IAClF,6EAAI,yFAAuD,MAa/D,8EAAI,KACF,8EAAI,KACN,6EAAI,KACF,6EAAI;;;;;;mkBAA8E,IAClF,6EAAI,yGAAuE,MAI7E,8EAAI,KACF,6EAAI,KACF,6EAAI;;;;;;mkBAA8E,IAClF,6EAAI,yFAAuD,MAK/D,8EAAI,KACF,8EAAI,KACN,6EAAI,KACF,6EAAI,KAAC;;;;;;mkBAA8E,IACnF,6EAAI,wFAAsD,MAI5D,8EAAI,KACF,6EAAI,KACF,6EAAI,KAAC;;;;;;mkBAA6E,IAClF,6EAAI,iGAA+D,MAErE,6EAAI,KACF,6EAAI,KACJ,6EAAI,KAKR,8EAAI,KACF,8EAAI,KACN,6EAAI,KACF,6EAAI;;;;;;mkBAA8E,IAClF,6EAAI,8GAA4E,MAIlF,8EAAI,KACF,6EAAI,KACF,6EAAI;;;;;;mkBAA8E,IAClF,6EAAI,sFAAoD,MAK5D,8EAAI,KACF,8EAAI,KACN,6EAAI,KACF,6EAAI;;;;;;mkBAA+E,IACnF,6EAAI,wGAAsE,MAI5E,8EAAI,KACF,6EAAI,KACF,6EAAI,KAAC;;;;;;mkBAA8E,IACnF,6EAAI,iGAA+D,MAKvE,8EAAI,KACF,8EAAI,KACN,6EAAI,KACF,6EAAI;;;;;;mkBAA6E,IACjF,6EAAI,4FAA0D,MAIhE,8EAAI,KACF,6EAAI,KACF,6EAAI,KAAC;;;;;;mkBAA6E,IAClF,6EAAI,uCAAY,MAKpB,8EAAI,KACF,8EAAI,KACN,6EAAI,KACF,6EAAI;;;;;;mkBAA8E,IAClF,6EAAI,4FAA0D,MAIhE,8EAAI,KACF,6EAAI,KACF,6EAAI,KAAC;;;;;;mkBAA4E,IACjF,6EAAI,6EAA2C,MAKnD,8EAAI,KACF,8EAAI,KACN,6EAAI,KACF,6EAAI;;;;;;mkBAA8E,IAClF,6EAAI,4FAA0D,MAIhE,8EAAI,KACF,6EAAI,KACF,6EAAI,KAAC;;;;;;mkBAA8E,IACnF,6EAAI,gFAA8C,MAKtD,8EAAI,KACF,8EAAI,KACN,6EAAI,KACF,6EAAI;;;;;;mkBAA8E,IAClF,6EAAI,gFAA8C,MAIpD,8EAAI,KACF,6EAAI,KACF,6EAAI,KAAC;;;;;;mkBAA6E,IAClF,6EAAI,mEAAiC,MAKzC,8EAAI,KACF,8EAAI,KACN,6EAAI,KACF,6EAAI;;;;;;mkBAA8E,IAClF,6EAAI,uFAAqD,MAI3D,8EAAI,KACF,6EAAI,KACF,6EAAI,KAAC;;;;;;mkBAA8E,IACnF,6EAAI,sFAAoD,MAK5D,8EAAI,KACF,8EAAI,KACN,6EAAI,KACF,6EAAI;;;;;;mkBAA8E,IAClF,6EAAI,8GAA4E,MAIlF,8EAAI,KACF,6EAAI,KACF,6EAAI;;;;;;mkBAA+E,IACnF,6EAAI,8FAA4D,MAKpE,8EAAI,KACF,8EAAI,KACN,6EAAI,KACF,6EAAI;;;;;;mkBAA6E,IACjF,6EAAI,2DAAyB,MAI/B,8EAAI,KAEF,6EAAI,KACF,6EAAI;;;;;;mkBAA+E,IACnF,6EAAI,6FAA2D,MAKnE,8EAAI,KACF,8EAAI,KACN,6EAAI,KACF,6EAAI;;;;;;mkBAA6E,IACjF,6EAAI,8EAA4C,MAIlD,8EAAI,KACF,6EAAI,KACF,6EAAI;;;;;;mkBAA+E,IACnF,6EAAI,mGAAiE,MAKzE,8EAAI,KACF,8EAAI,KACN,6EAAI,KACF,6EAAI;;;;;;mkBAA6E,IACjF,6EAAI,sEAAoC,MAI1C,8EAAI,KACF,6EAAI,KACF,6EAAI;;;;;;mkBAA+E,IACnF,6EAAI,8FAA4D,MAKpE,8EAAI,KACF,8EAAI,KACN,6EAAI,KACF,6EAAI,KAAC;;;;;;mkBAA6E,IAClF,6EAAI,wEAAiC,MAIvC,8EAAI,KACF,6EAAI,KACF,6EAAI;;;;;;mkBAA+E,IACnF,6EAAI,6FAA2D,MAKnE,8EAAI,KACF,8EAAI,KACN,6EAAI,KACF,6EAAI,KAAC;;;;;;mkBAA6E,IAClF,6EAAI,gEAAyB,MAI/B,8EAAI,KACF,6EAAI,KACF,6EAAI,KAAC;;;;;;mkBAA+E,IACpF,6EAAI,qGAAmE,MAK3E,8EAAI,KACF,8EAAI,KACN,6EAAI,KACF,6EAAI;;;;;;mkBAA6E,IACjF,6EAAI,yEAAkC,MAGxC,8EAAI,KACF,6EAAI,KACF,6EAAI;;;;;;mkBAA8E,IAClF,6EAAI,kGAAgE,MAKxE,8EAAI,KACF,6EAAI,KACN,6EAAI,KACF,6EAAI,yGAAuB,KAC3B,6EAAI,8GACQ,MAGd,6EAAI,KACF,6EAAI,KACF,6EAAI,yGAAuB,KAC3B,6EAAI,+DAA6B,MAKrC,8EAAI,KACF,8EAAI,KACN,6EAAI,KACF,6EAAI,KAAC;;;;;;mkBAA6E,IAClF,6EAAI,mEAAiC,MAIvC,8EAAI,KACF,6EAAI,KACF,6EAAI,KAAC;;;;;;mkBAA4E,IACjF,6EAAI,gEAA8B,MAKtC,8EAAI,KACF,8EAAI,KACN,6EAAI,KACF,6EAAI;;;;;;mkBAA6E,IACjF,6EAAI,8FAA4D,MAIlE,6EAAI,KACF,6EAAI,KACF,6EAAI,KACJ,6EAAI,KAqJR,6EAAI,KACF,6FAAgB,KACd,iGAAoB,0PAIpB,MAIJ,8EAAI,KACF,8EAAI,KACN,6EAAI,KACF,6EAAI;;;;;;mkBAA8E,IAClF,6EAAI,2FAAyD,MAI/D,8EAAI,KAEF,6EAAI,KACF,6EAAI;;;;;;mkBAA+E,IACnF,6EAAI,oHACC,MAKT,8EAAI,KACF,8EAAI,KACN,6EAAI,KACF,6EAAI;;;;;;mkBAA8E,IAClF,6EAAI,2FAAyD,MAI/D,8EAAI,KACF,6EAAI,KACF,6EAAI,KAAC;;;;;;mkBAA+E,IACpF,6EAAI,0HACY,MAKpB,8EAAI,KACF,8EAAI,KAEN,6EAAI,KACF,6EAAI,KAAC;;;;;;mkBAA6E,IAClF,6EAAI,sGAAoE,MAI1E,8EAAI,KACF,6EAAI,KACF,6EAAI;;;;;;mkBAA+E,IACnF,6EAAI,2HACa,MAKrB,8EAAI,KACF,8EAAI,KACN,8EAAI,KACF,6EAAI;;;;;;mkBAA4E,IAChF,6EAAI,8EAA4C,kFAAG,wCAAM,MAI3D,8EAAI,KACF,6EAAI,KACF,6EAAI;;;;;;mkBAA+E,IACnF,6EAAI,0HAAwF,MAKhG,8EAAI,KACF,8EAAI,KACN,6EAAI,KACF,6EAAI;;;;;;mkBAA6E,IACjF,6EAAI,oHAAkF,MAIxF,8EAAI,KACF,6EAAI,KACF,6EAAI;;;;;;mkBAA8E,IAClF,6EAAI,gHAA8E,MAKtF,8EAAI,KACF,8EAAI,KACN,6EAAI,KACF,6EAAI;;;;;;mkBAA6E,IACjF,6EAAI,iFAA+C,MAIrD,8EAAI,KACF,6EAAI,KACF,6EAAI;;;;;;mkBAA6E,IACjF,6EAAI,6EAA2C,MAKnD,8EAAI,KACF,8EAAI,KACN,6EAAI,KACF,6EAAI;;;;;;mkBAA+E,IACnF,6EAAI,gHAA8E,MAIpF,8EAAI,KACF,6EAAI,KACF,6EAAI,KAAC;;;;;;mkBAA6E,IAClF,6EAAI,8EAA4C,MAIpD,8EAAI,KACF,8EAAI,KACN,6EAAI,KACF,6EAAI;;;;;;mkBAA+E,IACnF,6EAAI,qIACqB,MAG3B,8EAAI,KACF,6EAAI,KACF,6EAAI,KAAC;;;;;;mkBAA8E,IACnF,6EAAI,qFAAmD,MAI3D,8EAAI,KACF,8EAAI,KACN,6EAAI,KACF,6EAAI;;;;;;mkBAA+E,IACnF,6EAAI,oIACoB,MAG1B,8EAAI,KACF,6EAAI,KACF,6EAAI,KAAC;;;;;;mkBAA6E,IAClF,6EAAI,gFAA8C,MAItD,8EAAI,KACF,8EAAI,KACN,6EAAI,KACF,6EAAI,KAAC;;;;;;mkBAA+E,IACpF,6EAAI,2IAC0B,MAGhC,8EAAI,KACF,6EAAI,KACF,6EAAI,KAAC;;;;;;mkBAA8E,IACnF,6EAAI,8GACiB,MAQzB,8EAAI,KACF,6FAAgB,KACd,4EAAG,mEAAiC,MACpC;;;;;;;;;;;wBAE2D;MAAzD;;wBAAwD;MAF1D,8kBAE2D,IAG7D,8EAAI,KA6CF,4EAAG,0DAAwB,MAC3B;;;;;;;;;;;;olBAC0E,IAC1E,6EAAI,KACJ,4EAAG,0EAAmC,MACtC;;;;;;;;;;;;olBAC0E,iDA11BV,mBAAkC,uBAA5G,YAA6G,EAAnC,SAAkC,GAYjF,gEAA4D,GAA/E,aAC4D,EADzC,UAA4D,GAKnD,uBAAY,EAAhC,aAAyF,EAArE,UAAY,GAAC,2DAAuD,GAAxF,aAAyF,EAAxD,UAAuD,GACpE,yBAAc,EAAlC,aAA2F,EAAvE,UAAc,GAAC,2DAAuD,GAA1F,aAA2F,EAAxD,UAAuD,GAK7E,6DAAyD,GAA5E,aAA6E,EAA1D,UAAyD,GAQ3D,qEAAiE,GAApF,aACiC,EADd,UAAiE,GAOtD,8DAA0D,GAAtF,aAAuF,EAA3D,UAA0D,GAA/E,uBAAW,EAAlB,aAAuF,EAAhF,UAAW,GAQlB,qEAAiE,GADnE,aACoE,EAAlE,UAAiE,GADtC,uBAAW,EAAxC,aACoE,EADvC,UAAW,GAMV,iEAA6D,GAApF,aAAqF,EAA9D,UAA6D,GAE7D,kEAA6D,GAApF,aAAqF,EAA9D,WAA6D,GAE7D,kEAA6D,GAApF,cAAqF,EAA9D,WAA6D,GAE7D,kEAA6D,GAApF,cAAqF,EAA9D,WAA6D,GAE7D,kEAA6D,GAApF,cAAqF,EAA9D,WAA6D,GAmBlE,2EAAsE,GAA7F,cAA8F,EAAvE,WAAsE,GAqBpE,2DAAsD,GAA7E,cAA8E,EAAvD,WAAsD,GAMpD,0DAAqD,GAA5E,cAA6E,EAAtD,WAAqD,GAStD,2DAAsD,GAA7E,cAA8E,EAAvD,WAAsD,GAOpD,0DAAqD,GAA5E,cAA6E,EAAtD,WAAqD,GASvD,2DAAsD,GAA7E,cAA8E,EAAvD,WAAsD,GAOpD,0DAAqD,GAA5E,cAA6E,EAAtD,WAAqD,GAoBrD,0DAAqD,GAA5E,cAA6E,EAAtD,WAAqD,GAiBxD,2DAAsD,GAA7E,cAA8E,EAAvD,WAAsD,GAOpD,2DAAsD,GAA7E,cAA8E,EAAvD,WAAsD,GASvD,2DAAsD,GAA7E,cAA8E,EAAvD,WAAsD,GAOpD,0DAAqD,GAA5E,cAA6E,EAAtD,WAAqD,GAaxD,2DAAsD,GAA7E,cAA8E,EAAvD,WAAsD,GAOpD,2DAAsD,GAA7E,cAA8E,EAAvD,WAAsD,GASxD,4DAAuD,GAA9E,cAA+E,EAAxD,WAAuD,GAOpD,2DAAsD,GAA7E,cAA8E,EAAvD,WAAsD,GASzD,0DAAqD,GAA5E,cAA6E,EAAtD,WAAqD,GAOlD,0DAAqD,GAA5E,cAA6E,EAAtD,WAAqD,GASxD,2DAAsD,GAA7E,cAA8E,EAAvD,WAAsD,GAOnD,yDAAoD,GAA3E,cAA4E,EAArD,WAAoD,GASvD,2DAAsD,GAA7E,cAA8E,EAAvD,WAAsD,GAOnD,2DAAsD,GAA7E,cAA8E,EAAvD,WAAsD,GASzD,2DAAsD,GAA7E,cAA8E,EAAvD,WAAsD,GAOnD,0DAAqD,GAA5E,cAA6E,EAAtD,WAAqD,GASxD,2DAAsD,GAA7E,cAA8E,EAAvD,WAAsD,GAOnD,2DAAsD,GAA7E,cAA8E,EAAvD,WAAsD,GASzD,2DAAsD,GAA7E,cAA8E,EAAvD,WAAsD,GAOpD,4DAAuD,GAA9E,cAA+E,EAAxD,WAAuD,GASzD,0DAAqD,GAA5E,cAA6E,EAAtD,WAAqD,GAQnD,4DAAuD,GAA9E,cAA+E,EAAxD,WAAuD,GASzD,0DAAqD,GAA5E,cAA6E,EAAtD,WAAqD,GAOnD,4DAAuD,GAA9E,cAA+E,EAAxD,WAAuD,GASzD,0DAAqD,GAA5E,cAA6E,EAAtD,WAAqD,GAOnD,4DAAuD,GAA9E,cAA+E,EAAxD,WAAuD,GASxD,0DAAqD,GAA5E,cAA6E,EAAtD,WAAqD,GAOpD,4DAAuD,GAA9E,cAA+E,EAAxD,WAAuD,GASxD,0DAAqD,GAA5E,cAA6E,EAAtD,WAAqD,GAOnD,4DAAuD,GAA9E,cAA+E,EAAxD,WAAuD,GAS1D,0DAAqD,GAA5E,cAA6E,EAAtD,WAAqD,GAMnD,2DAAsD,GAA7E,cAA8E,EAAvD,WAAsD,GAyBvD,0DAAqD,GAA5E,cAA6E,EAAtD,WAAqD,GAOnD,yDAAoD,GAA3E,cAA4E,EAArD,WAAoD,GASvD,0DAAqD,GAA5E,cAA6E,EAAtD,WAAqD,GA0KrD,2DAAsD,GAA7E,cAA8E,EAAvD,WAAsD,GAQpD,4DAAuD,GAA9E,cAA+E,EAAxD,WAAuD,GAUzD,2DAAsD,GAA7E,cAA8E,EAAvD,WAAsD,GAOnD,4DAAuD,GAA9E,cAA+E,EAAxD,WAAuD,GAWzD,0DAAqD,GAA5E,cAA6E,EAAtD,WAAqD,GAOpD,4DAAuD,GAA9E,cAA+E,EAAxD,WAAuD,GAUzD,yDAAoD,GAA3E,cAA4E,EAArD,WAAoD,GAOlD,4DAAuD,GAA9E,cAA+E,EAAxD,WAAuD,GASzD,0DAAqD,GAA5E,cAA6E,EAAtD,WAAqD,GAOnD,2DAAsD,GAA7E,cAA8E,EAAvD,WAAsD,GASxD,0DAAqD,GAA5E,cAA6E,EAAtD,WAAqD,GAOnD,0DAAqD,GAA5E,cAA6E,EAAtD,WAAqD,GASvD,4DAAuD,GAA9E,cAA+E,EAAxD,WAAuD,GAOpD,0DAAqD,GAA5E,cAA6E,EAAtD,WAAqD,GAQxD,4DAAuD,GAA9E,cAA+E,EAAxD,WAAuD,GAOpD,2DAAsD,GAA7E,cAA8E,EAAvD,WAAsD,GAQzD,4DAAuD,GAA9E,cAA+E,EAAxD,WAAuD,GAOpD,0DAAqD,GAA5E,cAA6E,EAAtD,WAAqD,GAQvD,4DAAuD,GAA9E,cAA+E,EAAxD,WAAuD,GAOrD,2DAAsD,GAA7E,cAA8E,EAAvD,WAAsD,GAchF,gEAA2D,GAD7D,cAE2D,EADzD,WAA2D,GAmD3D,4EAAuE,GADzE,cAC0E,EAAxE,WAAuE,GAIvE,4EAAuE,GADzE,cAC0E,EAAxE,WAAuE,mDA11BnF,iaAA6G,GAYrG,mbAC4D,GAIpD,ubAAyF,GACzF,ubAA2F,GAKjG,ubAA6E,GAQ/E,ubACiC,GAM/B,o/BAAuF,IAOzF,o/BACoE,IAK7D,ubAAqF,GAErF,ybAAqF,GAErF,6cAAqF,GAErF,6cAAqF,GAErF,6cAAqF,GAmB1F,6cAA8F,GAqB5F,6cAA8E,GAM5E,6cAA6E,GAS9E,6cAA8E,GAO5E,6cAA6E,GAS/E,6cAA8E,GAO5E,6cAA6E,GAoB7E,6cAA6E,GAiBhF,6cAA8E,GAO5E,6cAA8E,GAS/E,6cAA8E,GAO5E,6cAA6E,GAahF,6cAA8E,GAO5E,6cAA8E,GAShF,6cAA+E,GAO5E,6cAA8E,GASjF,6cAA6E,GAO1E,6cAA6E,GAC9E,2DAAY,GAQd,6cAA8E,GAO3E,6cAA4E,GAS/E,6cAA8E,GAO3E,6cAA8E,GASjF,6cAA8E,GAO3E,6cAA6E,GAShF,6cAA8E,GAO3E,6cAA8E,GASjF,6cAA8E,GAO5E,6cAA+E,GASjF,6cAA6E,GAQ3E,6cAA+E,GASjF,6cAA6E,GAO3E,6cAA+E,GASjF,6cAA6E,GAO3E,6cAA+E,GAShF,6cAA6E,GAO5E,6cAA+E,GAShF,6cAA6E,GAO3E,6cAA+E,GASlF,6cAA6E,GAM3E,6cAA8E,GAyB/E,6cAA6E,GAO3E,6cAA4E,GAS/E,6cAA6E,GA0K7E,6cAA8E,GAQ5E,6cAA+E,GAUjF,6cAA8E,GAO3E,6cAA+E,GAWjF,6cAA6E,GAO5E,6cAA+E,GAUjF,6cAA4E,GAO1E,6cAA+E,GASjF,6cAA6E,GAO3E,6cAA8E,GAShF,6cAA6E,GAO3E,6cAA6E,GAS/E,6cAA+E,GAO5E,6cAA6E,GAQhF,6cAA+E,GAO5E,6cAA8E,GAQjF,6cAA+E,GAO5E,6cAA6E,GAQ/E,6cAA+E,GAO7E,6cAA8E,GAanF,6cAE2D,GAiD3D,6cAC0E,GAG1E,6cAC0E;6EA31BtF,kMAAkE,iDAAtB,kCAAqB,GAAjE,YAAkE,EAAtB,SAAqB;;;;;;;;;;;;;;;;;;;;ACAjE,yEAA2E;AAC3E,4EAAqG;AAMrG,kIAA8F;AAG9F,gFAAgF;AAChF,6FAA6F;AAC7F,iGAAiG;AACjG,2BAA2B;AAC3B,4DAAkC;AAClC,gDAAgD;AAChD,6DAAkD;AAElD,MAAM,MAAM,GAAG,gBAAa,IAAI,OAAO,CAAC;AAE3B,kBAAU,GAAG;IACxB,KAAK,EAAE;QACL,SAAS,EAAE,IAAI;KAChB;IACD,OAAO,EAAE;QACP,SAAS,EAAE,IAAI;QACf,cAAc,EAAE,UAAU;QAC1B,aAAa,EAAE,IAAI;QACnB,kBAAkB,EAAE,WAAW;KAChC;CACF,CAAC;WAWyC,iDAAuB;;AATlE,MAYa,kCAAkC;IA2B7C,6CAA6C;IAC7C,kBAAkB;IAClB,8CAA8C;IAC9C,IAAI;IAEJ,YAAmB,cAA8B,EAAS,WAA+B,EAAS,MAAqB,EAAS,EAAe,EAAS,MAAc,EAAS,QAAkB;QAA9K,mBAAc,GAAd,cAAc,CAAgB;QAAS,gBAAW,GAAX,WAAW,CAAoB;QAAS,WAAM,GAAN,MAAM,CAAe;QAAS,OAAE,GAAF,EAAE,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,aAAQ,GAAR,QAAQ,CAAU;QA7B1L,sBAAiB,GAAQ,EAAE,CAAC;QAEnC,SAAI,GAAG,IAAI,mBAAW,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;QAM5B,gBAAW,GAAQ,EAAE,CAAC;QAEtB,uBAAkB,GAAQ,EAAE,CAAC;QAI7B,yBAAoB,GAAQ,EAAE,CAAC;QAG/B,UAAK,GAAQ,IAAI,CAAC;QAElB,aAAQ,GAAW,6EAA6E,CAAC;QACxG,iBAAiB;QACjB,aAAQ,GAAY,KAAK,CAAC;QAC1B,gBAAW,GAAY,KAAK,CAAC;QAQ3B,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACxC,IAAI,UAAe,CAAC;QACpB,UAAU,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;QAC7B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;QAEvD,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,UAAU,GAAG,QAAQ,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,EAAE,YAAY,CAAC,CAAC;QAC9D,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxC,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YAClE,MAAM,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YACjC,SAAS,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YACpC,gBAAgB,EAAE,CAAC,EAAE,CAAC;YACtB,gBAAgB,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YAC3C,YAAY,EAAE,CAAC,IAAI,CAAC;YACpB,YAAY,EAAE,CAAC,IAAI,CAAC;YACpB,YAAY,EAAE,CAAC,IAAI,CAAC;YACpB,YAAY,EAAE,CAAC,IAAI,CAAC;YACpB,YAAY,EAAE,CAAC,IAAI,CAAC;YACpB,qBAAqB,EAAE,CAAC,KAAK,CAAC;YAE9B,KAAK;YACL,KAAK,EAAE,CAAC,KAAK,CAAC;YACd,IAAI,EAAE,CAAC,KAAK,CAAC;YACb,KAAK,EAAE,CAAC,KAAK,CAAC;YACd,IAAI,EAAE,CAAC,KAAK,CAAC;YACb,KAAK,EAAE,CAAC,KAAK,CAAC;YACd,IAAI,EAAE,CAAC,KAAK,CAAC;YACb,KAAK,EAAE,CAAC,KAAK,CAAC;YACd,IAAI,EAAE,CAAC,KAAK,CAAC;YACb,KAAK,EAAE,CAAC,KAAK,CAAC;YACd,IAAI,EAAE,CAAC,KAAK,CAAC;YACb,KAAK,EAAE,CAAC,KAAK,CAAC;YACd,IAAI,EAAE,CAAC,KAAK,CAAC;YACb,KAAK,EAAE,CAAC,KAAK,CAAC;YACd,IAAI,EAAE,CAAC,KAAK,CAAC;YACb,MAAM,EAAE,CAAC,KAAK,CAAC;YACf,IAAI,EAAE,CAAC,KAAK,CAAC;YACb,IAAI,EAAE,CAAC,KAAK,CAAC;YACb,IAAI,EAAE,CAAC,KAAK,CAAC;YACb,KAAK,EAAE,CAAC,KAAK,CAAC;YACd,IAAI,EAAE,CAAC,KAAK,CAAC;YACb,KAAK,EAAE,CAAC,KAAK,CAAC;YACd,KAAK,EAAE,CAAC,KAAK,CAAC;YACd,IAAI,EAAE,CAAC,KAAK,CAAC;YACb,KAAK,EAAE,CAAC,KAAK,CAAC;YACd,KAAK,EAAE,CAAC,KAAK,CAAC;YACd,KAAK,EAAE,CAAC,KAAK,CAAC;YACd,KAAK,EAAE,CAAC,KAAK,CAAC;YACd,KAAK,EAAE,CAAC,KAAK,CAAC;YACd,KAAK,EAAE,CAAC,KAAK,CAAC;YACd,KAAK,EAAE,CAAC,KAAK,CAAC;YACd,KAAK,EAAE,CAAC,KAAK,CAAC;YACd,IAAI,EAAE,CAAC,KAAK,CAAC;YACb,KAAK,EAAE,CAAC,KAAK,CAAC;YACd,IAAI,EAAE,CAAC,KAAK,CAAC;YACb,KAAK,EAAE,CAAC,KAAK,CAAC;YACd,MAAM,EAAE,CAAC,KAAK,CAAC;YACf,KAAK,EAAE,CAAC,KAAK,CAAC;YACd,MAAM,EAAE,CAAC,KAAK,CAAC;YACf,KAAK,EAAE,CAAC,KAAK,CAAC;YACd,MAAM,EAAE,CAAC,KAAK,CAAC;YACf,KAAK,EAAE,CAAC,KAAK,CAAC;YACd,MAAM,EAAE,CAAC,KAAK,CAAC;YACf,KAAK,EAAE,CAAC,KAAK,CAAC;YACd,MAAM,EAAE,CAAC,KAAK,CAAC;YACf,KAAK,EAAE,CAAC,KAAK,CAAC;YACd,MAAM,EAAE,CAAC,KAAK,CAAC;YACf,MAAM,EAAE,CAAC,KAAK,CAAC;YACf,MAAM,EAAE,CAAC,KAAK,CAAC;YACf,IAAI,EAAE,CAAC,KAAK,CAAC;YACb,MAAM,EAAE,CAAC,KAAK,CAAC;YACf,IAAI,E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gBAChD,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,IAAI,IAAI,KAAK;gBAC7C,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,KAAK,IAAI,KAAK;gBAC9C,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,IAAI,IAAI,KAAK;gBAC7C,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,KAAK,IAAI,KAAK;gBAC9C,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,IAAI,IAAI,KAAK;gBAC7C,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,KAAK,IAAI,KAAK;gBAC9C,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,IAAI,IAAI,KAAK;gBAC7C,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,KAAK,IAAI,KAAK;gBAC9C,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,IAAI,IAAI,KAAK;gBAC7C,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,KAAK,IAAI,KAAK;gBAC9C,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,IAAI,IAAI,KAAK;gBAC7C,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,KAAK,IAAI,KAAK;gBAC9C,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,IAAI,IAAI,KAAK;gBAC7C,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,MAAM,IAAI,KAAK;gBAC/C,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,IAAI,IAAI,KAAK;gBAC7C,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,IAAI,IAAI,KAAK;gBAC7C,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,IAAI,IAAI,KAAK;gBAC7C,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,KAAK,IAAI,KAAK;gBAC9C,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,IAAI,IAAI,KAAK;gBAC7C,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,KAAK,IAAI,KAAK;gBAC9C,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,IAAI,IAAI,KAAK;gBAC7C,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,KAAK,IAAI,KAAK;gBAC9C,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,KAAK,IAAI,KAAK;gBAC9C,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,KAAK,IAAI,KAAK;gBAC9C,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,KAAK,IAAI,KAAK;gBAC9C,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,KAAK,IAAI,KAAK;gBAC9C,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,KAAK,IAAI,KAAK;gBAC9C,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,KAAK,IAAI,KAAK;gBAC9C,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,IAAI,IAAI,KAAK;gBAC7C,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,KAAK,IAAI,KAAK;gBAC9C,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,IAAI,IAAI,KAAK;gBAC7C,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,KAAK,IAAI,KAAK;gBAC9C,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,MAAM,IAAI,KAAK;gBAC/C,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,KAAK,IAAI,KAAK;gBAC9C,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,MAAM,IAAI,KAAK;gBAC/C,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,KAAK,IAAI,KAAK;gBAC9C,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,MAAM,IAAI,KAAK;gBAC/C,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,KAAK,IAAI,KAAK;gBAC9C,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,MAAM,IAAI,KAAK;gBAC/C,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,KAAK,IAAI,KAAK;gBAC9C,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,MAAM,IAAI,KAAK;gBAC/C,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,KAAK,IAAI,KAAK;gBAC9C,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,MAAM,IAAI,KAAK;gBAC/C,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,MAAM,IAAI,KAAK;gBAC/C,IAAI,CAAC,oBAAoB,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,oBAD/C,cACgD,EADrC,WACoC,GAS/B,yDAAoD,GAApE,cACoD,EADpC,WAAoD,GAApE,cACoD,GACzC,mKACuC,oBADlD,cACmD,EADxC,WACuC,GAQlC,wDAAmD,GAAnE,cACmD,EADnC,WAAmD,GAAnE,cACmD,GACxC,gKACsC,oBADjD,cACkD,EADvC,WACsC,GAQjC,yDAAoD,GAApE,cACoD,EADpC,WAAoD,GAApE,cACoD,GACzC,mKACuC,oBADlD,cACmD,EADxC,WACuC,GASlC,2DAAsD,GAAtE,cACsD,EADtC,WAAsD,GAAtE,cACsD,GAC3C,yKACyC,oBADpD,cACqD,EAD1C,WACyC,GASpC,0DAAqD,GAArE,cACqD,EADrC,WAAqD,GAArE,cACqD,GAC1C,sKACwC,oBADnD,cACoD,EADzC,WACwC,GAOnC,2DAAsD,GAAtE,cACsD,EADtC,WAAsD,GAAtE,cACsD,GAC3C,yKACyC,oBADpD,cACqD,EAD1C,WACyC,GAOpC,sDAAiD,GAAjE,cACiD,EADjC,WAAiD,GAAjE,cACiD,GACtC,0JACoC,oBAD/C,cACgD,EADrC,WACoC,GAS/B,yDAAoD,GAApE,cACoD,EADpC,WAAoD,GAApE,cACoD,GACzC,mKACuC,oBADlD,cACmD,EADxC,WACuC,GAQlC,yDAAoD,GAApE,cACoD,EADpC,WAAoD,GAApE,cACoD,GACzC,mKACuC,oBADlD,cACmD,EADxC,WACuC,GAQlC,yDAAoD,GAApE,cACoD,EADpC,WAAoD,GAApE,cACoD,GACzC,mKACuC,oBADlD,cACmD,EADxC,WACuC,GASlC,yDAAoD,GAApE,cACoD,EADpC,WAAoD,GAApE,cACoD,GACzC,mKACuC,oBADlD,cACmD,EADxC,WACuC,GAQlC,wDAAmD,GAAnE,cACmD,EADnC,WAAmD,GAAnE,cACmD,GACxC,gKACsC,oBADjD,cACkD,EADvC,WACsC,GAQjC,wDAAmD,GAAnE,cACmD,EADnC,WAAmD,GAAnE,cACmD,GACxC,gKACsC,oBADjD,cACkD,EADvC,WACsC,GAQjC,wDAAmD,GAAnE,cACmD,EADnC,WAAmD,GAAnE,cACmD,GACxC,gKACsC,oBADjD,cACkD,EADvC,WACsC,GAQjC,yDAAoD,GAApE,cACoD,EADpC,WAAoD,GAApE,cACoD,GACzC,mKACuC,oBADlD,cACmD,EADxC,WACuC,GASlC,wDAAkD,GAAlE,cACkD,EADlC,YAAkD,GAAlE,cACkD,GACvC,8JACqC,oBADhD,cACiD,EADtC,YACqC,GAWhC,kEAA4D,GAA5E,cAC4D,EAD5C,YAA4D,GAA5E,cAC4D,GACjD,4LAC+C,oBAD1D,cAC2D,EADhD,YAC+C,GAW1D,+DAAyD,GAD3D,cAEyD,EADvD,YAAyD,GADxC,oCAA6B,EAAhD,cAEyD,EAFtC,YAA6B,GAIrC,mLACyC,oBADpD,cACqD,EAD1C,YACyC,2BAlThE,6FAAiF,GAG7E,iaAC0C,GAMlC,g/CAAgB,IACd,o/BAC0D,IAS5D,ubAA0D,GAC1D,ubAA4D,GAK5D,k/CAAgB,IACd,kgCAAqF,IAWvF,8hDAAgB,IAEd,m5CAA6E,IAC3E,ifAAsB,GAU1B,qjDAAgB,IACd,siCAA2C,IAO7C,qjDAAgB,IACd,siCAAoD,IAWtD,qjDAAgB,IACd,siCACoD,IAQtD,qjDAAgB,IACd,siCACsD,IASxD,qjDAAgB,IACd,siCACiD,IAUnD,qjDAAgB,IACd,siCACoD,IAStD,qjDAAgB,IACd,siCACmD,IASrD,qjDAAgB,IACd,siCACoD,IAUtD,qjDAAgB,IACd,siCACsD,IAUxD,qjDAAgB,IACd,siCACqD,IAQvD,qjDAAgB,IACd,siCACsD,IAQxD,qjDAAgB,IACd,siCACiD,IAUnD,qjDAAgB,IACd,siCACoD,IAStD,qjDAAgB,IACd,siCACoD,IAStD,qjDAAgB,IACd,siCACoD,IAUtD,qjDAAgB,IACd,siCACoD,IAStD,qjDAAgB,IACd,siCACmD,IASrD,qjDAAgB,IACd,siCACmD,IASrD,qjDAAgB,IACd,siCACmD,IASrD,qjDAAgB,IACd,siCACoD,IAUtD,qjDAAgB,IACd,wiCACkD,IAYpD,imDAAgB,IACd,skCAC4D,IAUhE,imDAA2C,IAEzC,skCAEyD;sEAgBrE,iFAA4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mD;;;;;;;;;;;ACAA,yD;;;;;;;;;;;ACAA,qD;;;;;;;;;;;ACAA,sD;;;;;;;;;;;ACAA,wD;;;;;;;;;;;ACAA,yD;;;;;;;;;;;ACAA,wD;;;;;;;;;;;ACAA,mD;;;;;;;;;;;ACAA,oD;;;;;;;;;;;ACAA,mD;;;;;;;;;;;ACAA,mD;;;;;;;;;;;ACAA,wD;;;;;;;;;;;ACAA,2D;;;;;;;;;;;ACAA,+D;;;;;;;;;;;ACAA,oD;;;;;;;;;;;ACAA,qD;;;;;;;;;;;ACAA,sD;;;;;;;;;;;ACAA,2D;;;;;;;;;;;ACAA,qD;;;;;;;;;;;ACAA,wD;;;;;;;;;;;ACAA,mD;;;;;;;;;;;ACAA,sD;;;;;;;;;;;ACAA,oD;;;;;;;;;;;ACAA,mD;;;;;;;;;;;ACAA,sD;;;;;;;;;;;ACAA,sD;;;;;;;;;;;ACAA,mD;;;;;;;;;;;ACAA,sD;;;;;;;;;;;ACAA,iE;;;;;;;;;;;ACAA,qD;;;;;;;;;;;ACAA,4C;;;;;;;;;;;ACAA,kD;;;;;;;;;;;ACAA,gD;;;;;;;;;;;ACAA,qE;;;;;;;;;;;ACAA,2C;;;;;;;;;;;ACAA,qD;;;;;;;;;;;ACAA,6C;;;;;;;;;;;ACAA,+C;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,+C;;;;;;;;;;;ACAA,gD;;;;;;;;;;;ACAA,uC;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,2C","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","<ng-template><div class=\"mat-autocomplete-panel\" role=\"listbox\" [id]=\"id\" [ngClass]=\"_classList\" #panel><ng-content></ng-content></div></ng-template>","<ng-template cdkPortalOutlet></ng-template>","<span class=\"mat-button-wrapper\"><ng-content></ng-content></span><div matRipple class=\"mat-button-ripple\" [class.mat-button-ripple-round]=\"isRoundButton || isIconButton\" [matRippleDisabled]=\"_isRippleDisabled()\" [matRippleCentered]=\"isIconButton\" [matRippleTrigger]=\"_getHostElement()\"></div><div class=\"mat-button-focus-overlay\"></div>","<span class=\"mat-button-wrapper\"><ng-content></ng-content></span><div matRipple class=\"mat-button-ripple\" [class.mat-button-ripple-round]=\"isRoundButton || isIconButton\" [matRippleDisabled]=\"_isRippleDisabled()\" [matRippleCentered]=\"isIconButton\" [matRippleTrigger]=\"_getHostElement()\"></div><div class=\"mat-button-focus-overlay\"></div>","<ng-content></ng-content><ng-content select=\"mat-card-footer\"></ng-content>","<ng-content select=\"[mat-card-avatar], [matCardAvatar]\"></ng-content><div class=\"mat-card-header-text\"><ng-content select=\"mat-card-title, mat-card-subtitle,\n      [mat-card-title], [mat-card-subtitle],\n      [matCardTitle], [matCardSubtitle]\"></ng-content></div><ng-content></ng-content>","<div><ng-content select=\"mat-card-title, mat-card-subtitle,\n      [mat-card-title], [mat-card-subtitle],\n      [matCardTitle], [matCardSubtitle]\"></ng-content></div><ng-content select=\"img\"></ng-content><ng-content></ng-content>","<label [attr.for]=\"inputId\" class=\"mat-checkbox-layout\" #label><div class=\"mat-checkbox-inner-container\" [class.mat-checkbox-inner-container-no-side-margin]=\"!checkboxLabel.textContent || !checkboxLabel.textContent.trim()\"><input #input class=\"mat-checkbox-input cdk-visually-hidden\" type=\"checkbox\" [id]=\"inputId\" [required]=\"required\" [checked]=\"checked\" [attr.value]=\"value\" [disabled]=\"disabled\" [attr.name]=\"name\" [tabIndex]=\"tabIndex\" [indeterminate]=\"indeterminate\" [attr.aria-label]=\"ariaLabel || null\" [attr.aria-labelledby]=\"ariaLabelledby\" [attr.aria-checked]=\"_getAriaChecked()\" (change)=\"_onInteractionEvent($event)\" (click)=\"_onInputClick($event)\"><div matRipple class=\"mat-checkbox-ripple\" [matRippleTrigger]=\"label\" [matRippleDisabled]=\"_isRippleDisabled()\" [matRippleRadius]=\"20\" [matRippleCentered]=\"true\" [matRippleAnimation]=\"{enterDuration: 150}\"><div class=\"mat-ripple-element mat-checkbox-persistent-ripple\"></div></div><div class=\"mat-checkbox-frame\"></div><div class=\"mat-checkbox-background\"><svg version=\"1.1\" focusable=\"false\" class=\"mat-checkbox-checkmark\" viewBox=\"0 0 24 24\" xml:space=\"preserve\"><path class=\"mat-checkbox-checkmark-path\" fill=\"none\" stroke=\"white\" d=\"M4.1,12.7 9,17.6 20.3,6.3\"/></svg><div class=\"mat-checkbox-mixedmark\"></div></div></div><span class=\"mat-checkbox-label\" #checkboxLabel (cdkObserveContent)=\"_onLabelTextChange()\"><span style=\"display:none\">&nbsp;</span><ng-content></ng-content></span></label>","<mat-pseudo-checkbox *ngIf=\"multiple\" class=\"mat-option-pseudo-checkbox\" [state]=\"selected ? 'checked' : ''\" [disabled]=\"disabled\"></mat-pseudo-checkbox><span class=\"mat-option-text\"><ng-content></ng-content></span><div class=\"mat-option-ripple\" mat-ripple [matRippleTrigger]=\"_getHostElement()\" [matRippleDisabled]=\"disabled || disableRipple\"></div>","<label class=\"mat-optgroup-label\" [id]=\"_labelId\">{{ label }}<ng-content></ng-content></label><ng-content select=\"mat-option, ng-container\"></ng-content>","<div class=\"mat-calendar-header\"><div class=\"mat-calendar-controls\"><button mat-button type=\"button\" class=\"mat-calendar-period-button\" (click)=\"currentPeriodClicked()\" [attr.aria-label]=\"periodButtonLabel\" cdkAriaLive=\"polite\">{{periodButtonText}}<div class=\"mat-calendar-arrow\" [class.mat-calendar-invert]=\"calendar.currentView != 'month'\"></div></button><div class=\"mat-calendar-spacer\"></div><ng-content></ng-content><button mat-icon-button type=\"button\" class=\"mat-calendar-previous-button\" [disabled]=\"!previousEnabled()\" (click)=\"previousClicked()\" [attr.aria-label]=\"prevButtonLabel\"></button> <button mat-icon-button type=\"button\" class=\"mat-calendar-next-button\" [disabled]=\"!nextEnabled()\" (click)=\"nextClicked()\" [attr.aria-label]=\"nextButtonLabel\"></button></div></div>","<ng-template [cdkPortalOutlet]=\"_calendarHeaderPortal\"></ng-template><div class=\"mat-calendar-content\" [ngSwitch]=\"currentView\" cdkMonitorSubtreeFocus tabindex=\"-1\"><mat-month-view *ngSwitchCase=\"'month'\" [(activeDate)]=\"activeDate\" [selected]=\"selected\" [dateFilter]=\"dateFilter\" [maxDate]=\"maxDate\" [minDate]=\"minDate\" [dateClass]=\"dateClass\" (selectedChange)=\"_dateSelected($event)\" (_userSelection)=\"_userSelected()\"></mat-month-view><mat-year-view *ngSwitchCase=\"'year'\" [(activeDate)]=\"activeDate\" [selected]=\"selected\" [dateFilter]=\"dateFilter\" [maxDate]=\"maxDate\" [minDate]=\"minDate\" (monthSelected)=\"_monthSelectedInYearView($event)\" (selectedChange)=\"_goToDateInView($event, 'month')\"></mat-year-view><mat-multi-year-view *ngSwitchCase=\"'multi-year'\" [(activeDate)]=\"activeDate\" [selected]=\"selected\" [dateFilter]=\"dateFilter\" [maxDate]=\"maxDate\" [minDate]=\"minDate\" (yearSelected)=\"_yearSelectedInMultiYearView($event)\" (selectedChange)=\"_goToDateInView($event, 'year')\"></mat-multi-year-view></div>","<tr *ngIf=\"_firstRowOffset < labelMinRequiredCells\" aria-hidden=\"true\"><td class=\"mat-calendar-body-label\" [attr.colspan]=\"numCols\" [style.paddingTop]=\"_cellPadding\" [style.paddingBottom]=\"_cellPadding\">{{label}}</td></tr><tr *ngFor=\"let row of rows; let rowIndex = index\" role=\"row\"><td *ngIf=\"rowIndex === 0 && _firstRowOffset\" aria-hidden=\"true\" class=\"mat-calendar-body-label\" [attr.colspan]=\"_firstRowOffset\" [style.paddingTop]=\"_cellPadding\" [style.paddingBottom]=\"_cellPadding\">{{_firstRowOffset >= labelMinRequiredCells ? label : ''}}</td><td *ngFor=\"let item of row; let colIndex = index\" role=\"gridcell\" class=\"mat-calendar-body-cell\" [ngClass]=\"item.cssClasses\" [tabindex]=\"_isActiveCell(rowIndex, colIndex) ? 0 : -1\" [class.mat-calendar-body-disabled]=\"!item.enabled\" [class.mat-calendar-body-active]=\"_isActiveCell(rowIndex, colIndex)\" [attr.aria-label]=\"item.ariaLabel\" [attr.aria-disabled]=\"!item.enabled || null\" [attr.aria-selected]=\"selectedValue === item.value\" (click)=\"_cellClicked(item)\" [style.width]=\"_cellWidth\" [style.paddingTop]=\"_cellPadding\" role=\"button\" [style.paddingBottom]=\"_cellPadding\"><div class=\"mat-calendar-body-cell-content\" [class.mat-calendar-body-selected]=\"selectedValue === item.value\" [class.mat-calendar-body-today]=\"todayValue === item.value\">{{item.displayValue}}</div></td></tr>","<mat-calendar cdkTrapFocus [id]=\"datepicker.id\" [ngClass]=\"datepicker.panelClass\" [startAt]=\"datepicker.startAt\" [startView]=\"datepicker.startView\" [minDate]=\"datepicker._minDate\" [maxDate]=\"datepicker._maxDate\" [dateFilter]=\"datepicker._dateFilter\" [headerComponent]=\"datepicker.calendarHeaderComponent\" [selected]=\"datepicker._selected\" [dateClass]=\"datepicker.dateClass\" [@fadeInCalendar]=\"'enter'\" (selectedChange)=\"datepicker.select($event)\" (yearSelected)=\"datepicker._selectYear($event)\" (monthSelected)=\"datepicker._selectMonth($event)\" (_userSelection)=\"datepicker.close()\"></mat-calendar>","<button #button mat-icon-button type=\"button\" [attr.aria-haspopup]=\"datepicker ? 'dialog' : null\" [attr.aria-label]=\"_intl.openCalendarLabel\" [attr.tabindex]=\"disabled ? -1 : tabIndex\" [disabled]=\"disabled\" [disableRipple]=\"disableRipple\" (click)=\"_open($event)\"><svg *ngIf=\"!_customIcon\" class=\"mat-datepicker-toggle-default-icon\" viewBox=\"0 0 24 24\" width=\"24px\" height=\"24px\" fill=\"currentColor\" focusable=\"false\"><path d=\"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\"/></svg><ng-content select=\"[matDatepickerToggleIcon]\"></ng-content></button>","<table class=\"mat-calendar-table\" role=\"presentation\"><thead class=\"mat-calendar-table-header\"><tr><th scope=\"col\" *ngFor=\"let day of _weekdays\" [attr.aria-label]=\"day.long\">{{day.narrow}}</th></tr><tr><th class=\"mat-calendar-table-header-divider\" colspan=\"7\" aria-hidden=\"true\"></th></tr></thead><tbody mat-calendar-body [label]=\"_monthLabel\" [rows]=\"_weeks\" [todayValue]=\"_todayDate\" [selectedValue]=\"_selectedDate\" [labelMinRequiredCells]=\"3\" [activeCell]=\"_dateAdapter.getDate(activeDate) - 1\" (selectedValueChange)=\"_dateSelected($event)\" (keydown)=\"_handleCalendarBodyKeydown($event)\"></tbody></table>","<table class=\"mat-calendar-table\" role=\"presentation\"><thead class=\"mat-calendar-table-header\"><tr><th class=\"mat-calendar-table-header-divider\" colspan=\"4\"></th></tr></thead><tbody mat-calendar-body [label]=\"_yearLabel\" [rows]=\"_months\" [todayValue]=\"_todayMonth\" [selectedValue]=\"_selectedMonth\" [labelMinRequiredCells]=\"2\" [numCols]=\"4\" [cellAspectRatio]=\"4 / 7\" [activeCell]=\"_dateAdapter.getMonth(activeDate)\" (selectedValueChange)=\"_monthSelected($event)\" (keydown)=\"_handleCalendarBodyKeydown($event)\"></tbody></table>","<table class=\"mat-calendar-table\" role=\"presentation\"><thead class=\"mat-calendar-table-header\"><tr><th class=\"mat-calendar-table-header-divider\" colspan=\"4\"></th></tr></thead><tbody mat-calendar-body [rows]=\"_years\" [todayValue]=\"_todayYear\" [selectedValue]=\"_selectedYear\" [numCols]=\"4\" [cellAspectRatio]=\"4 / 7\" [activeCell]=\"_getActiveCell()\" (selectedValueChange)=\"_yearSelected($event)\" (keydown)=\"_handleCalendarBodyKeydown($event)\"></tbody></table>","<ng-template cdkPortalOutlet></ng-template>","<div class=\"mat-form-field-wrapper\"><div class=\"mat-form-field-flex\" #connectionContainer (click)=\"_control.onContainerClick && _control.onContainerClick($event)\"><ng-container *ngIf=\"appearance == 'outline'\"><div class=\"mat-form-field-outline\"><div class=\"mat-form-field-outline-start\"></div><div class=\"mat-form-field-outline-gap\"></div><div class=\"mat-form-field-outline-end\"></div></div><div class=\"mat-form-field-outline mat-form-field-outline-thick\"><div class=\"mat-form-field-outline-start\"></div><div class=\"mat-form-field-outline-gap\"></div><div class=\"mat-form-field-outline-end\"></div></div></ng-container><div class=\"mat-form-field-prefix\" *ngIf=\"_prefixChildren.length\"><ng-content select=\"[matPrefix]\"></ng-content></div><div class=\"mat-form-field-infix\" #inputContainer><ng-content></ng-content><span class=\"mat-form-field-label-wrapper\"><label class=\"mat-form-field-label\" (cdkObserveContent)=\"updateOutlineGap()\" [cdkObserveContentDisabled]=\"appearance != 'outline'\" [id]=\"_labelId\" [attr.for]=\"_control.id\" [attr.aria-owns]=\"_control.id\" [class.mat-empty]=\"_control.empty && !_shouldAlwaysFloat\" [class.mat-form-field-empty]=\"_control.empty && !_shouldAlwaysFloat\" [class.mat-accent]=\"color == 'accent'\" [class.mat-warn]=\"color == 'warn'\" #label *ngIf=\"_hasFloatingLabel()\" [ngSwitch]=\"_hasLabel()\"><ng-container *ngSwitchCase=\"false\"><ng-content select=\"mat-placeholder\"></ng-content><span>{{_control.placeholder}}</span></ng-container><ng-content select=\"mat-label\" *ngSwitchCase=\"true\"></ng-content><span class=\"mat-placeholder-required mat-form-field-required-marker\" aria-hidden=\"true\" *ngIf=\"!hideRequiredMarker && _control.required && !_control.disabled\">&#32;*</span></label></span></div><div class=\"mat-form-field-suffix\" *ngIf=\"_suffixChildren.length\"><ng-content select=\"[matSuffix]\"></ng-content></div></div><div class=\"mat-form-field-underline\" #underline *ngIf=\"appearance != 'outline'\"><span class=\"mat-form-field-ripple\" [class.mat-accent]=\"color == 'accent'\" [class.mat-warn]=\"color == 'warn'\"></span></div><div class=\"mat-form-field-subscript-wrapper\" [ngSwitch]=\"_getDisplayedMessages()\"><div *ngSwitchCase=\"'error'\" [@transitionMessages]=\"_subscriptAnimationState\"><ng-content select=\"mat-error\"></ng-content></div><div class=\"mat-form-field-hint-wrapper\" *ngSwitchCase=\"'hint'\" [@transitionMessages]=\"_subscriptAnimationState\"><div *ngIf=\"hintLabel\" [id]=\"_hintLabelId\" class=\"mat-hint\">{{hintLabel}}</div><ng-content select=\"mat-hint:not([align='end'])\"></ng-content><div class=\"mat-form-field-hint-spacer\"></div><ng-content select=\"mat-hint[align='end']\"></ng-content></div></div></div>","<ng-content></ng-content>","<ng-content></ng-content>","<ng-content></ng-content>","<div class=\"mat-list-item-content\"><div class=\"mat-list-item-ripple\" mat-ripple [matRippleTrigger]=\"_getHostElement()\" [matRippleDisabled]=\"_isRippleDisabled()\"></div><ng-content select=\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\"></ng-content><div class=\"mat-list-text\"><ng-content select=\"[mat-line], [matLine]\"></ng-content></div><ng-content></ng-content></div>","<div class=\"mat-list-item-content\" [class.mat-list-item-content-reverse]=\"checkboxPosition == 'after'\"><div mat-ripple class=\"mat-list-item-ripple\" [matRippleTrigger]=\"_getHostElement()\" [matRippleDisabled]=\"_isRippleDisabled()\"></div><mat-pseudo-checkbox [state]=\"selected ? 'checked' : 'unchecked'\" [disabled]=\"disabled\"></mat-pseudo-checkbox><div class=\"mat-list-text\" #text><ng-content></ng-content></div><ng-content select=\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\"></ng-content></div>","<ng-content></ng-content>","<ng-template><div class=\"mat-menu-panel\" [ngClass]=\"_classList\" (keydown)=\"_handleKeydown($event)\" (click)=\"closed.emit('click')\" [@transformMenu]=\"_panelAnimationState\" (@transformMenu.start)=\"_onAnimationStart($event)\" (@transformMenu.done)=\"_onAnimationDone($event)\" tabindex=\"-1\" role=\"menu\"><div class=\"mat-menu-content\"><ng-content></ng-content></div></div></ng-template>","<ng-content></ng-content><div class=\"mat-menu-ripple\" matRipple [matRippleDisabled]=\"disableRipple || disabled\" [matRippleTrigger]=\"_getHostElement()\"></div>","<div class=\"mat-paginator-outer-container\"><div class=\"mat-paginator-container\"><div class=\"mat-paginator-page-size\" *ngIf=\"!hidePageSize\"><div class=\"mat-paginator-page-size-label\">{{_intl.itemsPerPageLabel}}</div><mat-form-field *ngIf=\"_displayedPageSizeOptions.length > 1\" [color]=\"color\" class=\"mat-paginator-page-size-select\"><mat-select [value]=\"pageSize\" [disabled]=\"disabled\" [aria-label]=\"_intl.itemsPerPageLabel\" (selectionChange)=\"_changePageSize($event.value)\"><mat-option *ngFor=\"let pageSizeOption of _displayedPageSizeOptions\" [value]=\"pageSizeOption\">{{pageSizeOption}}</mat-option></mat-select></mat-form-field><div *ngIf=\"_displayedPageSizeOptions.length <= 1\">{{pageSize}}</div></div><div class=\"mat-paginator-range-actions\"><div class=\"mat-paginator-range-label\">{{_intl.getRangeLabel(pageIndex, pageSize, length)}}</div><button mat-icon-button type=\"button\" class=\"mat-paginator-navigation-first\" (click)=\"firstPage()\" [attr.aria-label]=\"_intl.firstPageLabel\" [matTooltip]=\"_intl.firstPageLabel\" [matTooltipDisabled]=\"_previousButtonsDisabled()\" [matTooltipPosition]=\"'above'\" [disabled]=\"_previousButtonsDisabled()\" *ngIf=\"showFirstLastButtons\"><svg class=\"mat-paginator-icon\" viewBox=\"0 0 24 24\" focusable=\"false\"><path d=\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"/></svg></button> <button mat-icon-button type=\"button\" class=\"mat-paginator-navigation-previous\" (click)=\"previousPage()\" [attr.aria-label]=\"_intl.previousPageLabel\" [matTooltip]=\"_intl.previousPageLabel\" [matTooltipDisabled]=\"_previousButtonsDisabled()\" [matTooltipPosition]=\"'above'\" [disabled]=\"_previousButtonsDisabled()\"><svg class=\"mat-paginator-icon\" viewBox=\"0 0 24 24\" focusable=\"false\"><path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"/></svg></button> <button mat-icon-button type=\"button\" class=\"mat-paginator-navigation-next\" (click)=\"nextPage()\" [attr.aria-label]=\"_intl.nextPageLabel\" [matTooltip]=\"_intl.nextPageLabel\" [matTooltipDisabled]=\"_nextButtonsDisabled()\" [matTooltipPosition]=\"'above'\" [disabled]=\"_nextButtonsDisabled()\"><svg class=\"mat-paginator-icon\" viewBox=\"0 0 24 24\" focusable=\"false\"><path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"/></svg></button> <button mat-icon-button type=\"button\" class=\"mat-paginator-navigation-last\" (click)=\"lastPage()\" [attr.aria-label]=\"_intl.lastPageLabel\" [matTooltip]=\"_intl.lastPageLabel\" [matTooltipDisabled]=\"_nextButtonsDisabled()\" [matTooltipPosition]=\"'above'\" [disabled]=\"_nextButtonsDisabled()\" *ngIf=\"showFirstLastButtons\"><svg class=\"mat-paginator-icon\" viewBox=\"0 0 24 24\" focusable=\"false\"><path d=\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"/></svg></button></div></div></div>","<svg width=\"100%\" height=\"4\" focusable=\"false\" class=\"mat-progress-bar-background mat-progress-bar-element\"><defs><pattern [id]=\"progressbarId\" x=\"4\" y=\"0\" width=\"8\" height=\"4\" patternUnits=\"userSpaceOnUse\"><circle cx=\"2\" cy=\"2\" r=\"2\"/></pattern></defs><rect [attr.fill]=\"_rectangleFillValue\" width=\"100%\" height=\"100%\"/></svg><div class=\"mat-progress-bar-buffer mat-progress-bar-element\" [ngStyle]=\"_bufferTransform()\"></div><div class=\"mat-progress-bar-primary mat-progress-bar-fill mat-progress-bar-element\" [ngStyle]=\"_primaryTransform()\" #primaryValueBar></div><div class=\"mat-progress-bar-secondary mat-progress-bar-fill mat-progress-bar-element\"></div>","<svg [style.width.px]=\"diameter\" [style.height.px]=\"diameter\" [attr.viewBox]=\"_viewBox\" preserveAspectRatio=\"xMidYMid meet\" focusable=\"false\" [ngSwitch]=\"mode === 'indeterminate'\"><circle *ngSwitchCase=\"true\" cx=\"50%\" cy=\"50%\" [attr.r]=\"_circleRadius\" [style.animation-name]=\"'mat-progress-spinner-stroke-rotate-' + diameter\" [style.stroke-dashoffset.px]=\"_strokeDashOffset\" [style.stroke-dasharray.px]=\"_strokeCircumference\" [style.stroke-width.%]=\"_circleStrokeWidth\"></circle><circle *ngSwitchCase=\"false\" cx=\"50%\" cy=\"50%\" [attr.r]=\"_circleRadius\" [style.stroke-dashoffset.px]=\"_strokeDashOffset\" [style.stroke-dasharray.px]=\"_strokeCircumference\" [style.stroke-width.%]=\"_circleStrokeWidth\"></circle></svg>","<svg [style.width.px]=\"diameter\" [style.height.px]=\"diameter\" [attr.viewBox]=\"_viewBox\" preserveAspectRatio=\"xMidYMid meet\" focusable=\"false\" [ngSwitch]=\"mode === 'indeterminate'\"><circle *ngSwitchCase=\"true\" cx=\"50%\" cy=\"50%\" [attr.r]=\"_circleRadius\" [style.animation-name]=\"'mat-progress-spinner-stroke-rotate-' + diameter\" [style.stroke-dashoffset.px]=\"_strokeDashOffset\" [style.stroke-dasharray.px]=\"_strokeCircumference\" [style.stroke-width.%]=\"_circleStrokeWidth\"></circle><circle *ngSwitchCase=\"false\" cx=\"50%\" cy=\"50%\" [attr.r]=\"_circleRadius\" [style.stroke-dashoffset.px]=\"_strokeDashOffset\" [style.stroke-dasharray.px]=\"_strokeCircumference\" [style.stroke-width.%]=\"_circleStrokeWidth\"></circle></svg>","<div cdk-overlay-origin class=\"mat-select-trigger\" aria-hidden=\"true\" (click)=\"toggle()\" #origin=\"cdkOverlayOrigin\" #trigger><div class=\"mat-select-value\" [ngSwitch]=\"empty\"><span class=\"mat-select-placeholder\" *ngSwitchCase=\"true\">{{placeholder || '\\u00A0'}}</span> <span class=\"mat-select-value-text\" *ngSwitchCase=\"false\" [ngSwitch]=\"!!customTrigger\"><span *ngSwitchDefault>{{triggerValue || '\\u00A0'}}</span><ng-content select=\"mat-select-trigger\" *ngSwitchCase=\"true\"></ng-content></span></div><div class=\"mat-select-arrow-wrapper\"><div class=\"mat-select-arrow\"></div></div></div><ng-template cdk-connected-overlay cdkConnectedOverlayLockPosition cdkConnectedOverlayHasBackdrop cdkConnectedOverlayBackdropClass=\"cdk-overlay-transparent-backdrop\" [cdkConnectedOverlayScrollStrategy]=\"_scrollStrategy\" [cdkConnectedOverlayOrigin]=\"origin\" [cdkConnectedOverlayOpen]=\"panelOpen\" [cdkConnectedOverlayPositions]=\"_positions\" [cdkConnectedOverlayMinWidth]=\"_triggerRect?.width\" [cdkConnectedOverlayOffsetY]=\"_offsetY\" (backdropClick)=\"close()\" (attach)=\"_onAttached()\" (detach)=\"close()\"><div class=\"mat-select-panel-wrap\" [@transformPanelWrap]><div #panel class=\"mat-select-panel {{ _getPanelTheme() }}\" [ngClass]=\"panelClass\" [@transformPanel]=\"multiple ? 'showing-multiple' : 'showing'\" (@transformPanel.done)=\"_panelDoneAnimatingStream.next($event.toState)\" [style.transformOrigin]=\"_transformOrigin\" [style.font-size.px]=\"_triggerFontSize\" (keydown)=\"_handleKeydown($event)\"><ng-content></ng-content></div></div></ng-template>","<ng-template cdkPortalOutlet></ng-template>","<span>{{data.message}}</span><div class=\"mat-simple-snackbar-action\" *ngIf=\"hasAction\"><button mat-button (click)=\"action()\">{{data.action}}</button></div>","<div class=\"mat-sort-header-container\" [class.mat-sort-header-sorted]=\"_isSorted()\" [class.mat-sort-header-position-before]=\"arrowPosition == 'before'\"><button class=\"mat-sort-header-button\" type=\"button\" [attr.disabled]=\"_isDisabled() || null\" [attr.aria-label]=\"_intl.sortButtonLabel(id)\" (focus)=\"_setIndicatorHintVisible(true)\" (blur)=\"_setIndicatorHintVisible(false)\"><ng-content></ng-content></button><div class=\"mat-sort-header-arrow\" *ngIf=\"_renderArrow()\" [@arrowOpacity]=\"_getArrowViewState()\" [@arrowPosition]=\"_getArrowViewState()\" [@allowChildren]=\"_getArrowDirectionState()\" (@arrowPosition.start)=\"_disableViewStateAnimation = true\" (@arrowPosition.done)=\"_disableViewStateAnimation = false\"><div class=\"mat-sort-header-stem\"></div><div class=\"mat-sort-header-indicator\" [@indicator]=\"_getArrowDirectionState()\"><div class=\"mat-sort-header-pointer-left\" [@leftPointer]=\"_getArrowDirectionState()\"></div><div class=\"mat-sort-header-pointer-right\" [@rightPointer]=\"_getArrowDirectionState()\"></div><div class=\"mat-sort-header-pointer-middle\"></div></div></div></div>","\n  <ng-content select=\"caption\"></ng-content>\n  <ng-container headerRowOutlet></ng-container>\n  <ng-container rowOutlet></ng-container>\n  <ng-container footerRowOutlet></ng-container>\n","<ng-container cdkCellOutlet></ng-container>","<ng-container cdkCellOutlet></ng-container>","<ng-container cdkCellOutlet></ng-container>","\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  ","<mat-tab-header #tabHeader [selectedIndex]=\"selectedIndex\" [disableRipple]=\"disableRipple\" (indexFocused)=\"_focusChanged($event)\" (selectFocusedIndex)=\"selectedIndex = $event\"><div class=\"mat-tab-label\" role=\"tab\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus *ngFor=\"let tab of _tabs; let i = index\" [id]=\"_getTabLabelId(i)\" [attr.tabIndex]=\"_getTabIndex(tab, i)\" [attr.aria-posinset]=\"i + 1\" [attr.aria-setsize]=\"_tabs.length\" [attr.aria-controls]=\"_getTabContentId(i)\" [attr.aria-selected]=\"selectedIndex == i\" [attr.aria-label]=\"tab.ariaLabel || null\" [attr.aria-labelledby]=\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\" [class.mat-tab-label-active]=\"selectedIndex == i\" [disabled]=\"tab.disabled\" [matRippleDisabled]=\"tab.disabled || disableRipple\" (click)=\"_handleClick(tab, tabHeader, i)\"><div class=\"mat-tab-label-content\"><ng-template [ngIf]=\"tab.templateLabel\"><ng-template [cdkPortalOutlet]=\"tab.templateLabel\"></ng-template></ng-template><ng-template [ngIf]=\"!tab.templateLabel\">{{tab.textLabel}}</ng-template></div></div></mat-tab-header><div class=\"mat-tab-body-wrapper\" [class._mat-animation-noopable]=\"_animationMode === 'NoopAnimations'\" #tabBodyWrapper><mat-tab-body role=\"tabpanel\" *ngFor=\"let tab of _tabs; let i = index\" [id]=\"_getTabContentId(i)\" [attr.aria-labelledby]=\"_getTabLabelId(i)\" [class.mat-tab-body-active]=\"selectedIndex == i\" [content]=\"tab.content\" [position]=\"tab.position\" [origin]=\"tab.origin\" [animationDuration]=\"animationDuration\" (_onCentered)=\"_removeTabBodyWrapperHeight()\" (_onCentering)=\"_setTabBodyWrapperHeight($event)\"></mat-tab-body></div>","<div class=\"mat-tab-body-content\" #content [@translateTab]=\"{\n        value: _position,\n        params: {animationDuration: animationDuration}\n     }\" (@translateTab.start)=\"_onTranslateTabStarted($event)\" (@translateTab.done)=\"_translateTabComplete.next($event)\"><ng-template matTabBodyHost></ng-template></div>","<div class=\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\" #previousPaginator aria-hidden=\"true\" mat-ripple [matRippleDisabled]=\"_disableScrollBefore || disableRipple\" [class.mat-tab-header-pagination-disabled]=\"_disableScrollBefore\" (click)=\"_handlePaginatorClick('before')\" (mousedown)=\"_handlePaginatorPress('before')\" (touchend)=\"_stopInterval()\"><div class=\"mat-tab-header-pagination-chevron\"></div></div><div class=\"mat-tab-label-container\" #tabListContainer (keydown)=\"_handleKeydown($event)\"><div #tabList class=\"mat-tab-list\" [class._mat-animation-noopable]=\"_animationMode === 'NoopAnimations'\" role=\"tablist\" (cdkObserveContent)=\"_onContentChanges()\"><div class=\"mat-tab-labels\"><ng-content></ng-content></div><mat-ink-bar></mat-ink-bar></div></div><div class=\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\" #nextPaginator aria-hidden=\"true\" mat-ripple [matRippleDisabled]=\"_disableScrollAfter || disableRipple\" [class.mat-tab-header-pagination-disabled]=\"_disableScrollAfter\" (mousedown)=\"_handlePaginatorPress('after')\" (click)=\"_handlePaginatorClick('after')\" (touchend)=\"_stopInterval()\"><div class=\"mat-tab-header-pagination-chevron\"></div></div>","<ng-template><ng-content></ng-content></ng-template>","<div class=\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\" #previousPaginator aria-hidden=\"true\" mat-ripple [matRippleDisabled]=\"_disableScrollBefore || disableRipple\" [class.mat-tab-header-pagination-disabled]=\"_disableScrollBefore\" (click)=\"_handlePaginatorClick('before')\" (mousedown)=\"_handlePaginatorPress('before')\" (touchend)=\"_stopInterval()\"><div class=\"mat-tab-header-pagination-chevron\"></div></div><div class=\"mat-tab-link-container\" #tabListContainer (keydown)=\"_handleKeydown($event)\"><div class=\"mat-tab-list\" #tabList (cdkObserveContent)=\"_onContentChanges()\"><div class=\"mat-tab-links\"><ng-content></ng-content></div><mat-ink-bar></mat-ink-bar></div></div><div class=\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\" #nextPaginator aria-hidden=\"true\" mat-ripple [matRippleDisabled]=\"_disableScrollAfter || disableRipple\" [class.mat-tab-header-pagination-disabled]=\"_disableScrollAfter\" (mousedown)=\"_handlePaginatorPress('after')\" (click)=\"_handlePaginatorClick('after')\" (touchend)=\"_stopInterval()\"><div class=\"mat-tab-header-pagination-chevron\"></div></div>","<ng-content></ng-content><ng-content select=\"mat-toolbar-row\"></ng-content>","<div class=\"mat-tooltip\" [ngClass]=\"tooltipClass\" [class.mat-tooltip-handset]=\"(_isHandset | async)?.matches\" [@state]=\"_visibility\" (@state.start)=\"_animationStart()\" (@state.done)=\"_animationDone($event)\">{{message}}</div>","<router-outlet></router-outlet>","<!-- File Upload -->\n<div class=\"uploadfilecontainer\" (click)=\"fileInput.click()\" libDragDrop (onFileDropped)=\"selectFiles($event)\">\n    <input hidden type=\"file\" #fileInput (change)=\"selectFiles($event.target.files)\" multiple>\n    <div class=\"uploadtextwrapper\">\n        <h2>Drag and Drop Files</h2>\n        <p>Supported Formats:\n            <ng-container *ngFor=\"let val of configData.format; let i = index\">\n                {{ val }}<ng-container *ngIf=\"i + 1 < configData.format.length\">,</ng-container>\n            </ng-container>\n        </p>\n        <p>MAX Size: {{ configData.size / 1024 | number: '.1-2' }} MB</p>\n    </div>\n</div>\n\n<div class=\"button-group\" *ngIf=\"files.length > 0\">\n    <button mat-raised-button color=\"primary\" type=\"button\" (click)=\"uploadAll();\">Upload All</button>\n    <button mat-raised-button color=\"warn\" type=\"button\" (click)=\"deleteAll();\">Delete All</button>\n</div>\n\n<div class=\"files-view\">\n    <!-- View Files -->\n    <mat-card class=\"example-card\" *ngFor=\"let file of files; let i = index;\">\n        <span class=\"viewUrlwrapper\">\n            <div *ngIf=\"file.viewUrl == null\" (click)=\"previewFiles(i);\" class=\"othersFilePreview\"> <h2 style=\"color:white; font-weight: bold;\">{{ file.viewText | uppercase }}</h2></div>\n            <img mat-card-image *ngIf=\"file.viewUrl != null\" [src]=\"file.viewUrl\" alt=\"{{ file.name }}\" (click)=\"previewFiles(i);\" />\n        </span>\n        <span class=\"viewUrlcontent\">\n            <mat-card-header>\n                <mat-card-title>{{ file.name }}</mat-card-title>\n                <mat-card-subtitle class=\"fileDescription\">Type: {{ file.type }}, Size:\n                    <ng-container *ngIf=\"file.size / 1000 > 999\">\n                        {{ file.size / 1000 / 1000 | number: '.1-2' }} MB\n                    </ng-container>\n                    <ng-container *ngIf=\"file.size / 1000 < 1000\">\n                        {{ file.size / 1000 | number: '.1-2' }} KB\n                    </ng-container>\n                </mat-card-subtitle>\n                <mat-card-subtitle class=\"error\" *ngIf=\"file.valid.status == false\">{{ file.valid.message }}\n                </mat-card-subtitle>\n            </mat-card-header>\n\n            <mat-card-content>\n                <mat-progress-bar mode=\"determinate\" *ngIf=\"file.upload.status == 'progress'\"\n                    value=\"{{ file.upload.data.percentage }}\"></mat-progress-bar>\n                <mat-progress-bar mode=\"indeterminate\" *ngIf=\"file.upload.status == 'waiting'\"></mat-progress-bar>\n            </mat-card-content>\n\n            <mat-card-actions>\n                <!-- <button mat-raised-button matTooltip=\"Preview\" *ngIf=\"file.valid.status == true\" aria-label=\"Preview\" (click)=\"previewFiles(i);\">Preview</button> -->\n\n                <button mat-raised-button color=\"primary\" type=\"button\"\n                    *ngIf=\"file.valid.status == true && file.upload.status != 'complete'\" matTooltip=\"Upload\"\n                    aria-label=\"Upload\" (click)=\"uploading(i);\">Upload</button>\n                <button mat-raised-button type=\"button\" disabled *ngIf=\"file.upload.status == 'complete'\">Upload Complete</button>\n\n                <button mat-raised-button type=\"button\" color=\"warn\" matTooltip=\"Remove\" aria-label=\"Remove\"\n                    (click)=\"removeFiles(i);\">Remove</button>\n            </mat-card-actions>\n        </span>\n    </mat-card>\n</div>","<span class=\"example-pizza-party\">\n  An error occurred.\n</span>","<h1 mat-dialog-title>Are you sure ??</h1>\n<div mat-dialog-actions>\n  <button mat-button type=\"button\" [mat-dialog-close]=\"false\" (click)=\"onNoClick()\">No Thanks</button>\n  <button mat-button type=\"button\" [mat-dialog-close]=\"true\" cdkFocusInitial>Yes</button>\n</div>","<h2 mat-dialog-title>File Preview</h2>\n<mat-dialog-content class=\"mat-typography\">\n  <img mat-card-image [src]=\"this.data.imgURL\" *ngIf=\"this.data.imgURL\">\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button mat-button type=\"button\" mat-dialog-close>Cancel</button>\n</mat-dialog-actions>","<div class=\"container\">\n\n\n  <mat-card class=\"searchcard\">\n    <mat-toolbar-row class=\"searchbar\">\n    <mat-form-field class=\"searchdiv\">\n\n      <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\n    </mat-form-field>\n\n      <span class=\"textsearch\" *ngIf=\"search_settingsval !=null && search_settingsval.textsearch != null \">\n    <mat-form-field *ngFor=\"let item of search_settingsval.textsearch\" class=\"searchdiv\">\n\n      <input matInput (change)=\"textsearchfunction(item.field)\" (keyup)=\"textsearchfunction(item.field)\" [(ngModel)]='tsearch[item.field]' placeholder=\"{{item.label}}\">\n      <span matPrefix><i class=\"material-icons searchicon\" >\n        search\n      </i> &nbsp;</span>\n    </mat-form-field>\n      </span>\n\n<span class=\"autocompletesearch\" *ngIf=\"search_settingsval !=null && search_settingsval.search != null \">\n  <mat-form-field  *ngFor=\"let item of search_settingsval.search\">\n    <input type=\"text\" placeholder=\"{{item.label}}\" matInput [(ngModel)]=\"autosearch[item.field]\" [matAutocomplete]=\"auto\">\n    <mat-autocomplete  #auto=\"matAutocomplete\" >\n       <mat-option *ngFor=\"let option of result.res | async\" [value]=\"option[item.field]\" (click)=\"autosearchfunction(item.field)\">\n        {{option[item.field]}}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n</span>\n\n\n\n<!--      <span *ngIf=\"search_settingsval !=null && search_settingsval != null \">\n\n      <mat-form-field *ngFor=\"let item of search_settingsval.search\">\n        <mat-label>{{item.label}}</mat-label>\n        <mat-select>\n          <mat-option *ngFor=\"let status of preresult\" [value]=\"status\" (click)=\"autosearchfunction(status.email)\">\n            {{status.email}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      </span>-->\n    <!--  <ng-container  *ngIf=\"search_settingsval !=null && search_settingsval.textsearch != null \">\n&lt;!&ndash;        <span *ngFor=\"let status of this.search_settingsval.textsearch\">&ndash;&gt;\n&lt;!&ndash;        <mat-form-field *ngFor=\"let statusval of status.value\">&ndash;&gt;\n        <mat-form-field *ngFor=\"let status of this.search_settingsval.textsearch\">\n              <input matInput (keyup)=\"applyFilter1($event.target.value, status)\" placeholder=\"{{status.label}}\">\n        </mat-form-field>\n&lt;!&ndash;              </span>&ndash;&gt;\n      </ng-container>-->\n\n\n      <ng-container  *ngIf=\"search_settingsval !=null && search_settingsval.selectsearch != null \">\n        <mat-form-field *ngFor=\"let status of this.search_settingsval.selectsearch\">\n          <mat-label>{{status.label}}</mat-label>\n          <mat-select>\n            <mat-option *ngFor=\"let statusval of status.values\" [value]=\"statusval\" (click)=\"selectSearch(statusval.val, status)\">\n              {{statusval.name}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </ng-container>\n\n\n      <ng-container *ngIf=\"date_search_endpointval !=null && date_search_sourceval != null && search_settingsval.datesearch != null \">\n        <span *ngFor=\"let status of this.search_settingsval.datesearch\">\n        <mat-form-field >\n          <input matInput [matDatepicker]=\"picker\"autocomplete=\"off\"  placeholder=\"{{status.startdatelabel}}\"  [(ngModel)]=\"start_date\" >\n          <mat-datepicker-toggle matSuffix [for]=\"picker\" ></mat-datepicker-toggle>\n          <mat-datepicker #picker></mat-datepicker>\n        </mat-form-field>\n        <mat-form-field>\n          <input matInput [matDatepicker]=\"picker1\" autocomplete=\"off\" placeholder=\"{{status.enddatelabel}}\" [(ngModel)]=\"end_date\" >\n          <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n          <mat-datepicker #picker1 ></mat-datepicker>\n        </mat-form-field>\n        <button mat-raised-button color=\"primary\" class=\"add_button\" (click)=\"dateSearch(status.field)\">{{status.submit}}</button>\n      </span>\n      </ng-container>\n\n\n\n      <span *ngIf=\"click_to_add_ananother_pageval !=null\">\n        <button mat-raised-button color=\"primary\" class=\"add_button\" [routerLink]=\"click_to_add_ananother_pageval\" >Add</button>\n      </span>\n    </mat-toolbar-row>\n\n\n\n    <ng-container *ngIf=\"selection.selected.length!=null && selection.selected.length>0\">\n      <span class=\"multipledeleteandupdatebuttan\">\n\n      <button mat-raised-button (click)=\"deletemultiple()\"> Delete </button>\n      <button mat-raised-button (click)=\"managestatusmultiple()\"> Update Status </button>\n\n      </span>\n    </ng-container>\n\n\n    <div class=\"tablewrapper\">\n\n      <table mat-table [dataSource]=\"dataSource\" matSort class=\"mat-elevation-z8\">\n\n      <ng-container matColumnDef=\"select\">\n        <th mat-header-cell *matHeaderCellDef>\n          <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\n          </mat-checkbox>\n        </th>\n        <td mat-cell *matCellDef=\"let row\" data-label=\"select\">\n          <mat-checkbox (click)=\"$event.stopPropagation()\"\n                        (change)=\"$event ? selection.toggle(row) : null\"\n                        [checked]=\"selection.isSelected(row)\">\n          </mat-checkbox>\n        </td>\n      </ng-container>\n\n      <ng-container *ngFor=\"let column of columns\" [matColumnDef]=\"column.columnDef\" >\n        <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"th-header-center\">{{column.header}}</th>\n        <td mat-cell *matCellDef=\"let row\" [ngStyle]=\"styleCell(column,row)\" data-title=\"{{column.header}}\"   class=\"td-cell-center\">\n          <span *ngIf=\"column.columnDef=='status' \">{{ getstatus([column.cell(row)]) }} {{hi(row)}}</span>\n          <span *ngIf=\"column.columnDef!='status' \">{{ column.cell(row) }}</span>\n          <span *ngIf=\"column.columnDef=='grab_url && grab_linkval!=null && grab_linkval[0]!=null' \">{{grapurl(row[this.grab_linkval[0].field_name])}}</span>\n          <br>\n\n<!--          <span *ngIf=\"sh==true\">-->\n            <span *ngIf=\"column.columnDef=='contractssigned' && sh==true && urlval !=null\" class=\"cursor\">\n              <i title=\"{{urlval[0].label}}\" (click)=\"clickurl(row,urlval[0].url)\" class=\"material-icons\">cloud_download</i>\n            </span>\n<!--          </span>-->\n<!--          <span *ngIf=\"aud==true\">-->\n            <span *ngIf=\"column.columnDef=='contractssigned' && aud==true  && urlval !=null\">\n              <i title=\"{{urlval[1].label}}\" (click)=\"clickurl(row,urlval[1].url)\" class=\"material-icons\">cloud_download</i>\n            </span>\n\n\n<!--// for grap url//-->\n\n\n\n          <span *ngIf=\" grab_linkval!=null && grab_linkval[0]!=null && column.columnDef==[grab_linkval[0].col_name]\" class=\"cursor\">\n              <button mat-button (click)=\"copyText(row[grab_linkval[0].field_name],grab_linkval[1].url)\">{{grab_linkval[1].label}}</button>\n            </span>\n          <br>\n          <!--          </span>-->\n          <!--          <span *ngIf=\"aud==true\">-->\n          <span *ngIf=\"grab_linkval!=null && grab_linkval[0]!=null &&column.columnDef== [grab_linkval[0].col_name]\">\n              <button mat-button (click)=\"copyText(row[grab_linkval[0].field_name],grab_linkval[2].url)\">{{grab_linkval[2].label}}</button>\n            </span>\n\n<!--          //grap url end//-->\n\n\n<!--          </span>-->\n          <!-- <span *ngIf=\"column.columnDef=='contractssigned' \">\n            <span *ngFor=\"let item of urlval\" class=\"cursor\">\n            <i title=\"{{item.label}}\" (click)=\"clickurl(row,item.url)\" class=\"material-icons\">cloud_download</i>\n          </span>\n          </span>-->\n        </td>\n      </ng-container>\n\n\n\n      <ng-container matColumnDef=\"Actions\">\n        <th mat-header-cell *matHeaderCellDef  class=\"th-header-center\">Actions</th>\n        <td (click)=\"$event.stopPropagation()\" mat-cell  *matCellDef=\"let row\" data-label=\"Actions\"  class=\"td-cell-center\">\n          <span *ngIf=\"selection.selected.length==null || selection.selected.length==0\">\n            <span class=\"cursor\" (click)=\"editdata(row)\" >\n              <i class=\"material-icons\">\n                edit\n              </i>\n            </span>\n\n            <!--For modern browsers-->\n            <span class=\"cursor\" (click)=\"deletedata(row)\" >\n              <i class=\"material-icons\">\n                delete_outline\n              </i>\n            </span>\n\n            <!--For modern browsers-->\n            <span class=\"cursor\" (click)=\"viewdata(row)\" >\n              <i class=\"material-icons\">\n                remove_red_eye\n              </i>\n            </span>\n\n            <!--For modern browsers-->\n            <span class=\"cursor\" (click)=\"managestatus(row)\" >\n              <i class=\"material-icons\">\n                toggle_off\n              </i>\n            </span>\n            <span *ngIf=\"custombuttonval!=null\" class=\"cursor treeclass\" (click)=\"custombuttonfunc(row)\" >\n              <i class=\"material-icons treeclass\">\n                toggle_off\n              </i>\n            </span>\n\n            <!-- artistxp preview start -->\n            <span *ngIf=\"previewFlug==true\" class=\"cursor treeclass\" (click)=\"artistxpPreview(row)\">\n              <i class=\"material-icons\">perm_media</i>\n            </span>\n            <!-- artistxp preview end -->\n\n          </span>\n\n        </td>\n      </ng-container>\n\n\n\n\n\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n      </table>\n\n    </div>\n    <mat-paginator class=\"paginator\" [pageSizeOptions]=\"[5,10, 20, 50,100]\" showFirstLastButtons></mat-paginator>\n    <mat-spinner *ngIf=\"loading == true\" ></mat-spinner>\n\n\n\n   <!-- <form [formGroup]=\"stateForm\">\n      <mat-form-field>\n        <input type=\"text\" matInput placeholder=\"States Group\" formControlName=\"stateGroup\" required [matAutocomplete]=\"autoGroup\">\n        <mat-autocomplete #autoGroup=\"matAutocomplete\">\n          <mat-optgroup *ngFor=\"let group of stateGroupOptions | async\" [label]=\"group.letter\">\n            <mat-option *ngFor=\"let name of group.names\" [value]=\"name\">\n              {{name}}\n            </mat-option>\n          </mat-optgroup>\n        </mat-autocomplete>\n      </mat-form-field>\n    </form>-->\n\n    <!--<form class=\"example-form\">\n      <mat-form-field class=\"example-full-width\">\n        <input type=\"text\" placeholder=\"Select state\" aria-label=\"Number\" matInput [formControl]=\"myControl\" [matAutocomplete]=\"auto\">\n        <mat-autocomplete #auto=\"matAutocomplete\">\n          <mat-option *ngFor=\"let option of stateGroup | async\" [value]=\"option\">\n            {{option}}\n          </mat-option>\n        </mat-autocomplete>\n      </mat-form-field>\n    </form>\n-->\n\n  </mat-card>\n\n<!--\n  <mat-card>\n\n    <div class=\"example-container\">\n\n\n      <mat-card-content >\n        <mat-form-field class=\"form-group\">\n            <input (blur)=\"inputblur('email')\" matInput placeholder=\"email\" type=\"email\" [formControl]=\"myForm.controls['email']\" >\n            <mat-error  *ngIf=\"!myForm.controls['email'].valid && myForm.controls['email'].touched && issubmit==1\">email field can not be blank</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"form-group\">\n            <input (blur)=\"inputblur('password')\" matInput placeholder=\"Password\" type=\"password\" [formControl]=\"myForm.controls['password']\" >\n            <mat-error  *ngIf=\"!myForm.controls['password'].valid && myForm.controls['password'].touched && issubmit==1\">Password field can not be blank</mat-error>\n        </mat-form-field>\n\n            <button mat-button  (click)=\"onSubmit()\" class=\"s_getmyoffer_login_button\"  >Login</button>\n        </mat-card-content>\n\n\n    </div>\n\n  </mat-card>-->\n\n\n\n</div>\n","\n<div class=\"maindialog\">\n\n<div class=\"dialoghead\" *ngIf=\"data.preview != true\">\n    <h1 mat-dialog-title *ngIf=\"data!=null && data.message!=null\" >Hey !</h1>\n    <h1 mat-dialog-title *ngIf=\"data!=null && data.data!=null && data.data[0]==null\">Details </h1>\n    <div mat-dialog-content>\n        <p *ngIf=\"data!=null && data.message!=null\">{{data.message}}</p>\n\n\n        <div *ngIf=\"data!=null && data.data!=null\">\n\n\n\n            <mat-card class=\"example-card\" *ngFor=\"let item of data.data;\">\n                <mat-card-header id=\"dialogdata{{item[0]}}\">\n                    <!--<div mat-card-avatar class=\"example-header-image\"></div>-->\n                    <mat-card-title>{{item[0]}}</mat-card-title>\n                </mat-card-header>\n                <!--<img mat-card-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" alt=\"Photo of a Shiba Inu\">-->\n                <mat-card-content id=\"dialogdata{{item[0]}}\">\n                    <p [innerHtml]=\"item[1]\">\n\n                    </p>\n                </mat-card-content>\n            </mat-card>\n\n        </div>\n\n        <!--for custom page in modal(mainly used for tree)-->\n        <div *ngIf=\"data!=null && data.data!=null  && data.data[0]!=null &&  data.data[0].customdata!=null\">\n\n            <iframe class=\"custom-datadiv\" height=\"auto\"  [src]=\"data.data[0].customdata\" ></iframe>\n\n        </div>\n\n    </div>\n</div>\n\n\n<div *ngIf=\"data.preview == true\">\n    <lib-singlepost [post1]=\"data.previewData.res[0].posts\" [user]=\"\"></lib-singlepost>\n</div>\n\n\n\n\n\n<div mat-dialog-actions *ngIf=\"data.preview != true\">\n    <button mat-button *ngIf=\"data.isconfirmation==null ||  data.isconfirmation!=false\" (click)=\"onNoClick()\">No Thanks</button>\n    <button mat-button mat-dialog-close=\"yes\" cdkFocusInitial>Ok</button>\n</div>\n\n</div>\n","\n\n<mat-nav-list class=\"navlist\">\n\n\n    <a *ngFor=\"let item of data.items;\"  mat-list-item (click)=\"openLink(item)\">\n        <span mat-line>{{item.name}}</span>\n    </a>\n\n\n</mat-nav-list>\n","<div class=\"main-div\">\n\n    <mat-card class=\"from\">\n        <span class=\"logowrapper\" *ngIf=\"logoValue != ''\">\n            <img [src]=\"logoValue\">\n        </span>\n\n        <h2 *ngIf=\"fromTitleValue != ''\"> {{fromTitleValue}}</h2>\n\n        <form class=\"example-container\" [formGroup]=\"loginForm\" (ngSubmit)=\"loginFormSubmit()\" novalidate>\n            <mat-error class=\"error\" *ngIf=\"message !=''\">{{message}}</mat-error>\n\n            <mat-form-field>\n                <input matInput type=\"text\" placeholder=\"Email\" formControlName=\"email\"\n                    (blur)=\"inputUntouched('email')\">\n                <mat-error\n                    *ngIf=\"!loginForm.controls['email'].valid && loginForm.controls['email'].errors.required && loginForm.controls['email'].touched\">\n                    Email can not be blank</mat-error>\n            </mat-form-field>\n            \n            <mat-error *ngIf=\"!loginForm.controls['email'].valid && !loginForm.controls['email'].errors.required\">\n                Please enter a valid email</mat-error>\n\n            <mat-form-field>\n                <input matInput placeholder=\"Password\" type=\"password\" formControlName=\"password\"\n                    (blur)=\"inputUntouched('password')\">\n                <mat-error\n                    *ngIf=\"!loginForm.controls['password'].valid && loginForm.controls['password'].errors.required && loginForm.controls['password'].touched\">\n                    Password can not be blank</mat-error>\n            </mat-form-field>\n\n\n\n            <button mat-raised-button *ngIf=\"buttonNameValue != ''\" color=\"primary\">{{buttonNameValue}}</button>\n            <button mat-raised-button *ngIf=\"buttonNameValue == ''\" color=\"primary\">Login</button>\n\n\n\n            <span class=\"signupfooter\">\n                <a *ngIf=\"signUpRouteingUrlValue.buttonName !='' && signUpRouteingUrlValue.customLink =='' && signUpRouteingUrlValue.customURl =='' \"\n                    (click)=\"signup()\">{{signUpRouteingUrlValue.buttonName}}</a>\n\n                <a *ngIf=\"signUpRouteingUrlValue.buttonName !='' && signUpRouteingUrlValue.customLink !='' && signUpRouteingUrlValue.path =='' \"\n                    (click)=\"customFunction(signUpRouteingUrlValue.customLink)\">{{signUpRouteingUrlValue.buttonName}}</a>\n\n                <a *ngIf=\"signUpRouteingUrlValue.customURl !='' && signUpRouteingUrlValue.buttonName !='' && signUpRouteingUrlValue.customLink ==''  && signUpRouteingUrlValue.path ==''\"\n                    [attr.href]=\"signUpRouteingUrlValue.customURl\">{{signUpRouteingUrlValue.buttonName}}</a>\n\n                <a *ngIf=\"signUpRouteingUrlValue.buttonName =='' && signUpRouteingUrlValue.customLink ==''\"\n                    (click)=\"signup()\">Sign Up</a>\n\n                <a *ngIf=\"forgetRouteingUrlValue.buttonName !='' && forgetRouteingUrlValue.customLink =='' && forgetRouteingUrlValue.customURl ==''\"\n                    (click)=\"forgetpassword()\">{{forgetRouteingUrlValue.buttonName}}</a>\n\n                <a *ngIf=\"forgetRouteingUrlValue.buttonName !='' && forgetRouteingUrlValue.customLink !='' && forgetRouteingUrlValue.path =='' \"\n                    (click)=\"customFunction(forgetRouteingUrlValue.customLink)\">{{forgetRouteingUrlValue.buttonName}}</a>\n\n                <a *ngIf=\"forgetRouteingUrlValue.customURl !='' && forgetRouteingUrlValue.customLink =='' && forgetRouteingUrlValue.path ==''\"\n                    [href]=\"forgetRouteingUrlValue.customURl\">{{forgetRouteingUrlValue.buttonName}}</a>\n\n\n                <a *ngIf=\"forgetRouteingUrlValue.buttonName =='' && forgetRouteingUrlValue.customLink ==''\"\n                    (click)=\"forgetpassword()\">Forget Password</a>\n\n            </span>\n        </form>\n\n    </mat-card>\n\n</div>","<div class=\"main-div\">\n\n    \n\n  <mat-card class=\"from\">\n      <span class=\"logowrapper\" *ngIf=\"logoValue != ''\" >\n          <img  [src]=\"logoValue\">\n      </span>\n\n    <h2 *ngIf=\"formTitleValue != ''\"> {{formTitleValue}}</h2>\n\n\n    <form class=\"example-container\" [formGroup]=\"signUpForm\" (ngSubmit)=\"signUpFormSubmit()\" novalidate>\n\n\n      <mat-error class=\"error\" *ngIf=\"message != ''\">{{message}}</mat-error>\n      <mat-form-field>\n        <input matInput type=\"text\" placeholder=\"First Name\" formControlName=\"firstname\" (blur)=\"inputUntouched('firstname')\">\n        <mat-error\n          *ngIf=\"!signUpForm.controls['firstname'].valid && signUpForm.controls['firstname'].errors.required && signUpForm.controls['firstname'].touched\">\n          First Name field can not be blank</mat-error>\n      </mat-form-field>\n\n\n      <mat-form-field>\n        <input matInput type=\"text\" placeholder=\"Last Name\" formControlName=\"lastname\" (blur)=\"inputUntouched('lastname')\">\n        <mat-error\n          *ngIf=\"!signUpForm.controls['lastname'].valid && signUpForm.controls['lastname'].errors.required && signUpForm.controls['lastname'].touched\">\n          Last Name field can not be blank</mat-error>\n      </mat-form-field>\n\n      <mat-form-field>\n        <input matInput type=\"text\" placeholder=\"Email\" formControlName=\"email\" (blur)=\"inputUntouched('email')\">\n        <mat-error\n          *ngIf=\"!signUpForm.controls['email'].valid && signUpForm.controls['email'].errors.required && signUpForm.controls['email'].touched\">\n          Email field can not be blank</mat-error>\n        <mat-error *ngIf=\"!signUpForm.controls['email'].valid && !signUpForm.controls['email'].errors.required\">Email is\n          not valid</mat-error>\n      </mat-form-field>\n\n\n\n      <mat-form-field>\n        <input matInput placeholder=\"Password\" type=\"password\" formControlName=\"password\" (blur)=\"inputUntouched('password')\">\n        <mat-error\n          *ngIf=\"!signUpForm.controls['password'].valid && signUpForm.controls['password'].errors.required && signUpForm.controls['password'].touched\">\n          Password field can not be blank</mat-error>\n      </mat-form-field>\n\n\n\n   \n      <button mat-raised-button *ngIf=\"buttonNameValue != ''\" color=\"primary\">{{buttonNameValue}}</button>\n      <button mat-raised-button *ngIf=\"buttonNameValue == ''\" color=\"primary\">Sign Up</button>\n      \n      \n      \n      <span class=\"signupfooter\">\n        <a *ngIf=\"loginRouteingUrlValue.buttonName !='' && loginRouteingUrlValue.customLink =='' && loginRouteingUrlValue.customURl ==''\" (click)=\"login()\">{{loginRouteingUrlValue.buttonName}}</a>\n\n        <a *ngIf=\"loginRouteingUrlValue.customURl !='' && loginRouteingUrlValue.customLink =='' && loginRouteingUrlValue.path ==''\" [href]=\"loginRouteingUrlValue.customURl\">{{loginRouteingUrlValue.buttonName}}</a>\n  \n                  <a *ngIf=\"loginRouteingUrlValue.buttonName !='' && loginRouteingUrlValue.customLink !='' && loginRouteingUrlValue.path =='' \" (click)=\"customFunction(loginRouteingUrlValue.customLink)\">{{loginRouteingUrlValue.buttonName}}</a>\n  \n   <a *ngIf=\"loginRouteingUrlValue.buttonName =='' && loginRouteingUrlValue.customLink ==''\" (click)=\"login()\">Login</a>\n\n              <a *ngIf=\"forgetRouteingUrlValue.buttonName !='' && forgetRouteingUrlValue.customLink =='' && forgetRouteingUrlValue.customURl ==''\" (click)=\"forgetpassword()\">{{forgetRouteingUrlValue.buttonName}}</a>\n\n          <a *ngIf=\"forgetRouteingUrlValue.buttonName !='' && forgetRouteingUrlValue.customLink !='' && forgetRouteingUrlValue.path =='' \" (click)=\"customFunction(forgetRouteingUrlValue.customLink)\">{{forgetRouteingUrlValue.buttonName}}</a>\n\n          <a *ngIf=\"forgetRouteingUrlValue.customURl !='' && forgetRouteingUrlValue.customLink =='' && forgetRouteingUrlValue.path ==''\" [href]=\"forgetRouteingUrlValue.customURl\">{{forgetRouteingUrlValue.buttonName}}</a>\n\n\n          <a *ngIf=\"forgetRouteingUrlValue.buttonName =='' && forgetRouteingUrlValue.customLink ==''\" (click)=\"forgetpassword()\">Forget Password</a> \n\n      </span>\n    </form>\n  </mat-card>\n</div>","\n<span style=\"text-align: center\"  *ngIf=\"data.Url != ''\" >\n  <img style=\"max-width: 100%; text-align: center\" [src]=\"data.Url\">\n</span>\n\n<div mat-dialog-content>\n  <p *ngIf=\"data.value.length <= 7\">Thanks! your account has been successfully created</p>\n  <p *ngIf=\"data.value.length >= 8\">{{data.value}}</p>\n  \n</div>\n<div mat-dialog-actions>\n  <button mat-button [mat-dialog-close]=\"\" cdkFocusInitial>Ok</button>\n</div>","<div class=\"main-div\">\n\n  <mat-card class=\"from\">\n      <span class=\"logowrapper\" *ngIf=\"logoValue != ''\" >\n          <img  [src]=\"logoValue\">\n      </span>\n\n    <h2 *ngIf=\"formTitleValue != ''\"> {{formTitleValue}}</h2>\n\n\n    <form class=\"example-container\" [formGroup]=\"forgetPasswordForm\" (ngSubmit)=\"forgetPasswordSubmit()\" novalidate>\n<mat-error class=\"error\" *ngIf=\"message !=''\">{{message}}</mat-error>\n\n      <mat-form-field>\n        <input matInput type=\"text\" placeholder=\"Email\"  formControlName=\"email\" (blur)=\"inputUntouched('email')\">\n        <mat-error\n          *ngIf=\"!forgetPasswordForm.controls['email'].valid && forgetPasswordForm.controls['email'].errors.required && forgetPasswordForm.controls['email'].touched\">\n          Email can not be blank</mat-error>\n        <mat-error\n          *ngIf=\"!forgetPasswordForm.controls['email'].valid && !forgetPasswordForm.controls['email'].errors.required\">\n          Please enter  a valid email</mat-error>\n      </mat-form-field>\n<button mat-raised-button *ngIf=\"buttonNameValue != ''\" color=\"primary\">{{buttonNameValue}}</button>\n            <button mat-raised-button *ngIf=\"buttonNameValue == ''\" color=\"primary\">Login</button>\n      <span class=\"signupfooter\">\n      <a *ngIf=\"loginRouteingUrlValue.buttonName !='' && loginRouteingUrlValue.customLink =='' && loginRouteingUrlValue.customURl ==''\" (click)=\"login()\">{{loginRouteingUrlValue.buttonName}}</a>\n\n      <a *ngIf=\"loginRouteingUrlValue.customURl !='' && loginRouteingUrlValue.customLink =='' && loginRouteingUrlValue.path ==''\" [href]=\"loginRouteingUrlValue.customURl\">{{loginRouteingUrlValue.buttonName}}</a>\n\n                <a *ngIf=\"loginRouteingUrlValue.buttonName !='' && loginRouteingUrlValue.customLink !='' && loginRouteingUrlValue.path =='' \" (click)=\"customFunction(loginRouteingUrlValue.customLink)\">{{loginRouteingUrlValue.buttonName}}</a>\n\n <a *ngIf=\"loginRouteingUrlValue.buttonName =='' && loginRouteingUrlValue.customLink ==''\" (click)=\"login()\">Login</a>\n\n  <a *ngIf=\"signUpRouteingUrlValue.buttonName !='' && signUpRouteingUrlValue.customLink =='' && signUpRouteingUrlValue.customURl ==''\" (click)=\"signup()\">{{signUpRouteingUrlValue.buttonName}}</a>\n\n                <a *ngIf=\"signUpRouteingUrlValue.buttonName !='' && signUpRouteingUrlValue.customLink !='' && signUpRouteingUrlValue.path =='' \" (click)=\"customFunction(signUpRouteingUrlValue.customLink)\">{{signUpRouteingUrlValue.buttonName}}</a>\n\n                <a *ngIf=\"signUpRouteingUrlValue.customURl !='' && signUpRouteingUrlValue.customLink =='' && signUpRouteingUrlValue.path ==''\" [href]=\"signUpRouteingUrlValue.customURl\">{{signUpRouteingUrlValue.buttonName}}</a>\n\n\n                <a *ngIf=\"signUpRouteingUrlValue.buttonName =='' && signUpRouteingUrlValue.customLink ==''\" (click)=\"signup()\">Sign Up</a>\n\n\n\n\n                \n      </span>\n    </form>\n  </mat-card>\n</div>","<span class=\"example\">\n    We have e-mailed your password reset link!\n  </span>","<div class=\"main-div\">\n\n  <mat-card class=\"from\">\n      <span class=\"logowrapper\" *ngIf=\"logoValue != ''\" >\n          <img  [src]=\"logoValue\">\n      </span>\n\n    <h2 *ngIf=\"fromTitleNameValue != ''\"> {{fromTitleNameValue}}</h2>\n\n\n    <form class=\"example-container\" [formGroup]=\"resetPasswordForm\" (ngSubmit)=\"resetPasswordSubmit()\" novalidate>\n<mat-error class=\"error\" *ngIf=\"message !=''\">{{message}}</mat-error>\n\n      <mat-form-field>\n        <input matInput placeholder=\"Enter New Password\" type=\"password\" formControlName=\"password\" \n        (blur)=\"inputUntouched('password')\">\n        <mat-error\n          *ngIf=\"!resetPasswordForm.controls['password'].valid && resetPasswordForm.controls['password'].errors.required && resetPasswordForm.controls['password'].touched\">\n          Password field can not be blank</mat-error>\n          <!-- <mat-error  *ngIf=\"!resetPasswordForm.controls['password'].errors.required  && resetPasswordForm.controls['password'].touched\">Minimum length for password is 4!</mat-error> -->\n      </mat-form-field>\n\n      <mat-form-field>\n        <input matInput placeholder=\"Confirm New Password\" type=\"password\"  formControlName=\"confirmPassword\" (blur)=\"inputUntouched('confirmPassword')\">\n        <mat-error\n          *ngIf=\"!resetPasswordForm.controls['confirmPassword'].valid && resetPasswordForm.controls['confirmPassword'].errors.required && resetPasswordForm.controls['confirmPassword'].touched\">\n          Confirm Password field can not be blank</mat-error>\n        <!-- <mat-error *ngIf=\"f.confirmPassword.errors.mustMatch\">Confirm Password is not valid</mat-error> -->\n        <mat-error *ngIf=\"!resetPasswordForm.controls['confirmPassword'].valid && resetPasswordForm.controls['confirmPassword'].touched\">Password does not match </mat-error>\n      </mat-form-field>\n\n      <button mat-raised-button color=\"primary\">Update Password</button>\n\n    </form>\n  </mat-card>\n</div>\n\n<!-- <button (click)=\"openSnackBar('succes', 'ok')\"> ok</button> -->","Password changed successfully","<div *ngIf=\"loading\" class=\"mainOverlayLoader\">\n    <mat-spinner color=\"warn\"></mat-spinner>\n</div>\n\n<app-http-loader *ngIf=\"!loading\"></app-http-loader>\n\n<router-outlet (activate)=\"onActivate($event)\"></router-outlet>\n","import { OnInit, Input, Component } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport {\n  Event,\n  NavigationCancel,\n  NavigationEnd,\n  NavigationError,\n  NavigationStart,\n  Router\n} from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  title = 'aws-backend';\n  public loading: boolean = false;\n  public testJsonData: any = { \"data\": \"test\", \"others\": \"others test\" };\n\n  constructor(private cookieService: CookieService, private router: Router) {\n    /* Universal Loader for Reslove */\n    this.router.events.subscribe((event: Event) => {\n      switch (true) {\n        case event instanceof NavigationStart: {\n          this.loading = true;\n          break;\n        }\n\n        case event instanceof NavigationEnd:\n        case event instanceof NavigationCancel:\n        case event instanceof NavigationError: {\n          this.loading = false;\n          break;\n        }\n        default: {\n          break;\n        }\n      }\n    });\n  }\n\n  /**page open at the top portion start**/\n\n  onActivate(event) {\n    window.scroll(0,0);\n}\n\n /**page open at the top portion end**/\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { UploadOutput, UploadInput, UploadFile, UploaderOptions } from 'ngx-uploader'\nimport { AppRoutingModule } from './modules/app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CommonModule } from '@angular/common';\nimport { TransferHttpCacheModule } from '@nguniversal/common';\nimport { NgtUniversalModule } from '@ng-toolkit/universal';\nimport { LoginComponent } from './components/auth/login/login.component';\nimport { LoginModule } from 'login-lib-influxiq'; // login library\nimport { ListingModule } from 'listing-angular7';\nimport { FileUploadModule } from 'file-upload-lib-influxiq';\nimport { DatePipe } from '@angular/common';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { MetaModule } from '@ngx-meta/core';\nimport { DeviceDetectorModule } from 'ngx-device-detector';\n\nimport { CookieService } from 'ngx-cookie-service';\nimport { AuthguardService} from './services/authguard.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpServiceService } from './services/http-service.service';\n\n/* Http Loader */\nimport { HttpLoaderComponent } from './components/common/http-loader/http-loader.component';\nimport { HttpLoaderService } from './services/http-loader.service';\nimport { HTTP_INTERCEPTORS, HttpClient } from '@angular/common/http';\nimport { LoaderInterceptor } from './class/common/loader.interceptor';\n\n/* Common Function */\nimport { CommonFunction } from './class/common/common-function';\n\n// modules\nimport { DemoMaterialModule } from '../app/modules/materialModule';\nimport { ForgetpasswordComponent } from './components/auth/forgetpassword/forgetpassword.component';\nimport { ResetpasswordComponent } from './components/auth/resetpassword/resetpassword.component';\n\n/* Component (Common uses) Start Here */\nimport { DialogBoxComponent } from './components/common/dialog-box/dialog-box.component';\nimport { UploadDialogBoxComponent } from './components/common/upload-dialog-box/upload-dialog-box.component';\nimport { PasswordDialogBoxComponent } from './components/common/password-dialog-box/password-dialog-box.component';\n\n/* Component (Common uses) End Here */\n\n/* Components (Pages) Start Here */\n/* >>>>------> Admin <------<<<< */\nimport { AdminDashboardComponent } from './components/admin/admin-dashboard/admin-dashboard.component';\nimport { AddEditComponent,ChangePasswordAdminModal } from './components/admin/admin-management/add-edit/add-edit.component';\nimport { ManageAdminListComponent } from './components/admin/admin-management/manage-admin-list/manage-admin-list.component';\nimport { AdminHeaderComponent } from './components/admin/admin-header/admin-header.component';\nimport { AddeditDoctorComponent, ChangePasswordDoctorModal,  } from './components/admin/doctor-management/addedit-doctor/addedit-doctor.component';\nimport { ListDoctorComponent } from './components/admin/doctor-management/list-doctor/list-doctor.component';\nimport { AddEditBillerComponent ,ChangePasswordModal}from './components/admin/biller-management/add-edit-biller/add-edit-biller.component';\nimport { ListingBillerComponent } from './components/admin/biller-management/listing-biller/listing-biller.component';\nimport { ListingTechComponent } from './components/admin/tech-management/listing-tech/listing-tech.component';\nimport { AddEditTechComponent,Dialogtest } from './components/admin/tech-management/add-edit-tech/add-edit-tech.component';\nimport { AccountSettingsComponent } from './components/common/account-settings/account-settings.component';\nimport { ChangePasswordComponent } from './components/common/account-settings/change-password/change-password.component';\nimport { UserAddEditComponent } from './components/admin/user-management/user-add-edit/user-add-edit.component';\n\n/* >>>>------> Tech <------<<<< */\nimport { TechDashboardComponent,DoctorViewDialogComponent } from './components/tech/tech-dashboard/tech-dashboard.component';\nimport { TechHeaderComponent } from './components/tech/tech-header/tech-header.component';\nimport { AddEditPatientComponent  } from './components/admin/admin-dashboard/add-edit-patient/add-edit-patient.component';\nimport { BulkUploadComponent } from './components/tech/patient-management/bulk-upload/bulk-upload.component';\n\n/* >>>>------> Doctor <------<<<< */\nimport { DoctorDashboardComponent } from './components/doctor/doctor-dashboard/doctor-dashboard.component';\nimport { DoctorHeaderComponent } from './components/doctor/doctor-header/doctor-header.component';\n\n/* >>>>------> Biller <------<<<< */\nimport { BillerDashboardComponent } from './components/biller/biller-dashboard/biller-dashboard.component';\nimport { BillerHeaderComponent } from './components/biller/biller-header/biller-header.component';\n\n/* Components (Pages) End Here */\n\n/* testing purpose start here */\nimport { TestComponent } from './components/test/test.component';\nimport { HealthriskSystemEncounterComponent } from './components/doctor/doctor-dashboard/patient-report-view/healthrisk-system-encounter/healthrisk-system-encounter.component';\nimport { SystemSuperbillComponent } from './components/doctor/doctor-dashboard/patient-report-view/system-superbill/system-superbill.component';\nimport { HealthRiskAnalysisComponent } from './components/doctor/doctor-dashboard/patient-report-view/health-risk-analysis/health-risk-analysis.component';\nimport { ReportDetailsComponent } from './components/tech/report-details/report-details.component';\nimport { NotFoundErrorComponent } from './components/common/not-found-error/not-found-error.component';\nimport { AdminFooterComponent } from './components/admin/admin-footer/admin-footer.component';\nimport { BillerFooterComponent } from './components/biller/biller-footer/biller-footer.component';\nimport { TechFooterComponent } from './components/tech/tech-footer/tech-footer.component';\nimport { DoctorFooterComponent } from './components/doctor/doctor-footer/doctor-footer.component'; \nimport { SignatureManagementComponent } from './components/doctor/signature-management/signature-management.component';\nimport { DoctorOfficeManagementComponent } from './components/admin/doctor-office-management/doctor-office-management.component';\nimport { AddEditDoctorOfcComponent,ChangePasswordDoctorOfficeModal } from './components/admin/doctor-office-management/add-edit-doctor-ofc/add-edit-doctor-ofc.component';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { BookedAppoinmentsComponent } from './components/admin/booked-appoinments/booked-appoinments.component';\nimport { ManageScheduleComponent } from './components/tech/tech-dashboard/manage-calender/manage-schedule/manage-schedule.component';\nimport { ListComponent } from './components/tech/tech-dashboard/manage-calender/my-appointments/list/list.component'; \nimport { DoctorOfficeDashboardComponent } from './components/doctor-office/doctor-office-dashboard/doctor-office-dashboard.component';\nimport { DoctorOfficeHeaderComponent } from './components/doctor-office/doctor-office-header/doctor-office-header.component';\nimport { DoctorOfficeFooterComponent } from './components/doctor-office/doctor-office-footer/doctor-office-footer.component';\nimport { DoctorOfficeAccountSettingsComponent } from './components/doctor-office/doctor-office-account-settings/doctor-office-account-settings.component';\n\n \nimport { LogoutComponent } from './components/auth/logout/logout.component';\nimport { DoctorOfficeChangePasswordComponent } from './components/doctor-office/doctor-office-change-password/doctor-office-change-password.component';\nimport { PatientReportViewComponent } from './components/doctor/doctor-dashboard/patient-report-view/patient-report-view.component';\nimport { EditPatientRecordComponent } from './components/admin/admin-dashboard/edit-patient-record/edit-patient-record.component';\nimport { ReportNotProcessComponent } from './components/admin/report-not-process/report-not-process.component';\nimport { DownloadSuperbillerComponent } from './components/biller/download-superbiller/download-superbiller.component';\nimport { DownloadDetailsComponent } from './components/admin/admin-dashboard/download-details/download-details.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    // Auth\n    LoginComponent,\n    ForgetpasswordComponent,\n    ResetpasswordComponent,\n\n    // dashboard\n    TechDashboardComponent,\n    AdminDashboardComponent,\n    BillerDashboardComponent,\n    DoctorDashboardComponent,\n    //user-management\n    UserAddEditComponent,\n    // Test\n    TestComponent,\n    AddEditComponent,\n    ManageAdminListComponent,\n    AdminHeaderComponent,\n    AddeditDoctorComponent,\n    ListDoctorComponent,\n    ChangePasswordDoctorModal,\n    AddEditBillerComponent,\n    ListingBillerComponent,\n    ListingTechComponent,\n    AddEditTechComponent,\n    Dialogtest,\n    ChangePasswordModal,\n    ChangePasswordDoctorOfficeModal,\n    ChangePasswordAdminModal,\n    AccountSettingsComponent,\n    ChangePasswordComponent,\n    AddEditPatientComponent,\n    DialogBoxComponent,\n    BulkUploadComponent,\n    UploadDialogBoxComponent,\n    BillerHeaderComponent,\n    DoctorHeaderComponent,\n    TechHeaderComponent, \n    HealthriskSystemEncounterComponent, SystemSuperbillComponent,\n    HealthRiskAnalysisComponent,\n    ReportDetailsComponent,\n    HttpLoaderComponent,\n    NotFoundErrorComponent,\n    AdminFooterComponent,\n    BillerFooterComponent,\n    TechFooterComponent,\n    DoctorFooterComponent,\n    SignatureManagementComponent,\n    PasswordDialogBoxComponent,\n    DoctorOfficeManagementComponent,\n    AddEditDoctorOfcComponent,\n    BookedAppoinmentsComponent,\n    ManageScheduleComponent,\n    ListComponent,\n    DoctorOfficeDashboardComponent,\n    DoctorOfficeHeaderComponent,\n    DoctorOfficeFooterComponent,\n    BookedAppoinmentsComponent,\n    DoctorOfficeAccountSettingsComponent,\n    DoctorOfficeChangePasswordComponent,\n    LogoutComponent,\n    PatientReportViewComponent,\n    DoctorViewDialogComponent,\n    EditPatientRecordComponent,\n    ReportNotProcessComponent,\n    DownloadSuperbillerComponent,\n    DownloadDetailsComponent\n  ],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'serverApp' }),\n    MetaModule.forRoot(),\n    AppRoutingModule,\n    CommonModule,\n    TransferHttpCacheModule,\n    HttpClientModule,\n    NgtUniversalModule,\n    DemoMaterialModule,\n    LoginModule,\n    ListingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FileUploadModule,\n    HttpClientModule,\n    DeviceDetectorModule.forRoot()\n  ],\n  exports: [MatPaginatorModule],\n\n  providers: [HttpLoaderService, { provide: HTTP_INTERCEPTORS, useClass: LoaderInterceptor, multi: true }, CookieService, AuthguardService, HttpServiceService, DatePipe, CommonFunction],\n  bootstrap: [AppComponent],\n  entryComponents:[\n    ChangePasswordDoctorModal,\n    Dialogtest,ChangePasswordModal,\n    ChangePasswordAdminModal,\n    ChangePasswordDoctorOfficeModal,\n    DialogBoxComponent,\n    PasswordDialogBoxComponent,\n    UploadDialogBoxComponent,\n    TestComponent,\n    DoctorViewDialogComponent,\n    DownloadDetailsComponent\n  ]\n\n})\nexport class AppModule {\n\n  constructor(public http: HttpClient) {\n    // this.http.get('localhost/api/googleapiphp/powertag.php?q=car&count=3')\n    //   .subscribe((r) => {\n    //     console.log(r);\n    //   });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { ServerModule, ServerTransferStateModule } from '@angular/platform-server';\n\nimport { AppModule } from './app.module';\nimport { AppComponent } from './app.component';\nimport { ModuleMapLoaderModule } from '@nguniversal/module-map-ngfactory-loader';\n\n@NgModule({\n  imports: [\n    AppModule,\n    ServerModule,\n    ModuleMapLoaderModule,\n    ServerTransferStateModule,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppServerModule {}\n","import { Injectable } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MetaService } from '@ngx-meta/core';\nimport {\n    FormBuilder,\n    FormGroup,\n    Validators,\n    AbstractControl\n} from '@angular/forms';\nimport { HttpServiceService } from '../../services/http-service.service';\n\n@Injectable()\n\nexport class CommonFunction {\n\n    constructor(public httpServiceService: HttpServiceService, private readonly meta: MetaService, public cookie: CookieService, public router: Router, public activeRoute: ActivatedRoute) { }\n\n    setTitleMetaTags(): any {\n        let url = this.router.url;\n        var urlArr = url.split(\"/\");\n        var title = '';\n        for (let loop = 1; loop < urlArr.length; loop++) {\n            urlArr[loop] = urlArr[loop].replace(\"-\", \" \");\n            urlArr[loop] = this.titleCase(urlArr[loop]);\n            switch (urlArr[loop]) {\n                case 'Admin':\n                    break;\n                case 'Tech':\n                    break;\n                case 'Doctor':\n                    break;\n                case 'Doctor Office':\n                    break;\n                case 'List':\n                    break;\n                case 'Add':\n                    title = title + '- Create New ';\n                    break;\n                case 'Bulk Upload':\n                    title = title + '- Bulk Report Upload ';\n                    break;\n                case 'Change Password':\n                    title = title + '- Change Password ';\n                    break;\n                case 'Edit':\n                    title = title + '- Update Record ';\n                    loop = urlArr.length\n                    break;\n                default:\n                    title += urlArr[loop] + ' ';\n                    break;\n            }\n        }\n\n        let getToken: boolean = this.cookie.check('jwtToken');\n\n        if (getToken) {\n            let allcookies: any = this.cookie.getAll();\n            let userData = JSON.parse(allcookies.user_details);\n            switch (urlArr[1]) {\n                case 'Doctor Office':\n                    title = title + '| ' + userData.centerName + ' - AWS Backend';\n                    break;\n                default:\n                    title = title + '| ' + userData.firstname + ' ' + userData.lastname + ' - AWS Backend';\n                    break;\n            }\n        } else {\n            title = 'Welcome to AWS Backend | ' + title;\n        }\n\n        /* Set Meta Data */\n        this.meta.setTitle(title);\n        this.meta.setTag('og:description', 'Welcome to AWS Backend.');\n        this.meta.setTag('og:title', 'Welcome to AWS Backend.');\n        this.meta.setTag('og:type', 'website');\n        this.meta.setTag('og:image', 'favicon.ico');\n    }\n\n    titleCase(str) {\n        var splitStr = str.toLowerCase().split(' ');\n        for (var i = 0; i < splitStr.length; i++) {\n            // You do not need to check if i is larger than splitStr length, as your for does that for you\n            // Assign it back to the array\n            splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\n        }\n        // Directly return the joined string\n        return splitStr.join(' ');\n    }\n\n    randomNumber(length): any {\n        var result           = '';\n        var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        var charactersLength = characters.length;\n        for ( var i = 0; i < length; i++ ) {\n           result += characters.charAt(Math.floor(Math.random() * charactersLength));\n        }\n        return result;\n     }\n\n}\n","import { Injectable } from '@angular/core';\nimport {\n    HttpErrorResponse,\n    HttpResponse,\n    HttpRequest,\n    HttpHandler,\n    HttpEvent,\n    HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { HttpLoaderService } from '../../services/http-loader.service';\n \n@Injectable()\nexport class LoaderInterceptor implements HttpInterceptor {\n    private requests: HttpRequest<any>[] = [];\n \n    constructor(private loaderService: HttpLoaderService) { }\n \n    removeRequest(req: HttpRequest<any>) {\n        const i = this.requests.indexOf(req);\n        if (i >= 0) {\n            this.requests.splice(i, 1);\n        }\n        this.loaderService.isLoading.next(this.requests.length > 0);\n    }\n \n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n \n        this.requests.push(req);\n\n        this.loaderService.isLoading.next(true);\n        return Observable.create(observer => {\n            const subscription = next.handle(req)\n                .subscribe(\n                    event => {\n                        if (event instanceof HttpResponse) {\n                            this.removeRequest(req);\n                            observer.next(event);\n                        }\n                    },\n                    err => {\n                        console.log('Error occord.');\n                        this.removeRequest(req);\n                        observer.error(err);\n                    },\n                    () => {\n                        this.removeRequest(req);\n                        observer.complete();\n                    });\n            // remove request from queue when cancelled\n            return () => {\n                this.removeRequest(req);\n                subscription.unsubscribe();\n            };\n        });\n    }\n}","<app-admin-header></app-admin-header>\n<mat-card class=\"admin_wrapper\">\n  <mat-card-content class=\"title_wrapper\">\n    {{ htmlText.header }}\n  </mat-card-content>\n\n  <span class=\"add_header\">\n    <span class=\"bradcrumb\">\n      <a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp;{{ htmlText.nav }}\n    </span>\n  </span>\n\n  <mat-card class=\"add_form\">\n    <mat-card-content>\n      <form class=\"example-form\" autocomplete=\"off\" name=\"patientAddEditForm\" [formGroup]=\"patientAddEditForm\"\n        (ngSubmit)=\"patientAddEditFormSubmit()\">\n\n        <fieldset class=\"field_setmodel\">\n          <legend class=\"legend_model\">Patients Information:</legend>\n\n          <span class=\"patients_info_wrapper\">\n            <mat-card-content>\n              <label>Patient Name</label>\n              <mat-form-field>\n                <input matInput [formControl]=\"patientAddEditForm.controls['patientName']\" (blur)=\"inputUntouch(patientAddEditForm,'patientName')\">\n                <mat-error *ngIf=\"patientAddEditForm.controls['patientName'].touched && !patientAddEditForm.controls['patientName'].valid && patientAddEditForm.controls['patientName'].errors.required\">Patient Name can not be blank</mat-error>\n              </mat-form-field>\n            </mat-card-content>\n\n            <mat-card-content>\n              <label>Patient Gender</label>\n              <span class=\"patientGender\">\n                <input type=\"radio\" value='Male' [formControl]=\"patientAddEditForm.controls['gender']\">Male\n                <input type=\"radio\" value='Female' [formControl]=\"patientAddEditForm.controls['gender']\">Female\n              </span>\n\n              <mat-error *ngIf=\"patientAddEditForm.controls['gender'].touched && !patientAddEditForm.controls['gender'].valid && patientAddEditForm.controls['gender'].errors.required\">Birth Date can not be blank.</mat-error>\n            </mat-card-content>\n\n            <mat-card-content>\n              <label> Date of birth</label>\n              <mat-form-field>\n                <input matInput [matDatepicker]=\"dobPicker\" [formControl]=\"patientAddEditForm.controls['birthDate']\">\n                <mat-datepicker-toggle matSuffix [for]=\"dobPicker\"></mat-datepicker-toggle>\n                <mat-datepicker #dobPicker></mat-datepicker>\n\n                <mat-error *ngIf=\"patientAddEditForm.controls['birthDate'].touched && !patientAddEditForm.controls['birthDate'].valid && patientAddEditForm.controls['birthDate'].errors.required\">Birth Date can not be blank.</mat-error>\n              </mat-form-field>\n            </mat-card-content>\n\n            <mat-card-content>\n              <label>Ordering Physician</label>\n              <mat-form-field>\n                <mat-select [formControl]=\"patientAddEditForm.controls['doctor_id']\" placeholder=\"Select a Doctor\" (selectionChange)=\"getTechList($event.value);\">\n                  <mat-option>Select a Doctor</mat-option>\n                  <mat-option *ngFor=\"let doc of this.htmlText.allDoctor;\" value=\"{{ doc._id }}\"> {{ doc.fullNamecopy }}\n                  </mat-option>\n                </mat-select>\n\n                <mat-error *ngIf=\"patientAddEditForm.controls['doctor_id'].touched && !patientAddEditForm.controls['doctor_id'].valid && patientAddEditForm.controls['doctor_id'].errors.required\">Select a doctor.</mat-error>\n              </mat-form-field>\n            </mat-card-content>\n\n            <mat-card-content>\n              <label> Tech Name </label>\n              <mat-form-field>\n                <mat-select [formControl]=\"patientAddEditForm.controls['tech_id']\" placeholder=\"Select a Tech\">\n                  <mat-option>Select a Tech</mat-option>\n                  <mat-option *ngFor=\"let doc of htmlText.allTech;\" value=\"{{ doc.tech_id }}\"> {{ doc.tech }}\n                  </mat-option>\n                </mat-select>\n\n                <mat-error *ngIf=\"patientAddEditForm.controls['tech_id'].touched && !patientAddEditForm.controls['tech_id'].valid && patientAddEditForm.controls['tech_id'].errors.required\">Select a tech.</mat-error>\n              </mat-form-field>\n            </mat-card-content>\n\n            <mat-card-content>\n              <label> Test Date</label>\n              <mat-form-field>\n                <input matInput [matDatepicker]=\"testDatePicker\" [formControl]=\"patientAddEditForm.controls['testDate']\">\n                <mat-datepicker-toggle matSuffix [for]=\"testDatePicker\"></mat-datepicker-toggle>\n                <mat-datepicker #testDatePicker></mat-datepicker>\n              </mat-form-field>\n\n              <mat-error *ngIf=\"patientAddEditForm.controls['testDate'].touched && !patientAddEditForm.controls['testDate'].valid && patientAddEditForm.controls['testDate'].errors.required\">Test date can not be blank.</mat-error>\n            </mat-card-content>\n\n            <mat-card-content>\n              <label> Test Completed</label>\n              <mat-form-field>\n                <input matInput [matDatepicker]=\"testCompletedDatePicker\" [formControl]=\"patientAddEditForm.controls['testCompletedDate']\">\n                <mat-datepicker-toggle matSuffix [for]=\"testCompletedDatePicker\"></mat-datepicker-toggle>\n                <mat-datepicker #testCompletedDatePicker></mat-datepicker>\n              </mat-form-field>\n\n              <mat-error *ngIf=\"patientAddEditForm.controls['testCompletedDate'].touched && !patientAddEditForm.controls['testCompletedDate'].valid && patientAddEditForm.controls['testCompletedDate'].errors.required\">Test Completed Date can not be blank.</mat-error>\n            </mat-card-content>\n          </span>\n        </fieldset>\n\n        <br>\n\n        <fieldset class=\"field_setmodel\">\n          <legend class=\"legend_model\">RM-3A Status report</legend>\n          <span class=\"test_date_wrapper\">\n\n            <mat-card-content>\n              <label>PTGTP</label>\n              <mat-form-field>\n                <mat-select [formControl]=\"patientAddEditForm.controls['PTGPT']\" (blur)=\"inputUntouch(patientAddEditForm,'PTGPT')\" placeholder=\"Select a Option\">\n                  <mat-option>Select a option</mat-option>\n                  <mat-option value=\"N\"> Normal</mat-option>\n                  <mat-option value=\"A\"> Abnormal</mat-option>\n                  <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                </mat-select>\n                \n                <mat-error *ngIf=\"patientAddEditForm.controls['PTGPT'].touched && !patientAddEditForm.controls['PTGPT'].valid && patientAddEditForm.controls['PTGPT'].errors.required\">PTGTP Required.</mat-error>\n              </mat-form-field>\n\n              <mat-form-field class=\"subValue\">\n                <input matInput [formControl]=\"patientAddEditForm.controls['PTGPT_value']\" placeholder=\"PTGPT value\" />\n                <mat-hint align=\"start\"> <strong>Optional field.</strong></mat-hint>\n              </mat-form-field>\n            </mat-card-content>\n\n\n            <mat-card-content>\n              <label> PTGVLFI </label>\n              <mat-form-field>\n                <mat-select [formControl]=\"patientAddEditForm.controls['PTGVLFI']\" (blur)=\"inputUntouch(patientAddEditForm,'PTGVLFI')\" placeholder=\"Select a Option\">\n                  <mat-option>Select a option</mat-option>\n                  <mat-option value=\"N\"> Normal</mat-option>\n                  <mat-option value=\"A\"> Abnormal</mat-option>\n                  <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                </mat-select>\n\n                <mat-error *ngIf=\"patientAddEditForm.controls['PTGVLFI'].touched && !patientAddEditForm.controls['PTGVLFI'].valid && patientAddEditForm.controls['PTGVLFI'].errors.required\">PTGVLFI required.</mat-error>\n              </mat-form-field>\n\n              <mat-form-field class=\"subValue\">\n                <input matInput [formControl]=\"patientAddEditForm.controls['PTGVLFI_value']\" placeholder=\"PTGVLFI value\" />\n              </mat-form-field>\n            </mat-card-content>\n\n\n            <mat-card-content>\n              <label> IR </label>\n              <mat-form-field>\n                <mat-select [formControl]=\"patientAddEditForm.controls['IR']\" (blur)=\"inputUntouch(patientAddEditForm,'IR')\" placeholder=\"Select a Option\">\n                  <mat-option>Select a option</mat-option>\n                  <mat-option value=\"N\"> Normal</mat-option>\n                  <mat-option value=\"A\"> Abnormal</mat-option>\n                  <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                </mat-select>\n\n                <mat-error *ngIf=\"patientAddEditForm.controls['IR'].touched && !patientAddEditForm.controls['IR'].valid && patientAddEditForm.controls['IR'].errors.required\">IR required.</mat-error>\n              </mat-form-field>\n\n              <mat-form-field class=\"subValue\">\n                <input matInput [formControl]=\"patientAddEditForm.controls['IR_value']\" placeholder=\"IR value\" />\n              </mat-form-field>\n            </mat-card-content>\n\n\n            <mat-card-content>\n              <label> ESRNO<br> (Baseline) </label>\n                <mat-form-field>\n                  <mat-select [formControl]=\"patientAddEditForm.controls['ESRNO']\" (blur)=\"inputUntouch(patientAddEditForm,'ESRNO')\" placeholder=\"Select a Option\">\n                    <mat-option>Select a option</mat-option>\n                    <mat-option value=\"N\"> Normal</mat-option>\n                    <mat-option value=\"A\"> Abnormal</mat-option>\n                    <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                  </mat-select>\n                  \n                  <mat-error *ngIf=\"patientAddEditForm.controls['ESRNO'].touched && !patientAddEditForm.controls['ESRNO'].valid && patientAddEditForm.controls['ESRNO'].errors.required\">ESRNO required.</mat-error>\n                </mat-form-field>\n\n                <mat-form-field class=\"subValue\">\n                  <input matInput [formControl]=\"patientAddEditForm.controls['ESRNO_value']\" placeholder=\"ESRNO value\" />\n                </mat-form-field>\n            </mat-card-content>\n\n\n            <mat-card-content>\n              <label> ESR L<br> (Latency) </label>\n              <mat-form-field>\n                <mat-select [formControl]=\"patientAddEditForm.controls['ESRL']\" (blur)=\"inputUntouch(patientAddEditForm,'ESRL')\" placeholder=\"Select a Option\">\n                  <mat-option>Select a option</mat-option>\n                  <mat-option value=\"N\"> Normal</mat-option>\n                  <mat-option value=\"A\"> Abnormal</mat-option>\n                  <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                </mat-select>\n\n                <mat-error *ngIf=\"patientAddEditForm.controls['ESRL'].touched && !patientAddEditForm.controls['ESRL'].valid && patientAddEditForm.controls['ESRL'].errors.required\">ESR L required.</mat-error>\n              </mat-form-field>\n\n              <mat-form-field class=\"subValue\">\n                <input matInput [formControl]=\"patientAddEditForm.controls['ESRL_value']\" placeholder=\"ESRL value\" />\n              </mat-form-field>\n            </mat-card-content>\n\n\n            <mat-card-content>\n              <label> Peak C <br> (Amplitude) </label>\n              <mat-form-field>\n                <mat-select [formControl]=\"patientAddEditForm.controls['peakC']\" (blur)=\"inputUntouch(patientAddEditForm,'peakC')\" placeholder=\"Select a Option\">\n                  <mat-option>Select a option</mat-option>\n                  <mat-option value=\"N\"> Normal</mat-option>\n                  <mat-option value=\"A\"> Abnormal</mat-option>\n                  <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                </mat-select>\n\n                <mat-error *ngIf=\"patientAddEditForm.controls['peakC'].touched && !patientAddEditForm.controls['peakC'].valid && patientAddEditForm.controls['peakC'].errors.required\">Peak C required.</mat-error>\n              </mat-form-field>\n\n              <mat-form-field class=\"subValue\">\n                <input matInput [formControl]=\"patientAddEditForm.controls['peakC_value']\" placeholder=\"peakC value\" />\n              </mat-form-field>\n            </mat-card-content>\n\n\n            <mat-card-content>\n              <label> PTG Type <br> (EnterType 1-5) </label>\n              <mat-form-field>\n                <mat-select [formControl]=\"patientAddEditForm.controls['PTGtype']\" (blur)=\"inputUntouch(patientAddEditForm,'PTGtype')\" placeholder=\"Select a Option\">\n                  <mat-option>Select a option</mat-option>\n                  <mat-option value=\"N\"> Normal</mat-option>\n                  <mat-option value=\"A\"> Abnormal</mat-option>\n                  <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                </mat-select>\n\n                <mat-error *ngIf=\"patientAddEditForm.controls['PTGtype'].touched && !patientAddEditForm.controls['PTGtype'].valid && patientAddEditForm.controls['PTGtype'].errors.required\">PTG Type required.</mat-error>\n              </mat-form-field>\n\n              <mat-form-field class=\"subValue\">\n                <input matInput [formControl]=\"patientAddEditForm.controls['PTGtype_value']\" placeholder=\"PTG Type value\" />\n              </mat-form-field>\n            </mat-card-content>\n\n\n            <mat-card-content>\n              <label> PTG CVD </label>\n              <mat-form-field>\n                <mat-select [formControl]=\"patientAddEditForm.controls['PTGCVD']\" (blur)=\"inputUntouch(patientAddEditForm,'PTGCVD')\" placeholder=\"Select a Option\">\n                  <mat-option>Select a option</mat-option>\n                  <mat-option value=\"N\"> Normal</mat-option>\n                  <mat-option value=\"A\"> Abnormal</mat-option>\n                  <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                </mat-select>\n\n                <mat-error *ngIf=\"patientAddEditForm.controls['PTGCVD'].touched && !patientAddEditForm.controls['PTGCVD'].valid && patientAddEditForm.controls['PTGCVD'].errors.required\">PTG CVD required.</mat-error>\n              </mat-form-field>\n\n              <mat-form-field class=\"subValue\">\n                <input matInput [formControl]=\"patientAddEditForm.controls['PTGCVD_value']\" placeholder=\"PTGCVD value\" />\n              </mat-form-field>\n            </mat-card-content>\n\n\n            <mat-card-content>\n              <label> Stress I <br> (Stress Index) </label>\n              <mat-form-field>\n                <mat-select [formControl]=\"patientAddEditForm.controls['stressI']\" (blur)=\"inputUntouch(patientAddEditForm,'stressI')\" placeholder=\"Select a Option\">\n                  <mat-option>Select a option</mat-option>\n                  <mat-option value=\"N\"> Normal</mat-option>\n                  <mat-option value=\"A\"> Abnormal</mat-option>\n                  <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                </mat-select>\n\n                <mat-error *ngIf=\"patientAddEditForm.controls['stressI'].touched && !patientAddEditForm.controls['stressI'].valid && patientAddEditForm.controls['stressI'].errors.required\">Stress I required.</mat-error>\n              </mat-form-field>\n\n              <mat-form-field class=\"subValue\">\n                <input matInput [formControl]=\"patientAddEditForm.controls['stressI_value']\" placeholder=\"Stress I value\" />                \n              </mat-form-field>\n            </mat-card-content>\n\n\n            <mat-card-content>\n              <label> RI </label>\n              <mat-form-field>\n                <mat-select [formControl]=\"patientAddEditForm.controls['RI']\" (blur)=\"inputUntouch(patientAddEditForm,'RI')\" placeholder=\"Select a Option\">\n                  <mat-option>Select a option</mat-option>\n                  <mat-option value=\"N\"> Normal</mat-option>\n                  <mat-option value=\"A\"> Abnormal</mat-option>\n                  <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                </mat-select>\n\n                <mat-error *ngIf=\"patientAddEditForm.controls['RI'].touched && !patientAddEditForm.controls['RI'].valid && patientAddEditForm.controls['RI'].errors.required\">RI required.</mat-error>\n              </mat-form-field>\n\n              <mat-form-field class=\"subValue\">\n                <input matInput [formControl]=\"patientAddEditForm.controls['RI_value']\" placeholder=\"Stress I value\" />\n              </mat-form-field>\n            </mat-card-content>\n\n            <mat-card-content>\n              <label> AIPTG<br> (IPTG) </label>\n              <mat-form-field>\n                <mat-select [formControl]=\"patientAddEditForm.controls['AIPTG']\" (blur)=\"inputUntouch(patientAddEditForm,'AIPTG')\" placeholder=\"Select a Option\">\n                  <mat-option>Select a option</mat-option>\n                  <mat-option value=\"N\"> Normal</mat-option>\n                  <mat-option value=\"A\"> Abnormal</mat-option>\n                  <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                </mat-select>\n\n                <mat-error *ngIf=\"patientAddEditForm.controls['AIPTG'].touched && !patientAddEditForm.controls['AIPTG'].valid && patientAddEditForm.controls['AIPTG'].errors.required\">AIPTG required.</mat-error>\n              </mat-form-field>\n\n              <mat-form-field class=\"subValue\">\n                <input matInput [formControl]=\"patientAddEditForm.controls['AIPTG_value']\" placeholder=\"AIPTG value\" />\n              </mat-form-field>\n            </mat-card-content>\n\n\n            <mat-card-content>\n              <label> CIs (CI) </label>\n              <mat-form-field>\n                <mat-select [formControl]=\"patientAddEditForm.controls['CIsCI']\" (blur)=\"inputUntouch(patientAddEditForm, 'CIsCI')\" placeholder=\"Select a Option\">\n                  <mat-option>Select a option</mat-option>\n                  <mat-option value=\"N\"> Normal</mat-option>\n                  <mat-option value=\"A\"> Abnormal</mat-option>\n                  <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                </mat-select>\n\n                <mat-error *ngIf=\"patientAddEditForm.controls['CIsCI'].touched && !patientAddEditForm.controls['CIsCI'].valid && patientAddEditForm.controls['CIsCI'].errors.required\">CIs (CI) required.</mat-error>\n              </mat-form-field>\n\n              <mat-form-field class=\"subValue\">\n                <input matInput [formControl]=\"patientAddEditForm.controls['CIsCI_value']\" placeholder=\"CIsCI value\">\n              </mat-form-field>\n            </mat-card-content>\n\n\n            <mat-card-content>\n              <label> pNN50 </label>\n              <mat-form-field>\n                <mat-select [formControl]=\"patientAddEditForm.controls['pNN50']\" (blur)=\"inputUntouch(patientAddEditForm,'pNN50')\" placeholder=\"Select a Option\">\n                  <mat-option>Select a option</mat-option>\n                  <mat-option value=\"N\"> Normal</mat-option>\n                  <mat-option value=\"A\"> Abnormal</mat-option>\n                  <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                </mat-select>\n\n                <mat-error *ngIf=\"patientAddEditForm.controls['pNN50'].touched && !patientAddEditForm.controls['pNN50'].valid && patientAddEditForm.controls['pNN50'].errors.required\">pNN50 required.</mat-error>\n              </mat-form-field>\n\n              <mat-form-field class=\"subValue\">\n                <input matInput [formControl]=\"patientAddEditForm.controls['pNN50_value']\" placeholder=\"pNN50 value\" />\n              </mat-form-field>\n            </mat-card-content>\n\n\n            <mat-card-content>\n              <label> RMSSD </label>\n              <mat-form-field>\n                <mat-select [formControl]=\"patientAddEditForm.controls['RMSSD']\" (blur)=\"inputUntouch(patientAddEditForm,'pNN50')\" placeholder=\"Select a Option\">\n                  <mat-option>Select a option</mat-option>\n                  <mat-option value=\"N\"> Normal</mat-option>\n                  <mat-option value=\"A\"> Abnormal</mat-option>\n                  <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                </mat-select>\n\n                <mat-error *ngIf=\"patientAddEditForm.controls['RMSSD'].touched && !patientAddEditForm.controls['RMSSD'].valid && patientAddEditForm.controls['RMSSD'].errors.required\">RMSSD required.</mat-error>\n              </mat-form-field>\n\n              <mat-form-field class=\"subValue\">\n                <input matInput [formControl]=\"patientAddEditForm.controls['RMSSD_value']\" placeholder=\"RMSSD value\" />\n              </mat-form-field>\n            </mat-card-content>\n\n\n            <mat-card-content>\n              <label> SD ba - </label>\n              <mat-form-field>\n                <mat-select [formControl]=\"patientAddEditForm.controls['SDba']\" (blur)=\"inputUntouch(patientAddEditForm,'SDba')\" placeholder=\"Select a Option\">\n                  <mat-option>Select a option</mat-option>\n                  <mat-option value=\"N\"> Normal</mat-option>\n                  <mat-option value=\"A\"> Abnormal</mat-option>\n                  <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                </mat-select>\n\n                <mat-error *ngIf=\"patientAddEditForm.controls['SDba'].touched && !patientAddEditForm.controls['SDba'].valid && patientAddEditForm.controls['SDba'].errors.required\">SD ba - required.</mat-error>\n              </mat-form-field>\n\n              <mat-form-field class=\"subValue\">\n                <input matInput [formControl]=\"patientAddEditForm.controls['SDba_value']\" placeholder=\"SDba value\" />\n              </mat-form-field>\n            </mat-card-content>\n\n\n            <mat-card-content>\n              <label> SD da </label>\n              <mat-form-field>\n                <mat-select [formControl]=\"patientAddEditForm.controls['SDda']\" (blur)=\"inputUntouch(patientAddEditForm,'SDda')\" placeholder=\"Select a Option\">\n                  <mat-option>Select a option</mat-option>\n                  <mat-option value=\"N\"> Normal</mat-option>\n                  <mat-option value=\"A\"> Abnormal</mat-option>\n                  <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                </mat-select>\n\n                <mat-error *ngIf=\"patientAddEditForm.controls['SDda'].touched && !patientAddEditForm.controls['SDda'].valid && patientAddEditForm.controls['SDda'].errors.required\">SD da required.</mat-error>\n              </mat-form-field>\n\n              <mat-form-field class=\"subValue\">\n                <input matInput [formControl]=\"patientAddEditForm.controls['SDda_value']\" placeholder=\"SDda value\" />\n              </mat-form-field>\n            </mat-card-content>\n\n\n            <mat-card-content>\n              <label>DPRS </label>\n              <mat-form-field>\n                <mat-select [formControl]=\"patientAddEditForm.controls['DPRS']\" (blur)=\"inputUntouch(patientAddEditForm,'DPRS')\" placeholder=\"Select a Option\">\n                  <mat-option>Select a option</mat-option>\n                  <mat-option value=\"N\"> Normal</mat-option>\n                  <mat-option value=\"A\"> Abnormal</mat-option>\n                  <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                </mat-select>\n\n                <mat-error *ngIf=\"patientAddEditForm.controls['DPRS'].touched && !patientAddEditForm.controls['DPRS'].valid && patientAddEditForm.controls['DPRS'].errors.required\">DPRS required.</mat-error>\n              </mat-form-field>\n\n              <mat-form-field class=\"subValue\">\n                <input matInput [formControl]=\"patientAddEditForm.controls['DPRS_value']\" placeholder=\"DPRS value\" />\n              </mat-form-field>\n            </mat-card-content>\n\n            <mat-card-content>\n              <label>ValsR. </label>\n              <mat-form-field>\n                <mat-select [formControl]=\"patientAddEditForm.controls['ValsR']\" (blur)=\"inputUntouch(patientAddEditForm,'ValsR')\" placeholder=\"Select a Option\">\n                  <mat-option>Select a option</mat-option>\n                  <mat-option value=\"N\"> Normal</mat-option>\n                  <mat-option value=\"A\"> Abnormal</mat-option>\n                  <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                </mat-select>\n\n                <mat-error *ngIf=\"patientAddEditForm.controls['ValsR'].touched && !patientAddEditForm.controls['ValsR'].valid && patientAddEditForm.controls['ValsR'].errors.required\">ValsR required.</mat-error>\n              </mat-form-field>\n\n              <mat-form-field class=\"subValue\">\n                <input matInput [formControl]=\"patientAddEditForm.controls['ValsR_value']\" placeholder=\"ValsR value\" />\n              </mat-form-field>\n            </mat-card-content>\n\n\n            <mat-card-content>\n              <label>BMI<br> Enter BMI Score (I.E. 29.1) </label>\n              <mat-form-field>\n                <mat-select [formControl]=\"patientAddEditForm.controls['BMI']\" (blur)=\"inputUntouch(patientAddEditForm,'BMI')\" placeholder=\"Select a Option\">\n                  <mat-option>Select a option</mat-option>\n                  <mat-option value=\"N\"> Normal</mat-option>\n                  <mat-option value=\"A\"> Abnormal</mat-option>\n                  <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                </mat-select>\n\n                <mat-error *ngIf=\"patientAddEditForm.controls['BMI'].touched && !patientAddEditForm.controls['BMI'].valid && patientAddEditForm.controls['BMI'].errors.required\">BMI required.</mat-error>\n              </mat-form-field>\n\n              <mat-form-field class=\"subValue\">\n                <input matInput [formControl]=\"patientAddEditForm.controls['BMI_value']\" placeholder=\"BMI value\" />\n              </mat-form-field>\n            </mat-card-content>\n\n\n            <mat-card-content>\n              <label>Blood Pressure<br> Systolic & Diastolic (120/80) </label>\n              <mat-form-field>\n                <mat-select [formControl]=\"patientAddEditForm.controls['bloodPressure']\" (blur)=\"inputUntouch(patientAddEditForm,'bloodPressure')\" placeholder=\"Select a Option\">\n                  <mat-option>Select a option</mat-option>\n                  <mat-option value=\"N\"> Normal</mat-option>\n                  <mat-option value=\"A\"> Abnormal</mat-option>\n                  <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                </mat-select>\n\n                <mat-error *ngIf=\"patientAddEditForm.controls['bloodPressure'].touched && !patientAddEditForm.controls['bloodPressure'].valid && patientAddEditForm.controls['bloodPressure'].errors.required\">Blood Pressure required.</mat-error>\n              </mat-form-field>\n\n              <mat-form-field class=\"subValue\">\n                <input matInput [formControl]=\"patientAddEditForm.controls['bloodPressure_value']\" placeholder=\"Blood Pressure value\" />\n              </mat-form-field>\n            </mat-card-content>\n\n          </span>\n        </fieldset>\n\n        <br>\n\n        <fieldset class=\"field_setmodel\">\n          <legend class=\"legend_model\">additional notes</legend>\n          \n          <br>\n          \n          <span class=\"patient_diagnotes\">\n            <label>Patient Diagnoses & Notes:</label>\n            <mat-form-field class=\"example-full-width\">\n\n              <textarea matInput placeholder=\"Leave a comment\" [formControl]=\"patientAddEditForm.controls['leaveNotes']\" (blur)=\"inputUntouch(patientAddEditForm,'leaveNotes')\"></textarea>\n              <mat-error *ngIf=\"patientAddEditForm.controls['leaveNotes'].touched && !patientAddEditForm.controls['leaveNotes'].valid && patientAddEditForm.controls['leaveNotes'].errors.required\">Patient Diagnoses & Notes can not be blank</mat-error>\n            </mat-form-field>\n          </span>\n\n          <span class=\"submit_form\">\n            <button mat-flat-button type=\"reset\">Reset </button>\n            <button mat-flat-button type=\"submit\"> {{ htmlText.buttonText }} </button>\n          </span>\n        </fieldset>\n      </form>\n    </mat-card-content>\n  </mat-card>\n\n</mat-card>\n\n<!-- Tech Footer -->\n<app-admin-footer></app-admin-footer>","import { Component, OnInit, Inject, ViewChild, HostListener} from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators ,FormGroupDirective } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpServiceService } from '../../../../services/http-service.service'\nimport { DatePipe } from '@angular/common';\nimport { CookieService } from 'ngx-cookie-service';\nimport { MatSnackBar } from '@angular/material';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from \"@angular/material\";\nimport { DialogBoxComponent } from '../../../common/dialog-box/dialog-box.component';\nimport { MomentDateAdapter, MAT_MOMENT_DATE_ADAPTER_OPTIONS } from '@angular/material-moment-adapter';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { CommonFunction } from '../../../../class/common/common-function';\n\nexport interface DialogData {\n  message: string;\n}\n\n@Component({\n  selector: 'app-add-edit-patient',\n  templateUrl: './add-edit-patient.component.html',\n  styleUrls: ['./add-edit-patient.component.css']\n})\n\n@HostListener('window:scroll', ['$event'])\n\nexport class AddEditPatientComponent implements OnInit {\n  \n  @ViewChild(FormGroupDirective,{static: false}) formDirective: FormGroupDirective;\n  \n  public htmlText: any = { \n    nav: 'Add Patient',\n    header:\"Add Report Manually\",\n    buttonText: \"Submit\",\n  };\n  public allCookies: any;\n  public patientAddEditForm : FormGroup;\n  public dialogRef: any;\n\n  minDate = new Date(1900, 0, 1);\n  maxDate = new Date(2016, 11, 31);\n\n  public startDate: any;\n  public endDate: any;\n  public dateOfBirth: any;\n  public dateFormat: any;\n  \n  constructor(public fb: FormBuilder, public activeRoute: ActivatedRoute,\n    public router: Router, public httpService: HttpServiceService, private datePipe: DatePipe,\n    public cookie: CookieService, public snakBar : MatSnackBar, public dialog: MatDialog,\n    public commonFunction: CommonFunction) {\n      \n      this.allCookies = this.cookie.getAll();\n      this.allCookies.user_details =  JSON.parse(this.allCookies.user_details);\n      \n      this.getAllDoctorData();\n      this.patientAddEditForm = this.fb.group({\n        patientName        :  ['', [Validators.required, Validators.maxLength(30)]],\n        gender             :  ['', [Validators.required]],\n        birthDate          :  ['', [Validators.required]],\n        doctor_id          :  ['', [Validators.required]],\n        tech_id            :  ['', [Validators.required]],\n        testDate           :  ['', [Validators.required]],\n        testCompletedDate  :  ['', [Validators.required]],\n\n        PTGPT              :  ['', [Validators.required]],\n        PTGPT_value        :  ['', []],\n        PTGVLFI            :  ['', [Validators.required]],\n        PTGVLFI_value      :  ['', []],\n        IR                 :  ['', [Validators.required]],\n        IR_value           :  ['', []],\n        ESRNO              :  ['', [Validators.required]],\n        ESRNO_value        :  ['', []],\n        ESRL               :  ['', [Validators.required]],\n        ESRL_value         :  ['', []],\n        peakC              :  ['', [Validators.required]],\n        peakC_value        :  ['', []],\n        PTGtype            :  ['', [Validators.required]],\n        PTGtype_value      :  ['', []],\n        PTGCVD             :  ['', [Validators.required]],\n        PTGCVD_value       :  ['', []],\n        stressI            :  ['', [Validators.required]],\n        stressI_value      :  ['', []],\n        RI                 :  ['', [Validators.required]],\n        RI_value           :  ['', []],\n        AIPTG              :  ['', [Validators.required]],\n        AIPTG_value        :  ['', []],\n        CIsCI              :  ['', [Validators.required]],\n        CIsCI_value        :  ['', []],\n        pNN50              :  ['', [Validators.required]],\n        pNN50_value        :  ['', []],\n        RMSSD              :  ['', [Validators.required]],\n        RMSSD_value        :  ['', []],\n        SDba               :  ['', [Validators.required]],\n        SDba_value         :  ['', []],\n        SDda               :  ['', [Validators.required]],\n        SDda_value         :  ['', []],\n        DPRS               :  ['', [Validators.required]],\n        DPRS_value         :  ['', []],\n        ValsR              :  ['', [Validators.required]],\n        ValsR_value        :  ['', []],\n        BMI                :  ['', [Validators.required]],\n        BMI_value          :  ['', []],\n        bloodPressure      :  ['', [Validators.required]],\n        bloodPressure_value:  ['', []],\n\n        leaveNotes         :  ['', [Validators.required]],\n        systolic_value     :  ['', []],\n        diastolic_value    :  ['', []],\n        status             :  [1, []],\n        report_type        :  ['mannual', []],\n        added_by           :  [this.allCookies.user_details._id, []]\n      });\n    }\n\n  ngOnInit() {\n  }\n\n  getAllDoctorData() {\n    var data = {\n      \"source\": \"users_view_doctor_list\",\n      \"token\": this.allCookies.jwtToken\n    }\n    this.httpService.httpViaPost('datalist', data).subscribe(response => {\n      this.htmlText.allDoctor = response.res;\n    });\n  }\n\n  getTechList(doctorID: string) {\n    var data = {\n      \"source\": \"users_view_doctor\",\n      \"condition\": {\n          \"_id_object\": doctorID\n      },\n      \"token\": this.allCookies.jwtToken\n    }\n    this.httpService.httpViaPost('datalist', data).subscribe((response) => {\n      this.htmlText.allTech = response.res;\n    });\n  }\n\n  patientAddEditFormSubmit() {\n    let x: any;\n    for (x in this.patientAddEditForm.controls) {\n      this.patientAddEditForm.controls[x].markAsTouched();\n    }\n \n    if(this.patientAddEditForm.valid) {\n      this.patientAddEditForm.value.birthDate = this.datePipe.transform(this.patientAddEditForm.value.birthDate, \"MM-dd-yyyy\");\n      this.patientAddEditForm.value.testDate = this.datePipe.transform(this.patientAddEditForm.value.testDate, \"MM-dd-yyyy\");\n      this.patientAddEditForm.value.testCompletedDate = this.datePipe.transform(this.patientAddEditForm.value.testCompletedDate, \"MM-dd-yyyy\");\n      this.patientAddEditForm.value.date = this.datePipe.transform(this.patientAddEditForm.value.date, \"MM-dd-yyyy\");\n\n      /* Setup Blood Pressure (systolic, diastolic) */\n      const bloodPressure = this.patientAddEditForm.controls.bloodPressure_value.value;\n      const systolicDiastolic = bloodPressure.split('/');\n      this.patientAddEditForm.controls['systolic_value'].patchValue(systolicDiastolic[0]);\n      this.patientAddEditForm.controls['diastolic_value'].patchValue(systolicDiastolic[1]);\n      delete this.patientAddEditForm.value.bloodPressure_value;\n      \n      var data: any = {\n        \"source\" : \"patient_management\",\n        \"data\" : this.patientAddEditForm.value,\n        \"sourceobj\": [\"doctor_id\",\"tech_id\"],\n        \"token\" : this.allCookies.jwtToken\n      }\n\n      this.httpService.httpViaPost(\"addorupdatedata\",data).subscribe(response=>{\n        if(response.status=\"success\"){\n          this.formDirective.resetForm();\n          /* Open modal */\n          let data: any = {\n            width: '250px',\n            data: { \n              header: \"Success\",\n              message: \"Record Saved Successfully\",\n              button1: { text: \"Cancel\" },\n              button2: { text: \"Add Next\" },\n            }\n          }\n          this.openDialog(data);\n        }  \n      });\n    } else {\n      console.log(this.patientAddEditForm);\n    }\n  }\n\n  openDialog(data) {\n    this.dialogRef = this.dialog.open(DialogBoxComponent, data);\n    this.dialogRef.afterClosed().subscribe(result => {\n      switch(result) {\n        case \"Cancel\":\n          this.router.navigateByUrl('/tech/dashboard');\n          break;\n        case \"Add Next\":\n          this.formDirective.resetForm();\n          break;\n      }\n    });\n  }\n\n  inputUntouch(form: any, val: any) {\n    form.controls[val].markAsUntouched();\n  }\n\n}\n\n","<app-admin-header></app-admin-header>\n\n<mat-card class=\"admin_wrapper\">\n  <mat-card-content class=\"content_wrapper\">\n\n    <mat-card-content class=\"itemsection\">\n      <span class=\"icon\">\n        <img src=\"../../../../assets/images/adminDoctoricon1.png\">\n      </span>\n      <span class=\"counteer\">\n        <h4 class=\"dataCount\"> {{ allResolveData.totalDoctorCount }}</h4>\n        <p class=\"doctorNumber\">Total Number of <br>Doctors</p>\n      </span>\n      <span class=\"button_wrapper\">\n        <button mat-button [routerLink]=\"['/admin/doctor-management']\">View Details</button>\n      </span>\n    </mat-card-content>\n\n    <mat-card-content class=\"itemsection\">\n      <span class=\"icon\">\n        <img src=\"../../../../assets/images/adminDoctoricon2.png\">\n      </span>\n      <span class=\"counteer\">\n        <h4 class=\"dataCount\"> {{ allResolveData.totalBillerCount }}</h4>\n        <p class=\"doctorNumber\">Total Number of<br> Billers</p>\n      </span>\n      <span class=\"button_wrapper\">\n        <button mat-flat-button [routerLink]=\"['/admin/biller-management']\">View Details</button>\n      </span>\n    </mat-card-content>\n\n    <mat-card-content class=\"itemsection\">\n      <span class=\"icon\">\n        <img src=\"../../../../assets/images/adminDoctoricon3.png\">\n      </span>\n      <span class=\"counteer\">\n        <h4 class=\"dataCount\"> {{ allResolveData.totalTechCount }}</h4>\n        <p class=\"doctorNumber\">Total Number of <br>Techs</p>\n      </span>\n      <span class=\"button_wrapper\">\n        <button mat-flat-button [routerLink]=\"['/admin/tech-management']\">View Details</button>\n      </span>\n    </mat-card-content>\n\n  </mat-card-content>\n\n\n  <!-- Doctor occide related -->\n  <mat-card-content class=\"content_wrapper\">\n\n    <mat-card-content class=\"itemsection\">\n      <span class=\"icon\">\n        <img src=\"../../../../assets/images/billerNoteicon3.png\">\n      </span>\n      <span class=\"counteer\">\n        <h4 class=\"dataCount\"> {{ allResolveData.doctorOfficeCount }}</h4>\n        <p class=\"doctorNumber\">Total No of <br>Doctor's Office</p>\n      </span>\n      <span class=\"button_wrapper\">\n        <button mat-button [routerLink]=\"['/admin/doctor-management']\">View Details</button>\n      </span>\n    </mat-card-content>\n\n    <mat-card-content class=\"itemsection\">\n      <span class=\"icon\">\n        <img src=\"../../../../assets/images/billerNoteicon1.png\">\n      </span>\n      <span class=\"counteer\">\n        <h4 class=\"dataCount\"> {{ allResolveData.appointmentsPendingCount }}</h4>\n        <p class=\"doctorNumber\">Total Appointments<br> Pending</p>\n      </span>\n      <span class=\"button_wrapper\">\n        <button mat-flat-button [routerLink]=\"['/admin/biller-management']\">View Details</button>\n      </span>\n    </mat-card-content>\n\n    <mat-card-content class=\"itemsection\">\n      <span class=\"icon\">\n        <img src=\"../../../../assets/images/billerNoteicon2.png\">\n      </span>\n      <span class=\"counteer\">\n        <h4 class=\"dataCount\"> {{ allResolveData.appointmentsCompletedCount }}</h4>\n        <p class=\"doctorNumber\">Total Appointments<br> Completed</p>\n      </span>\n      <span class=\"button_wrapper\">\n        <button mat-flat-button [routerLink]=\"['/admin/tech-management']\">View Details</button>\n      </span>\n    </mat-card-content>\n\n  </mat-card-content>\n\n\n  <!-- Report Status Section Start -->\n  <mat-card-content class=\"admin_superbillsection\">\n    <h1>Physician Reports Status</h1>\n    <mat-card-content class=\"biller_wrapper\">\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon1.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total No of <br>\n            Manual Records\n          </p>\n          <h2> {{ allResolveData.totalMannualReportCount }} </h2>\n          <button mat-flat-button (click)=\"viewReportProcessData('Total Mannual Reports');\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon2.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total No of <br>\n            File Records\n          </p>\n          <h2> {{ allResolveData.totalFileReportCount }} </h2>\n          <button mat-flat-button (click)=\"viewReportProcessData('Total File Reports');\">view all</button>\n        </span>\n      </mat-card-content>\n\n    </mat-card-content>\n  </mat-card-content>\n  <!-- Report Status Section End -->\n\n\n  <mat-card-content class=\"admin_superbillsection\">\n    <h1>Physician Report Process Status</h1>\n    <mat-card-content class=\"biller_wrapper\">\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon1.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total No of <br>\n            Images Not Processed\n          </p>\n          <h2> {{ allResolveData.totalImageNotProcessCount }} </h2>\n          <button mat-flat-button routerLink=\"/admin/images-not-process\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon2.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total No of <br>\n            Fileds Not Processed\n          </p>\n          <h2> {{ allResolveData.totalTextNotProcessCount }} </h2>\n          <button mat-flat-button routerLink=\"/admin/fileds-not-process\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item \">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon2.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total No of <br>\n            Pages Not Processed\n          </p>\n          <h2> {{ allResolveData.totalTextNotProcessCount }} </h2>\n          <button mat-flat-button routerLink=\"/admin/pages-not-process\">view all</button>\n        </span>\n      </mat-card-content>\n\n    </mat-card-content>\n  </mat-card-content>\n\n\n  <mat-card-content class=\"admin_superbillsection superbillerContainer\">\n    <h1>Physician Report and Super Bills</h1>\n    <mat-card-content class=\"biller_wrapper\">\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon1.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total No of <br>\n            Reports Uploaded\n          </p>\n          <h2> {{ allResolveData.totalReportCount }} </h2>\n          <button mat-flat-button (click)=\"viewReportProcessData('Reports Uploaded')\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon2.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total No of <br>\n            Report Processed\n          </p>\n          <h2> {{ allResolveData.processedReportCount }} </h2>\n          <button mat-flat-button (click)=\"viewReportProcessData('Report Processed')\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon3.png\">\n          </mat-card-content>\n        </span>\n        <span class=\"container_wrapper\">\n          <p>Total No of <br>\n            Report Signed\n          </p>\n          <h2> {{ allResolveData.signReportCount }} </h2>\n          <button mat-flat-button (click)=\"viewReportProcessData('Report Signed')\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon4.png\">\n          </mat-card-content>\n        </span>\n        <span class=\"container_wrapper\">\n          <p> Sent to <br>\n            Biller\n          </p>\n          <h2> {{ allResolveData.sendToSuparBillerReportCount }} </h2>\n          <button mat-flat-button (click)=\"viewReportProcessData('Super Bill')\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon4.png\">\n          </mat-card-content>\n        </span>\n        <span class=\"container_wrapper\">\n          <p> Reports Downloaded </p>\n          <h2> {{ allResolveData.totalReportDownloadCount }} </h2>\n          <button mat-flat-button (click)=\"viewReportProcessData('Download Bill')\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon4.png\">\n          </mat-card-content>\n        </span>\n        <span class=\"container_wrapper\">\n          <p> Reports Pending Sing </p>\n          <h2> {{ allResolveData.notSignReportCount }} </h2>\n          <button mat-flat-button (click)=\"viewReportProcessData('Reports Pending Sing')\">view all</button>\n        </span>\n      </mat-card-content>\n    </mat-card-content>\n  </mat-card-content>\n\n\n\n  <!-- All Data listing start here(default listing) -->\n  <mat-card-content class=\"table_wrapper\">\n\n    <mat-toolbar class=\"top_header\">\n      <h2> {{ htmlText.headerText }} </h2>\n      <button class=\"add_new\" mat-button routerLink=\"/admin/patient-management/add\">add patient records\n        manually</button>\n    </mat-toolbar>\n\n    <mat-toolbar class=\"action_bar\">\n      <mat-form-field>\n        <input matInput placeholder=\"Search by Doctor\" (keyup)=\"filterByName('doctorName_search_regex', $event.target.value)\">\n      </mat-form-field>\n\n      <mat-form-field>\n        <input matInput placeholder=\"Search by Patient\"\n          (keyup)=\"filterByName('patientName_search_regex', $event.target.value)\">\n      </mat-form-field>\n\n      <mat-form-field class=\"parent_cat\">\n        <mat-select placeholder=\"Search By Status\" (selectionChange)=\"filterByName('status_search_regex', $event.value)\">\n          <mat-option value=0>Select a status</mat-option>\n          <mat-option value=\"waiting for doctor sign\">Waiting For Doctor Sign</mat-option>\n          <mat-option value=\"doctor signed\">Doctor Signed</mat-option>\n          <mat-option value=\"send to biller\">Send To Biller</mat-option>\n          <mat-option value=\"error\">Error</mat-option>\n          <mat-option value=\"pending\">Pending</mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <ng-container>\n        <span class=\"date-range\">\n          <mat-form-field>\n            <input matInput [matDatepicker]=\"picker1\" placeholder=\"Start Date\" [(ngModel)]=\"startDate\">\n            <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n            <mat-datepicker #picker1></mat-datepicker>\n          </mat-form-field>\n\n          <mat-form-field>\n            <input matInput [matDatepicker]=\"picker2\" placeholder=\"End Date\" [(ngModel)]=\"endDate\">\n            <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\n            <mat-datepicker #picker2></mat-datepicker>\n          </mat-form-field>\n        </span>\n        <button mat-raised-button color=\"primary\" class=\"add_button\" (click)=\"dateRangeSearch()\">Search</button>\n      </ng-container>\n\n    </mat-toolbar>\n\n    <table mat-table [dataSource]=\"allDataSource\" class=\"mat-elevation-z8 adminTables\">\n      <ng-container matColumnDef=\"no\">\n        <th mat-header-cell *matHeaderCellDef> No. </th>\n        <td mat-cell *matCellDef=\"let element; let i = index;\"> {{ i + 1 }} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"patientNamecopy\">\n        <th mat-header-cell *matHeaderCellDef> Patient Name. </th>\n        <td mat-cell *matCellDef=\"let element\" data-label=\"Patient Name\"> {{ element.patientName }} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"doctorName\">\n        <th mat-header-cell *matHeaderCellDef> Doctor Name</th>\n        <td mat-cell *matCellDef=\"let element\" data-label=\"Doctor Name\" innerHTML=\"{{ element.doctorname }}\"> </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"billerName\" *ngIf=\"htmlText.headerText != 'Patient Reports'\">\n        <th mat-header-cell *matHeaderCellDef> Biller Name</th>\n        <td mat-cell *matCellDef=\"let element\" data-label=\"Biller Name\"> {{ element.billername }} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"report_type\">\n        <th mat-header-cell *matHeaderCellDef> Record Type</th>\n        <td mat-cell *matCellDef=\"let element\" data-label=\"Record Type\"> {{ element.report_type }} </td>\n      </ng-container>\n\n\n      <ng-container matColumnDef=\"billGenerationDate\" *ngIf=\"htmlText.headerText != 'Patient Reports'\">\n        <th mat-header-cell *matHeaderCellDef> Bill Generation Date</th>\n        <td mat-cell *matCellDef=\"let element\" data-label=\"Bill Generation Date\"> {{ element.billGenerationDate | date }} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"techName\">\n        <th mat-header-cell *matHeaderCellDef> Tech Name</th>\n        <td mat-cell *matCellDef=\"let element\" data-label=\"Tech Name\"> {{ element.techname }} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"billSentDate\" *ngIf=\"htmlText.headerText != 'Patient Reports'\">\n        <th mat-header-cell *matHeaderCellDef> Bill SentDate</th>\n        <td mat-cell *matCellDef=\"let element\" data-label=\"Bill Sent Date\"> {{ element.billSentDate | date }} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"superBill\" *ngIf=\"htmlText.headerText != 'Patient Reports'\">\n        <th mat-header-cell *matHeaderCellDef> Super Bill</th>\n        <td mat-cell *matCellDef=\"let element\" data-label=\"Super Bill\"> {{ element.superBill }} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"date\">\n        <th mat-header-cell *matHeaderCellDef> Created At</th>\n        <td mat-cell *matCellDef=\"let element\" data-label=\"Date\"> {{ element.testDate | date }} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"status\">\n        <th mat-header-cell *matHeaderCellDef> Status</th>\n        <td mat-cell *matCellDef=\"let element\" data-label=\"Status\">\n          <ng-container *ngIf=\"element.report_type == 'file' && !element.images\">Data Processing</ng-container>\n          <ng-container *ngIf=\"element.report_type == 'mannual' || (element.report_type == 'file' && element.images)\"> {{ element.status_text }} </ng-container>\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"editRecord\">\n        <th mat-header-cell *matHeaderCellDef> Action </th>\n        <td mat-cell *matCellDef=\"let element; let i = index;\">\n          <span class=\"buttons_ro\">\n            <button mat-button type=\"button\" *ngIf=\"element.report_type == 'mannual' || (element.report_type == 'file' && element.images)\" class=\"viewButton\" type=\"button\" [routerLink]=\"['/admin/patient-record',element._id]\">View</button>\n            <button mat-button type=\"button\" *ngIf=\"htmlText.headerText == 'Download Bill'\" class=\"viewButton\" type=\"button\" (click)=\"viewDownloadDetails(element._id);\">Details</button>\n            <button mat-button type=\"button\" *ngIf=\"element.report_type == 'mannual' || (element.report_type == 'file' && element.images)\" class=\"editButton\" [routerLink]=\"['/admin/patient-record/edit',element._id]\">Edit</button>\n            <button mat-button type=\"button\" *ngIf=\"element.report_type == 'file' && !element.images\" class=\"editButton downloadBtn\">Processing</button>\n            <button mat-button type=\"button\" *ngIf=\"element.status != 1\" class=\"editButton downloadBtn\" (click)=\"downloadReport(element);\">Download</button>\n            <button mat-button type=\"button\" class=\"editButton downloadBtn\" (click)=\"deleteReport(element._id, i);\">Delete</button>\n        </span>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"allDataColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: allDataColumns;let i = index\"></tr>\n    </table>\n\n    <mat-paginator [pageSizeOptions]=\"[50, 100, 200, 500]\"></mat-paginator>\n  </mat-card-content>\n  <!-- dashboard all listing end here -->\n</mat-card>\n \n<app-admin-footer></app-admin-footer>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { HttpServiceService } from '../../../services/http-service.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DialogBoxComponent } from '../../common/dialog-box/dialog-box.component';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from \"@angular/material\";\nimport { DownloadDetailsComponent } from './download-details/download-details.component';\nimport { DeviceDetectorService } from 'ngx-device-detector';\nimport { MatSnackBar } from '@angular/material';\nimport * as momentImported from 'moment';\nconst moment = momentImported;\n\n\n@Component({\n  selector: 'app-admin-dashboard',\n  templateUrl: './admin-dashboard.component.html',\n  styleUrls: ['./admin-dashboard.component.css']\n})\n\nexport class AdminDashboardComponent implements OnInit {\n\n  public loginUserData: any = {};\n  public jwtToken: string = \"\";\n  public htmlText: any = {\n    headerText: \"Patient Reports\"\n  };\n\n  public allResolveData: any = {};\n  public uploadedStatusArray: any = [];\n  public processedStatusArray: any = [];\n  public signedStatusArray: any = [];\n  public billerStatusArray: any = [];\n  public allDataColumns: string[];\n  public startDate: any;\n  public endDate: any;\n  public statusFlag : any;\n  public dialogRef: any;\n\n  allDataSource: MatTableDataSource<any>;\n\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  public allDataList: any = [];\n\n  @ViewChild(MatPaginator, { static: false }) paginatorAll: MatPaginator;\n\n  constructor(private router: Router, public cookieService: CookieService, private http: HttpServiceService, public activatedRoute: ActivatedRoute,\n    public dialog: MatDialog, public deviceService: DeviceDetectorService, private matSnackBar: MatSnackBar) {\n    \n    this.loginUserData[\"user_details\"] = JSON.parse(cookieService.get('user_details'));\n    this.loginUserData[\"jwtToken\"] = cookieService.get('jwtToken');\n\n      /* Get Auth Token */\n    this.jwtToken = cookieService.get('jwtToken');\n\n    /* Set Table Header */\n    this.allDataColumns = ['no', 'techName', 'report_type','doctorName', 'patientNamecopy', 'status', 'date', 'editRecord'];\n\n    this.activatedRoute.data.subscribe(resolveData => {\n      this.allResolveData = resolveData.dataCount.data;\n      let allData = this.allResolveData.totalReportData;\n      this.allDataSource = new MatTableDataSource(allData);\n      this.allDataSource.paginator = this.paginatorAll;\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit() {\n  }\n\n  filterByName(key: string, value: string) {\n    let searchJson: any = {};\n    searchJson[key] = value.toLowerCase();\n\n    var data = {\n      \"source\": \"Patient-Record-Report_view\",\n      \"condition\": searchJson,\n      \"token\": this.jwtToken\n    }\n    this.http.httpViaPost('datalist', data).subscribe(Response => {\n        this.allDataSource = Response.res;\n      });\n  }\n\n  filerByReports(key: string, value: any) {\n    let searchJson: any = {};\n    searchJson[key] = value.toLowerCase();\n    var data = {\n      \"source\": \"Patient-Record-Report_view\",\n      \"condition\": searchJson,\n      \"token\": this.jwtToken\n    }\n\n    this.http.httpViaPost('datalist', data)\n      .subscribe(Response => {\n        let result: any = Response.res;\n        //this.dataSource = result;\n      });\n\n  }\n\n  dateRangeSearch() {\n    var data = {\n      \"source\": \"Patient-Record-Report_view\",\n      \"condition\": {\n        \"date\" : {\n          $lte: moment(this.endDate).format('DD-MM-YYYY'),\n          $gte: moment(this.startDate).format('DD-MM-YYYY')\n        }\n      },\n      \"token\": this.jwtToken,\n    }\n    this.http.httpViaPost('datalist', data).subscribe((response) => {\n      this.allDataSource = response.res;\n    });\n  }\n\n  dateReportsRangeSearch() {\n    var data = {\n      \"source\": \"patient_management_view_count\",\n      \"condition\": {\n        \"date_added\": { \n          $lte: moment(this.endDate).format('DD-MM-YYYY'),\n          $gte: moment(this.startDate).format('DD-MM-YYYY')\n        },\n        status: this.statusFlag\n    },\n      \"token\": this.jwtToken,\n    }\n    this.http.httpViaPost('datalist', data).subscribe((response) => {\n      //this.dataSource = response.res;\n    });\n  }\n\n  getStatusCountData() {\n    var data = {\n      \"condition\": {\n        \"condition\": {\n          \"status\": \"pending\"\n        },\n        \"condition1\": {\n          \"status\": \"waiting for doctor sign\"\n        },\n        \"condition2\": {\n          \"status\": \"doctor signed\"\n        },\n        \"condition3\": {\n          \"status\": \"error\"\n        },\n        \"condition4\": {\n          \"status\": \"send to biller\"\n        },\n        \"condition5\": {\n          \"record_type\": \"file\"\n        }\n      }\n    }\n    this.http.httpViaPost('statuscount', data)\n      .subscribe(response => {\n\n        let result: any;\n        result = response;\n        \n        this.uploadedStatusArray = result.data.status1;\n        this.processedStatusArray = result.data.status2;\n        this.signedStatusArray = result.data.status3;\n        this.billerStatusArray = result.data.status5;\n      })\n  }\n\n\n  viewReportProcessData(flag: string) {\n    this.htmlText.headerText = flag;\n    var repostSignCond: any = {};\n\n    this.allDataColumns = ['no', 'techName', 'report_type','doctorName', 'patientNamecopy', 'status', 'date','editRecord'];\n    /* Set Table Header */\n\n    switch (flag) {\n      /* Report Status Section */\n      case 'Total Mannual Reports':\n        repostSignCond = {\n          \"source\": \"Patient-Record-Report_view\",\n          \"condition\": {\n            \"report_type\": \"mannual\"\n          },\n          \"token\": this.jwtToken,\n        }\n        break;\n      case 'Total File Reports':\n          repostSignCond = {\n            \"source\": \"Patient-Record-Report_view\",\n            \"condition\": {\n              \"report_type\": \"file\"\n            },\n            \"token\": this.jwtToken,\n          }\n          break;\n      /* Report Status Section */\n      case 'Reports Uploaded':\n        repostSignCond = {\n          \"source\": \"Patient-Record-Report_view\",\n          \"token\": this.jwtToken,\n        }\n        break;\n      case 'Report Processed':\n        repostSignCond = {\n          \"source\": \"Patient-Record-Report_view\",\n          \"condition\": {\n            \"page_1\": { $exists:true },\n            \"page_2\": { $exists:true },\n            \"page_3\": { $exists:true },\n            \"page_4\": { $exists:true },\n            \"page_5\": { $exists:true },\n            \"page_6\": { $exists:true },\n            \"page_7\": { $exists:true }\n          },\n          \"token\": this.jwtToken,\n        }\n        break;\n      case 'Report Signed':\n        this.allDataColumns = ['no', 'billGenerationDate', 'techName', 'billSentDate', 'billerName', 'report_type','doctorName', 'superBill', 'patientNamecopy', 'status', 'date', 'editRecord'];\n\n        repostSignCond = {\n          \"source\": \"Patient-Record-Report_view\",\n          \"condition\": {\n            \"doctor_signature\": { $exists:true }\n          },\n          \"token\": this.jwtToken,\n        }\n        break;\n      case 'Super Bill':\n        this.allDataColumns = ['no', 'billGenerationDate', 'techName', 'billSentDate', 'billerName', 'report_type','doctorName', 'superBill', 'patientNamecopy', 'status', 'date', 'editRecord'];\n\n        /////////////////////////////////////////\n        //////////////// Pending ////////////////\n        /////////////////////////////////////////\n        repostSignCond = {\n          \"source\": \"Patient-Record-Report_view\",\n          \"condition\": {\n            \"doctor_signature\": { $exists:true }\n          },\n          \"token\": this.jwtToken,\n        }\n        break;\n      case 'Download Bill':\n        this.allDataColumns = ['no', 'billGenerationDate', 'techName', 'billSentDate', 'billerName', 'report_type','doctorName', 'superBill', 'patientNamecopy', 'status', 'date', 'editRecord'];\n\n        repostSignCond = {\n          \"source\": \"Patient-Record-Report_view\",\n          \"condition\": {\n            \"download_count\": { $exists: true }\n          },\n          \"token\": this.jwtToken,\n        }\n        break;\n      case 'Reports Pending Sing':\n        repostSignCond = {\n          \"source\": \"Patient-Record-Report_view\",\n          \"condition\": {\n            \"doctor_signature\": { $exists:false }\n          },\n          \"token\": this.jwtToken,\n        }\n        break;\n      default:\n        break;\n    }\n\n    this.http.httpViaPost('datalist', repostSignCond).subscribe((response) => {\n      let allData = response.res;\n      this.allDataSource = new MatTableDataSource(allData);\n      this.allDataSource.paginator = this.paginatorAll;\n    });\n  }\n\n  myFunction() {\n    var x = document.getElementById(\"myDIV\");\n    if (x.style.display === \"none\") {\n      x.style.display = \"block\";\n    } else {\n      x.style.display = \"none\";\n    }\n  }\n\n  /*Doctor's List*/\n  toDocList() {\n    this.router.navigateByUrl('admin/doctor-management/list');\n  }\n\n  downloadReport(report: any) {\n    if(typeof(report.download_count) == \"undefined\") {\n      report.download_count = 1;\n    } else {\n      report.download_count = report.download_count + 1;\n    }\n\n    /* Collect User Information for Download record */\n    let deviceInfo: any = this.deviceService.getDeviceInfo();\n    deviceInfo[\"isMobile\"] = this.deviceService.isMobile();\n    deviceInfo[\"isTablet\"] = this.deviceService.isTablet();\n    deviceInfo[\"isDesktop\"] = this.deviceService.isDesktop();\n    \n    /* Set downloader information */\n    var userDetails = {\n      id: this.loginUserData.user_details._id,\n      type: this.loginUserData.user_details.type\n    };\n\n    let postData: any = {\n      \"source\": \"report_download\",\n      \"data\": {\n        \"report_id\": report._id,\n        \"biller_id\": this.loginUserData.user_details._id,\n        \"tech_id\": report.tech_id,\n        \"doctor_id\": report.doctor_id,\n        \"ip\": this.htmlText.ip,\n        \"download_attempt\": 1,\n        \"downloader_information\": userDetails,\n        \"device_information\": deviceInfo\n      },\n      \"sourceobj\": [\"report_id\", \"biller_id\", \"tech_id\", \"doctor_id\"],\n      \"download_count\": report.download_count,\n      \"token\": this.loginUserData.jwtToken\n    };\n\n    this.http.httpViaPost(\"addorupdatedata\", postData).subscribe(response => {\n      if(response.status == 'success') {\n        this.matSnackBar.open(\"Start downloading.\", \"Ok\", {\n          duration: 3000\n        });\n        window.open(report.file_path, \"_blank\");\n\n        this.refreshDashboard();\n        this.viewReportProcessData('Download Bill');\n      } else {\n        this.matSnackBar.open(\"Some error occord. Please try again.\", \"Ok\", {\n          duration: 3000\n        });\n      }\n    });\n  }\n\n  refreshDashboard() {\n    let postData: any = {\n      source: \"Patient-Record-Report_view\",\n      condition: {\n        biller_id: this.loginUserData.user_details._id\n      }\n    };\n    this.http.httpViaPost(\"admin-dashboard\", postData).subscribe(response => {\n      if(response.status == 'success') {\n        this.allResolveData = response.data;\n        let allData = this.allResolveData.totalReportData;\n        this.allDataSource = new MatTableDataSource(allData);\n        this.allDataSource.paginator = this.paginatorAll;\n      } else {\n        this.matSnackBar.open(\"Please wait...\", \"\", {\n          duration: 1000\n        });\n\n        setTimeout(() => {\n          this.refreshDashboard();\n        }, 1000);\n      }\n    });\n  }\n\n  deleteReport(pk_id: any, index: number) {\n    let data: any = {\n      width: '250px',\n      data: { \n        header: \"Alert\",\n        message: \"Do you want to delete this record ?\",\n        button1: { text: \"No\" },\n        button2: { text: \"Yes\" },\n      }\n    }\n\n    this.dialogRef = this.dialog.open(DialogBoxComponent, data);\n    this.dialogRef.afterClosed().subscribe(result => {\n      switch(result) {\n        case \"No\":\n          break;\n        case \"Yes\":\n          this.deleteProcess(pk_id, index);\n          break;\n      }\n    });\n  }\n\n  deleteProcess(pk_id: any, index: number) {\n    var repostSignCond = {\n      \"source\": \"patient_management\",\n      \"id\": pk_id,\n      \"token\": this.jwtToken,\n    }\n    this.http.httpViaPost('deletesingledata', repostSignCond).subscribe((response) => {\n      if(response.status == 'success') {\n        this.allResolveData.totalReportData.splice(index, 1);\n        let allData = this.allResolveData.totalReportData;\n        this.allDataSource = new MatTableDataSource(allData);\n\n        let data: any = {\n          width: '250px',\n          data: { \n            header: \"Success\",\n            message: \"Successfully delete.\",\n            button1: { text: \"OK\" },\n            button2: { text: \"\" },\n          }\n        }\n    \n        this.dialogRef = this.dialog.open(DialogBoxComponent, data);\n      } else {\n        let data: any = {\n          width: '250px',\n          data: { \n            header: \"Error\",\n            message: \"An error occord. Please try again.\",\n            button1: { text: \"Re-Try\" },\n            button2: { text: \"Close\" },\n          }\n        }\n    \n        this.dialogRef = this.dialog.open(DialogBoxComponent, data);\n        this.dialogRef.afterClosed().subscribe(result => {\n          switch(result) {\n            case \"Close\":\n              break;\n            case \"Re-Try\":\n              this.deleteProcess(pk_id, index);\n              break;\n          }\n        });\n      }\n    });\n  }\n\n  viewDownloadDetails(id: any) {\n    let data: any = {\n      width: '700px',\n      data: {\n        report_id: id\n      }\n    };\n    this.dialogRef = this.dialog.open(DownloadDetailsComponent, data);\n  }\n\n}","<h2 mat-dialog-title>Report Download Details</h2>\n\n<mat-progress-bar mode=\"indeterminate\" *ngIf=\"loader\"></mat-progress-bar>\n\n<mat-dialog-content class=\"mat-typography\">\n    <div class=\"example-container mat-elevation-z8\">\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" style=\"width: 100%;\">\n\n            <!--- Note that these columns can be defined in any order.\n                  The actual rendered columns are set as a property on the row definition\" -->\n\n            <!-- Position Column -->\n            <ng-container matColumnDef=\"position\">\n                <th mat-header-cell *matHeaderCellDef> No. </th>\n                <td mat-cell *matCellDef=\"let element; let i = index;\"> {{ i + 1 }} </td>\n            </ng-container>\n\n            <!-- IP Address Column -->\n            <ng-container matColumnDef=\"ip_address\">\n                <th mat-header-cell *matHeaderCellDef> IP Address </th>\n                <td mat-cell *matCellDef=\"let element\"> {{ element.ip }} </td>\n            </ng-container>\n\n            <!-- Operating System Column -->\n            <ng-container matColumnDef=\"os\">\n                <th mat-header-cell *matHeaderCellDef> Operating System </th>\n                <td mat-cell *matCellDef=\"let element\"> {{ element.device_information.os }} </td>\n            </ng-container>\n\n            <!-- Browser Column -->\n            <ng-container matColumnDef=\"browser\">\n                <th mat-header-cell *matHeaderCellDef> Browser </th>\n                <td mat-cell *matCellDef=\"let element\"> {{ element.device_information.browser }} </td>\n            </ng-container>\n\n            <!-- Device Column -->\n            <ng-container matColumnDef=\"device\">\n                <th mat-header-cell *matHeaderCellDef> Device </th>\n                <td mat-cell *matCellDef=\"let element\"> \n                    <ng-container *ngIf=\"element.device_information.isMobile == true\">Mobile</ng-container> \n                    <ng-container *ngIf=\"element.device_information.isTablet == true\">Tablet</ng-container> \n                    <ng-container *ngIf=\"element.device_information.isDesktop == true\">Desktop</ng-container> \n                </td>\n            </ng-container>\n\n            <!-- Download Attempt Column -->\n            <ng-container matColumnDef=\"download_attempt\">\n                <th mat-header-cell *matHeaderCellDef> Download Attempt </th>\n                <td mat-cell *matCellDef=\"let element\"> {{ element.download_attempt }} </td>\n            </ng-container>\n\n            <!-- Date & Time Column -->\n            <ng-container matColumnDef=\"date_time\">\n                <th mat-header-cell *matHeaderCellDef> Date & Time </th>\n                <td mat-cell *matCellDef=\"let element\"> {{ element.created_at | date  }} </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n\n    </div>\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"end\">\n    <button mat-button color=\"primary\" mat-dialog-close>Close</button>\n</mat-dialog-actions>","import { Component, OnInit, Inject } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { HttpServiceService } from '../../../../services/http-service.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DialogBoxComponent } from '../../../common/dialog-box/dialog-box.component';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from \"@angular/material\";\n\nexport interface DialogData { \n  report_id: string\n}\n\n@Component({\n  selector: 'app-download-details',\n  templateUrl: './download-details.component.html',\n  styleUrls: ['./download-details.component.css']\n})\n\nexport class DownloadDetailsComponent implements OnInit {\n\n  public data: any;\n  public loader: boolean = true;\n  public displayedColumns = ['position', 'ip_address', 'os', 'browser', 'device', 'download_attempt', 'date_time'];\n  public dataSource: any;\n\n  constructor(public dialogRef: MatDialogRef<DownloadDetailsComponent>,\n    @Inject(MAT_DIALOG_DATA) public dialogData: DialogData, public router: Router,\n    public cookieService: CookieService, private http: HttpServiceService) {\n    this.data = this.dialogData;\n    \n    this.getDownloadReportDetails(this.data.report_id);\n  }\n\n  ngOnInit() {\n  }\n\n  getDownloadReportDetails(reportID: string) {\n    let jwtToken = this.cookieService.get('jwtToken');\n    var data = {\n      \"source\": \"report_download\",\n      \"condition\": { \"report_id_object\":  reportID},\n      \"token\": jwtToken\n    }\n    this.http.httpViaPost('datalist', data).subscribe(response => {\n      this.loader = false;\n      this.dataSource = new MatTableDataSource(response.res);\n    });\n  }\n\n}\n","<app-admin-header></app-admin-header>\n\n\n<mat-card-content class=\"editPatient_wrapper\">\n\n  <mat-card-content class=\"editItems mat-elevation-z5\" *ngIf=\"allPatientDataArray[0].report_type == 'file'\">\n    <mat-card-content class=\"image_slider\">\n\n      <mat-card-content class=\"img_w\">\n        <img [src]=\"allPatientDataArray[0].file_basepath + ImageData[sliderCount].name\">\n      </mat-card-content>\n      <button mat-mini-fab class=\"prev\" (click)=\"playSlider('preview');\">\n        << </button> <button mat-mini-fab class=\"next\" (click)=\"playSlider('next');\"> >>\n      </button>\n    </mat-card-content>\n  </mat-card-content>\n  <mat-card-content class=\"editItems mat-elevation-z5\" [ngClass]=\"{display_section: allPatientDataArray[0].report_type == 'mannual'}\"\n    *ngIf=\"allPatientDataArray[0].report_type == 'mannual' || allPatientDataArray[0].report_type == 'file' \">\n\n    <!-- patient form start here -->\n    <mat-card class=\"add_form\">\n      <mat-card-content>\n        <form class=\"example-form\" autocomplete=\"off\" name=\"patientAddEditForm\" [formGroup]=\"patientAddEditForm\"\n        (ngSubmit)=\"patientAddEditFormSubmit()\">\n\n          <fieldset class=\"field_setmodel\">\n            <legend class=\"legend_model\">Patients Information:</legend>\n\n            <span class=\"patients_info_wrapper\">\n              <mat-card-content>\n                <label>Patient Name</label>\n                <mat-form-field>\n                  <input matInput [formControl]=\"patientAddEditForm.controls['patientName']\" (blur)=\"inputUntouch(patientAddEditForm,'patientName')\">\n                  <mat-error *ngIf=\"patientAddEditForm.controls['patientName'].touched && !patientAddEditForm.controls['patientName'].valid && patientAddEditForm.controls['patientName'].errors.required\">Patient Name can not be blank</mat-error>\n                </mat-form-field>\n              </mat-card-content>\n\n              <mat-card-content class=\"gender_wrapper\">\n                <label>Patient Gender</label>\n                <span class=\"patientGender\">\n                  <input type=\"radio\" value='Male' [formControl]=\"patientAddEditForm.controls['gender']\">Male\n                  <input type=\"radio\" value='Female' [formControl]=\"patientAddEditForm.controls['gender']\">Female\n                </span>\n\n                <mat-error *ngIf=\"patientAddEditForm.controls['gender'].touched && !patientAddEditForm.controls['gender'].valid && patientAddEditForm.controls['gender'].errors.required\">Birth Date can not be blank.</mat-error>\n              </mat-card-content>\n\n              <mat-card-content>\n                <label> Date of birth</label>\n                <mat-form-field>\n                  <input matInput [matDatepicker]=\"dobPicker\" [formControl]=\"patientAddEditForm.controls['birthDate']\">\n                  <mat-datepicker-toggle matSuffix [for]=\"dobPicker\"></mat-datepicker-toggle>\n                  <mat-datepicker #dobPicker></mat-datepicker>\n\n                  <mat-error *ngIf=\"patientAddEditForm.controls['birthDate'].touched && !patientAddEditForm.controls['birthDate'].valid && patientAddEditForm.controls['birthDate'].errors.required\">Birth Date can not be blank.</mat-error>\n                </mat-form-field>\n              </mat-card-content>\n\n              <mat-card-content>\n                <label>Ordering Physician</label>\n                <mat-form-field>\n                  <mat-select [formControl]=\"patientAddEditForm.controls['doctor_id']\" placeholder=\"Select a Doctor\" (selectionChange)=\"getTechList($event.value);\">\n                    <mat-option>Select a Doctor</mat-option>\n                    <mat-option *ngFor=\"let doc of this.htmlText.allDoctor;\" value=\"{{ doc._id }}\"> {{ doc.fullNamecopy }}\n                    </mat-option>\n                  </mat-select>\n\n                  <mat-error *ngIf=\"patientAddEditForm.controls['doctor_id'].touched && !patientAddEditForm.controls['doctor_id'].valid && patientAddEditForm.controls['doctor_id'].errors.required\">Select a doctor.</mat-error>\n                </mat-form-field>\n              </mat-card-content>\n\n              <mat-card-content>\n                <label> Tech Name </label>\n                <mat-form-field>\n                  <mat-select [formControl]=\"patientAddEditForm.controls['tech_id']\" placeholder=\"Select a Tech\">\n                    <mat-option>Select a Tech</mat-option>\n                    <mat-option *ngFor=\"let doc of htmlText.allTech;\" value=\"{{ doc.tech_id }}\"> {{ doc.tech }}\n                    </mat-option>\n                  </mat-select>\n\n                  <mat-error *ngIf=\"patientAddEditForm.controls['tech_id'].touched && !patientAddEditForm.controls['tech_id'].valid && patientAddEditForm.controls['tech_id'].errors.required\">Select a tech.</mat-error>\n                </mat-form-field>\n              </mat-card-content>\n\n              <mat-card-content>\n                <label> Test Date</label>\n                <mat-form-field>\n                  <input matInput [matDatepicker]=\"testDatePicker\" [formControl]=\"patientAddEditForm.controls['testDate']\">\n                  <mat-datepicker-toggle matSuffix [for]=\"testDatePicker\"></mat-datepicker-toggle>\n                  <mat-datepicker #testDatePicker></mat-datepicker>\n                </mat-form-field>\n\n                <mat-error *ngIf=\"patientAddEditForm.controls['testDate'].touched && !patientAddEditForm.controls['testDate'].valid && patientAddEditForm.controls['testDate'].errors.required\">Test date can not be blank.</mat-error>\n              </mat-card-content>\n\n              <mat-card-content>\n                <label> Test Completed</label>\n                <mat-form-field>\n                  <input matInput [matDatepicker]=\"testCompletedDatePicker\" [formControl]=\"patientAddEditForm.controls['testCompletedDate']\">\n                  <mat-datepicker-toggle matSuffix [for]=\"testCompletedDatePicker\"></mat-datepicker-toggle>\n                  <mat-datepicker #testCompletedDatePicker></mat-datepicker>\n                </mat-form-field>\n\n                <mat-error *ngIf=\"patientAddEditForm.controls['testCompletedDate'].touched && !patientAddEditForm.controls['testCompletedDate'].valid && patientAddEditForm.controls['testCompletedDate'].errors.required\">Test Completed Date can not be blank.</mat-error>\n              </mat-card-content>\n            </span>\n          </fieldset>\n\n          <br>\n\n          <fieldset class=\"field_setmodel\">\n            <legend class=\"legend_model\">RM-3A Status report</legend>\n            <span class=\"test_date_wrapper\">\n\n              <mat-card-content>\n                <label>PTGTP</label>\n                <mat-form-field>\n                  <mat-select [formControl]=\"patientAddEditForm.controls['PTGPT']\" (blur)=\"inputUntouch(patientAddEditForm,'PTGPT')\" placeholder=\"Select a Option\">\n                    <mat-option>Select a option</mat-option>\n                    <mat-option value=\"N\"> Normal</mat-option>\n                    <mat-option value=\"A\"> Abnormal</mat-option>\n                    <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                  </mat-select>\n\n                  <mat-error *ngIf=\"patientAddEditForm.controls['PTGPT'].touched && !patientAddEditForm.controls['PTGPT'].valid && patientAddEditForm.controls['PTGPT'].errors.required\">PTGTP Required.</mat-error>\n                </mat-form-field>\n\n                <mat-form-field class=\"subValue\">\n                  <input matInput [formControl]=\"patientAddEditForm.controls['PTGPT_value']\" placeholder=\"PTGPT value\" />\n                  <mat-hint align=\"start\"> <strong>Optional field.</strong></mat-hint>\n                </mat-form-field>\n              </mat-card-content>\n\n\n              <mat-card-content>\n                <label> PTGVLFI </label>\n                <mat-form-field>\n                  <mat-select [formControl]=\"patientAddEditForm.controls['PTGVLFI']\" (blur)=\"inputUntouch(patientAddEditForm,'PTGVLFI')\" placeholder=\"Select a Option\">\n                    <mat-option>Select a option</mat-option>\n                    <mat-option value=\"N\"> Normal</mat-option>\n                    <mat-option value=\"A\"> Abnormal</mat-option>\n                    <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                  </mat-select>\n\n                  <mat-error *ngIf=\"patientAddEditForm.controls['PTGVLFI'].touched && !patientAddEditForm.controls['PTGVLFI'].valid && patientAddEditForm.controls['PTGVLFI'].errors.required\">PTGVLFI required.</mat-error>\n                </mat-form-field>\n\n                <mat-form-field class=\"subValue\">\n                  <input matInput [formControl]=\"patientAddEditForm.controls['PTGVLFI_value']\" placeholder=\"PTGVLFI value\" />\n                </mat-form-field>\n              </mat-card-content>\n\n\n              <mat-card-content>\n                <label> IR </label>\n                <mat-form-field>\n                  <mat-select [formControl]=\"patientAddEditForm.controls['IR']\" (blur)=\"inputUntouch(patientAddEditForm,'IR')\" placeholder=\"Select a Option\">\n                    <mat-option>Select a option</mat-option>\n                    <mat-option value=\"N\"> Normal</mat-option>\n                    <mat-option value=\"A\"> Abnormal</mat-option>\n                    <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                  </mat-select>\n\n                  <mat-error *ngIf=\"patientAddEditForm.controls['IR'].touched && !patientAddEditForm.controls['IR'].valid && patientAddEditForm.controls['IR'].errors.required\">IR required.</mat-error>\n                </mat-form-field>\n\n                <mat-form-field class=\"subValue\">\n                  <input matInput [formControl]=\"patientAddEditForm.controls['IR_value']\" placeholder=\"IR value\" />\n                </mat-form-field>\n              </mat-card-content>\n\n\n              <mat-card-content>\n                <label> ESRNO<br> (Baseline) </label>\n                  <mat-form-field>\n                    <mat-select [formControl]=\"patientAddEditForm.controls['ESRNO']\" (blur)=\"inputUntouch(patientAddEditForm,'ESRNO')\" placeholder=\"Select a Option\">\n                      <mat-option>Select a option</mat-option>\n                      <mat-option value=\"N\"> Normal</mat-option>\n                      <mat-option value=\"A\"> Abnormal</mat-option>\n                      <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                    </mat-select>\n\n                    <mat-error *ngIf=\"patientAddEditForm.controls['ESRNO'].touched && !patientAddEditForm.controls['ESRNO'].valid && patientAddEditForm.controls['ESRNO'].errors.required\">ESRNO required.</mat-error>\n                  </mat-form-field>\n\n                  <mat-form-field class=\"subValue\">\n                    <input matInput [formControl]=\"patientAddEditForm.controls['ESRNO_value']\" placeholder=\"ESRNO value\" />\n                  </mat-form-field>\n              </mat-card-content>\n\n\n              <mat-card-content>\n                <label> ESR L<br> (Latency) </label>\n                <mat-form-field>\n                  <mat-select [formControl]=\"patientAddEditForm.controls['ESRL']\" (blur)=\"inputUntouch(patientAddEditForm,'ESRL')\" placeholder=\"Select a Option\">\n                    <mat-option>Select a option</mat-option>\n                    <mat-option value=\"N\"> Normal</mat-option>\n                    <mat-option value=\"A\"> Abnormal</mat-option>\n                    <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                  </mat-select>\n\n                  <mat-error *ngIf=\"patientAddEditForm.controls['ESRL'].touched && !patientAddEditForm.controls['ESRL'].valid && patientAddEditForm.controls['ESRL'].errors.required\">ESR L required.</mat-error>\n                </mat-form-field>\n\n                <mat-form-field class=\"subValue\">\n                  <input matInput [formControl]=\"patientAddEditForm.controls['ESRL_value']\" placeholder=\"ESRL value\" />\n                </mat-form-field>\n              </mat-card-content>\n\n\n              <mat-card-content>\n                <label> Peak C <br> (Amplitude) </label>\n                <mat-form-field>\n                  <mat-select [formControl]=\"patientAddEditForm.controls['peakC']\" (blur)=\"inputUntouch(patientAddEditForm,'peakC')\" placeholder=\"Select a Option\">\n                    <mat-option>Select a option</mat-option>\n                    <mat-option value=\"N\"> Normal</mat-option>\n                    <mat-option value=\"A\"> Abnormal</mat-option>\n                    <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                  </mat-select>\n\n                  <mat-error *ngIf=\"patientAddEditForm.controls['peakC'].touched && !patientAddEditForm.controls['peakC'].valid && patientAddEditForm.controls['peakC'].errors.required\">Peak C required.</mat-error>\n                </mat-form-field>\n\n                <mat-form-field class=\"subValue\">\n                  <input matInput [formControl]=\"patientAddEditForm.controls['peakC_value']\" placeholder=\"peakC value\" />\n                </mat-form-field>\n              </mat-card-content>\n\n\n              <mat-card-content>\n                <label> PTG Type <br> (EnterType 1-5) </label>\n                <mat-form-field>\n                  <mat-select [formControl]=\"patientAddEditForm.controls['PTGtype']\" (blur)=\"inputUntouch(patientAddEditForm,'PTGtype')\" placeholder=\"Select a Option\">\n                    <mat-option>Select a option</mat-option>\n                    <mat-option value=\"N\"> Normal</mat-option>\n                    <mat-option value=\"A\"> Abnormal</mat-option>\n                    <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                  </mat-select>\n\n                  <mat-error *ngIf=\"patientAddEditForm.controls['PTGtype'].touched && !patientAddEditForm.controls['PTGtype'].valid && patientAddEditForm.controls['PTGtype'].errors.required\">PTG Type required.</mat-error>\n                </mat-form-field>\n\n                <mat-form-field class=\"subValue\">\n                  <input matInput [formControl]=\"patientAddEditForm.controls['PTGtype_value']\" placeholder=\"PTG Type value\" />\n                </mat-form-field>\n              </mat-card-content>\n\n\n              <mat-card-content>\n                <label> PTG CVD </label>\n                <mat-form-field>\n                  <mat-select [formControl]=\"patientAddEditForm.controls['PTGCVD']\" (blur)=\"inputUntouch(patientAddEditForm,'PTGCVD')\" placeholder=\"Select a Option\">\n                    <mat-option>Select a option</mat-option>\n                    <mat-option value=\"N\"> Normal</mat-option>\n                    <mat-option value=\"A\"> Abnormal</mat-option>\n                    <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                  </mat-select>\n\n                  <mat-error *ngIf=\"patientAddEditForm.controls['PTGCVD'].touched && !patientAddEditForm.controls['PTGCVD'].valid && patientAddEditForm.controls['PTGCVD'].errors.required\">PTG CVD required.</mat-error>\n                </mat-form-field>\n\n                <mat-form-field class=\"subValue\">\n                  <input matInput [formControl]=\"patientAddEditForm.controls['PTGCVD_value']\" placeholder=\"PTGCVD value\" />\n                </mat-form-field>\n              </mat-card-content>\n\n\n              <mat-card-content>\n                <label> Stress I <br> (Stress Index) </label>\n                <mat-form-field>\n                  <mat-select [formControl]=\"patientAddEditForm.controls['stressI']\" (blur)=\"inputUntouch(patientAddEditForm,'stressI')\" placeholder=\"Select a Option\">\n                    <mat-option>Select a option</mat-option>\n                    <mat-option value=\"N\"> Normal</mat-option>\n                    <mat-option value=\"A\"> Abnormal</mat-option>\n                    <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                  </mat-select>\n\n                  <mat-error *ngIf=\"patientAddEditForm.controls['stressI'].touched && !patientAddEditForm.controls['stressI'].valid && patientAddEditForm.controls['stressI'].errors.required\">Stress I required.</mat-error>\n                </mat-form-field>\n\n                <mat-form-field class=\"subValue\">\n                  <input matInput [formControl]=\"patientAddEditForm.controls['stressI_value']\" placeholder=\"Stress I value\" />\n                </mat-form-field>\n              </mat-card-content>\n\n\n              <mat-card-content>\n                <label> RI </label>\n                <mat-form-field>\n                  <mat-select [formControl]=\"patientAddEditForm.controls['RI']\" (blur)=\"inputUntouch(patientAddEditForm,'RI')\" placeholder=\"Select a Option\">\n                    <mat-option>Select a option</mat-option>\n                    <mat-option value=\"N\"> Normal</mat-option>\n                    <mat-option value=\"A\"> Abnormal</mat-option>\n                    <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                  </mat-select>\n\n                  <mat-error *ngIf=\"patientAddEditForm.controls['RI'].touched && !patientAddEditForm.controls['RI'].valid && patientAddEditForm.controls['RI'].errors.required\">RI required.</mat-error>\n                </mat-form-field>\n\n                <mat-form-field class=\"subValue\">\n                  <input matInput [formControl]=\"patientAddEditForm.controls['RI_value']\" placeholder=\"Stress I value\" />\n                </mat-form-field>\n              </mat-card-content>\n\n              <mat-card-content>\n                <label> AIPTG<br> (IPTG) </label>\n                <mat-form-field>\n                  <mat-select [formControl]=\"patientAddEditForm.controls['AIPTG']\" (blur)=\"inputUntouch(patientAddEditForm,'AIPTG')\" placeholder=\"Select a Option\">\n                    <mat-option>Select a option</mat-option>\n                    <mat-option value=\"N\"> Normal</mat-option>\n                    <mat-option value=\"A\"> Abnormal</mat-option>\n                    <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                  </mat-select>\n\n                  <mat-error *ngIf=\"patientAddEditForm.controls['AIPTG'].touched && !patientAddEditForm.controls['AIPTG'].valid && patientAddEditForm.controls['AIPTG'].errors.required\">AIPTG required.</mat-error>\n                </mat-form-field>\n\n                <mat-form-field class=\"subValue\">\n                  <input matInput [formControl]=\"patientAddEditForm.controls['AIPTG_value']\" placeholder=\"AIPTG value\" />\n                </mat-form-field>\n              </mat-card-content>\n\n\n              <mat-card-content>\n                <label> CIs (CI) </label>\n                <mat-form-field>\n                  <mat-select [formControl]=\"patientAddEditForm.controls['CIsCI']\" (blur)=\"inputUntouch(patientAddEditForm, 'CIsCI')\" placeholder=\"Select a Option\">\n                    <mat-option>Select a option</mat-option>\n                    <mat-option value=\"N\"> Normal</mat-option>\n                    <mat-option value=\"A\"> Abnormal</mat-option>\n                    <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                  </mat-select>\n\n                  <mat-error *ngIf=\"patientAddEditForm.controls['CIsCI'].touched && !patientAddEditForm.controls['CIsCI'].valid && patientAddEditForm.controls['CIsCI'].errors.required\">CIs (CI) required.</mat-error>\n                </mat-form-field>\n\n                <mat-form-field class=\"subValue\">\n                  <input matInput [formControl]=\"patientAddEditForm.controls['CIsCI_value']\" placeholder=\"CIsCI value\">\n                </mat-form-field>\n              </mat-card-content>\n\n\n              <mat-card-content>\n                <label> pNN50 </label>\n                <mat-form-field>\n                  <mat-select [formControl]=\"patientAddEditForm.controls['pNN50']\" (blur)=\"inputUntouch(patientAddEditForm,'pNN50')\" placeholder=\"Select a Option\">\n                    <mat-option>Select a option</mat-option>\n                    <mat-option value=\"N\"> Normal</mat-option>\n                    <mat-option value=\"A\"> Abnormal</mat-option>\n                    <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                  </mat-select>\n\n                  <mat-error *ngIf=\"patientAddEditForm.controls['pNN50'].touched && !patientAddEditForm.controls['pNN50'].valid && patientAddEditForm.controls['pNN50'].errors.required\">pNN50 required.</mat-error>\n                </mat-form-field>\n\n                <mat-form-field class=\"subValue\">\n                  <input matInput [formControl]=\"patientAddEditForm.controls['pNN50_value']\" placeholder=\"pNN50 value\" />\n                </mat-form-field>\n              </mat-card-content>\n\n\n              <mat-card-content>\n                <label> RMSSD </label>\n                <mat-form-field>\n                  <mat-select [formControl]=\"patientAddEditForm.controls['RMSSD']\" (blur)=\"inputUntouch(patientAddEditForm,'pNN50')\" placeholder=\"Select a Option\">\n                    <mat-option>Select a option</mat-option>\n                    <mat-option value=\"N\"> Normal</mat-option>\n                    <mat-option value=\"A\"> Abnormal</mat-option>\n                    <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                  </mat-select>\n\n                  <mat-error *ngIf=\"patientAddEditForm.controls['RMSSD'].touched && !patientAddEditForm.controls['RMSSD'].valid && patientAddEditForm.controls['RMSSD'].errors.required\">RMSSD required.</mat-error>\n                </mat-form-field>\n\n                <mat-form-field class=\"subValue\">\n                  <input matInput [formControl]=\"patientAddEditForm.controls['RMSSD_value']\" placeholder=\"RMSSD value\" />\n                </mat-form-field>\n              </mat-card-content>\n\n\n              <mat-card-content>\n                <label> SD ba - </label>\n                <mat-form-field>\n                  <mat-select [formControl]=\"patientAddEditForm.controls['SDba']\" (blur)=\"inputUntouch(patientAddEditForm,'SDba')\" placeholder=\"Select a Option\">\n                    <mat-option>Select a option</mat-option>\n                    <mat-option value=\"N\"> Normal</mat-option>\n                    <mat-option value=\"A\"> Abnormal</mat-option>\n                    <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                  </mat-select>\n\n                  <mat-error *ngIf=\"patientAddEditForm.controls['SDba'].touched && !patientAddEditForm.controls['SDba'].valid && patientAddEditForm.controls['SDba'].errors.required\">SD ba - required.</mat-error>\n                </mat-form-field>\n\n                <mat-form-field class=\"subValue\">\n                  <input matInput [formControl]=\"patientAddEditForm.controls['SDba_value']\" placeholder=\"SDba value\" />\n                </mat-form-field>\n              </mat-card-content>\n\n\n              <mat-card-content>\n                <label> SD da </label>\n                <mat-form-field>\n                  <mat-select [formControl]=\"patientAddEditForm.controls['SDda']\" (blur)=\"inputUntouch(patientAddEditForm,'SDda')\" placeholder=\"Select a Option\">\n                    <mat-option>Select a option</mat-option>\n                    <mat-option value=\"N\"> Normal</mat-option>\n                    <mat-option value=\"A\"> Abnormal</mat-option>\n                    <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                  </mat-select>\n\n                  <mat-error *ngIf=\"patientAddEditForm.controls['SDda'].touched && !patientAddEditForm.controls['SDda'].valid && patientAddEditForm.controls['SDda'].errors.required\">SD da required.</mat-error>\n                </mat-form-field>\n\n                <mat-form-field class=\"subValue\">\n                  <input matInput [formControl]=\"patientAddEditForm.controls['SDda_value']\" placeholder=\"SDda value\" />\n                </mat-form-field>\n              </mat-card-content>\n\n\n              <mat-card-content>\n                <label>DPRS </label>\n                <mat-form-field>\n                  <mat-select [formControl]=\"patientAddEditForm.controls['DPRS']\" (blur)=\"inputUntouch(patientAddEditForm,'DPRS')\" placeholder=\"Select a Option\">\n                    <mat-option>Select a option</mat-option>\n                    <mat-option value=\"N\"> Normal</mat-option>\n                    <mat-option value=\"A\"> Abnormal</mat-option>\n                    <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                  </mat-select>\n\n                  <mat-error *ngIf=\"patientAddEditForm.controls['DPRS'].touched && !patientAddEditForm.controls['DPRS'].valid && patientAddEditForm.controls['DPRS'].errors.required\">DPRS required.</mat-error>\n                </mat-form-field>\n\n                <mat-form-field class=\"subValue\">\n                  <input matInput [formControl]=\"patientAddEditForm.controls['DPRS_value']\" placeholder=\"DPRS value\" />\n                </mat-form-field>\n              </mat-card-content>\n\n              <mat-card-content>\n                <label>ValsR. </label>\n                <mat-form-field>\n                  <mat-select [formControl]=\"patientAddEditForm.controls['ValsR']\" (blur)=\"inputUntouch(patientAddEditForm,'ValsR')\" placeholder=\"Select a Option\">\n                    <mat-option>Select a option</mat-option>\n                    <mat-option value=\"N\"> Normal</mat-option>\n                    <mat-option value=\"A\"> Abnormal</mat-option>\n                    <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                  </mat-select>\n\n                  <mat-error *ngIf=\"patientAddEditForm.controls['ValsR'].touched && !patientAddEditForm.controls['ValsR'].valid && patientAddEditForm.controls['ValsR'].errors.required\">ValsR required.</mat-error>\n                </mat-form-field>\n\n                <mat-form-field class=\"subValue\">\n                  <input matInput [formControl]=\"patientAddEditForm.controls['ValsR_value']\" placeholder=\"ValsR value\" />\n                </mat-form-field>\n              </mat-card-content>\n\n\n              <mat-card-content>\n                <label>BMI<br> Enter BMI Score (I.E. 29.1) </label>\n                <mat-form-field>\n                  <mat-select [formControl]=\"patientAddEditForm.controls['BMI']\" (blur)=\"inputUntouch(patientAddEditForm,'BMI')\" placeholder=\"Select a Option\">\n                    <mat-option>Select a option</mat-option>\n                    <mat-option value=\"N\"> Normal</mat-option>\n                    <mat-option value=\"A\"> Abnormal</mat-option>\n                    <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                  </mat-select>\n\n                  <mat-error *ngIf=\"patientAddEditForm.controls['BMI'].touched && !patientAddEditForm.controls['BMI'].valid && patientAddEditForm.controls['BMI'].errors.required\">BMI required.</mat-error>\n                </mat-form-field>\n\n                <mat-form-field class=\"subValue\">\n                  <input matInput [formControl]=\"patientAddEditForm.controls['BMI_value']\" placeholder=\"BMI value\" />\n                </mat-form-field>\n              </mat-card-content>\n\n\n              <mat-card-content>\n                <label>Blood Pressure<br> Systolic & Diastolic (120/80) </label>\n                <mat-form-field>\n                  <mat-select [formControl]=\"patientAddEditForm.controls['bloodPressure']\" (blur)=\"inputUntouch(patientAddEditForm,'bloodPressure')\" placeholder=\"Select a Option\">\n                    <mat-option>Select a option</mat-option>\n                    <mat-option value=\"N\"> Normal</mat-option>\n                    <mat-option value=\"A\"> Abnormal</mat-option>\n                    <mat-option value=\"H\"> Highly Abnormal</mat-option>\n                  </mat-select>\n\n                  <mat-error *ngIf=\"patientAddEditForm.controls['bloodPressure'].touched && !patientAddEditForm.controls['bloodPressure'].valid && patientAddEditForm.controls['bloodPressure'].errors.required\">Blood Pressure required.</mat-error>\n                </mat-form-field>\n\n                <mat-form-field class=\"subValue\">\n                  <input matInput [formControl]=\"patientAddEditForm.controls['bloodPressure_value']\" placeholder=\"Blood Pressure value\" />\n                </mat-form-field>\n              </mat-card-content>\n\n            </span>\n          </fieldset>\n\n          <br>\n\n          <fieldset class=\"field_setmodel\">\n            <legend class=\"legend_model\">additional notes</legend>\n\n            <br>\n\n            <span class=\"patient_diagnotes\">\n              <label>Patient Diagnoses & Notes:</label>\n              <mat-form-field class=\"example-full-width\">\n\n                <textarea matInput placeholder=\"Leave a comment\" [formControl]=\"patientAddEditForm.controls['leaveNotes']\" (blur)=\"inputUntouch(patientAddEditForm,'leaveNotes')\"></textarea>\n                <mat-error *ngIf=\"patientAddEditForm.controls['leaveNotes'].touched && !patientAddEditForm.controls['leaveNotes'].valid && patientAddEditForm.controls['leaveNotes'].errors.required\">Patient Diagnoses & Notes can not be blank</mat-error>\n              </mat-form-field>\n            </span>\n\n          </fieldset>\n        </form>\n      </mat-card-content>\n    </mat-card>\n\n\n  </mat-card-content>\n  <!-- patient form end here -->\n</mat-card-content>\n\n\n<mat-toolbar class=\"action_button\">\n  <button mat-flat-button type=\"reset\">Reset </button>\n  <button mat-flat-button type=\"submit\" (click)=\"patientAddEditFormSubmit()\"> update </button>\n</mat-toolbar>\n\n<app-admin-footer></app-admin-footer>\n","import { Component, OnInit, Inject, ViewChild, HostListener } from '@angular/core';\nimport {\n  FormBuilder, FormControl, FormGroup, Validators, FormGroupDirective\n} from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpServiceService } from '../../../../services/http-service.service';\nimport { DatePipe } from '@angular/common';\nimport { CookieService } from 'ngx-cookie-service';\nimport { MatSnackBar } from '@angular/material';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from \"@angular/material\";\nimport { DialogBoxComponent } from '../../../common/dialog-box/dialog-box.component';\nimport { CommonFunction } from '../../../../class/common/common-function';\n\nimport { MAT_MOMENT_DATE_FORMATS, MomentDateAdapter } from '@angular/material-moment-adapter';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\n\n// Depending on whether rollup is used, moment needs to be imported differently.\n// Since Moment.js doesn't have a default export, we normally need to import using the `* as`\n// syntax. However, rollup creates a synthetic default module and we thus need to import it using\n// the `default as` syntax.\nimport * as _moment from 'moment';\n// tslint:disable-next-line:no-duplicate-imports\nimport { default as _rollupMoment } from 'moment';\n\nconst moment = _rollupMoment || _moment;\nexport interface DialogData {\n  message: string;\n}\n\nexport const MY_FORMATS = {\n  parse: {\n    dateInput: 'LL',\n  },\n  display: {\n    dateInput: 'LL',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY',\n  },\n};\n\n@Component({\n  selector: 'app-edit-patient-record',\n  templateUrl: './edit-patient-record.component.html',\n  styleUrls: ['./edit-patient-record.component.css'],\n  providers: [\n    // `MomentDateAdapter` and `MAT_MOMENT_DATE_FORMATS` can be automatically provided by importing\n    // `MatMomentDateModule` in your applications root module. We provide it at the component level\n    // here, due to limitations of our example generation script.\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\n    { provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS },\n  ],\n})\n\nexport class EditPatientRecordComponent implements OnInit {\n\n  @ViewChild(FormGroupDirective, { static: false }) formDirective: FormGroupDirective;\n  \n  public allPatientDataArray: any;\n  public htmlText: any = { \n    nav: 'Add Patient',\n    header:\"Add Report Manually\",\n    buttonText: \"Submit\",\n  };\n  public allCookies: any;\n  public patientAddEditForm : FormGroup;\n  public dialogRef: any;\n  public ImageData = [];\n  public paramsId: any;\n\n  public startDate: any;\n  public endDate: any;\n  public dateOfBirth: any;\n  public dateFormat: any;\n\n  constructor(public fb: FormBuilder, public activeRoute: ActivatedRoute,\n    public router: Router, public httpService: HttpServiceService, private datePipe: DatePipe,\n    public cookie: CookieService, public snakBar: MatSnackBar, public dialog: MatDialog,\n    public commonFunction: CommonFunction) {\n\n    this.paramsId = this.activeRoute.snapshot.params._id;\n\n    this.allCookies = this.cookie.getAll();\n    this.allCookies.user_details =  JSON.parse(this.allCookies.user_details);\n    this.getAllDoctorData();\n      \n    this.patientAddEditForm = this.fb.group({\n      id                 :  [this.paramsId, [Validators.required]],\n      patientName        :  ['', [Validators.required, Validators.maxLength(30)]],\n      gender             :  ['', [Validators.required]],\n      birthDate          :  ['', [Validators.required]],\n      doctor_id          :  ['', [Validators.required]],\n      tech_id            :  ['', [Validators.required]],\n      testDate           :  ['', [Validators.required]],\n      testCompletedDate  :  ['', [Validators.required]],\n\n      PTGPT              :  ['', [Validators.required]],\n      PTGPT_value        :  ['', []],\n      PTGVLFI            :  ['', [Validators.required]],\n      PTGVLFI_value      :  ['', []],\n      IR                 :  ['', [Validators.required]],\n      IR_value           :  ['', []],\n      ESRNO              :  ['', [Validators.required]],\n      ESRNO_value        :  ['', []],\n      ESRL               :  ['', [Validators.required]],\n      ESRL_value         :  ['', []],\n      peakC              :  ['', [Validators.required]],\n      peakC_value        :  ['', []],\n      PTGtype            :  ['', [Validators.required]],\n      PTGtype_value      :  ['', []],\n      PTGCVD             :  ['', [Validators.required]],\n      PTGCVD_value       :  ['', []],\n      stressI            :  ['', [Validators.required]],\n      stressI_value      :  ['', []],\n      RI                 :  ['', [Validators.required]],\n      RI_value           :  ['', []],\n      AIPTG              :  ['', [Validators.required]],\n      AIPTG_value        :  ['', []],\n      CIsCI              :  ['', [Validators.required]],\n      CIsCI_value        :  ['', []],\n      pNN50              :  ['', [Validators.required]],\n      pNN50_value        :  ['', []],\n      RMSSD              :  ['', [Validators.required]],\n      RMSSD_value        :  ['', []],\n      SDba               :  ['', [Validators.required]],\n      SDba_value         :  ['', []],\n      SDda               :  ['', [Validators.required]],\n      SDda_value         :  ['', []],\n      DPRS               :  ['', [Validators.required]],\n      DPRS_value         :  ['', []],\n      ValsR              :  ['', [Validators.required]],\n      ValsR_value        :  ['', []],\n      BMI                :  ['', [Validators.required]],\n      BMI_value          :  ['', []],\n      bloodPressure      :  ['', [Validators.required]],\n      bloodPressure_value:  ['', []],\n\n      leaveNotes         :  ['', [Validators.required]],\n      systolic_value     :  ['', []],\n      diastolic_value    :  ['', []],\n      status             :  [1, []],\n      report_type        :  ['mannual', []],\n      added_by           :  [this.allCookies.user_details._id, []]\n    });\n  }\n\n  ngOnInit() {\n    this.getAllPatientData();\n  }\n\n  getAllDoctorData() {\n    var data = {\n      \"source\": \"users_view_doctor_list\",\n      \"token\": this.allCookies.jwtToken\n    }\n    this.httpService.httpViaPost('datalist', data).subscribe(response => {\n      this.htmlText.allDoctor = response.res;\n    });\n  }\n\n  getTechList(doctorID: string) {\n    var data = {\n      \"source\": \"users_view_doctor\",\n      \"condition\": {\n          \"_id_object\": doctorID\n      },\n      \"token\": this.allCookies.jwtToken\n    }\n    this.httpService.httpViaPost('datalist', data).subscribe((response) => {\n      this.htmlText.allTech = response.res;\n    });\n  }\n\n  getAllPatientData() {\n    this.activeRoute.data.forEach((data) => {\n      this.allPatientDataArray = data.patientData.res;\n      let patientDetails: any = data.patientData.res;\n\n      this.ImageData = patientDetails[0].images;\n      this.getTechList(patientDetails[0].doctor_id);\n\n      this.patientAddEditForm.controls['patientName'].patchValue(patientDetails[0].patientName);\n      this.patientAddEditForm.controls['gender'].patchValue(patientDetails[0].gender);\n      this.patientAddEditForm.controls['doctor_id'].patchValue(patientDetails[0].doctor_id);\n      this.patientAddEditForm.controls['tech_id'].patchValue(patientDetails[0].tech_id);\n\n      this.patientAddEditForm.controls['report_type'].patchValue(patientDetails[0].report_type);\n      \n      /* Date marge */\n      this.patientAddEditForm.value.birthDate = this.datePipe.transform(patientDetails[0].birthDate, \"MM-dd-yyyy\");\n      this.patientAddEditForm.value.testDate = this.datePipe.transform(patientDetails[0].testDate, \"MM-dd-yyyy\");\n      this.patientAddEditForm.value.testCompletedDate = this.datePipe.transform(patientDetails[0].testCompletedDate, \"MM-dd-yyyy\");\n      this.patientAddEditForm.value.date = this.datePipe.transform(patientDetails[0].date, \"MM-dd-yyyy\");\n\n      this.patientAddEditForm.controls['PTGPT'].patchValue(patientDetails[0].PTGPT); \n      this.patientAddEditForm.controls['PTGPT_value'].patchValue(patientDetails[0].PTGPT_value); \n      this.patientAddEditForm.controls['PTGVLFI'].patchValue(patientDetails[0].PTGVLFI);\n      this.patientAddEditForm.controls['PTGVLFI_value'].patchValue(patientDetails[0].PTGVLFI_value);\n      this.patientAddEditForm.controls['IR'].patchValue(patientDetails[0].IR);\n      this.patientAddEditForm.controls['IR_value'].patchValue(patientDetails[0].IR_value);\n      this.patientAddEditForm.controls['ESRNO'].patchValue(patientDetails[0].ESRNO);\n      this.patientAddEditForm.controls['ESRNO_value'].patchValue(patientDetails[0].ESRNO_value);\n      this.patientAddEditForm.controls['ESRL'].patchValue(patientDetails[0].ESRL);\n      this.patientAddEditForm.controls['ESRL_value'].patchValue(patientDetails[0].ESRL_value);\n      this.patientAddEditForm.controls['peakC'].patchValue(patientDetails[0].peakC);\n      this.patientAddEditForm.controls['peakC_value'].patchValue(patientDetails[0].peakC_value);\n      this.patientAddEditForm.controls['PTGtype'].patchValue(patientDetails[0].PTGtype);\n      this.patientAddEditForm.controls['PTGtype_value'].patchValue(patientDetails[0].PTGtype_value);\n      this.patientAddEditForm.controls['PTGCVD'].patchValue(patientDetails[0].PTGCVD);\n      this.patientAddEditForm.controls['PTGCVD_value'].patchValue(patientDetails[0].PTGCVD_value);\n      this.patientAddEditForm.controls['stressI'].patchValue(patientDetails[0].stressI);\n      this.patientAddEditForm.controls['stressI_value'].patchValue(patientDetails[0].stressI_value);\n      this.patientAddEditForm.controls['RI'].patchValue(patientDetails[0].RI);\n      this.patientAddEditForm.controls['RI_value'].patchValue(patientDetails[0].RI_value);\n      this.patientAddEditForm.controls['AIPTG'].patchValue(patientDetails[0].AIPTG);\n      this.patientAddEditForm.controls['AIPTG_value'].patchValue(patientDetails[0].AIPTG_value);\n      this.patientAddEditForm.controls['CIsCI'].patchValue(patientDetails[0].CIsCI);\n      this.patientAddEditForm.controls['CIsCI_value'].patchValue(patientDetails[0].CIsCI_value);\n      this.patientAddEditForm.controls['pNN50'].patchValue(patientDetails[0].pNN50);\n      this.patientAddEditForm.controls['pNN50_value'].patchValue(patientDetails[0].pNN50_value);\n      this.patientAddEditForm.controls['RMSSD'].patchValue(patientDetails[0].RMSSD);\n      this.patientAddEditForm.controls['RMSSD_value'].patchValue(patientDetails[0].RMSSD_value);\n      this.patientAddEditForm.controls['RMSSD'].patchValue(patientDetails[0].RMSSD);\n      this.patientAddEditForm.controls['RMSSD_value'].patchValue(patientDetails[0].RMSSD_value);\n      this.patientAddEditForm.controls['SDba'].patchValue(patientDetails[0].SDba);\n      this.patientAddEditForm.controls['SDba_value'].patchValue(patientDetails[0].SDba_value);\n      this.patientAddEditForm.controls['SDda'].patchValue(patientDetails[0].SDda);\n      this.patientAddEditForm.controls['SDda_value'].patchValue(patientDetails[0].SDda_value);\n      this.patientAddEditForm.controls['DPRS'].patchValue(patientDetails[0].DPRS);\n      this.patientAddEditForm.controls['DPRS_value'].patchValue(patientDetails[0].DPRS_value);\n      this.patientAddEditForm.controls['ValsR'].patchValue(patientDetails[0].ValsR);\n      this.patientAddEditForm.controls['ValsR_value'].patchValue(patientDetails[0].ValsR_value);\n      this.patientAddEditForm.controls['BMI'].patchValue(patientDetails[0].BMI);\n      this.patientAddEditForm.controls['BMI_value'].patchValue(patientDetails[0].BMI_value);\n      this.patientAddEditForm.controls['bloodPressure'].patchValue(patientDetails[0].bloodPressure);\n      this.patientAddEditForm.controls['bloodPressure_value'].patchValue(patientDetails[0].systolic_value + \"/\" + patientDetails[0].diastolic_value);\n      this.patientAddEditForm.controls['leaveNotes'].patchValue(patientDetails[0].leaveNotes);\n    });\n  }\n\n  patientAddEditFormSubmit() {\n    let x: any;\n    for (x in this.patientAddEditForm.controls) {\n      this.patientAddEditForm.controls[x].markAsTouched();\n    }\n \n    if(this.patientAddEditForm.valid) {\n      this.patientAddEditForm.value.birthDate = this.datePipe.transform(this.patientAddEditForm.value.birthDate, \"MM-dd-yyyy\");\n      this.patientAddEditForm.value.testDate = this.datePipe.transform(this.patientAddEditForm.value.testDate, \"MM-dd-yyyy\");\n      this.patientAddEditForm.value.testCompletedDate = this.datePipe.transform(this.patientAddEditForm.value.testCompletedDate, \"MM-dd-yyyy\");\n      this.patientAddEditForm.value.date = this.datePipe.transform(this.patientAddEditForm.value.date, \"MM-dd-yyyy\");\n\n      /* Setup Blood Pressure (systolic, diastolic) */\n      const bloodPressure = this.patientAddEditForm.controls.bloodPressure_value.value;\n      const systolicDiastolic = bloodPressure.split('/');\n      this.patientAddEditForm.controls['systolic_value'].patchValue(systolicDiastolic[0]);\n      this.patientAddEditForm.controls['diastolic_value'].patchValue(systolicDiastolic[1]);\n      delete this.patientAddEditForm.value.bloodPressure_value;\n      \n      var data: any = {\n        \"source\" : \"patient_management\",\n        \"data\" : this.patientAddEditForm.value,\n        \"sourceobj\": [\"doctor_id\",\"tech_id\"],\n        \"token\" : this.allCookies.jwtToken\n      }\n\n      this.httpService.httpViaPost(\"addorupdatedata\",data).subscribe(response=>{\n        if(response.status=\"success\") {\n          this.formDirective.resetForm();\n          /* Open modal */\n          let data: any = {\n            width: '250px',\n            data: { \n              header: \"Success\",\n              message: \"Record Saved Updated.\",\n              button1: { text: \"OK\" },\n              button2: { text: \"\" },\n            }\n          }\n          this.openDialog(data);\n        }  \n      });\n    }\n  }\n\n  openDialog(data) {\n    this.dialogRef = this.dialog.open(DialogBoxComponent, data);\n    this.dialogRef.afterClosed().subscribe(result => {\n      switch(result) {\n        case \"OK\":\n          this.router.navigateByUrl('/tech/dashboard');\n          break;\n      }\n    });\n  }\n\n  public sliderCount: number = 0;\n  playSlider(action: string) {\n    switch (action) {\n      case 'preview':\n        if (this.sliderCount == 0) {\n          this.sliderCount = this.ImageData.length - 1;\n        } else {\n          this.sliderCount--;\n        }\n        break;\n      case 'next':\n        if (this.sliderCount + 1 == this.ImageData.length) {\n          this.sliderCount = 0;\n        } else {\n          this.sliderCount++;\n        }\n        break;\n    }\n  }\n\n  inputUntouch(form: any, val: any) {\n    form.controls[val].markAsUntouched();\n  }\n\n}\n","<mat-card-content class=\"footer_section\">\n    <span class=\"footer_content\">\n  \n      <mat-card-content class=\"link\">\n        <a href=\"\">Privacy Policy</a>\n        <a href=\"\"> Terms & conditions</a>\n      </mat-card-content>\n      <p>© Copyright 2018 Advanced Wellness Solutions- All Rights Reserved</p>\n    </span>\n  </mat-card-content>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-footer',\n  templateUrl: './admin-footer.component.html',\n  styleUrls: ['./admin-footer.component.css']\n})\nexport class AdminFooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<mat-toolbar class=\"techdashboard_header\" [ngClass]=\"{'sticky' : isSticky}\">\n    <mat-card-content class=\"header_wrapper\">\n      <span class=\"logo_wrapper\" [routerLink]=\"[ '/admin/dashboard' ]\">\n        <img src=\"../../../assets/images/logo.png\">\n      </span>\n\n      <button mat-flat-button  (click)=\"menuFunction()\" class=\"togle_menu\"><i class=\"material-icons\"> menu </i></button>\n      <mat-card-content class=\"quotation\"  [ngClass]=\"status ? 'success' : 'danger'\">\n          <mat-nav-list>\n              <a mat-list-item routerLinkActive=\"active\" [routerLink]=\"['/admin/dashboard']\"> Dashboard </a>\n              <a mat-list-item [routerLink]=\"['/admin/doctor-management']\" routerLinkActive=\"active\"> Manage Doctor </a>\n              <a mat-list-item [routerLink]=\"['/admin/biller-management']\" routerLinkActive=\"active\"> Manage Biller </a>\n              <a mat-list-item [routerLink]=\"['/admin/tech-management']\" routerLinkActive=\"active\"> Manage Tech </a>\n              <a mat-list-item [routerLink]=\"['/admin/admin-management']\" routerLinkActive=\"active\"> Manage Admin </a>\n              <a mat-list-item [routerLink]=\"['/admin/doctor-office-management']\" routerLinkActive=\"active\"> Doctors Office </a>\n              <a mat-list-item [routerLink]=\"['/admin/booked-appoinments']\" routerLinkActive=\"active\"> Booked Appointments</a>\n            </mat-nav-list>\n      </mat-card-content>\n\n\n      <mat-card-content class=\"profile_section\">\n        <mat-menu #appMenu=\"matMenu\">\n          <button mat-menu-item [routerLink]=\"['/admin/account-settings']\">\n            <mat-icon>account_circle</mat-icon> Account Settings\n          </button>\n\n          <button mat-menu-item [routerLink]=\"['/admin/account-settings/change-password']\">\n            <mat-icon>vpn_key</mat-icon> Change Password\n          </button>\n\n          <button mat-menu-item (click)=\"logout()\"> <mat-icon>power_settings_new</mat-icon> Logout </button>\n        </mat-menu>\n        <span class=\"username\">{{user_data.firstname}} {{user_data.lastname}}</span>\n        <button mat-icon-button [matMenuTriggerFor]=\"appMenu\">\n          <span class=\"user_profile\">\n            <mat-icon>account_circle</mat-icon>\n            <i class=\"material-icons\">\n              keyboard_arrow_down\n            </i>\n          </span>\n        </button>\n      </mat-card-content>\n    </mat-card-content>\n  </mat-toolbar>\n  <!-- end header -->\n\n\n","import { Component, OnInit, HostListener } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CommonFunction } from '../../../class/common/common-function';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\n\n@Component({\n  selector: 'app-admin-header',\n  templateUrl: './admin-header.component.html',\n  styleUrls: ['./admin-header.component.css']\n})\n\nexport class AdminHeaderComponent implements OnInit {\n\n  status: boolean = true;\n  public user_data: any = {};\n  public loader: boolean = true;\n  public user_cookie:any;\n\n  constructor(public cookies: CookieService, public router: Router, public commonFunction: CommonFunction) {\n    window.scroll(0, 0);\n    let allData: any = {};\n    allData = this.cookies.getAll();\n    this.user_data = JSON.parse(allData.user_details);\n    this.user_cookie = cookies.get('jwtToken');\n  }\n\n  ngOnInit() {\n    /* Set Meta Data */\n    this.commonFunction.setTitleMetaTags();\n  }\n\n  /**logout function start here**/\n  logout() {\n    this.cookies.delete('jwtToken');\n    this.cookies.delete('user_details');\n    this.cookies.deleteAll();\n    setTimeout(() => {\n      this.router.navigateByUrl('logout');\n    }, 1000);\n  }\n  /**logout function end here**/\n\n  // don't remove it's for menu toggleing\n  menuFunction(){\n    this.status = !this.status;\n\n  }\n\n   // sticky section\n   isSticky: boolean = false;\n\n  //  @HostListener('window:scroll', ['$event'])\n  //  checkScroll() {\n  //    this.isSticky = window.pageYOffset >= 20;\n  //  }\n\n}\n","<!-- Admin Header -->\n<app-admin-header></app-admin-header>\n<mat-card class=\"admin_wrapper\">\n<!-- header with add button -->\n<mat-card-content class=\"title_wrapper\">\n  {{ htmlText.header }}\n</mat-card-content>\n\n\n<span class=\"add_header\">\n  <span class=\"bradcrumb\">\n    <a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a>&nbsp;\n    <a [routerLink]=\"['/admin/admin-management']\">Manage Admin &nbsp;/</a> &nbsp;\n    {{ htmlText.nav }}\n  </span>\n</span>\n\n<mat-card class=\"add_form\">\n  <!-- <h2>{{ htmlText.header }}</h2> -->\n\n  <mat-card-content class=\"form_wrapper\">\n    <form class=\"example-form\" autocomplete=\"off\" name=\"adminManagementAddEditForm\"\n      [formGroup]=\"adminManagementAddEditForm\" (ngSubmit)=\"AdminManagementAddFormSubmit()\">\n\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Enter First Name</mat-label>\n        <input matInput placeholder=\"First Name\" [formControl]=\"adminManagementAddEditForm.controls['firstname']\"\n          (blur)=\"inputUntouch(adminManagementAddEditForm,'firstname')\">\n        <mat-error *ngIf=\"adminManagementAddEditForm.controls['firstname'].touched && !adminManagementAddEditForm.controls['firstname'].valid\n           && adminManagementAddEditForm.controls['firstname'].errors.required\">\n          First Name field can not be blank</mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Enter Last Name</mat-label>\n        <input matInput placeholder=\"Last Name\" [formControl]=\"adminManagementAddEditForm.controls['lastname']\"\n          (blur)=\"inputUntouch(adminManagementAddEditForm,'lastname')\">\n        <mat-error *ngIf=\"adminManagementAddEditForm.controls['lastname'].touched && !adminManagementAddEditForm.controls['lastname'].valid\n           && adminManagementAddEditForm.controls['lastname'].errors.required\">\n          Last Name can not be blank</mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Email Address</mat-label>\n        <input matInput placeholder=\"Email Address\" [formControl]=\"adminManagementAddEditForm.controls['email']\"\n          (blur)=\"inputUntouch(adminManagementAddEditForm,'email')\">\n        <mat-error *ngIf=\"adminManagementAddEditForm.controls['email'].touched && !adminManagementAddEditForm.controls['email'].valid\n            && adminManagementAddEditForm.controls['email'].errors.required\">\n          E-Mail can not be blank</mat-error>\n          <mat-error\n          *ngIf=\"!adminManagementAddEditForm.controls['email'].valid && !adminManagementAddEditForm.controls['email'].errors.required\">\n          Email is not valid</mat-error>\n\n          <!-- <mat-error *ngIf=\"!adminManagementAddEditForm.controls['email'].valid\">\n          Email is already taken.</mat-error> -->\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Phone </mat-label>\n        <input matInput placeholder=\"Phone\" [formControl]=\"adminManagementAddEditForm.controls['phone']\"\n          (blur)=\"inputUntouch(adminManagementAddEditForm,'phone')\">\n        <mat-error *ngIf=\"adminManagementAddEditForm.controls['phone'].touched && !adminManagementAddEditForm.controls['phone'].valid\n            && adminManagementAddEditForm.controls['phone'].errors.required\">\n          Phone Number field can not be blank</mat-error>\n      </mat-form-field>\n\n      <mat-form-field>\n        <mat-label>Date</mat-label>\n        <input [value]=\"date.value\" matInput [matDatepicker]=\"myPicker\" placeholder=\"date\" disabled>\n        <mat-datepicker-toggle matSuffix [for]=\"myPicker\" disabled></mat-datepicker-toggle>\n        <mat-datepicker #myPicker></mat-datepicker>\n      </mat-form-field>\n\n      <ng-container *ngIf =\"!params_id\">\n      <mat-form-field class=\"form-group\" appearance=\"fill\">\n        <input matInput placeholder=\"Password\" type=\"password\"\n          [formControl]=\"adminManagementAddEditForm.controls['password']\">\n        <mat-error\n          *ngIf=\"!adminManagementAddEditForm.controls['password'].valid && adminManagementAddEditForm.controls['password'].touched\">\n          Password field can not be blank</mat-error>\n      </mat-form-field>\n      <mat-form-field class=\"form-group\" appearance=\"fill\">\n        <input matInput placeholder=\"Confirm Password\" type=\"password\"\n          [formControl]=\"adminManagementAddEditForm.controls['confirmpassword']\">\n        <mat-error\n          *ngIf=\"!adminManagementAddEditForm.controls['confirmpassword'].valid && adminManagementAddEditForm.controls['confirmpassword'].touched\">\n          Password does not match </mat-error>\n      </mat-form-field>\n      </ng-container>\n\n      <mat-checkbox [formControl]=\"adminManagementAddEditForm.controls['status']\" checked>Active</mat-checkbox>\n      <!-- <mat-error *ngIf=\"adminManagementAddEditForm.controls['status'].touched && !adminManagementAddEditForm.controls['status'].valid\n      && adminManagementAddEditForm.controls['status'].errors.required\">\n        Status field can not be blank</mat-error> -->\n\n\n      <span class=\"submit_form\">\n        <button mat-flat-button type=\"button\" (click)=\"backToManagePage()\">Back </button>\n        <button mat-flat-button type=\"reset\">Reset </button>\n        <button mat-flat-button type=\"submit\" >{{ htmlText.buttonText }} </button>\n        <ng-container *ngIf =\"params_id\">\n          <button mat-flat-button type=\"button\" (click)=\"openDialog('')\"  > Change Password </button>\n        </ng-container>\n      </span>\n\n    </form>\n  </mat-card-content>\n\n</mat-card>\n</mat-card>\n<!-- Admin Footer -->\n<app-admin-footer></app-admin-footer>\n","\n<mat-card class=\"add_form\">\n    <h1 mat-dialog-title>Change Password</h1>\n\n    <form class=\"example-form\" autocomplete=\"off\" name=\"changePwdForm\" [formGroup]=\"changePwdForm\"\n        (ngSubmit)=\"changePasswordFormSubmit()\">\n        <mat-dialog-content class=\"mat-typography\">\n\n\n            <mat-form-field>\n                <input matInput placeholder=\"Password\" type=\"password\"\n                [formControl]=\"changePwdForm.controls['password']\">\n                <mat-error *ngIf=\"changePwdForm.controls['password'].touched && !changePwdForm.controls['password'].valid\n          && changePwdForm.controls['password'].errors.required\">\n                    Password can not be blank</mat-error>\n            </mat-form-field> <br>\n            <mat-form-field>\n                <input matInput placeholder=\"Confirm Password\" type=\"password\"\n                [formControl]=\"changePwdForm.controls['confirmpassword']\">\n                <mat-error\n                    *ngIf=\"!changePwdForm.controls['confirmpassword'].valid && changePwdForm.controls['confirmpassword'].touched\">\n                    Password does not match </mat-error>\n                \n            </mat-form-field><br>   \n\n            <span class=\"submit_form\">\n                <button mat-flat-button mat-dialog-close type=\"button\" > Cancel </button>\n                <button mat-flat-button type=\"submit\" [mat-dialog-close]=\"true\" cdkFocusInitial> Submit </button>\n            </span>\n        </mat-dialog-content>\n    </form>\n</mat-card>","import { Component, OnInit ,ViewChild,Inject} from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl, FormGroupDirective, AbstractControl } from '@angular/forms';\nimport { DatePipe } from '@angular/common';\nimport { HttpServiceService } from '../../../../services/http-service.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from \"@angular/material\";\nimport { environment } from '../../../../../environments/environment';\n\nexport interface DialogData {\n  message: string;\n  id: any;\n}\n\n@Component({\n  selector: 'app-add-edit',\n  templateUrl: './add-edit.component.html',\n  styleUrls: ['./add-edit.component.css']\n})\n\nexport class AddEditComponent implements OnInit {\n  @ViewChild(FormGroupDirective,{static: false}) formDirective: FormGroupDirective;\n  public dialogRef: any;\n  date = new FormControl(new Date());\n  public ddmmyy: any;\n  serializedDate = new FormControl((new Date()).toISOString());\n  public adminManagementAddEditForm: FormGroup;\n  public user_token: any;\n  public params_id: any;\n  public htmlText: any = { header: 'Add New Admin', nav: 'Add Admin', buttonText: 'Save' };\n  public message: any = \"Submitted Successfully\";\n  public taxo_array:any=[];\n  \n  constructor(public fb: FormBuilder, private datePipe: DatePipe, public httpService: HttpServiceService, public cookie: CookieService, public router: Router, public snackBar: MatSnackBar, public activeRoute: ActivatedRoute, public dialog: MatDialog) {\n    this.user_token = cookie.get('jwtToken');\n    if(this.params_id) {\n      this.generateEditForm();\n    } else {\n      this.generateAddForm();\n    }\n  }\n\n  ngOnInit() {\n    if (this.activeRoute.snapshot.params._id) {\n      this.message = \"Updated Successfully\";\n      this.htmlText.header = 'Edit Admin Record';\n      this.htmlText.nav = 'Edit Admin';\n      this.htmlText.buttonText = 'Update';\n      this.params_id = this.activeRoute.snapshot.params._id;\n      this.getSingleResolveData();\n    }\n  }\n\n  generateAddForm(){\n    this.datePipe.transform(this.date.value, 'MM-dd-yyyy');\n    var dateformat = this.datePipe.transform(new Date(), \"MM-dd-yyyy\");\n    this.adminManagementAddEditForm = this.fb.group({\n      firstname: ['', Validators.required],\n      lastname: ['', Validators.required],\n      email: [null, [Validators.required, Validators.email, Validators.maxLength(100)]],\n      phone: ['', Validators.required],\n      date: [dateformat],\n      type: ['admin'],\n      taxo_list : [],\n      status: ['', Validators.required],\n      password: ['', [Validators.required, Validators.maxLength(16), Validators.minLength(6)]],\n      confirmpassword: [],\n    }, { validator: this.machpassword('password', 'confirmpassword') })\n  }\n\n  validateEmailNotTaken(control: AbstractControl) {  \n    return (control: AbstractControl) => {\n      return this.httpService.checkingDuplicateEmail(control.value).subscribe((res) => {\n        if(res.data.length == 0) {\n          return { emailTaken: false }; \n        } else {\n          return { emailTaken: true };\n        }\n      });\n    };\n  }\n\n  generateEditForm(){\n    this.datePipe.transform(this.date.value, 'MM-dd-yyyy');\n    var dateformat = this.datePipe.transform(new Date(), \"MM-dd-yyyy\");\n    this.adminManagementAddEditForm = this.fb.group({\n      firstname: ['', Validators.required],\n      lastname: ['', Validators.required],\n      email: [null, [Validators.required, Validators.email, Validators.maxLength(100)]],\n      phone: ['', Validators.required],\n      date: [dateformat],\n      type: ['admin'],\n      taxo_list : [],\n      status: ['', Validators.required],\n    })\n\n  }\n\n  machpassword(passwordkye: string, confirmpasswordkye: string) {\n    return (group: FormGroup) => {\n      let passwordInput = group.controls[passwordkye],\n        confirmpasswordInput = group.controls[confirmpasswordkye];\n      if (passwordInput.value !== confirmpasswordInput.value) {\n        return confirmpasswordInput.setErrors({ notEquivalent: true });\n      }\n      else {\n        return confirmpasswordInput.setErrors(null);\n      }\n    };\n  }\n\n  /**Resolve data for edit */\n  getSingleResolveData() {\n    this.activeRoute.data.forEach((data) => {\n      let AdminSingleData: any\n      AdminSingleData = data.adminsingleData.res;\n      this.adminManagementAddEditForm.controls['firstname'].patchValue(AdminSingleData[0].firstname);\n      this.adminManagementAddEditForm.controls['lastname'].patchValue(AdminSingleData[0].lastname);\n      this.adminManagementAddEditForm.controls['email'].patchValue(AdminSingleData[0].email);\n      this.adminManagementAddEditForm.controls['phone'].patchValue(AdminSingleData[0].phone);\n      this.adminManagementAddEditForm.controls['status'].patchValue(AdminSingleData[0].status);\n      this.adminManagementAddEditForm.controls['password'].patchValue(AdminSingleData[0].password);\n    });\n  }\n\n  /**for validation purpose**/\n  inputUntouch(form: any, val: any) {\n    form.controls[val].markAsUntouched();\n  }\n\n  /**for validation purpose**/\n  ResetAddEditForm() {\n    this.formDirective.resetForm();\n  }\n\n  backToManagePage(){\n    this.router.navigateByUrl('/admin/admin-management');\n  }\n\n  openDialog(x: any): void {\n    this.dialogRef = this.dialog.open(ChangePasswordAdminModal, {\n      data: { message: x, 'id': this.params_id }\n    });\n    this.dialogRef.afterClosed().subscribe(result => {\n    });\n  }\n\n  AdminManagementAddFormSubmit() {\n    let x: any;\n    for (x in this.adminManagementAddEditForm.controls) {\n      this.adminManagementAddEditForm.controls[x].markAsTouched();\n    }\n    if (this.adminManagementAddEditForm.valid) {\n      if (this.adminManagementAddEditForm.value.status)\n        this.adminManagementAddEditForm.value.status = parseInt(\"1\");\n      else\n        this.adminManagementAddEditForm.value.status = parseInt(\"0\");\n        this.adminManagementAddEditForm.value.taxo_list=this.taxo_array;\n      /**delete confirmpassword  field before submitted the form */\n      delete this.adminManagementAddEditForm.value.confirmpassword;\n      /**end */\n      var data\n      if (this.params_id) {\n        data = {\n          \"source\": \"users\",\n          \"data\": {\n            id: this.params_id,\n            firstname: this.adminManagementAddEditForm.value.firstname,\n            lastname: this.adminManagementAddEditForm.value.lastname,\n            phone: this.adminManagementAddEditForm.value.phone,\n            email: this.adminManagementAddEditForm.value.email,\n            date: this.adminManagementAddEditForm.value.data,\n            password: this.adminManagementAddEditForm.value.password,\n            status: this.adminManagementAddEditForm.value.status,\n          },\n          \"token\": this.user_token\n        }\n      } else {\n        data = {\n          \"source\": \"users\",\n          \"data\": this.adminManagementAddEditForm.value,\n          \"token\": this.user_token,\n          \"domainurl\" : environment.siteBaseUrl + 'reset-password'\n        }\n      }\n\n      this.httpService.httpViaPost(\"addorupdatedata\", data)\n        .subscribe(response => {\n          let action = \"Ok\";\n          this.snackBar.open(this.message, action, {\n            duration: 2000,\n          });\n          this.formDirective.resetForm();\n        });\n    }\n  }\n}\n\n@Component({\n  selector: 'dialogtest',\n  templateUrl: 'modal.html',\n})\n\nexport class ChangePasswordAdminModal {\n  public is_error: any;\n  public changePwdForm: any = FormGroup;\n  public user_token: any;\n  public params_id: any;\n  public userData: any;\n\n  constructor(public dialogRef: MatDialogRef<ChangePasswordAdminModal>,\n    public fb: FormBuilder, public httpService: HttpServiceService, public cookie: CookieService,\n    public activeRoute: ActivatedRoute, @Inject(MAT_DIALOG_DATA) public data: DialogData) {\n    this.params_id = data.id;\n\n    this.user_token = cookie.get('jwtToken');\n    this.changePwdForm = this.fb.group({\n      password: ['', Validators.required],\n      confirmpassword: [],\n    }, { validators: this.matchpassword('password', 'confirmpassword') })\n\n  }\n\n  matchpassword(passwordkye: string, confirmpasswordkye: string) {\n    return (group: FormGroup) => {\n      let passwordInput = group.controls[passwordkye],\n        confirmpasswordInput = group.controls[confirmpasswordkye];\n      if (passwordInput.value !== confirmpasswordInput.value) {\n        return confirmpasswordInput.setErrors({ notEquivalent: true });\n      }\n      else {\n        return confirmpasswordInput.setErrors(null);\n      }\n    };\n  }\n\n  changePasswordFormSubmit() {\n    let x: any;\n    for (x in this.changePwdForm.controls) {\n      this.changePwdForm.controls[x].markAsTouched();\n    }\n    if (this.changePwdForm.valid) {\n      delete this.changePwdForm.value.confirmpassword\n      var data = {\n        \"_id\": this.params_id,\n        \"adminflag\": 1,\n        \"newPassword\": this.changePwdForm.value.password,\n      }\n      this.httpService.httpViaPost('changepassword',data).subscribe((response)=>{\n        console.log(\"response\",response);\n      });\n    }\n  }\n}\n\n","<!-- Admin Header -->\n<app-admin-header></app-admin-header>\n\n<!-- header with add button -->\n<mat-card class=\"admin_wrapper\">\n  <!-- header with add button -->\n  <mat-card-content class=\"table_wrapper\">\n    <mat-toolbar class=\"top_header\">\n      <h2> manage admin </h2>\n    </mat-toolbar>\n\n    <span class=\"add_header\">\n\n\n      <span class=\"bradcrumb\"><a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage Admin</span>\n      <button mat-flat-button [routerLink]=\"['/admin/admin-management/add']\">Add Admin</button>\n    </span>\n    <!-- End header with add button -->\n    <!-- <span class=\"add_header\">\n  <button mat-flat-button [routerLink]=\"[ '/admin-management/add']\">Add Admin</button>\n</span> -->\n    <!-- table -->\n    <lib-listing class=\"DataTable\" *ngIf=\"TechDashboardAllData.length>0\" [datasource]=\"TechDashboardAllData\"\n      [skip]=\"allUserData_skip\" [detail_skip_array]=\"previewModal_skip\"\n      [modify_header_array]=\"allUserData_modify_header\" [apiurl]=\"apiUrl\" [sourcedata]=\"tableName\" [editroute]=\"editUrl\"\n      [jwttoken]=\"user_cookie\" [statusarr]=\"status\" [updateendpoint]=\"UpdateEndpoint\" [deleteendpoint]=\"deleteEndpoint\"\n      [date_search_endpoint]=\"SearchingEndpoint\" [date_search_source]=\"SearchingSourceName\"\n      [search_settings]=\"search_settings\">\n    </lib-listing>\n    <h2 *ngIf=\"TechDashboardAllData.length == 0\">No record found.</h2>\n    <!-- end table -->\n\n    <!-- Admin Footer -->\n  </mat-card-content>\n</mat-card>\n<app-admin-footer></app-admin-footer>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { HttpServiceService } from '../../../../services/http-service.service';\n\n@Component({\n  selector: 'app-manage-admin-list',\n  templateUrl: './manage-admin-list.component.html',\n  styleUrls: ['./manage-admin-list.component.css']\n})\nexport class ManageAdminListComponent implements OnInit {\n\n  public TechDashboardAllData: any = [];\n  public allUserData_skip: any = [\"confirmpassword\", \"accesscode\", \"password\",\n    \"created_at\", \"_id\", \"id\", \"updated_at\", \"phoneno\", \"type\", \"taxo_list\",\n    \"state\", \"city\", \"zip\", \"address\", \"fullName\",\"zip\",\"city\",\"state\"];\n  public editUrl: any = \"admin/admin-management/edit\";\n  public allUserData_modify_header: any = {\n    \"firstname\": \"First Name\", \"lastname\": \"Last Name\",\n    \"email\": \"E-Mail\", \"phone\": \"Phone Number\", \"date\": \"Date\",\n    \"status\": \"Status\",\"address\": \"Address\",\n    \"fullNamecopy\": \"Name\"\n  };\n\n  public UpdateEndpoint: any = \"addorupdatedata\";\n  public deleteEndpoint: any = \"deletesingledata\";\n  public previewModal_skip : any=['_id','fullNamecopy'];\n  public tableName: any = \"users\";\n  public apiUrl: any;\n  public status: any = [{ val: 1, 'name': 'Active' }, { val: 0, 'name': 'Inactive' }];\n  public SearchingEndpoint: any = \"datalist\";\n  public SearchingSourceName: any = \"users_view_admin\";\n  public search_settings: any =\n    {\n      selectsearch: [{ label: 'Search By Status', field: 'status', values: this.status }],\n      textsearch: [{ label: \"Search By Name\", field: 'fullName' },\n      { label: \"Search By E-Mail\", field: 'email' }],\n\n    };\n  public user_cookie: any;\n\n\n  constructor(public activatedRoute: ActivatedRoute, public cookie: CookieService,\n    public httpService: HttpServiceService) {\n\n    this.user_cookie = cookie.get('jwtToken');\n    this.apiUrl = httpService.baseUrl;\n    \n  }\n\n  ngOnInit() {\n    this.activatedRoute.data.forEach((data) => {\n      this.TechDashboardAllData = data.adminManagementdData.res;\n    })\n\n\n  }\n\n\n}\n","<!-- Admin Header -->\n<app-admin-header></app-admin-header>\n<mat-card class=\"admin_wrapper\">\n<!-- header with add button -->\n<mat-card-content class=\"title_wrapper\">\n  {{ htmlText.header }}\n</mat-card-content>\n\n\n<span class=\"add_header\">\n  <span class=\"bradcrumb\">\n    <a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp;\n    <a [routerLink]=\"['/admin/biller-management']\">Manage Biller &nbsp;/</a> &nbsp;\n    {{ htmlText.nav }}\n  </span>\n</span>\n<!-- End header with add button -->\n\n\n<mat-card class=\"add_form\">\n  <!-- <h2> {{ htmlText.header }}</h2> -->\n\n  <mat-card-content class=\"form_wrapper\">\n    <form class=\"example-form\" autocomplete=\"off\" name=\"billerManagementAddEditForm\"\n      [formGroup]=\"billerManagementAddEditForm\" (ngSubmit)=\"BillerManagementAddFormSubmit()\">\n\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Enter First Name</mat-label>\n        <input matInput placeholder=\"First Name\" [formControl]=\"billerManagementAddEditForm.controls['firstname']\"\n          (blur)=\"inputUntouch(billerManagementAddEditForm,'firstname')\">\n        <mat-error *ngIf=\"billerManagementAddEditForm.controls['firstname'].touched && !billerManagementAddEditForm.controls['firstname'].valid\n           && billerManagementAddEditForm.controls['firstname'].errors.required\">\n          First Name field can not be blank</mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Enter Last Name</mat-label>\n        <input matInput placeholder=\"Last Name\" [formControl]=\"billerManagementAddEditForm.controls['lastname']\"\n          (blur)=\"inputUntouch(billerManagementAddEditForm,'lastname')\">\n        <mat-error *ngIf=\"billerManagementAddEditForm.controls['lastname'].touched && !billerManagementAddEditForm.controls['lastname'].valid\n           && billerManagementAddEditForm.controls['lastname'].errors.required\">\n          Last Name field can not be blank</mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Email Address</mat-label>\n        <input matInput placeholder=\"Email Address\" [formControl]=\"billerManagementAddEditForm.controls['email']\"\n          (blur)=\"inputUntouch(billerManagementAddEditForm,'email')\">\n        <mat-error *ngIf=\"billerManagementAddEditForm.controls['email'].touched && !billerManagementAddEditForm.controls['email'].valid\n            && billerManagementAddEditForm.controls['email'].errors.required\">\n          E-Mail can not be blank</mat-error>\n        <mat-error\n          *ngIf=\"!billerManagementAddEditForm.controls['email'].valid && !billerManagementAddEditForm.controls['email'].errors.required\">\n          Email is not valid</mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Phone </mat-label>\n        <input matInput placeholder=\"Phone\" [formControl]=\"billerManagementAddEditForm.controls['phone']\"\n          (blur)=\"inputUntouch(billerManagementAddEditForm,'phone')\">\n        <mat-error *ngIf=\"billerManagementAddEditForm.controls['phone'].touched && !billerManagementAddEditForm.controls['phone'].valid\n            && billerManagementAddEditForm.controls['phone'].errors.required\">\n          Phone Number field can not be blank</mat-error>\n      </mat-form-field>\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Company Name </mat-label>\n        <input matInput placeholder=\"Company Name\" [formControl]=\"billerManagementAddEditForm.controls['companyname']\"\n          (blur)=\"inputUntouch(billerManagementAddEditForm,'companyname')\">\n        <mat-error *ngIf=\"billerManagementAddEditForm.controls['companyname'].touched && !billerManagementAddEditForm.controls['companyname'].valid\n            && billerManagementAddEditForm.controls['companyname'].errors.required\">\n          Company Name field can not be blank</mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Address</mat-label>\n        <input matInput placeholder=\"Address\" [formControl]=\"billerManagementAddEditForm.controls['address']\"\n          (blur)=\"inputUntouch(billerManagementAddEditForm,'address')\">\n        <mat-error *ngIf=\"billerManagementAddEditForm.controls['address'].touched && !billerManagementAddEditForm.controls['address'].valid\n            && billerManagementAddEditForm.controls['address'].errors.required\">\n          Address field can not be blank</mat-error>\n      </mat-form-field>\n\n      <mat-form-field class=\"parent_cat\" appearance=\"fill\">\n        <mat-label>State</mat-label>\n        <mat-select formControlName=\"state\" (selectionChange)=\"getCity($event.value);\">\n          <mat-option [value]=0>Select a category</mat-option>\n          <mat-option *ngFor=\"let state of states;\" value=\"{{ state.name }}\">{{ state.name }}</mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <mat-form-field class=\"parent_cat\" appearance=\"fill\">\n        <mat-label>City</mat-label>\n        <mat-select formControlName=\"city\">\n          <mat-option value=0>Select a category</mat-option>\n          <mat-option *ngFor=\"let city of cities;\" value=\"{{ city }}\">{{ city }}</mat-option>\n        </mat-select>\n      </mat-form-field>\n\n\n\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Zip</mat-label>\n        <input type=\"number\" matInput placeholder=\"ZIP\" [formControl]=\"billerManagementAddEditForm.controls['zip']\"\n          (blur)=\"inputUntouch(billerManagementAddEditForm,'zip')\">\n        <mat-error *ngIf=\"billerManagementAddEditForm.controls['zip'].touched && !billerManagementAddEditForm.controls['zip'].valid\n          && billerManagementAddEditForm.controls['zip'].errors.required\">\n          Zip field can not be blank</mat-error>\n      </mat-form-field>\n\n      <mat-form-field>\n        <mat-label>Date</mat-label>\n        <input [value]=\"date.value\" matInput [matDatepicker]=\"myPicker\" placeholder=\"date\" disabled>\n        <mat-datepicker-toggle matSuffix [for]=\"myPicker\" disabled></mat-datepicker-toggle>\n        <mat-datepicker #myPicker></mat-datepicker>\n      </mat-form-field>\n\n      <ng-container *ngIf =\"!params_id\">\n      <mat-form-field class=\"form-group\" appearance=\"fill\">\n        <input matInput placeholder=\"Password\" type=\"password\"\n          [formControl]=\"billerManagementAddEditForm.controls['password']\"\n          (blur)=\"inputUntouch(billerManagementAddEditForm,'password')\">\n        <mat-error\n          *ngIf=\"!billerManagementAddEditForm.controls['password'].valid && billerManagementAddEditForm.controls['password'].touched\">\n          Password field can not be blank</mat-error>\n\n      </mat-form-field>\n      <mat-form-field class=\"form-group\" appearance=\"fill\">\n        <input matInput placeholder=\"Confirm Password\" type=\"password\"\n          [formControl]=\"billerManagementAddEditForm.controls['confirmpassword']\"\n          (blur)=\"inputUntouch(billerManagementAddEditForm,'confirmpassword')\">\n        <mat-error\n          *ngIf=\"!billerManagementAddEditForm.controls['confirmpassword'].valid && billerManagementAddEditForm.controls['confirmpassword'].touched\">\n          Password does not match </mat-error>\n      </mat-form-field>\n    </ng-container>\n      <mat-checkbox [formControl]=\"billerManagementAddEditForm.controls['status']\" checked>Active</mat-checkbox>\n\n      <span class=\"submit_form\">\n          <button mat-flat-button type=\"button\" (click)=\"backToManagePage()\">Back </button>\n        <button mat-flat-button type=\"reset\">Reset </button>\n        <button mat-flat-button type=\"submit\" > {{ htmlText.buttonText }}</button>\n        <ng-container *ngIf =\"params_id\">\n            <button mat-flat-button type=\"button\" (click)=\"openDialog('')\"  > Change Password </button>\n          </ng-container>\n      </span>\n\n    </form>\n  </mat-card-content>\n\n</mat-card>\n</mat-card>\n<!-- Admin Footer -->\n<app-admin-footer></app-admin-footer>\n","\n<mat-card class=\"add_form\">\n    <h1 mat-dialog-title>Change Password</h1>\n\n    <form class=\"example-form\" autocomplete=\"off\" name=\"changePwdForm\" [formGroup]=\"changePwdForm\"\n        (ngSubmit)=\"changePasswordFormSubmit()\">\n        <mat-dialog-content class=\"mat-typography\">\n\n\n            <mat-form-field>\n                <input matInput placeholder=\"Password\" type=\"password\"\n                [formControl]=\"changePwdForm.controls['password']\">\n                <mat-error *ngIf=\"changePwdForm.controls['password'].touched && !changePwdForm.controls['password'].valid\n          && changePwdForm.controls['password'].errors.required\">\n                    Password can not be blank</mat-error>\n            </mat-form-field> <br>\n            <mat-form-field>\n                <input matInput placeholder=\"Confirm Password\" type=\"password\"\n                [formControl]=\"changePwdForm.controls['confirmpassword']\">\n                <mat-error\n                    *ngIf=\"!changePwdForm.controls['confirmpassword'].valid && changePwdForm.controls['confirmpassword'].touched\">\n                    Password does not match </mat-error>\n                \n            </mat-form-field><br>   \n\n            <span class=\"submit_form\">\n                <button mat-flat-button mat-dialog-close type=\"button\" > Cancel </button>\n                <button mat-flat-button type=\"submit\" [mat-dialog-close]=\"true\" cdkFocusInitial> Submit </button>\n            </span>\n        </mat-dialog-content>\n    </form>\n</mat-card>","import { Component, OnInit ,ViewChild,Inject} from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl,FormGroupDirective } from '@angular/forms';\nimport { DatePipe } from '@angular/common';\nimport { HttpServiceService } from '../../../../services/http-service.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from \"@angular/material\";\nimport { environment } from '../../../../../environments/environment';\n\nexport interface DialogData {\n  message: string;\n  id: any;\n}\n\n@Component({\n  selector: 'app-add-edit-biller',\n  templateUrl: './add-edit-biller.component.html',\n  styleUrls: ['./add-edit-biller.component.css']\n})\n\nexport class AddEditBillerComponent implements OnInit {\n  @ViewChild(FormGroupDirective,{static: true}) formDirective: FormGroupDirective;\n  public dialogRef: any;\n\n  public billerManagementAddEditForm: FormGroup;\n  date = new FormControl(new Date());\n  public ddmmyy: any;\n  public user_token: any;\n  public states: any;\n  public allCities: any;\n  public cities: any;\n  public htmlText: any = { header: 'Add New Biller', nav: 'Add Biller', buttonText: 'Save' };\n  public params_id: any;\n  public message: any = \"Submitted Successfully\";\n  serializedDate = new FormControl((new Date()).toISOString());\n  public taxo_array: any = [];\n\n  constructor(public fb: FormBuilder, private datePipe: DatePipe, public httpService: HttpServiceService, public cookie: CookieService, public router: Router,\n     public snackBar: MatSnackBar, public activeRoute: ActivatedRoute, public dialog: MatDialog) {\n\n    this.params_id = this.activeRoute.snapshot.params._id;\n    this.user_token = cookie.get('jwtToken');\n    this.allStateCityData();\n\n    if(this.params_id) {\n      this.generateEditForm();\n    } else {\n      this.generateAddForm();\n    }\n  }\n\n  ngOnInit() {\n    if(this.params_id){\n      this.htmlText.header = 'Edit Biller Record';\n      this.htmlText.nav = 'Edit Biller';\n      this.htmlText.buttonText = 'Update';\n      this.message = \"Updated Successfully\"\n      this.getSingleData();\n    }\n  }\n\n  generateAddForm() {\n    this.datePipe.transform(this.date.value, 'MM-dd-yyyy');\n    var dateformat = this.datePipe.transform(new Date(), \"MM-dd-yyyy\");\n    this.billerManagementAddEditForm = this.fb.group({\n      firstname: ['', [Validators.required]],\n      lastname: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email, Validators.maxLength(100)]],\n      phone: ['', [Validators.required]],\n      companyname: ['', [Validators.required]],\n      address: ['', [Validators.required]],\n      zip: ['', [Validators.required]],\n      city: ['', []],\n      state: ['', []],\n      date: [dateformat, []],\n      type: ['biller', []],\n      status: ['', []],\n      password: ['', [Validators.required, Validators.maxLength(16), Validators.minLength(6)]],\n      confirmpassword: ['', []],\n    }, { validators: this.matchpassword('password', 'confirmpassword') })\n  }\n\n  generateEditForm() {\n    this.datePipe.transform(this.date.value, 'MM-dd-yyyy');\n    var dateformat = this.datePipe.transform(new Date(), \"MM-dd-yyyy\");\n    this.billerManagementAddEditForm = this.fb.group({\n      firstname: ['', [Validators.required]],\n      lastname: ['', [Validators.required]],\n      email: [null, [Validators.required, Validators.email, Validators.maxLength(100)]],\n      phone: ['', [Validators.required]],\n      companyname: ['', [Validators.required]],\n      address: ['', [Validators.required]],\n      zip: ['', [Validators.required]],\n      city: ['', [Validators.required]],\n      state: ['', [Validators.required]],\n      date: [dateformat, []],\n      type : ['biller', []],\n      status: ['', []],\n    })\n  }\n\n  getSingleData() {\n    this.activeRoute.data.forEach((data) => {\n      let billerDetails :any;\n      billerDetails = data.billersingleData.res;\n      setTimeout(() => {\n        this.getCityByName(billerDetails[0].state);\n      }, 500);\n      this.billerManagementAddEditForm.controls['firstname'].patchValue(billerDetails[0].firstname);\n      this.billerManagementAddEditForm.controls['lastname'].patchValue(billerDetails[0].lastname);\n      this.billerManagementAddEditForm.controls['email'].patchValue(billerDetails[0].email);\n      this.billerManagementAddEditForm.controls['phone'].patchValue(billerDetails[0].phone);\n      this.billerManagementAddEditForm.controls['companyname'].patchValue(billerDetails[0].companyname);\n      this.billerManagementAddEditForm.controls['address'].patchValue(billerDetails[0].address);\n      this.billerManagementAddEditForm.controls['zip'].patchValue(billerDetails[0].zip);\n      this.billerManagementAddEditForm.controls['city'].patchValue(billerDetails[0].city);\n      this.billerManagementAddEditForm.controls['state'].patchValue(billerDetails[0].state);\n      this.billerManagementAddEditForm.controls['status'].patchValue(billerDetails[0].status);\n    });\n  }\n\n  matchpassword(passwordkye: string, confirmpasswordkye: string) {\n    return (group: FormGroup) => {\n      let passwordInput = group.controls[passwordkye],\n        confirmpasswordInput = group.controls[confirmpasswordkye];\n      if (passwordInput.value !== confirmpasswordInput.value) {\n        return confirmpasswordInput.setErrors({ notEquivalent: true });\n      }\n      else {\n        return confirmpasswordInput.setErrors(null);\n      }\n    };\n  }\n\n  /**for validation purpose**/\n  inputUntouch(form: any, val: any) {\n    form.controls[val].markAsUntouched();\n  }\n\n  /**for validation purpose**/\n  /**for getting all states & cities function start here**/\n  allStateCityData() {\n    this.httpService.getSiteSettingData(\"./assets/data-set/state.json\").subscribe(response => {\n      this.states = response;\n      // this.getSingleData();\n    });\n\n    this.httpService.getSiteSettingData(\"./assets/data-set/city.json\").subscribe(response => {\n      this.allCities = response;\n      if(this.params_id){\n        this.getSingleData();\n      }    \n    });\n  }\n\n  /**for getting all states & cities  function end here**/\n  getCity(event) {\n    var val = event;\n    this.cities = this.allCities[val];\n  }\n\n  getCityByName(stateName) {\n    console.log(stateName)\n    this.cities = this.allCities[stateName];\n  }\n\n  ResetAddEditForm() {\n    this.formDirective.resetForm();\n  }\n\n  backToManagePage(){\n    this.router.navigateByUrl(\"admin/biller-management\");\n  }\n\n  openDialog(x: any): void {\n    this.dialogRef = this.dialog.open(ChangePasswordModal, {\n      data: { message: x, 'id': this.params_id }\n    });\n    this.dialogRef.afterClosed().subscribe(result => {\n    });\n  }\n\n  BillerManagementAddFormSubmit() {\n    let x: any;\n    for (x in this.billerManagementAddEditForm.controls) {\n      this.billerManagementAddEditForm.controls[x].markAsTouched();\n    }\n    if (this.billerManagementAddEditForm.valid) {\n      if (this.billerManagementAddEditForm.value.status)\n        this.billerManagementAddEditForm.value.status = parseInt(\"1\");\n      else\n        this.billerManagementAddEditForm.value.status = parseInt(\"0\");\n        this.billerManagementAddEditForm.value.taxo_list = this.taxo_array;\n      delete this.billerManagementAddEditForm.value.confirmpassword;\n      \n      var data: any;\n      if(this.params_id) {\n        data = {\n          \"data\" : {\n            id: this.params_id,\n            firstname: this.billerManagementAddEditForm.value.firstname,\n            lastname: this.billerManagementAddEditForm.value.lastname,\n            phone: this.billerManagementAddEditForm.value.phone,\n            email: this.billerManagementAddEditForm.value.email,\n            companyname: this.billerManagementAddEditForm.value.companyname,\n            address: this.billerManagementAddEditForm.value.address,\n            zip: this.billerManagementAddEditForm.value.zip,\n            city: this.billerManagementAddEditForm.value.city,\n            state: this.billerManagementAddEditForm.value.state,\n            date: this.billerManagementAddEditForm.value.date,\n            status: this.billerManagementAddEditForm.value.status\n          },\n          \"source\" : \"users\",\n          \"token\"  : this.user_token\n        }\n      } else {\n        data = {\n          \"data\": this.billerManagementAddEditForm.value,\n          \"source\": \"users\",\n          \"domainurl\" : environment.siteBaseUrl + 'reset-password',\n          \"token\": this.user_token\n        }\n      }\n    \n      this.httpService.httpViaPost(\"addorupdatedata\", data).subscribe(response => {\n          if(response.status == 'success') {\n            let action = \"Ok\";\n            this.snackBar.open(this.message, action, {\n              duration: 2000,\n            });\n            this.formDirective.resetForm();\n          } else {\n            this.snackBar.open(response.msg, '', {\n              duration: 2000,\n            });\n          }\n        });\n    }\n  }\n}\n\n@Component({\n  selector: 'dialogtest',\n  templateUrl: 'modal.html',\n})\n\nexport class ChangePasswordModal {\n\n  public is_error: any;\n  public changePwdForm: any = FormGroup;\n  public user_token: any;\n  public params_id: any;\n  public userData: any;\n\n  constructor(public dialogRef: MatDialogRef<ChangePasswordModal>,\n    public fb: FormBuilder, public httpService: HttpServiceService, public cookie: CookieService,\n    public activeRoute: ActivatedRoute, @Inject(MAT_DIALOG_DATA) public data: DialogData) {\n    \n    this.params_id = data.id;\n    this.user_token = cookie.get('jwtToken');\n    this.changePwdForm = this.fb.group({\n      password: ['', [Validators.required, Validators.maxLength(16), Validators.minLength(6)]],\n      confirmpassword: [],\n    }, { validators: this.matchpassword('password', 'confirmpassword') });\n\n  }\n\n  matchpassword(passwordkye: string, confirmpasswordkye: string) {\n    return (group: FormGroup) => {\n      let passwordInput = group.controls[passwordkye],\n        confirmpasswordInput = group.controls[confirmpasswordkye];\n      if (passwordInput.value !== confirmpasswordInput.value) {\n        return confirmpasswordInput.setErrors({ notEquivalent: true });\n      }\n      else {\n        return confirmpasswordInput.setErrors(null);\n      }\n    };\n  }\n\n  changePasswordFormSubmit() {\n    let x: any;\n    for (x in this.changePwdForm.controls) {\n      this.changePwdForm.controls[x].markAsTouched();\n    }\n    if (this.changePwdForm.valid) {\n      delete this.changePwdForm.value.confirmpassword\n      var data = {\n        \"_id\": this.params_id,\n        \"adminflag\": 1,\n        \"newPassword\": this.changePwdForm.value.password,\n      }\n      this.httpService.httpViaPost('changepassword',data).subscribe(response=>{\n        console.log(\"response\",response);\n      });\n    }\n\n  }\n}\n\n","<!-- Admin Header -->\n<app-admin-header></app-admin-header>\n<mat-card class=\"admin_wrapper\">\n<!-- header with add button -->\n<mat-card-content class=\"table_wrapper\">\n  <mat-toolbar class=\"top_header\">\n    <h2> Manage Biller </h2>\n  </mat-toolbar>\n\n<span class=\"add_header\">\n\n  <span class=\"bradcrumb\"><a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage Biller</span>\n  <button mat-flat-button [routerLink]=\"['/admin/biller-management/add']\">Add Biller</button>\n</span>\n<!-- End header with add button -->\n\n<!-- table -->\n<lib-listing class=\"DataTable\" *ngIf=\"allBillerData.length>0\" [datasource]=\"allBillerData\" [skip]=\"allUserData_skip\"\n  [modify_header_array]=\"allUserData_modify_header\" [detail_skip_array]=\"previewModal_detail_skip\" [apiurl]=\"apiUrl\" [sourcedata]=\"tableName\" [editroute]=\"editUrl\"\n  [jwttoken]=\"user_cookie\" [statusarr]=\"status\" [updateendpoint]=\"UpdateEndpoint\" [deleteendpoint]=\"deleteEndpoint\"\n  [date_search_endpoint]=\"SearchingEndpoint\" [date_search_source]=\"SearchingSourceName\" [search_settings]=\"search_settings\">\n</lib-listing>\n<h2 *ngIf=\"allBillerData.length == 0\">No record found.</h2>\n<!-- end table -->\n</mat-card-content>\n</mat-card>\n<!-- Admin Footer -->\n<app-admin-footer></app-admin-footer>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { HttpServiceService } from '../../../../services/http-service.service';\n@Component({\n  selector: 'app-listing-biller',\n  templateUrl: './listing-biller.component.html',\n  styleUrls: ['./listing-biller.component.css']\n})\nexport class ListingBillerComponent implements OnInit {\npublic allBillerData:any=[];\npublic allUserData_skip: any = [\"confirmpassword\", \"password\", \n\"created_at\",\"id\",\"updated_at\", \"_id\",\"type\",\"phoneno\",\"taxo_list\",\"fullName\",\"city\",\"state\",\"zip\"];\n  public editUrl: any = \"admin/biller-management/edit\";\n  public allUserData_modify_header: any = {\n    \"firstname\": \"First Name\", \"lastname\": \"Last Name\",\n    \"email\": \"E-Mail\", \"phone\": \"Phone Number\", \"date\": \"Date Added\",\n    \"status\": \"Status\",\"address\" : \"Address\",\"companyname\":\"Company Name\",\n    \"fullNamecopy\":\"Name\"\n  };\n\n  public UpdateEndpoint: any = \"addorupdatedata\";\n  public deleteEndpoint: any = \"deletesingledata\";\n  public apiUrl: any ;\n  public tableName: any = \"users\";\n  previewModal_detail_skip: any = ['_id','fullNamecopy'];\n  \n  public status: any = [{ val: 1, 'name': 'Active' }, { val: 0, 'name': 'Inactive' }];\n  public SearchingEndpoint: any = \"datalist\";\n  public SearchingSourceName: any=\"users_view_biller\";\n  public search_settings: any =\n    {\n      selectsearch: [{ label: 'Search By Status', field: 'status', values: this.status }],\n      textsearch: [{ label: \"Search By Name\", field: 'fullName' },\n      { label: \"Search By E-Mail\", field: 'email' }],\n\n    };\n  public user_cookie:any;\n  constructor(public activeRoute :ActivatedRoute, public cookie :CookieService,\n    public httpService : HttpServiceService) {\n\n    this.user_cookie = cookie.get('jwtToken');\n    this.apiUrl = httpService.baseUrl;  \n  }\n\n  ngOnInit() {\n    this.getAllBillerData();\n  }\n  getAllBillerData(){\n    this.activeRoute.data.forEach((data) => {\n      this.allBillerData = data.Billerdata.res;\n    })\n  }\n}\n","<!-- Admin Header -->\n<app-admin-header></app-admin-header>\n<mat-card class=\"admin_wrapper\">\n  <!-- header with add button -->\n\n  <span class=\"add_header\">\n\n    <span class=\"bradcrumb\"><a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage\n      Appoinments</span>\n  </span>\n <br>\n\n  <mat-card-content class=\"table_wrapper bookedAppointment\">\n\n    <mat-toolbar class=\"top_header\">\n      <h2> manage appoinments </h2>\n      <!-- <button class=\"add_new\" mat-button routerLink=\"/admin/patient-management/add\">mange manually</button> -->\n    </mat-toolbar>\n\n    <mat-toolbar class=\"action_bar\">\n\n      <mat-form-field>\n        <input matInput placeholder=\"Search by Doctor\"\n          (keyup)=\"filerByReports( 'doctorName_regex', $event.target.value )\">\n      </mat-form-field>\n      <mat-form-field>\n        <input matInput placeholder=\"Search by Patient\"\n          (keyup)=\"filerByReports( 'patientName_regex' , $event.target.value )\">\n      </mat-form-field>\n      <!-- <mat-form-field>\n                    <input matInput placeholder=\"Search by Tech Name\"\n                      (keyup)=\"filerByReports({ 'techname_regex': $event.target.value })\">\n                  </mat-form-field> -->\n      <!-- <mat-form-field class=\"parent_cat\">\n                  <mat-select placeholder=\"Search By Status\" (selectionChange)=\"filerByReports({ 'status_regex': $event.value })\">\n                    <mat-option value=0>Select a status</mat-option>\n                    <mat-option value=\"waiting for doctor sign\">Waiting For Doctor Sign</mat-option>\n                    <mat-option value=\"doctor signed\">Doctor Signed</mat-option>\n                    <mat-option value=\"send to biller\">Send To Biller</mat-option>\n                    <mat-option value=\"error\">Error</mat-option>\n                    <mat-option value=\"pending\">Pending</mat-option>\n                  </mat-select>\n                </mat-form-field> -->\n\n      <span class=\"date-range\">\n        <mat-form-field>\n          <input matInput [matDatepicker]=\"picker1\" placeholder=\"Start Date\">\n          <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n          <mat-datepicker #picker1></mat-datepicker>\n        </mat-form-field>\n\n        <mat-form-field>\n          <input matInput [matDatepicker]=\"picker2\" placeholder=\"End Date\">\n          <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\n          <mat-datepicker #picker2></mat-datepicker>\n        </mat-form-field>\n      </span>\n\n    </mat-toolbar>\n    <table mat-table [dataSource]=\"dataSource\">\n\n      <!-- Position Column -->\n      <ng-container matColumnDef=\"no\">\n        <th mat-header-cell *matHeaderCellDef> No. </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.no}} </td>\n      </ng-container>\n      <ng-container matColumnDef=\"organizerName\">\n        <th mat-header-cell *matHeaderCellDef> Organizer's Name </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.organizerName}} </td>\n      </ng-container>\n\n      <!-- Name Column -->\n      <ng-container matColumnDef=\"organizerEmail\">\n        <th mat-header-cell *matHeaderCellDef> Organizer's Email </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.organizerEmail}} </td>\n      </ng-container>\n\n      <!-- Weight Column -->\n      <ng-container matColumnDef=\"appoinmentDate\">\n        <th mat-header-cell *matHeaderCellDef> Appoinment Date </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.appoinmentDate}} </td>\n      </ng-container>\n\n      <!-- Symbol Column -->\n      <ng-container matColumnDef=\"appoinmentTime\">\n        <th mat-header-cell *matHeaderCellDef> Appoinment Time </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.appoinmentTime}} </td>\n      </ng-container>\n      <ng-container matColumnDef=\"timeZone\">\n        <th mat-header-cell *matHeaderCellDef> TimeZone </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.timeZone}} </td>\n      </ng-container>\n      <ng-container matColumnDef=\"doctorName\">\n        <th mat-header-cell *matHeaderCellDef> Doctor Name </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.doctorName}} </td>\n      </ng-container>\n      <ng-container matColumnDef=\"patientName\">\n        <th mat-header-cell *matHeaderCellDef> Patient Name </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.patientName}} </td>\n      </ng-container>\n      <ng-container matColumnDef=\"manage\">\n        <th mat-header-cell *matHeaderCellDef> Manage </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.manage}} </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n  </mat-card-content>\n</mat-card>\n<!-- Admin Footer -->\n<app-admin-footer></app-admin-footer>\n","import { Component, OnInit ,ViewChild } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { HttpServiceService } from '../../../services/http-service.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { CommonFunction } from '../../../class/common/common-function';\nimport { MatTableDataSource } from '@angular/material';\nimport {MatPaginator} from '@angular/material/paginator';\n\n\nexport interface PeriodicElement {\n  no: number;\n  organizerName: string;\n  organizerEmail: string;\n  appoinmentDate: string;\n  appoinmentTime: string;\n  timeZone: string;\n  doctorName: string;\n  patientName: string;\n  manage: string;\n}\n\n@Component({\n  selector: 'app-booked-appoinments',\n  templateUrl: './booked-appoinments.component.html',\n  styleUrls: ['./booked-appoinments.component.css']\n})\nexport class BookedAppoinmentsComponent implements OnInit {\n  public userToken:any;\n  public displayedColumns: string[] =\n   ['no','organizerName', 'organizerEmail','appoinmentDate','appoinmentTime','timeZone','doctorName',\n   'patientName','manage'];\n\n   dataSource = new MatTableDataSource<PeriodicElement>(ELEMENT_DATA);\n\n   @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n\n  constructor(public http : HttpServiceService, public cookieService: CookieService) {\n     /* Get Auth Token */\n     this.userToken = cookieService.get('jwtToken');\n   }\n\n  ngOnInit() {\n\n    this.dataSource.paginator = this.paginator;\n    \n  }\n  filerByReports(key : string , value : string){\n   let searchJson : any = {};\n   searchJson[key] = value.toLowerCase();\n    var data = {\n      \"source\": \"patient_management_view_count\",\n      \"condition\": searchJson,\n      \"token\" : this.userToken\n    }\n    this.http.httpViaPost('datalist', data)\n    .subscribe(Response=>{\n      let result:any=Response.res;\n      this.dataSource=result;  \n    })\n  }\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {no: 1, organizerName: 'Hydrogen', organizerEmail: \"s@gmail.com\", appoinmentDate: '11.10.19', appoinmentTime:'adf', timeZone: 'fs',doctorName:'sfg', patientName: 'fgasd' , manage: '' },\n  {no: 1, organizerName: 'Hydrogen', organizerEmail: \"s@gmail.com\", appoinmentDate: '11.10.19', appoinmentTime:'adf', timeZone: 'fs',doctorName:'sfg', patientName: 'fgasd' , manage: '' },\n  {no: 1, organizerName: 'Hydrogen', organizerEmail: \"s@gmail.com\", appoinmentDate: '11.10.19', appoinmentTime:'adf', timeZone: 'fs',doctorName:'sfg', patientName: 'fgasd' , manage: '' },\n  {no: 1, organizerName: 'Hydrogen', organizerEmail: \"s@gmail.com\", appoinmentDate: '11.10.19', appoinmentTime:'adf', timeZone: 'fs',doctorName:'sfg', patientName: 'fgasd' , manage: '' },\n  {no: 1, organizerName: 'Hydrogen', organizerEmail: \"s@gmail.com\", appoinmentDate: '11.10.19', appoinmentTime:'adf', timeZone: 'fs',doctorName:'sfg', patientName: 'fgasd' , manage: '' },\n];","<app-admin-header></app-admin-header>\n\n<!-- header with add button -->\n<mat-card class=\"admin_wrapper\">\n  <mat-card-content class=\"title_wrapper\">\n    {{ htmlText.header }}\n  </mat-card-content>\n\n\n  <span class=\"add_header\">\n    <span class=\"bradcrumb\">\n      <a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp;\n      <a [routerLink]=\"['/admin/doctor-management']\">Manage Doctor &nbsp;/</a> &nbsp;\n      {{ htmlText.nav }}\n    </span>\n  </span>\n  <!-- End header with add button -->\n\n  <mat-card class=\"add_form\">\n    <!-- <h2>{{ htmlText.header }} </h2> -->\n\n\n    <mat-card-content class=\"form_wrapper\">\n      <form class=\"example-form\" autocomplete=\"off\" [formGroup]=\"docManageForm\" (ngSubmit)=\"onSubmit()\">\n\n\n        <!-- First Name  -->\n\n        <mat-form-field appearance=\"fill\">\n          <mat-label>First Name</mat-label>\n          <input matInput placeholder=\"James\" formControlName=\"firstname\"\n            (blur)=\"inputUntouch(docManageForm,'firstname')\">\n\n          <mat-error *ngIf=\"docManageForm.controls['firstname'].touched && !docManageForm.controls['firstname'].valid\n        && docManageForm.controls['firstname'].errors.required\">\n            First Name can not be blank</mat-error>\n        </mat-form-field>\n\n\n\n\n\n        <!-- Last Name  -->\n\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Last Name</mat-label>\n          <input matInput placeholder=\"Anderson\" formControlName=\"lastname\"\n            (blur)=\"inputUntouch(docManageForm,'lastname')\">\n          <mat-error *ngIf=\"docManageForm.controls['lastname'].touched && !docManageForm.controls['lastname'].valid\n        && docManageForm.controls['lastname'].errors.required\">\n            Last Name can not be blank</mat-error>\n          <!-- <mat-error\n          *ngIf=\"!docManageForm.controls['lastname'].valid && docManageForm.controls['lastname'].errors.required\">Last\n          Name is required.</mat-error>\n        <mat-error\n          *ngIf=\"!docManageForm.controls['lastname'].valid && !docManageForm.controls['lastname'].errors.required\">\n          Name is not valid</mat-error> -->\n        </mat-form-field>\n\n\n\n\n\n        <!-- Email  -->\n\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Email</mat-label>\n          <input matInput type=\"email\" placeholder=\"exemple@exemple.com\" formControlName=\"email\"\n            (blur)=\"inputUntouch(docManageForm,'email')\">\n          <mat-error *ngIf=\"!docManageForm.controls['email'].valid && docManageForm.controls['email'].errors.required\">\n            Email is required.</mat-error>\n          <mat-error *ngIf=\"!docManageForm.controls['email'].valid && !docManageForm.controls['email'].errors.required\">\n            Email is not valid</mat-error>\n        </mat-form-field>\n\n\n\n\n        <!-- Password  -->\n\n        <mat-form-field appearance=\"fill\" *ngIf=\"action=='add'\">\n          <mat-label>Password</mat-label>\n          <input matInput type=\"password\" placeholder=\"*********\" formControlName=\"password\">\n          <mat-error *ngIf=\"docManageForm.controls['password']?.touched || docManageForm.controls['password'].errors\n        && docManageForm.controls['password'].errors.required\">Password is required.</mat-error>\n        </mat-form-field>\n\n\n\n\n        <!-- Confirm Password  -->\n        <ng-container *ngIf=\"!params_id\">\n          <mat-form-field appearance=\"fill\" *ngIf=\"action=='add'\">\n            <mat-label>Confirm Password</mat-label>\n            <input type=\"password\" matInput placeholder=\"**********\" formControlName=\"confirmpassword\">\n            <mat-error *ngIf=\"docManageForm.controls['confirmpassword']?.touched || docManageForm.controls['confirmpassword'].errors\n        && docManageForm.controls['confirmpassword'].errors.required\">Password do not match</mat-error>\n            <mat-error\n              *ngIf=\"!docManageForm.controls['confirmpassword'].valid && docManageForm.controls['confirmpassword'].touched\">\n              Confirm Password field can not be blank</mat-error>\n          </mat-form-field>\n        </ng-container>\n\n\n\n        <!-- Phone  -->\n\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Phone</mat-label>\n          <input matInput placeholder=\"9845711225\" formControlName=\"phone\" (blur)=\"inputUntouch(docManageForm,'phone')\">\n          <mat-error *ngIf=\"docManageForm.controls['phone'].touched && !docManageForm.controls['phone'].valid\n        && docManageForm.controls['phone'].errors.required\">\n            Phone can not be blank</mat-error>\n\n        </mat-form-field>\n        <!-- FAX -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Fax</mat-label>\n          <input matInput placeholder=\"323 555 1234\" formControlName=\"fax\" (blur)=\"inputUntouch(docManageForm,'fax')\">\n          <mat-error *ngIf=\"docManageForm.controls['fax'].touched && !docManageForm.controls['fax'].valid\n        && docManageForm.controls['fax'].errors.required\">\n            Fax can not be blank</mat-error>\n          <!-- <mat-error *ngIf=\"!docManageForm.controls['fax'].valid && !docManageForm.controls['fax'].errors.required\">\n          Fax is not valid</mat-error> -->\n        </mat-form-field>\n\n\n        <!-- Practice Name  -->\n\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Practice name</mat-label>\n          <input matInput placeholder=\"James101\" formControlName=\"practicename\"\n            (blur)=\"inputUntouch(docManageForm,'practicename')\">\n          <mat-error *ngIf=\"docManageForm.controls['practicename'].touched && !docManageForm.controls['practicename'].valid\n        && docManageForm.controls['practicename'].errors.required\">\n            Practice Name can not be blank</mat-error>\n\n          <!-- <mat-error\n          *ngIf=\"!docManageForm.controls['practicename'].valid && docManageForm.controls['practicename'].errors.required\">\n          Practice Name is required.</mat-error>\n        <mat-error\n          *ngIf=\"!docManageForm.controls['practicename'].valid && !docManageForm.controls['practicename'].errors.required\">\n          Practice name is not valid</mat-error> -->\n        </mat-form-field>\n\n\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Select Taxonomies</mat-label>\n          <mat-select formControlName=\"taxo_list\" multiple>\n            <mat-option [value]=0>Select a tech</mat-option>\n            <mat-option *ngFor=\"let tech of myTaxonomies;\" value=\"{{ tech.name }}\">{{tech.name}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n\n\n        <!-- NPI#  -->\n\n        <mat-form-field appearance=\"fill\">\n          <mat-label>#NPI</mat-label>\n          <input matInput placeholder=\"1880101700\" formControlName=\"npm\" (blur)=\"inputUntouch(docManageForm,'npm')\">\n          <mat-error *ngIf=\"docManageForm.controls['npm'].touched && !docManageForm.controls['npm'].valid\n        && docManageForm.controls['npm'].errors.required\">\n            #NPI can not be blank</mat-error>\n          <!-- <mat-error *ngIf=\"!docManageForm.controls['npm'].valid && docManageForm.controls['npm'].errors.required \">NPI#\n          is required.</mat-error>\n        <mat-error *ngIf=\"!docManageForm.controls['npm'].valid && !docManageForm.controls['npm'].errors.required\"> NPM#\n          is not valid</mat-error> -->\n        </mat-form-field>\n\n\n\n        <!-- Address  -->\n\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Address</mat-label>\n          <textarea matInput placeholder=\"76 E. Mayfield Drive\" formControlName=\"address\"\n            (blur)=\"inputUntouch(docManageForm,'address')\"></textarea>\n          <mat-error *ngIf=\"docManageForm.controls['address'].touched && !docManageForm.controls['address'].valid\n        && docManageForm.controls['address'].errors.required\">\n            Address can not be blank</mat-error>\n        </mat-form-field>\n\n        <!-- State  -->\n\n        <mat-form-field appearance=\"fill\">\n          <mat-label>State</mat-label>\n          <mat-select formControlName=\"state\" (selectionChange)=\"getCity($event.value);\">\n            <mat-option [value]=0>Select a category</mat-option>\n            <mat-option *ngFor=\"let state of states;\" value=\"{{ state.name }}\">{{ state.name }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <!-- City  -->\n\n        <mat-form-field appearance=\"fill\">\n          <mat-label>City</mat-label>\n          <mat-select formControlName=\"city\">\n            <mat-option [value]=0>Select a category</mat-option>\n            <mat-option *ngFor=\"let city of cities;\" value=\"{{ city }}\">{{ city }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <!-- select tech name-->\n\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Select Tech</mat-label>\n          <mat-select formControlName=\"tech\" multiple>\n            <mat-option [value]=0>Select a tech</mat-option>\n            <mat-option *ngFor=\"let tech of techData;\" value=\"{{ tech._id }}\">{{ tech.firstname }} {{tech.lastname}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <!-- select biller name -->\n\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Select Biiler</mat-label>\n          <mat-select formControlName=\"biller\" multiple>\n            <mat-option [value]=0>Select a biiler</mat-option>\n            <mat-option *ngFor=\"let biller of billerData;\" value=\"{{ biller._id }}\">{{ biller.firstname }}\n              {{ biller.lastname }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <!-- select doctor office center name -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Select Doctor's Office</mat-label>\n          <mat-select formControlName=\"doctorsOfficeName\">\n            <mat-option [value]=0>Select a Doctor's Office</mat-option>\n            <mat-option *ngFor=\"let val of doctorOfficeData;\" value=\"{{ val._id }}\">{{ val.centerName }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <!-- ZIP  -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>ZIP</mat-label>\n          <input matInput placeholder=\"917844\" formControlName=\"zip\" (blur)=\"inputUntouch(docManageForm,'zip')\">\n          <mat-error *ngIf=\"docManageForm.controls['zip'].touched && !docManageForm.controls['zip'].valid\n        && docManageForm.controls['zip'].errors.required\">\n            ZIP can not be blank</mat-error>\n\n          <!-- <mat-error *ngIf=\"!docManageForm.controls['zip'].valid && docManageForm.controls['zip'].errors.required\">ZIP is\n          required.</mat-error> -->\n          <!-- <mat-error *ngIf=\"!docManageForm.controls['zip'].valid && !docManageForm.controls['zip'].errors.required\">ZIP must be only 6 digit integers</mat-error> -->\n        </mat-form-field>\n\n\n\n\n\n        <!-- Status -->\n        <span class=\"status_wrapper\">\n          <mat-checkbox formControlName=\"status\">Active</mat-checkbox>\n\n        </span>\n\n\n        <!-- Button  -->\n\n        <span class=\"submit_form\">\n          <button mat-flat-button type=\"button\" (click)=\"backToManagePage()\">Back </button>\n          <button mat-flat-button type=\"reset\">Reset</button>\n          <button mat-flat-button type=\"submit\"> {{ htmlText.buttonText }} </button>\n          <ng-container *ngIf=\"params_id\">\n            <button mat-flat-button type=\"button\" (click)=\"openDialog('')\"> Change Password </button>\n          </ng-container>\n        </span>\n      </form>\n    </mat-card-content>\n  </mat-card>\n</mat-card>\n","\n<mat-card class=\"add_form\">\n      <h1 mat-dialog-title>Change Password</h1>\n  \n      <form class=\"example-form\" autocomplete=\"off\" name=\"changePwdForm\" [formGroup]=\"changePwdForm\"\n          (ngSubmit)=\"changePasswordFormSubmit()\">\n          <mat-dialog-content class=\"mat-typography\">\n  \n  \n              <mat-form-field>\n                  <input matInput placeholder=\"Password\" type=\"password\"\n                  [formControl]=\"changePwdForm.controls['password']\">\n                  <mat-error *ngIf=\"changePwdForm.controls['password'].touched && !changePwdForm.controls['password'].valid\n            && changePwdForm.controls['password'].errors.required\">\n                      Password can not be blank</mat-error>\n              </mat-form-field> <br>\n              <mat-form-field>\n                  <input matInput placeholder=\"Confirm Password\" type=\"password\"\n                  [formControl]=\"changePwdForm.controls['confirmpassword']\">\n                  <mat-error\n                      *ngIf=\"!changePwdForm.controls['confirmpassword'].valid && changePwdForm.controls['confirmpassword'].touched\">\n                      Password does not match </mat-error>\n                  \n              </mat-form-field><br>   \n  \n              <span class=\"submit_form\">\n                  <button mat-flat-button mat-dialog-close type=\"button\" > Cancel </button>\n                  <button mat-flat-button type=\"submit\" [mat-dialog-close]=\"true\" cdkFocusInitial> Submit </button>\n              </span>\n          </mat-dialog-content>\n      </form>\n  </mat-card>","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators, FormArray } from \"@angular/forms\";\nimport { HttpServiceService } from '../../../../services/http-service.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { nameValidator, npmValidator, zipValidator, phoneValidator, matchpwd } from './validators';\nimport { MatSnackBar, MatCalendarBody } from '@angular/material';\nimport * as _ from \"lodash\";\nimport { environment } from '../../../../../environments/environment';\n\nexport interface DialogData {\n  message: string;\n  id: any;\n}\n\n\n@Component({\n  selector: 'app-addedit-doctor',\n  templateUrl: './addedit-doctor.component.html',\n  styleUrls: ['./addedit-doctor.component.css']\n})\nexport class AddeditDoctorComponent implements OnInit {\n\n  public message: any = \"Submitted Successfully\";\n  // ============================== declarations =======================\n  public docManageForm: FormGroup;\n  public checkboxArray: any = ['Family Practice', 'General Practitioner', 'Primary Care',\n    'Cardiology', 'Neurology', 'Internal Medicine', 'Endocrinology', 'Pain Management', 'Integrated', 'Others'];\n  public dialogRef: any;\n  public successMessage: any = \"Data Submitted Successfully!!!\";\n  public taxo_array: any = [];\n  public htmlText: any = { header: 'Add New Doctor', nav: 'Add Doctor', buttonText: 'Save' };\n  public action: any;\n  public defaultData: any;\n  public condition: any;\n  public states: any;\n  public allCities: any;\n  public cities: any;\n  selectTaxonomyNames: [string];\n  public user_token: any;\n  public techData: any = [];\n  public billerData: any = [];\n  public techArray: any = [];\n  public billerArray: any = [];\n  public doctorOfficeData: any = [];\n  public params_id: any;\n\n  myTaxonomies: any = [\n    {\n      name: \"Family Practice\",\n      value: \"Family Practice\"\n    },\n    {\n      name: \"General Practitioner\",\n      value: \"General Practitioner\"\n    },\n    {\n      name: \"Primary Care\",\n      value: \"Primary Care\"\n    },\n    {\n      name: \"Cardiology\",\n      value: \"Cardiology\"\n    },\n    {\n      name: \"Neurology\",\n      value: \"Neurology\"\n    },\n    {\n      name: \"Internal Medicine\",\n      value: \"Internal Medicine\"\n    },\n    {\n      name: \"Endocrinology\",\n      value: \"Endocrinology\"\n    },\n    {\n      name: \"Pain Management\",\n      value: \"Pain Management\"\n    },\n    {\n      name: \"Integrated\",\n      value: \"Integrated\"\n    },\n    {\n      name: \"Others\",\n      value: \"Others\"\n    }\n  ];\n\n  constructor(private formBuilder: FormBuilder, private http: HttpServiceService,\n    private cookieService: CookieService, public dialog: MatDialog, private router: Router,\n    public acivatedRoute: ActivatedRoute, public snackBar: MatSnackBar) {\n\n    this.params_id = this.acivatedRoute.snapshot.params._id;\n    if (this.params_id) {\n      this.generateEditForm();\n    } else {\n      this.generateAddForm();\n    }\n    this.user_token = cookieService.get('jwtToken');\n    this.getAllTechData();\n    this.getAllBillerData();\n    this.getAllDoctorOfficeData();\n    this.acivatedRoute.params.subscribe(params => {\n      if (params['_id'] != null) {\n        this.action = \"edit\";\n        this.condition = { id: params._id };\n        this.acivatedRoute.data.subscribe(resolveData => {\n          this.defaultData = resolveData.data.res[0];\n        });\n      } else {\n        this.action = \"add\";\n      }\n    });\n  }\n\n  ngOnInit() {\n\n    this.allStateCityData();\n\n    // this.createTaxoInputs();\n    // Case \n    switch (this.action) {\n      case 'add':\n        /* Button text */\n        break;\n      case 'edit':\n        /* Button text */\n        this.htmlText.header = 'Edit Doctor Record';\n        this.htmlText.nav = 'Edit Doctor';\n        this.htmlText.buttonText = 'Update';\n        this.successMessage = \"One row updated\";\n        this.setDefaultValue(this.defaultData);\n        console.log(\"default data\", this.defaultData);\n        setTimeout(() => {\n          this.getCityByName(this.defaultData.state);\n        }, 2000);\n        break;\n    }\n  }\n\n  inputUntouch(form: any, val: any) {\n    form.controls[val].markAsUntouched();\n  }\n\n  setDefaultValue(defaultValue) {\n    this.docManageForm.patchValue({\n      firstname: defaultValue.firstname,\n      lastname: defaultValue.lastname,\n      email: defaultValue.email,\n      password: defaultValue.password,\n      confirmpassword: defaultValue.password,\n      phone: defaultValue.phone,\n      practicename: defaultValue.practicename,\n      taxo_list: defaultValue.taxo_list,\n      npm: defaultValue.npm,\n      fax: defaultValue.fax,\n      address: defaultValue.address,\n      city: defaultValue.city,\n      state: defaultValue.state,\n      tech: defaultValue.tech,\n      biller: defaultValue.biller,\n      doctorsOfficeName: defaultValue.doctorsOfficeName,\n      zip: defaultValue.zip,\n      status: defaultValue.status,\n      taxonomies: defaultValue.taxonomies\n    });\n  }\n  // ======================================================================================\n\n\n  // =============================Form Generator=======================\n  generateAddForm() {\n    this.docManageForm = this.formBuilder.group({\n      // taxonomies:['', Validators.required],\n      firstname: ['', [Validators.required]],\n      lastname: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.pattern(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/)]],\n      phone: [\"\", [Validators.required]],\n      practicename: ['', [Validators.required]],\n      npm: ['', [Validators.required]],\n      address: ['', [Validators.required]],\n      fax: ['', [Validators.required]],\n      city: ['', []],\n      state: ['', []],\n      type: ['doctor', []],\n      zip: ['', [Validators.required]],\n      status: ['', []],\n      tech: ['', []],\n      biller: ['', []],\n      doctorsOfficeName: ['', []],\n      taxo_list: ['', []],\n\n      password: ['', [Validators.required, Validators.maxLength(16), Validators.minLength(6)]],\n      confirmpassword: ['', []],\n    }, {\n      validators: this.matchpassword('password', 'confirmpassword')\n    });\n  }\n\n  generateEditForm() {\n\n    this.docManageForm = this.formBuilder.group({\n      // taxonomies:['', Validators.required],\n      firstname: ['', [Validators.required]],\n      lastname: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.pattern(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/)]],\n      phone: [\"\", [Validators.required]],\n      practicename: ['', [Validators.required]],\n      npm: ['', [Validators.required]],\n      address: ['', [Validators.required]],\n      fax: ['', [Validators.required]],\n      city: ['', []],\n      state: ['', []],\n      type: ['doctor', []],\n      zip: ['', [Validators.required]],\n      status: ['', []],\n      tech: ['', []],\n      biller: ['', []],\n      doctorsOfficeName: ['', []],\n      taxo_list: ['', []]\n    });\n  }\n\n  // ==================================================================\n  matchpassword(passwordkye: string, confirmpasswordkye: string) {\n    return (group: FormGroup) => {\n      let passwordInput = group.controls[passwordkye],\n        confirmpasswordInput = group.controls[confirmpasswordkye];\n      if (passwordInput.value !== confirmpasswordInput.value) {\n        return confirmpasswordInput.setErrors({ notEquivalent: true });\n      } else {\n        return confirmpasswordInput.setErrors(null);\n      }\n    };\n  }\n\n\n\n\n  // =========================================MODAL functions==========================================\n  openDialog(x: any): void {\n    this.dialogRef = this.dialog.open(ChangePasswordDoctorModal, {\n      data: { message: x, 'id': this.params_id }\n    });\n    this.dialogRef.afterClosed().subscribe(result => {\n    });\n  }\n  // =====================================================================================================\n\n\n  backToManagePage() {\n    this.router.navigateByUrl('admin/doctor-management');\n  }\n\n  /**for getting all states & cities function start here**/\n  allStateCityData() {\n    this.http.getSiteSettingData(\"./assets/data-set/state.json\").subscribe(response => {\n      this.states = response;\n      if (this.params_id != null) {\n        this.setDefaultValue(this.defaultData);\n      }\n\n    });\n\n    this.http.getSiteSettingData(\"./assets/data-set/city.json\").subscribe(response => {\n      this.allCities = response;\n      if (this.params_id != null) {\n        this.setDefaultValue(this.defaultData);\n      }\n    });\n  }\n  /**for getting all states & cities  function end here**/\n\n  getCity(event: any) {\n    var val = event;\n    this.cities = this.allCities[val];\n  }\n\n  getCityByName(stateName) {\n    this.cities = this.allCities[stateName];\n  }\n\n  /**getting all the technician data**/\n  getAllTechData() {\n    var data = {\n      \"source\": \"users\",\n      \"condition\": {\n        \"type\": \"tech\"\n      },\n      \"token\": this.user_token\n    }\n    this.http.httpViaPost('datalist', data)\n      .subscribe(response => {\n        this.techData = response.res;\n\n      })\n  }\n\n  getAllDoctorOfficeData() {\n    var data = {\n      \"source\": \"users\",\n      \"condition\": {\n        \"type\": \"doctor_office\"\n      },\n      \"token\": this.user_token\n    }\n    this.http.httpViaPost('datalist', data)\n      .subscribe(response => {\n        this.doctorOfficeData = response.res;\n      })\n  }\n\n\n  /**getting all the biller data**/\n  getAllBillerData() {\n    var data = {\n      \"source\": \"users\",\n      \"condition\": {\n        \"type\": \"biller\"\n      },\n      \"token\": this.user_token\n    }\n    this.http.httpViaPost('datalist', data).subscribe(response => {\n      this.billerData = response.res;\n    });\n  }\n\n\n  // ============================Submit Function=======================\n  onSubmit() {\n    let x: any;\n    for (x in this.docManageForm.controls) {\n      this.docManageForm.controls[x].markAsTouched();\n    }\n\n    /* stop here if form is invalid */\n    if (!this.docManageForm.valid) {\n      // this.openDialog(\"Form is invalid\");\n      // setTimeout(() => {\n      //   this.dialogRef.close();\n      // }, 2000);\n      // return;\n    } else {\n\n      delete this.docManageForm.value.confirmpassword;\n      if (this.docManageForm.value.status) {\n        this.docManageForm.value.status = parseInt(\"1\");\n      } else {\n        this.docManageForm.value.status = parseInt(\"0\");;\n      }\n\n      /* start process to submited data */\n      let postData: any = {\n        \"source\": \"users\",\n        \"data\": Object.assign(this.docManageForm.value, this.condition),\n        \"domainurl\": environment.siteBaseUrl + 'reset-password',\n        \"sourceobj\": [\"doctorsOfficeName\"],\n        \"token\": this.cookieService.get('jwtToken')\n      };\n\n      this.http.httpViaPost('addorupdatedata', postData).subscribe((response: any) => {\n        if (response.status == \"success\") {\n          let action = \"ok\";\n          this.snackBar.open(this.message, action, {\n            duration: 2000,\n          });\n        } else {\n          this.snackBar.open(response.msg, '', {\n            duration: 2000,\n          });\n        }\n      }, (error) => {\n        alert(\"Some error occurred. Please try again.\");\n      });\n\n    }\n\n\n  }\n\n  trackByFn(index) {\n    return index;\n  }\n}\n\n\n\n\n// ============================================MODAL COMPONENT===========================================\n// @Component({\n//   selector: 'app-modal',\n//   templateUrl: 'modal.html',\n// })\n\n// export class Modal {\n\n//   constructor(\n//     public dialogRef: MatDialogRef<Modal>,\n//     @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n\n//   onNoClick(): void {\n//     this.dialogRef.close();\n//   }\n\n// }\n// ======================================================================================================\n\n@Component({\n  selector: 'dialogtest',\n  templateUrl: 'modal.html',\n})\n\nexport class ChangePasswordDoctorModal {\n  public is_error: any;\n  public changePwdForm: any = FormGroup;\n  public user_token: any;\n  public params_id: any;\n  public userData: any;\n\n  constructor(public dialogRef: MatDialogRef<ChangePasswordDoctorModal>,\n    public fb: FormBuilder, public httpService: HttpServiceService, public cookie: CookieService,\n    public activeRoute: ActivatedRoute, @Inject(MAT_DIALOG_DATA) public data: DialogData) {\n    this.params_id = data.id;\n\n    this.user_token = cookie.get('jwtToken');\n    this.changePwdForm = this.fb.group({\n      password: ['', Validators.required],\n      confirmpassword: [],\n    }, { validators: this.matchpassword('password', 'confirmpassword') })\n\n  }\n\n  matchpassword(passwordkye: string, confirmpasswordkye: string) {\n    return (group: FormGroup) => {\n      let passwordInput = group.controls[passwordkye],\n        confirmpasswordInput = group.controls[confirmpasswordkye];\n      if (passwordInput.value !== confirmpasswordInput.value) {\n        return confirmpasswordInput.setErrors({ notEquivalent: true });\n      } else {\n        return confirmpasswordInput.setErrors(null);\n      }\n    };\n  }\n\n  changePasswordFormSubmit() {\n    for (let x in this.changePwdForm.controls) {\n      this.changePwdForm.controls[x].markAsTouched();\n    }\n\n    if (this.changePwdForm.valid) {\n      delete this.changePwdForm.value.confirmpassword\n      var data = {\n        \"_id\": this.params_id,\n        \"adminflag\": 1,\n        \"newPassword\": this.changePwdForm.value.password,\n      }\n\n      this.httpService.httpViaPost('changepassword', data).subscribe(response => {\n      });\n    }\n  }\n\n}\n","<!-- Admin Header -->\n<app-admin-header></app-admin-header>\n\n<mat-card class=\"admin_wrapper\">\n\n  <mat-card-content class=\"table_wrapper\">\n    <mat-toolbar class=\"top_header\">\n      <h2> Manage doctor </h2>\n    </mat-toolbar>\n\n    <mat-toolbar class=\"add_header\">\n      <span class=\"bradcrumb\"><a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage Doctor</span>\n      <button mat-flat-button [routerLink]=\"['/admin/doctor-management/add']\">Add Doctor</button>\n    </mat-toolbar>\n    <!-- End header with add button -->\n\n    <!-- Listing goes here  -->\n    <lib-listing class=\"DataTable\" *ngIf=\"docData.length>0\" [datasource]=\"docData\" [skip]=\"docData_skip\"\n      [modify_header_array]=\"docData_modify_header\" [sourcedata]=\"tableName\" [detail_skip_array]=\"previewModal_skip\"\n      [apiurl]=\"apiUrl\" [editroute]=\"editUrl\" [jwttoken]=\"user_cookie\" [statusarr]=\"status\"\n      [updateendpoint]=\"UpdateEndpoint\" [deleteendpoint]=\"deleteEndpoint\" [date_search_endpoint]=\"searchingEndpoint\"\n      [date_search_source]=\"searchSourceName\" [search_settings]=\"search_settings\">\n\n    </lib-listing>\n\n    <h2 *ngIf=\"docData.length == 0\">No record found.</h2>\n    <!-- Listing ends here  -->\n  </mat-card-content>\n</mat-card>\n<!-- Admin Footer -->\n<app-admin-footer></app-admin-footer>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpServiceService } from '../../../../services/http-service.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router,ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-list-doctor',\n  templateUrl: './list-doctor.component.html',   \n  styleUrls: ['./list-doctor.component.css']\n})\nexport class ListDoctorComponent implements OnInit {\n\n  // ===============================Declarations=========================\n  public  docData: any = [];\n  public docData_skip: any = [\"_id\", \"created_at\", \"password\", \"confirmpassword\",\n   \"taxonomies\",\"password\",\"confirmpassword\",\"practicename\",\"address\",\"type\",\"fullName\",\"tech_id\",\n   \"biller_id\",\"doctorsOfficeName\", \"city\", \"state\", \"zip\"];\n  public docData_modify_header: any = {\n    \"firstname\": \"First Name\", \"lastname\": \"Last Name\", \"email\": \"Email\", \"phone\": \"Phone\",\n    \"practicename\": \"Practice name\", \"npm\": \"NPI#\", \"status\": \"Status\", \"taxo list\": \"Taxonomies\",\n    \"fullNamecopy\":\"Doctor Name\",\"biller\" : \"Biller Name\",\n    \"tech\" :\"Tech Name\",\"date\" : \"Date\"\n  };\n\n  public previewModal_skip: any = [\"_id\", \"tech_id\", \"biller_id\",\"created_at\",\"fullNamecopy\"];\n  public tableName: any = 'users';\n  public UpdateEndpoint: any = \"addorupdatedata\";\n  public deleteEndpoint: any = \"deletesingledata\";\n  public user_cookie: any;\n  public searchingEndpoint:any=\"datalist\";\n  public searchSourceName:any=\"users_view_doctor_list\"\n  public editUrl:any = 'admin/doctor-management/edit';\n  public apiUrl:any;\n  public status: any = [{ val: 1, 'name': 'Active' }, { val: 0, 'name': 'Inactive' }];\n  public search_settings: any =\n    {\n      selectsearch: [{ label: 'Search By Status', field: 'status', values: this.status }],\n      textsearch: [{ label: \"Search By Name\", field: 'fullName' },\n      // {label:\"Search by Taxonomy\",field:'taxo_list'},\n      { label: \"Search By E-Mail\", field: 'email' }]\n    };\n  // ====================================================================\n\n  constructor(private http: HttpServiceService, private cookieService: CookieService, \n    private router: Router,public activatedRoute : ActivatedRoute) {\n\n    this.user_cookie = cookieService.get('jwtToken');\n    this.apiUrl = http.baseUrl;\n  }\n\n\n  ngOnInit() {\n    this.activatedRoute.data.subscribe(resolveData => {\n      this.docData = resolveData.data.res;\n    });\n  }\n\n\n}\n","<!-- Admin Header -->\n<app-admin-header></app-admin-header>\n<mat-card class=\"admin_wrapper\">\n  <!-- header with add button -->\n  <mat-card-content class=\"title_wrapper\">\n    {{ htmlText.header }}\n  </mat-card-content>\n  <span class=\"add_header\">\n\n    <span class=\"bradcrumb\">\n      <a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp;\n      <a [routerLink]=\"['/admin/doctor-office-management']\">Manage Doctor-Office &nbsp;/</a> &nbsp;\n      {{ htmlText.nav }}\n    </span>\n  </span>\n\n  <mat-card class=\"add_form\">\n\n    <!-- <h2>add Doctors office</h2> -->\n\n\n    <mat-card-content class=\"form_wrapper\">\n      <form class=\"example-form\" autocomplete=\"off\" name=\"doctorOfficeAddEditForm\" [formGroup]=\"doctorOfficeAddEditForm\"\n        (ngSubmit)=\"doctorOfficeAddEditFormFormSubmit()\">\n\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Enter Center Name</mat-label>\n          <input matInput placeholder=\"First Name\" [formControl]=\"doctorOfficeAddEditForm.controls['centerName']\"\n            (blur)=\"inputUntouch(doctorOfficeAddEditForm,'centerName')\">\n          <mat-error *ngIf=\"doctorOfficeAddEditForm.controls['centerName'].touched && !doctorOfficeAddEditForm.controls['centerName'].valid\n                 && doctorOfficeAddEditForm.controls['centerName'].errors.required\">\n            Center Name field can not be blank</mat-error>\n        </mat-form-field>\n\n\n\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Email Address</mat-label>\n          <input matInput placeholder=\"Email Address\" [formControl]=\"doctorOfficeAddEditForm.controls['email']\"\n            (blur)=\"inputUntouch(doctorOfficeAddEditForm,'email')\">\n          <mat-error *ngIf=\"doctorOfficeAddEditForm.controls['email'].touched && !doctorOfficeAddEditForm.controls['email'].valid\n                  && doctorOfficeAddEditForm.controls['email'].errors.required\">\n            E-Mail field can not be blank</mat-error>\n          <mat-error\n            *ngIf=\"!doctorOfficeAddEditForm.controls['email'].valid && !doctorOfficeAddEditForm.controls['email'].errors.required\">\n            Email is not valid</mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Phone </mat-label>\n          <input matInput placeholder=\"Phone\" [formControl]=\"doctorOfficeAddEditForm.controls['phone']\"\n            (blur)=\"inputUntouch(doctorOfficeAddEditForm,'phone')\">\n          <mat-error *ngIf=\"doctorOfficeAddEditForm.controls['phone'].touched && !doctorOfficeAddEditForm.controls['phone'].valid\n                  && doctorOfficeAddEditForm.controls['phone'].errors.required\">\n            Phone Number field can not be blank</mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Address</mat-label>\n          <textarea matInput placeholder=\"Address\" [formControl]=\"doctorOfficeAddEditForm.controls['address']\"\n            (blur)=\"inputUntouch(doctorOfficeAddEditForm,'address')\"></textarea>\n          <mat-error *ngIf=\"doctorOfficeAddEditForm.controls['address'].touched && !doctorOfficeAddEditForm.controls['address'].valid\n                  && doctorOfficeAddEditForm.controls['address'].errors.required\">\n            Address field can not be blank</mat-error>\n        </mat-form-field>\n        <mat-form-field class=\"parent_cat\" appearance=\"fill\">\n          <mat-label>State</mat-label>\n          <mat-select formControlName=\"state\" (selectionChange)=\"getCity($event.value);\">\n            <mat-option [value]=0>Select a category</mat-option>\n            <mat-option *ngFor=\"let state of states;\" value=\"{{ state.name }}\">{{ state.name }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field class=\"parent_cat\" appearance=\"fill\">\n          <mat-label>City</mat-label>\n          <mat-select formControlName=\"city\">\n            <mat-option [value]=0>Select a City</mat-option>\n            <mat-option *ngFor=\"let city of cities;\" value=\"{{ city }}\">{{ city }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field class=\"parent_cat\" appearance=\"fill\">\n          <mat-label>Select Technician</mat-label>\n          <mat-select formControlName=\"tech\" multiple>\n            <mat-option [value]=0>Select a Tech</mat-option>\n            <mat-option *ngFor=\"let val of allTechData;\" value=\"{{ val._id }}\">{{ val.firstname }}\n              {{ val.lastname }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n\n\n        <mat-form-field appearance=\"fill\">\n          <mat-label>ZIP</mat-label>\n          <input matInput placeholder=\"ZIP\" [formControl]=\"doctorOfficeAddEditForm.controls['zip']\"\n            (blur)=\"inputUntouch(doctorOfficeAddEditForm,'zip')\">\n          <mat-error *ngIf=\"doctorOfficeAddEditForm.controls['zip'].touched && !doctorOfficeAddEditForm.controls['zip'].valid\n                  && doctorOfficeAddEditForm.controls['zip'].errors.required\">\n\n            Zip field can not be blank</mat-error>\n        </mat-form-field>\n\n\n        <mat-form-field>\n          <mat-label>Date</mat-label>\n          <input [value]=\"date.value\" matInput [matDatepicker]=\"myPicker\" placeholder=\"date\" disabled>\n          <mat-datepicker-toggle matSuffix [for]=\"myPicker\" disabled></mat-datepicker-toggle>\n          <mat-datepicker #myPicker></mat-datepicker>\n        </mat-form-field>\n\n\n        <ng-container *ngIf=\"!params_id\">\n          <mat-form-field class=\"form-group\">\n            <input matInput placeholder=\"Password\" type=\"password\"\n              [formControl]=\"doctorOfficeAddEditForm.controls['password']\">\n            <mat-error\n              *ngIf=\"!doctorOfficeAddEditForm.controls['password'].valid && doctorOfficeAddEditForm.controls['password'].touched\">\n              Password field can not be blank</mat-error>\n\n          </mat-form-field>\n          <mat-form-field class=\"form-group\">\n            <input matInput placeholder=\"Confirm Password\" type=\"password\"\n              [formControl]=\"doctorOfficeAddEditForm.controls['confirmpassword']\">\n            <mat-error\n              *ngIf=\"!doctorOfficeAddEditForm.controls['confirmpassword'].valid && doctorOfficeAddEditForm.controls['confirmpassword'].touched\">\n              Password does not match </mat-error>\n          </mat-form-field>\n        </ng-container>\n\n        <mat-checkbox [formControl]=\"doctorOfficeAddEditForm.controls['status']\" checked>Active</mat-checkbox>\n\n\n        <span class=\"submit_form\">\n          <button mat-flat-button type=\"button\" (click)=\"backToManagePage()\">Back </button>\n\n          <button mat-flat-button type=\"reset\">Reset </button>\n          <button mat-flat-button type=\"submit\"> {{ htmlText.buttonText }} </button>\n          <ng-container *ngIf=\"params_id\">\n            <button mat-flat-button type=\"button\" (click)=\"openDialog('')\"> Change Password </button>\n          </ng-container>\n        </span>\n      </form>\n    </mat-card-content>\n  </mat-card>\n</mat-card>\n<app-admin-footer></app-admin-footer>\n","\n<mat-card class=\"add_form\">\n        <h1 mat-dialog-title>Change Password</h1>\n    \n        <form class=\"example-form\" autocomplete=\"off\" name=\"changePwdForm\" [formGroup]=\"changePwdForm\"\n            (ngSubmit)=\"changePasswordFormSubmit()\">\n            <mat-dialog-content class=\"mat-typography\">\n    \n    \n                <mat-form-field>\n                    <input matInput placeholder=\"Password\" type=\"password\"\n                    [formControl]=\"changePwdForm.controls['password']\">\n                    <mat-error *ngIf=\"changePwdForm.controls['password'].touched && !changePwdForm.controls['password'].valid\n              && changePwdForm.controls['password'].errors.required\">\n                        Password can not be blank</mat-error>\n                </mat-form-field> <br>\n                <mat-form-field>\n                    <input matInput placeholder=\"Confirm Password\" type=\"password\"\n                    [formControl]=\"changePwdForm.controls['confirmpassword']\">\n                    <mat-error\n                        *ngIf=\"!changePwdForm.controls['confirmpassword'].valid && changePwdForm.controls['confirmpassword'].touched\">\n                        Password does not match </mat-error>\n                    \n                </mat-form-field><br>   \n    \n                <span class=\"submit_form\">\n                    <button mat-flat-button mat-dialog-close type=\"button\" > Cancel </button>\n                    <button mat-flat-button type=\"submit\" [mat-dialog-close]=\"true\" cdkFocusInitial> Submit </button>\n                </span>\n            </mat-dialog-content>\n        </form>\n    </mat-card>","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators, FormGroupDirective } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpServiceService } from '../../../../services/http-service.service';\nimport { DatePipe } from '@angular/common';\nimport { CookieService } from 'ngx-cookie-service';\nimport { MatSnackBar } from '@angular/material';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from \"@angular/material\";\nimport { environment } from '../../../../../environments/environment';\n\nexport interface DialogData {\n  message: string;\n  id: any;\n}@Component({\n  selector: 'app-add-edit-doctor-ofc',\n  templateUrl: './add-edit-doctor-ofc.component.html',\n  styleUrls: ['./add-edit-doctor-ofc.component.css']\n})\nexport class AddEditDoctorOfcComponent implements OnInit {\n  public message: any = \"Submitted Successfully\";\n\n  public htmlText: any = { header: 'Add Doctor office', nav: 'Add Doctor office', buttonText: 'Save' };\n  @ViewChild(FormGroupDirective, { static: false }) formDirective: FormGroupDirective;\n  public dialogRef: any;\n\n  date = new FormControl(new Date());\n  public ddmmyy: any;\n  serializedDate = new FormControl((new Date()).toISOString());\n  public doctorOfficeAddEditForm: FormGroup;\n  public user_token: any;\n  public params_id: any;\n  public usersData: any = [];\n  public states: any;\n  public allCities: any;\n  public cities: any;\n  public allTechData:any=[];\n\n  constructor(public fb: FormBuilder, public activeRoute: ActivatedRoute,\n    public router: Router, public httpService: HttpServiceService, private datePipe: DatePipe,\n    public cookie: CookieService, public snackBar: MatSnackBar, public dialog: MatDialog) {\n      this.params_id = this.activeRoute.snapshot.params._id;\n    this.allStateCityData();\n    this.user_token = cookie.get('jwtToken');\n    this.getAllTechData();\n    if(this.params_id){\n      this.generateEditForm();\n    }else{\n     this.generateAddForm();\n    }\n    \n  }\n\n  ngOnInit() {\n    if (this.params_id) {\n      this.htmlText.header = 'Edit Doctors Office Record';\n      this.htmlText.nav = 'Edit Doctors Office';\n      this.htmlText.buttonText = 'Update';\n      this.getResolveData();\n    }\n  }\n  getResolveData() {\n    this.activeRoute.data.forEach((data) => {\n      this.usersData = data.data.res;\n      let techDetails: any;\n      techDetails = data.data.res;\n      setTimeout(() => {\n        this.getCityByName(techDetails[0].state);\n      }, 500);\n      this.doctorOfficeAddEditForm.controls['centerName'].patchValue(techDetails[0].centerName);\n      this.doctorOfficeAddEditForm.controls['email'].patchValue(techDetails[0].email);\n      this.doctorOfficeAddEditForm.controls['phone'].patchValue(techDetails[0].phone);\n      this.doctorOfficeAddEditForm.controls['address'].patchValue(techDetails[0].address);\n      this.doctorOfficeAddEditForm.controls['state'].patchValue(techDetails[0].state);\n      this.doctorOfficeAddEditForm.controls['city'].patchValue(techDetails[0].city);\n      this.doctorOfficeAddEditForm.controls['tech'].patchValue(techDetails[0].tech);\n      this.doctorOfficeAddEditForm.controls['zip'].patchValue(techDetails[0].zip);\n      this.doctorOfficeAddEditForm.controls['status'].patchValue(techDetails[0].status);\n\n    })\n  }\n  generateAddForm(){\n    this.datePipe.transform(this.date.value, 'MM-dd-yyyy');\n    var dateformat = this.datePipe.transform(new Date(), \"MM-dd-yyyy\");\n    this.doctorOfficeAddEditForm = this.fb.group({\n      centerName: ['', [Validators.required]],\n      email: [null, [Validators.required, Validators.email, Validators.maxLength(100)]],\n      phone: ['', [Validators.required]],\n      address: ['', [Validators.required]],\n      city: ['', []],\n      state: ['', []],\n      zip: ['', [Validators.required]],\n      date: [dateformat, []],\n      status: ['', []],\n      tech :['', []],\n      type: ['doctor_office', []],\n      password: ['', [Validators.required, Validators.maxLength(16), Validators.minLength(6)]],\n      confirmpassword: [],\n    }, { validators: this.matchpassword('password', 'confirmpassword') })\n  }\n\n  generateEditForm(){\n    this.datePipe.transform(this.date.value, 'MM-dd-yyyy');\n    var dateformat = this.datePipe.transform(new Date(), \"MM-dd-yyyy\");\n    this.doctorOfficeAddEditForm = this.fb.group({\n      centerName: ['', [Validators.required]],\n      email: [null, [Validators.required, Validators.email, Validators.maxLength(100)]],\n      phone: ['', [Validators.required]],\n      address: ['', [Validators.required]],\n      city: ['', []],\n      state: ['', []],\n      tech :['', []],\n      zip: ['', [Validators.required]],\n      date: [dateformat, []],\n      status: ['', []],\n      type: ['doctor_office', []],\n    });\n  }\n\n  matchpassword(passwordkye: string, confirmpasswordkye: string) {\n    return (group: FormGroup) => {\n      let passwordInput = group.controls[passwordkye],\n        confirmpasswordInput = group.controls[confirmpasswordkye];\n      if (passwordInput.value !== confirmpasswordInput.value) {\n        return confirmpasswordInput.setErrors({ notEquivalent: true });\n      }\n      else {\n        return confirmpasswordInput.setErrors(null);\n      }\n    };\n  }\n\n  openDialog(x: any): void {\n    this.dialogRef = this.dialog.open(ChangePasswordDoctorOfficeModal, {\n\n      data: { message: x, 'id': this.params_id }\n    });\n    this.dialogRef.afterClosed().subscribe(result => {\n    });\n  }\n  /**for validation purpose**/\n  inputUntouch(form: any, val: any) {\n\n    form.controls[val].markAsUntouched();\n  }\n  /**for validation purpose**/\n  /**for getting all states & cities function start here**/\n  allStateCityData() {\n    this.httpService.getSiteSettingData(\"./assets/data-set/state.json\").subscribe(response => {\n      this.states = response;\n    });\n\n    this.httpService.getSiteSettingData(\"./assets/data-set/city.json\").subscribe(response => {\n      this.allCities = response;\n      if(this.params_id){\n        this.getResolveData();\n      }\n    });\n  }\n  /**for getting all states & cities  function end here**/\n\n  getCity(event) {\n    var val = event;\n    console.log(event)\n    this.cities = this.allCities[val];\n  }\n  backToManagePage(){\n    this.router.navigateByUrl(\"/admin/doctor-office-management\");\n  }\n    /**getting all the technician data**/\n    getAllTechData() {\n      var data = {\n        \"source\": \"users\",\n        \"condition\": {\n          \"type\": \"tech\"\n        },\n        \"token\": this.user_token\n      }\n      this.httpService.httpViaPost('datalist', data)\n        .subscribe(response => {\n          this.allTechData = response.res;\n        });\n    }\n  getCityByName(stateName) {\n    console.log('stateName',stateName)\n    this.cities = this.allCities[stateName];\n    console.log(this.cities)\n  }\n\n  doctorOfficeAddEditFormFormSubmit() {\n    let x: any;\n    for (x in this.doctorOfficeAddEditForm.controls) {\n      this.doctorOfficeAddEditForm.controls[x].markAsTouched();\n    }\n     if(this.params_id){\n      delete this.doctorOfficeAddEditForm.value.password;\n      delete this.doctorOfficeAddEditForm.value.confirmpassword;\n     }\n    if (this.doctorOfficeAddEditForm.valid) {\n      if (this.doctorOfficeAddEditForm.value.status)\n        this.doctorOfficeAddEditForm.value.status = parseInt(\"1\");\n      else\n        this.doctorOfficeAddEditForm.value.status = parseInt(\"0\");\n        \n      delete this.doctorOfficeAddEditForm.value.confirmpassword;  \n      \n      var data: any;\n      if (this.params_id) {\n        data = {\n          \"source\": \"users\",\n          \"data\": {\n            id: this.params_id,\n            centerName: this.doctorOfficeAddEditForm.value.centerName,\n            phone: this.doctorOfficeAddEditForm.value.phone,\n            email: this.doctorOfficeAddEditForm.value.email,\n            address: this.doctorOfficeAddEditForm.value.address,\n            city: this.doctorOfficeAddEditForm.value.city,\n            state: this.doctorOfficeAddEditForm.value.state,\n            tech: this.doctorOfficeAddEditForm.value.tech,\n            zip: this.doctorOfficeAddEditForm.value.zip,\n            status: this.doctorOfficeAddEditForm.value.status,\n          },\n          \"token\": this.user_token\n        };\n     } else {\n        data = {\n          \"source\": \"users\",\n          \"data\": this.doctorOfficeAddEditForm.value,\n          \"domainurl\" : environment.siteBaseUrl + 'reset-password',\n          \"token\": this.user_token\n        }\n      }\n      this.httpService.httpViaPost(\"addorupdatedata\", data)\n        .subscribe(response => {\n          let action = \"ok\";\n          this.snackBar.open(this.message, action, {\n            duration: 2000,\n          });\n          this.formDirective.resetForm();\n          this.router.navigateByUrl('/admin/doctor-office-management');\n        })\n    }else{\n      alert(\"error\");\n    }\n  }\n}\n\n@Component({\n  selector: 'dialogtest',\n  templateUrl: 'modal.html',\n})\n\nexport class ChangePasswordDoctorOfficeModal {\n  public is_error: any;\n  public changePwdForm: any = FormGroup;\n  public user_token: any;\n  public params_id: any;\n  public userData: any;\n\n  constructor(public dialogRef: MatDialogRef<ChangePasswordDoctorOfficeModal>,\n    public fb: FormBuilder, public httpService: HttpServiceService, public cookie: CookieService,\n    public activeRoute: ActivatedRoute, @Inject(MAT_DIALOG_DATA) public data: DialogData) {\n    this.params_id = data.id;\n\n    this.user_token = cookie.get('jwtToken');\n    this.changePwdForm = this.fb.group({\n      password: ['', [Validators.required, Validators.maxLength(16), Validators.minLength(6)]],\n      confirmpassword: ['', []],\n    }, { validators: this.matchpassword('password', 'confirmpassword') })\n\n  }\n\n  matchpassword(passwordkye: string, confirmpasswordkye: string) {\n    return (group: FormGroup) => {\n      let passwordInput = group.controls[passwordkye],\n        confirmpasswordInput = group.controls[confirmpasswordkye];\n      if (passwordInput.value !== confirmpasswordInput.value) {\n        return confirmpasswordInput.setErrors({ notEquivalent: true });\n      }\n      else {\n        return confirmpasswordInput.setErrors(null);\n      }\n    };\n  }\n\n  changePasswordFormSubmit() {\n    let x: any;\n    for (x in this.changePwdForm.controls) {\n      this.changePwdForm.controls[x].markAsTouched();\n    }\n    if (this.changePwdForm.valid) {\n      delete this.changePwdForm.value.confirmpassword\n      var data = {\n        \"_id\": this.params_id,\n        \"adminflag\": 1,\n        \"newPassword\": this.changePwdForm.value.password,\n      }\n      this.httpService.httpViaPost('changepassword',data).subscribe(response=>{\n        console.log(\"response\",response);\n      });\n    }\n\n  }\n}","<!-- Admin Header -->\n<app-admin-header></app-admin-header>\n\n<!-- header with add button -->\n\n<mat-card class=\"admin_wrapper\">\n  <!-- header with add button -->\n  <mat-card-content class=\"table_wrapper\">\n    <mat-toolbar class=\"top_header\">\n      <h2> manage Doctor's Office</h2>\n    </mat-toolbar>\n\n    <span class=\"add_header\">\n\n      <span class=\"bradcrumb\"><a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage Doctor's\n        Office</span>\n      <button mat-flat-button [routerLink]=\"['/admin/doctor-office-management/add']\">Add Doctors Office</button>\n    </span>\n\n    <lib-listing class=\"DataTable\" *ngIf=\"doctorOfficeAllData.length>0\" [datasource]=\"doctorOfficeAllData\"\n      [skip]=\"doctorOfficeAllData_skip\" [detail_skip_array]=\"previewModal_skip\"\n      [modify_header_array]=\"doctorOfficeAllData_modify_header\" [apiurl]=\"apiUrl\" [sourcedata]=\"tableName\"\n      [editroute]=\"editUrl\" [jwttoken]=\"user_cookie\" [statusarr]=\"status\" [updateendpoint]=\"UpdateEndpoint\"\n      [deleteendpoint]=\"deleteEndpoint\" [date_search_endpoint]=\"SearchingEndpoint\"\n      [date_search_source]=\"SearchingSourceName\" [search_settings]=\"search_settings\">\n    </lib-listing>\n    <h2 class=\"no_data\" *ngIf=\"doctorOfficeAllData.length == 0\">No record found.</h2>\n  </mat-card-content>\n</mat-card>\n<!-- Admin Footer -->\n<app-admin-footer></app-admin-footer>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpServiceService } from '../../../services/http-service.service';\n\n@Component({\n  selector: 'app-doctor-office-management',\n  templateUrl: './doctor-office-management.component.html',\n  styleUrls: ['./doctor-office-management.component.css']\n})\nexport class DoctorOfficeManagementComponent implements OnInit {\npublic doctorOfficeAllData : any=[];\npublic user_cookie:any;\n\npublic doctorOfficeAllData_skip: any = [\"password\",\"_id\",\"type\",\"techId\",\"centerName\",\"techCount\",\"city\",\n\"state\",\"city\",\"zip\"];\n  public editUrl: any = \"admin/doctor-office-management/edit\";\n  public doctorOfficeAllData_modify_header: any = {\n    \"centerNamecopy\":\"Center Name\",\"email\":\"E-Mail\",\"phone\":\"Phone\",\"address\":\"Address\",\n    \"date\":\"Date Added\",\"status\":\"Status\",\"techName\":\"Tech Name\",\"techCount\": \"Tech Count\"\n  };\n  public previewModal_skip : any=['_id','techId','centerNamecopy'];\n\n  public UpdateEndpoint: any = \"addorupdatedata\";\n  public deleteEndpoint: any = \"deletesingledata\";\n  public apiUrl:any;\n  public tableName: any = \"users\";\n\n  public status: any = [{ val: 1, 'name': 'Active' }, { val: 0, 'name': 'Inactive' }];\n  public SearchingEndpoint: any = \"datalist\";\n  public SearchingSourceName:any = \"users_view_doctoroffice\";\n  public search_settings: any =\n    {\n      selectsearch: [{ label: 'Search By Status', field: 'status', values: this.status }],\n      textsearch: [{ label: \"Search By Center Name\", field: 'centerName' },\n      { label: \"Search By E-Mail\", field: 'email' }],\n\n    };\n\n  constructor(public activatedRoute : ActivatedRoute,\n    public cookie: CookieService, public http: HttpClient,\n    public httpService: HttpServiceService) {\n\n    this.user_cookie = cookie.get('jwtToken');\n    this.apiUrl = httpService.baseUrl ; \n      }\n\n  ngOnInit() {\n    this.activatedRoute.data.forEach((data) => {\n      this.doctorOfficeAllData = data.data.res;\n    })\n  }\n\n}\n","<!-- Admin Header -->\n<app-admin-header></app-admin-header>\n\n<!-- header with add button -->\n<mat-card class=\"admin_wrapper\">\n  <!-- header with add button -->\n  <mat-card-content class=\"table_wrapper\">\n    <mat-toolbar class=\"top_header\">\n      <h2> Report Not Process </h2>\n    </mat-toolbar>\n\n    <span class=\"add_header\">\n      <span class=\"bradcrumb\"><a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage Admin</span>\n    </span>\n    <!-- End header with add button -->\n\n    <!-- table -->\n    <lib-listing class=\"DataTable\" *ngIf=\"allResloveData.length>0\"\n      [datasource]=\"allResloveData\"\n      [skip]=\"allUserData_skip\"\n      [detail_skip_array]=\"previewModal_skip\"\n      [modify_header_array]=\"allUserData_modify_header\"\n      [apiurl]=\"apiUrl\"\n      [sourcedata]=\"tableName\"\n      [editroute]=\"editUrl\"\n      [jwttoken]=\"user_cookie\"\n      [statusarr]=\"status\"\n      [updateendpoint]=\"UpdateEndpoint\"\n      [deleteendpoint]=\"deleteEndpoint\"\n      [date_search_endpoint]=\"SearchingEndpoint\"\n      [date_search_source]=\"SearchingSourceName\"\n      [search_settings]=\"search_settings\">\n    </lib-listing>\n\n    <h2 class=\"no_data\" *ngIf=\"allResloveData.length == 0\">No record found.</h2>\n    <!-- end table -->\n\n    <!-- Admin Footer -->\n  </mat-card-content>\n</mat-card>\n\n\n<app-admin-footer></app-admin-footer>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { HttpServiceService } from '../../../services/http-service.service';\n\n@Component({\n  selector: 'app-report-not-process',\n  templateUrl: './report-not-process.component.html',\n  styleUrls: ['./report-not-process.component.css']\n})\n\nexport class ReportNotProcessComponent implements OnInit {\n\n  public allResloveData: any = [];\n  public allUserData_skip: any = [\"doctor_id\", \"tech_id\", \"report_type\", \"status\", \"patientName\", \"_id\", \"patientName_search\", \"record\", \"billGenerationDate\", \"billSentDate\", \"superBill\", \"status_text\", \"note\", \"file_upload_server_id\"];\n  public editUrl: any = \"admin/admin-management/edit\";\n  public allUserData_modify_header: any = {\n    \"firstname\": \"First Name\", \"lastname\": \"Last Name\",\n    \"email\": \"E-Mail\", \"phone\": \"Phone Number\", \"date\": \"Date\",\n    \"status\": \"Status\",\"address\": \"Address\",\n    \"fullNamecopy\": \"Name\"\n  };\n\n  public UpdateEndpoint: any = \"addorupdatedata\";\n  public deleteEndpoint: any = \"deletesingledata\";\n  public previewModal_skip : any=['_id','fullNamecopy'];\n  public tableName: any = \"users\";\n  public apiUrl: any;\n  public status: any = [{ val: 1, 'name': 'Active' }, { val: 0, 'name': 'Inactive' }];\n  public SearchingEndpoint: any = \"datalist\";\n  public SearchingSourceName: any = \"users_view_admin\";\n  public search_settings: any =\n    {\n      selectsearch: [{ label: 'Search By Status', field: 'status', values: this.status }],\n      textsearch: [{ label: \"Search By Name\", field: 'fullName' },\n      { label: \"Search By E-Mail\", field: 'email' }],\n\n    };\n  public user_cookie: any;\n\n\n  constructor(public activatedRoute: ActivatedRoute, public cookie: CookieService,\n    public httpService: HttpServiceService) {\n\n    this.user_cookie = cookie.get('jwtToken');\n    this.apiUrl = httpService.baseUrl;\n    \n  }\n\n  ngOnInit() {\n    this.activatedRoute.data.forEach((resolveData) => {\n      console.log(\"Data: \", resolveData.data);\n      this.allResloveData = resolveData.data.res;\n    });\n  }\n}\n\n","<!-- Admin Header -->\n<app-admin-header></app-admin-header>\n<mat-card class=\"admin_wrapper\">\n  <!-- header with add button -->\n  <mat-card-content class=\"title_wrapper\">\n    {{ htmlText.header }}\n  </mat-card-content>\n\n\n  <span class=\"add_header\">\n\n    <span class=\"bradcrumb\">\n      <a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp;\n      <a [routerLink]=\"['/admin/tech-management']\">Manage Tech &nbsp;/</a> &nbsp;\n      {{ htmlText.nav }}\n    </span>\n  </span>\n  <!-- End header with add button -->\n\n  <mat-card class=\"add_form\">\n\n    <!-- <h2>{{ headerText}}</h2> -->\n\n\n    <mat-card-content class=\"form_wrapper\">\n      <form class=\"example-form\" autocomplete=\"off\" name=\"TechManagementAddEditForm\"\n        [formGroup]=\"TechManagementAddEditForm\" (ngSubmit)=\"TechManagementAddFormFormSubmit()\">\n\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Enter First Name</mat-label>\n          <input matInput placeholder=\"First Name\" [formControl]=\"TechManagementAddEditForm.controls['firstname']\"\n            (blur)=\"inputUntouch(TechManagementAddEditForm,'firstname')\">\n          <mat-error *ngIf=\"TechManagementAddEditForm.controls['firstname'].touched && !TechManagementAddEditForm.controls['firstname'].valid\n           && TechManagementAddEditForm.controls['firstname'].errors.required\">\n            First Name field can not be blank</mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Enter Last Name</mat-label>\n          <input matInput placeholder=\"Last Name\" [formControl]=\"TechManagementAddEditForm.controls['lastname']\"\n            (blur)=\"inputUntouch(TechManagementAddEditForm,'lastname')\">\n          <mat-error *ngIf=\"TechManagementAddEditForm.controls['lastname'].touched && !TechManagementAddEditForm.controls['lastname'].valid\n           && TechManagementAddEditForm.controls['lastname'].errors.required\">\n            Last Name field can not be blank</mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Email Address</mat-label>\n          <input matInput placeholder=\"Email Address\" [formControl]=\"TechManagementAddEditForm.controls['email']\"\n            (blur)=\"inputUntouch(TechManagementAddEditForm,'email')\">\n          <mat-error *ngIf=\"TechManagementAddEditForm.controls['email'].touched && !TechManagementAddEditForm.controls['email'].valid\n            && TechManagementAddEditForm.controls['email'].errors.required\">\n            E-Mail field can not be blank</mat-error>\n          <mat-error\n            *ngIf=\"!TechManagementAddEditForm.controls['email'].valid && !TechManagementAddEditForm.controls['email'].errors.required\">\n            Email is not valid</mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Phone </mat-label>\n          <input matInput placeholder=\"Phone\" [formControl]=\"TechManagementAddEditForm.controls['phone']\"\n            (blur)=\"inputUntouch(TechManagementAddEditForm,'phone')\">\n          <mat-error *ngIf=\"TechManagementAddEditForm.controls['phone'].touched && !TechManagementAddEditForm.controls['phone'].valid\n            && TechManagementAddEditForm.controls['phone'].errors.required\">\n            Phone Number field can not be blank</mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Address</mat-label>\n          <textarea matInput placeholder=\"Address\" [formControl]=\"TechManagementAddEditForm.controls['address']\"\n            (blur)=\"inputUntouch(TechManagementAddEditForm,'address')\"></textarea>\n          <mat-error *ngIf=\"TechManagementAddEditForm.controls['address'].touched && !TechManagementAddEditForm.controls['address'].valid\n            && TechManagementAddEditForm.controls['address'].errors.required\">\n            Address field can not be blank</mat-error>\n        </mat-form-field>\n        <mat-form-field class=\"parent_cat\" appearance=\"fill\">\n          <mat-label>State</mat-label>\n          <mat-select formControlName=\"state\" (selectionChange)=\"getCity($event.value);\">\n            <mat-option [value]=0>Select a state</mat-option>\n            <mat-option *ngFor=\"let state of states;\" value=\"{{ state.name }}\">{{ state.name }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field class=\"parent_cat\" appearance=\"fill\">\n          <mat-label>City</mat-label>\n          <mat-select formControlName=\"city\">\n            <mat-option [value]=0>Select a category</mat-option>\n            <mat-option *ngFor=\"let city of cities;\" value=\"{{ city }}\">{{ city }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n\n\n\n        <mat-form-field appearance=\"fill\">\n          <mat-label>ZIP</mat-label>\n          <input matInput placeholder=\"ZIP\" [formControl]=\"TechManagementAddEditForm.controls['zip']\"\n            (blur)=\"inputUntouch(TechManagementAddEditForm,'zip')\">\n          <mat-error *ngIf=\"TechManagementAddEditForm.controls['zip'].touched && !TechManagementAddEditForm.controls['zip'].valid\n            && TechManagementAddEditForm.controls['zip'].errors.required\">\n\n            Zip field can not be blank</mat-error>\n        </mat-form-field>\n\n\n        <mat-form-field>\n          <mat-label>Date</mat-label>\n          <input [value]=\"date.value\" matInput [matDatepicker]=\"myPicker\" placeholder=\"date\">\n          <mat-datepicker-toggle matSuffix [for]=\"myPicker\" disabled></mat-datepicker-toggle>\n          <mat-datepicker #myPicker></mat-datepicker>\n        </mat-form-field>\n\n        <!-- for modal to change password -->\n        <ng-container *ngIf=\"!params_id\">\n          <mat-form-field class=\"form-group\">\n            <input matInput placeholder=\"Password\" type=\"password\"\n              [formControl]=\"TechManagementAddEditForm.controls['password']\">\n            <mat-error\n              *ngIf=\"!TechManagementAddEditForm.controls['password'].valid && TechManagementAddEditForm.controls['password'].touched\">\n              Password field can not be blank</mat-error>\n\n          </mat-form-field>\n          <mat-form-field class=\"form-group\">\n            <input matInput placeholder=\"Confirm Password\" type=\"password\"\n              [formControl]=\"TechManagementAddEditForm.controls['confirmpassword']\">\n            <mat-error\n              *ngIf=\"!TechManagementAddEditForm.controls['confirmpassword'].valid && TechManagementAddEditForm.controls['confirmpassword'].touched\">\n              Password does not match </mat-error>\n          </mat-form-field>\n        </ng-container>\n\n        <mat-checkbox [formControl]=\"TechManagementAddEditForm.controls['status']\" checked>Active</mat-checkbox>\n\n\n        <!-- end here -->\n        <span class=\"submit_form\">\n          <button mat-flat-button type=\"button\" (click)=\"backToManagePage()\">Back </button>\n          <button mat-flat-button type=\"reset\">Reset </button>\n          <button mat-flat-button type=\"submit\"> {{ htmlText.buttonText }} </button>\n          <ng-container *ngIf=\"params_id\">\n            <button mat-flat-button type=\"button\" (click)=\"openDialog('')\"> Change Password </button>\n          </ng-container>\n        </span>\n      </form>\n\n\n    </mat-card-content>\n  </mat-card>\n\n</mat-card>\n<!-- Admin Footer -->\n<app-admin-footer></app-admin-footer>\n","\n<mat-card class=\"add_form\">\n    <h1 mat-dialog-title>Change Password</h1>\n\n    <form class=\"example-form\" autocomplete=\"off\" name=\"changePwdForm\" [formGroup]=\"changePwdForm\"\n        (ngSubmit)=\"changePasswordFormSubmit()\">\n        <mat-dialog-content class=\"mat-typography\">\n\n\n            <mat-form-field>\n                <input matInput placeholder=\"Password\" type=\"password\"\n                [formControl]=\"changePwdForm.controls['password']\">\n                <mat-error *ngIf=\"changePwdForm.controls['password'].touched && !changePwdForm.controls['password'].valid\n          && changePwdForm.controls['password'].errors.required\">\n                    Password can not be blank</mat-error>\n            </mat-form-field> <br>\n            <mat-form-field>\n                <input matInput placeholder=\"Confirm Password\" type=\"password\"\n                [formControl]=\"changePwdForm.controls['confirmpassword']\">\n                <mat-error\n                    *ngIf=\"!changePwdForm.controls['confirmpassword'].valid && changePwdForm.controls['confirmpassword'].touched\">\n                    Password does not match </mat-error>\n                \n            </mat-form-field><br>   \n\n            <span class=\"submit_form\">\n                <button mat-flat-button mat-dialog-close type=\"button\" > Cancel </button>\n                <button mat-flat-button type=\"submit\" [mat-dialog-close]=\"true\" cdkFocusInitial> Submit </button>\n            </span>\n        </mat-dialog-content>\n    </form>\n</mat-card>","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators, FormGroupDirective } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpServiceService } from '../../../../services/http-service.service';\nimport { DatePipe } from '@angular/common';\nimport { CookieService } from 'ngx-cookie-service';\nimport { MatSnackBar } from '@angular/material';\nimport { CommonFunction } from '../../../../class/common/common-function';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from \"@angular/material\";\nimport { environment } from '../../../../../environments/environment';\n\nexport interface DialogData {\n  message: string;\n  id: any;\n}\n\n@Component({\n  selector: 'app-add-edit-tech',\n  templateUrl: './add-edit-tech.component.html',\n  styleUrls: ['./add-edit-tech.component.css']\n})\n\nexport class AddEditTechComponent implements OnInit {\n\n  @ViewChild(FormGroupDirective, { static: false }) formDirective: FormGroupDirective;\n\n  public TechManagementAddEditForm: FormGroup;\n  public message: any = \"Submitted Successfully\";\n  public dialogRef: any;\n\n  date = new FormControl(new Date());\n  public ddmmyy: any;\n  serializedDate = new FormControl((new Date()).toISOString());\n  public usersData: any = [];\n  public states: any;\n  public allCities: any;\n  public cities: any;\n  public params_id: any;\n  public htmlText: any = { header: 'Add New Technician', nav: 'Add Tech', buttonText: 'Save' };\n  public user_token: any;\n  public taxo_array: any = [];\n  public headerText: any = \"add technician\";\n  constructor(public fb: FormBuilder, public activeRoute: ActivatedRoute,\n    public router: Router, public httpService: HttpServiceService, private datePipe: DatePipe,\n    public cookie: CookieService, public snackBar: MatSnackBar, public commonFunction: CommonFunction,\n    public dialog: MatDialog) {\n    /* Set Meta Data */\n    this.commonFunction.setTitleMetaTags();\n\n    this.allStateCityData();\n    this.user_token = cookie.get('jwtToken');\n    this.params_id = this.activeRoute.snapshot.params._id;\n    if (this.params_id) {\n      this.generateEditForm();\n    } else {\n      this.generateAddForm();\n    }\n  }\n\n  generateAddForm() {\n    this.datePipe.transform(this.date.value, 'MM-dd-yyyy');\n    var dateformat = this.datePipe.transform(new Date(), \"MM-dd-yyyy\");\n\n    this.TechManagementAddEditForm = this.fb.group({\n      firstname: ['', [Validators.required]],\n      lastname: ['', [Validators.required]],\n      email: [null, [Validators.required, Validators.email, Validators.maxLength(100)]],\n      phone: ['', [Validators.required]],\n      address: ['', [Validators.required]],\n      city: ['', [Validators.required]],\n      state: ['', [Validators.required]],\n      zip: ['', [Validators.required]],\n      date: [dateformat, []],\n      type: ['tech', []],\n      // taxo_list : [],\n      status: ['', []],\n      password: ['', [Validators.required, Validators.maxLength(16), Validators.minLength(6)]],\n      confirmpassword: ['', Validators.required],\n    }, { validators: this.matchpassword('password', 'confirmpassword') });\n  }\n\n  generateEditForm() {\n    this.datePipe.transform(this.date.value, 'MM-dd-yyyy');\n    var dateformat = this.datePipe.transform(new Date(), \"MM-dd-yyyy\");\n\n    this.TechManagementAddEditForm = this.fb.group({\n      firstname: ['', [Validators.required]],\n      lastname: ['', [Validators.required]],\n      email: [null, [Validators.required, Validators.email, Validators.maxLength(100)]],\n      phone: ['', [Validators.required]],\n      address: ['', [Validators.required]],\n      city: ['', [Validators.required]],\n      state: ['', [Validators.required]],\n      zip: ['', [Validators.required]],\n      date: [dateformat, []],\n      type: ['tech', []],\n      // taxo_list : [],\n      status: ['', []],\n    });\n  }\n\n  ngOnInit() {\n    if (this.params_id) {\n      this.htmlText.header = 'Edit Technician Record';\n      this.htmlText.nav = 'Edit Technician';\n      this.headerText = \"edit technician\";\n      this.htmlText.buttonText = 'Update';\n      this.getResolveData();\n    }\n  }\n\n  getResolveData() {\n    this.activeRoute.data.forEach((data) => {\n      this.usersData = data.techData.res;\n      let techDetails: any = data.techData.res;\n      setTimeout(() => {\n        this.getCityByName(techDetails[0].state);\n      }, 400);\n      this.TechManagementAddEditForm.controls['firstname'].patchValue(techDetails[0].firstname);\n      this.TechManagementAddEditForm.controls['lastname'].patchValue(techDetails[0].lastname);\n      this.TechManagementAddEditForm.controls['email'].patchValue(techDetails[0].email);\n      this.TechManagementAddEditForm.controls['phone'].patchValue(techDetails[0].phone);\n      this.TechManagementAddEditForm.controls['address'].patchValue(techDetails[0].address);\n      this.TechManagementAddEditForm.controls['city'].patchValue(techDetails[0].city);\n      this.TechManagementAddEditForm.controls['state'].patchValue(techDetails[0].state);\n      this.TechManagementAddEditForm.controls['zip'].patchValue(techDetails[0].zip);\n      this.TechManagementAddEditForm.controls['status'].patchValue(techDetails[0].status);\n    })\n  }\n\n  matchpassword(passwordkye: string, confirmpasswordkye: string) {\n    return (group: FormGroup) => {\n      let passwordInput = group.controls[passwordkye],\n        confirmpasswordInput = group.controls[confirmpasswordkye];\n      if (passwordInput.value !== confirmpasswordInput.value) {\n        return confirmpasswordInput.setErrors({ notEquivalent: true });\n      } else {\n        return confirmpasswordInput.setErrors(null);\n      }\n    };\n  }\n\n  openDialog(x: any): void {\n    this.dialogRef = this.dialog.open(Dialogtest, {\n      data: { message: x, 'id': this.params_id }\n    });\n    this.dialogRef.afterClosed().subscribe(result => {\n    });\n  }\n\n  /**for validation purpose**/\n  inputUntouch(form: any, val: any) {\n    form.controls[val].markAsUntouched();\n  }\n  /**for validation purpose**/\n\n  /**resetting the form start here **/\n  ResetAddForm() {\n    this.formDirective.resetForm();\n  }\n  /**resetting the form start here **/\n  /**for getting all states & cities function start here**/\n  allStateCityData() {\n    this.httpService.getSiteSettingData(\"./assets/data-set/state.json\").subscribe(response => {\n      this.states = response;\n      // this.getResolveData();\n    });\n\n    this.httpService.getSiteSettingData(\"./assets/data-set/city.json\").subscribe(response => {\n      this.allCities = response;\n      if(this.params_id){\n        this.getResolveData();\n      }  \n    });\n  }\n  /**for getting all states & cities  function end here**/\n\n  getCity(event) {\n    var val = event;\n    this.cities = this.allCities[val];\n  }\n\n  getCityByName(stateName) {\n    this.cities = this.allCities[stateName];\n  }\n  backToManagePage(){\n    this.router.navigateByUrl(\"admin/tech-management\");\n  }\n\n  TechManagementAddFormFormSubmit() {\n\n    let x: any;\n    for (x in this.TechManagementAddEditForm.controls) {\n      this.TechManagementAddEditForm.controls[x].markAsTouched();\n    }\n\n    if (this.TechManagementAddEditForm.valid) {\n      if (this.TechManagementAddEditForm.value.status)\n        this.TechManagementAddEditForm.value.status = parseInt(\"1\");\n      else\n        this.TechManagementAddEditForm.value.status = parseInt(\"0\");\n      this.TechManagementAddEditForm.value.taxo_list = this.taxo_array;\n\n      delete this.TechManagementAddEditForm.value.confirmpassword;\n      var data: any;\n      if (this.params_id) {\n        data = {\n          \"source\": \"users\",\n          \"data\": {\n            id: this.params_id,\n            firstname: this.TechManagementAddEditForm.value.firstname,\n            lastname: this.TechManagementAddEditForm.value.lastname,\n            phone: this.TechManagementAddEditForm.value.phone,\n            email: this.TechManagementAddEditForm.value.email,\n            address: this.TechManagementAddEditForm.value.address,\n            city: this.TechManagementAddEditForm.value.city,\n            state: this.TechManagementAddEditForm.value.state,\n            zip: this.TechManagementAddEditForm.value.zip,\n            status: this.TechManagementAddEditForm.value.status,\n          },\n          \"token\": this.user_token\n        };\n      } else {\n        data = {\n          \"source\": \"users\",\n          \"data\": this.TechManagementAddEditForm.value,\n          \"domainurl\" : environment.siteBaseUrl + 'reset-password',\n          \"token\": this.user_token\n        }\n      }\n\n      this.httpService.httpViaPost(\"addorupdatedata\", data).subscribe(response => {\n        if (response.status == \"success\") {\n          let action = \"ok\";\n          this.snackBar.open(this.message, action, {\n            duration: 2000,\n          });\n        } else {\n          this.snackBar.open(response.msg, '', {\n            duration: 2000,\n          });\n        }\n        });\n    } else {\n    }\n  }\n\n}\n/**this is only for the Change Password modal in the edit page**/\n@Component({\n  selector: 'dialogtest',\n  templateUrl: 'modal.html',\n})\n\nexport class Dialogtest {\n  public is_error: any;\n  public changePwdForm: any = FormGroup;\n  public user_token: any;\n  public params_id: any;\n  public userData: any;\n\n  constructor(public dialogRef: MatDialogRef<Dialogtest>,\n    public fb: FormBuilder, public httpService: HttpServiceService, public cookie: CookieService,\n    public activeRoute: ActivatedRoute, @Inject(MAT_DIALOG_DATA) public data: DialogData) {\n    this.params_id = data.id;\n\n    this.user_token = cookie.get('jwtToken');\n    this.changePwdForm = this.fb.group({\n      password: ['', [Validators.required, Validators.maxLength(16), Validators.minLength(6)]],\n      confirmpassword: [],\n    }, { validators: this.matchpassword('password', 'confirmpassword') })\n\n  }\n\n  matchpassword(passwordkye: string, confirmpasswordkye: string) {\n    return (group: FormGroup) => {\n      let passwordInput = group.controls[passwordkye],\n        confirmpasswordInput = group.controls[confirmpasswordkye];\n      if (passwordInput.value !== confirmpasswordInput.value) {\n        return confirmpasswordInput.setErrors({ notEquivalent: true });\n      }\n      else {\n        return confirmpasswordInput.setErrors(null);\n      }\n    };\n  }\n\n  changePasswordFormSubmit() {\n    let x: any;\n    for (x in this.changePwdForm.controls) {\n      this.changePwdForm.controls[x].markAsTouched();\n    }\n    if (this.changePwdForm.valid) {\n      delete this.changePwdForm.value.confirmpassword\n      var data = {\n        \"_id\": this.params_id,\n        \"adminflag\": 1,\n        \"newPassword\": this.changePwdForm.value.password,\n      }\n      this.httpService.httpViaPost('changepassword',data).subscribe(response=>{\n        console.log(\"response\",response);\n      });\n    }\n\n  }\n}\n","<!-- Admin Header -->\n<app-admin-header></app-admin-header>\n\n<mat-card class=\"admin_wrapper\">\n  <!-- header with add button -->\n  <mat-card-content class=\"table_wrapper\">\n    <mat-toolbar class=\"top_header\">\n      <h2> Manage Technician </h2>\n    </mat-toolbar>\n\n  <span class=\"add_header\">\n\n  <span class=\"bradcrumb\"><a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Manage Tech</span>\n  <button mat-flat-button [routerLink]=\"['/admin/tech-management/add']\">Add Tech</button>\n</span>\n<!-- End header with add button -->\n\n\n<lib-listing class=\"DataTable\" *ngIf=\"TechDashboardAllData.length>0\"\n  [datasource]=\"TechDashboardAllData\"\n  [skip]=\"allUserData_skip\"\n  [detail_skip_array]=\"previewModal_detail_skip\"\n  [modify_header_array]=\"allUserData_modify_header\"\n  [apiurl]=\"apiUrl\"\n  [sourcedata]=\"tableName\"\n  [editroute]=\"editUrl\"\n  [jwttoken]=\"user_cookie\"\n  [statusarr]=\"status\"\n  [updateendpoint]=\"UpdateEndpoint\"\n  [deleteendpoint]=\"deleteEndpoint\"\n  [date_search_endpoint]=\"SearchingEndpoint\"\n  [date_search_source]=\"SearchingSourceName\"\n  [search_settings]=\"search_settings\">\n</lib-listing>\n<h2 *ngIf=\"TechDashboardAllData.length == 0\">No record found.</h2>\n<!-- <mat-card-content class=\"footer_section\">\n  <span class=\"footer_content\"> -->\n\n    <!-- <mat-card-content class=\"link\">\n      <a href=\"\">Privacy Policy</a>\n      <a href=\"\"> Terms & conditions</a>\n    </mat-card-content>\n    <p>© Copyright 2018 Advanced Wellness Solutions- All Rights Reserved</p>\n  </span>\n</mat-card-content> -->\n\n<!-- Admin Footer -->\n</mat-card-content>\n</mat-card>\n<app-admin-footer></app-admin-footer>\n","import { Component, OnInit } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpServiceService } from '../../../../services/http-service.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CommonFunction } from '../../../../class/common/common-function';\n\n@Component({\n  selector: 'app-listing-tech',\n  templateUrl: './listing-tech.component.html',\n  styleUrls: ['./listing-tech.component.css']\n})\nexport class ListingTechComponent implements OnInit {\n  public allUserData: any = [];\n  public allUserData_skip: any = [\"_id\", \"created_at\",\"password\",\"id\",\n  \"updated_at\",\"type\",\"phoneno\",\"taxo_list\",\"fullName\",\"city\",\"state\",\"zip\"];\n  public editUrl: any = \"admin/tech-management/edit\";\n  public allUserData_modify_header: any = {\n    \"firstname\": \"First Name\", \"lastname\": \"Last Name\",\n    \"email\": \"E-Mail\",  \"address\": \"Address\",\"status\": \"Status\",\"phone\":\"Phone Number\"\n    ,\"date\":\"Data Added\",\"fullNamecopy\" :\"Name\"\n  };\n  public previewModal_detail_skip: any = ['_id','fullNamecopy'];\n\n  public UpdateEndpoint: any = \"addorupdatedata\";\n  public deleteEndpoint: any = \"deletesingledata\";\n  public apiUrl:any;\n  public tableName: any = \"users\";\n\n  public status: any = [{ val: 1, 'name': 'Active' }, { val: 0, 'name': 'Inactive' }];\n  public SearchingEndpoint: any = \"datalist\";\n  public SearchingSourceName:any = \"users_view_tech\";\n  public search_settings: any =\n    {\n      selectsearch: [{ label: 'Search By Status', field: 'status', values: this.status }],\n      textsearch: [{ label: \"Search By Name\", field: 'fullName' },\n      { label: \"Search By E-Mail\", field: 'email' }],\n\n    };\n  public user_cookie: any;\n  public TechDashboardAllData: any = [];\n  constructor(public cookie: CookieService, public http: HttpClient,\n    public httpService: HttpServiceService, public activatedRoute: ActivatedRoute,\n     public commonFunction: CommonFunction) {\n      \n      /* Set Meta Data */\n    this.commonFunction.setTitleMetaTags();\n\n      this.user_cookie = cookie.get('jwtToken');\n      this.apiUrl = httpService.baseUrl ; \n\n    }\n\n  ngOnInit() {\n    this.activatedRoute.data.forEach((data) => {\n      this.TechDashboardAllData = data.techDashboardData.res;\n     \n    })\n  }\n\n}\n","<mat-toolbar class=\"techdashboard_header\">\n  <mat-toolbar-row>\n    <span class=\"logo_wrapper\">\n      <img src=\"../../../assets/images/logo.png\">\n    </span>\n\n\n    <mat-card-content class=\"quotation\">\n      <p>ADVANCED ANS TECHNOLOGY – BETTER PATIENT CARE – INCREASE PRACTICE REVENUE</p>\n    </mat-card-content>\n\n\n\n  </mat-toolbar-row>\n</mat-toolbar>\n<!-- end header -->\n\n\n<mat-card class=\"add_form\">\n\n  <h2>add report manually</h2>\n\n\n  <!-- <mat-card-content class=\"form_wrapper\">\n    <form class=\"example-form\" autocomplete=\"off\" name=\"UserManagementAddEditForm\" [formGroup]=\"UserManagementAddEditForm\"\n      (ngSubmit)=\"UserManagementAddFormFormSubmit()\">\n\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Enter First Name</mat-label>\n        <input matInput placeholder=\"First Name\" [formControl]=\"UserManagementAddEditForm.controls['firstname']\"\n          (blur)=\"inputUntouch(UserManagementAddEditForm,'firstname')\">\n          <mat-error *ngIf=\"UserManagementAddEditForm.controls['firstname'].touched && !UserManagementAddEditForm.controls['firstname'].valid\n         && UserManagementAddEditForm.controls['firstname'].errors.required\">\n              First Name field can not be blank</mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Enter Last Name</mat-label>\n        <input matInput placeholder=\"Last Name\" [formControl]=\"UserManagementAddEditForm.controls['lastname']\"\n          (blur)=\"inputUntouch(UserManagementAddEditForm,'lastname')\">\n          <mat-error *ngIf=\"UserManagementAddEditForm.controls['lastname'].touched && !UserManagementAddEditForm.controls['lastname'].valid\n         && UserManagementAddEditForm.controls['lastname'].errors.required\">\n              Last Name field can not be blank</mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Email Address</mat-label>\n        <input matInput placeholder=\"Email Address\" [formControl]=\"UserManagementAddEditForm.controls['email']\"\n          (blur)=\"inputUntouch(UserManagementAddEditForm,'email')\">\n          <mat-error *ngIf=\"UserManagementAddEditForm.controls['email'].touched && !UserManagementAddEditForm.controls['email'].valid\n          && UserManagementAddEditForm.controls['email'].errors.required\">\n               E-Mail field can not be blank</mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Phone </mat-label>\n        <input type=\"number\" matInput placeholder=\"Phone\" [formControl]=\"UserManagementAddEditForm.controls['phoneno']\"\n          (blur)=\"inputUntouch(UserManagementAddEditForm,'phoneno')\">\n          <mat-error *ngIf=\"UserManagementAddEditForm.controls['phoneno'].touched && !UserManagementAddEditForm.controls['phoneno'].valid\n          && UserManagementAddEditForm.controls['phoneno'].errors.required\">\n               Phone Number field can not be blank</mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Address</mat-label>\n        <textarea matInput placeholder=\"Address\" [formControl]=\"UserManagementAddEditForm.controls['address']\"\n          (blur)=\"inputUntouch(UserManagementAddEditForm,'address')\"></textarea>\n          <mat-error *ngIf=\"UserManagementAddEditForm.controls['address'].touched && !UserManagementAddEditForm.controls['address'].valid\n          && UserManagementAddEditForm.controls['address'].errors.required\">\n               Address field can not be blank</mat-error>\n      </mat-form-field>\n\n      <mat-form-field class=\"parent_cat\" appearance=\"fill\">\n        <mat-label>City</mat-label>\n        <mat-select formControlName=\"city\">\n          <mat-option [value]=0>Select a category</mat-option>\n          <mat-option *ngFor=\"let city of cities;\" value=\"{{ city }}\">{{ city }}</mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <mat-form-field class=\"parent_cat\" appearance=\"fill\">\n          <mat-label>State</mat-label>\n          <mat-select formControlName=\"state\" (selectionChange)=\"getCity($event.value);\">\n            <mat-option [value]=0>Select a category</mat-option>\n            <mat-option *ngFor=\"let state of states;\" value=\"{{ state.name }}\">{{ state.name }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n\n      <mat-form-field appearance=\"fill\">\n        <mat-label>ZIP</mat-label>\n        <input matInput placeholder=\"ZIP\" [formControl]=\"UserManagementAddEditForm.controls['zip']\"\n          (blur)=\"inputUntouch(UserManagementAddEditForm,'zip')\">\n          <mat-error *ngIf=\"UserManagementAddEditForm.controls['zip'].touched && !UserManagementAddEditForm.controls['zip'].valid\n          && UserManagementAddEditForm.controls['zip'].errors.required\">\n               Zip field can not be blank</mat-error>\n      </mat-form-field>\n\n\n      <mat-form-field>\n          <mat-label>Date</mat-label>\n          <input  [value]=\"date.value\"\n          matInput [matDatepicker]=\"myPicker\"  placeholder=\"date\" >\n          <mat-datepicker-toggle  matSuffix [for]=\"myPicker\" disabled></mat-datepicker-toggle>\n          <mat-datepicker #myPicker></mat-datepicker>\n      </mat-form-field>\n\n      <mat-checkbox [formControl]=\"UserManagementAddEditForm.controls['status']\" checked>Status</mat-checkbox>\n      <mat-error *ngIf=\"UserManagementAddEditForm.controls['status'].touched && !UserManagementAddEditForm.controls['status'].valid\n      && UserManagementAddEditForm.controls['status'].errors.required\">\n      Status field can not be blank</mat-error>\n \n      <span class=\"submit_form\">\n        <button mat-flat-button (click)=\"ResetAddForm()\">Reset </button>\n        <button mat-flat-button type=\"submit\"> {{ buttonText }} </button>\n      </span>\n    </form>\n  </mat-card-content> -->\n    <mat-card-content>\n      <label>Patient Name</label>\n      <mat-form-field >\n        <input matInput>\n      </mat-form-field>\n    </mat-card-content>\n\n    <mat-card-content>\n      <label>Patient Gender</label>\n      <mat-checkbox>Male</mat-checkbox>\n      <mat-checkbox>Female</mat-checkbox>\n    </mat-card-content>\n\n    <mat-card-content>\n      <label> DOB</label>\n      <mat-form-field>\n        <input matInput [matDatepicker]=\"picker\"  >\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n      </mat-form-field>\n    </mat-card-content>\n\n    <mat-card-content>\n      <label>Ordering Physicial</label>\n      <mat-form-field >\n        <input matInput>\n      </mat-form-field>\n    </mat-card-content>\n\n\n<span class=\"test_date_wrapper\">\n  \n  <mat-card-content>\n    <label> Test Date</label>\n    <mat-form-field>\n      <input matInput [matDatepicker]=\"picker2\"  >\n      <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\n      <mat-datepicker #picker2></mat-datepicker>\n    </mat-form-field>\n  </mat-card-content>\n  \n  <mat-card-content>\n    <label> Test Completed</label>\n    <mat-form-field>\n      <input matInput [matDatepicker]=\"picker3\"  >\n      <mat-datepicker-toggle matSuffix [for]=\"picker3\"></mat-datepicker-toggle>\n      <mat-datepicker #picker3></mat-datepicker>\n    </mat-form-field>\n  </mat-card-content>\n  <br>\n  <hr>\n  <mat-card-content>\n    <label> PTGPT </label>\n    <mat-form-field>\n      <input matInput>\n       \n    </mat-form-field>\n  </mat-card-content>\n  <mat-card-content>\n    <label> PTGVLFI </label>\n    <mat-form-field>\n      <input matInput >\n      \n    </mat-form-field>\n  </mat-card-content>\n\n  <mat-card-content>\n    <label> IR </label>\n    <mat-form-field>\n      <input matInput > \n    </mat-form-field>\n  </mat-card-content>\n\n  <mat-card-content>\n    <label> ESRNO<br> (Baseline) </label>\n    <mat-form-field>\n      <input matInput > \n    </mat-form-field>\n  </mat-card-content>\n\n  <mat-card-content>\n    <label> ESR L<br> (Latency) </label>\n    <mat-form-field>\n      <input matInput > \n    </mat-form-field>\n  </mat-card-content>\n\n  <mat-card-content>\n    <label> Peak C  <br> (Amplitude) </label>\n    <mat-form-field>\n      <input matInput > \n    </mat-form-field>\n  </mat-card-content>\n\n  <mat-card-content>\n    <label> PTG Type  <br> (Enter\n      Type 1-5) </label>\n    <mat-form-field>\n      <input matInput > \n    </mat-form-field>\n  </mat-card-content>\n\n\n<mat-card-content>\n  <label> PTG CVD </label>\n  <mat-form-field>\n    <input matInput > \n  </mat-form-field>\n</mat-card-content>\n<mat-card-content>\n  <label> Stress I  <br> (Stress Index) </label>\n  <mat-form-field>\n    <input matInput > \n  </mat-form-field>\n</mat-card-content>\n<mat-card-content>\n  <label> RI </label>\n  <mat-form-field>\n    <input matInput > \n  </mat-form-field>\n</mat-card-content>\n\n\n<mat-card-content>\n  <label> AIPTG<br> (IPTG) </label>\n  <mat-form-field>\n    <input matInput > \n  </mat-form-field>\n</mat-card-content>\n\n<mat-card-content>\n  <label> CIs (CI) </label>\n  <mat-form-field>\n    <input matInput > \n  </mat-form-field>\n</mat-card-content>\n\n<mat-card-content>\n  <label> pNN50 </label>\n  <mat-form-field>\n    <input matInput > \n  </mat-form-field>\n</mat-card-content>\n\n\n<mat-card-content>\n  <label> RMSSD </label>\n  <mat-form-field>\n    <input matInput > \n  </mat-form-field>\n</mat-card-content>\n\n<mat-card-content>\n  <label> SD ba - </label>\n  <mat-form-field>\n    <input matInput > \n  </mat-form-field>\n</mat-card-content>\n\n<mat-card-content>\n  <label> SD da </label>\n  <mat-form-field>\n    <input matInput > \n  </mat-form-field>\n</mat-card-content>\n\n \n<mat-card-content>\n  <label>DPRS </label>\n  <mat-form-field>\n    <input matInput > \n  </mat-form-field>\n</mat-card-content>\n\n<mat-card-content>\n  <label>ValsR. </label>\n  <mat-form-field>\n    <input matInput > \n  </mat-form-field>\n</mat-card-content>\n\n<mat-card-content>\n  <label>BMI<br> Enter BMI Score \n    (I.E. 29.1)  </label>\n  <mat-form-field>\n    <input matInput > \n  </mat-form-field>\n</mat-card-content>\n\n<mat-card-content>\n  <label>Blood\n    Pressure<br> Systolic &\n    Diastolic\n    (120/80) </label>\n  <mat-form-field>\n    <input matInput > \n  </mat-form-field>\n</mat-card-content>\n</span>\n\n <span class=\"patient_diagnotes\">\n    <label>Patient Diagnoses & Notes:</label>\n    <mat-form-field class=\"example-full-width\" > \n        <textarea matInput placeholder=\"Leave a comment\"></textarea>\n      </mat-form-field>\n </span>\n <span class=\"submit_form\">\n    <button mat-flat-button (click)=\"ResetAddForm()\">Reset </button>\n    <button mat-flat-button type=\"submit\"> {{ buttonText }} </button>\n  </span>\n</mat-card>\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpServiceService } from '../../../../services/http-service.service';\nimport { DatePipe } from '@angular/common';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-user-add-edit',\n  templateUrl: './user-add-edit.component.html',\n  styleUrls: ['./user-add-edit.component.css']\n})\nexport class UserAddEditComponent implements OnInit {\n  public UserManagementAddEditForm: FormGroup;\n  date = new FormControl(new Date());\n  public ddmmyy: any;\n  serializedDate = new FormControl((new Date()).toISOString());\n  public usersData: any = [];\n  public states: any;\n  public allCities: any;\n  public cities: any;\n  public params_id: any;\n  public buttonText: any = \"Submit\";\n  public user_token: any;;\n\n  constructor(public fb: FormBuilder, public activeRoute: ActivatedRoute,\n    public router: Router, public httpService: HttpServiceService, private datePipe: DatePipe,\n    public cookie: CookieService) {\n    this.datePipe.transform(this.date.value, 'MM-dd-yyyy');\n    var dateformat = this.datePipe.transform(new Date(), \"MM-dd-yyyy\");\n    this.allStateCityData();\n    this.user_token = cookie.get('jwtToken');\n    this.params_id = this.activeRoute.snapshot.params._id;\n\n    this.UserManagementAddEditForm = this.fb.group({\n      firstname: ['', Validators.required],\n      lastname: ['', Validators.required],\n      email: [null, [Validators.required, Validators.email, Validators.maxLength(100)]],\n      phoneno: ['', Validators.required],\n      address: ['', Validators.required],\n      city: ['', Validators.required],\n      state: ['', Validators.required],\n      zip: ['', Validators.required],\n      date: [dateformat],\n      status: ['', Validators.required],\n    })\n\n  }\n\n  ngOnInit() {\n    if (this.params_id) {\n      this.buttonText = \"Update\";\n      this.getResolveData();\n    }\n  }\n  /* Get resolve data */\n  getResolveData() {\n    this.activeRoute.data.forEach((data) => {\n      this.usersData = data.UserData.res;\n      let userDetails: any;\n      userDetails = data.UserData.res;\n      this.UserManagementAddEditForm.controls['firstname'].patchValue(userDetails[0].firstname);\n      this.UserManagementAddEditForm.controls['lastname'].patchValue(userDetails[0].lastname);\n      this.UserManagementAddEditForm.controls['email'].patchValue(userDetails[0].email);\n      this.UserManagementAddEditForm.controls['phoneno'].patchValue(userDetails[0].phoneno);\n      this.UserManagementAddEditForm.controls['address'].patchValue(userDetails[0].address);\n      this.UserManagementAddEditForm.controls['city'].patchValue(userDetails[0].city);\n      this.UserManagementAddEditForm.controls['state'].patchValue(userDetails[0].state);\n      this.UserManagementAddEditForm.controls['zip'].patchValue(userDetails[0].zip);\n      this.UserManagementAddEditForm.controls['status'].patchValue(userDetails[0].status);\n    })\n  }\n  /**for validation purpose**/\n  inputUntouch(form: any, val: any) {\n\n    form.controls[val].markAsUntouched();\n  }\n  /**for validation purpose**/\n\n  /**resetting the form start here **/\n  ResetAddForm() {\n\n    this.UserManagementAddEditForm.reset();\n  }\n  /**resetting the form start here **/\n\n  /**for getting all states & cities function start here**/\n  allStateCityData() {\n    this.httpService.getSiteSettingData(\"./assets/data-set/state.json\").subscribe(response => {\n      this.states = response;\n      this.getResolveData();\n    });\n\n    this.httpService.getSiteSettingData(\"./assets/data-set/city.json\").subscribe(response => {\n      this.allCities = response;\n      this.getResolveData();\n    });\n  }\n  /**for getting all states & cities  function end here**/\n\n  getCity(event) {\n    var val = event;\n    this.cities = this.allCities[val];\n  }\n\n  UserManagementAddFormFormSubmit() {\n    let x: any;\n    for (x in this.UserManagementAddEditForm.controls) {\n      this.UserManagementAddEditForm.controls[x].markAsTouched();\n    }\n    if (this.UserManagementAddEditForm.valid) {\n      if (this.UserManagementAddEditForm.value.status)\n        this.UserManagementAddEditForm.value.status = parseInt(\"1\");\n      else\n        this.UserManagementAddEditForm.value.status = parseInt(\"0\");\n      var data: any;\n      if (this.params_id) {\n        data = {\n          \"source\": \"user_management\",\n          \"data\": {\n            id: this.params_id,\n            firstname: this.UserManagementAddEditForm.value.firstname,\n            lastname: this.UserManagementAddEditForm.value.lastname,\n            phoneno: this.UserManagementAddEditForm.value.phoneno,\n            email: this.UserManagementAddEditForm.value.email,\n            address: this.UserManagementAddEditForm.value.address,\n            city: this.UserManagementAddEditForm.value.city,\n            state: this.UserManagementAddEditForm.value.state,\n            zip: this.UserManagementAddEditForm.value.zip,\n            status: this.UserManagementAddEditForm.value.status\n          },\n          \"token\": this.user_token\n        };\n\n      } else {\n        data = {\n          \"source\": \"user_management\",\n          \"data\": this.UserManagementAddEditForm.value,\n          \"token\": this.user_token\n        }\n      }\n\n    }\n    this.httpService.httpViaPost(\"addorupdatedata\", data)\n      .subscribe(res => {\n        this.ResetAddForm();\n        setTimeout(() => {\n          this.router.navigateByUrl('/dashboard/tech');\n        }, 100);\n\n      }\n      )\n\n\n  }\n\n}\n","<span class=\"main_wrapper\">\n\n  <mat-card class=\"login_wrapper\">\n\n    <mat-card-content>\n      <div class=\"login_container\">\n        <span class=\"logo_section\">\n          <img src=\"assets/images/logo.png\">\n        </span>\n        <h2>FORGOTTEN PASSWORD</h2>\n\n        <p class=\"paragraph\">Please enter your valid email address and you will be sent a link to reset your password.\n          You must use the same email id you have registered with us. If you no longer have the same email address then\n          you must contact us directly with proof of your identity.</p>\n        <!-- <mat-form-field appearance=\"fill\">\n              <mat-label>Email Address</mat-label>\n            <input matInput   type=\"email\">\n          </mat-form-field>\n\n          <button mat-flat-button color=\"primary\" class=\"loginBtn\">Reset Password</button> -->\n\n        <lib-forget-password \n        [serverUrl]=\"serverUrl\"\n        [signUpRouteingUrl]=\"signUpRouteingUrl\" \n        [domainUrl]=\"domainUrl\"\n        [addEndpoint]=\"addEndpoint\" \n        [loginRouteingUrl]=\"loginRouteingUrl\" \n        [buttonName]=\"buttonName\"\n          > </lib-forget-password>\n        <!-- <span class=\"forget_wrapper\">\n            <a routerLink=\"/login\">Login</a>\n          </span> -->\n      </div>\n\n    </mat-card-content>\n\n  </mat-card>\n\n</span>","import { Component, OnInit } from '@angular/core';\nimport { CommonFunction } from '../../../class/common/common-function';\nimport { environment } from '../../../../environments/environment';\n\n@Component({\n  selector: 'app-forgetpassword',\n  templateUrl: './forgetpassword.component.html',\n  styleUrls: ['./forgetpassword.component.css']\n})\nexport class ForgetpasswordComponent implements OnInit {\n  // public formTitle : \"resetttt forrmm\";\n\n  public logo: any = '../../assets/favicon.ico';\n  // public signUpRouteingUrl: any = 'sign-up';\n  public serverUrl:any = environment.apiBaseUrl;\n  public addEndpoint: any = {\n    endpoint:'forgetpassword'\n  };\n\n  public loginRouteingUrl: any = {\n    // \"path\":\"login\",\n    \"path\":\"\",\n    \"buttonName\":\"login\",\n    \"customLink\":\"/login\",\n    \"customURl\":\"\"\n  };\n\n  public signUpRouteingUrl: any = {\n    \"path\":\"\",\n    \"customLink\":\"\",\n  };\n\n  public buttonName: any = 'Reset Password';\n\n  public domainUrl: any =  environment.siteBaseUrl + '/reset-password';\n\n  constructor(public commonFunction: CommonFunction) {\n\n    /* Set Meta Data */\n    this.commonFunction.setTitleMetaTags();\n  }\n\n  ngOnInit() {\n  }\n\n}\n","<span class=\"main_wrapper\">\n  <span class=\"img_wrapper\">\n    <mat-card class=\"login_wrapper\">\n\n      <mat-card-content>\n        <div class=\"login_container\">\n\n          <lib-login \n            [fromTitle]=\"fromTitle\"\n            [fullUrl]=\"fullUrl\"\n            [forgetRouteingUrl]=\"forgetRouteingUrl\"\n            [signUpRouteingUrl]='signUpRouteingUrl'\n            [routerStatus]=\"routerStatus\" \n            [endpoint]=\"endpoint\" \n            [logo]=\"logo\">\n          </lib-login>\n        </div>\n\n      </mat-card-content>\n\n    </mat-card>\n  </span>\n</span>\n","import { Component, OnInit } from '@angular/core';\nimport { CommonFunction } from '../../../class/common/common-function';\nimport { CookieService } from 'ngx-cookie-service';\nimport { environment } from '../../../../environments/environment';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  public logo: any = './assets/images/logo.png';\n  public fromTitle: any = \"Login Here\";    // This is a From Title\n  public fullUrl: any = environment.apiBaseUrl;  // server url\n  public endpoint: any = \"login\";\n  public buttonName: any = 'Login Button';\n\n  public signUpRouteingUrl: any = {\n    \"path\": \"\",\n    // \"buttonName\": \"\",\n    \"customLink\": \"\",\n    // \"customURl\": \"\"\n  };\n  public forgetRouteingUrl: any = {\n    \"path\": \"\",\n    \"buttonName\": \"Forget Password\",\n    \"customLink\": \"/forget-password\",\n  };\n\n  public routerStatus: any;\n\n  constructor(public cookies: CookieService, public commonFunction: CommonFunction) {\n\n    /* Set Meta Data */\n    this.commonFunction.setTitleMetaTags();\n\n    this.routerStatus = {           // this is use for if login succcess then navigate which page\n      \"data\": [\n        {\n          \"type\": \"admin\",\n          \"routerNav\": \"admin/dashboard\"\n        },\n        {\n          \"type\": \"doctor\",\n          \"routerNav\": \"doctor/dashboard\"\n        },\n        {\n          \"type\": \"tech\",\n          \"routerNav\": \"tech/dashboard\"\n        },\n        {\n          \"type\": \"biller\",\n          \"routerNav\": \"biller/dashboard\"\n        },\n        {\n          \"type\": \"doctor_office\",\n          \"routerNav\": \"doctor-office/dashboard\"\n        },\n      ]\n    }\n  }\n\n  ngOnInit() {\n  }\n\n}\n","<div style=\"display: flex; justify-content: center; align-items: center; height: 100%;\">\n    <div>Please wait....</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CommonFunction } from '../../../class/common/common-function';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n  \n  status: boolean = true;\n  public user_data: any = {};\n  public loader: boolean = true;\n  public user_cookie:any;\n\n  constructor(public cookies: CookieService, public router: Router, public commonFunction: CommonFunction) { \n    this.cookies.delete('jwtToken');\n    this.cookies.delete('user_details');\n    this.cookies.deleteAll();\n    this.cookies.deleteAll('/');  \n  }\n\n  ngOnInit() {\n    this.cookies.delete('jwtToken');\n    this.cookies.delete('user_details');\n    this.cookies.deleteAll();\n    this.cookies.deleteAll('/');  \n    setTimeout(() => {\n      this.router.navigateByUrl('login');\n      window.location.href='/';\n    }, 1500);\n  }\n  \n}\n\n","<span class=\"main_wrapper\">\n  <span class=\"img_wrapper\">\n    <mat-card class=\"login_wrapper\">\n\n      <mat-card-content>\n        <div class=\"login_container\">\n\n          <lib-reset-password \n            [fromTitleName]=\"fromTitleName\" \n            [serverUrl]=\"serverUrl\" \n            [addEndpoint]=\"addEndpoint\"\n            [logo]=\"logo\">\n          </lib-reset-password>\n        </div>\n      </mat-card-content>\n\n    </mat-card>\n  </span>\n</span>","import { Component, OnInit } from '@angular/core';\nimport { CommonFunction } from '../../../class/common/common-function';\nimport { environment } from '../../../../environments/environment';\n\n@Component({\n  selector: 'app-resetpassword',\n  templateUrl: './resetpassword.component.html',\n  styleUrls: ['./resetpassword.component.css']\n})\n\nexport class ResetpasswordComponent implements OnInit {\n\n  public fromTitleName: any = 'Change Your Password Here';\n  public logo: any = './assets/images/logo.png';\n  public serverUrl: any = environment.apiBaseUrl;\n  public addEndpoint: any = {\n    endpoint:'resetpassword',\n    source:'users'\n  };\n\n  constructor(public commonFunction: CommonFunction) {\n\n    /* Set Meta Data */\n    this.commonFunction.setTitleMetaTags();\n  }\n\n  ngOnInit() {\n  }\n\n}\n","<app-biller-header></app-biller-header>\n\n<mat-card class=\"admin_wrapper biller_Dashboard\">\n\n  <!-- <mat-card-content class=\"content_wrapper\">\n  <mat-card-content class=\"itemsection three\">\n    <span class=\"counteer\"> {{ allResolveData.totalDownloadCount + this.allResolveData.totalNotDownloadCount }} </span>\n    <p>All Data</p>\n    <button mat-flat-button (click)=\"viewReportData();\">View Details</button>\n  </mat-card-content>\n\n  <mat-card-content class=\"itemsection one\">\n    <span class=\"counteer\"> {{ allResolveData.totalDownloadCount }} </span>\n    <p>Total Downloaded</p>\n    <button mat-flat-button (click)=\"viewReportData('downloaded');\">View Details</button>\n  </mat-card-content>\n\n  <mat-card-content class=\"itemsection two\">\n    <span class=\"counteer\"> {{ allResolveData.totalNotDownloadCount }} </span>\n    <p>Not Downloaded</p>\n    <button mat-flat-button (click)=\"viewReportData('not_downloaded');\">View Details</button>\n  </mat-card-content>\n\n</mat-card-content> -->\n  <!-- new stra -->\n  <mat-card-content class=\"admin_superbillsection\">\n    <!-- <h1>Physician Report Process Status</h1> -->\n    <mat-card-content class=\"biller_wrapper\">\n      <mat-card-content class=\"super_bill_item sp_one\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon1.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>All Data</p>\n          <h2>{{ allResolveData.totalDownloadCount + this.allResolveData.totalNotDownloadCount }} </h2>\n          <button mat-flat-button (click)=\"viewReportData();\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item sp_two\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon2.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p> Total Download\n          </p>\n          <h2> {{ allResolveData.totalDownloadCount }} </h2>\n          <button mat-flat-button (click)=\"viewReportData('Total Downloaded');\">view all</button>\n        </span>\n      </mat-card-content>\n      <mat-card-content class=\"super_bill_item sp_three\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon2.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p> Pending Downloads</p>\n          <h2> {{ allResolveData.totalNotDownloadCount }} </h2>\n          <button mat-flat-button (click)=\"viewReportData('Not Downloaded');\">view all</button>\n        </span>\n      </mat-card-content>\n\n    </mat-card-content>\n  </mat-card-content>\n\n  <!-- patainet report section -->\n  <mat-card-content class=\"patient_report_section\">\n    <mat-card-content class=\"patient_top_search\">\n      <h1> {{ htmlText.tableHeaderText }}</h1>\n      <span class=\"search_bar\">\n        <span class=\"form_wrapper\">\n          <mat-form-field appearance=\"outline\">\n            <input matInput [matDatepicker]=\"picker\" (focus)=\"picker.open()\" placeholder=\"Search By Date\">\n            <!-- <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle> -->\n            <mat-datepicker #picker></mat-datepicker>\n          </mat-form-field>\n          <button><i class=\"material-icons\"> search </i></button>\n        </span>\n\n        <span class=\"form_wrapper\">\n          <mat-form-field appearance=\"outline\">\n            <input matInput placeholder=\"Search By Status\">\n          </mat-form-field>\n          <button><i class=\"material-icons\"> search </i></button>\n        </span>\n\n        <span class=\"form_wrapper\">\n          <mat-form-field appearance=\"outline\">\n            <input matInput placeholder=\"Search By Patient\">\n          </mat-form-field>\n          <button><i class=\"material-icons\"> search </i></button>\n        </span>\n      </span>\n    </mat-card-content>\n\n    <div class=\"mat-elevation-z8\">\n      <!-- Default Biller table  -->\n      <table class=\"adminTables table_wrapper \" mat-table [dataSource]=\"dataSource\" matSort>\n\n        <!-- Patient Column -->\n        <ng-container matColumnDef=\"Patient Name\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Patient Name </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.patientName}} </td>\n        </ng-container>\n\n        <!-- Bill Sent Date Name Column -->\n        <ng-container matColumnDef=\"Tech Name\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Tech Name</th>\n          <td mat-cell *matCellDef=\"let element\"> {{ element.techname }} </td>\n        </ng-container>\n\n        <!-- Doctor Name Column -->\n        <ng-container matColumnDef=\"Doctor Name\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Doctor Name </th>\n          <td mat-cell *matCellDef=\"let element\" innerHTML=\"{{ element.doctorname }}\"> </td>\n        </ng-container>\n\n        <!-- Bill Sent Date Name Column -->\n        <ng-container matColumnDef=\"Bill Sent Date\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Bill Sent Date </th>\n          <td mat-cell *matCellDef=\"let element\"> {{ element.billSentDate }} </td>\n        </ng-container>\n\n        <!-- Bill Generation Date Name Column -->\n        <ng-container matColumnDef=\"Bill Generation Date\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Bill Generation Date </th>\n          <td mat-cell *matCellDef=\"let element\"> {{ element.billGenerationDate }} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"report_type\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Record Type</th>\n          <td mat-cell *matCellDef=\"let element\"> {{ element.report_type }} </td>\n        </ng-container>\n\n        <!-- Status Name Column -->\n        <ng-container matColumnDef=\"Status\">\n          <th mat-header-cell *matHeaderCellDef>Status</th>\n          <td mat-cell *matCellDef=\"let element\"> {{ element.status_text }} </td>\n        </ng-container>\n\n        <!-- Action Column -->\n        <ng-container matColumnDef=\"Action\">\n          <th mat-header-cell *matHeaderCellDef>Action</th>\n          <td mat-cell *matCellDef=\"let element\"> <span>\n              <button mat-button class=\"viewButton\"> View</button>\n              <button mat-button class=\"editButton downloadBtn\" (click)=\"downloadReport(element);\"> Download\n              </button>\n            </span></td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      </table>\n\n      <mat-paginator [pageSizeOptions]=\"[25, 50, 100, 200, 500]\" showFirstLastButtons></mat-paginator>\n    </div>\n\n  </mat-card-content>\n</mat-card>\n<!-- Biller Footer -->\n<app-admin-footer></app-admin-footer>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { CommonFunction } from '../../../class/common/common-function';\nimport { Router, ActivatedRoute ,ActivatedRouteSnapshot} from '@angular/router';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource, MatSort } from '@angular/material';\nimport { CookieService } from 'ngx-cookie-service';\nimport { HttpServiceService } from '../../../services/http-service.service';\nimport { DeviceDetectorService } from 'ngx-device-detector';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-biller-dashboard',\n  templateUrl: './biller-dashboard.component.html',\n  styleUrls: ['./biller-dashboard.component.css']\n})\n\nexport class BillerDashboardComponent implements OnInit {\n\n  public htmlText: any = {\n    tableHeaderText: \"Patient Reports\",\n    ip: ''\n  };\n  public loginUserData: any = {};\n  public allResolveData: any;\n  public dialogRef: any;\n\n  displayedColumns: string[] = ['Patient Name', 'Doctor Name', 'Tech Name', 'Bill Sent Date', 'Bill Generation Date', 'Status','report_type', 'Action'];\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  /* Initializing the datasource to null */\n  dataSource = null;\n\n  constructor(public http: HttpClient, public commonFunction: CommonFunction, public activatedRoute: ActivatedRoute, \n    public cookieService: CookieService, public httpService: HttpServiceService, public deviceService: DeviceDetectorService,\n    public matSnackBar: MatSnackBar) {\n    /* Get and set login User Data */\n    this.loginUserData[\"user_details\"] = JSON.parse(this.cookieService.get('user_details'));\n    this.loginUserData[\"jwtToken\"] = this.cookieService.get('jwtToken');\n\n    /* Get IP Address */\n    this.httpService.httpViaGetExt(\"http://api.ipify.org/?format=json\", {}).subscribe(response => {\n      this.htmlText.ip = response.ip;\n    });\n  }\n\n  ngOnInit() {\n    this.activatedRoute.data.subscribe(resolveData => {\n      this.allResolveData = resolveData.billerData.data;\n      \n      /* Fetching the data into table */\n      this.dataSource = new MatTableDataSource(this.allResolveData.reportData);\n      /* Adding the paginator options */\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    });\n  }\n\n  viewReportData(flug: string = \"Patient Reports\") {\n    this.htmlText.tableHeaderText = flug;\n    var data: any;\n    switch(flug) {\n      case 'Total Downloaded':\n        data = {\n          \"source\": \"Patient-Record-Report_view\",\n          \"token\": this.loginUserData.jwtToken,\n          \"condition\": {\n            \"biller_id_object\": this.loginUserData.user_details._id,\n            \"download_count\": { $exists: true }\n          }\n        }\n        break;\n      case 'Not Downloaded':\n        data = {\n          \"source\": \"Patient-Record-Report_view\",\n          \"token\": this.loginUserData.jwtToken,\n          \"condition\": {\n            \"biller_id_object\": this.loginUserData.user_details._id,\n            \"download_count\": { $exists: false }\n          }\n        }\n        break;\n      default:\n        data = {\n          \"source\": \"Patient-Record-Report_view\",\n          \"token\": this.loginUserData.jwtToken,\n          \"condition\": {\n            \"biller_id_object\": this.loginUserData.user_details._id\n          }\n        }\n        break;\n    }\n\n    this.httpService.httpViaPost('datalist', data).subscribe((response) => {\n      /* Fetching the data into table */\n      this.dataSource = new MatTableDataSource(response.res);\n      /* Adding the paginator options */\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    });\n  }\n\n  downloadReport(report: any) {\n    if(typeof(report.download_count) == \"undefined\") {\n      report.download_count = 1;\n    } else {\n      report.download_count = report.download_count + 1;\n    }\n\n    /* Collect User Information for Download record */\n    let deviceInfo: any = this.deviceService.getDeviceInfo();\n    deviceInfo[\"isMobile\"] = this.deviceService.isMobile();\n    deviceInfo[\"isTablet\"] = this.deviceService.isTablet();\n    deviceInfo[\"isDesktop\"] = this.deviceService.isDesktop();\n    \n    /* Set downloader information */\n    var userDetails = {\n      id: this.loginUserData.user_details._id,\n      type: this.loginUserData.user_details.type\n    };\n\n    let postData: any = {\n      \"source\": \"report_download\",\n      \"data\": {\n        \"report_id\": report._id,\n        \"biller_id\": this.loginUserData.user_details._id,\n        \"tech_id\": report.tech_id,\n        \"doctor_id\": report.doctor_id,\n        \"ip\": this.htmlText.ip,\n        \"download_attempt\": 1,\n        \"downloader_information\": userDetails,\n        \"device_information\": deviceInfo\n      },\n      \"sourceobj\": [\"report_id\", \"biller_id\", \"tech_id\", \"doctor_id\"],\n      \"download_count\": report.download_count,\n      \"token\": this.loginUserData.jwtToken\n    };\n\n    this.httpService.httpViaPost(\"addorupdatedata\", postData).subscribe(response => {\n      if(response.status == 'success') {\n        this.matSnackBar.open(\"Start downloading.\", \"Ok\", {\n          duration: 3000\n        });\n        window.open(report.file_path, \"_blank\");\n\n        this.refreshDashboard();\n      } else {\n        this.matSnackBar.open(\"Some error occord. Please try again.\", \"Ok\", {\n          duration: 3000\n        });\n      }\n    });\n  }\n\n  refreshDashboard() {\n    let postData: any = {\n      source: \"Patient-Record-Report_view\",\n      condition: {\n        biller_id: this.loginUserData.user_details._id\n      }\n    };\n    this.httpService.httpViaPost(\"biller-dashboard\", postData).subscribe(response => {\n      if(response.status == 'success') {\n        this.allResolveData = response.data;\n        this.viewReportData(this.htmlText.tableHeaderText);\n      } else {\n        this.matSnackBar.open(\"Please wait...\", \"\", {\n          duration: 1000\n        });\n\n        setTimeout(() => {\n          this.refreshDashboard();\n        }, 1000);\n      }\n    });\n  }\n\n}\n","<mat-toolbar class=\"techdashboard_header\">\n  <mat-toolbar-row>\n    <span class=\"logo_wrapper\" [routerLink]=\"[ '/biller/dashboard' ]\">\n      <img src=\"../../../assets/images/logo.png\">\n    </span>\n\n\n    <mat-card-content class=\"quotation\">\n      <p>ADVANCED ANS TECHNOLOGY – BETTER PATIENT CARE – INCREASE PRACTICE REVENUE</p>\n    </mat-card-content>\n\n\n    <mat-card-content class=\"profile_section\">\n      <mat-menu #appMenu=\"matMenu\">\n        <button mat-menu-item [routerLink]=\"['/biller/account-settings']\">\n          <mat-icon>account_circle</mat-icon> Account Settings\n        </button>\n        <button mat-menu-item [routerLink]=\"['/biller/account-settings/change-password']\">\n          <mat-icon>vpn_key</mat-icon> Change Password\n        </button>\n        <button mat-menu-item (click)=\"logout()\">\n          <mat-icon>power_settings_new</mat-icon> Logout\n        </button>\n      </mat-menu>\n      <span class=\"username\">{{user_data.firstname}} {{user_data.lastname}}</span>\n      <button mat-icon-button [matMenuTriggerFor]=\"appMenu\">\n        <span class=\"user_profile\">\n          <mat-icon>account_circle</mat-icon>\n          <i class=\"material-icons\">\n            keyboard_arrow_down\n          </i>\n        </span>\n      </button>\n\n    </mat-card-content>\n\n\n  </mat-toolbar-row>\n</mat-toolbar>\n<!-- end header -->","import { Component, OnInit } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\n\n@Component({\n  selector: 'app-biller-header',\n  templateUrl: './biller-header.component.html',\n  styleUrls: ['./biller-header.component.css']\n})\n\nexport class BillerHeaderComponent implements OnInit {\n\n  public user_data: any = {};\n\n  public loader: boolean = true;\n  public user_cookie:any;\n  constructor(public cookies: CookieService, public router: Router) {\n    let allData: any = {};\n    allData = cookies.getAll()\n    this.user_data = JSON.parse(allData.user_details);\n    this.user_cookie = cookies.get('jwtToken');\n   }\n\n  ngOnInit() {\n  }\n  \n  /**logout function start here**/\n  logout() {\n    this.cookies.delete('jwtToken');\n    this.cookies.delete('user_details');\n    this.cookies.deleteAll();\n    this.router.navigateByUrl('logout');\n  }\n  /**logout function end here**/\n\n}\n","<mat-toolbar class=\"techdashboard_header\">\n  <mat-toolbar-row>\n    <span class=\"logo_wrapper\" [routerLink]=\"[ '/biller/dashboard' ]\">\n      <img src=\"../../../assets/images/logo.png\">\n    </span>\n\n    <mat-card-content class=\"quotation\">\n      <p>ADVANCED ANS TECHNOLOGY – BETTER PATIENT CARE – INCREASE PRACTICE REVENUE</p>\n    </mat-card-content>\n    <mat-card-content class=\"profile\">\n\n    </mat-card-content>\n  </mat-toolbar-row>\n</mat-toolbar>\n<!-- end header -->\n<mat-card-content class=\"reset_wrapper\">\n  <mat-card-content class=\"card_wrapper\">\n    <mat-card-content class=\"icon\">\n      <i class=\"material-icons\">cloud_download</i>\n    </mat-card-content>\n    <mat-card-title *ngIf=\"!htmlText.downloadFlug\">{{ htmlText.hraderText }}</mat-card-title>\n    <mat-card-title *ngIf=\"htmlText.downloadFlug\" class=\"success_message\">{{ htmlText.hraderText }}</mat-card-title>\n\n    <mat-form-field *ngIf=\"!htmlText.downloadFlug\" class=\"example-full-width\" appearance=\"fill\">\n      <input matInput placeholder=\"Enter password\" type=\"password\" value=\"\" [(ngModel)]=\"htmlText.password\">\n    </mat-form-field>\n\n    <span class=\"captcha_wrapper\" *ngIf=\"htmlText.passwordAttemptsCount >= 3 && !htmlText.downloadFlug\">\n      <span class=\"botText\">{{ htmlText.notBotText }} </span>\n      <button mat-button class=\"refreshButton\" (click)=\"changeChapcha(6);\"><i class=\"material-icons\"> autorenew </i></button>\n    </span>\n    \n    <mat-form-field *ngIf=\"htmlText.passwordAttemptsCount >= 3 && !htmlText.downloadFlug\" class=\"example-full-width\" appearance=\"fill\">\n      <input matInput placeholder=\"Enter text\" type=\"text\" value=\"\" [(ngModel)]=\"htmlText.notBotInput\">\n    </mat-form-field>\n\n    <button *ngIf=\"!htmlText.downloadFlug\" mat-raised-button class=\"download_button\" (click)=\"downloadPDF();\">Download</button>\n\n    <!-- <p class=\"error_message\">Error! Try Again</p> -->\n    \n\n    <button *ngIf=\"htmlText.downloadFlug\" routerLink=\"/login\" mat-raised-button class=\"download_button\">Home</button>\n  </mat-card-content>\n</mat-card-content>\n<app-admin-footer></app-admin-footer>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { HttpServiceService } from '../../../services/http-service.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from \"@angular/material\";\nimport { DialogBoxComponent } from '../../common/dialog-box/dialog-box.component';\nimport { DeviceDetectorService } from 'ngx-device-detector';\nimport { environment } from '../../../../environments/environment';\nimport { CommonFunction } from '../../../class/common/common-function';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-download-superbiller',\n  templateUrl: './download-superbiller.component.html',\n  styleUrls: ['./download-superbiller.component.css']\n})\nexport class DownloadSuperbillerComponent implements OnInit {\n\n  public htmlText: any = {\n    hraderText: 'Enter Password to Download the Report',\n    notBotText: '',\n    notBotInput: '',\n    password: '',\n    passwordAttemptsCount: 0,\n    ip: '',\n    tempToken: '',\n    downloadFlug: false\n  };\n\n  public dialogRef: any;\n  public reportData: any = [];\n\n  constructor(private router: Router, public cookieService: CookieService, private http: HttpServiceService, \n    public activatedRoute: ActivatedRoute, public dialog: MatDialog, public commonFunction: CommonFunction, \n    public deviceService: DeviceDetectorService, public matSnackBar: MatSnackBar) {\n\n    let loginCHeck: any = this.cookieService.getAll();\n    if(Object.keys(loginCHeck).length > 0) {\n      let userDetails = JSON.parse(loginCHeck.user_details);\n    }\n\n    /* Check Route ID */\n    if (typeof(this.activatedRoute.snapshot.params._id) != \"undefined\") {\n      this.getData(this.activatedRoute.snapshot.params._id);\n    } else {\n      this.router.navigateByUrl('/login');\n    }\n    \n    /* Check Password Attempts Count */\n    let check: boolean = cookieService.check('passwordAttemptsCount');\n    if(check == true) {\n      this.htmlText.notBotText = this.commonFunction.randomNumber(6);\n      this.htmlText.passwordAttemptsCount = this.cookieService.get('passwordAttemptsCount');\n    }\n\n    /* Get IP Address */\n    this.http.httpViaGetExt(\"http://api.ipify.org/?format=json\", {}).subscribe(response => {\n      this.htmlText.ip = response.ip;\n    });\n\n    /* Get Temp Token */\n    this.http.httpViaGet(\"gettemptoken\", {}).subscribe(response => {\n      this.htmlText.tempToken = response.token;\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  downloadPDF() {\n    if((this.htmlText.password == this.reportData.download_password && this.reportData.passwordAttemptsCount <= 3) ||\n    (this.htmlText.password == this.reportData.download_password && this.htmlText.notBotText == this.htmlText.notBotInput)) {\n      this.htmlText.passwordAttemptsCount++;\n\n      /* Right password */\n      this.cookieService.delete('passwordAttemptsCount');\n      this.htmlText.password = \"\";\n      this.htmlText.notBotText = \"\";\n      this.htmlText.notBotInput = \"\";\n\n      /* Collect User Information for Download record */\n      let deviceInfo: any = this.deviceService.getDeviceInfo();\n      deviceInfo[\"isMobile\"] = this.deviceService.isMobile();\n      deviceInfo[\"isTablet\"] = this.deviceService.isTablet();\n      deviceInfo[\"isDesktop\"] = this.deviceService.isDesktop();\n      \n      /* Set downloader information */\n      var userDetails: any = {};\n      let loginCheck: any = this.cookieService.getAll();\n      if(Object.keys(loginCheck).length > 0) {\n        let user_details = JSON.parse(loginCheck.user_details);\n        userDetails[\"id\"] = user_details._id;\n        userDetails[\"type\"] = user_details.type;\n      } else {\n        userDetails[\"id\"] = this.reportData.biller_id;\n        userDetails[\"type\"] = \"biller\";\n      }\n\n      if(typeof(this.reportData.download_count) == \"undefined\") {\n        this.reportData.download_count = 1;\n      } else {\n        this.reportData.download_count = this.reportData.download_count + 1;\n      }\n\n      let postData: any = {\n        \"source\": \"report_download\",\n        \"data\": {\n          \"report_id\": this.activatedRoute.snapshot.params._id,\n          \"biller_id\": this.reportData.biller_id,\n          \"tech_id\": this.reportData.tech_id,\n          \"doctor_id\": this.reportData.doctor_id,\n          \"ip\": this.htmlText.ip,\n          \"download_attempt\": this.htmlText.passwordAttemptsCount,\n          \"downloader_information\": userDetails,\n          \"device_information\": deviceInfo\n        },\n        \"download_count\": this.reportData.download_count,\n        \"sourceobj\": [\"report_id\", \"biller_id\", \"tech_id\", \"doctor_id\"],\n        \"token\": this.htmlText.tempToken\n      };\n\n      this.http.httpViaPost(\"addorupdatedata\", postData).subscribe(response => {\n        if(response.status == 'success') {\n          this.htmlText.downloadFlug = true;\n          this.htmlText.hraderText = \"Thank you for downloading.\";\n          window.open(this.reportData.file_path);\n        } else {\n          this.matSnackBar.open(\"Some error occord. Please try again.\", \"Ok\", {\n            duration: 3000\n          });\n        }\n      });\n    } else {\n      /* Wrong Password */\n      if(this.htmlText.password == '' || this.htmlText.password != this.reportData.download_password) {\n        this.matSnackBar.open(\"Password is not valid.\", \"Ok\", {\n          duration: 3000\n        });\n      } else {\n        if((this.htmlText.notBotInput == '' || this.htmlText.notBotText != this.htmlText.notBotInput) && \n        this.htmlText.passwordAttemptsCount >= 3) {\n          this.matSnackBar.open(\"Chapcha is not valid.\", \"Ok\", {\n            duration: 3000\n          });\n        }\n      }\n\n      /* Make field numm */\n      this.htmlText.password = \"\";\n      this.htmlText.notBotInput = \"\";\n      this.htmlText.passwordAttemptsCount++;\n      this.cookieService.set('passwordAttemptsCount', this.htmlText.passwordAttemptsCount);\n\n      /* Create New Chapcha */\n      if(this.htmlText.passwordAttemptsCount >= 3) {\n        this.htmlText.notBotText = this.commonFunction.randomNumber(6);\n      }\n      return false;\n    }\n  }\n \n  /* Get Report Data */\n  getData(reportID) {\n    var data = {\n      \"source\": \"patient_management\",\n      \"condition\": {\n        \"_id\": reportID\n      }\n    }\n\n    this.http.httpViaPost(\"datalistwithouttoken\", data).subscribe(response => {\n      if(response.res.length > 0) {\n        this.reportData = response.res[0];\n      } else {\n        this.router.navigateByUrl('/login');\n      }\n    });\n  }\n\n  changeChapcha(length) {\n    this.htmlText.notBotText = this.commonFunction.randomNumber(length);\n    this.htmlText.notBotInput = \"\";\n  }\n\n}\n","<!-- Header Start -->\n<app-admin-header *ngIf=\"headerFlag == 'admin'\"></app-admin-header>\n<app-biller-header *ngIf=\"headerFlag == 'biller'\"></app-biller-header>\n<app-tech-header *ngIf=\"headerFlag == 'tech'\"></app-tech-header>\n<app-doctor-header *ngIf=\"headerFlag == 'doctor'\"></app-doctor-header>\n<!-- Header End -->\n<mat-card class=\"admin_wrapper\">\n  <mat-progress-bar *ngIf=\"loader\" mode=\"indeterminate\"></mat-progress-bar>\n\n  <mat-card-content class=\"title_wrapper\">\n    Account Setting\n  </mat-card-content>\n\n\n  <span class=\"add_header\" *ngIf=\"cookiesData.type == 'tech'\">\n    <span class=\"bradcrumb\"><a [routerLink]=\"['/tech/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Account Setting</span>\n  </span>\n  <span class=\"add_header\" *ngIf=\"cookiesData.type == 'admin'\">\n    <span class=\"bradcrumb\"><a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Account Setting</span>\n  </span>\n  <span class=\"add_header\" *ngIf=\"cookiesData.type == 'biller'\">\n    <span class=\"bradcrumb\"><a [routerLink]=\"['/biller/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Account Setting</span>\n  </span>\n  <span class=\"add_header\" *ngIf=\"cookiesData.type == 'doctor'\">\n    <span class=\"bradcrumb\"><a [routerLink]=\"['/biller/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Account Setting</span>\n  </span>\n  <!-- End header with add button -->\n\n  <mat-card class=\"add_form\">\n    <h2 class=\"t_head\">Account Information</h2>\n    <mat-card-content class=\"form_wrapper\">\n      <form class=\"example-form\" autocomplete=\"off\" name=\"AccountSettingsForm\" [formGroup]=\"AccountSettingsForm\"\n        (ngSubmit)=\"AccountSettingsFormSubmit()\">\n\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Enter First Name</mat-label>\n          <input matInput placeholder=\"First Name\" [formControl]=\"AccountSettingsForm.controls['firstname']\"\n            (blur)=\"inputUntouch(AccountSettingsForm,'firstname')\">\n          <mat-error *ngIf=\"AccountSettingsForm.controls['firstname'].touched && !AccountSettingsForm.controls['firstname'].valid\n           && AccountSettingsForm.controls['firstname'].errors.required\">\n            First Name field can not be blank</mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Enter Last Name</mat-label>\n          <input matInput placeholder=\"Last Name\" [formControl]=\"AccountSettingsForm.controls['lastname']\"\n            (blur)=\"inputUntouch(AccountSettingsForm,'lastname')\">\n          <mat-error *ngIf=\"AccountSettingsForm.controls['lastname'].touched && !AccountSettingsForm.controls['lastname'].valid\n           && AccountSettingsForm.controls['lastname'].errors.required\">\n            Last Name field can not be blank</mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Email Address</mat-label>\n          <input matInput placeholder=\"Email Address\" [disabled]=\"true\" value=\"{{ cookiesData.email }}\" />\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Phone </mat-label>\n          <input type=\"number\" matInput placeholder=\"Phone\" [formControl]=\"AccountSettingsForm.controls['phoneno']\"\n            (blur)=\"inputUntouch(AccountSettingsForm,'phoneno')\">\n          <mat-error *ngIf=\"AccountSettingsForm.controls['phoneno'].touched && !AccountSettingsForm.controls['phoneno'].valid\n            && AccountSettingsForm.controls['phoneno'].errors.required\">\n            Phone Number field can not be blank</mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Date</mat-label>\n          <input [value]=\"date.value\" matInput [matDatepicker]=\"myPicker\" placeholder=\"date\">\n          <mat-datepicker-toggle matSuffix [for]=\"myPicker\" disabled></mat-datepicker-toggle>\n          <mat-datepicker #myPicker></mat-datepicker>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Zip</mat-label>\n          <input type=\"number\" matInput placeholder=\"ZIP\" [formControl]=\"AccountSettingsForm.controls['zip']\"\n            (blur)=\"inputUntouch(AccountSettingsForm,'zip')\">\n          <mat-error *ngIf=\"AccountSettingsForm.controls['zip'].touched && !AccountSettingsForm.controls['zip'].valid\n          && AccountSettingsForm.controls['zip'].errors.required\">\n            Zip field can not be blank. </mat-error>\n        </mat-form-field>\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Address</mat-label>\n          <input matInput placeholder=\"Address\" [formControl]=\"AccountSettingsForm.controls['address']\"\n            (blur)=\"inputUntouch(AccountSettingsForm,'address')\" />\n          <mat-error *ngIf=\"AccountSettingsForm.controls['address'].touched && !AccountSettingsForm.controls['address'].valid\n            && AccountSettingsForm.controls['address'].errors.required\">\n            Address field can not be blank</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"parent_cat\" appearance=\"fill\">\n          <mat-label>State</mat-label>\n          <mat-select formControlName=\"state\" (selectionChange)=\"getCity($event.value);\">\n            <mat-option [value]=0>Select a category</mat-option>\n            <mat-option *ngFor=\"let state of states;\" value=\"{{ state.name }}\">{{ state.name }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field class=\"parent_cat\" appearance=\"fill\">\n          <mat-label>City</mat-label>\n          <mat-select formControlName=\"city\">\n            <mat-option value=0>Select a category</mat-option>\n            <mat-option *ngFor=\"let city of cities;\" value=\"{{ city }}\">{{ city }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <span class=\"submit_form\">\n          <button mat-flat-button type=\"button\" (click)=\"CancelRedirectToDashboard()\"> Cancel </button>\n          <button mat-flat-button type=\"submit\" [disabled]=\"!AccountSettingsForm.valid\"> Update </button>\n        </span>\n      </form>\n    </mat-card-content>\n  </mat-card>\n</mat-card>\n\n<app-admin-footer></app-admin-footer>","import { Component, OnInit ,ViewChild} from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl ,FormGroupDirective} from '@angular/forms';\nimport { DatePipe } from '@angular/common';\nimport { HttpServiceService } from '../../../services/http-service.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material';\nimport { CommonFunction } from '../../../class/common/common-function';\n\n@Component({\n  selector: 'app-account-settings',\n  templateUrl: './account-settings.component.html',\n  styleUrls: ['./account-settings.component.css']\n})\n\nexport class AccountSettingsComponent implements OnInit {\n  @ViewChild(FormGroupDirective,{static: false}) formDirective: FormGroupDirective;\n\n  date = new FormControl(new Date());\n  public ddmmyy: any;\n  serializedDate = new FormControl((new Date()).toISOString());\n  public AccountSettingsForm: FormGroup;\n  public user_token: any;\n  public params_id: any;\n  public message: any = \"Updated Successfully\";\n  public states: any;\n  public allCities: any;\n  public cities: any;\n  public cookiesData: any;\n  public cookies_id: any;\n  public loader: any = false;\n  public headerFlag: string = null;\n\n  constructor(public fb: FormBuilder, private datePipe: DatePipe,\n    public httpService: HttpServiceService, public cookie: CookieService, public router: Router, public snackBar: MatSnackBar, public activeRoute: ActivatedRoute, public commonFunction: CommonFunction) {\n\n    /* Set header */\n    this.headerFlag = this.activeRoute.snapshot.url[0].path;\n\n    this.user_token = cookie.get('jwtToken');\n    let allcookies: any;\n    allcookies = cookie.getAll();\n    \n    this.cookiesData = JSON.parse(allcookies.user_details);\n    console.log(\"souresjhgfgfd\",this.cookiesData.type);\n    this.cookies_id = this.cookiesData._id;\n\n    /* Set Meta Data */\n    this.commonFunction.setTitleMetaTags();\n\n    this.allStateCityData();\n\n    this.datePipe.transform(this.date.value, 'MM-dd-yyyy');\n\n    var dateformat = this.datePipe.transform(new Date(), \"MM-dd-yyyy\");\n    this.AccountSettingsForm = fb.group({\n      firstname: ['', Validators.required],\n      lastname: ['', Validators.required],\n      phoneno: ['', Validators.required],\n      address: ['', Validators.required],\n      zip: ['', Validators.required],\n      city: ['', Validators.required],\n      state: ['', Validators.required],\n      date: [dateformat]\n    })\n  }\n\n  ngOnInit() {\n    this.SetValueForm();\n  }\n  /**for validation purpose**/\n  inputUntouch(form: any, val: any) {\n    form.controls[val].markAsUntouched();\n  }\n  /**for validation purpose**/\n\n  SetValueForm() {\n    setTimeout(() => {\n      this.getCityByName(this.cookiesData.state);\n    }, 400);\n    this.AccountSettingsForm.controls['firstname'].patchValue(this.cookiesData.firstname);\n    this.AccountSettingsForm.controls['lastname'].patchValue(this.cookiesData.lastname);\n    this.AccountSettingsForm.controls['phoneno'].patchValue(this.cookiesData.phone);\n    this.AccountSettingsForm.controls['zip'].patchValue(this.cookiesData.zip);\n    this.AccountSettingsForm.controls['address'].patchValue(this.cookiesData.address);\n    this.AccountSettingsForm.controls['state'].patchValue(this.cookiesData.state);\n    this.AccountSettingsForm.controls['city'].patchValue(this.cookiesData.city);\n  }\n\n  /**for getting all states & cities function start here**/\n  allStateCityData() {\n    this.httpService.getSiteSettingData(\"./assets/data-set/state.json\").subscribe(response => {\n      this.states = response;\n      this.SetValueForm();\n    });\n\n    this.httpService.getSiteSettingData(\"./assets/data-set/city.json\").subscribe(response => {\n      this.allCities = response;\n      this.SetValueForm();\n    });\n  }\n\n  /**for getting all states & cities  function end here**/\n  getCity(event) {\n    var val = event;\n    this.cities = this.allCities[val];\n  }\n\n  getCityByName(stateName) {\n    this.cities = this.allCities[stateName];\n  }\n\n  CancelRedirectToDashboard() {\n    this.router.navigateByUrl('/admin/dashboard');\n  }\n  \n  AccountSettingsFormSubmit() {\n    this.loader = true;\n    let x: any;\n    for (x in this.AccountSettingsForm.controls) {\n      this.AccountSettingsForm.controls[x].markAsTouched();\n    }\n    if (this.AccountSettingsForm.valid) {\n      var data: any;\n      data = {\n        \"source\": \"users\",\n        \"data\": {\n          id: this.cookies_id,\n          firstname: this.AccountSettingsForm.value.firstname,\n          lastname: this.AccountSettingsForm.value.lastname,\n          phoneno: this.AccountSettingsForm.value.phoneno,\n          date: this.AccountSettingsForm.value.data,\n          zip: this.AccountSettingsForm.value.zip,\n          address: this.AccountSettingsForm.value.address,\n          city: this.AccountSettingsForm.value.city,\n          state: this.AccountSettingsForm.value.state,\n        },\n        \"token\": this.user_token\n      }\n      this.httpService.httpViaPost('addorupdatedata', data).subscribe(response => {\n          var userDetailsCookie: any = JSON.parse(this.cookie.get('user_details'));\n          var type: any = userDetailsCookie.type;\n          this.cookie.delete('user_details');\n\n          userDetailsCookie.firstname = this.AccountSettingsForm.value.firstname;\n          userDetailsCookie.lastname = this.AccountSettingsForm.value.lastname;\n          userDetailsCookie = JSON.stringify(userDetailsCookie);\n          this.loader = false;\n          let action: any = \"Ok\";\n          this.snackBar.open(this.message, action, {\n            duration: 1000,\n          });\n\n          setTimeout(() => {\n            this.cookie.set('user_details', userDetailsCookie);\n          }, 1000);\n\n          setTimeout(() => {\n            this.router.navigateByUrl(type + '/dashboard');\n          }, 3000);\n        })\n    }\n\n  }\n\n}\n","<!-- Header Start -->\n\n<app-admin-header *ngIf=\"headerFlag == 'admin'\"></app-admin-header>\n\n<app-biller-header *ngIf=\"headerFlag == 'biller'\"></app-biller-header>\n\n<app-tech-header *ngIf=\"headerFlag == 'tech'\"></app-tech-header>\n\n<app-doctor-header *ngIf=\"headerFlag == 'doctor'\"></app-doctor-header>\n\n<!-- Header End -->\n\n<mat-progress-bar *ngIf=\"loader\" mode=\"indeterminate\"></mat-progress-bar>\n<mat-card class=\"admin_wrapper\">\n<mat-card-content class=\"title_wrapper\">\n    Account Setting\n</mat-card-content>\n\n\n<span class=\"add_header\">\n    <span class=\"bradcrumb\"><a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Change Password</span>\n</span>\n<!-- End header with add button -->\n\n<mat-card class=\"add_form\">\n    <h2>Change Password</h2>\n    <mat-card-content class=\"form_wrapper\">\n        <form class=\"example-form\" autocomplete=\"off\" name=\"ChangePasswordForm\" [formGroup]=\"ChangePasswordForm\"\n            (ngSubmit)=\"ChangePasswordFormSubmit()\">\n            <!-- Old Password -->\n            <mat-form-field class=\"form-group\">\n                <input matInput placeholder=\"Type Current Password\" type=\"password\"\n                    [formControl]=\"ChangePasswordForm.controls['oldPassword']\" (blur)=\"inputUntouch(ChangePasswordForm,'oldPassword')\">\n                <mat-error\n                    *ngIf=\"!ChangePasswordForm.controls['oldPassword'].valid && ChangePasswordForm.controls['oldPassword'].touched\">\n                    Password field can not be blank</mat-error>\n            </mat-form-field>\n            <!-- New Password -->\n            <mat-form-field class=\"form-group\">\n                <input matInput placeholder=\"Type New Password\" type=\"password\"\n                    [formControl]=\"ChangePasswordForm.controls['newPassword']\"\n                    (blur)=\"inputUntouch(ChangePasswordForm,'newPassword')\">\n                <mat-error\n                    *ngIf=\"!ChangePasswordForm.controls['newPassword'].valid && ChangePasswordForm.controls['newPassword'].touched\">\n                    Password field can not be blank</mat-error>\n            </mat-form-field>\n            <!-- Confirm Password -->\n            <mat-form-field class=\"form-group\">\n                <input matInput placeholder=\"Retype New Password\" type=\"password\"\n                    [formControl]=\"ChangePasswordForm.controls['confirmPassword']\"\n                    (blur)=\"inputUntouch(ChangePasswordForm,'confirmPassword')\">\n                <mat-error\n                    *ngIf=\"!ChangePasswordForm.controls['confirmPassword'].valid && ChangePasswordForm.controls['confirmPassword'].touched\">\n                    Password does not match </mat-error>\n            </mat-form-field>\n\n            <span class=\"submit_form\">\n                <button mat-flat-button type=\"button\" (click)=\"CancelRedirectToDashboard()\"> Cancel </button>\n                <button mat-flat-button type=\"submit\" > Update </button>\n            </span>\n        </form>\n    </mat-card-content>\n\n</mat-card>\n</mat-card>\n<app-admin-footer></app-admin-footer>\n","import { Component, OnInit,ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl, FormGroupDirective} from '@angular/forms';\nimport { HttpServiceService } from '../../../../services/http-service.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material';\nimport { DialogBoxComponent } from '../../../common/dialog-box/dialog-box.component';\nimport { CommonFunction } from '../../../../class/common/common-function';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.css']\n})\n\nexport class ChangePasswordComponent implements OnInit {\n  @ViewChild(FormGroupDirective,{static: false}) formDirective: FormGroupDirective;\n\n  public ChangePasswordForm: FormGroup;\n  public user_token: any;\n  public params_id: any;\n  public states: any;\n  public allCities: any;\n  public cities: any;\n  public cookiesData: any;\n  public cookies_id: any;\n  public loader: any = false;\n  public headerFlag: string = null;\n\n  constructor(public fb: FormBuilder, public cookie: CookieService, public router: Router, public snackBar: MatSnackBar, public activeRoute: ActivatedRoute, public httpService: HttpServiceService, public commonFunction: CommonFunction) {\n\n    /* Set Meta Data */\n    this.commonFunction.setTitleMetaTags();\n\n    this.headerFlag = this.activeRoute.snapshot.url[0].path;\n    this.user_token = cookie.get('jwtToken');\n    let allcookies: any;\n    allcookies = cookie.getAll();\n    this.cookiesData = JSON.parse(allcookies.user_details);\n    this.cookies_id = this.cookiesData._id;\n\n    this.ChangePasswordForm = fb.group({\n      oldPassword: ['', [Validators.required, Validators.maxLength(16), Validators.minLength(6)]],\n      newPassword: ['', [Validators.required, Validators.maxLength(16), Validators.minLength(6)]],\n      confirmPassword: [],\n    }, { validator: this.machpassword('newPassword', 'confirmPassword') })\n  }\n\n  ngOnInit() {\n  }\n/**for validation purpose**/\ninputUntouch(form: any, val: any) {\n  form.controls[val].markAsUntouched();\n}\n/**for validation purpose**/\n  machpassword(newPasswordkye: string, confirmPasswordkye: string) {\n    return (group: FormGroup) => {\n      let passwordInput = group.controls[newPasswordkye],\n        confirmpasswordInput = group.controls[confirmPasswordkye];\n      if (passwordInput.value !== confirmpasswordInput.value) {\n        return confirmpasswordInput.setErrors({ notEquivalent: true });\n      }\n      else {\n        return confirmpasswordInput.setErrors(null);\n      }\n    };\n  }\n\n \n\n  CancelRedirectToDashboard() {\n    this.router.navigateByUrl('/admin/dashboard');\n  }\n\n  ChangePasswordFormSubmit() {\n    this.loader = true;\n\n    let x: any;\n    for (x in this.ChangePasswordForm.controls) {\n      this.ChangePasswordForm.controls[x].markAsTouched();\n    }\n\n    if (this.ChangePasswordForm.valid) {\n      delete this.ChangePasswordForm.value.confirmPassword;\n      var data = {\n        _id: this.cookies_id,\n        adminflag: 0,\n        oldPassword: this.ChangePasswordForm.value.oldPassword,\n        newPassword: this.ChangePasswordForm.value.newPassword\n      }\n      this.httpService.httpViaPost('changepassword', data)\n        .subscribe((response) => {\n          this.formDirective.resetForm();\n          this.loader = false;\n          if (response.status == true) {\n            this.snackBar.open(response.message, \"OK\", {\n              duration: 1500\n            });\n            setTimeout(() => {\n              this.router.navigateByUrl('/admin/dashboard');\n            }, 1550);\n          } else {\n            this.snackBar.open(response.message, \"OK\", {\n              duration: 1500\n            });\n          }\n\n        }, (error => {\n          this.loader = false;\n          alert(\"Some error occord. Please try later.\");\n        }))\n    }\n\n  }\n\n}\n","<div class=\"modal\">\n    <h1 mat-dialog-title>{{ data.header }}</h1>\n    <div mat-dialog-content>\n        <p>{{ data.message }}</p>\n    </div>\n</div>\n<div mat-dialog-actions>\n    <button mat-button (click)=\"button1()\">{{ data.button1.text }}</button>\n    <button mat-button (click)=\"button2()\" cdkFocusInitial>{{ data.button2.text }}</button>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from \"@angular/material\";\nimport { ActivatedRoute, Router } from '@angular/router';\n\nexport interface DialogData { \n  header: string,\n  message: string,\n  button1: { text: string },\n  button2: { text: string },\n}\n\n@Component({\n  selector: 'app-dialog-box',\n  templateUrl: './dialog-box.component.html',\n  styleUrls: ['./dialog-box.component.css']\n})\n\nexport class DialogBoxComponent implements OnInit {\n\n  public data: any;\n\n  constructor(public dialogRef: MatDialogRef<DialogBoxComponent>,\n    @Inject(MAT_DIALOG_DATA) public dialogData: DialogData, public router: Router) {\n    this.data = dialogData;\n  }\n\n  ngOnInit() {\n  }\n\n  button1() {\n    this.dialogRef.close(this.data.button1.text);\n  }\n\n  button2() {\n    this.dialogRef.close(this.data.button2.text);\n  }\n\n}\n","<div *ngIf=\"httpLoading == true\" class=\"mainOverlayLoader\">\n    <mat-spinner color=\"warn\"></mat-spinner>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpLoaderService } from '../../../services/http-loader.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-http-loader',\n  templateUrl: './http-loader.component.html',\n  styleUrls: ['./http-loader.component.css']\n})\n\nexport class HttpLoaderComponent implements OnInit {\n\n  httpLoading: boolean;\n\n  constructor(private loaderService: HttpLoaderService, public activatedRoute: ActivatedRoute, public router: Router) {\n    var urlArr: any = this.router.url.split(\"/\");\n    // if(urlArr[3] == 'bulk-upload') {\n      this.loaderService.isLoading.subscribe((v) => {\n        this.httpLoading = v;\n      });\n    // }\n  }\n\n  ngOnInit() {\n  }\n\n}\n","<ng-container *ngIf=\"cookiesData.type == 'admin'\">\n  <app-admin-header></app-admin-header>\n</ng-container>\n\n<ng-container *ngIf=\"cookiesData.type == 'tech'\">\n  <app-tech-header></app-tech-header>\n</ng-container>\n\n<ng-container *ngIf=\"cookiesData.type == 'biller'\">\n  <app-biller-header></app-biller-header>\n</ng-container>\n\n<ng-container *ngIf=\"cookiesData.type == 'doctor'\">\n  <app-doctor-header></app-doctor-header>\n</ng-container>\n\n<mat-card-content class=\"error_banner\">\n  <span class=\"imagesss\">\n    <img src=\"assets/images/exclametroy_warning.png\">\n  </span>\n  <mat-card-content class=\"error_page_content\">\n    <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>\n\n    <h1> 404 Error </h1>\n    <h3> ooops! Page Not Found </h3>\n    <button class=\"goto_home\" mat-button type=\"button\" (click)=\"gotoHome();\">Back to home</button>\n  </mat-card-content>\n</mat-card-content>\n\n\n\n<mat-card-content class=\"footer_section\">\n  <span class=\"footer_content\">\n\n    <mat-card-content class=\"link\">\n      <a href=\"\">Privacy Policy</a>\n      <a href=\"\"> Terms & conditions</a>\n    </mat-card-content>\n    <p>© Copyright 2018 Advanced Wellness Solutions- All Rights Reserved</p>\n  </span>\n</mat-card-content>","import { Component, OnInit } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-not-found-error',\n  templateUrl: './not-found-error.component.html',\n  styleUrls: ['./not-found-error.component.css']\n})\nexport class NotFoundErrorComponent implements OnInit {\npublic cookiesData : any;\npublic userToken : any;\n  constructor(public cookie : CookieService, public activatedRoute: ActivatedRoute, public router: Router) { \n    this.userToken = cookie.get('jwtToken');\n    let allcookies: any;\n    allcookies = cookie.getAll();\n    this.cookiesData = JSON.parse(allcookies.user_details);\n    console.log(\"token data\",this.cookiesData.type);\n  }\n\n  ngOnInit() {\n  }\n\n  gotoHome() {\n    this.router.navigateByUrl('/' + this.cookiesData.type + '/dashboard');\n  }\n\n}\n","<p>password-dialog-box works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-password-dialog-box',\n  templateUrl: './password-dialog-box.component.html',\n  styleUrls: ['./password-dialog-box.component.css']\n})\nexport class PasswordDialogBoxComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<mat-card class=\"add_form\">\n    <form class=\"example-form\" autocomplete=\"off\" name=\"techBulkUploadForm\" [formGroup]=\"techUploadForm\"\n        (ngSubmit)=\"techUploadFormSubmit()\">\n        <mat-dialog-content class=\"mat-typography\">\n            <!-- <lib-file-upload [config]=\"configData\"></lib-file-upload>\n            <mat-error *ngIf=\"ErrCode==true\">Please add just one image.</mat-error> -->\n            <p class=\"signaturefont\">{{ sign }}</p>\n            <label>Signature : </label>\n            <mat-form-field>\n                <input name=\"sign\" matInput [formControl]=\"techUploadForm.controls['sign']\" [(ngModel)]=\"sign\"\n                    (blur)=\"inputUntouch(techUploadForm,'sign')\">\n                <mat-error *ngIf=\"techUploadForm.controls['sign'].touched && !techUploadForm.controls['sign'].valid\n          && techUploadForm.controls['sign'].errors.required\">\n                    Signature field can not be blank</mat-error>\n            </mat-form-field>\n            \n            <span class=\"submit_form\">\n                <button mat-flat-button mat-dialog-close type=\"button\" (click)=\"cancelButtonFunction()\"> Cancel </button>\n                <button mat-flat-button type=\"submit\" [mat-dialog-close]=\"true\" cdkFocusInitial> Submit </button>\n            </span>\n        </mat-dialog-content>\n    </form>\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { HttpServiceService } from '../../../services/http-service.service';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-upload-dialog-box',\n  templateUrl: './upload-dialog-box.component.html',                                                                                                                                                                                                                                                                  \n  styleUrls: ['./upload-dialog-box.component.css']\n})\n\nexport class UploadDialogBoxComponent implements OnInit {\n\n  public sign: string = '';\n  public techUploadForm: FormGroup;\n  public ErrCode: boolean;\n  public user_token: any;\n  public signatureArray: any = [];\n  public cookies_data:any;\n  public configData: any = {\n    baseUrl: \"http://3.15.236.141:5005/\",\n    endpoint: \"uploads\",\n    size: \"51200\", // kb\n    format: [\"jpg\", \"jpeg\", \"png\", \"bmp\", \"zip\", 'html'], // use all small font\n    type: \"signature-file\",\n    path: \"signature-file\",\n    prefix: \"signature-file\"\n  }\npublic cookiesData:any;\npublic cookies_id:any;\npublic result : any;\n  constructor(public dialog: MatDialog, public fb: FormBuilder, public cookie: CookieService,\n    public http: HttpServiceService, public snackBar: MatSnackBar,public router : Router) {\n      let allcookies: any;\n      allcookies = cookie.getAll();\n      this.cookiesData = JSON.parse(allcookies.user_details);\n      this.cookies_id = this.cookiesData._id;\n  \n      console.log(this.cookiesData);\n      console.log(this.cookies_id);\n    this.user_token = cookie.get('jwtToken');\n    this.getSignatureData();\n\n    this.techUploadForm = this.fb.group({\n      sign: ['', Validators.required],\n      user_id:['']\n    })\n  }\n\n  ngOnInit() {\n  }\n  inputUntouch(form: any, val: any) {\n    form.controls[val].markAsUntouched();\n  }\n  cancelButtonFunction(){\n    this.router.navigateByUrl('/doctor/dashboard');\n  }\n  getSignatureData(){\n    var data = {\n      \"source\": \"doctor_signature\",\n      \"condition\": {\n        \"user_id_object\": this.cookies_id\n      },\n      \"token\": this.user_token\n    }\n    this.http.httpViaPost('datalist',data)\n      .subscribe(response=>{\n        this.result=response.res[0]._id;\n        this.techUploadForm.controls['sign'].patchValue(response.res[0].sign);\n\n\n      })\n  }\n  techUploadFormSubmit() {\n\n    let x: any;\n    for (x in this.techUploadForm.controls) {\n      this.techUploadForm.controls[x].markAsTouched();\n    }\n    this.techUploadForm.controls['user_id'].patchValue(this.cookies_id);\n\n    if (this.techUploadForm.valid) {\n      var data :any;\n       if(this.result){\n        data = {\n          \"source\": \"users\",\n          \"sourceobj\": [\"user_id\"],\n          \"data\": {\n            id: this.result,\n            sign: this.techUploadForm.value.sign,\n            user_id: this.techUploadForm.value.user_id,\n          },\n          \"token\": this.user_token\n        }\n       }else{\n         data = {\n          \"source\": \"users\",\n          \"data\": this.techUploadForm.value,\n          \"sourceobj\": [\"user_id\"],\n          \"token\": this.user_token\n        }\n       }\n      this.http.httpViaPost(\"addorupdatedata\", data)\n        .subscribe(response => {\n          if (response.status = \"success\") {\n            setTimeout(() => {\n\n            }, 1000);\n\n          } else {\n            alert(\"Error Occured\");\n\n          }\n        })\n    }\n  }\n\n}\n\n","<app-doctor-office-header></app-doctor-office-header>\n\n<!-- Header End -->\n<mat-card-content class=\"title_wrapper\">\n    Account Setting\n</mat-card-content>\n\n<span class=\"add_header\">\n    <span class=\"bradcrumb\">\n        <a [routerLink]=\"['/doctor-office/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Account Setting</span>\n</span>\n<!-- End header with add button -->\n\n\n<!-- End header with add button -->\n\n<mat-card class=\"add_form\">\n    <h2>Doctor Office Account Information</h2>\n    <mat-card-content class=\"form_wrapper\">\n\n        <form [formGroup]=\"accountForm\" autocomplete=\"off\">\n\n\n            <mat-form-field>\n                <mat-label>Date:</mat-label>\n                <input matInput formControlName=\"date\" [readonly]=\"true\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <mat-label>Center Name:</mat-label>\n                <input matInput formControlName=\"centername\">\n                <mat-error *ngIf=\"!accountForm.controls['centername'].valid\n          && accountForm.controls['centername'].errors.required\">Center Name is required.</mat-error>\n            </mat-form-field>\n\n\n            <mat-form-field>\n                <mat-label>Email:</mat-label>\n                <input matInput formControlName=\"email\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <mat-label>Phone:</mat-label>\n                <input matInput formControlName=\"phone\">\n                <mat-error *ngIf=\"!accountForm.controls['phone'].valid\n          && accountForm.controls['phone'].errors.required\">Phone is required.</mat-error>\n            </mat-form-field>\n\n            <mat-form-field>\n                <mat-label>Address:</mat-label>\n                <input matInput formControlName=\"address\">\n                <mat-error *ngIf=\"!accountForm.controls['address'].valid\n          && accountForm.controls['address'].errors.required\">Address is required.</mat-error>\n            </mat-form-field>\n\n            <mat-form-field class=\"parent_cat\" appearance=\"fill\">\n                <mat-label>State</mat-label>\n                <mat-select formControlName=\"state\" (selectionChange)=\"getCity($event.value);\">\n                    <mat-option [value]=0>Select a category</mat-option>\n                    <mat-option *ngFor=\"let state of states;\" value=\"{{ state.name }}\">{{ state.name }}</mat-option>\n                </mat-select>\n            </mat-form-field>\n\n\n\n            <mat-form-field class=\"parent_cat\" appearance=\"fill\">\n                <mat-label>City</mat-label>\n                <mat-select formControlName=\"city\">\n                    <mat-option value=0>Select a city</mat-option>\n                    <mat-option *ngFor=\"let city of cities;\" value=\"{{ city }}\">{{ city }}</mat-option>\n                </mat-select>\n            </mat-form-field>\n\n\n            <mat-form-field>\n                <mat-label>ZIP:</mat-label>\n                <input matInput formControlName=\"zip\">\n                <mat-error *ngIf=\"!accountForm.controls['zip'].valid\n          && accountForm.controls['zip'].errors.required\">ZIP is required.</mat-error>\n            </mat-form-field>\n\n\n          \n\n           \n\n            <span class=\"submit_form\">\n                <button mat-flat-button type=\"button\" (click)=\"cancelRedirectToDashboard()\"> Cancel </button>\n                <button mat-flat-button type=\"submit\" (click)=\"onSubmit()\"\n                    [disabled]=\"!accountForm.valid\">Update</button>\n            </span>\n        </form>\n\n    </mat-card-content>\n\n</mat-card>\n\n<app-doctor-office-footer></app-doctor-office-footer>","import { Component, OnInit } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HttpServiceService } from '../../../services/http-service.service';\nimport { Router, Route } from '@angular/router';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-doctor-office-account-settings',\n  templateUrl: './doctor-office-account-settings.component.html',\n  styleUrls: ['./doctor-office-account-settings.component.css']\n})\nexport class DoctorOfficeAccountSettingsComponent implements OnInit {\n\n  // ==========declarations==============\n  public userData: any;\n  public jwtToken: any;\n  public accountForm: FormGroup;\n  public cities:any;\n  public states:any;\n  public message:string = \"Updated Successfuly!!!\";\n  loader:boolean=false;\n  allCities:any;\n\n  constructor(public cookieService: CookieService, private formBuilder: FormBuilder,\n    private http: HttpServiceService ,private router : Router , private snackBar : MatSnackBar) {\n\n    /*Getting the user data from the cookie*/\n    let allData: any = cookieService.getAll();\n    this.jwtToken = cookieService.get('jwtToken');\n    this.userData = JSON.parse(allData.user_details);\n  }\n\n  ngOnInit() {\n    //generating the form\n    this.generateForm();\n\n    //setting the default value\n    this.setDefaultValue(this.userData);\n\n    //getting the citites\n     this.allStateCityData();\n\n     \n     setTimeout(() => {\n      this.getCityByName(this.userData.state);\n    }, 2000);\n  }\n\n  generateForm() {\n    this.accountForm = this.formBuilder.group({\n      id: [this.userData._id],\n      address: ['', Validators.required],\n      centername: ['', Validators.required],\n      state:[],\n      city: ['', Validators.required],\n      date: [],\n      email: [{ value: 'someValue', disabled: true }],\n      phone: ['', Validators.required],\n      zip: ['', Validators.required]\n    });\n  }\n\n  setDefaultValue(defaultValue) {\n    this.accountForm.patchValue({\n      address: defaultValue.address,\n      centername: defaultValue.centerName,\n      state:defaultValue.state,\n      city: defaultValue.city,\n      date: defaultValue.date,\n      email: defaultValue.email,\n      phone: defaultValue.phone,\n      status: defaultValue.status,\n      zip: defaultValue.zip\n    });  \n  }\n\n  onSubmit() {\n   this.loader=true;\n    if (this.accountForm.invalid)\n      return;\n    else {\n\n      let postData: any = {\n        'source': 'users',\n        'data': Object.assign(this.accountForm.value),\n        'token': this.jwtToken\n      }\n\n      this.http.httpViaPost('addorupdatedata', postData).subscribe((response: any) => {\n        if (response.status == 'success') { \n          var userDetailsCookie: any = JSON.parse(this.cookieService.get('user_details'));\n          var type: any = userDetailsCookie.type;\n          this.cookieService.delete('user_details');     \n          // -------------------------------------\n          userDetailsCookie.address =   this.accountForm.value.address;\n          // -------------------------------------\n          \n          userDetailsCookie = JSON.stringify(userDetailsCookie);\n\n          console.log(\"-->\",userDetailsCookie);\n          this.loader = false;\n          let action: any = \"Ok\";\n          this.snackBar.open(this.message, action, {\n            duration: 1000,\n          });\n\n          setTimeout(() => {\n            // this.cookieService.set('user_details', userDetailsCookie);\n          }, 1000);\n\n          setTimeout(() => {\n            this.router.navigateByUrl('/doctor-office/dashboard');\n          }, 3000);         \n        }\n        else{\n          this.snackBar.open(response.status, \"OK\", {\n            duration: 1500\n          });   \n        }\n\n      });\n    }\n  }\n\n\n  cancelRedirectToDashboard() {\n     this.router.navigateByUrl('doctor-office/dashboard');\n  }\n\n /**for getting all states & cities function start here**/\n allStateCityData() {\n  this.http.getSiteSettingData(\"./assets/data-set/state.json\").subscribe(response => {\n    this.states = response;\n  });\n\n  this.http.getSiteSettingData(\"./assets/data-set/city.json\").subscribe(response => {\n    this.allCities = response;\n  });\n}\n\n/**for getting all states & cities  function end here**/\ngetCity(event) {\n  var val = event;\n  this.cities = this.allCities[val];\n}\n\ngetCityByName(stateName) {\n  this.cities = this.allCities[stateName];\n}\n\n\n}\n","<app-doctor-office-header></app-doctor-office-header>\n\n<!-- Header Start -->\n\n<app-admin-header *ngIf=\"headerFlag == 'admin'\"></app-admin-header>\n\n<app-biller-header *ngIf=\"headerFlag == 'biller'\"></app-biller-header>\n\n<app-tech-header *ngIf=\"headerFlag == 'tech'\"></app-tech-header>\n\n<app-doctor-header *ngIf=\"headerFlag == 'doctor'\"></app-doctor-header>\n\n<!-- Header End -->\n\n<mat-progress-bar *ngIf=\"loader\" mode=\"indeterminate\"></mat-progress-bar>\n\n<mat-card-content class=\"title_wrapper\">\n    Account Setting\n</mat-card-content>\n\n\n<span class=\"add_header\">\n    <span class=\"bradcrumb\"><a [routerLink]=\"['/admin/dashboard']\">Dashboard &nbsp;/</a> &nbsp; Change Password</span>\n</span>\n<!-- End header with add button -->\n\n<mat-card class=\"add_form\">\n    <h2>Change Password</h2>\n    <mat-card-content class=\"form_wrapper\">\n        <form class=\"example-form\" autocomplete=\"off\" [formGroup]=\"doctorOfficeChangePasswordForm\">\n\n            <!-- Old Password -->\n            <mat-form-field class=\"form-group\">\n                <input matInput placeholder=\"Type Current Password\" type=\"password\" formControlName=\"old_pwd\">\n                <mat-error *ngIf=\"!doctorOfficeChangePasswordForm.controls['old_pwd'].valid\n                && doctorOfficeChangePasswordForm.controls['old_pwd'].errors.required\">old_pwd is required.</mat-error>\n\n            </mat-form-field>\n            <!-- New Password -->\n            <mat-form-field class=\"form-group\">\n                <input matInput placeholder=\"Type New Password\" type=\"password\" formControlName=\"new_pwd\">\n                <mat-error *ngIf=\"!doctorOfficeChangePasswordForm.controls['new_pwd'].valid\n                && doctorOfficeChangePasswordForm.controls['new_pwd'].errors.required\">password is required.\n                </mat-error>\n            </mat-form-field>\n\n            <!-- Confirm Password -->\n            <mat-form-field class=\"form-group\">\n                <input matInput placeholder=\"Retype New Password\" type=\"password\" formControlName=\"confirm_new_pwd\">\n          </mat-form-field>\n\n            <span class=\"submit_form\">\n                <button mat-flat-button type=\"button\"> Cancel </button>\n                <button mat-flat-button type=\"submit\" (click)=\"changePassword() \"> Change Password </button>\n            </span>\n        </form>\n    </mat-card-content>\n\n</mat-card>\n<app-admin-footer></app-admin-footer>\n\n\n\n<app-doctor-office-footer></app-doctor-office-footer>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup , FormBuilder , FormControl,Validators } from '@angular/forms';\nimport { HttpServiceService } from '../../../services/http-service.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material';\nimport { DialogBoxComponent } from '../../common/dialog-box/dialog-box.component';\nimport { CommonFunction } from '../../../class/common/common-function';\n\n\n@Component({\n  selector: 'app-doctor-office-change-password',\n  templateUrl: './doctor-office-change-password.component.html',\n  styleUrls: ['./doctor-office-change-password.component.css']\n})\nexport class DoctorOfficeChangePasswordComponent implements OnInit {\n\n\n  doctorOfficeChangePasswordForm : FormGroup;\n  loader:boolean=false;\n  headerFlag:any;\n  jwtToken:any;\n  cookiesData:any;\n  cookies_id:string;\n  \n\n  constructor( private formBuilder : FormBuilder ,private httpService : HttpServiceService ,\n    private snackBar : MatSnackBar ,private commonFunction : CommonFunction , private activatedRoute : ActivatedRoute,\n    private cookieService : CookieService , private router : Router) { \n       /* Set Meta Data */\n    this.commonFunction.setTitleMetaTags();\n\n    this.headerFlag = this.activatedRoute.snapshot.url[0].path;\n    this.jwtToken = cookieService.get('jwtToken');\n    let allcookies: any;\n    allcookies = cookieService.getAll();\n    this.cookiesData = JSON.parse(allcookies.user_details);\n    this.cookies_id = this.cookiesData._id;\n    }\n\n  ngOnInit() {\n\n    //generating the form\n    this.generateForm();\n  }\n\n  generateForm(){\n    this.doctorOfficeChangePasswordForm = this.formBuilder.group({\n      old_pwd:[ '',[Validators.required, Validators.maxLength(16), Validators.minLength(6)]],\n      new_pwd:['', [Validators.required, Validators.maxLength(16), Validators.minLength(6)]],\n      confirm_new_pwd:[],\n    }, { validator: this.matchpassword('new_pwd', 'confirm_new_pwd') });\n  }\n  \n\n  /**for validation purpose**/\n  matchpassword(newPasswordkye: string, confirmPasswordkye: string) {\n    return (group: FormGroup) => {\n      let passwordInput = group.controls[newPasswordkye],\n        confirmpasswordInput = group.controls[confirmPasswordkye];\n      if (passwordInput.value !== confirmpasswordInput.value) {\n        return confirmpasswordInput.setErrors({ notEquivalent: true });\n      }\n      else {\n        return confirmpasswordInput.setErrors(null);\n      }\n    };\n  }\n  \n  changePassword(){\n    this.loader = true;\n    if (this.doctorOfficeChangePasswordForm.valid) {\n      delete this.doctorOfficeChangePasswordForm.value.confirm_new_pwd;\n      var data = {\n        _id: this.cookies_id,\n        adminflag: 0,\n        oldPassword: this.doctorOfficeChangePasswordForm.value.old_pwd,\n        newPassword: this.doctorOfficeChangePasswordForm.value.new_pwd\n      }\n      this.httpService.httpViaPost('changepassword', data)\n        .subscribe((response) => {\n          // this.formDirective.resetForm();\n          this.loader = false;\n          if (response.Status == true) {\n            this.snackBar.open(response.message, \"OK\", {\n              duration: 1500\n            });            \n              this.router.navigateByUrl('doctor-office/dashboard');            \n          } else {\n            this.snackBar.open(response.message, \"OK\", {\n              duration: 1500\n            });            \n          }\n\n        }, (error => {\n          this.loader = false;\n          alert(\"Some error occurred. Please try later.\");\n        }))\n    }\n\n\n  }\n\n}\n","<app-doctor-office-header></app-doctor-office-header>\n\n<mat-card-content class=\"content_wrapper\">\n  <mat-card-content class=\"itemsection one\">\n    <span class=\"counteer\"> 10  </span>\n    <p>Total Number of Doctors</p>\n    <button mat-flat-button type=\"button\" [routerLink]=\"['/admin/doctor-management']\">View Details</button>\n  </mat-card-content>\n\n  <!-- <mat-card-content class=\"itemsection two\">\n    <span class=\"counteer\"> 9 </span>\n    <p>Total Number of Billers</p>\n    <button mat-flat-button type=\"button\" [routerLink]=\"['/admin/biller-management']\">View Details</button>\n  </mat-card-content> -->\n  \n  <mat-card-content class=\"itemsection three\">\n    <span class=\"counteer\"> 8 </span>\n    <p>Total Number of Techs</p>\n    <button mat-flat-button type=\"button\" [routerLink]=\"['/admin/tech-management']\">View Details</button>\n  </mat-card-content>\n</mat-card-content>\n\n\n\n\n\n\n\n\n  <!-- doctor tabel  -->\n<!-- ===================================================================================================== -->\n\n  <!-- <div  class=\"mat-elevation-z8\"> -->\n    <!-- Default Biller table  -->\n    <!-- <table mat-table  [dataSource]=\"doctorData\" matSort> -->\n  \n      <!--- Note that these columns can be defined in any order.\n            The actual rendered columns are set as a property on the row definition\" -->\n  \n      <!-- Patient Column -->\n      <!-- <ng-container matColumnDef=\"Patient Name\" >\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Patient Name </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.patientName}} </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n  \n  <mat-paginator [pageSizeOptions]=\"[5,10,20]\" showFirstLastButtons></mat-paginator>\n  </div> -->\n  <!-- ======================================================================================== -->\n\n<app-doctor-office-footer></app-doctor-office-footer>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { HttpServiceService } from '../../../services/http-service.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { CommonFunction } from '../../../class/common/common-function';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\n\n@Component({\n  selector: 'app-doctor-office-dashboard',\n  templateUrl: './doctor-office-dashboard.component.html',\n  styleUrls: ['./doctor-office-dashboard.component.css']\n})\nexport class DoctorOfficeDashboardComponent implements OnInit {\n\n  /**************declaration**************/\n  doctorData:any=[];\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  constructor(private router: Router, public cookieService: CookieService, private http: HttpServiceService, public activatedRoute: ActivatedRoute, public commonFunction: CommonFunction) {\n\n  }\n\n  ngOnInit() {\n    this.activatedRoute.data.subscribe(resolveData => {\n      this.doctorData = resolveData.data.res;\n      console.log(\"8888888888888\",this.doctorData);\n    });\n  }\n\n}\n","<mat-card-content class=\"footer_section\">\n  <span class=\"footer_content\">\n\n      <mat-card-content class=\"link\">\n          <a href=\"\">Privacy Policy</a>\n          <a href=\"\"> Terms & conditions</a>\n      </mat-card-content>\n      <p>© Copyright 2018 Advanced Wellness Solutions- All Rights Reserved</p>\n  </span>\n</mat-card-content>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-doctor-office-footer',\n  templateUrl: './doctor-office-footer.component.html',\n  styleUrls: ['./doctor-office-footer.component.css']\n})\nexport class DoctorOfficeFooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<mat-toolbar class=\"techdashboard_header\">\n    <mat-toolbar-row>\n      <span class=\"logo_wrapper\">\n        <img src=\"../../../assets/images/logo.png\" (click)=\"toDashboard()\" class=\"clickable\">\n      </span>\n  \n  \n      <mat-card-content class=\"quotation\">\n        <p>ADVANCED ANS TECHNOLOGY – BETTER PATIENT CARE – INCREASE PRACTICE REVENUE</p>\n      </mat-card-content>\n  \n  \n      <mat-card-content class=\"profile_section\">\n        <mat-menu #appMenu=\"matMenu\">\n          <button mat-menu-item [routerLink]=\"['/doctor-office/account-settings']\">\n            <mat-icon>account_circle</mat-icon> Account Settings\n          </button>\n          <button mat-menu-item [routerLink]=\"['/doctor-office/account-settings/change-password']\">\n            <mat-icon>vpn_key</mat-icon> Change Password\n          </button>\n          <button mat-menu-item (click)=\"logout()\"> <mat-icon>power_settings_new</mat-icon> Logout </button>\n        </mat-menu>\n        <span class=\"username\">{{ user_data.centerName }}</span>\n        <button mat-icon-button [matMenuTriggerFor]=\"appMenu\">\n          <span class=\"user_profile\">\n            <mat-icon>account_circle</mat-icon>\n            <i class=\"material-icons\">\n              keyboard_arrow_down\n            </i>\n          </span>\n        </button>\n  \n      </mat-card-content>\n  \n  \n    </mat-toolbar-row>\n  </mat-toolbar>\n  <!-- end header -->","import { Component, OnInit } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CommonFunction } from '../../../class/common/common-function';\n\n@Component({\n  selector: 'app-doctor-office-header',\n  templateUrl: './doctor-office-header.component.html',\n  styleUrls: ['./doctor-office-header.component.css']\n})\n\nexport class DoctorOfficeHeaderComponent implements OnInit {\n\n  public user_data: any = {};\n\n  public loader: boolean = true;\n  public user_cookie:any;\n  \n  constructor(public cookies: CookieService, public router: Router, public commonFunction: CommonFunction) {\n    let allData: any = {};\n    allData = cookies.getAll()\n    this.user_data = JSON.parse(allData.user_details);\n    console.log(\"UserData >>-->\",this.user_data);\n    this.user_cookie = cookies.get('jwtToken');\n   }\n\n  ngOnInit() {\n    /* Set Meta Data */\n    this.commonFunction.setTitleMetaTags();\n  }\n  \n  /**logout function start here**/\n  logout() {\n    this.cookies.delete('jwtToken');\n    this.cookies.delete('user_details');\n    this.cookies.deleteAll();\n    this.router.navigateByUrl('logout');\n  }\n  /**logout function end here**/\n\n  /* Dashboard redirect */\n  toDashboard(){\n    this.router.navigateByUrl('/doctor-office/dashboard');\n  }\n\n}\n","<app-doctor-header></app-doctor-header>\n\n<mat-card class=\"admin_wrapper\">\n\n  <!-- Count Block  -->\n  <mat-card-content class=\"admin_superbillsection\">\n    <h1>Physician Report</h1>\n    <mat-card-content class=\"biller_wrapper\">\n      <mat-card-content class=\"super_bill_item sp_one\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon3.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>MANAGE YOUR SIGNATURE</p>\n          <button mat-flat-button [routerLink]=\"['/doctor/signature-management']\">SIGN</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item sp_two\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon2.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>SIGNED RECORDS</p>\n          <h2> {{ allResolveData.data.signReportCount }} </h2>\n          <button mat-flat-button (click)=\"viewReportProcessData('Report Signed')\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item sp_three\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon1.png\">\n          </mat-card-content>\n        </span>\n        <span class=\"container_wrapper\">\n          <p>PENDING SIGNATURE\n          </p>\n          <h2> {{ allResolveData.data.pendingReportCount }}</h2>\n          <button mat-flat-button (click)=\"viewReportProcessData('Report unSigned')\">view all</button>\n        </span>\n      </mat-card-content>\n\n    </mat-card-content>\n  </mat-card-content>\n\n  <!-- Pending and signed  Data listing start here -->\n  <mat-card-content class=\"table_wrapper\">\n\n    <mat-toolbar class=\"top_header\">\n      <h2> {{ htmlText.headerText }} </h2>\n    </mat-toolbar>\n\n    <span class=\"action_bar\">\n      <mat-form-field>\n        <input matInput (keyup)=\"applyFilter('patientName_regex', $event.target.value);\" placeholder=\"Search By Patient Name\">\n      </mat-form-field>\n\n      <mat-form-field class=\"parent_cat\">\n        <mat-select placeholder=\"Search By Status\" (selectionChange)=\"applyStatusFilter({'status_regex': $event.value})\">\n          <mat-option value=0>Select a status</mat-option>\n          <mat-option value=\"doctor signed\">Doctor Signed</mat-option>\n          <mat-option value=\"pending\">Pending</mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <mat-form-field>\n        <input matInput [matDatepicker]=\"picker\" [(ngModel)]=\"start_date\" placeholder=\"Search By Date\">\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker touchUi #picker></mat-datepicker>\n      </mat-form-field>\n\n      <mat-form-field>\n        <input matInput [matDatepicker]=\"picker1\" [(ngModel)]=\"end_date\" placeholder=\"Search By Date\">\n        <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n        <mat-datepicker touchUi #picker1></mat-datepicker>\n      </mat-form-field>\n\n      <button mat-raised-button color=\"warn\" (click)=\"dateSearch()\">Date Search</button>\n    </span>\n\n    <table mat-table [dataSource]=\"allDataSource\" class=\"mat-elevation-z8 adminTables\">\n\n      <ng-container matColumnDef=\"no\">\n        <th mat-header-cell *matHeaderCellDef> No. </th>\n        <td mat-cell *matCellDef=\"let element; let i = index;\"> {{ i + 1 }} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"patientName\">\n        <th mat-header-cell *matHeaderCellDef> Patient Name. </th>\n        <td mat-cell *matCellDef=\"let element\" data-label=\"Patient Name\">{{ element.patientName }} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"techName\">\n        <th mat-header-cell *matHeaderCellDef> Tech Name</th>\n        <td mat-cell *matCellDef=\"let element\" data-label=\"Tech Name\"> {{ element.techname }} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"doctorName\">\n        <th mat-header-cell *matHeaderCellDef> Doctor Name</th>\n        <td mat-cell *matCellDef=\"let element\" data-label=\"Doctor Name\" innerHTML=\"{{ element.doctorname }}\"> </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"billerName\" *ngIf=\"htmlText.headerText != 'Report unSigned'\">\n        <th mat-header-cell *matHeaderCellDef> Biller Name</th>\n        <td mat-cell *matCellDef=\"let element\" data-label=\"Biller Name\"> {{ element.billername }} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"report_type\">\n        <th mat-header-cell *matHeaderCellDef> Record Type</th>\n        <td mat-cell *matCellDef=\"let element\" data-label=\"Record Type\"> {{ element.report_type }} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"billGenerationDate\" *ngIf=\"htmlText.headerText != 'Report unSigned'\">\n        <th mat-header-cell *matHeaderCellDef> Bill Generation Date</th>\n        <td mat-cell *matCellDef=\"let element\" data-label=\"Bill Generation Date\"> {{ element.billGenerationDate | date }} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"billSentDate\" *ngIf=\"htmlText.headerText != 'Report unSigned'\">\n        <th mat-header-cell *matHeaderCellDef> Bill Sent Date</th>\n        <td mat-cell *matCellDef=\"let element\" data-label=\"Bill Sent Date\"> {{ element.billSentDate | date }} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"superBill\" *ngIf=\"htmlText.headerText != 'Report unSigned'\">\n        <th mat-header-cell *matHeaderCellDef> Super Bill</th>\n        <td mat-cell *matCellDef=\"let element\" data-label=\"Super Bill\"> {{ element.superBill }} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"status\">\n        <th mat-header-cell *matHeaderCellDef> Status</th>\n        <td mat-cell *matCellDef=\"let element\" data-label=\"Status\"> {{ element.status_text }} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"action\">\n        <th mat-header-cell *matHeaderCellDef> Action </th>\n        <td mat-cell *matCellDef=\"let element; let i = index;\">\n          <button *ngIf=\"element.status == 1\" mat-button type=\"button\" class=\"viewButton\"\n            [routerLink]=\"['/doctor/patient-record-report', element._id]\">View</button>\n          <button mat-raised-button *ngIf=\"element.status != 1\" type=\"button\" class=\"viewButton downloadBtn\"\n            disabled>View</button>\n          <button mat-raised-button *ngIf=\"element.status != 1\" type=\"button\" class=\"viewButton downloadBtn\"\n            (click)=\"downloadReport(element);\">Download</button>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"allDataColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: allDataColumns;let i = index\"></tr>\n    </table>\n\n    <mat-paginator [pageSizeOptions]=\"[50, 100, 200]\"></mat-paginator>\n  </mat-card-content>\n</mat-card>\n\n<app-admin-footer></app-admin-footer>","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { MatDialog , MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { UploadDialogBoxComponent } from '../../common/upload-dialog-box/upload-dialog-box.component';\nimport { CommonFunction } from '../../../class/common/common-function';\nimport { CookieService } from 'ngx-cookie-service';\nimport { HttpServiceService } from '../../../services/http-service.service';\nimport { MatTableDataSource } from '@angular/material';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { DeviceDetectorService } from 'ngx-device-detector';\nimport { MatSnackBar } from '@angular/material';\nimport { DialogBoxComponent } from '../../common/dialog-box/dialog-box.component';\nimport * as momentImported from 'moment';\nconst moment = momentImported;\n\n\n\n@Component({\n  selector: 'app-doctor-dashboard',\n  templateUrl: './doctor-dashboard.component.html',\n  styleUrls: ['./doctor-dashboard.component.css']\n})\n\nexport class DoctorDashboardComponent implements OnInit {\n\n  public authData: any = {};\n  public allResolveData: any;\n  public htmlText: any = { \n    buttonText: \"Add One\",\n    headerText: \"Patient Record Report\",\n    billerData: [],\n  };\n\n  public allDataColumns: string[] = ['billGenerationDate', 'billSentDate', 'doctorName','patientName', 'billerName','report_type','status','superBill','techName', 'action'];\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n\n  public dialogRef: any;\n  public allDataSource: any;\n  public start_date: any;\n  public end_date: any;\n  \n  constructor(public dialog: MatDialog, public commonFunction: CommonFunction, public cookie: CookieService,\n    public http: HttpServiceService, public activatedRoute: ActivatedRoute, public matSnackBar: MatSnackBar,\n    public deviceService: DeviceDetectorService) {\n\n    this.authData[\"user_details\"] = JSON.parse(cookie.get('user_details'));\n    this.authData[\"jwtToken\"] = cookie.get('jwtToken');\n    \n    let matDatepicker = moment();\n    this.activatedRoute.data.forEach(resolveData => {\n      this.allResolveData = resolveData.doctordata;\n      this.allDataSource = new MatTableDataSource(this.allResolveData.data.allReportData);\n      this.allDataSource.paginator = this.paginator;\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit() {\n  }\n\n  getBillerData() {\n    var data = {\n      \"source\": \"users_view_doctor\",\n      \"condition\": {\n        \"_id_object\": this.authData.to\n      },\n      \"token\": this.authData\n    }\n\n    this.http.httpViaPost('datalist', data).subscribe((response) => {\n      this.htmlText.billerData = response.res;\n    });\n  }\n\n  dateSearch() {\n    var data = {\n      \"source\": \"Patient-Record-Report_view\",\n      \"condition\": {\n        \"date\": {\n          $lte: moment(this.end_date).format('DD-MM-YYYY'),\n          $gte: moment(this.start_date).format('DD-MM-YYYY')\n        }\n      },\n      \"token\": this.authData,\n    }\n\n    this.http.httpViaPost('datalist', data)\n      .subscribe(response => {\n        this.allDataSource = response.res;\n      });\n  }\n\n  applyFilter(key: string, value: string) {\n    let filterValue: any = {};\n    filterValue[key] = value.toLowerCase();\n    var data = {\n      \"source\": \"Patient-Record-Report_view\",\n      \"condition\": filterValue,\n      \"token\": this.authData,\n    }\n\n    this.http.httpViaPost('datalist', data)\n      .subscribe(response => {\n        this.allDataSource = response.res;\n      })\n\n  }\n\n  applyStatusFilter(filterValue: any) {\n    var data = {\n      \"source\": \"Patient-Record-Report_view\",\n      \"condition\": filterValue,\n      \"token\": this.authData,\n    }\n\n    this.http.httpViaPost('datalist', data).subscribe(response => {\n      this.allDataSource = response.res;\n    });\n  }\n\n  openDialog() {\n    const dialogRef = this.dialog.open(UploadDialogBoxComponent, {\n      width: '1000px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n    });\n  }\n\n  getDoctorSignedData() {\n    var data = {\n      \"source\": \"doctor_signature\",\n      \"condition\": {\n        \"user_id_object\": this.authData\n      },\n      \"token\": this.authData\n    }\n    this.http.httpViaPost('datalist', data).subscribe(response => {\n      console.log(\"doctor signature: \", response.res);\n    });\n  }\n\n  viewReportProcessData(flag: string = null) {\n    this.allDataColumns = ['billGenerationDate', 'billSentDate', 'doctorName','patientName', 'billerName','report_type','status','superBill','techName', 'action'];\n    this.htmlText.headerText = flag;\n    /* Open modal */\n    let modalData: any = {\n      panelClass: 'bulkupload-dialog',\n      data: {\n        header: \"Message\",\n        message: \"No Records Found\",\n        button1: { text: \"\" },\n        button2: { text: \"Ok\" },\n      }\n    }\n\n    switch (flag) {\n      case 'Report Signed':\n        if(typeof this.allResolveData.data.signReportData === 'undefined') {\n          var data = {\n            \"source\": \"Patient-Record-Report_view\",\n            \"condition\": {\n              \"doctor_signature\": { $exists: true },\n              \"doctor_id_object\": this.authData.user_details._id\n            },\n            \"token\": this.authData.jwtToken\n          }\n          this.http.httpViaPost('datalist', data).subscribe(response => {\n            if(response.res.length > 0) {\n              this.allResolveData.data[\"signReportData\"] = response.res;\n              this.allDataSource = new MatTableDataSource(this.allResolveData.data.signReportData);\n              this.allDataSource.paginator = this.paginator;\n            } else {\n              this.openModal(modalData);\n            }\n          });\n        } else {\n          this.allDataSource = new MatTableDataSource(this.allResolveData.data.signReportData);\n          this.allDataSource.paginator = this.paginator;\n        }\n        break;\n      case 'Report unSigned':\n        this.allDataColumns = ['doctorName','patientName', 'report_type','status','techName', 'action'];\n        if(typeof this.allResolveData.data.pendingReportData === 'undefined') {\n          var data = {\n            \"source\": \"Patient-Record-Report_view\",\n            \"condition\": {\n              \"doctor_signature\": { $exists: false },\n              \"doctor_id_object\": this.authData.user_details._id\n            },\n            \"token\": this.authData.jwtToken\n          }\n          this.http.httpViaPost('datalist', data).subscribe(response => {\n            if(response.res.length > 0) {\n              this.allResolveData.data[\"pendingReportData\"] = response.res;\n              this.allDataSource = new MatTableDataSource(this.allResolveData.data.pendingReportData);\n              this.allDataSource.paginator = this.paginator;\n            } else {\n              this.openModal(modalData);\n            }\n          });\n        } else {\n          this.allDataSource = new MatTableDataSource(this.allResolveData.data.pendingReportData);\n          this.allDataSource.paginator = this.paginator;\n        }\n        break;\n      default:\n        var cond = {\n          \"source\": \"\",\n          \"condition\": {\n            \"doctor_id\": this.authData.user_details._id\n          },\n          \"token\": this.authData.jwtToken\n        }\n        this.http.httpViaPost('doctor-dashboard', cond).subscribe(response => {\n          if(response.res.length > 0) {\n            this.allResolveData = response;\n            this.allDataSource = new MatTableDataSource(this.allResolveData.data.allReportData);\n          }\n        });\n        break;\n    }\n  }\n\n  openModal(data) {\n    this.dialogRef = this.dialog.open(DialogBoxComponent, data);\n    this.dialogRef.afterClosed().subscribe(result => {\n      switch (result) {\n        case \"Ok\":\n          this.dialogRef.close();\n          break;\n      }\n    });\n  }\n\n  public sendToBillerJson: any = {};\n  public billerFlug: number;\n\n  setSendBiller(index: number, event: any) {\n    this.billerFlug = event.value + 1;\n    this.sendToBillerJson[index] = event.value;\n  }\n\n  allSendToBiller(index: number) {\n    if(typeof this.sendToBillerJson[index] !== 'undefined') {\n      for(var loop = 0; loop <= this.allResolveData.data.allBillerList.length - 1; loop++) {\n        if(this.allResolveData.data.allBillerList[loop].biller_id == this.sendToBillerJson[index]) {\n          var fullname = this.allResolveData.data.allBillerList[loop].firstname + ' ' + this.allResolveData.data.allBillerList[loop].lastname;\n        }\n      }\n\n\n      let modalData: any = {\n        panelClass: 'bulkupload-dialog',\n        data: {\n          header: \"Message\",\n          message: \"Do you want to send this report to biller: \" + fullname + \" ?\",\n          button1: { text: \"Yes\" },\n          button2: { text: \"No\" },\n        }\n      };\n      this.openModal(modalData);\n\n      this.dialogRef.afterClosed().subscribe(result => {\n        switch (result) {\n          case \"Yes\":\n            var data: any = {\n              \"source\": \"patient_management\",\n              \"data\": {\n                \"id\": this.allDataSource[index]._id,\n                \"biller_id\": this.sendToBillerJson[index],\n                \"status\": 2\n              },\n              \"sourceobj\": [\"biller_id\"],\n              \"token\": this.authData\n            };\n\n            console.log(\"ooooooooooooooooo\");\n\n            this.http.httpViaPost('addorupdatedata', data).subscribe((response) => {\n              if (response.status = \"success\") {\n                let message = \"Successfully Send\";\n                let action = \"OK\";\n                this.matSnackBar.open(message, action, {\n                  duration: 2000,\n                });\n              }\n            });\n            break;\n          case \"No\":\n            this.dialogRef.close();\n            break;\n        }\n      });\n    } else {\n      let modalData: any = {\n        panelClass: 'bulkupload-dialog',\n        data: {\n          header: \"Message\",\n          message: \"Please select a biller.\",\n          button1: { text: \"\" },\n          button2: { text: \"OK\" },\n        }\n      };\n      this.openModal(modalData);\n    }\n  }\n\n  viewButton(index: number) {\n    console.log(\"View Button...\", this.allDataSource[index]);\n  }\n\n  downloadReport(report: any) {\n    if(typeof(report.download_count) == \"undefined\") {\n      report.download_count = 1;\n    } else {\n      report.download_count = report.download_count + 1;\n    }\n\n    /* Collect User Information for Download record */\n    let deviceInfo: any = this.deviceService.getDeviceInfo();\n    deviceInfo[\"isMobile\"] = this.deviceService.isMobile();\n    deviceInfo[\"isTablet\"] = this.deviceService.isTablet();\n    deviceInfo[\"isDesktop\"] = this.deviceService.isDesktop();\n    \n    /* Set downloader information */\n    var userDetails = {\n      id: this.authData.user_details._id,\n      type: this.authData.user_details.type\n    };\n\n    let postData: any = {\n      \"source\": \"report_download\",\n      \"data\": {\n        \"report_id\": report._id,\n        \"biller_id\": this.authData.user_details._id,\n        \"tech_id\": report.tech_id,\n        \"doctor_id\": report.doctor_id,\n        \"ip\": this.htmlText.ip,\n        \"download_attempt\": 1,\n        \"downloader_information\": userDetails,\n        \"device_information\": deviceInfo\n      },\n      \"sourceobj\": [\"report_id\", \"biller_id\", \"tech_id\", \"doctor_id\"],\n      \"download_count\": report.download_count,\n      \"token\": this.authData.jwtToken\n    };\n\n    this.http.httpViaPost(\"addorupdatedata\", postData).subscribe(response => {\n      if(response.status == 'success') {\n        this.matSnackBar.open(\"Start downloading.\", \"Ok\", {\n          duration: 3000\n        });\n        window.open(report.file_path, \"_blank\");\n\n        this.refreshDashboard();\n      } else {\n        this.matSnackBar.open(\"Some error occord. Please try again.\", \"Ok\", {\n          duration: 3000\n        });\n      }\n    });\n  }\n\n  refreshDashboard() {\n    let postData: any = {\n      source: \"Patient-Record-Report_view\",\n      condition: {\n        biller_id: this.authData.user_details._id\n      }\n    };\n    this.http.httpViaPost(\"biller-dashboard\", postData).subscribe(response => {\n      if(response.status == 'success') {\n        this.allResolveData = response.data;\n        //this.viewReportProcessData(this.htmlText.tableHeaderText);\n      } else {\n        this.matSnackBar.open(\"Please wait...\", \"\", {\n          duration: 1000\n        });\n\n        setTimeout(() => {\n          this.refreshDashboard();\n        }, 1000);\n      }\n    });\n  }\n\n}","<mat-card-content class=\"health_risk_report\">\n    <form class=\"example-form\" autocomplete=\"off\" name=\"patientReportViewForm\" [formGroup]=\"patientReportViewForm\">\n  <table>\n    <tr>\n\n      <td colspan=\"3\">\n        <h2 class=\"ordering_phy\">Ordering Physician:</h2>\n      </td>\n      <td colspan=\"2\">\n        <input class=\"order_input\" type=\"text\" [formControl]=\"patientReportViewForm.controls['physicalOrderingname']\"\n        (blur)=\"inputUntouch(patientReportViewForm,'physicalOrderingname')\" value=\"pdata.physicalOrdering\">\n\n      </td>\n    </tr>\n    <tr>\n      <td colspan=\"5\">\n        <h1 class=\"rm_phy\">RM-3A Clinical Report Evaluation Worksheet</h1>\n      </td>\n    </tr>\n\n    <tr>\n      <td colspan=\"3\">Patient Name:\n         <input type=\"text\" class=\"patientName\" [formControl]=\"patientReportViewForm.controls['patientName']\"\n         (blur)=\"inputUntouch(patientReportViewForm,'patientName')\">\n        </td>\n      <td colspan=\"1\">Patient Gender: <label>\n        <input type=\"radio\" value='Male' formControlName=\"gender\">Male</label> \n        <label><input type=\"radio\" value='Female' formControlName=\"gender\">Female</label></td>\n      <td colspan=\"1\">D.O.B:\n          <input class=\"order_input\" type=\"text\" matInput [formControl]=\"patientReportViewForm.controls['birthDate']\">\n          <!-- <mat-form-field>\n              <input matInput [matDatepicker]=\"picker\"  \n              formControlName=\"birthDate\" id=\"birthDate\"   >\n              <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n              <mat-datepicker #picker></mat-datepicker>\n          </mat-form-field> -->\n        </td>\n    </tr>\n\n\n    <tr>\n      <td colspan=\"3\">Test Date:\n          <mat-form-field>\n              <input matInput [matDatepicker]=\"picker4\" \n              formControlName=\"testDate\" id=\"testDate\" >\n              <mat-datepicker-toggle matSuffix [for]=\"picker4\"></mat-datepicker-toggle>\n              <mat-datepicker #picker4></mat-datepicker>\n          </mat-form-field>\n        </td>\n      <td colspan=\"1\">Tests Completed: \n          <mat-form-field>\n              <input matInput [matDatepicker]=\"picker3\" formControlName=\"testCompletedDate\" id=\"testCompletedDate\">\n              <mat-datepicker-toggle matSuffix [for]=\"picker3\"></mat-datepicker-toggle>\n              <mat-datepicker #picker3></mat-datepicker>\n          </mat-form-field>\n      </td>\n\n    </tr>\n\n\n    <!-- analytic -->\n\n\n    <tr>\n      <th>Risk Maker</th>\n      <th>Report\n        Page(s)</th>\n      <th>Current\n        Risk\n        Status</th>\n      <th>Description of Marker</th>\n      <th>Potential ICD 10 Code or other Recommendations</th>\n    </tr>\n\n    <tr>\n      <td>PTGTP </td>\n      <td> 3 </td>\n      <td><input type=\"text\" [formControl]=\"patientReportViewForm.controls['PTGTP']\"\n        (blur)=\"inputUntouch(patientReportViewForm,'PTGTP')\"></td>\n      <td>\n        <p>Helps to identify the risk of insulin resistance (Pre-diabetes &\n          diabetes), heart disease and other metabolic disorders. High\n          numbers may be associated with fatty liver and atherosclerosis</p>\n      </td>\n      <td>\n        <p>\n          If PTGVLFI and IR are above normal, and the patient\n          has not been diagnosed with Diabetes previously, use\n          the Diabetes ICD 10 codes E10.40-E13.610G (with one\n          other qualified morbidity), or use ICD 10 code G90.3\n        </p>\n      </td>\n    </tr>\n    <tr>\n      <td>PTGVLFI </td>\n      <td> 3 & 6 </td>\n      <td><input type=\"text\" [formControl]=\"patientReportViewForm.controls['PTGVLFI']\"\n        (blur)=\"inputUntouch(patientReportViewForm,'PTGVLFI')\"></td>\n      <td>\n        <p><b>Marker for Diabetes</b> - is a marker for impaired glucose\n          tolerance (IGT) and Microcirculation complications.</p>\n      </td>\n      <td>\n        <p>\n          Use the ICD 10 Diabetes Codes E10.40-E13.610 if IR and\n          PTGTP shown above are Abnormal or High Risk. Or if\n          already diagnosed use ICD 10 Code G90.3\n\n        </p>\n      </td>\n    </tr>\n\n    <tr>\n      <td>IR </td>\n      <td> 1 </td>\n      <td><input type=\"text\" [formControl]=\"patientReportViewForm.controls['IR']\"\n        (blur)=\"inputUntouch(patientReportViewForm,'IR')\"></td>\n      <td>\n        <p><b>Marker for Impaired Glucose Tolerance (IGT), Type 2 Diabetes\n            (T2DM) and cardiovascular diseases.</b>Comparing our PTGTP\n          marker vs the HE Clamp; our Marker has a sensitivity of 90%\n          and specificity of 90%</p>\n      </td>\n      <td>\n        <p>\n          E10.40-E13.610 if Diabetes has not already been\n          Diagnosed and there is also any other qualified\n          morbidity not previously diagnosed and treated (see\n          each Diabetes related ICD 10’s description). Or use ICD\n          10 Code 90.3 if both of the above have been diagnosed.\n        </p>\n      </td>\n    </tr>\n\n\n    <tr>\n      <td>ESRNO\n        Baseline </td>\n      <td> 7 </td>\n      <td><input type=\"text\" [formControl]=\"patientReportViewForm.controls['ESRNO']\"\n        (blur)=\"inputUntouch(patientReportViewForm,'ESRNO')\"></td>\n      <td>\n        <p><b>Marker for Distal Neuropathy </b> - is a marker of electrical skin\n          response to nitric oxide (NO) production and vasodilation. Low\n          numbers indicate risk of distal neuropathy.</p>\n      </td>\n      <td>\n        <p>\n          G60.3, G60.8, G60.9 or a combination of diabetes and\n          Neuropathy if Diabetes has not already been diagnosed\n          (or ICD 10 code 90.3 if already diagnosed)\n        </p>\n      </td>\n    </tr>\n    <tr>\n      <td>ESR L<br>\n        (Latency)</td>\n      <td> 7</td>\n      <td><input type=\"text\" [formControl]=\"patientReportViewForm.controls['ESRL']\"\n        (blur)=\"inputUntouch(patientReportViewForm,'ESRL')\"></td>\n      <td>\n        <p><b>Marker for Peripheral Distal Neuropathy</b> - is a marker of sweat\n          gland nerve density. Low numbers are an early detection of\n          peripheral distal neuropathy</p>\n      </td>\n      <td>\n        <p>\n          G60.3, G60.8, G60.9 or a combination of diabetes and\n          Neuropathy if Diabetes has not already been diagnosed\n        </p>\n      </td>\n    </tr>\n\n    <tr>\n      <td>Peak C<br>\n        (Amplitude)</td>\n      <td> 7 </td>\n      <td><input type=\"text\" [formControl]=\"patientReportViewForm.controls['peakC']\"\n        (blur)=\"inputUntouch(patientReportViewForm,'peakC')\"></td>\n      <td>\n        <p>Marker of sweat gland function. Low Peak C numbers are found\n          with nerve damage or Hyperhidrosis.</p>\n      </td>\n      <td>\n        <p>\n          Shows Nerve Damage and indicates additional testing\n          or use ICD 10 Code R61 if patient has excessive sweat\n          (Hyperhidrosis) which will show on the foot plates)\n        </p>\n      </td>\n    </tr>\n    <tr>\n      <td>PTG Type<br>\n        ( Enter Type 1-5 )\n      </td>\n      <td> 6</td>\n      <td><input type=\"text\" [formControl]=\"patientReportViewForm.controls['PTGtype']\"\n        (blur)=\"inputUntouch(patientReportViewForm,'PTGtype')\"></td>\n      <td>\n        <p><b>Marker for Arterial Aging</b>– The pulse wave velocity (PWV) and\n          the photoplethysmogram (PTG) are noninvasive methods for\n          evaluating the pulse wave. a score of 1 to 2 is normal. A score of\n          3 is Abnormal and a score of 4 or 5 is High</p>\n      </td>\n      <td>\n        <p>\n          Use ICD 10 code 173.9 for Peripheral Vascular Disease\n          or, depending on RI below, choose one of the\n          Atherosclerosis ICD 10 codes 170.209, 219 or 229.\n        </p>\n      </td>\n    </tr>\n\n    <tr>\n      <td>PTG CVD\n      </td>\n      <td> 3</td>\n      <td><input type=\"text\" [formControl]=\"patientReportViewForm.controls['PTGCVD']\"\n        (blur)=\"inputUntouch(patientReportViewForm,'PTGCVD')\"></td>\n      <td>\n        <p>Marker used to evaluate CVD. A score of 0 = normal, 1 =\n          borderline and 2 = abnormal.</p>\n      </td>\n      <td>\n        <p>\n          Use ICD 10 code I25.10 - Atheroslerotic\n          heart disease of native coronary artery\n        </p>\n      </td>\n    </tr>\n    <tr>\n      <td>Stress I<br>\n        (Stress Index)\n\n      </td>\n      <td> 2, 3 and 4 </td>\n      <td><input type=\"text\" [formControl]=\"patientReportViewForm.controls['stressI']\"\n        (blur)=\"inputUntouch(patientReportViewForm,'stressI')\"></td>\n      <td>\n        <p><b>Marker heart disease</b> - correlates to C-Reactive Protein\n          (CRP) and high numbers indicate a risk of Heart disease.</p>\n      </td>\n      <td>\n        <p>\n          If not already diagnosed and there is no\n          indication of PAD, CVD or Atherosclerosis, use ICD\n          10 Code I51.90\n\n        </p>\n      </td>\n    </tr>\n\n    <tr>\n      <td>RI </td>\n      <td> 3 & 6</td>\n      <td><input type=\"text\" [formControl]=\"patientReportViewForm.controls['RI']\"\n        (blur)=\"inputUntouch(patientReportViewForm,'RI')\" ></td>\n      <td>\n        <p>Marker for Atherosclerosis - an indicator of stiffness of the\n          small and medium arteries.\n        </p>\n      </td>\n      <td>\n        <p>\n          Use ICD 10 codes I70.209, 219 0r 229 if PTG R is also\n          above normal (choice of ICD 10 code 173.9 is also an\n          acceptable ICD 10 Code, at MD, NP or PA’s discretion)\n\n        </p>\n      </td>\n    </tr>\n\n    <tr>\n      <td>AIPTG<br>\n        (IPTG) </td>\n      <td>3 & 6</td>\n      <td><input type=\"text\" [formControl]=\"patientReportViewForm.controls['AIPTG']\"\n        (blur)=\"inputUntouch(patientReportViewForm,'AIPTG')\"></td>\n      <td>\n        <p><b>Marker for LDL Cholesterol Level.</b> High LDL Cholesterol is a\n          Marker for Coronary Heart Disease (CHD) –\n\n        </p>\n      </td>\n      <td>\n        <p>\n          Additional LDL Cholesterol Testing when Abnormal or\n          High Risk\n\n\n        </p>\n      </td>\n    </tr>\n    <tr>\n      <td>CIs (CI)</td>\n      <td> 5</td>\n      <td><input type=\"text\" [formControl]=\"patientReportViewForm.controls['CIsCI']\"\n        (blur)=\"inputUntouch(patientReportViewForm,'CIsCI')\"></td>\n      <td>\n        <p>Marker is an indicator that relates to Cardiac output to Body\n          Surface Area (BSA)\n\n        </p>\n      </td>\n      <td>\n        <p>\n          Shows a need for more Cardio Exercise unless\n          prohibited due to other heart disease issues\n        </p>\n      </td>\n    </tr>\n\n    <tr>\n      <td>pNN50</td>\n      <td>4</td>\n      <td><input type=\"text\" [formControl]=\"patientReportViewForm.controls['pNN50']\"\n        (blur)=\"inputUntouch(patientReportViewForm,'pNN50')\"></td>\n      <td>\n        <p>Marker for heart rhythm stability. Shows a risk of\n          Heart Rate Variability issues\n        </p>\n      </td>\n      <td>\n        <p>\n          Use ICD 10 Code R00.0\n        </p>\n      </td>\n    </tr>\n    <tr>\n      <td>RMSSD</td>\n      <td> 2 & 4 </td>\n      <td><input type=\"text\" [formControl]=\"patientReportViewForm.controls['RMSSD']\"\n        (blur)=\"inputUntouch(patientReportViewForm,'RMSSD')\"></td>\n      <td>\n        <p>Marker that reflects the electrical stability of the heart\n        </p>\n      </td>\n      <td>\n        <p>\n          Suggests additional Cardiometabolic testing for\n          potential of tachycardia or other related issues\n\n        </p>\n      </td>\n    </tr>\n\n    <tr>\n      <td>SD ba</td>\n      <td> 6 </td>\n      <td><input type=\"text\" [formControl]=\"patientReportViewForm.controls['SDba']\"\n        (blur)=\"inputUntouch(patientReportViewForm,'SDba')\"></td>\n      <td>\n        <p>Marker for angiotensin activity </p>\n      </td>\n      <td>\n        <p>\n          Angiotensin is a peptide hormone that causes\n          vasoconstriction and increase in blood pressure. It also\n          stimulates the release of aldosterone from the adrenal\n          cortex to promote sodium retention by the kidneys.\n        </p>\n      </td>\n    </tr>\n    <tr>\n      <td>DPRS</td>\n      <td> 2 & 5 </td>\n      <td><input type=\"text\" [formControl]=\"patientReportViewForm.controls['DPRS']\"\n        (blur)=\"inputUntouch(patientReportViewForm,'DPRS')\"></td>\n      <td>\n        <p>Diastolic Pressure Response to Standing (DPRS) is the\n          difference between the sitting diastolic minus the\n          standing diastolic pressure. Normal <=5 ->=10 mmHg.</p>\n      </td>\n      <td>\n        <p>\n          If above normal, additional cardio exercise may be\n          recommended and possibly the need for additional\n          Cardiometabolic testing.\n\n        </p>\n      </td>\n    </tr>\n    <tr>\n      <td>ValsR</td>\n      <td> 2 & 5 </td>\n      <td><input type=\"text\" [formControl]=\"patientReportViewForm.controls['ValsR']\"\n        (blur)=\"inputUntouch(patientReportViewForm,'ValsR')\"></td>\n      <td>\n        <p>Valsalva Ratio (ValsR.) - is the measure of the Heart Rate\n          response to Blood Pressure changes from the mechanical\n          and cardiovascular effects of the Valsalva Maneuver.</p>\n      </td>\n      <td>\n        <p>\n          If above normal, additional cardio exercise may be\n          suggested after additional Cardiometabolic testing.\n\n        </p>\n      </td>\n    </tr>\n    <tr>\n      <td>BMI<br>\n        Enter BMI\n        Score\n        (I.E. 29.1)</td>\n      <td> 1-7</td>\n      <td><input type=\"text\" [formControl]=\"patientReportViewForm.controls['BMI']\"\n        (blur)=\"inputUntouch(patientReportViewForm,'BMI')\"></td>\n      <td>\n        <p>The National Institutes of Health (NIH) now defines normal\n          weight, overweight, and obesity according to BMI rather\n          than the traditional height/weight charts. Overweight is a\n          BMI of 27.3 or more for women and 27.8 or more for men.\n          29 or above qualifies a person for Intensive Behavioral\n          Therapy for Obesity. Medicare has no deductible or Co</p>\n      </td>\n      <td>\n        <p>\n          If the BMI reading is 30 or above, Obesity\n          Counseling is paid for by Medicare with no co-pay\n          or deductable. Most Comercial Carriers are paying\n          for this program as well Click Here for Medicare\n          Guidelines or Request document via e-mail at\n          gmw@ourwhy-deas.com.\n        </p>\n      </td>\n    </tr>\n\n    <tr>\n      <td>Blood Pressure <br>\n        Systolic &\n        Diastolic\n        (120/80)</td>\n      <td>3 </td>\n      <td><input type=\"text\" [formControl]=\"patientReportViewForm.controls['bloodPressure']\"\n        (blur)=\"inputUntouch(patientReportViewForm,'bloodPressure')\"></td>\n      <td>\n        <p>As of April 2018, The American Heart Association defines\n          Hypertension as 130/80 millimeters of mercury (mm Hg)\n          and higher for all adults (The previous guidelines set the\n          threshold at 140/90 mm Hg for people younger than age\n          65, and 150/80 mm Hg for those ages 65 and older).</p>\n      </td>\n      <td>\n        <p>\n          use ICD10 Diagnostic Code I10\n\n        </p>\n      </td>\n    </tr>\n\n    <tr>\n      <td colspan=\"5\">\n        <p class=\"area_header\"><b>Patient Diagnoses & Notes:</b></p>\n        <textarea class=\"area_content\" [formControl]=\"patientReportViewForm.controls['leaveNotes']\"\n        (blur)=\"inputUntouch(patientReportViewForm,'leaveNotes')\"></textarea>\n      </td>\n    </tr>\n    <tr>\n      <td colspan=\"5\">\n        <p><b>IMPORTANT DISCLAIMER NOTE: The above are only patient recommendations and suggested ICD-10 codes based on\n            the Risk Markers identified and\n            what they have been proven to identify risk for. No Medical Doctor, NP or Pa was involved in these\n            determinations. For Insurance claim process to\n            be valid, a qualified M.D, D.O, NP or PA must establish their own independent diagnoses. </b></p>\n\n      </td>\n    </tr>\n  </table>\n    </form>\n</mat-card-content>\n\n","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators, FormGroupDirective } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpServiceService } from '../../../../../services/http-service.service';\nimport { DatePipe } from '@angular/common';\n\nimport { MAT_MOMENT_DATE_FORMATS, MomentDateAdapter } from '@angular/material-moment-adapter';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\n\n// Depending on whether rollup is used, moment needs to be imported differently.\n// Since Moment.js doesn't have a default export, we normally need to import using the `* as`\n// syntax. However, rollup creates a synthetic default module and we thus need to import it using\n// the `default as` syntax.\nimport * as _moment from 'moment';\n// tslint:disable-next-line:no-duplicate-imports\nimport { default as _rollupMoment } from 'moment';\n\nconst moment = _rollupMoment || _moment;\n\nexport const MY_FORMATS = {\n  parse: {\n    dateInput: 'LL',\n  },\n  display: {\n    dateInput: 'LL',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY',\n  },\n};\n\n@Component({\n  selector: 'app-health-risk-analysis',\n  templateUrl: './health-risk-analysis.component.html',\n  styleUrls: ['./health-risk-analysis.component.css'],\n  providers: [\n    // `MomentDateAdapter` and `MAT_MOMENT_DATE_FORMATS` can be automatically provided by importing\n    // `MatMomentDateModule` in your applications root module. We provide it at the component level\n    // here, due to limitations of our example generation script.\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\n    { provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS },\n  ],\n})\n\nexport class HealthRiskAnalysisComponent implements OnInit {\n  public userToken: any;\n  public patientSingleData: any = [];\n  public patientReportViewForm: FormGroup;\n  date = new FormControl(new Date());\n  public testDate: any;\n  startdate: any;\n  enddate: any;\n  dateofbirth: any;\n  public dialogRef: any;\n  public cookiesData: any = {};\n  public cookies_id: any;\n  public allDoctorDataArray: any = [];\n  public tech_id: any;\n  public cookies_name: any;\n  public cookies_lastname: any;\n  public allPatientReportData: any = [];\n  public paramsId: any;\n  public techId: any;\n\n  // sticky section\n  isSticky: boolean = false;\n  stickyRight: boolean = false;\n\n  // @HostListener('window:scroll', ['$event'])\n  // checkScroll() {\n  //   this.isSticky = window.pageYOffset >= 50;\n  // }\n\n  constructor(public activatedRoute: ActivatedRoute, public httpService: HttpServiceService,\n    public cookie: CookieService, public fb: FormBuilder, public router: Router,public datePipe : DatePipe) {\n    \n    this.userToken = cookie.get('jwtToken');\n    let allcookies: any;\n    allcookies = cookie.getAll();\n    this.cookiesData = JSON.parse(allcookies.user_details);\n    \n    this.patientReportViewForm = this.fb.group({\n      patientName: ['', [Validators.required, Validators.maxLength(30)]],\n      gender: ['', Validators.required],\n      birthDate: ['', Validators.required],\n      physicalOrdering: [''],\n      physicalOrderingname : [''],\n      testDate: ['', Validators.required],\n      date: ['', Validators.required],\n      testCompletedDate: ['', Validators.required],\n      PTGTP: ['', Validators.required],\n      PTGVLFI: ['', Validators.required],\n      IR: ['', Validators.required],\n      ESRNO: ['', Validators.required],\n      ESRL: ['', Validators.required],\n      peakC: ['', Validators.required],\n      PTGtype: ['', Validators.required],\n      PTGCVD: ['', Validators.required],\n      stressI: ['', Validators.required],\n      RI: ['', Validators.required],\n      AIPTG: ['', Validators.required],\n      CIsCI: ['', Validators.required],\n      pNN50: ['', Validators.required],\n      RMSSD: ['', Validators.required],\n      SDba: ['', Validators.required],\n      SDda: ['', Validators.required],\n      DPRS: ['', Validators.required],\n      ValsR: ['', Validators.required],\n      BMI: ['', Validators.required],\n      bloodPressure: ['', Validators.required],\n      leaveNotes: ['', Validators.required],\n      systolic: [''],\n      diastolic: [''],\n      status: [1],\n      user_id: []\n\n    })\n    this.getPatientData(this.activatedRoute.snapshot.params._id);\n    if(this.cookiesData.type == 'admin'){\n      this.patientReportViewForm.disable();\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  /**for validation purpose**/\n  inputUntouch(form: any, val: any) {\n    form.controls[val].markAsUntouched();\n  }\n  /**for validation purpose**/\n\n  getPatientData(id: any) {\n    var data = {\n      \"source\": \"patient_management_view\",\n      \"condition\": {\n        \"_id_object\": id\n      },\n      \"token\": this.userToken\n    }\n    \n    this.httpService.httpViaPost('datalist', data)\n      .subscribe(response => {\n\n        let patientDetails: any = response.res[0];\n        this.patientSingleData = response.res;\n        this.patientReportViewForm.controls['patientName'].patchValue(patientDetails.patientName);\n        this.patientReportViewForm.controls['physicalOrderingname'].patchValue(patientDetails.doctor_name);\n        this.patientReportViewForm.controls['gender'].patchValue(patientDetails.gender);\n        this.patientReportViewForm.controls['PTGTP'].patchValue(patientDetails.PTGtype);\n        this.patientReportViewForm.controls['PTGVLFI'].patchValue(patientDetails.PTGVLFI);\n        this.patientReportViewForm.controls['IR'].patchValue(patientDetails.IR);\n        this.patientReportViewForm.controls['ESRNO'].patchValue(patientDetails.ESRNO);\n        this.patientReportViewForm.controls['ESRL'].patchValue(patientDetails.ESRL);\n        this.patientReportViewForm.controls['peakC'].patchValue(patientDetails.peakC);\n        this.patientReportViewForm.controls['PTGtype'].patchValue(patientDetails.PTGtype);\n        this.patientReportViewForm.controls['PTGCVD'].patchValue(patientDetails.PTGCVD);\n        this.patientReportViewForm.controls['stressI'].patchValue(patientDetails.stressI);\n        this.patientReportViewForm.controls['RI'].patchValue(patientDetails.RI);\n        this.patientReportViewForm.controls['AIPTG'].patchValue(patientDetails.AIPTG);\n        this.patientReportViewForm.controls['CIsCI'].patchValue(patientDetails.CIsCI);\n        this.patientReportViewForm.controls['pNN50'].patchValue(patientDetails.pNN50);\n        this.patientReportViewForm.controls['RMSSD'].patchValue(patientDetails.RMSSD);\n        this.patientReportViewForm.controls['SDba'].patchValue(patientDetails.SDba);\n        this.patientReportViewForm.controls['DPRS'].patchValue(patientDetails.DPRS);\n        this.patientReportViewForm.controls['ValsR'].patchValue(patientDetails.ValsR);\n        this.patientReportViewForm.controls['BMI'].patchValue(patientDetails.BMI);\n        this.patientReportViewForm.controls['leaveNotes'].patchValue(patientDetails.leaveNotes);\n        this.patientReportViewForm.controls['bloodPressure'].patchValue(patientDetails.systolic + \"/\" + patientDetails.diastolic);\n        this.patientReportViewForm.controls['birthDate'].patchValue(patientDetails.birthDate);\n        // let dateOfBirth: any = patientDetails.birthDate;\n        // let dobArr: any = dateOfBirth.split(\"-\");\n        // this.patientReportViewForm.controls['birthDate'].patchValue(moment([dobArr[2], dobArr[1] - 1, dobArr[0]]));\n\n        // let sDateArr: any = patientDetails.testDate.split(\"-\");\n        // this.patientReportViewForm.controls['testDate'].patchValue(moment([sDateArr[2], sDateArr[1] - 1, sDateArr[0]]));\n\n        // let eDateArr: any = patientDetails.testCompletedDate.split(\"-\");\n        // this.patientReportViewForm.controls['testCompletedDate'].patchValue(moment([eDateArr[2], eDateArr[1] - 1, eDateArr[0]]));\n      });\n  }\n\n\n}\n","<mat-card-content class=\"encounter_wrapper\" *ngIf=\"pdata !=null \">\n  <form class=\"example-form\" autocomplete=\"off\" name=\"patientEncounterForm\" [formGroup]=\"patientEncounterForm\">\n\n    <table class=\"tableone\">\n      <tr>\n        <td colspan=\"3\">\n          <h2 class=\"header\"> Health Risk Analysis System</h2>\n        </td>\n      </tr>\n\n      <tr>\n        <td>\n          Patient Name\n          <input type=\"text\" [formControl]=\"patientEncounterForm.controls['patientName']\"\n            (blur)=\"inputUntouch(patientEncounterForm,'patientName')\">\n        </td>\n\n        <td>\n          <label> <input type=\"radio\" value='Male' [formControl]=\"patientEncounterForm.controls['gender']\">M</label>\n          <label> <input type=\"radio\" value='Female' [formControl]=\"patientEncounterForm.controls['gender']\">F</label>\n        </td>\n\n        <td>\n          <label>Date\n            <input type=\"text\" [formControl]=\"patientEncounterForm.controls['testDate']\">\n          </label>\n        </td>\n      </tr>\n\n      <tr>\n        <td>\n          Ordering Physician\n          <input type=\"text\" [formControl]=\"patientEncounterForm.controls['physicalOrdering']\"\n            value=\"pdata.physicalOrdering\">\n        </td>\n\n        <td colspan=\"2\">\n          <label>\n            D.O.B\n            <input type=\"text\" matInput [formControl]=\"patientEncounterForm.controls['birthDate']\">\n          </label>\n        </td>\n      </tr>\n\n      <tr>\n        <td>Physician’s Signature\n          <input class=\"signaturefont\" type=\"text\" matInput\n            [formControl]=\"patientEncounterForm.controls['doctor_signature']\">\n        </td>\n\n        <td colspan=\"2\">\n          <p class=\"suggest\">Suggested billing amounts per CPT Code: </p>\n          <label><input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['prefix_95923']\">95923:\n            $410 </label>\n          <label><input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['prefix_95943']\">95943:\n            $440 </label>\n          <label><input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['prefix_95921']\">95921:\n            $280 </label><br>\n          <label><input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['prefix_93923']\">93923:\n            $250 </label>\n          <label><input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['prefix_93922']\">93922:\n            $280 </label>\n        </td>\n      </tr>\n\n      <tr>\n        <td>\n          <!-- <p>1. Medicare modifier “XU” must be used on secondary CPT codes. </p>\n                    <p>2. Modifier “59” for commercial insurance must be used on secondary CPT codes </p>\n                    <p>3. Do not run this test on the same day as a Comprehensive Physical Exam or a Medicare Welnnes\n                        Exam\n                    </p> -->\n          Patient’s Insurance Carrier (s)\n          <input class=\"signaturefont\" type=\"text\">\n\n        </td>\n\n        <td colspan=\"2\">\n          <label>\n            <input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['no_diagnosis_detected']\">\n            No Diagnoses Established\n          </label>\n        </td>\n      </tr>\n    </table>\n\n\n    <mat-card-content class=\"second_table\">\n      <table class=\"tabletwo\">\n        <tr>\n          <td colspan=\"2\">\n            <h2 class=\"red_para\">ICD 10 DIAGNOSTIC CODES TO BE USED WITH CPT CODE: 95921 (where 95943 is\n              less or\n              not allowed), and 95923 </h2>\n          </td>\n        </tr>\n\n        <tr>\n          <td class=\"widther\">\n        <tr>\n          <td><input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['E0840']\"> </td>\n          <td> E08.40 Type 1 Diabetes W/ Neurological Manifestations, Not Stated as Uncontrolled</td>\n        </tr>\n        </td>\n        <td class=\"widther\">\n          <tr>\n            <td><input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['G603']\"></td>\n            <td> G60.3 Idiopathic progressive neuropathy</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td> <input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['E1041']\"></td>\n          <td>E10.41 Type 1 Diabetes Mellitus W/ Diabetic Mononeuropathy</td>\n        </tr>\n        </td>\n\n        <td>\n          <tr>\n            <td> <input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['G608']\"></td>\n            <td>G60.8 Other hereditary and idiopathic neuropathies</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td> <input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['E1042']\"></td>\n          <td> E10.42 Type 1 Diabetes Mellitus W/ Diabetic Polyneuropathy</td>\n        </tr>\n        </td>\n\n        <td>\n          <tr>\n            <td> <input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['G629']\"></td>\n            <td>G62.9 Polyneuropathy, unspecified</td>\n          </tr>\n        </td>\n        </tr>\n\n\n\n\n\n        <tr>\n          <td>\n        <tr>\n          <td> </td>\n          <td> </td>\n        </tr>\n        </td>\n\n        <td>\n          <tr>\n            <td> <input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['G609']\"></td>\n            <td>G60.9 Hereditary and idiopathic neuropathy, unspecified</td>\n          </tr>\n        </td>\n        </tr>\n\n\n\n\n\n\n\n\n\n        <tr>\n          <td>\n        <tr>\n          <td><input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['E1043']\"></td>\n          <td>E10.43 Type 1 Diabetes Mellitus W/ Diabetic Autonomic (Poly) Neuropathy</td>\n        </tr>\n        </td>\n\n        <td>\n          <tr>\n            <td><input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['G9009']\"></td>\n            <td>G90.09 Other idiopathic peripheral autonomic neuropathy</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td> <input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['E1044']\"></td>\n          <td>E10.44 Type 1 Diabetes Mellitus W/ Diabetic Amyotrophy</td>\n        </tr>\n        </td>\n\n        <td>\n          <tr>\n            <td> <input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['G903']\"></td>\n            <td>G90.3 Multi-system degeneration of the autonomic nervous system</td>\n          </tr>\n          <tr>\n            <td></td>\n            <td></td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td><input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['E1049']\"></td>\n          <td>E10.49 Type 1 Diabetes Mellitus W/ Other Diabetic Neurological Complications</td>\n        </tr>\n        </td>\n\n        <td>\n          <tr>\n            <td><input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['G9050']\"></td>\n            <td>G90.50 Complex regional pain syndrome I, unspecified</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td><input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['E10610']\"></td>\n          <td>E10.610 Type 1 Diabetes (Juvenile) W/ diabetic Neuropathic Arthropathy</td>\n        </tr>\n        </td>\n\n        <td>\n          <tr>\n            <td> <input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['G9059']\"></td>\n            <td>G90.59 Complex regional pain syndrome I of other specified site</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td><input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['E119']\"></td>\n          <td>E11.9 Type 2 Diabetes Without Complications (non-Medicare)</td>\n        </tr>\n        </td>\n\n        <td>\n          <tr>\n            <td> <input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['R000']\"></td>\n            <td>{{R000Text}}</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td><input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['E1141']\"></td>\n          <td>E11.41 Type 2 Diabetes Mellitus W/ Diabetic Mononeuropathy</td>\n        </tr>\n        </td>\n\n        <td>\n          <tr>\n            <td> <input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['R55']\"></td>\n            <td>R55 Vasovagal Syndrome/Syncope and collapse</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td><input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['E1142']\"></td>\n          <td>E11.42 Type 2 Diabetes Mellitus W/ Diabetic Polyneuropathy</td>\n        </tr>\n        </td>\n\n        <td>\n          <tr>\n            <td> <input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['R7301']\"></td>\n            <td>R73.01 Impaired fasting glucose (Non-Medicare)</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td><input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['E1143']\"></td>\n          <td>E11.43 Type 2 Diabetes W/ Autonomic Neuropathy</td>\n        </tr>\n        </td>\n\n        <td>\n          <tr>\n            <td> <input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['R733']\"></td>\n            <td>R73.03 Prediabetes (Non-Medicare)</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td><input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['E1144']\"></td>\n          <td>E11.44 Type 2 Diabetes Mellitus W/Diabetic Amyotrophy</td>\n        </tr>\n        </td>\n\n        <td>\n          <tr>\n            <td> <input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['G9050']\"></td>\n            <td>G90.50 Complex regional pain syndrome I, unspecified</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td><input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['E1149']\"></td>\n          <td>E11.49 Type 2 Diabetes Mellitus W/ Other Diabetic Neurological Complications</td>\n        </tr>\n        </td>\n\n        <td>\n          <tr>\n            <td><input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['G90511']\"></td>\n            <td>G90.511 Complex regional pain syndrome I of right upper limb</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td><input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['E850']\"></td>\n          <td>E85.0 Mediterranean Fever</td>\n        </tr>\n        </td>\n\n        <td>\n\n          <tr>\n            <td><input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['G90512']\"></td>\n            <td>G90.512 Complex regional pain syndrome I of left upper limb</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td><input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['E851']\"></td>\n          <td>E85.1 Neuropathic Heredofamilial Amyloidosis</td>\n        </tr>\n        </td>\n\n        <td>\n          <tr>\n            <td><input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['G90513']\"></td>\n            <td>G90.513 Complex regional pain syndrome I of upper limb, bilateral</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td><input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['E853']\"></td>\n          <td>E85.3 Secondary Systemic Amyloidosis</td>\n        </tr>\n        </td>\n\n        <td>\n          <tr>\n            <td><input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['G90521']\"></td>\n            <td>G90.521 Complex regional pain syndrome I of right lower limb</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td> <input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['E854']\"></td>\n          <td>E85.4 Organ – Limited Amyloidosis</td>\n        </tr>\n        </td>\n\n        <td>\n          <tr>\n            <td><input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['G90522']\"> </td>\n            <td>G90.522 Complex regional pain syndrome I of left lower limb</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td> <input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['G200']\"></td>\n          <td>G20.0 Parkinson’s Disease</td>\n        </tr>\n        </td>\n\n        <td>\n          <tr>\n            <td> <input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['G90523']\"></td>\n            <td> G90.523 Complex regional pain syndrome I of lower limb, bilateral </td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td><input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['G230']\"></td>\n          <td>G23.0 Hallervorden – Spatz Disease</td>\n        </tr>\n        </td>\n        <td>\n          <tr>\n            <td><input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['G9059']\"></td>\n            <td> G90.59 Complex regional pain syndrome I of other specified site</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td><input type=\"checkbox\"></td>\n          <td>G23.1 Progressive supranuclear ophthalmoplegia [Steele-Richardson\n            Olszewski]</td>\n        </tr>\n        </td>\n        <td>\n          <tr>\n            <td><input type=\"checkbox\"></td>\n            <td>I95.1 Orthostatic Hypotension</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td> <input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['G232']\"></td>\n          <td>G23.2 Striatonigral degeneration </td>\n        </tr>\n        </td>\n\n        <td>\n          <tr>\n            <td> <input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['R61']\"></td>\n            <td>R61 Generalized hyperhidrosis </td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td><input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['G238']\"></td>\n          <td>G23.8 Other specified degenerative diseases of basal ganglia</td>\n        </tr>\n        </td>\n\n        <td>\n          <tr>\n            <td></td>\n            <td></td>\n          </tr>\n        </td>\n        </tr>\n        <!-- block part -->\n        <!-- <tr>\n          <td>\n        <tr>\n          <td><input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['E1342']\"></td>\n          <td>E13.42 Other Specified Diabetes Mellitus W/ Diabetic Polyneuropathy</td>\n        </tr>\n        </td>\n\n        <td>\n          <tr>\n            <td> <input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['G90513']\"></td>\n            <td>G90.513 Complex Regional Pain Syndrome I of Upper Limb, Bilateral</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td><input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['E1343']\"></td>\n          <td>E13.43 Other Specified Diabetes Mellitus W/ Diabetic Autonomic (poly) Neuropathy</td>\n        </tr>\n        </td>\n        <td>\n          <tr>\n            <td><input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['G90519']\"></td>\n            <td> G90.519 Complex Regional Pain Syndrome I of Unspecified Upper Limb</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n            <tr>\n              <td><input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['E1344']\"></td>\n              <td>E13.44 Other Specified Diabetes Mellitus W/ Diabetic Amyotrophy</td>\n            </tr>\n        </td>\n\n        <td>\n          <tr>\n            <td><input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['G90521']\"></td>\n            <td>G90.521 Complex Regional Pain Syndrome I of Right Lower Limb</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n            <label class=\"spacer_o\">\n              <input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['E1349']\"> E13.49\n            </label>\n            Other Specified Diabetes Mellitus\n            W/\n            Other Diabetic Neurological Complication\n          </td>\n\n          <td>\n            <label class=\"spacer_o\">\n              <input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['G90522']\"> G90.522\n            </label>\n            Complex Regional Pain Syndrome I\n            of\n            Left Lower Limb\n          </td>\n        </tr>\n\n        <tr>\n          <td>\n            <label class=\"spacer_o\">\n              <input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['E13610']\"> E13.610\n            </label>\n            Other Specified Diabetes\n            Mellitus\n            W/ Diabetic Neuropathic Arthropathy Familial\n          </td>\n\n          <td>\n            <label class=\"spacer_o\">\n              <input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['G90523']\"> G90.523\n            </label>\n            Complex Regional Pain Syndrome I\n            of\n            Lower Limb, Bilateral\n          </td>\n        </tr>\n\n        <tr>\n          <td>\n            <label class=\"spacer_o\">\n              <input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['E850']\"> E85.0\n            </label>\n            Mediterranean Fever\n          </td>\n\n          <td>\n            <label class=\"spacer_o\">\n              <input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['G90529']\"> G90.529\n            </label>\n            Reflex Sympathetic Dystrophy of\n            Lower Limb\n          </td>\n        </tr>\n\n        <tr>\n          <td>\n            <label class=\"spacer_o\">\n              <input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['E851']\"> E85.1\n            </label>\n            Neuropathic Heredofamilial\n            Amyloidosis\n          </td>\n\n          <td>\n            <label class=\"spacer_o\">\n              <input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['R61']\">R61\n            </label>\n            Generalized Hyperhidrosis\n          </td>\n        </tr>\n\n        <tr>\n          <td>\n            <label class=\"spacer_o\">\n              <input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['E852']\"> E85.2\n            </label>\n            Heredofamilial Amyloidosis,\n            Unspecified\n          </td>\n\n          <td> </td>\n        </tr>\n\n        <tr>\n          <td>\n            <label class=\"spacer_o\">\n              <input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['E853']\"> E85.3\n            </label>\n            Secondary Systemic Amyloidosis\n          </td>\n\n          <td> </td>\n        </tr> -->\n        <!-- end -->\n        <tr>\n          <td colspan=\"2\">\n            <p class=\"red_para\">ICD 10 DIAGNOSTIC CODES TO BE USED WITH CPT CODE: 93922 or 93923 (93923 1\n              UNIT FOR UPPER AND 1\n              UNIT FOR LOWER EXTREMITY) REQUIRED ANSILLARY TESTING: ABI, WAVE FORM DOPPLER OR PULSE WAVE\n              /PHOTO PLETHYSMOGRAPHY DEVICE\n            </p>\n          </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td><input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['E1059']\"></td>\n          <td>E10.59 Type 1 Diabetes W/ Other Circulatory Complications</td>\n        </tr>\n        </td>\n\n        <td>\n\n          <tr>\n            <td><input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['I70222']\"></td>\n            <td>I70.222 Atherosclerosis of native arteries of extremities with rest pain, left\n              leg</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td><input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['E1159']\"></td>\n          <td>E11.59 Type 2 Diabetes W/ Other Circulatory Complications</td>\n        </tr>\n        </td>\n\n        <td>\n          <tr>\n            <td> <input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['I70223']\"></td>\n            <td>I70.223 Atherosclerosis of native arteries of extremities with rest pain,\n              Bilateral legs</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n\n        <tr>\n          <td> <input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['G458']\"></td>\n          <td>G45.8 Other Transient Cerebral Ischemic Attacks and Related Syndrome</td>\n        </tr>\n        </td>\n\n        <td>\n          <tr>\n            <td><input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['I70228']\"></td>\n            <td>I70.228 Atherosclerosis of native arteries of extremities with rest pain,\n              other extremity</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td><input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['I10']\"></td>\n          <td>I10 Hypertension Unspecified (Non-Medicare) <b>130/80</b> </td>\n        </tr>\n        </td>\n\n        <td>\n          <tr>\n            <td><input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['I70268']\"></td>\n            <td>I70.268 Atherosclerosis of native arteries of extremities with gangrene, Other extremity</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td><input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['I251']\"></td>\n          <td>I25.10 Atherosclerotic heart disease of native coronary artery w/o angina pectoris</td>\n        </tr>\n        </td>\n\n        <td>\n          <tr>\n            <td><input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['I7025']\"></td>\n            <td>I70.25 Atherosclerosis of native arteries of other extremities with Ulceration</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td><input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['I519']\"></td>\n          <td>I51.9 Heart disease, unspecified (Non-Medicare)</td>\n        </tr>\n        </td>\n\n        <td>\n          <tr>\n            <td><input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['I721']\"></td>\n            <td>I72.1 Aneurysm of artery of upper extremity</td>\n          </tr>\n        </td>\n        </tr>\n\n        <tr>\n          <td>\n        <tr>\n          <td><input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['I70209']\"></td>\n          <td>I70.209 Atherosclerosis Native Arteries Extremities Unspecified (non-Medicare)</td>\n        </tr>\n        </td>\n\n        <td>\n          <tr>\n            <td> <input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['I724']\"></td>\n            <td>I72.4 Aneurysm of artery of lower extremity </td>\n          </tr>\n        </td>\n        </tr>\n        <tr>\n          <td>\n        <tr>\n          <td><input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['I70211']\"></td>\n          <td>I70.211 Atherosclerosis of native arteries of extremities with intermittent\n            Claudication, right leg</td>\n        </tr>\n        </td>\n        <td>\n          <tr>\n            <td> <input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['I7389']\"></td>\n            <td>I73.89 Other specified peripheral vascular diseases</td>\n          </tr>\n        </td>\n        </tr>\n        <tr>\n          <td>\n        <tr>\n          <td><input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['I70212']\"></td>\n          <td>I70.212 Atherosclerosis of native arteries of extremities with intermittent\n            Claudication, left leg</td>\n        </tr>\n        </td>\n        <td>\n          <tr>\n            <td> <input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['I739']\"></td>\n            <td>I73.9 Peripheral vascular disease, unspecified</td>\n          </tr>\n        </td>\n        </tr>\n        <tr>\n          <td>\n        <tr>\n          <td> <input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['I70213']\"> </td>\n          <td> I70.213 Atherosclerosis of native arteries of extremities with intermittent\n            Claudication, bilateral legs</td>\n        </tr>\n        </td>\n        <td>\n          <tr>\n            <td> <input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['R0889']\"></td>\n            <td>R08.8 9 Other Specific Signs & Symptoms of Circulatory &\n              Respiratory Systems</td>\n          </tr>\n        </td>\n        </tr>\n\n\n\n\n        <tr>\n          <td rowspan=\"2\">\n            <p>ADDITIONAL POTENTIAL HEALTH RISKS</p>\n            <textarea class=\"additionalnotes additionalnotes3\"\n              [formControl]=\"patientEncounterForm.controls['healthRisk']\"\n              (blur)=\"inputUntouch(patientEncounterForm,'healthRisk')\"></textarea>\n          </td>\n\n          <td>\n            <!-- <label class=\"spacer_o\">\n              <input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['I723']\">I72.3\n            </label>Aneurysm of Artery Iliac Crest\n\n            <br>\n\n            <label class=\"spacer_o\">\n              <input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['I724']\">I72.4\n            </label>\n            Aneurysm of Artery of Lower\n            Extremity\n\n            <br>\n\n            <label class=\"spacer_o\">\n              <input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['I739']\">I73.9\n            </label>\n            Peripheral\n            Vascular Disease,\n            Unspecified\n            <br>\n\n            <label class=\"spacer_o\">\n              <input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['Z139']\">Z13.9\n            </label>\n            Screening For Hypertension\n\n            <br>\n\n            <label class=\"spacer_o\">\n              <input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['I10']\">I10\n            </label>\n            Hypertension\n            Unspecified\n\n            <br>\n\n            <label class=\"spacer_o\">\n              <input type=\"checkbox\" [formControl]=\"patientEncounterForm.controls['prefix_1951']\">195.1\n            </label>\n            Orthostatic Hypotension\n\n            <br> -->\n\n            <p>Pre-Existing Diagnoses: </p>\n            <textarea class=\"additionalnotes\"\n              [formControl]=\"patientEncounterForm.controls['additional_chart_notes']\"></textarea>\n            <br>\n            <p>Additional Physician’s Chart Notes:</p>\n            <textarea class=\"additionalnotes\"\n              [formControl]=\"patientEncounterForm.controls['additional_chart_notes']\"></textarea>\n          </td>\n        </tr>\n      </table>\n\n    </mat-card-content>\n  </form>\n</mat-card-content>","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators, FormGroupDirective } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpServiceService } from '../../../../../services/http-service.service';\nimport { DatePipe } from '@angular/common';\nimport { MAT_MOMENT_DATE_FORMATS, MomentDateAdapter } from '@angular/material-moment-adapter';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\n\n// Depending on whether rollup is used, moment needs to be imported differently.\n// Since Moment.js doesn't have a default export, we normally need to import using the `* as`\n// syntax. However, rollup creates a synthetic default module and we thus need to import it using\n// the `default as` syntax.\nimport * as _moment from 'moment';\n// tslint:disable-next-line:no-duplicate-imports\nimport { default as _rollupMoment } from 'moment';\n\nconst moment = _rollupMoment || _moment;\n\nexport const MY_FORMATS = {\n  parse: {\n    dateInput: 'LL',\n  },\n  display: {\n    dateInput: 'LL',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY',\n  },\n};\n\n@Component({\n  selector: 'app-healthrisk-system-encounter',\n  templateUrl: './healthrisk-system-encounter.component.html',\n  styleUrls: ['./healthrisk-system-encounter.component.css'],\n  providers: [\n    // `MomentDateAdapter` and `MAT_MOMENT_DATE_FORMATS` can be automatically provided by importing\n    // `MatMomentDateModule` in your applications root module. We provide it at the component level\n    // here, due to limitations of our example generation script.\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\n    { provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS },\n  ],\n})\nexport class HealthriskSystemEncounterComponent implements OnInit {\n\n  public userToken: any;\n  public patientSingleData: any = [];\n  public patientEncounterForm: FormGroup;\n  date = new FormControl(new Date());\n  public testDate: any;\n  startdate: any;\n  enddate: any;\n  dateofbirth: any;\n  public dialogRef: any;\n  public cookiesData: any = {};\n  public cookies_id: any;\n  public allDoctorDataArray: any = [];\n  public tech_id: any;\n  public cookies_name: any;\n  public cookies_lastname: any;\n  public allPatientReportData: any = [];\n  public paramsId: any;\n  public techId: any;\n  public pdata: any = null;\n\n  public R000Text: string = \"R00.0 Tachycardia, unspecified Abnormal Heart Rhythm & Electrical Stability\";\n  // sticky section\n  isSticky: boolean = false;\n  stickyRight: boolean = false;\n\n  // @HostListener('window:scroll', ['$event'])\n  // checkScroll() {\n  //   this.isSticky = window.pageYOffset >= 50;\n  // }\n\n  constructor(public activatedRoute: ActivatedRoute, public httpService: HttpServiceService, public cookie: CookieService, public fb: FormBuilder, public router: Router, public datePipe: DatePipe) {\n    this.userToken = cookie.get('jwtToken');\n    let allcookies: any;\n    allcookies = cookie.getAll();\n    this.cookiesData = JSON.parse(allcookies.user_details);\n\n    this.getAllDoctorData();\n    var dateformat = datePipe.transform(new Date(), \"MM-dd-yyyy\");\n    this.patientEncounterForm = this.fb.group({\n      patientName: ['', [Validators.required, Validators.maxLength(30)]],\n      gender: ['', Validators.required],\n      birthDate: ['', Validators.required],\n      physicalOrdering: [''],\n      doctor_signature: ['', Validators.required],\n      prefix_95923: [true],\n      prefix_95943: [true],\n      prefix_95921: [true],\n      prefix_93923: [true],\n      prefix_93922: [true],\n      no_diagnosis_detected: [false],\n\n      //old\n      E1040: [false],\n      E854: [false],\n      E1041: [false],\n      E858: [false],\n      E1042: [false],\n      E859: [false],\n      E1043: [false],\n      G230: [false],\n      E1044: [false],\n      G231: [false],\n      E1049: [false],\n      G232: [false],\n      E1065: [false],\n      G238: [false],\n      E10610: [false],\n      G603: [false],\n      E119: [false],\n      G608: [false],\n      E1141: [false],\n      G609: [false],\n      E1142: [false],\n      R7301: [false],\n      R202: [false],\n      E1143: [false],\n      R7303: [false],\n      G9009: [false],\n      E1144: [false],\n      G9050: [false],\n      E1149: [false],\n      G9059: [false],\n      E1159: [false],\n      G903: [false],\n      E1165: [false],\n      R733: [false],\n      E1340: [false],\n      G90511: [false],\n      E1341: [false],\n      G90512: [false],\n      E1342: [false],\n      G90513: [false],\n      E1343: [false],\n      G90519: [false],\n      E1344: [false],\n      G90521: [false],\n      E1349: [false],\n      G90522: [false],\n      E13610: [false],\n      G90523: [false],\n      E850: [false],\n      G90529: [false],\n      E851: [false],\n      R61: [false],\n      E852: [false],\n      E853: [false],\n\n      I700: [false],\n      I7025: [false],\n      I70209: [false],\n      I0269: [false],\n      I70219: [false],\n      I70399: [false],\n      I7022: [false],\n      I70499: [false],\n      R000: [false],\n      I70599: [false],\n      R55: [false],\n      I519: [false],\n      I251: [false],\n      I721: [false],\n      healthRisk: [''],\n      I723: [false],\n      I724: [false],\n      I739: [false],\n      Z139: [false],\n      I10: [false],\n      prefix_1951: [false],\n\n      //new\n      E0840: [false],\n      R0889: [false],\n      I70213: [false],\n      G629: [false],\n      I70212: [false],\n      G200: [false],\n      I7389: [false],\n      I70211: [false],\n      E1059: [false],\n      I70222: [false],\n      I2510: [false],\n      I70268: [false],\n      I70223: [false],\n      G458: [false],\n      I70228: [false],\n\n      additional_chart_notes: [],\n\n      testDate: ['', Validators.required],\n\n      signDate: [dateformat],\n\n      AIPTG_H: [''],\n    });\n    if (this.cookiesData.type == 'admin') {\n      this.patientEncounterForm.disable();\n    }\n    this.getPatientData(this.activatedRoute.snapshot.params._id);\n  }\n\n  ngOnInit() {\n  }\n\n  /**for validation purpose**/\n  inputUntouch(form: any, val: any) {\n    form.controls[val].markAsUntouched();\n  }\n  /**for validation purpose**/\n\n  getAllDoctorData() {\n    var data: any = {\n      \"source\": \"users_view_doctor\",\n      \"condition\": {\n        \"tech_id_object\": this.techId\n      },\n      \"token\": this.userToken\n    };\n\n    this.httpService.httpViaPost('datalist', data)\n      .subscribe(response => {\n        let result: any = {};\n        result = response.res;\n        this.allDoctorDataArray = result;\n\n      });\n  }\n\n  getPatientData(id: any) {\n    var data = {\n      \"source\": \"patient_management_condition_view\",\n      \"condition\": {\n        \"_id_object\": id\n      },\n      \"token\": this.userToken\n    }\n    this.httpService.httpViaPost('datalist', data)\n      .subscribe((response) => {\n        let patientDetails: any = {};\n        patientDetails = response.res[0];\n        this.pdata = response.res[0];\n        this.patientSingleData = response.res;\n        console.log(\"encounter form dataaa\", this.patientSingleData);\n        this.patientEncounterForm.controls['patientName'].patchValue(patientDetails.patientName);\n        this.patientEncounterForm.controls['physicalOrdering'].patchValue(patientDetails.doctor_name);\n        this.patientEncounterForm.controls['doctor_signature'].patchValue(patientDetails.doctor_signature);\n        this.patientEncounterForm.controls['gender'].patchValue(patientDetails.gender);\n        this.patientEncounterForm.controls['testDate'].patchValue(patientDetails.testDate);\n        this.patientEncounterForm.controls['birthDate'].patchValue(patientDetails.birthDate);\n\n        let fieldText: string = '';\n        console.log('patientDetails', patientDetails);\n        if (patientDetails.AIPTG_H != 0)\n          fieldText += '** ' + patientDetails.AIPTG_H + '\\n\\n';\n        if (patientDetails.AIPTGis_A != 0)\n          fieldText += '** ' + patientDetails.AIPTGis_A + '\\n\\n';\n        if (patientDetails.Cl_H != 0)\n          fieldText += '** ' + patientDetails.Cl_H + '\\n\\n';\n        if (patientDetails.DPRS_H != 0)\n          fieldText += '** ' + patientDetails.DPRS_H + '\\n\\n';\n        if (patientDetails.ValsR_A != 0)\n          fieldText += '** ' + patientDetails.ValsR_A + '\\n\\n';\n        if (patientDetails.ValsR_H != 0)\n          fieldText += '** ' + patientDetails.ValsR_H + '\\n\\n';\n        if (patientDetails.Cl_A != 0)\n          fieldText += '** ' + patientDetails.Cl_A + '\\n\\n';\n        if (patientDetails.StressI_A != 0)\n          fieldText += '** ' + patientDetails.StressI_A + '\\n\\n';\n        if (patientDetails.DPRS_A != 0)\n          fieldText += '** ' + patientDetails.DPRS_A + '\\n\\n';\n        // if (patientDetails.R000 != 0) {\n        //   // fieldText += '** ' + this.pdata.R000 + '\\n\\n';\n        //   // console.log('fieldText', fieldText);\n        // }\n        if (patientDetails.StressI_H != 0)\n          fieldText += '** ' + patientDetails.StressI_H + '\\n\\n';\n\n        if (patientDetails.SDbais_A_H != 0)\n          fieldText += '** ' + patientDetails.SDbais_A_H + '\\n\\n';\n\n        if (patientDetails.SDda_H != 0)\n          fieldText += '** ' + patientDetails.SDda_H + '\\n\\n';\n\n        if (patientDetails.SDdais_A != 0)\n          fieldText += '** ' + patientDetails.SDdais_A + '\\n\\n';\n\n        // console.log('this.pdata.AIPTG_H', fieldText);\n\n        this.patientEncounterForm.controls['healthRisk'].patchValue(fieldText);\n\n        if (this.pdata.I10 == 1)\n          this.patientEncounterForm.controls['I10'].patchValue(true);\n\n        if (this.pdata.I739 == 1)\n          this.patientEncounterForm.controls['I739'].patchValue(true);\n\n        if (this.pdata.I70209 == 1)\n          this.patientEncounterForm.controls['I70209'].patchValue(true);\n\n        if (this.pdata.R733 == 1)\n          this.patientEncounterForm.controls['R733'].patchValue(true);\n\n        if (this.pdata.E119 == 1)\n          this.patientEncounterForm.controls['E119'].patchValue(true);\n\n        if (this.pdata.E1142 == 1)\n          this.patientEncounterForm.controls['E1142'].patchValue(true);\n\n        if (this.pdata.E1149 == 1)\n          this.patientEncounterForm.controls['E1149'].patchValue(true);\n\n        if (this.pdata.E1159 == 1)\n          this.patientEncounterForm.controls['E1159'].patchValue(true);\n\n        if (this.pdata.G603 == 1)\n          this.patientEncounterForm.controls['G603'].patchValue(true);\n\n        if (this.pdata.I519 == 1)\n          this.patientEncounterForm.controls['I519'].patchValue(true);\n\n        if (this.pdata.E1041 == 1)\n          this.patientEncounterForm.controls['E1041'].patchValue(true);\n\n        if (this.pdata.E858 == 1)\n          this.patientEncounterForm.controls['E858'].patchValue(true);\n\n        if (this.pdata.E1042 == 1)\n          this.patientEncounterForm.controls['E1042'].patchValue(true);\n\n        if (this.pdata.E859 == 1)\n          this.patientEncounterForm.controls['E859'].patchValue(true);\n\n        if (this.pdata.E1043 == 1)\n          this.patientEncounterForm.controls['E1043'].patchValue(true);\n\n        if (this.pdata.G230 == 1)\n          this.patientEncounterForm.controls['G230'].patchValue(true);\n\n        if (this.pdata.E1044 == 1)\n          this.patientEncounterForm.controls['E1044'].patchValue(true);\n\n        if (this.pdata.G231 == 1)\n          this.patientEncounterForm.controls['G231'].patchValue(true);\n\n        if (this.pdata.E1049 == 1)\n          this.patientEncounterForm.controls['E1049'].patchValue(true);\n\n        if (this.pdata.G232 == 1)\n          this.patientEncounterForm.controls['G232'].patchValue(true);\n\n        if (this.pdata.E1065 == 1)\n          this.patientEncounterForm.controls['E1065'].patchValue(true);\n\n        if (this.pdata.G238 == 1)\n          this.patientEncounterForm.controls['G238'].patchValue(true);\n\n        if (this.pdata.I251 == 1)\n          this.patientEncounterForm.controls['I251'].patchValue(true);\n\n        if (this.pdata.R000 != 0) {\n          this.patientEncounterForm.controls['R000'].patchValue(true);\n          this.R000Text = \"R00.0 Tachycardia, unspecified \" + this.pdata.R000;\n          console.log(this.R000Text);\n        }\n\n        if (this.pdata.E0840 == 1) {\n          this.patientEncounterForm.controls['E0840'].patchValue(true);\n\n        }\n        if (this.pdata.R0889 == 1)\n          this.patientEncounterForm.controls['E0840'].patchValue(true);\n\n        if (this.pdata.I70213 == 1)\n          this.patientEncounterForm.controls['I70213'].patchValue(true);\n\n        if (this.pdata.G629 == 1)\n          this.patientEncounterForm.controls['G629'].patchValue(true);\n\n        if (this.pdata.I70212 == 1)\n          this.patientEncounterForm.controls['I70212'].patchValue(true);\n\n        if (this.pdata.G200 == 1)\n          this.patientEncounterForm.controls['G200'].patchValue(true);\n\n        if (this.pdata.I7389 == 1)\n          this.patientEncounterForm.controls['E0840'].patchValue(true);\n\n        if (this.pdata.I70211 == 1)\n          this.patientEncounterForm.controls['I70211'].patchValue(true);\n\n        if (this.pdata.E1059 == 1)\n          this.patientEncounterForm.controls['E1059'].patchValue(true);\n\n        if (this.pdata.I70222 == 1)\n          this.patientEncounterForm.controls['I70222'].patchValue(true);\n\n        if (this.pdata.I2510 == 1)\n          this.patientEncounterForm.controls['I2510'].patchValue(true);\n\n        if (this.pdata.I70268 == 1)\n          this.patientEncounterForm.controls['I70268'].patchValue(true);\n\n        if (this.pdata.I70223 == 1)\n          this.patientEncounterForm.controls['I70223'].patchValue(true);\n\n        if (this.pdata.G458 == 1)\n          this.patientEncounterForm.controls['G458'].patchValue(true);\n\n        if (this.pdata.I70228 == 1)\n          this.patientEncounterForm.controls['I70228'].patchValue(true);\n\n        /* After complete all patch value */\n        if (this.patientEncounterForm.value.E1040 == false &&\n          this.patientEncounterForm.value.E854 == false &&\n          this.patientEncounterForm.value.E1041 == false &&\n          this.patientEncounterForm.value.E858 == false &&\n          this.patientEncounterForm.value.E1042 == false &&\n          this.patientEncounterForm.value.E859 == false &&\n          this.patientEncounterForm.value.E1043 == false &&\n          this.patientEncounterForm.value.G230 == false &&\n          this.patientEncounterForm.value.E1044 == false &&\n          this.patientEncounterForm.value.G231 == false &&\n          this.patientEncounterForm.value.E1049 == false &&\n          this.patientEncounterForm.value.G232 == false &&\n          this.patientEncounterForm.value.E1065 == false &&\n          this.patientEncounterForm.value.G238 == false &&\n          this.patientEncounterForm.value.E10610 == false &&\n          this.patientEncounterForm.value.G603 == false &&\n          this.patientEncounterForm.value.E119 == false &&\n          this.patientEncounterForm.value.G608 == false &&\n          this.patientEncounterForm.value.E1141 == false &&\n          this.patientEncounterForm.value.G609 == false &&\n          this.patientEncounterForm.value.E1142 == false &&\n          this.patientEncounterForm.value.R202 == false &&\n          this.patientEncounterForm.value.E1143 == false &&\n          this.patientEncounterForm.value.G9009 == false &&\n          this.patientEncounterForm.value.E1144 == false &&\n          this.patientEncounterForm.value.G9050 == false &&\n          this.patientEncounterForm.value.E1149 == false &&\n          this.patientEncounterForm.value.G9059 == false &&\n          this.patientEncounterForm.value.E1159 == false &&\n          this.patientEncounterForm.value.G903 == false &&\n          this.patientEncounterForm.value.E1165 == false &&\n          this.patientEncounterForm.value.R733 == false &&\n          this.patientEncounterForm.value.E1340 == false &&\n          this.patientEncounterForm.value.G90511 == false &&\n          this.patientEncounterForm.value.E1341 == false &&\n          this.patientEncounterForm.value.G90512 == false &&\n          this.patientEncounterForm.value.E1342 == false &&\n          this.patientEncounterForm.value.G90513 == false &&\n          this.patientEncounterForm.value.E1343 == false &&\n          this.patientEncounterForm.value.G90519 == false &&\n          this.patientEncounterForm.value.E1344 == false &&\n          this.patientEncounterForm.value.G90521 == false &&\n          this.patientEncounterForm.value.E1349 == false &&\n          this.patientEncounterForm.value.G90522 == false &&\n          this.patientEncounterForm.value.E13610 == false &&\n          this.patientEncounterForm.value.G90523 == false &&\n          this.patientEncounterForm.value.E850 == false &&\n          this.patientEncounterForm.value.G90529 == false &&\n          this.patientEncounterForm.value.E851 == false &&\n          this.patientEncounterForm.value.R61 == false &&\n          this.patientEncounterForm.value.E852 == false &&\n          this.patientEncounterForm.value.E853 == false) {\n          // Set false value\n          this.patientEncounterForm.controls['prefix_95923'].patchValue(false);\n          this.patientEncounterForm.controls['prefix_95921'].patchValue(false);\n        }\n\n        if (this.patientEncounterForm.value.I700 == false &&\n          this.patientEncounterForm.value.I7025 == false &&\n          this.patientEncounterForm.value.I70209 == false &&\n          this.patientEncounterForm.value.I0269 == false &&\n          this.patientEncounterForm.value.I70219 == false &&\n          this.patientEncounterForm.value.I70399 == false &&\n          this.patientEncounterForm.value.I7022 == false &&\n          this.patientEncounterForm.value.I70499 == false &&\n          this.patientEncounterForm.value.R000 == false &&\n          this.patientEncounterForm.value.I70599 == false &&\n          this.patientEncounterForm.value.R55 == false &&\n          this.patientEncounterForm.value.I519 == false &&\n          this.patientEncounterForm.value.I251 == false &&\n          this.patientEncounterForm.value.I721 == false &&\n          this.patientEncounterForm.value.I723 == false &&\n          this.patientEncounterForm.value.I724 == false &&\n          this.patientEncounterForm.value.I739 == false &&\n          this.patientEncounterForm.value.Z139 == false &&\n          this.patientEncounterForm.value.I10 == false &&\n          this.patientEncounterForm.value.prefix_1951 == false) {\n          // Set false value\n          this.patientEncounterForm.controls['prefix_93923'].patchValue(false);\n        }\n\n        if (this.patientEncounterForm.controls['prefix_95923'].value == false &&\n          this.patientEncounterForm.controls['prefix_95921'].value == false &&\n          this.patientEncounterForm.controls['prefix_93923'].value == false) {\n          this.patientEncounterForm.controls['no_diagnosis_detected'].patchValue(true);\n        }\n      });\n  }\n  \n}\n","<app-doctor-header *ngIf=\"cookiesData.type == 'doctor' \"></app-doctor-header>\n<app-admin-header *ngIf=\"cookiesData.type == 'admin' \"></app-admin-header>\n\n<ng-container>\n\n  <mat-card-content class=\"patient_report_wrapper \">\n    <!-- <mat-card-content class=\"patient_item_section\" [ngClass]=\"{'mat-elevation-z5' : true, 'sticky' : isSticky}\"> -->\n    <mat-card-content class=\"patient_item_section mat-elevation-z8\">\n      <mat-card-content class=\"title_wrapper report_header\">\n        {{ htmlText.header }}\n      </mat-card-content>\n\n      <mat-card class=\"add_form\" *ngIf=\"allPatientReportData.report_type == 'mannual'\">\n\n        <mat-card-content>\n          <form class=\"example-form\" autocomplete=\"off\" name=\"patientAddEditForm\" [formGroup]=\"patientAddEditForm\"\n            (ngSubmit)=\"patientAddEditFormSubmit()\">\n            <fieldset class=\"field_setmodel\">\n              <legend class=\"legend_model\">Patients Information:</legend>\n              <span class=\"wrapper\">\n                <mat-card-content>\n                  <label>Patient Name</label>\n                  <mat-form-field>\n                    <input matInput [formControl]=\"patientAddEditForm.controls['patientName']\"\n                      (blur)=\"inputUntouch(patientAddEditForm,'patientName')\">\n                    <mat-error *ngIf=\"patientAddEditForm.controls['patientName'].touched && !patientAddEditForm.controls['patientName'].valid\n                         && patientAddEditForm.controls['patientName'].errors.required\">\n                      Patient Name can not be blank</mat-error>\n                  </mat-form-field>\n                </mat-card-content>\n\n                <mat-card-content>\n                  <label>Patient Gender</label>\n                  <input type=\"radio\" value='Male' formControlName=\"gender\">Male\n                  <input type=\"radio\" value='Female' formControlName=\"gender\">Female\n                </mat-card-content>\n\n                <mat-card-content>\n                  <label> DOB</label>\n                  <mat-form-field>\n                    <input type=\"text\" matInput [formControl]=\"patientAddEditForm.controls['birthDate']\">\n                  </mat-form-field>\n                  <!-- <mat-form-field>\n                    <input matInput [matDatepicker]=\"picker\" formControlName=\"birthDate\" id=\"birthDate\">\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                    <mat-datepicker #picker></mat-datepicker>\n                  </mat-form-field> -->\n                </mat-card-content>\n\n                <mat-card-content>\n                  <label>Ordering Physician</label>\n                  <mat-form-field>\n\n                    <mat-select formControlName=\"physicalOrdering\" placeholder=\"Select a Doctor\">\n                      <mat-option [value]=0>Select a Doctor</mat-option>\n                      <mat-option *ngFor=\"let doc of allDoctorDataArray;\" value=\"{{ doc._id }}\">\n                        {{ doc.fullName }}\n                      </mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </mat-card-content>\n\n                <mat-card-content>\n                  <label> Test Date</label>\n                  <mat-form-field>\n                    <input matInput formControlName=\"testDate\">\n                  </mat-form-field>\n\n                </mat-card-content>\n\n                <mat-card-content>\n                  <label> Test Completed</label>\n                  <mat-form-field>\n                    <input matInput formControlName=\"testCompletedDate\">\n                  </mat-form-field>\n                </mat-card-content>\n              </span>\n            </fieldset>\n            <br><br>\n            <fieldset class=\"field_setmodel\">\n              <legend class=\"legend_model\">Rm-3a status report</legend>\n              <span class=\"test_date_wrapper\">\n                <mat-card-content>\n                  <label>PTGTP</label>\n                  <mat-form-field>\n                    <input matInput [formControl]=\"patientAddEditForm.controls['PTGPT']\"\n                      (blur)=\"inputUntouch(patientAddEditForm,'PTGPT')\">\n                    <mat-error *ngIf=\"patientAddEditForm.controls['PTGPT'].touched && !patientAddEditForm.controls['PTGPT'].valid\n            && patientAddEditForm.controls['PTGPT'].errors.required\">\n                      PTGTP field can not be blank</mat-error>\n                  </mat-form-field>\n                </mat-card-content>\n                <mat-card-content>\n                  <label> PTGVLFI </label>\n                  <mat-form-field>\n                    <input matInput [formControl]=\"patientAddEditForm.controls['PTGVLFI']\"\n                      (blur)=\"inputUntouch(patientAddEditForm,'PTGVLFI')\">\n                    <mat-error *ngIf=\"patientAddEditForm.controls['PTGVLFI'].touched && !patientAddEditForm.controls['PTGVLFI'].valid\n              && patientAddEditForm.controls['PTGVLFI'].errors.required\">\n                      PTGVLFI field can not be blank</mat-error>\n                  </mat-form-field>\n                </mat-card-content>\n\n                <mat-card-content>\n                  <label> IR </label>\n                  <mat-form-field>\n                    <input matInput [formControl]=\"patientAddEditForm.controls['IR']\"\n                      (blur)=\"inputUntouch(patientAddEditForm,'IR')\">\n                    <mat-error *ngIf=\"patientAddEditForm.controls['IR'].touched && !patientAddEditForm.controls['IR'].valid\n              && patientAddEditForm.controls['IR'].errors.required\">\n                      IR field can not be blank</mat-error>\n\n                  </mat-form-field>\n                </mat-card-content>\n\n                <mat-card-content>\n                  <label> ESRNO<br> (Baseline) </label>\n                  <mat-form-field>\n                    <input matInput [formControl]=\"patientAddEditForm.controls['ESRNO']\"\n                      (blur)=\"inputUntouch(patientAddEditForm,'ESRNO')\">\n                    <mat-error *ngIf=\"patientAddEditForm.controls['ESRNO'].touched && !patientAddEditForm.controls['ESRNO'].valid\n              && patientAddEditForm.controls['ESRNO'].errors.required\">\n                      ESRNO field can not be blank</mat-error>\n                  </mat-form-field>\n                </mat-card-content>\n\n                <mat-card-content>\n                  <label> ESR L<br> (Latency) </label>\n                  <mat-form-field>\n                    <input matInput [formControl]=\"patientAddEditForm.controls['ESRL']\"\n                      (blur)=\"inputUntouch(patientAddEditForm,'ESRL')\">\n                    <mat-error *ngIf=\"patientAddEditForm.controls['ESRL'].touched && !patientAddEditForm.controls['ESRL'].valid\n              && patientAddEditForm.controls['ESRL'].errors.required\">\n                      ESR L field can not be blank</mat-error>\n                  </mat-form-field>\n                </mat-card-content>\n\n                <mat-card-content>\n                  <label> Peak C <br> (Amplitude) </label>\n                  <mat-form-field>\n                    <input matInput [formControl]=\"patientAddEditForm.controls['peakC']\"\n                      (blur)=\"inputUntouch(patientAddEditForm,'peakC')\">\n                    <mat-error *ngIf=\"patientAddEditForm.controls['peakC'].touched && !patientAddEditForm.controls['peakC'].valid\n              && patientAddEditForm.controls['peakC'].errors.required\">\n                      Peak C field can not be blank</mat-error>\n                  </mat-form-field>\n                </mat-card-content>\n\n                <mat-card-content>\n                  <label> PTG Type <br> (Enter\n                    Type 1-5) </label>\n                  <mat-form-field>\n                    <input matInput [formControl]=\"patientAddEditForm.controls['PTGtype']\"\n                      (blur)=\"inputUntouch(patientAddEditForm,'PTGtype')\">\n                    <mat-error *ngIf=\"patientAddEditForm.controls['PTGtype'].touched && !patientAddEditForm.controls['PTGtype'].valid\n              && patientAddEditForm.controls['PTGtype'].errors.required\">\n                      PTG Type field can not be blank</mat-error>\n                  </mat-form-field>\n                </mat-card-content>\n\n\n                <mat-card-content>\n                  <label> PTG CVD </label>\n                  <mat-form-field>\n                    <input matInput [formControl]=\"patientAddEditForm.controls['PTGCVD']\"\n                      (blur)=\"inputUntouch(patientAddEditForm,'PTGCVD')\">\n                    <mat-error *ngIf=\"patientAddEditForm.controls['PTGCVD'].touched && !patientAddEditForm.controls['PTGCVD'].valid\n              && patientAddEditForm.controls['PTGCVD'].errors.required\">\n                      PTG CVD field can not be blank</mat-error>\n                  </mat-form-field>\n                </mat-card-content>\n                <mat-card-content>\n                  <label> Stress I <br> (Stress Index) </label>\n                  <mat-form-field>\n                    <input matInput [formControl]=\"patientAddEditForm.controls['stressI']\"\n                      (blur)=\"inputUntouch(patientAddEditForm,'stressI')\">\n                    <mat-error *ngIf=\"patientAddEditForm.controls['stressI'].touched && !patientAddEditForm.controls['stressI'].valid\n              && patientAddEditForm.controls['stressI'].errors.required\">\n                      Stress I field can not be blank</mat-error>\n                  </mat-form-field>\n                </mat-card-content>\n                <mat-card-content>\n                  <label> RI </label>\n                  <mat-form-field>\n                    <input matInput [formControl]=\"patientAddEditForm.controls['RI']\"\n                      (blur)=\"inputUntouch(patientAddEditForm,'RI')\">\n                    <mat-error *ngIf=\"patientAddEditForm.controls['RI'].touched && !patientAddEditForm.controls['RI'].valid\n              && patientAddEditForm.controls['RI'].errors.required\">\n                      RI can not be blank</mat-error>\n                  </mat-form-field>\n                </mat-card-content>\n\n\n                <mat-card-content>\n                  <label> AIPTG<br> (IPTG) </label>\n                  <mat-form-field>\n                    <input matInput [formControl]=\"patientAddEditForm.controls['AIPTG']\"\n                      (blur)=\"inputUntouch(patientAddEditForm,'AIPTG')\">\n                    <mat-error *ngIf=\"patientAddEditForm.controls['AIPTG'].touched && !patientAddEditForm.controls['AIPTG'].valid\n              && patientAddEditForm.controls['AIPTG'].errors.required\">\n                      AIPTG can not be blank</mat-error>\n                  </mat-form-field>\n                </mat-card-content>\n\n                <mat-card-content>\n                  <label> CIs (CI) </label>\n                  <mat-form-field>\n                    <input matInput [formControl]=\"patientAddEditForm.controls['CIsCI']\"\n                      (blur)=\"inputUntouch(patientAddEditForm,'CIsCI')\">\n                    <mat-error *ngIf=\"patientAddEditForm.controls['CIsCI'].touched && !patientAddEditForm.controls['CIsCI'].valid\n              && patientAddEditForm.controls['CIsCI'].errors.required\">\n                      CIs (CI) can not be blank</mat-error>\n                  </mat-form-field>\n                </mat-card-content>\n\n                <mat-card-content>\n                  <label> pNN50 </label>\n                  <mat-form-field>\n                    <input matInput [formControl]=\"patientAddEditForm.controls['pNN50']\"\n                      (blur)=\"inputUntouch(patientAddEditForm,'pNN50')\">\n                    <mat-error *ngIf=\"patientAddEditForm.controls['pNN50'].touched && !patientAddEditForm.controls['pNN50'].valid\n              && patientAddEditForm.controls['pNN50'].errors.required\">\n                      pNN50 can not be blank</mat-error>\n                  </mat-form-field>\n                </mat-card-content>\n\n\n                <mat-card-content>\n                  <label> RMSSD </label>\n                  <mat-form-field>\n                    <input matInput [formControl]=\"patientAddEditForm.controls['RMSSD']\"\n                      (blur)=\"inputUntouch(patientAddEditForm,'RMSSD')\">\n                    <mat-error *ngIf=\"patientAddEditForm.controls['RMSSD'].touched && !patientAddEditForm.controls['RMSSD'].valid\n              && patientAddEditForm.controls['RMSSD'].errors.required\">\n                      RMSSD can not be blank</mat-error>\n                  </mat-form-field>\n                </mat-card-content>\n\n                <mat-card-content>\n                  <label> SD ba - </label>\n                  <mat-form-field>\n                    <input matInput [formControl]=\"patientAddEditForm.controls['SDba']\"\n                      (blur)=\"inputUntouch(patientAddEditForm,'SDba')\">\n                    <mat-error *ngIf=\"patientAddEditForm.controls['SDba'].touched && !patientAddEditForm.controls['SDba'].valid\n              && patientAddEditForm.controls['SDba'].errors.required\">\n                      SD ba - can not be blank</mat-error>\n                  </mat-form-field>\n                </mat-card-content>\n\n                <mat-card-content>\n                  <label> SD da </label>\n                  <mat-form-field>\n                    <input matInput [formControl]=\"patientAddEditForm.controls['SDda']\"\n                      (blur)=\"inputUntouch(patientAddEditForm,'SDda')\">\n                    <mat-error *ngIf=\"patientAddEditForm.controls['SDda'].touched && !patientAddEditForm.controls['SDda'].valid\n              && patientAddEditForm.controls['SDda'].errors.required\">\n                      SD da can not be blank</mat-error>\n                  </mat-form-field>\n                </mat-card-content>\n\n                <mat-card-content>\n                  <label>DPRS </label>\n                  <mat-form-field>\n                    <input matInput [formControl]=\"patientAddEditForm.controls['DPRS']\"\n                      (blur)=\"inputUntouch(patientAddEditForm,'DPRS')\">\n                    <mat-error *ngIf=\"patientAddEditForm.controls['DPRS'].touched && !patientAddEditForm.controls['DPRS'].valid\n              && patientAddEditForm.controls['DPRS'].errors.required\">\n                      DPRS can not be blank</mat-error>\n                  </mat-form-field>\n                </mat-card-content>\n\n                <mat-card-content>\n                  <label>ValsR. </label>\n                  <mat-form-field>\n                    <input matInput [formControl]=\"patientAddEditForm.controls['ValsR']\"\n                      (blur)=\"inputUntouch(patientAddEditForm,'ValsR')\">\n                    <mat-error *ngIf=\"patientAddEditForm.controls['ValsR'].touched && !patientAddEditForm.controls['ValsR'].valid\n              && patientAddEditForm.controls['ValsR'].errors.required\">\n                      ValsR can not be blank</mat-error>\n                  </mat-form-field>\n                </mat-card-content>\n\n                <mat-card-content>\n                  <label>BMI<br> Enter BMI Score\n                    (I.E. 29.1) </label>\n                  <mat-form-field>\n                    <input matInput [formControl]=\"patientAddEditForm.controls['BMI']\"\n                      (blur)=\"inputUntouch(patientAddEditForm,'BMI')\">\n                    <mat-error *ngIf=\"patientAddEditForm.controls['BMI'].touched && !patientAddEditForm.controls['BMI'].valid\n              && patientAddEditForm.controls['BMI'].errors.required\">\n                      BMI can not be blank</mat-error>\n                  </mat-form-field>\n                </mat-card-content>\n\n                <mat-card-content>\n                  <label>Blood\n                    Pressure<br> Systolic &\n                    Diastolic\n                    (120/80) </label>\n                  <mat-form-field>\n                    <input matInput [formControl]=\"patientAddEditForm.controls['bloodPressure']\"\n                      (blur)=\"inputUntouch(patientAddEditForm,'bloodPressure')\">\n                    <mat-error *ngIf=\"patientAddEditForm.controls['bloodPressure'].touched && !patientAddEditForm.controls['bloodPressure'].valid\n              && patientAddEditForm.controls['bloodPressure'].errors.required\">\n                      Blood Pressure can not be blank</mat-error>\n                  </mat-form-field>\n                </mat-card-content>\n              </span>\n\n              <span class=\"patient_diagnotes\">\n                <label>Patient Diagnoses & Notes:</label>\n                <mat-form-field class=\"example-full-width\">\n\n                  <textarea matInput placeholder=\"Leave a comment\"\n                    [formControl]=\"patientAddEditForm.controls['leaveNotes']\"\n                    (blur)=\"inputUntouch(patientAddEditForm,'leaveNotes')\">\n         </textarea>\n                  <mat-error *ngIf=\"patientAddEditForm.controls['leaveNotes'].touched && !patientAddEditForm.controls['leaveNotes'].valid\n         && patientAddEditForm.controls['leaveNotes'].errors.required\">\n                    Patient Diagnoses & Notes can not be blank</mat-error>\n                </mat-form-field>\n              </span>\n            </fieldset>\n            <!-- <span>\n            <img class=\"bulkView\" width=450px src=\"assets/images/logo.png\">\n          </span> -->\n\n          </form>\n        </mat-card-content>\n      </mat-card>\n\n      <section *ngIf=\"allPatientReportData.report_type == 'file'\">\n        <mat-card-content class=\"document_wrapper\">\n          <span class=\"imageGallery\">\n            <img [src]=\"ImageData[sliderCount]\">\n          </span>\n          <mat-card-content>\n            <button mat-fab class=\"prev\" type=\"button\" (click)=\"playSlider('preview');\">\n              <<</button> <button mat-fab class=\"next\" type=\"button\" (click)=\"playSlider('next');\"> >>\n            </button>\n            <!-- <button mat-fab (click)=\"playSlider('play');\">PLAY</button> -->\n          </mat-card-content>\n          <span class=\"itemCounter\">Report {{ sliderCount + 1 }} of {{ ImageData.length }}</span>\n        </mat-card-content>\n      </section>\n    </mat-card-content>\n\n    <mat-card-content class=\"patient_item_section mat-elevation-z8\" id=\"fixedScroll\">\n\n      <mat-tab-group class=\"previewTabs\">\n        <mat-tab label=\"Evalueation worksheet\" *ngIf=\"cookiesData.type == 'admin'\">\n          <ng-template matTabContent>\n            <app-health-risk-analysis></app-health-risk-analysis>\n          </ng-template>\n        </mat-tab>\n\n        <mat-tab label=\"Encounter Form\">\n          <ng-template matTabContent>\n            <app-healthrisk-system-encounter></app-healthrisk-system-encounter>\n          </ng-template>\n        </mat-tab>\n\n        <mat-tab label=\"Superbill For Obesity\" *ngIf=\"BMIFlug > 29\">\n          <ng-template matTabContent>\n            <app-system-superbill></app-system-superbill>\n          </ng-template>\n        </mat-tab>\n      </mat-tab-group>\n\n    </mat-card-content>\n\n  </mat-card-content>\n\n  <mat-toolbar class=\"patient_preview\" *ngIf=\"cookiesData.type == 'doctor'\">\n\n    <mat-form-field color=\"warn\">\n      <mat-label>Select A Biller</mat-label>\n      <mat-select placeholder=\"Select A Biller\" [(ngModel)]=\"selectBiller\">\n        <mat-option *ngFor=\"let bd of biller; let i = index;\" [value]=\"bd.biller_id\">\n          {{ bd.firstname }} {{ bd.lastname }}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n\n    <button mat-button type=\"button\" (click)=\"reportSign('back');\">Sign & Back</button>\n\n    <button mat-button type=\"button\" (click)=\"reportSign('next');\">Sign & Next</button>\n  </mat-toolbar>\n\n</ng-container>\n\n\n<app-admin-footer></app-admin-footer>","import { Component, OnInit, Inject, ViewChild, HostListener } from '@angular/core';\nimport {\n  FormBuilder, FormControl, FormGroup, Validators, FormGroupDirective\n} from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpServiceService } from '../../../../services/http-service.service'\nimport { DatePipe } from '@angular/common';\nimport { CookieService } from 'ngx-cookie-service';\nimport { MatSnackBar } from '@angular/material';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from \"@angular/material\";\nimport { DialogBoxComponent } from '../../../common/dialog-box/dialog-box.component';\nimport { CommonFunction } from '../../../../class/common/common-function';\nimport { environment } from '../../../../../environments/environment';\n\nimport { MAT_MOMENT_DATE_FORMATS, MomentDateAdapter } from '@angular/material-moment-adapter';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\n\n// Depending on whether rollup is used, moment needs to be imported differently.\n// Since Moment.js doesn't have a default export, we normally need to import using the `* as`\n// syntax. However, rollup creates a synthetic default module and we thus need to import it using\n// the `default as` syntax.\nimport * as _moment from 'moment';\n// tslint:disable-next-line:no-duplicate-imports\nimport { default as _rollupMoment } from 'moment';\n\nconst moment = _rollupMoment || _moment;\nexport interface DialogData {\n  message: string;\n}\n\nexport const MY_FORMATS = {\n  parse: {\n    dateInput: 'LL',\n  },\n  display: {\n    dateInput: 'LL',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY',\n  },\n};\n\n@Component({\n  selector: 'app-patient-report-view',\n  templateUrl: './patient-report-view.component.html',\n  styleUrls: ['./patient-report-view.component.css'],\n  providers: [\n    // `MomentDateAdapter` and `MAT_MOMENT_DATE_FORMATS` can be automatically provided by importing\n    // `MatMomentDateModule` in your applications root module. We provide it at the component level\n    // here, due to limitations of our example generation script.\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\n    { provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS },\n  ],\n})\n\nexport class PatientReportViewComponent implements OnInit {\n\n  @ViewChild(FormGroupDirective, { static: false }) formDirective: FormGroupDirective;\n  public htmlText: any = { nav: 'Add Patient', header: \"Physician Report\" };\n  public patientAddEditForm: FormGroup;\n  public userToken: any;\n  date = new FormControl(new Date());\n  public testDate: any;\n  startdate: any;\n  enddate: any;\n  dateofbirth: any;\n  public dialogRef: any;\n  public cookiesData: any = {};\n  public cookies_id: any;\n  public allDoctorDataArray: any = [];\n  public tech_id: any;\n  public cookies_name: any;\n  public cookies_lastname: any;\n  public allPatientReportData: any = [];\n  public paramsId: any;\n  public techId: any;\n  public BMIFlug: number = 0;\n\n  public sliderCount: number = 0;\n  public ImageData = [];\n  public biller: any = [];\n  public selectBiller: any;\n  public reportID: any;\n\n  constructor(public fb: FormBuilder, public activeRoute: ActivatedRoute,\n    public router: Router, public httpService: HttpServiceService, private datePipe: DatePipe,\n    public cookie: CookieService, public snakBar: MatSnackBar, public dialog: MatDialog,\n    public commonFunction: CommonFunction) {\n\n    this.userToken = cookie.get('jwtToken');\n    let allcookies: any;\n    allcookies = cookie.getAll();\n\n    this.cookiesData = JSON.parse(allcookies.user_details);\n    if(typeof this.cookiesData.doctor_signature === 'undefined' && this.cookiesData.type == 'doctor') {\n      /* Open modal */\n      let modalData: any = {\n        panelClass: 'bulkupload-dialog',\n        data: {\n          header: \"Message\",\n          message: \"Please upload your signature first.\",\n          button1: { text: \"Upload\" },\n          button2: { text: \"Close\" },\n        }\n      }\n      this.openModal(modalData);\n\n      this.dialogRef.afterClosed().subscribe(result => {\n        switch (result) {\n          case \"Upload\":\n            this.dialogRef.close();\n            this.router.navigateByUrl('/doctor/signature-management?view=' + activeRoute.snapshot.params._id);\n            break;\n          case \"Close\":\n            this.dialogRef.close();\n            this.router.navigateByUrl('/doctor/dashboard');\n            break;\n        }\n      });\n    }\n    this.cookies_id = this.cookiesData._id;\n    this.cookies_name = this.cookiesData.firstname;\n    this.cookies_lastname = this.cookiesData.lastname;\n    this.paramsId = activeRoute.snapshot.params._id;\n    // var dateOfBirth = this.datePipe.transform(this.dateofbirth, \"dd-MM-yyyy\");\n    // var dateformat = this.datePipe.transform(new Date(), \"dd-MM-yyyy\");\n\n    /* Set Meta Data */\n    this.commonFunction.setTitleMetaTags();\n\n    this.patientAddEditForm = this.fb.group({\n      patientName:        ['', [ Validators.required, Validators.maxLength(30) ]],\n      gender:             ['', [ Validators.required ]],\n      birthDate:          ['', []],\n      physicalOrdering:   ['', []],\n      testDate:           ['', []],\n      date:               ['', [ Validators.required ]],\n      testCompletedDate:  ['', [ Validators.required ]],\n      PTGPT:              ['', [ Validators.required ]],\n      PTGVLFI:            ['', [ Validators.required ]],\n      IR:                 ['', [ Validators.required ]],\n      ESRNO:              ['', [ Validators.required ]],\n      ESRL:               ['', [ Validators.required ]],\n      peakC:              ['', [ Validators.required ]],\n      PTGtype:            ['', [ Validators.required ]],\n      PTGCVD:             ['', [ Validators.required ]],\n      stressI:            ['', [ Validators.required ]],\n      RI:                 ['', [ Validators.required ]],\n      AIPTG:              ['', [ Validators.required ]],\n      CIsCI:              ['', [ Validators.required ]],\n      pNN50:              ['', [ Validators.required ]],\n      RMSSD:              ['', [ Validators.required ]],\n      SDba:               ['', [ Validators.required ]],\n      SDda:               ['', [ Validators.required ]],\n      DPRS:               ['', [ Validators.required ]],\n      ValsR:              ['', [ Validators.required ]],\n      BMI:                ['', [ Validators.required ]],\n      bloodPressure:      ['', [ Validators.required ]],\n      leaveNotes:         ['', [ Validators.required ]],\n      systolic:           ['', []],\n      diastolic:          ['', []],\n      report_type:        ['', []],\n      status:             [1, []],\n    });\n    \n    if(this.cookiesData.type == 'admin'){\n      this.patientAddEditForm.disable();\n    }\n\n\n    /* Get biller data */\n    var data: any = {\n      \"source\": \"doctor_to_biller\",\n      \"condition\": {\n        \"_id_object\": this.cookies_id\n      },\n      \"token\": this.userToken\n    };\n    this.httpService.httpViaPost(\"datalist\", data).subscribe((response) => {\n      if (response.status = \"success\") {\n        this.biller = response.res;\n      }\n    });\n  }\n\n  ngOnInit() {\n    if(this.activeRoute.snapshot == null || this.activeRoute.snapshot.url == null || this.activeRoute.snapshot.url[3]==null || this.activeRoute.snapshot.url[3].path != 'file' ) {\n      this.setDefaultValue();\n      this.getAllDoctorData();\n    } else {\n      this.activeRoute.data.forEach((data) => {\n        this.ImageData = data.data.res[0].data;\n      });\n    }\n    \n  }\n\n  setDefaultValue() {\n    this.activeRoute.data.forEach((data) => {\n\n      let reportDetails: any = data.data.res;\n      \n      this.techId = reportDetails[0].user_id;\n      this.allPatientReportData = reportDetails[0];\n      this.BMIFlug = Math.round(reportDetails[0].BMI_value);\n     \n      this.ImageData = reportDetails[0].images_url;\n     \n      this.reportID = reportDetails[0]._id;\n      this.patientAddEditForm.controls['patientName'].patchValue(reportDetails[0].patientName);\n      this.patientAddEditForm.controls['gender'].patchValue(reportDetails[0].gender);\n      this.patientAddEditForm.controls['physicalOrdering'].patchValue(reportDetails[0].doctor_id);\n      this.patientAddEditForm.controls['birthDate'].patchValue(reportDetails[0].birthDate);\n\n      //let sDateArr: any = reportDetails[0].testDate.split(\"-\");\n      this.patientAddEditForm.controls['testDate'].patchValue(reportDetails[0].testDate);\n\n      // let eDateArr: any = reportDetails[0].testCompletedDate.split(\"-\");\n      this.patientAddEditForm.controls['testCompletedDate'].patchValue(reportDetails[0].testCompletedDate);\n\n      this.patientAddEditForm.controls['PTGPT'].patchValue(reportDetails[0].PTGPT);\n      this.patientAddEditForm.controls['PTGVLFI'].patchValue(reportDetails[0].PTGVLFI);\n      this.patientAddEditForm.controls['IR'].patchValue(reportDetails[0].IR);\n      \n      // let dateOfBirth: any = reportDetails[0].birthDate;\n      // let dobArr: any = dateOfBirth.split(\"-\");\n      // this.patientAddEditForm.controls['birthDate'].patchValue(moment([dobArr[2], dobArr[1], dobArr[0]]));\n\n      this.patientAddEditForm.controls['ESRNO'].patchValue(reportDetails[0].ESRNO);\n      this.patientAddEditForm.controls['ESRL'].patchValue(reportDetails[0].ESRL);\n      this.patientAddEditForm.controls['peakC'].patchValue(reportDetails[0].peakC);\n      this.patientAddEditForm.controls['PTGtype'].patchValue(reportDetails[0].PTGtype);\n      this.patientAddEditForm.controls['PTGCVD'].patchValue(reportDetails[0].PTGCVD);\n      this.patientAddEditForm.controls['stressI'].patchValue(reportDetails[0].stressI);\n      this.patientAddEditForm.controls['RI'].patchValue(reportDetails[0].RI);\n      this.patientAddEditForm.controls['AIPTG'].patchValue(reportDetails[0].AIPTG);\n      this.patientAddEditForm.controls['CIsCI'].patchValue(reportDetails[0].CIsCI);\n      this.patientAddEditForm.controls['pNN50'].patchValue(reportDetails[0].pNN50);\n      this.patientAddEditForm.controls['RMSSD'].patchValue(reportDetails[0].RMSSD);\n      this.patientAddEditForm.controls['SDba'].patchValue(reportDetails[0].SDba);\n      this.patientAddEditForm.controls['SDda'].patchValue(reportDetails[0].SDda);\n      this.patientAddEditForm.controls['DPRS'].patchValue(reportDetails[0].DPRS);\n      this.patientAddEditForm.controls['ValsR'].patchValue(reportDetails[0].ValsR);\n      this.patientAddEditForm.controls['BMI'].patchValue(reportDetails[0].BMI);\n      this.patientAddEditForm.controls['bloodPressure'].patchValue(reportDetails[0].systolic + \"/\" + reportDetails[0].diastolic);\n      this.patientAddEditForm.controls['leaveNotes'].patchValue(reportDetails[0].leaveNotes);\n      this.patientAddEditForm.controls['status'].patchValue(reportDetails[0].status);\n\n\n      /* Disable fied */\n      this.patientAddEditForm.controls['patientName'].disable();\n      this.patientAddEditForm.controls['gender'].disable();\n      this.patientAddEditForm.controls['physicalOrdering'].disable();\n      this.patientAddEditForm.controls['birthDate'].disable();\n      this.patientAddEditForm.controls['testDate'].disable();\n      this.patientAddEditForm.controls['testCompletedDate'].disable();\n      this.patientAddEditForm.controls['PTGPT'].disable();\n      this.patientAddEditForm.controls['PTGVLFI'].disable();\n      this.patientAddEditForm.controls['IR'].disable();\n      this.patientAddEditForm.controls['ESRNO'].disable();\n      this.patientAddEditForm.controls['ESRL'].disable();\n      this.patientAddEditForm.controls['peakC'].disable();\n      this.patientAddEditForm.controls['PTGtype'].disable();\n      this.patientAddEditForm.controls['PTGCVD'].disable();\n      this.patientAddEditForm.controls['stressI'].disable();\n      this.patientAddEditForm.controls['RI'].disable();\n      this.patientAddEditForm.controls['AIPTG'].disable();\n      this.patientAddEditForm.controls['CIsCI'].disable();\n      this.patientAddEditForm.controls['pNN50'].disable();\n      this.patientAddEditForm.controls['RMSSD'].disable();\n      this.patientAddEditForm.controls['SDba'].disable();\n      this.patientAddEditForm.controls['SDda'].disable();\n      this.patientAddEditForm.controls['DPRS'].disable();\n      this.patientAddEditForm.controls['ValsR'].disable();\n      this.patientAddEditForm.controls['BMI'].disable();\n      this.patientAddEditForm.controls['bloodPressure'].disable();\n      this.patientAddEditForm.controls['leaveNotes'].disable();\n      this.patientAddEditForm.controls['status'].disable();\n    })\n  }\n\n  getAllDoctorData() {\n    var data: any = {\n      \"source\": \"users_view_doctor\",\n      \"condition\": {\n        \"tech_id_object\": this.techId\n      },\n      \"token\": this.userToken\n    }\n\n    this.httpService.httpViaPost('datalist', data).subscribe((response) => {\n      this.allDoctorDataArray = response.res;\n    });\n  }\n\n  /**for validation purpose**/\n  inputUntouch(form: any, val: any) {\n    form.controls[val].markAsUntouched();\n  }\n  /**for validation purpose**/\n\n\n  patientAddEditFormSubmit() {\n    let x: any;\n    for (x in this.patientAddEditForm.controls) {\n      this.patientAddEditForm.controls[x].markAsTouched();\n    }\n\n    const myString  = this.patientAddEditForm.controls.bloodPressure.value;\n    const splits    = myString.split('/');\n    var startDate   = this.datePipe.transform(this.startdate, \"dd-MM-yyyy\");\n    var dateOfBirth = this.datePipe.transform(this.dateofbirth, \"dd-MM-yyyy\");\n    var endDate     = this.datePipe.transform(this.enddate, \"dd-MM-yyyy\");\n    var dateformat  = this.datePipe.transform(new Date(), \"dd-MM-yyyy\");\n\n    this.patientAddEditForm.value.testDate = startDate;\n    this.patientAddEditForm.value.testCompletedDate = endDate;\n    this.patientAddEditForm.value.birthDate = dateOfBirth;\n    this.patientAddEditForm.controls['testDate'].patchValue(startDate);\n    this.patientAddEditForm.controls['testCompletedDate'].patchValue(endDate);\n    this.patientAddEditForm.controls['birthDate'].patchValue(dateOfBirth);\n    this.patientAddEditForm.controls['date'].patchValue(dateformat);\n    this.patientAddEditForm.controls['systolic'].patchValue(splits[0]);\n    this.patientAddEditForm.controls['diastolic'].patchValue(splits[1]);\n\n    delete this.patientAddEditForm.value.bloodPressure;\n\n    if (this.patientAddEditForm.valid) {\n      var data: any = {\n        \"source\": \"patient_management\",\n        \"data\": this.patientAddEditForm.value,\n        \"sourceobj\": [\"user_id\", \"physicalOrdering\"],\n        \"token\": this.userToken\n      }\n      data.data[\"id\"] = this.paramsId;\n      this.httpService.httpViaPost(\"addorupdatedata\", data).subscribe((response) => {\n        if (response.status = \"success\") {\n          this.formDirective.resetForm();\n        }\n      });\n    }\n  }\n\n  playSlider(action: string) {\n    switch (action) {\n      case 'preview':\n        if (this.sliderCount == 0) {\n          this.sliderCount = this.ImageData.length - 1;\n        } else {\n          this.sliderCount--;\n        }\n        break;\n      case 'next':\n        if (this.sliderCount + 1 == this.ImageData.length) {\n          this.sliderCount = 0;\n        } else {\n          this.sliderCount++;\n        }\n        break;\n    }\n  }\n\n  reportSign(flug: any = 'default') {\n    if(typeof this.selectBiller !== 'undefined' && this.selectBiller != '') {\n      for(var loop = 0; loop <= this.biller.length - 1; loop++) {\n        if(this.biller[loop].biller_id == this.selectBiller) {\n          var fullname = this.biller[loop].firstname + ' ' + this.biller[loop].lastname;\n        }\n      }\n\n      let modalData: any = {\n        panelClass: 'bulkupload-dialog',\n        data: {\n          header: \"Message\",\n          message: \"Do you want to send this report to biller: \" + fullname + \" ?\",\n          button1: { text: \"Yes\" },\n          button2: { text: \"No\" },\n        }\n      };\n      this.openModal(modalData);\n\n      this.dialogRef.afterClosed().subscribe(result => {\n        switch (result) {\n          case \"Yes\":\n            var data: any = {\n              \"source\": \"patient_management\",\n              \"data\": { \n                \"billGenerationDate\": new Date(),\n                \"billSentDate\": new Date(),\n                \"doctor_signature\": this.cookiesData.doctor_signature, \n                \"biller_id\": this.selectBiller,\n                \"download_link\" : environment.siteBaseUrl + 'download/super-bill/' + this.reportID,\n                \"file_path\": \"\",\n                \"download_password\": \"\",\n                \"status\": 2\n              },\n              \"report_id\": this.reportID\n            }\n            data.data[\"id\"] = this.paramsId;\n            this.httpService.httpViaPost(\"report-sign-send-to-biller\", data).subscribe((response) => {\n              if (response.status = \"success\") {\n                switch(flug) {\n                  case 'back':\n                    this.dialogRef.close();\n                    this.router.navigateByUrl('/doctor/dashboard');\n                    break;\n                  case 'next':\n                    this.dialogRef.close();\n                    this.router.navigateByUrl('/doctor/dashboard');\n                    break;\n                  default:\n                    break;\n                }\n              }\n            });\n            break;\n          case \"No\":\n            this.dialogRef.close();\n            break;\n        }\n      });\n    } else {\n      let modalData: any = {\n        panelClass: 'bulkupload-dialog',\n        data: {\n          header: \"Message\",\n          message: \"Select a biller first.\",\n          button1: { text: \"\" },\n          button2: { text: \"OK\" },\n        }\n      }\n      this.openModal(modalData);\n    }\n  }\n\n  setSendBiller() {\n\n  }\n\n  openModal(data) {\n    this.dialogRef = this.dialog.open(DialogBoxComponent, data);\n  }\n\n  downloadReport(link) {\n    window.open(link, \"_blank\");\n  }\n\n}\n","<mat-card-content class=\"system_superbill_wrapper\">\n    <form class=\"example-form\" autocomplete=\"off\" name=\"patientBMIForm\" [formGroup]=\"patientBMIForm\">\n\n        <table class=\"table_one\">\n            <tr>\n                <td colspan=\"3\">\n                    <h2 class=\"top_header\">For Intensive Behavioral Therapy Obesity Counseling</h2>\n                </td>\n            </tr>\n\n            <tr>\n                <td>\n                    <label>Patient Name\n                        <input type=\"text\" [formControl]=\"patientBMIForm.controls['patientName']\"\n                            (blur)=\"inputUntouch(patientBMIForm,'patientName')\">\n                    </label>\n                </td>\n\n                <td>\n                    <label><input type=\"radio\" value='Male' formControlName=\"gender\">Male</label>\n\n                    <label><input type=\"radio\" value='Female' formControlName=\"gender\">Female</label>\n                </td>\n\n                <td>\n                    <label>Test Date:\n                        <mat-form-field>\n                            <input matInput [matDatepicker]=\"picker4\" formControlName=\"testDate\" id=\"testDate\">\n                            <mat-datepicker-toggle matSuffix [for]=\"picker4\"></mat-datepicker-toggle>\n                            <mat-datepicker #picker4></mat-datepicker>\n                        </mat-form-field>\n                    </label>\n                </td>\n            </tr>\n\n            <tr>\n                <td><label>Ordering Physician<input type=\"text\"\n                            [formControl]=\"patientBMIForm.controls['physicalOrdering']\"\n                            (blur)=\"inputUntouch(patientBMIForm,'physicalOrdering')\"></label></td>\n                <td> </td>\n                <td><label>D.O.B\n                        <mat-form-field>\n                            <input matInput [matDatepicker]=\"picker\" formControlName=\"birthDate\" id=\"birthDate\">\n                            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                            <mat-datepicker #picker></mat-datepicker>\n                        </mat-form-field>\n                    </label></td>\n            </tr>\n            <tr>\n                <td class=\"fifty\" colspan=\"2\">\n                    <label>Physician’s Signature\n                        <input class=\"signaturefont\" type=\"text\" matInput\n                            [formControl]=\"patientBMIForm.controls['doctor_signature']\">\n                    </label>\n                </td>\n\n                <td class=\"fifty\">Suggested billing amounts per CPT Code: </td>\n            </tr>\n            <tr>\n                <td class=\"fifty\" colspan=\"2\">\n                    <p>1. Medicare modifier “XU” must be used on secondary CPT codes.</p>\n                    <p>2. Modifier “59” for commercial insurance must be used on secondary CPT codes</p>\n                    <p>3. Do not bill these tests on the same day as a physical</p>\n                </td>\n\n                <td class=\"fifty\">\n                    <h4>Obesity Counseling ICD 10 Codes for Z68 CPT Codes Shown Below</h4>\n                    <p><label><input type=\"checkbox\" checked>G0447 Face-to-face obesity Counseling. 15 minutes:\n                            $40</label></p>\n                    <p><label><input type=\"checkbox\" checked>G0473 Face-to-face Obesity Counseling for groups of (2-10)\n                            30 minutes:\n                            $20</label></p>\n                </td>\n            </tr>\n\n\n\n\n        </table>\n        <table class=\"table_two\">\n            <tr>\n                <td colspan=\"4\">\n                    <h2 class=\"table2_header\"> INTENSIVE BEHAVIORAL THERAPY (IBT) FOR OBESITY ICD10 DIAGNOSTIC CODES\n                    </h2>\n                </td>\n            </tr>\n\n            <tr>\n                <td>\n                    <label> <input type=\"checkbox\" [formControl]=\"patientBMIForm.controls['Z6829']\">\n                        Z68.29 <span> BMI 29 to 29.9</span> </label>\n                </td>\n                <td>\n                    <label><input type=\"checkbox\" [formControl]=\"patientBMIForm.controls['Z6833']\">\n                        Z68.33 <span> BMI 33 to 33.9</span> </label>\n                </td>\n                <td>\n                    <label><input type=\"checkbox\" [formControl]=\"patientBMIForm.controls['Z6837']\">\n                        Z68.37<span> BMI 37 to 37.9</span> </label>\n                </td>\n                <td>\n                    <label><input type=\"checkbox\" [formControl]=\"patientBMIForm.controls['Z6842']\">\n                        Z68.42 <span>BMI 45 to 49.9 </span> </label>\n                </td>\n            </tr>\n\n            <tr>\n                <td>\n                    <label><input type=\"checkbox\" [formControl]=\"patientBMIForm.controls['Z6830']\">\n                        Z68.30 <span>BMI 30 to 30.9 </span> </label>\n                </td>\n                <td>\n                    <label><input type=\"checkbox\" [formControl]=\"patientBMIForm.controls['Z6834']\">\n                        Z68.34 <span> BMI 34 to 34.9 </span> </label>\n                </td>\n                <td>\n                    <label><input type=\"checkbox\" [formControl]=\"patientBMIForm.controls['Z6838']\">\n                        Z68.38 <span>BMI 38 to 38.9</span> </label>\n                </td>\n                <td>\n                    <label><input type=\"checkbox\" [formControl]=\"patientBMIForm.controls['Z6843']\">\n                        Z68.43 <span>BMI 50 to 59.9</span> </label>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <label><input type=\"checkbox\" [formControl]=\"patientBMIForm.controls['Z6831']\">\n                        Z68.31 <span>BMI 31 to 31.9</span> </label>\n                </td>\n                <td>\n                    <label><input type=\"checkbox\" [formControl]=\"patientBMIForm.controls['Z6835']\">\n                        Z68.35 <span> BMI 35 to 35.9 </span> </label>\n                </td>\n                <td>\n                    <label><input type=\"checkbox\" [formControl]=\"patientBMIForm.controls['Z6839']\">\n                        Z68.39 <span>BMI 39 to 39.9</span> </label>\n                </td>\n                <td>\n                    <label><input type=\"checkbox\" [formControl]=\"patientBMIForm.controls['Z6844']\">\n                        Z68.44 <span>BMI 60 to 69.9</span> </label>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <label><input type=\"checkbox\" [formControl]=\"patientBMIForm.controls['Z6832']\">\n                        Z68.32 <span>BMI 32 to 32.9</span> </label>\n                    </td>\n                <td>\n                    <label><input type=\"checkbox\" [formControl]=\"patientBMIForm.controls['Z6836']\">\n                        Z68.36 <span>BMI 36 to 36.9 </span> </label>\n                    </td>\n                <td>\n                    <label><input type=\"checkbox\" [formControl]=\"patientBMIForm.controls['Z6841']\">\n                        Z68.41 <span>BMI 40 to 44.9</span> </label>\n                    </td>\n                <td>\n                    <label><input type=\"checkbox\" [formControl]=\"patientBMIForm.controls['Z6845']\">\n                        Z68.45 <span>BMI 70 and over</span> </label>\n                    </td>\n            </tr>\n\n\n            <tr>\n                <td colspan=\"4\">\n                    <a class=\"line_link\" target=\"_blank\"\n                        href=\"https://www.cms.gov/medicare-coverage-database/details/nca-decision-memo.aspx?&NcaName=Intensive%20Behavioral%20Therapy%20for%20Obesity&bc=ACAAAAAAIAAA&NCAId=253&\">Clinical\n                        Obesity Counselling - Qualifications, Procedures and On-going Requirements</a>\n                </td>\n            </tr>\n        </table>\n    </form>\n</mat-card-content>","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators, FormGroupDirective } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpServiceService } from '../../../../../services/http-service.service';\nimport { DatePipe } from '@angular/common';\n\nimport { MAT_MOMENT_DATE_FORMATS, MomentDateAdapter } from '@angular/material-moment-adapter';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\n\n// Depending on whether rollup is used, moment needs to be imported differently.\n// Since Moment.js doesn't have a default export, we normally need to import using the `* as`\n// syntax. However, rollup creates a synthetic default module and we thus need to import it using\n// the `default as` syntax.\nimport * as _moment from 'moment';\n// tslint:disable-next-line:no-duplicate-imports\nimport { default as _rollupMoment } from 'moment';\n\nconst moment = _rollupMoment || _moment;\n\nexport const MY_FORMATS = {\n  parse: {\n    dateInput: 'LL',\n  },\n  display: {\n    dateInput: 'LL',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY',\n  },\n};\n\n@Component({\n  selector: 'app-system-superbill',\n  templateUrl: './system-superbill.component.html',\n  styleUrls: ['./system-superbill.component.css'],\n  providers: [\n    // `MomentDateAdapter` and `MAT_MOMENT_DATE_FORMATS` can be automatically provided by importing\n    // `MatMomentDateModule` in your applications root module. We provide it at the component level\n    // here, due to limitations of our example generation script.\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\n    { provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS },\n  ],\n})\nexport class SystemSuperbillComponent implements OnInit {\n  public userToken: any;\n  public patientSingleData: any = [];\n  public patientBMIForm: FormGroup;\n  date = new FormControl(new Date());\n  public testDate: any;\n  startdate: any;\n  enddate: any;\n  dateofbirth: any;\n  public dialogRef: any;\n  public cookiesData: any = {};\n  public cookies_id: any;\n  public allDoctorDataArray: any = [];\n  public tech_id: any;\n  public cookies_name: any;\n  public cookies_lastname: any;\n  public allPatientReportData: any = [];\n  public paramsId: any;\n  public techId: any;\n\n  // sticky section\n  isSticky: boolean = false;\n  stickyRight: boolean = false;\n\n  // @HostListener('window:scroll', ['$event'])\n  // checkScroll() {\n  //   this.isSticky = window.pageYOffset >= 50;\n  // }\n\n  constructor(public activatedRoute: ActivatedRoute, public httpService: HttpServiceService,\n    public cookie: CookieService, public fb: FormBuilder, public router: Router, public datePipe: DatePipe) {\n    \n      this.userToken = cookie.get('jwtToken');\n    let allcookies: any;\n    allcookies = cookie.getAll();\n    this.cookiesData = JSON.parse(allcookies.user_details);\n\n    var dateformat = datePipe.transform(new Date(), \"MM-dd-yyyy\");\n    \n    this.patientBMIForm = this.fb.group({\n      patientName: ['', [Validators.required, Validators.maxLength(30)]],\n      gender: ['', Validators.required],\n      birthDate: ['', Validators.required],\n      physicalOrdering: [''],\n      doctor_signature: ['', Validators.required],\n      testDate: ['', Validators.required],\n      testCompletedDate: ['', Validators.required],\n      signDate : [dateformat],\n\n      Z6829: [false],\n      Z6833: [false],\n      Z6837: [false],\n      Z6842: [false],\n      Z6830: [false],\n      Z6834: [false],\n      Z6838: [false],\n      Z6843: [false],\n      Z6831: [false],\n      Z6835: [false],\n      Z6839: [false],\n      Z6844: [false],\n      Z6832: [false],\n      Z6836: [false],\n      Z6841: [false],\n      Z6845: [false],\n      \n    });\n    \n    if(this.cookiesData.type == 'admin'){\n      this.patientBMIForm.disable();\n    }\n    this.getPatientData(this.activatedRoute.snapshot.params._id_object);\n  }\n\n  ngOnInit() {\n  }\n\n  /**for validation purpose**/\n  inputUntouch(form: any, val: any) {\n    form.controls[val].markAsUntouched();\n  }\n  /**for validation purpose**/\n\n  getPatientData(id: any) {\n    var data = {\n      \"source\": \"patient_management_view_BMI\",\n      \"condition\": {\n        \"_id_object\": id\n      },\n      \"token\": this.userToken\n    }\n\n    this.httpService.httpViaPost('datalist', data).subscribe((response) => {\n        this.patientSingleData = response.res;\n        this.patientBMIForm.controls['patientName'].patchValue(response.res[0].patientName);\n        this.patientBMIForm.controls['physicalOrdering'].patchValue(this.cookiesData.firstname + ' ' + this.cookiesData.lastname);\n        this.patientBMIForm.controls['doctor_signature'].patchValue(this.cookiesData.doctor_signature);\n        this.patientBMIForm.controls['gender'].patchValue(response.res[0].gender);\n        \n\n        let dateOfBirth: any = response.res[0].birthDate;\n        // let dobArr: any = dateOfBirth.split(\"-\");\n        // this.patientBMIForm.controls['birthDate'].patchValue(moment([dobArr[2], dobArr[1] - 1, dobArr[0]]));\n\n        // let sDateArr: any = response.res[0].testDate.split(\"-\");\n        // this.patientBMIForm.controls['testDate'].patchValue(moment([sDateArr[2], sDateArr[1] - 1, sDateArr[0]]));\n        \n        var BMI = response.res[0].BMI.split(\".\", 2);\n        BMI = BMI[0] + BMI[1];\n        \n        this.patientBMIForm.controls[BMI].patchValue(true);\n        //   let eDateArr: any = patientDetails.testCompletedDate.split(\"-\");\n        // this.patientReportViewForm.controls['testCompletedDate'].patchValue(moment([eDateArr[2], eDateArr[1] - 1, eDateArr[0]]));\n      });\n\n      \n  }\n\n\n}\n","<mat-toolbar class=\"techdashboard_header\" [ngClass]=\"{'sticky' : isSticky}\">\n  <mat-card-content class=\"header_wrapper\">\n    <span class=\"logo_wrapper\" [routerLink]=\"[ '/admin/dashboard' ]\">\n      <img src=\"../../../assets/images/logo.png\">\n    </span>\n\n    <mat-card-content class=\"quotation\">\n      <p>ADVANCED ANS TECHNOLOGY – BETTER PATIENT CARE – INCREASE PRACTICE REVENUE</p>\n    </mat-card-content>\n\n\n    <mat-card-content class=\"profile_section\">\n      <mat-menu #appMenu=\"matMenu\" >\n        <button mat-menu-item [routerLink]=\"['/doctor/account-settings']\">\n          <mat-icon>account_circle</mat-icon> Account Settings\n        </button>\n        <button mat-menu-item [routerLink]=\"['/doctor/account-settings/change-password']\">\n          <mat-icon>vpn_key</mat-icon> Change Password\n        </button>\n        <button mat-menu-item (click)=\"logout()\"> <mat-icon>power_settings_new</mat-icon> Logout </button>\n      </mat-menu>\n      <span class=\"username\">{{user_data.firstname}} {{user_data.lastname}}</span>\n      <button mat-icon-button [matMenuTriggerFor]=\"appMenu\">\n        <span class=\"user_profile\">\n          <mat-icon>account_circle</mat-icon>\n          <i class=\"material-icons\">\n            keyboard_arrow_down\n          </i>\n        </span>\n      </button>\n\n    </mat-card-content>\n  </mat-card-content>\n</mat-toolbar>\n<!-- end header -->\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\n\n@Component({\n  selector: 'app-doctor-header',\n  templateUrl: './doctor-header.component.html',\n  styleUrls: ['./doctor-header.component.css']\n})\n\nexport class DoctorHeaderComponent implements OnInit {\n\n  public user_data: any = {};\n\n  public loader: boolean = true;\n  public user_cookie:any;\n  status: boolean = true;\n  isSticky: boolean = false;\n\n  constructor(public cookies: CookieService, public router: Router) {\n    let allData: any = {};\n    allData = cookies.getAll()\n    this.user_data = JSON.parse(allData.user_details);\n    this.user_cookie = cookies.get('jwtToken');\n   }\n\n  ngOnInit() {\n  }\n  \n  /**logout function start here**/\n  logout() {\n    this.cookies.delete('jwtToken');\n    this.cookies.delete('user_details');\n    this.cookies.deleteAll();\n    this.router.navigateByUrl('logout');\n  }\n  /**logout function end here**/\n\n  menuFunction(){\n    this.status = !this.status;\n\n  }\n\n}\n","<app-doctor-header></app-doctor-header>\n\n\n<mat-card-content class=\"content_wrapper\">\n  <mat-card-content class=\"itemsection\">\n    <mat-card-content class=\"one uploadsign\">\n      <p>Manage Your Signature </p>\n\n    </mat-card-content>\n\n    <span class=\"section_title\">\n      <img src=\"../../../../assets/images/editicon.png\">\n    </span>\n\n    <span class=\"signaturefont\">{{ htmlText.viewSign }}</span>\n\n    <mat-card-content class=\"sign_uploader\">\n      <span class=\"sing_box\">\n        <input type=\"text\" [(ngModel)]=\"htmlText.viewSign\" (keyup)=\"removeErrorMessage();\">\n        <br/>\n        <span style=\"color: red;\">{{ htmlText.errorMessage }}</span>\n      </span>\n\n      <br />\n\n      <span class=\"sing_box\">\n        <button class=\"signature_upload\" (click)=\"updateSignature();\" mat-flat-button>{{ htmlText.buttonText }}</button>\n      </span>\n    </mat-card-content>\n  </mat-card-content>\n</mat-card-content>\n\n<!-- Tech Footer -->\n<app-admin-footer></app-admin-footer>\n","import { Component, OnInit } from '@angular/core';\nimport { UploadDialogBoxComponent } from '../../common/upload-dialog-box/upload-dialog-box.component';\nimport { MatDialog , MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { CommonFunction } from 'src/app/class/common/common-function';\nimport { CookieService } from 'ngx-cookie-service';\nimport { HttpServiceService } from 'src/app/services/http-service.service';\nimport { DialogBoxComponent } from '../../common/dialog-box/dialog-box.component';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signature-management',\n  templateUrl: './signature-management.component.html',\n  styleUrls: ['./signature-management.component.css']\n})\nexport class SignatureManagementComponent implements OnInit {\n\n  public authData: any = {};\n  public DoctorSignedData: any = [];\n  public htmlText: any = {\n    buttonText: \"Add Signature\"\n  };\n\n  /* Modal */\n  public dialogRef: any;\n\n  constructor(public dialog: MatDialog, public commonFunction: CommonFunction,\n     public cookie: CookieService, public http: HttpServiceService, public activatedRoute: ActivatedRoute, public router: Router) {\n    let allcookies: any = cookie.getAll();\n    this.authData[\"user_details\"] = JSON.parse(cookie.get('user_details'));\n    this.authData[\"jwtToken\"] = cookie.get('jwtToken');\n\n    console.log(this.authData.user_details.doctor_signature);\n    if(typeof this.authData.user_details.doctor_signature !== 'undefined') {\n      this.htmlText.buttonText = \"Update Signature\";\n      this.htmlText.viewSign = this.authData.user_details.doctor_signature;\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  updateSignature() {\n    if(typeof this.htmlText.viewSign !== 'undefined' && this.htmlText.viewSign != '') {\n      var data = {\n        \"source\": \"users\",\n        \"data\": {\n          \"id\": this.authData.user_details._id,\n          \"doctor_signature\": this.htmlText.viewSign\n        },\n        \"token\": this.authData.jwtToken\n      }\n      this.http.httpViaPost('addorupdatedata', data).subscribe(response => {\n          if(response.status == \"success\") {\n            this.authData.user_details.doctor_signature = this.htmlText.viewSign;\n            let str = JSON.stringify(this.authData.user_details);\n            this.cookie.set('user_details', str);\n\n            /* Open modal */\n            let modalData: any = {\n              panelClass: 'bulkupload-dialog',\n              data: {\n                header: \"Message\",\n                message: \"Signature uploaded successfully.\",\n                button1: { text: \"\" },\n                button2: { text: \"Ok\" },\n              }\n            }\n            this.openModal(modalData);\n          }\n        });\n    } else {\n      this.htmlText.errorMessage = \"Please write your signature.\"\n    }\n  }\n\n  removeErrorMessage() {\n    if(typeof this.htmlText.viewSign === 'undefined' || this.htmlText.viewSign.length == 0) {\n      this.htmlText.errorMessage = \"Please write your signature.\"\n    } else {\n      this.htmlText.errorMessage = \"\"\n    }\n  }\n\n  openModal(data) {\n    this.dialogRef = this.dialog.open(DialogBoxComponent, data);\n    this.dialogRef.afterClosed().subscribe(result => {\n      switch (result) {\n        case \"Ok\":\n          this.dialogRef.close();\n\n          this.activatedRoute.queryParams.subscribe(getData => {\n            this.router.navigateByUrl('/doctor/patient-record-report/' + getData['view']);\n          });\n          break;\n      }\n    });\n  }\n\n}\n\n\n ","<app-tech-header></app-tech-header>\n\n<mat-card class=\"admin_wrapper\" >\n  <mat-card-content class=\"add_form\">\n    <form class=\"example-form\" autocomplete=\"off\" name=\"techBulkUploadForm\" [formGroup]=\"techBulkUploadForm\">\n\n\n      <mat-card-content class=\"status_wrapper\" >\n        <label>Batch Name</label>\n        <mat-form-field appearance=\"fill\">\n          <input placeholder=\"Batch Name\" matInput [formControl]=\"techBulkUploadForm.controls['batch_name']\"\n            (blur)=\"inputUntouch(techBulkUploadForm,'batch_name')\">\n          <mat-error *ngIf=\"techBulkUploadForm.controls['batch_name'].touched && !techBulkUploadForm.controls['batch_name'].valid\n            && techBulkUploadForm.controls['batch_name'].errors.required\">\n            Batch Name field can not be blank</mat-error>\n        </mat-form-field>\n        <mat-card-content>\n          <label>Ordering Physician</label>\n          <mat-form-field >\n\n              <mat-select formControlName=\"doctor_id\" placeholder=\"Select a Doctor\" >\n                <mat-option value=\"\">Select a Doctor</mat-option>\n                <mat-option (click)=\"getsellabel(doc)\" *ngFor=\"let doc of allDoctorDataArray;\" value=\"{{ doc._id }}\"> {{ doc.fullNamecopy }}\n                  </mat-option>\n              </mat-select>\n            </mat-form-field>\n        </mat-card-content>\n\n\n    </mat-card-content>\n\n      <lib-file-upload [config]=\"configData\" class=\"file_upload\" ></lib-file-upload>\n      <span style=\"color: red;\" *ngIf=\"!configData.files && configData.formSubmit\">Please upload a file</span>\n\n      <span class=\"patient_diagnotes\">\n        <label>Notes:</label>\n        <mat-form-field class=\"example-full-width\">\n\n          <textarea matInput placeholder=\"Leave a comment\" [formControl]=\"techBulkUploadForm.controls['note']\"\n            >\n       </textarea>\n\n        </mat-form-field>\n      </span>\n      <span class=\"submit_form\">\n        <button mat-flat-button type=\"button\" (click)=\"cancelButton()\"> Back </button>\n        <button mat-flat-button type=\"button\" [disabled]=\"!techBulkUploadForm.valid\" (click)=\"techBulkUploadFormSubmit()\"> Submit </button>\n      </span>\n\n\n    </form>\n  </mat-card-content>\n</mat-card>\n\n\n<app-admin-footer></app-admin-footer>\n","import { Component, OnInit, AfterViewInit, ElementRef, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpServiceService } from '../../../../services/http-service.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { MatSnackBar } from '@angular/material';\nimport { CommonFunction } from '../../../../class/common/common-function';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from \"@angular/material\";\nimport { DialogBoxComponent } from '../../../common/dialog-box/dialog-box.component';\n\n@Component({\n  selector: 'app-bulk-upload',\n  templateUrl: './bulk-upload.component.html',\n  styleUrls: ['./bulk-upload.component.css']\n})\n\nexport class BulkUploadComponent implements OnInit {\n\n  public configData: any = {\n    baseUrl: \"https://fileupload.influxhostserver.com/\",\n    endpoint: \"uploads\",\n    size: \"51200\", // kb\n    format: [\"pdf\", \"jpeg\"], // use all small font\n    type: \"patient-file\",\n    path: \"patientFile\",\n    prefix: \"patient-file\",\n    formSubmit: false,\n    conversionNeeded: 1,\n    bucketName: \"awsbackend-dev-patient-files\"\n  }\n\n  public techBulkUploadForm: FormGroup;\n  public user_token: any;\n  public images_array: any = [];\n  public cookiesData: any = {};\n  public cookies_id: any;\n  public allDoctorDataArray: any = [];\n  public dialogRef: any;\n  public doctorName: any;\n  public selectedDoctorName: any;\n\n  constructor(public fb: FormBuilder, public activeRoute: ActivatedRoute,\n    public router: Router, public httpService: HttpServiceService,\n    public cookie: CookieService, public snakBar: MatSnackBar, public dialog: MatDialog,\n    public commonFunction: CommonFunction) {\n    this.user_token = cookie.get('jwtToken');\n    let allcookies: any;\n    allcookies = cookie.getAll();\n\n    this.cookiesData = JSON.parse(allcookies.user_details);\n    this.cookies_id = this.cookiesData._id;\n    this.getAllDoctorData();\n\n    /* Set Meta Data */\n    this.commonFunction.setTitleMetaTags();\n\n    this.techBulkUploadForm = this.fb.group({\n      batch_name: ['', [Validators.required, Validators.maxLength(40)]],\n      doctor_id: ['', [Validators.required]],\n      upload_file: ['', []],\n      status: [1, []],\n      note: ['', []],\n      tech_id: [this.cookies_id, []],\n      report_type: ['file', []],\n    })\n    this.user_token = cookie.get('jwtToken');\n  }\n\n  ngOnInit() {\n  }\n\n  getAllDoctorData() {\n    var data = {\n      \"source\": \"users_view_doctor\",\n      \"condition\": {\n        \"tech_id_object\": this.cookies_id\n      },\n      \"token\": this.user_token\n    }\n\n    this.httpService.httpViaPost('datalist', data).subscribe(response => {\n        let result: any = {};\n        result = response.res;\n        this.allDoctorDataArray = result;\n      });\n  }\n\n  cancelButton() {\n    this.router.navigateByUrl('/tech/dashboard');\n  }\n\n  inputUntouch(form: any, val: any) {\n    form.controls[val].markAsUntouched();\n  }\n\n  /* This one is for get doctor dropdown data */\n\n  getsellabel(docval: any) {\n    this.selectedDoctorName = docval.fullName;\n  }\n\n  techBulkUploadFormSubmit() {\n    this.configData.formSubmit = true;\n    if (!this.configData.files) {\n      return false;\n    }\n    /* Open modal */\n    let modalData: any = {\n      panelClass: 'bulkupload-dialog',\n      data: {\n        header: \"Message\",\n        message: \"Are you sure you want to upload these reports for physician : \" + this.selectedDoctorName + \" ?\",\n        button1: { text: \"No\" },\n        button2: { text: \"Yes\" },\n      }\n    }\n\n    this.dialogRef = this.dialog.open(DialogBoxComponent, modalData);\n    this.dialogRef.afterClosed().subscribe(result => {\n      switch (result) {\n        case \"No\":\n          break;\n        case \"Yes\":\n          this.bulkUploaddataSubmit();\n          break;\n      }\n    });\n  }\n\n  bulkUploaddataSubmit() {\n    if (this.configData.files.length > 0) {\n      for (const loop in this.configData.files) {\n        this.images_array =\n          this.images_array.concat({\n            \"upload_server_id\": this.configData.files[loop].upload.data._id,\n            \"basepath\": this.configData.files[loop].upload.data.basepath + '/' + this.configData.path + '/',\n            \"fileservername\": this.configData.files[loop].upload.data.data.fileservername,\n            \"name\": this.configData.files[loop].name,\n            \"type\": this.configData.files[loop].type,\n            \"bucketname\": this.configData.bucketName\n          });\n      }\n\n      this.techBulkUploadForm.controls['upload_file'].patchValue(this.images_array);\n    } else {\n      this.techBulkUploadForm.value.upload_file = false;\n    }\n\n    if (this.techBulkUploadForm.valid) {\n      var data = {\n        \"source\": \"bulk_report_upload\",\n        \"data\": this.techBulkUploadForm.value,\n        \"sourceobj\": [\"tech_id\", \"doctor_id\"],\n        \"token\": this.user_token\n      }\n      this.httpService.httpViaPost(\"upload-bulk-report\", data).subscribe(response => {\n          if (response.status = \"success\") {\n            let message: any = \"Successfully Submitted\";\n            let action: any = \"OK\";\n            this.snakBar.open(message, action, {\n              duration: 2000\n            });\n\n            setTimeout(() => {\n              this.router.navigateByUrl('/tech/dashboard');\n            }, 3000);\n          }\n        })\n    } else {\n      let modalData: any = {\n        panelClass: 'bulkupload-dialog',\n        data: {\n          header: \"Message\",\n          message: \"An error occord. Please try later.\",\n          button1: { text: \"\" },\n          button2: { text: \"Ok\" },\n        }\n      }\n  \n      this.dialogRef = this.dialog.open(DialogBoxComponent, modalData);\n      this.dialogRef.afterClosed().subscribe(result => {\n        switch (result) {\n          case \"No\":\n            break;\n          case \"Ok\":\n            break;\n        }\n      });\n    }\n  }\n\n}\n","<ng-container *ngIf=\"router.url == '/tech/report/total-uploaded'\">\n    total uploaded \n</ng-container>\n\n<ng-container *ngIf=\"router.url == '/tech/report/total-processed'\">\n   total-processed\n</ng-container>\n\n<ng-container *ngIf=\"router.url == '/tech/report/total-remained-processed'\">\n    total-remained-processed\n</ng-container>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-report-details',\n  templateUrl: './report-details.component.html',\n  styleUrls: ['./report-details.component.css']\n})\nexport class ReportDetailsComponent implements OnInit {\n\n  constructor(public router : Router) { \n    console.log(\"urllllllll\",router.url);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","<app-tech-header></app-tech-header>\n<mat-card class=\"admin_wrapper\">\n<!-- header with add button -->\n<mat-card-content class=\"title_wrapper\">\n  manage appoinments\n</mat-card-content>\n<span class=\"add_header\">\n\n  <span class=\"bradcrumb\"><a [routerLink]=\"['/tech/dashboard']\">Dashboard &nbsp;/</a> &nbsp;\n    Schedule</span>\n</span>\n<!-- End header with add button -->\n\n\n\n\n</mat-card>\n<app-admin-footer></app-admin-footer>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-manage-schedule',\n  templateUrl: './manage-schedule.component.html',\n  styleUrls: ['./manage-schedule.component.css']\n})\nexport class ManageScheduleComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<app-tech-header></app-tech-header>\n<mat-card class=\"admin_wrapper\">\n  <!-- header with add button -->\n  <mat-card-content class=\"title_wrapper\">\n    my appoinments\n  </mat-card-content>\n  <mat-toolbar class=\"add_header\">\n\n    <span class=\"bradcrumb\"><a [routerLink]=\"['/tech/dashboard']\">Dashboard &nbsp;/</a> &nbsp;\n      Appoinments</span>\n  </mat-toolbar>\n  <!-- End header with add button -->\n\n  <div class=\"mat-elevation-z8 table_wrapper\">\n    <table mat-table [dataSource]=\"dataSource\">\n\n      <!-- Position Column -->\n      <ng-container matColumnDef=\"no\">\n        <th mat-header-cell *matHeaderCellDef> No. </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.no}} </td>\n      </ng-container>\n      <ng-container matColumnDef=\"organizerName\">\n        <th mat-header-cell *matHeaderCellDef> Organizer's Name </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.organizerName}} </td>\n      </ng-container>\n\n      <!-- Name Column -->\n      <ng-container matColumnDef=\"organizerEmail\">\n        <th mat-header-cell *matHeaderCellDef> Organizer's Email </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.organizerEmail}} </td>\n      </ng-container>\n\n      <!-- Weight Column -->\n      <ng-container matColumnDef=\"appoinmentDate\">\n        <th mat-header-cell *matHeaderCellDef> Appoinment Date </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.appoinmentDate}} </td>\n      </ng-container>\n\n      <!-- Symbol Column -->\n      <ng-container matColumnDef=\"appoinmentTime\">\n        <th mat-header-cell *matHeaderCellDef> Appoinment Time </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.appoinmentTime}} </td>\n      </ng-container>\n      <ng-container matColumnDef=\"timeZone\">\n        <th mat-header-cell *matHeaderCellDef> TimeZone </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.timeZone}} </td>\n      </ng-container>\n      <ng-container matColumnDef=\"doctorName\">\n        <th mat-header-cell *matHeaderCellDef> Doctor Name </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.doctorName}} </td>\n      </ng-container>\n      <ng-container matColumnDef=\"patientName\">\n        <th mat-header-cell *matHeaderCellDef> Patient Name </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.patientName}} </td>\n      </ng-container>\n      <ng-container matColumnDef=\"manage\">\n        <th mat-header-cell *matHeaderCellDef> Manage </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.manage}} </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n  </div>\n\n</mat-card>\n<app-admin-footer></app-admin-footer>\n","import { Component, OnInit ,ViewChild} from '@angular/core';\nimport { MatTableDataSource } from '@angular/material';\nimport {MatPaginator} from '@angular/material/paginator';\n\nexport interface PeriodicElement {\n  no: number;\n  organizerName: string;\n  organizerEmail: string;\n  appoinmentDate: string;\n  appoinmentTime: string;\n  timeZone: string;\n  doctorName: string;\n  patientName: string;\n  manage: string;\n}\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n  public displayedColumns: string[] =\n   ['no','organizerName', 'organizerEmail','appoinmentDate','appoinmentTime','timeZone','doctorName',\n   'patientName','manage'];\n   dataSource = new MatTableDataSource<PeriodicElement>(ELEMENT_DATA);\n   @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  constructor() { }\n\n  ngOnInit() {\n    this.dataSource.paginator = this.paginator;\n  }\n\n}\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {no: 1, organizerName: 'Hydrogen', organizerEmail: \"s@gmail.com\", appoinmentDate: '11.10.19', appoinmentTime:'adf', timeZone: 'fs',doctorName:'sfg', patientName: 'fgasd' , manage: '' },\n  {no: 1, organizerName: 'Hydrogen', organizerEmail: \"s@gmail.com\", appoinmentDate: '11.10.19', appoinmentTime:'adf', timeZone: 'fs',doctorName:'sfg', patientName: 'fgasd' , manage: '' },\n  {no: 1, organizerName: 'Hydrogen', organizerEmail: \"s@gmail.com\", appoinmentDate: '11.10.19', appoinmentTime:'adf', timeZone: 'fs',doctorName:'sfg', patientName: 'fgasd' , manage: '' },\n  {no: 1, organizerName: 'Hydrogen', organizerEmail: \"s@gmail.com\", appoinmentDate: '11.10.19', appoinmentTime:'adf', timeZone: 'fs',doctorName:'sfg', patientName: 'fgasd' , manage: '' },\n  {no: 1, organizerName: 'Hydrogen', organizerEmail: \"s@gmail.com\", appoinmentDate: '11.10.19', appoinmentTime:'adf', timeZone: 'fs',doctorName:'sfg', patientName: 'fgasd' , manage: '' },\n  {no: 1, organizerName: 'Hydrogen', organizerEmail: \"s@gmail.com\", appoinmentDate: '11.10.19', appoinmentTime:'adf', timeZone: 'fs',doctorName:'sfg', patientName: 'fgasd' , manage: '' },\n  {no: 1, organizerName: 'Hydrogen', organizerEmail: \"s@gmail.com\", appoinmentDate: '11.10.19', appoinmentTime:'adf', timeZone: 'fs',doctorName:'sfg', patientName: 'fgasd' , manage: '' },\n  {no: 1, organizerName: 'Hydrogen', organizerEmail: \"s@gmail.com\", appoinmentDate: '11.10.19', appoinmentTime:'adf', timeZone: 'fs',doctorName:'sfg', patientName: 'fgasd' , manage: '' },\n];\n","<app-tech-header></app-tech-header>\n<mat-card class=\"admin_wrapper\">\n  <!-- <mat-card-content class=\"content_wrapper\">\n  <mat-card-content class=\"itemsection one\">\n    <span class=\"counteer\">{{ allResolveData.totalReportCount }}</span>\n    <p>Total Number of <br>Reports uploaded</p>\n    <button mat-flat-button (click)=\"viewDetailsData('upload')\">View Details</button>\n  </mat-card-content>\n\n  <mat-card-content class=\"itemsection two\">\n    <span class=\"counteer\"> {{ allResolveData.processedReportCount }} </span>\n    <p>Total Number of <br>Reports Processed</p>\n    <button mat-flat-button (click)=\"viewDetailsData('processed')\">View Details</button>\n  </mat-card-content>\n\n  <mat-card-content class=\"itemsection three\">\n    <span class=\"counteer\">{{ allResolveData.totalRemainToProcessCount }}</span>\n    <p>Total Number of Reports <br>remain to process</p>\n    <button mat-flat-button (click)=\"viewDetailsData('remainProcess')\">View Details</button>\n  </mat-card-content>\n</mat-card-content> -->\n\n  <!-- new -->\n  <mat-card-content class=\"admin_superbillsection techDashboard\">\n    <!-- <h1>Physician Report and Super Bills</h1> -->\n    <mat-card-content class=\"biller_wrapper\">\n      <mat-card-content class=\"super_bill_item sp_one\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon1.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total No of <br>\n            Reports Uploaded\n          </p>\n          <h2> {{ allResolveData.totalReportCount }} </h2>\n          <button mat-flat-button (click)=\"viewDetailsData('upload')\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item sp_two\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon2.png\">\n          </mat-card-content>\n        </span>\n\n        <span class=\"container_wrapper\">\n          <p>Total No of <br>\n            Report Processed\n          </p>\n          <h2> {{ allResolveData.processedReportCount }} </h2>\n          <button mat-flat-button (click)=\"viewDetailsData('processed')\">view all</button>\n        </span>\n      </mat-card-content>\n\n      <mat-card-content class=\"super_bill_item sp_three\">\n        <span class=\"border_wrapper\">\n          <mat-card-content class=\"circle\">\n            <img src=\"../../../../assets/images/reporticon3.png\">\n          </mat-card-content>\n        </span>\n        <span class=\"container_wrapper\">\n          <p>Total Number of Reports Remain to Process\n          </p>\n          <h2> {{ allResolveData.totalRemainToProcessCount }} </h2>\n          <button mat-flat-button (click)=\"viewDetailsData('remainProcess')\">view all</button>\n        </span>\n      </mat-card-content>\n\n\n    </mat-card-content>\n  </mat-card-content>\n\n\n  <mat-card-content class=\"doctor_content_wrapper\">\n    <mat-card-title>Doctor You Are Working With </mat-card-title>\n    <mat-card-content class=\"table_structure\">\n      <mat-list>\n\n        <mat-list-item>\n          <p class=\"title_n\">Name</p>\n          <p class=\"title_a\">\n            <ng-container>\n              {{ allResolveData.doctorWorkingWith[0].fullName }}\n            </ng-container>\n          </p>\n        </mat-list-item>\n\n        <mat-list-item>\n          <p class=\"title_n\">Taxonomies</p>\n          <p class=\"title_a\">\n            <ng-container>\n              {{ allResolveData.doctorWorkingWith[0].taxo_list[0] }}\n            </ng-container>\n          </p>\n        </mat-list-item>\n\n        <mat-list-item>\n          <p class=\"title_n\">Email</p>\n          <p class=\"title_a\">\n            <ng-container>\n              {{ allResolveData.doctorWorkingWith[0].email }}\n            </ng-container>\n          </p>\n        </mat-list-item>\n\n        <mat-list-item>\n          <p class=\"title_n\">Phone</p>\n          <p class=\"title_a\">\n            <ng-container>\n              {{ allResolveData.doctorWorkingWith[0].phone }}\n            </ng-container>\n          </p>\n        </mat-list-item>\n\n        <mat-list-item>\n          <p class=\"title_n\">FAX</p>\n          <p class=\"title_a\">\n            <ng-container>\n              {{ allResolveData.doctorWorkingWith[0].fax }}\n            </ng-container>\n          </p>\n        </mat-list-item>\n        <mat-list-item>\n          <p class=\"title_n\">NPI#</p>\n          <p class=\"title_a\">\n            <ng-container>\n              {{ allResolveData.doctorWorkingWith[0].npm }}\n            </ng-container>\n          </p>\n        </mat-list-item>\n\n      </mat-list>\n    </mat-card-content>\n    <p class=\"doctorCount\">and&nbsp; <a\n        (click)=\"allDoctorViewModal()\">({{ allResolveData.doctorWorkingWith.length }})</a>&nbsp;more.</p>\n\n\n\n  </mat-card-content>\n\n\n\n  <!-- patainet report section -->\n  <mat-card-content class=\"table_wrapper \">\n\n    <mat-toolbar class=\"top_header\">\n      <h2>{{ htmlText.headerText }}</h2>\n      <!-- <button class=\"add_new\" mat-button routerLink=\"/admin/patient-management/add\">add patient records manually</button> -->\n    </mat-toolbar>\n\n    <mat-toolbar class=\"action_bar\">\n\n      <mat-form-field>\n        <input matInput placeholder=\"Search By Patient Name\"\n          (keyup)=\"filterByName('patientName_search_regex', $event.target.value)\">\n      </mat-form-field>\n      <mat-form-field>\n        <input matInput placeholder=\"Search By Doctor Name\"\n          (keyup)=\"filterByName('doctorName_search_regex', $event.target.value)\">\n      </mat-form-field>\n      <mat-form-field class=\"parent_cat\">\n        <mat-select placeholder=\"Search By Status\"\n          (selectionChange)=\"filterByName('status_search_regex', $event.value)\">\n          <mat-option value=0>Select a status</mat-option>\n          <mat-option value=\"waiting for doctor sign\">Waiting For Doctor Sign</mat-option>\n          <mat-option value=\"doctor signed\">Doctor Signed</mat-option>\n          <mat-option value=\"send to biller\">Send To Biller</mat-option>\n          <mat-option value=\"error\">Error</mat-option>\n          <mat-option value=\"pending\">Pending</mat-option>\n        </mat-select>\n      </mat-form-field>\n\n\n    </mat-toolbar>\n\n\n      <!--all dashboard data table start here-->\n\n      <table mat-table [dataSource]=\"allDataSource\" matSort class=\"mat-elevation-z8\">\n\n        <ng-container matColumnDef=\"no\">\n          <th mat-header-cell *matHeaderCellDef> No. </th>\n          <td mat-cell *matCellDef=\"let element; let i = index;\"> {{ i + 1 }} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"patientName\">\n          <th mat-header-cell *matHeaderCellDef> Patient Name. </th>\n          <td mat-cell *matCellDef=\"let element\" data-label=\"patient Name\"> {{ element.patientName }} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"doctorName\">\n          <th mat-header-cell *matHeaderCellDef> Doctor Name</th>\n          <td mat-cell *matCellDef=\"let element\" data-label=\"Doctor Name\" innerHTML=\"{{ element.doctorname }}\">  </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"techName\">\n          <th mat-header-cell *matHeaderCellDef> Tech Name</th>\n          <td mat-cell *matCellDef=\"let element\" data-label=\"Tech Name\"> {{ element.techname }} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"billerName\">\n          <th mat-header-cell *matHeaderCellDef> Biller Name</th>\n          <td mat-cell *matCellDef=\"let element\" data-label=\"Biller Name\"> {{ element.billername }} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"recordType\">\n          <th mat-header-cell *matHeaderCellDef> Record Type</th>\n          <td mat-cell *matCellDef=\"let element\" data-label=\"Record Type\"> {{ element.report_type }} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"billGenerationData\">\n          <th mat-header-cell *matHeaderCellDef> Bill Generation Date</th>\n          <td mat-cell *matCellDef=\"let element\" data-label=\"Bill Generation Date\"> {{ element.billGenerationDate }}\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"billsendDate\">\n          <th mat-header-cell *matHeaderCellDef> Bill Send Date</th>\n          <td mat-cell *matCellDef=\"let element\" data-label=\"Bill Send Date\"> {{ element.billSentDate }} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"status\">\n          <th mat-header-cell *matHeaderCellDef> Status </th>\n          <td mat-cell *matCellDef=\"let element\" data-label=\"Status\"> <span>{{ element.status_text }} </span></td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"allDataColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: allDataColumns;let i = index\"></tr>\n      </table>\n\n      <mat-paginator [pageSizeOptions]=\"[25, 50, 100, 200, 500]\"></mat-paginator>\n\n\n\n    <span class=\"button_action\">\n      <button mat-flat-button routerLink=\"/tech/patient-management/bulk-upload\">upload bulk report</button>\n    </span>\n  </mat-card-content>\n\n</mat-card>\n<app-admin-footer></app-admin-footer>\n","<span *ngIf=\"!loader\" class=\"modalmainwrapper\">\n\n    <mat-card-subtitle class=\"main_title\">Doctors You are Working With</mat-card-subtitle>\n\n    <!-- <mat-accordion>\n      <mat-expansion-panel *ngFor=\"let doc of allDoctorData\">\n        <mat-expansion-panel-header>\n          <mat-panel-title>\n            {{doc.fullName}}\n          </mat-panel-title>\n        </mat-expansion-panel-header>\n        Email:{{doc.email}}<br>\n        Phone:{{doc.phone}}<br>\n        Fax:{{doc.fax}}<br>\n        Taxonomies:{{doc.taxo_list}}\n      </mat-expansion-panel>\n    </mat-accordion> -->\n\n\n\n\n<mat-card-content class=\"allDocGrid\">\n  <mat-card-content class=\"allItem\" *ngFor=\"let doc of allDoctorData\">\n    <h3 class=\"header\"> {{doc.fullName}}</h3>\n    <p class=\"otherDetails\"> <label> Email: </label>{{doc.email}}</p>\n    <p class=\"otherDetails\"> <label> Phone: </label>{{doc.phone}}</p>\n    <p class=\"otherDetails\"> <label> Fax: </label>{{doc.fax}}</p>\n    <p class=\"otherDetails\"> <label> NPI: </label>{{doc.npm}}</p>\n    <p class=\"otherDetails\"> <label> Taxonomies: </label>{{doc.taxo_list}}</p>\n\n    <span class=\"items_counter\">**</span>\n  </mat-card-content>\n</mat-card-content>\n<mat-toolbar class=\"button_w\">\n<button mat-button class=\"modalclosebtn\" (click)=\"onNoClick()\">close</button>\n</mat-toolbar>\n</span>\n\n<div *ngIf=\"loader\" style=\"display: flex; justify-content: center; align-items: center; height: 100%;\">\n  <div>Please wait....</div>\n</div>\n","import { Component, OnInit ,ViewChild,Inject } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpServiceService } from '../../../services/http-service.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CommonFunction } from '../../../class/common/common-function';\nimport { MatTableDataSource, MatSort } from '@angular/material';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatDialog, MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { DialogBoxComponent } from '../../common/dialog-box/dialog-box.component';\n\n\nexport interface PeriodicElement {\n  no: number;\n  patientName: string;\n  doctorName: string;\n  record_type: string;\n  date_added: string;\n  status: string;\n}\nexport interface AllDataElement {\n  no: number;\n  patientName: string;\n  doctorName: string;\n  record: string;\n  billSentDate: string;\n  created_at: string;\n  status: string;\n}\n\nexport interface DialogData {\n}\n\n@Component({\n  selector: 'app-tech-dashboard',\n  templateUrl: './tech-dashboard.component.html',\n  styleUrls: ['./tech-dashboard.component.css']\n})\n\nexport class TechDashboardComponent implements OnInit {\n  public commonArray: PeriodicElement[] = [];\n  displayedColumns: string[] = ['no', 'patientName', 'record_type', 'doctorName', 'techName','date_added', 'status'];\n  allDataColumns: string[] = ['no','patientName', 'doctorName', 'techName','billerName','recordType','billGenerationData', 'billsendDate','status'];\n\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  @ViewChild(MatPaginator, { static: false }) paginatorAll: MatPaginator;\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n  @ViewChild(MatSort, { static: false }) sortAll: MatSort;\n\n  dataSource: MatTableDataSource<PeriodicElement>;\n  allDataSource: MatTableDataSource<AllDataElement>;\n\n  public allResolveData: any;\n  public htmlText: any = {\n    headerText: \"Patient Report Record\"\n  }\n  public authData: any = {};\n  public dialogRef: any;\n\n  constructor(public cookie: CookieService, public http: HttpClient,\n    public httpService: HttpServiceService, public activatedRoute: ActivatedRoute, \n    public commonFunction: CommonFunction,public dialog: MatDialog) {\n\n    let allData: any = cookie.getAll();\n    this.authData[\"userData\"] = JSON.parse(allData.user_details);\n    this.authData[\"jwtToken\"] = cookie.get('jwtToken');\n\n    this.activatedRoute.data.forEach((data) => {\n      this.allResolveData = data.techDashboardData.data;\n      console.log(\">>>>>>>>>>>\", this.allResolveData);\n      this.allResolveData[\"totalRemainToProcessCount\"] = this.allResolveData.totalReportCount - this.allResolveData.processedReportCount;\n      let allDashboardData : AllDataElement[] = this.allResolveData.totalReportData;\n      this.allDataSource = new MatTableDataSource(allDashboardData);\n    });\n  }\n\n  ngOnInit() {\n    this.allDataSource.paginator = this.paginatorAll;\n  }\n\n  ngAfterViewInit() {\n    this.allDataSource.paginator = this.paginatorAll;\n  }\n\n  filterByName(key: string, value: string) {\n    let searchJson: any = {};\n    searchJson[key] = value.toLowerCase();\n    searchJson[\"tech_id_object\"] = this.authData.userData._id;\n    var data = {\n      \"source\": \"Patient-Record-Report_view\",\n      \"condition\": searchJson,\n      \"token\": this.authData.jwtToken\n    }\n    this.httpService.httpViaPost('datalist', data).subscribe((response) => {\n        let allDashboardData : AllDataElement[] = response.res;;\n        this.allDataSource = new MatTableDataSource(allDashboardData);\n        this.allDataSource.paginator = this.paginatorAll;\n        this.allDataSource.sort = this.sortAll;\n      });\n  }\n\n  filerByReports(key: string, value: any) {\n    let searchJson: any = {};\n    searchJson[key] = value.toLowerCase();\n    var data = {\n      \"source\": \"Patient-Record-Report_view\",\n      \"condition\": searchJson,\n      \"token\": this.authData.jwtToken\n    }\n    this.httpService.httpViaPost('datalist', data).subscribe((response) => {\n      let allDashboardData : AllDataElement[] = response.res;;\n      this.allDataSource = new MatTableDataSource(allDashboardData);\n      this.allDataSource.paginator = this.paginatorAll;\n      this.allDataSource.sort = this.sortAll;\n    });\n  }\n\n  viewDetailsData(flag: any) {\n     /* Open modal */\n     let modalData: any = {\n      panelClass: 'bulkupload-dialog',\n      data: {\n        header: \"Message\",\n        message: \"No Records Found\",\n        button1: { text: \"\" },\n        button2: { text: \"Ok\" },\n      }\n    }\n  \n    switch (flag) {\n      case 'upload':\n        if(this.allResolveData.totalReportCount > 0) {\n          this.htmlText.headerText = \"Reports Uploaded\";\n          let allDashboardData : AllDataElement[] = this.allResolveData.totalReportData;\n          this.allDataSource = new MatTableDataSource(allDashboardData);\n          this.allDataSource.paginator = this.paginator;\n          this.allDataSource.sort = this.sortAll;\n        } else {\n           this.openDialog(modalData);        \n        }\n        break;\n      case 'processed':\n        if(this.allResolveData.processedReportCount > 0){\n          this.htmlText.headerText = \"Reports Processed\";\n          let condition = {\n            \"source\": \"Patient-Record-Report_view\",\n            \"condition\": {\n              \"tech_id_object\": this.authData.userData._id,\n              \"page_1\": { $exists:true },\n              \"page_2\": { $exists:true },\n              \"page_3\": { $exists:true },\n              \"page_4\": { $exists:true },\n              \"page_5\": { $exists:true },\n              \"page_6\": { $exists:true },\n              \"page_7\": { $exists:true },\n            },\n            \"token\": this.authData.jwtToken\n          }\n          this.httpService.httpViaPost('datalist', condition).subscribe((response) => {\n            let allDashboardData : AllDataElement[] = response.res;\n            this.allDataSource = new MatTableDataSource(allDashboardData);\n            this.allDataSource.paginator = this.paginator;\n            this.allDataSource.sort = this.sortAll;\n          });\n        } else {\n          this.openDialog(modalData); \n        }\n        break;\n      case 'remainProcess':\n        if(parseInt(this.allResolveData.totalRemainToProcessCount) > 0) {\n          let condition = {\n            \"source\": \"Patient-Record-Report_view\",\n            \"condition\": {\n              \"tech_id_object\": this.authData.userData._id,\n              $or: [\n                  {\"page_1\": { $exists:false }},\n                  {\"page_2\": { $exists:false }},\n                  {\"page_3\": { $exists:false }},\n                  {\"page_4\": { $exists:false }},\n                  {\"page_5\": { $exists:false }},\n                  {\"page_6\": { $exists:false }},\n                  {\"page_7\": { $exists:false }}\n                ]\n            },\n            \"token\": this.authData.jwtToken\n          }\n          this.httpService.httpViaPost('datalist', condition).subscribe((response) => {\n            let allDashboardData : AllDataElement[] = response.res;\n            this.allDataSource = new MatTableDataSource(allDashboardData);\n            this.allDataSource.paginator = this.paginator;\n            this.allDataSource.sort = this.sortAll;\n          });\n        } else {\n          this.openDialog(modalData); \n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n\n  openDialog(data) {\n    this.dialogRef = this.dialog.open(DialogBoxComponent, data);\n    this.dialogRef.afterClosed().subscribe(result => {\n      switch (result) {\n        case \"Ok\":\n            this.dialogRef.close();\n          break;\n      }\n    });\n  }\n\n  /**All doctor deatls view in modal */\n  allDoctorViewModal() {\n    const dialogGenreRef = this.dialog.open(DoctorViewDialogComponent, {\n      panelClass: ['modal-sm', 'infomodal'],\n      disableClose: true,\n    });\n\n    dialogGenreRef.afterClosed().subscribe(result => {\n      console.log('Modal Close');\n    });\n  }\n\n}\n\n\n// Doctor View dialog component\n@Component({\n  selector: 'doctor-dialog',\n  templateUrl: 'doctorview.component.html',\n  styleUrls: ['./tech-dashboard.component.css']\n})\nexport class DoctorViewDialogComponent {\n  public user_token: any;\n  public allDoctorData:any;\n  public user_data:any;\n  public allData: any = {};\n  public userToken:any;\n  public loader: boolean = true;\n\n  constructor(public dialogRef: MatDialogRef<DoctorViewDialogComponent>,@Inject(MAT_DIALOG_DATA) public data: DialogData,\n  public cookie: CookieService, public http: HttpClient,\n    public httpService: HttpServiceService,) {\n\n\n      this.allData = cookie.getAll()\n      this.user_data = JSON.parse(this.allData.user_details);\n      this.user_token = cookie.get('jwtToken');\n      var dta:any = {\n        \"source\": \"users_view_doctor\",\n        \"condition\": {\n          tech_id_object: this.user_data._id\n        },\n        \"token\": this.user_token\n      }\n      this.httpService.httpViaPost('datalist', dta)\n        .subscribe((response:any) => {\n          \n          let result: any = {};\n          result = response.res;\n          if (response.resc > 0) {\n            this.loader = false;\n            this.allDoctorData=response.res;\n            \n          }\n\n        })\n    }\n\n  public onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","<mat-toolbar class=\"techdashboard_header\" [ngClass]=\"{'sticky' : isSticky}\">\n  <mat-card-content class=\"header_wrapper\">\n    <span class=\"logo_wrapper\" [routerLink]=\"[ '/tech/dashboard' ]\">\n      <img src=\"../../../assets/images/logo.png\">\n    </span>\n\n\n    <button mat-flat-button (click)=\"menuFunction()\" class=\"togle_menu\"><i class=\"material-icons\"> menu </i></button>\n    <mat-card-content class=\"quotation\" [ngClass]=\"status ? 'success' : 'danger'\">\n      <mat-nav-list>\n        <a mat-list-item routerLinkActive=\"active\" [routerLink]=\"['/tech/dashboard']\"> Dashboard </a>\n        <a mat-list-item routerLinkActive=\"active\" [matMenuTriggerFor]=\"calendarMenu\"> Manage Calendar </a>\n      </mat-nav-list>\n\n      <mat-menu #calendarMenu=\"matMenu\" class=\"sub_menu\">\n        <button mat-menu-item [routerLink]=\"['/tech/dashboard/manage-calender/manage-sehedule']\">Manage Schedule\n        </button>\n        <button mat-menu-item [routerLink]=\"['/tech/dashboard/manage-calender/my-appoinments']\">My Appointments</button>\n      </mat-menu>\n    </mat-card-content>\n\n    <mat-card-content class=\"profile_section\">\n      <mat-menu #appMenu=\"matMenu\">\n        <button mat-menu-item [routerLink]=\"['/tech/account-settings']\">\n          <mat-icon>account_circle</mat-icon> Account Settings\n        </button>\n        <button mat-menu-item [routerLink]=\"['/tech/account-settings/change-password']\">\n          <mat-icon>vpn_key</mat-icon> Change Password\n        </button>\n        <button mat-menu-item (click)=\"logout()\">\n          <mat-icon>power_settings_new</mat-icon> Logout\n        </button>\n      </mat-menu>\n      <span class=\"username\">{{user_data.firstname}} {{user_data.lastname}}</span>\n      <button mat-icon-button [matMenuTriggerFor]=\"appMenu\">\n        <span class=\"user_profile\">\n          <mat-icon>account_circle</mat-icon>\n          <i class=\"material-icons\">\n            keyboard_arrow_down\n          </i>\n        </span>\n      </button>\n\n    </mat-card-content>\n  </mat-card-content>\n</mat-toolbar>\n<!-- end header -->\n\n","import { Component, OnInit } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\n\n@Component({\n  selector: 'app-tech-header',\n  templateUrl: './tech-header.component.html',\n  styleUrls: ['./tech-header.component.css']\n})\n\nexport class TechHeaderComponent implements OnInit {\n\n  public user_data: any = {};\n\n  public loader: boolean = true;\n  public user_cookie:any;\n  isSticky: boolean = false;\n  status: boolean = true;\n\n  constructor(public cookies: CookieService, public router: Router) {\n    let allData: any = {};\n    allData = cookies.getAll()\n    this.user_data = JSON.parse(allData.user_details);\n   \n    this.user_cookie = cookies.get('jwtToken');\n   }\n\n  ngOnInit() {\n  }\n  \n  /**logout function start here**/\n  logout() {\n    this.cookies.delete('jwtToken');\n    this.cookies.delete('user_details');\n    this.cookies.deleteAll();\n    this.router.navigateByUrl('logout');\n  }\n  /**logout function end here**/\n\n  menuFunction(){\n    this.status = !this.status;\n\n  }\n\n}\n\n","<mat-card-content class=\"admin_table\">\n\n    <mat-toolbar class=\"top_header\">\n        <h2> Patient Record Report </h2>\n    </mat-toolbar>\n\n    <table mat-table [dataSource]=\"allDataSource\" matSort class=\"mat-elevation-z8\">\n        <ng-container matColumnDef=\"no\">\n            <th mat-header-cell *matHeaderCellDef> No. </th>\n            <td mat-cell *matCellDef=\"let element; let i = index;\"> {{ i + 1 }} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"patientName\">\n            <th mat-header-cell *matHeaderCellDef> Patient Name. </th>\n            <td mat-cell *matCellDef=\"let element\" data-label=\"Patient Name\"> {{ element.patientName }} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"doctorName\">\n            <th mat-header-cell *matHeaderCellDef> Doctor Name</th>\n            <td mat-cell *matCellDef=\"let element\" data-label=\"Doctor Name\"> {{ element.doctorName }} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"billerName\">\n            <th mat-header-cell *matHeaderCellDef> Biller Name</th>\n            <td mat-cell *matCellDef=\"let element\" data-label=\"Biller Name\"> {{ element.billerName }} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"record\">\n            <th mat-header-cell *matHeaderCellDef> Record</th>\n            <td mat-cell *matCellDef=\"let element\" data-label=\"Record\"> {{ element.record }} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"billGenerationDate\">\n            <th mat-header-cell *matHeaderCellDef> Bill Generation Date</th>\n            <td mat-cell *matCellDef=\"let element\" data-label=\"Bill Generation Date\"> {{ element.billGenerationDate }}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"techName\">\n            <th mat-header-cell *matHeaderCellDef> Tech Name</th>\n            <td mat-cell *matCellDef=\"let element\" data-label=\"Tech Name\"> {{ element.techName }} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"billSentDate\">\n            <th mat-header-cell *matHeaderCellDef> Bill SentDate</th>\n            <td mat-cell *matCellDef=\"let element\" data-label=\"Bill Sent Date\"> {{ element.billSentDate }} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"superBill\">\n            <th mat-header-cell *matHeaderCellDef> Super Bill</th>\n            <td mat-cell *matCellDef=\"let element\" data-label=\"Super Bill\"> {{ element.superBill }} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"date\">\n            <th mat-header-cell *matHeaderCellDef> Date</th>\n            <td mat-cell *matCellDef=\"let element\" data-label=\"Date\"> {{ element.date }} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"status\">\n            <th mat-header-cell *matHeaderCellDef> Status</th>\n            <td mat-cell *matCellDef=\"let element\" data-label=\"Status\"> {{ element.status }} </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"allDataColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: allDataColumns;let i = index\"></tr>\n    </table>\n\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n</mat-card-content>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<mat-form-field>\n    <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\n</mat-form-field>\n\n<div class=\"mat-elevation-z8\">\n    <table mat-table [dataSource]=\"dataSource\" matSort>\n\n        <!-- ID Column -->\n        <ng-container matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\n            <td mat-cell *matCellDef=\"let row\"> {{row.id}} </td>\n        </ng-container>\n\n        <!-- Progress Column -->\n        <ng-container matColumnDef=\"progress\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Progress </th>\n            <td mat-cell *matCellDef=\"let row\"> {{row.progress}}% </td>\n        </ng-container>\n\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n            <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\n        </ng-container>\n\n        <!-- Color Column -->\n        <ng-container matColumnDef=\"color\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Color </th>\n            <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.color\"> {{row.color}} </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">\n        </tr>\n    </table>\n\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n</div>\n\n\n\n\n\n\n\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { HttpServiceService } from '../../services/http-service.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { CommonFunction } from '../../class/common/common-function';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\n\nexport interface UserData {\n  id: string;\n  name: string;\n  progress: string;\n  color: string;\n}\n\nexport interface AllDataElement {\n  no: number;\n  patientName: string;\n  doctorName: string;\n  billerName: string;\n  record: string;\n  billGenerationDate: string;\n  techName: string;\n  billSentDate: string;\n  superBill: string;\n  date: string;\n  status: string;\n}\n\n/** Constants used to fill up our data base. */\nconst COLORS: string[] = [\n  'maroon', 'red', 'orange', 'yellow', 'olive', 'green', 'purple', 'fuchsia', 'lime', 'teal',\n  'aqua', 'blue', 'navy', 'black', 'gray'\n];\nconst NAMES: string[] = [\n  'Maia', 'Asher', 'Olivia', 'Atticus', 'Amelia', 'Jack', 'Charlotte', 'Theodore', 'Isla', 'Oliver',\n  'Isabella', 'Jasper', 'Cora', 'Levi', 'Violet', 'Arthur', 'Mia', 'Thomas', 'Elizabeth'\n];\n\n/**\n * @title Data table with sorting, pagination, and filtering.\n */\n\n@Component({\n  selector: 'app-test',\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.css']\n})\n\nexport class TestComponent implements OnInit {\n\n  public allDataColumns: string[] = ['no', 'billGenerationDate', 'techName', 'billSentDate', 'billerName', 'doctorName', 'record', 'superBill', 'date', 'patientName', 'status'];\n  allDataSource: MatTableDataSource<AllDataElement>;\n  \n  displayedColumns: string[] = ['id', 'name', 'progress', 'color'];\n  dataSource: MatTableDataSource<UserData>;\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  @ViewChild(MatPaginator, { static: true }) paginatorAll: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sortALl: MatSort;\n\n  constructor(private router: Router, public cookieService: CookieService, private http: HttpServiceService, public activatedRoute: ActivatedRoute, public commonFunction: CommonFunction) {\n    this.activatedRoute.data.subscribe(resolveData => {\n      const allData: AllDataElement[] = resolveData.dataCount.res;\n      this.allDataSource = new MatTableDataSource(allData);\n    });\n    // Create 100 users\n    const users = Array.from({ length: 100 }, (_, k) => createNewUser(k + 1));\n\n    // Assign the data to the data source for the table to render\n    this.dataSource = new MatTableDataSource(users);\n  }\n\n  ngOnInit() {\n    this.allDataSource.paginator = this.paginatorAll;\n    this.allDataSource.sort = this.sortALl;\n\n\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n}\n\n/** Builds and returns a new User. */\nfunction createNewUser(id: number): UserData {\n  const name = NAMES[Math.round(Math.random() * (NAMES.length - 1))] + ' ' +\n    NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) + '.';\n\n  return {\n    id: id.toString(),\n    name: name,\n    progress: Math.round(Math.random() * 100).toString(),\n    color: COLORS[Math.round(Math.random() * (COLORS.length - 1))]\n  };\n\n}","\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MetaGuard } from '@ngx-meta/core';\nimport { AuthguardService } from '../services/authguard.service';\nimport { from } from 'rxjs';\n/* Resolve Service */\nimport { ResolveService } from '../services/resolve.service';\n\n/* Auth Component */\nimport { LoginComponent } from '../components/auth/login/login.component';\nimport { ForgetpasswordComponent } from '../components/auth/forgetpassword/forgetpassword.component';\nimport { ResetpasswordComponent } from '../components/auth/resetpassword/resetpassword.component';\nimport { LogoutComponent } from '../components/auth/logout/logout.component';\n/****************** Admin *****************/\nimport { ReportNotProcessComponent } from '../components/admin/report-not-process/report-not-process.component';\nimport { AdminDashboardComponent } from '../components/admin/admin-dashboard/admin-dashboard.component';\nimport { EditPatientRecordComponent } from '../components/admin/admin-dashboard/edit-patient-record/edit-patient-record.component';\n/* User Mnagement */\nimport { UserAddEditComponent } from '../components/admin/user-management/user-add-edit/user-add-edit.component'\nimport { AddEditComponent } from '../components/admin/admin-management/add-edit/add-edit.component';\nimport { ManageAdminListComponent } from '../components/admin/admin-management/manage-admin-list/manage-admin-list.component';\nimport { AddeditDoctorComponent } from '../components/admin/doctor-management/addedit-doctor/addedit-doctor.component';\nimport { ListDoctorComponent } from '../components/admin/doctor-management/list-doctor/list-doctor.component';\n\n/* Biller Management */\nimport { AddEditBillerComponent } from '../components/admin/biller-management/add-edit-biller/add-edit-biller.component';\nimport { ListingBillerComponent } from '../components/admin/biller-management/listing-biller/listing-biller.component';\n\n/* Tech Management */\nimport { AddEditTechComponent } from '../components/admin/tech-management/add-edit-tech/add-edit-tech.component';\nimport { ListingTechComponent } from '../components/admin/tech-management/listing-tech/listing-tech.component';\n/**Doctor Office Mnagement**/\nimport { DoctorOfficeManagementComponent } from '../components/admin/doctor-office-management/doctor-office-management.component';\nimport { AddEditDoctorOfcComponent } from '../components/admin/doctor-office-management/add-edit-doctor-ofc/add-edit-doctor-ofc.component';\n/**Booked-Appoiments**/\nimport { BookedAppoinmentsComponent } from '../components/admin/booked-appoinments/booked-appoinments.component';\n/* Account Settings */\nimport { AccountSettingsComponent } from '../components/common/account-settings/account-settings.component';\nimport { ChangePasswordComponent } from '../components/common/account-settings/change-password/change-password.component';\n\n/***************** Tech Dashboard ****************/\nimport { TechDashboardComponent } from '../components/tech/tech-dashboard/tech-dashboard.component';\nimport { ManageScheduleComponent } from '../components/tech/tech-dashboard/manage-calender/manage-schedule/manage-schedule.component';\nimport { ListComponent } from '../components/tech/tech-dashboard/manage-calender/my-appointments/list/list.component';\n\n/* Patient Management */\nimport { AddEditPatientComponent } from '../components/admin/admin-dashboard/add-edit-patient/add-edit-patient.component';\n\n/* Bulk Upload**/\nimport { BulkUploadComponent } from '../components/tech/patient-management/bulk-upload/bulk-upload.component';\n\nimport { BillerDashboardComponent } from '../components/biller/biller-dashboard/biller-dashboard.component';\n/**Doctor Dashboard **/\nimport { DoctorDashboardComponent } from '../components/doctor/doctor-dashboard/doctor-dashboard.component';\nimport { PatientReportViewComponent } from '../components/doctor/doctor-dashboard/patient-report-view/patient-report-view.component';\nimport { ReportDetailsComponent } from '../components/tech/report-details/report-details.component';\n\n/***************** Doctor Office Dashboard ****************/\nimport { DoctorOfficeDashboardComponent } from '../components/doctor-office/doctor-office-dashboard/doctor-office-dashboard.component';\n\n/* Error Pages */\nimport { NotFoundErrorComponent } from '../components/common/not-found-error/not-found-error.component';\n\n/* Test Component */\nimport { TestComponent } from '../components/test/test.component';\nimport { HealthriskSystemEncounterComponent } from '../components/doctor/doctor-dashboard/patient-report-view/healthrisk-system-encounter/healthrisk-system-encounter.component';\nimport { SystemSuperbillComponent } from '../components/doctor/doctor-dashboard/patient-report-view/system-superbill/system-superbill.component';\nimport { HealthRiskAnalysisComponent } from '../components/doctor/doctor-dashboard/patient-report-view/health-risk-analysis/health-risk-analysis.component';\nimport { SignatureManagementComponent } from '../components/doctor/signature-management/signature-management.component';\nimport { DoctorOfficeAccountSettingsComponent } from '../components/doctor-office/doctor-office-account-settings/doctor-office-account-settings.component';\nimport { DoctorOfficeChangePasswordComponent } from '../components/doctor-office/doctor-office-change-password/doctor-office-change-password.component';\nimport { DownloadSuperbillerComponent } from '../components/biller/download-superbiller/download-superbiller.component';\n\n\nconst routes: Routes = [\n  /********** Auth Route **********/\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent, canActivate: [AuthguardService] },\n  { path: 'forget-password', component: ForgetpasswordComponent, canActivate: [AuthguardService] },\n  { path: 'reset-password/:token', component: ResetpasswordComponent },\n  { path: 'sign-up', redirectTo: '/login', pathMatch: 'full' },\n  { path: 'logout', component: LogoutComponent },\n\n  /****************** Admin *****************/\n  {\n    path: 'admin/dashboard', component: AdminDashboardComponent, canActivate: [AuthguardService],\n    resolve: { dataCount: ResolveService },\n    data: {\n      requestcondition: {\n        source: '',\n        condition: {}\n      },\n      endpoint: 'admin-dashboard'\n    },\n  },\n  {\n    path: 'admin/image-not-process', component: ReportNotProcessComponent, canActivate: [AuthguardService],\n    resolve: { data: ResolveService },\n    data: {\n      requestcondition: {\n        source: 'patient_management',\n        condition: {\n          \"report_type\": \"file\",\n          \"images\": { $exists:false }\n        }\n      },\n      endpoint: 'datalist'\n    },\n  },\n  {\n    path: 'admin/text-not-process', component: ReportNotProcessComponent, canActivate: [AuthguardService],\n    resolve: { data: ResolveService },\n    data: {\n      requestcondition: {\n        source: 'patient_management',\n        condition: {\n          \"report_type\": \"file\",\n          \"images\": { $exists:true },\n          $or: [\n            {\"page_1\": { $exists:false }},\n            {\"page_2\": { $exists:false }},\n            {\"page_3\": { $exists:false }},\n            {\"page_4\": { $exists:false }},\n            {\"page_5\": { $exists:false }},\n            {\"page_6\": { $exists:false }},\n            {\"page_7\": { $exists:false }}\n          ]\n        }\n      },\n      endpoint: 'datalist'\n    },\n  },\n  {\n    path: 'admin/patient-record/:_id', component: PatientReportViewComponent,\n    canActivate: [AuthguardService],\n    resolve: { data: ResolveService },\n    data: {\n      requestcondition: {\n        source: 'patient_management_view',\n        condition: {}\n      },\n      endpoint: 'datalist'\n    },\n  },\n  { path: 'admin/patient-management/add', component: AddEditPatientComponent, canActivate: [AuthguardService] },\n  {\n    path: 'admin/patient-record/edit/:_id', component: EditPatientRecordComponent, canActivate: [AuthguardService],\n    resolve: { patientData: ResolveService },\n    data: {\n      requestcondition: {\n        source: 'patient_management',\n        condition: {}\n      },\n      endpoint: 'datalist'\n    },\n  },\n\n  /* Account-Settings */\n  { path: 'admin/account-settings', component: AccountSettingsComponent, canActivate: [AuthguardService] },\n  { path: 'admin/account-settings/change-password', component: ChangePasswordComponent, canActivate: [AuthguardService] },\n  /* User Management */\n  { path: 'admin/user-management/add', component: UserAddEditComponent, canActivate: [AuthguardService] },\n  {\n    path: 'admin/user-management/edit/:_id', component: UserAddEditComponent, canActivate: [AuthguardService], resolve: { UserData: ResolveService },\n    data: {\n      requestcondition: {\n        source: 'user_management',\n        condition: {}\n      },\n      endpoint: 'datalist'\n    },\n  },\n  /* Admin Management */\n  { path: 'admin/admin-management/add', component: AddEditComponent, canActivate: [AuthguardService] },\n  {\n    path: 'admin/admin-management/edit/:_id', component: AddEditComponent, canActivate: [AuthguardService], resolve: { adminsingleData: ResolveService },\n    data: {\n      requestcondition: {\n        source: 'users',\n        condition: {}\n      },\n      endpoint: 'datalist'\n    },\n  },\n  {\n    path: 'admin/admin-management', component: ManageAdminListComponent, canActivate: [AuthguardService], resolve: { adminManagementdData: ResolveService },\n    data: {\n      requestcondition: {\n        source: 'users_view_admin',\n        condition: { 'type': 'admin' }\n      },\n      endpoint: 'datalist'\n    },\n  },\n  /* Biller Management */\n  { path: 'admin/biller-management/add', component: AddEditBillerComponent, canActivate: [AuthguardService] },\n  {\n    path: 'admin/biller-management/edit/:_id', component: AddEditBillerComponent, canActivate: [AuthguardService], resolve: { billersingleData: ResolveService },\n    data: {\n      requestcondition: {\n        source: 'users',\n        condition: {}\n      },\n      endpoint: 'datalist'\n    },\n  },\n  {\n    path: 'admin/biller-management', component: ListingBillerComponent, canActivate: [AuthguardService], resolve: { Billerdata: ResolveService },\n    data: {\n      requestcondition: {\n        source: 'users_view_biller',\n        condition: {}\n      },\n      endpoint: 'datalist'\n    },\n  },\n  /* Tech Management */\n  { path: 'admin/tech-management/add', component: AddEditTechComponent, canActivate: [AuthguardService] },\n  {\n    path: 'admin/tech-management/edit/:_id', component: AddEditTechComponent, canActivate: [AuthguardService], resolve: { techData: ResolveService },\n    data: {\n      requestcondition: {\n        source: 'users',\n        condition: {}\n      },\n      endpoint: 'datalist'\n    },\n  },\n  {\n    path: 'admin/tech-management', component: ListingTechComponent, canActivate: [AuthguardService], resolve: { techDashboardData: ResolveService },\n    data: {\n      requestcondition: {\n        source: 'users_view_tech',\n        condition: {}\n      },\n      endpoint: 'datalist'\n    },\n  },\n  /* Doctor Management */\n  { path: 'admin/doctor-management/add', component: AddeditDoctorComponent },\n  {\n    path: 'admin/doctor-management/edit/:_id', component: AddeditDoctorComponent, canActivate: [AuthguardService],\n    resolve: { data: ResolveService },\n    data: {\n      requestcondition: {\n        source: 'users',\n        condition: {}\n      },\n      endpoint: 'datalist'\n    },\n  },\n  {\n    path: 'admin/doctor-management', component: ListDoctorComponent, canActivate: [AuthguardService],\n    resolve: { data: ResolveService },\n    data: {\n      requestcondition: {\n        source: 'users_view_doctor_list',\n        condition: {}\n      },\n      endpoint: 'datalist'\n    },\n  },\n  /* Doctor Office Management */\n  {\n    path: 'admin/doctor-office-management', component: DoctorOfficeManagementComponent, canActivate: [AuthguardService],\n    resolve: { data: ResolveService },\n    data: {\n      requestcondition: {\n        source: 'users',\n        condition: { \"type\": \"doctor_office\" }\n      },\n      endpoint: 'datalist'\n    },\n  },\n  { path: 'admin/doctor-office-management/add', component: AddEditDoctorOfcComponent, canActivate: [AuthguardService] },\n  {\n    path: 'admin/doctor-office-management/edit/:_id', component: AddEditDoctorOfcComponent, canActivate: [AuthguardService],\n    resolve: { data: ResolveService },\n    data: {\n      requestcondition: {\n        source: 'users',\n        condition: {}\n      },\n      endpoint: 'datalist'\n    },\n  },\n  /* Docotr Management Account settings*/\n  {\n    path: 'doctor-office/account-settings', component: DoctorOfficeAccountSettingsComponent, canActivate: [AuthguardService],\n    resolve: { data: ResolveService },\n    data: {\n      requestcondition: {\n        source: 'users',\n        condition: {}\n      },\n      endpoint: 'datalist'\n    },\n  },\n  { path: 'doctor-office/account-settings/change-password', component: DoctorOfficeChangePasswordComponent },\n\n\n\n  /****************** Tech Route End *****************/\n  /**Booked-appoinments**/\n  {\n    path: 'admin/booked-appoinments', component: BookedAppoinmentsComponent\n  },\n\n  /****************** Tech Route Start *****************/\n  {\n    path: 'tech/dashboard', component: TechDashboardComponent, canActivate: [AuthguardService],\n    resolve: { techDashboardData: ResolveService },\n    data: {\n      requestcondition: {\n        source: '',\n        condition: {},\n      },\n      endpoint: 'tech-dashboard'\n    },\n  },\n  { path: 'tech/report/total-uploaded', component: ReportDetailsComponent, canActivate: [AuthguardService], },\n  { path: 'tech/report/total-processed', component: ReportDetailsComponent, canActivate: [AuthguardService], },\n  { path: 'tech/report/total-remained-processed', component: ReportDetailsComponent, canActivate: [AuthguardService], },\n  { path: 'tech/dashboard/manage-calender/manage-sehedule', component: ManageScheduleComponent, canActivate: [AuthguardService] },\n  { path: 'tech/dashboard/manage-calender/my-appoinments', component: ListComponent, canActivate: [AuthguardService] },\n\n  /* Account-Settings */\n  { path: 'tech/account-settings', component: AccountSettingsComponent, canActivate: [AuthguardService] },\n  { path: 'tech/account-settings/change-password', component: ChangePasswordComponent, canActivate: [AuthguardService] },\n\n\n  /* Bulk Upload */\n  { path: 'tech/patient-management/bulk-upload', component: BulkUploadComponent, canActivate: [AuthguardService] },\n\n  { path: 'tech/health-risk-system-encounter', component: HealthriskSystemEncounterComponent, canActivate: [AuthguardService] },\n  { path: 'tech/system-superbill', component: SystemSuperbillComponent, canActivate: [AuthguardService] },\n  { path: 'tech/health-risk-analysis', component: HealthRiskAnalysisComponent, canActivate: [AuthguardService] },\n  /****************** Tech Route End *****************/\n\n  /* Biller Route */\n  // { path: 'biller/dashboard', component: BillerDashboardComponent, canActivate: [AuthguardService] },\n  {\n    path: 'biller/dashboard', component: BillerDashboardComponent, canActivate: [AuthguardService],\n    resolve: { billerData: ResolveService },\n    data: {\n      requestcondition: {\n        source: 'Patient-Record-Report_view',\n        condition: {},\n      },\n      endpoint: 'biller-dashboard'\n    },\n  },\n  /* Account-Settings */\n  { path: 'biller/account-settings', component: AccountSettingsComponent, canActivate: [AuthguardService] },\n  { path: 'biller/account-settings/change-password', component: ChangePasswordComponent, canActivate: [AuthguardService] },\n  {\n    path: 'download/super-bill/:_id', component: DownloadSuperbillerComponent,\n    // resolve: { data: ResolveService },\n    // data: {\n    //   requestcondition: {\n    //     source: 'patient_management',\n    //     condition: {}\n    //   },\n    //   endpoint: 'datalistwithouttoken'\n    // },\n  },\n\n  /* Doctor Route */\n  {\n    path: 'doctor/dashboard', component: DoctorDashboardComponent, canActivate: [AuthguardService],\n    resolve: { doctordata: ResolveService },\n    data: {\n      requestcondition: {\n        source: 'Patient-Record-Report_view',\n        condition: {},\n      },\n      endpoint: 'doctor-dashboard'\n    },\n  },\n\n  {\n    path: 'doctor/patient-record-report/:_id', component: PatientReportViewComponent,\n    canActivate: [AuthguardService],\n    resolve: { data: ResolveService },\n    data: {\n      requestcondition: {\n        source: 'patient_management_condition_view',\n        condition: {}\n      },\n      endpoint: 'datalist'\n    },\n  },\n\n  { path: 'doctor/signature-management', component: SignatureManagementComponent, canActivate: [AuthguardService] },\n\n  /* Account-Settings */\n  { path: 'doctor/account-settings', component: AccountSettingsComponent, canActivate: [AuthguardService] },\n  { path: 'doctor/account-settings/change-password', component: ChangePasswordComponent, canActivate: [AuthguardService] },\n  /****************** Doctor Route End *****************/\n\n  /****************** Doctor Office Route Start *****************/\n  /*Doctor Office Dashboard*/\n  {\n    path: 'doctor-office/dashboard', component: DoctorOfficeDashboardComponent, canActivate: [AuthguardService],\n    resolve: { data: ResolveService },\n    data: {\n      requestcondition: {\n        source: 'users_view_doctoroffice',\n        condition: {}\n      },\n      endpoint: 'datalist'\n    },\n  },\n  /* Account-Settings */\n  { path: 'doctor-office/account-settings', component: AccountSettingsComponent, canActivate: [AuthguardService] },\n  { path: 'doctor-office/account-settings/change-password', component: ChangePasswordComponent, canActivate: [AuthguardService] },\n  /****************** Doctor Office Route End *****************/\n\n  /* test component route start here */\n  {\n    path: 'test', component: TestComponent,\n    resolve: { dataCount: ResolveService },\n    data: {\n      requestcondition: {\n        source: 'Patient-Record-Report_view',\n        condition: {}\n      },\n      endpoint: 'datalist'\n    },\n  },\n\n  { path: 'tech/health-risk-system-encounter', component: HealthriskSystemEncounterComponent },\n  { path: 'tech/system-superbill', component: SystemSuperbillComponent },\n\n  {\n    path: 'tech/health-risk-analysis',\n    component: HealthRiskAnalysisComponent,\n    resolve: { data: ResolveService },\n    data: {\n      requestcondition: {\n        source: 'patient_management_view',\n        condition: {}\n      },\n      endpoint: 'datalist'\n    },\n  },\n\n  /* Error Page Route */\n  { path: 'error/404', component: NotFoundErrorComponent },\n  { path: '**', component: NotFoundErrorComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [ResolveService]\n})\n\nexport class AppRoutingModule {\n\n\n\n  constructor() { }\n\n}\n","import {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\n\n@NgModule({\n  exports: [\n    A11yModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n  ]\n})\nexport class DemoMaterialModule {}\n\n\n/**  Copyright 2019 Google Inc. All Rights Reserved.\n    Use of this source code is governed by an MIT-style license that\n    can be found in the LICENSE file at http://angular.io/license */\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, Route } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthguardService implements CanActivate {\n\n  constructor(public cookie: CookieService, private _router: Router) {\n  }\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n\n    var getToken = this.cookie.get('jwtToken');\n    if (getToken) {\n      var allData: any = this.cookie.getAll();\n      var userData: any = JSON.parse(allData.user_details);\n      \n      /* Login User */\n      switch(next.url[0].path) {\n        case 'login':\n        case 'forget-password':\n          this._router.navigate([userData.type.replace(\"_\", \"-\") + '/dashboard']);\n          break;\n        default:\n          if(userData.type == 'doctor_office' && next.url[0].path == 'doctor-office') {\n            return true;\n          } else {\n            if(next.url[0].path == userData.type) {\n              return true;\n            } else {\n              this._router.navigate([userData.type.replace(\"_\", \"-\") + '/dashboard']);\n            }\n          }\n          break;\n      }\n    } else {\n      /* Login User */\n      switch(next.url[0].path) {\n        case 'login':\n        case 'forget-password':\n          return true;\n          break;\n        default:\n          this._router.navigate(['/login']);\n          break;\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n \n@Injectable({\n  providedIn: 'root'\n})\n\nexport class HttpLoaderService {\n\n  public isLoading = new BehaviorSubject(false);\n  \n  constructor() { }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError, tap } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class HttpServiceService {\n  \n  public baseUrl: any = environment.apiBaseUrl;\n  public jwtToken: any = \"\";\n\n  constructor(private http: HttpClient, public CookieService: CookieService) {\n    this.jwtToken = this.CookieService.get('jwtToken');\n  }\n\n  /* read site setting data */\n  public getSiteSettingData(url): Observable<any> {\n    return this.http.get(url);\n  }\n\n  /* call api via post method */\n  httpViaPost(endpoint, jsonData): Observable<any> {\n    /* set common header */\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.jwtToken\n      })\n    };\n    return this.http.post(this.baseUrl + endpoint, jsonData);\n  }\n\n  /* call api via get method */\n  httpViaGet(endpoint, jsonData): Observable<any> {\n    /* set common header */\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.jwtToken\n      })\n    };\n    return this.http.get(this.baseUrl + endpoint, jsonData);\n  }\n\n  /* Resolve service */\n  ResolveViaPost(requestdata: any, endpoint: any): Observable<any> {\n    /* set common header */\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.jwtToken\n      })\n    };\n\n    return this.http.post(this.baseUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n  }\n\n  checkingDuplicateEmail(requestdata: any): Observable<any> {\n    let data: any = { \"email\": requestdata, \"source\": \"users\" };\n    /* set common header */\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.CookieService.get('jwtToken')\n      })\n    };\n\n    return this.http.post(this.baseUrl + 'duplicate-email-checking', JSON.stringify(data), httpOptions).pipe(map(res => res));\n  }\n\n  /* call api via get method */\n  httpViaGetExt(url, jsonData): Observable<any> {\n    /* set common header */\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.jwtToken\n      })\n    };\n    return this.http.get(url, jsonData);\n  }\n\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { Router, Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport { HttpServiceService } from './http-service.service';\n\nexport interface EndpointComponent {\n    endpoint: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ResolveService implements Resolve<any> {\n\n  constructor(public cookies: CookieService, private _apiService: HttpServiceService, private router: Router) { }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any {\n    \n    /* will come into play while editing otherwise no effect */\n    var requestData: any = route.data.requestcondition;\n\n    /* Condition for all dashboard */\n    var allData: any = this.cookies.getAll();\n    var userData = JSON.parse(allData.user_details);\n    \n    /* This one is for Tech Dashboard Start */\n    if(route.url[0].path == 'admin') {\n      switch(route.url[1].path) {\n        case 'dashboard':\n          requestData.condition['admin_id'] = userData._id;\n          break;\n      }\n    }\n    /* This one is for Tech Dashboard End */\n    \n    /* This one is for Tech Dashboard Start */\n    if(route.url[0].path == 'tech') {\n      switch(route.url[1].path) {\n        case 'dashboard':\n          requestData.condition['tech_id'] = userData._id;\n          break;\n      }\n    }\n    /* This one is for Tech Dashboard End */\n\n    /* This one is for Doctor Dashboard Start */\n    if(route.url[0].path == 'doctor') {\n      switch(route.url[1].path) {\n        case 'dashboard':\n          requestData.condition['doctor_id'] = userData._id;\n          break;\n      }\n    }\n    /* This one is for Doctor Dashboard End */\n\n    /* This one is for Biller Dashboard Start */\n    if(route.url[0].path == 'biller') {\n      switch(route.url[1].path) {\n        case 'dashboard':\n          requestData.condition['biller_id'] = userData._id;\n          break;\n      }\n    }\n    /* This one is for Biller Dashboard End */\n    /////////////////////////////////////////////////////////////////////\n\n    /* If send any query params */\n    requestData.condition = Object.assign(requestData.condition, route.params);\n\n    return new Promise((resolve) => {\n      if(typeof route.data.requestcondition.source != 'string') {\n        var returnData: any = {};\n\n        for(let i = 0; i <= route.data.requestcondition.source.length - 1; i++) {\n          let data: any = {\n            source: route.data.requestcondition.source[i],\n            condition: {}\n          };\n\n          this._apiService.ResolveViaPost(data, route.data.endpoint).subscribe(api_object => {\n            if (api_object) {\n              returnData[route.data.requestcondition.source[i]] = api_object;\n              return resolve(returnData);\n            } else { // id not found\n              return true;\n            }\n          });\n        }\n      } else {\n        this._apiService.ResolveViaPost(route.data.requestcondition, route.data.endpoint).subscribe(api_object => {\n          if (api_object) {\n            return resolve(api_object);\n          } else { // id not found\n            return true;\n          }\n        });\n      }\n    });\n  }\n}\n","export const environment = {\n  siteBaseUrl: \"https://www.testbedpece.influxiq.com/\",\n  s3bucket: \"https://s3.us-east-2.amazonaws.com/crmfiles.influxhostserver/\",\n  apiBaseUrl: \"https://5hyccia9v2.execute-api.us-east-1.amazonaws.com/dev/api/\",\n  pagination: [20, 50, 100, 200, 500],\n  logo: \"https://5hyccia9v2.execute-api.us-east-1.amazonaws.com/dev/api/\",\n  siteTitle: \"AWS Backend\",\n  footerText: \"AWS Copyright 2020\",\n  production: true\n};\n","import { enableProdMode } from '@angular/core';\n\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nexport { AppServerModule } from './app/app.server.module';\n","module.exports = require(\"@angular/animations\");","module.exports = require(\"@angular/animations/browser\");","module.exports = require(\"@angular/cdk/a11y\");","module.exports = require(\"@angular/cdk/accordion\");","module.exports = require(\"@angular/cdk/bidi\");","module.exports = require(\"@angular/cdk/drag-drop\");","module.exports = require(\"@angular/cdk/keycodes\");","module.exports = require(\"@angular/cdk/layout\");","module.exports = require(\"@angular/cdk/observers\");","module.exports = require(\"@angular/cdk/overlay\");","module.exports = require(\"@angular/cdk/platform\");","module.exports = require(\"@angular/cdk/portal\");","module.exports = require(\"@angular/cdk/scrolling\");","module.exports = require(\"@angular/cdk/stepper\");","module.exports = require(\"@angular/cdk/table\");","module.exports = require(\"@angular/cdk/text-field\");","module.exports = require(\"@angular/cdk/tree\");","module.exports = require(\"@angular/common\");","module.exports = require(\"@angular/common/http\");","module.exports = require(\"@angular/core\");","module.exports = require(\"@angular/forms\");","module.exports = require(\"@angular/material\");","module.exports = require(\"@angular/material-moment-adapter\");","module.exports = require(\"@angular/material/autocomplete\");","module.exports = require(\"@angular/material/badge\");","module.exports = require(\"@angular/material/bottom-sheet\");","module.exports = require(\"@angular/material/button\");","module.exports = require(\"@angular/material/button-toggle\");","module.exports = require(\"@angular/material/card\");","module.exports = require(\"@angular/material/checkbox\");","module.exports = require(\"@angular/material/chips\");","module.exports = require(\"@angular/material/core\");","module.exports = require(\"@angular/material/datepicker\");","module.exports = require(\"@angular/material/dialog\");","module.exports = require(\"@angular/material/divider\");","module.exports = require(\"@angular/material/expansion\");","module.exports = require(\"@angular/material/form-field\");","module.exports = require(\"@angular/material/grid-list\");","module.exports = require(\"@angular/material/icon\");","module.exports = require(\"@angular/material/input\");","module.exports = require(\"@angular/material/list\");","module.exports = require(\"@angular/material/menu\");","module.exports = require(\"@angular/material/paginator\");","module.exports = require(\"@angular/material/progress-bar\");","module.exports = require(\"@angular/material/progress-spinner\");","module.exports = require(\"@angular/material/radio\");","module.exports = require(\"@angular/material/select\");","module.exports = require(\"@angular/material/sidenav\");","module.exports = require(\"@angular/material/slide-toggle\");","module.exports = require(\"@angular/material/slider\");","module.exports = require(\"@angular/material/snack-bar\");","module.exports = require(\"@angular/material/sort\");","module.exports = require(\"@angular/material/stepper\");","module.exports = require(\"@angular/material/table\");","module.exports = require(\"@angular/material/tabs\");","module.exports = require(\"@angular/material/toolbar\");","module.exports = require(\"@angular/material/tooltip\");","module.exports = require(\"@angular/material/tree\");","module.exports = require(\"@angular/platform-browser\");","module.exports = require(\"@angular/platform-browser/animations\");","module.exports = require(\"@angular/platform-server\");","module.exports = require(\"@angular/router\");","module.exports = require(\"@ng-toolkit/universal\");","module.exports = require(\"@nguniversal/common\");","module.exports = require(\"@nguniversal/module-map-ngfactory-loader\");","module.exports = require(\"@ngx-meta/core\");","module.exports = require(\"file-upload-lib-influxiq\");","module.exports = require(\"listing-angular7\");","module.exports = require(\"login-lib-influxiq\");","module.exports = require(\"moment\");","module.exports = require(\"ngx-cookie-service\");","module.exports = require(\"ngx-device-detector\");","module.exports = require(\"ngx-moment\");","module.exports = require(\"rxjs\");","module.exports = require(\"rxjs/operators\");"],"sourceRoot":"webpack:///"}